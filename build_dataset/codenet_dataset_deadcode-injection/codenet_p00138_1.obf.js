var a0_0x446deb = a0_0x476f;
var input = require('fs')['readFileSync'](a0_0x446deb(0x0), 'utf8');
function a0_0x476f(QgTPIj, key) {
    var stringArray = a0_0x1f48();
    a0_0x476f = function (index, key) {
        index = index - 0x0;
        var value = stringArray[index];
        return value;
    };
    return a0_0x476f(QgTPIj, key);
}
var Arr = input[a0_0x446deb(0x1)]()['split']('\x0a');
var abc = [
    [],
    [],
    []
];
var obj = {};
for (var i = 0x0; i < Arr['length']; i++) {
    var arr = Arr[i][a0_0x446deb(0x2)]('\x20')[a0_0x446deb(0x3)](Number);
    abc[Math['floor'](i / 0x8)]['push'](arr[0x1]);
    obj[arr[0x1]] = arr[0x0];
}
for (var i = 0x0; i < 0x3; i++)
    abc[i][a0_0x446deb(0x4)](function (a, b) {
        return a - b;
    });
console[a0_0x446deb(0x5)](obj[abc[0x0][0x0]] + '\x20' + abc[0x0][0x0][a0_0x446deb(0x6)](0x2));
console['log'](obj[abc[0x0][0x1]] + '\x20' + abc[0x0][0x1][a0_0x446deb(0x6)](0x2));
function a0_0x1f48() {
    var _0x10ce9e = [
        '/dev/stdin',
        'trim',
        'split',
        'map',
        'sort',
        'log',
        'toFixed'
    ];
    a0_0x1f48 = function () {
        return _0x10ce9e;
    };
    return a0_0x1f48();
}
console[a0_0x446deb(0x5)](obj[abc[0x1][0x0]] + '\x20' + abc[0x1][0x0][a0_0x446deb(0x6)](0x2));
console[a0_0x446deb(0x5)](obj[abc[0x1][0x1]] + '\x20' + abc[0x1][0x1][a0_0x446deb(0x6)](0x2));
console[a0_0x446deb(0x5)](obj[abc[0x2][0x0]] + '\x20' + abc[0x2][0x0]['toFixed'](0x2));
console[a0_0x446deb(0x5)](obj[abc[0x2][0x1]] + '\x20' + abc[0x2][0x1][a0_0x446deb(0x6)](0x2));
var d = [];
for (var i = 0x0; i < 0x3; i++)
    d['push'](abc[i][0x2]);
d[a0_0x446deb(0x4)](function (a, b) {
    return a - b;
});
console[a0_0x446deb(0x5)](obj[d[0x0]] + '\x20' + d[0x0][a0_0x446deb(0x6)](0x2));
console[a0_0x446deb(0x5)](obj[d[0x1]] + '\x20' + d[0x1][a0_0x446deb(0x6)](0x2));