{"filename": "p02288_1", "type": "JavaScript", "obfuscated": "function a0_0x1e18() {\n    const _0x464411 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'floor',\n        'length'\n    ];\n    a0_0x1e18 = function () {\n        return _0x464411;\n    };\n    return a0_0x1e18();\n}\nfunction a0_0x5f38(QoZePW, key) {\n    const stringArray = a0_0x1e18();\n    a0_0x5f38 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f38(QoZePW, key);\n}\n(function main() {\n    const _0x546d42 = a0_0x5f38;\n    const lines = require('fs')['readFileSync'](_0x546d42(0x0), _0x546d42(0x1))[_0x546d42(0x2)]()[_0x546d42(0x3)]('\\x0a');\n    lines['shift']();\n    const arr = lines['shift']()['split']('\\x20')[_0x546d42(0x4)](Number);\n    buildMaxHeap(arr);\n    console['log'](arr['reduce']((s, e) => s += '\\x20' + e, ''));\n}());\nfunction buildMaxHeap(arr) {\n    const _0x1adc52 = a0_0x5f38;\n    const n = arr['length'];\n    const maxHeapify = i => {\n        let left, right, largest;\n        left = 0x2 * i + 0x1;\n        right = 0x2 * i + 0x2;\n        largest = left < n && arr[left] > arr[i] ? left : i;\n        if (right < n && arr[right] > arr[largest])\n            largest = right;\n        if (largest != i) {\n            arr[largest] = [\n                arr[i],\n                arr[i] = arr[largest]\n            ][0x0];\n            maxHeapify(largest);\n        }\n    };\n    for (let i = Math[_0x1adc52(0x5)](arr[_0x1adc52(0x6)] / 0x2); i >= 0x0; i--)\n        maxHeapify(i);\n}", "test_cases": [["10\n4 1 3 2 16 9 10 14 8 7", "16 14 10 8 7 9 3 2 4 1"]], "original": "(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  lines.shift();\n  const arr = lines.shift().split(' ').map(Number);\n  buildMaxHeap(arr);\n  console.log(arr.reduce((s, e) => s += ` ${e}`, ''));\n})();\n\nfunction buildMaxHeap(arr) {\n  const n = arr.length;\n  const maxHeapify = (i) => {\n    let left, right, largest;\n    left = 2 * i + 1;\n    right = 2 * i + 2;\n    largest = left < n && arr[left] > arr[i] ? left : i;\n    if (right < n && arr[right] > arr[largest]) largest = right;\n    if (largest != i) {\n      arr[largest] = [arr[i], arr[i] = arr[largest]][0];\n      maxHeapify(largest);\n    }\n  };\n\n  for (let i = Math.floor(arr.length / 2); i >= 0; i--) maxHeapify(i);\n}\n\n", "language": "JavaScript"}
{"filename": "p02772_1", "type": "JavaScript", "obfuscated": "const a0_0x61431b = a0_0x2c31;\nfunction a0_0x3c57() {\n    const _0x29208c = [\n        'split',\n        'shift',\n        'map',\n        'length',\n        'aKOnl',\n        'FmgWx',\n        'rbriN',\n        'GDwoD',\n        'XZNgr',\n        'log',\n        'DENIED',\n        'APPROVED',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3c57 = function () {\n        return _0x29208c;\n    };\n    return a0_0x3c57();\n}\nfunction Main(input) {\n    const _0x55d706 = a0_0x2c31;\n    input = input[_0x55d706(0x0)]('\\x0a');\n    const N = input[_0x55d706(0x1)]();\n    const A = input[_0x55d706(0x2)](v => parseInt(v));\n    f = ![];\n    for (i = 0x0; i < A[_0x55d706(0x3)]; i++) {\n        if (_0x55d706(0x4) !== _0x55d706(0x5)) {\n            if (A[i] % 0x2 == 0x0) {\n                if (_0x55d706(0x6) === _0x55d706(0x7)) {\n                    f = !![];\n                } else {\n                    if (A[i] % 0x3 != 0x0 && A[i] % 0x5 != 0x0) {\n                        if (_0x55d706(0x8) !== _0x55d706(0x8)) {\n                            if (A[i] % 0x2 == 0x0) {\n                                if (A[i] % 0x3 != 0x0 && A[i] % 0x5 != 0x0) {\n                                    f = !![];\n                                }\n                            }\n                        } else {\n                            f = !![];\n                        }\n                    }\n                }\n            }\n        } else {\n            console[_0x55d706(0x9)]('APPROVED');\n        }\n    }\n    if (f) {\n        console['log'](_0x55d706(0xa));\n    } else {\n        console[_0x55d706(0x9)](_0x55d706(0xb));\n    }\n}\nfunction a0_0x2c31(WrlmCj, key) {\n    const stringArray = a0_0x3c57();\n    a0_0x2c31 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c31(WrlmCj, key);\n}\nMain(require('fs')[a0_0x61431b(0xc)](a0_0x61431b(0xd), a0_0x61431b(0xe)));", "test_cases": [["5\n6 7 9 10 31", "APPROVED"], ["3\n28 27 24", "DENIED"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  const N = input.shift();\n  const A = input.map(v => parseInt(v));\n  f = false;\n  for (i = 0; i < A.length; i++) {\n    if (A[i] % 2 == 0) {\n      if (A[i] % 3 != 0 && A[i] % 5 != 0) {\n        f = true;\n      }\n    }\n  }\n  if (f) {\n    console.log(\"DENIED\");\n  } else {\n    console.log(\"APPROVED\");\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02622_1", "type": "JavaScript", "obfuscated": "var a0_0x1f58c4 = a0_0x484d;\nfunction a0_0x484d(ayqIur, key) {\n    var stringArray = a0_0xdbf9();\n    a0_0x484d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x484d(ayqIur, key);\n}\nfunction Main(input) {\n    var _0x4873d6 = a0_0x484d;\n    input = input['split']('\\x0a');\n    t = input[0x0][_0x4873d6(0x0)]('');\n    s = input[0x1][_0x4873d6(0x0)]('');\n    var result = 0x0;\n    for (var i = 0x0; i < s[_0x4873d6(0x1)]; i++) {\n        if (s[i] != t[i]) {\n            result = result + 0x1;\n        } else {\n        }\n    }\n    console[_0x4873d6(0x2)](result);\n}\nfunction a0_0xdbf9() {\n    var _0x4c9021 = [\n        'split',\n        'length',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0xdbf9 = function () {\n        return _0x4c9021;\n    };\n    return a0_0xdbf9();\n}\nMain(require('fs')['readFileSync'](a0_0x1f58c4(0x3), 'utf8'));", "test_cases": [["cupofcoffee\ncupofhottea", "4"], ["abcde\nbcdea", "5"], ["apple\napple", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tt = input[0].split(\"\");\n\ts = input[1].split(\"\");\n\t\n\tvar result = 0\n\tfor (var i = 0; i < s.length; i++) {\n\tif  (s[i] != t[i]) {\n\tresult = result + 1;\n\t} else {\n\t}\n\t}\n\t\n\tconsole.log(result);\n\t}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02755_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2fbc59 = a0_0x51e4;\nfunction a0_0x51e4(BkFgMD, key) {\n    const stringArray = a0_0x85a4();\n    a0_0x51e4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x51e4(BkFgMD, key);\n}\nfunction a0_0x85a4() {\n    const _0x14b55c = [\n        'trim',\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x85a4 = function () {\n        return _0x14b55c;\n    };\n    return a0_0x85a4();\n}\nconst main = arg => {\n    const _0x16dc3d = a0_0x51e4;\n    arg = arg[_0x16dc3d(0x0)]()[_0x16dc3d(0x1)]('\\x0a');\n    const A = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    const B = parseInt(arg[0x0][_0x16dc3d(0x1)]('\\x20')[0x1]);\n    for (let i = 0x1; i <= 0x2710; i++) {\n        const temp1 = Math['floor'](i * 0.08);\n        const temp2 = Math[_0x16dc3d(0x2)](i * 0.1);\n        if (temp1 === A && temp2 === B) {\n            console[_0x16dc3d(0x3)](i);\n            return;\n        }\n    }\n    console['log'](-0x1);\n};\nmain(require('fs')[a0_0x2fbc59(0x4)]('/dev/stdin', a0_0x2fbc59(0x5)));", "test_cases": [["2 2", "25"], ["8 10", "100"], ["19 99", "-1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const A = parseInt(arg[0].split(\" \")[0]);\n    const B = parseInt(arg[0].split(\" \")[1]);\n    \n    // X * 0.08 = A;\n    // X * 0.1  = B;\n    \n    // const X = A / 0.08;\n    \n    // if(X % 1 !== 0) {\n    //     console.log(-1);\n    //     return;\n    // }\n    \n    // const temp1 = Math.floor(X * 0.08);\n    // const temp2 = Math.floor(X * 0.1);\n    \n    // console.log(temp2)\n    \n    // if(temp1 === A && temp2 === B) {\n    //     console.log(X);\n    //     return;\n    // }\n    \n    // console.log(-1);\n\n    for(let i=1; i<=10000; i++) {\n        const temp1 = Math.floor(i * 0.08);\n        const temp2 = Math.floor(i * 0.1);\n        \n        if(temp1 === A && temp2 === B) {\n            console.log(i);\n            return;\n        }\n    }\n    \n    console.log(-1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02888_1", "type": "JavaScript", "obfuscated": "var a0_0x3a4924 = a0_0x1f94;\nfunction a0_0x1f94(ybEdhz, key) {\n    var stringArray = a0_0x1181();\n    a0_0x1f94 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f94(ybEdhz, key);\n}\nfunction Main(input) {\n    var _0x4681f3 = a0_0x1f94;\n    input = input[_0x4681f3(0x0)]('\\x0a');\n    var N = input[0x0];\n    var L = input[0x1][_0x4681f3(0x0)]('\\x20')[_0x4681f3(0x1)](Number);\n    var sum = 0x0;\n    L[_0x4681f3(0x2)](function (a, b) {\n        return b - a;\n    });\n    for (var i = 0x0; i < N - 0x1; i++) {\n        for (var j = i + 0x1; j < N; j++) {\n            var tag = L[i] - L[j];\n            var arr = L[_0x4681f3(0x3)](0x0, L[_0x4681f3(0x4)]);\n            arr[_0x4681f3(0x5)](0x0, j + 0x1);\n            arr[_0x4681f3(0x6)]();\n            sum += arr[_0x4681f3(0x4)] - caninsert(arr, tag);\n        }\n    }\n    console[_0x4681f3(0x7)](sum);\n}\nfunction a0_0x1181() {\n    var _0x1a956b = [\n        'split',\n        'map',\n        'sort',\n        'slice',\n        'length',\n        'splice',\n        'reverse',\n        'log',\n        '/dev/stdin',\n        'utf8',\n        'floor',\n        'SPrdx',\n        'fVScU'\n    ];\n    a0_0x1181 = function () {\n        return _0x1a956b;\n    };\n    return a0_0x1181();\n}\nMain(require('fs')['readFileSync'](a0_0x3a4924(0x8), a0_0x3a4924(0x9)));\nfunction caninsert(array, value) {\n    var _0x262f4d = a0_0x1f94;\n    value += 0.1;\n    var lower = 0x0;\n    var upper = array[_0x262f4d(0x4)];\n    while (lower < upper) {\n        var mid = Math[_0x262f4d(0xa)](lower + (upper - lower) / 0x2);\n        if (array[mid] <= value) {\n            if (_0x262f4d(0xb) === _0x262f4d(0xc)) {\n                input = input['split']('\\x0a');\n                var N = input[0x0];\n                var L = input[0x1][_0x262f4d(0x0)]('\\x20')[_0x262f4d(0x1)](Number);\n                var sum = 0x0;\n                L[_0x262f4d(0x2)](function (a, b) {\n                    return b - a;\n                });\n                for (var i = 0x0; i < N - 0x1; i++) {\n                    for (var j = i + 0x1; j < N; j++) {\n                        var tag = L[i] - L[j];\n                        var arr = L[_0x262f4d(0x3)](0x0, L[_0x262f4d(0x4)]);\n                        arr[_0x262f4d(0x5)](0x0, j + 0x1);\n                        arr[_0x262f4d(0x6)]();\n                        sum += arr[_0x262f4d(0x4)] - caninsert(arr, tag);\n                    }\n                }\n                console['log'](sum);\n            } else {\n                lower = mid + 0x1;\n            }\n        } else {\n            upper = mid;\n        }\n    }\n    return lower;\n}\n;", "test_cases": [["4\n3 4 2 1", "1"], ["3\n1 1000 1", "0"], ["7\n218 786 704 233 645 728 389", "23"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = input[0];\n  var L = input[1].split(\" \").map(Number);\n  var sum = 0;\n  L.sort(function(a,b){return b-a;});\n  for(var i=0;i<N-1;i++){\n    for(var j=i+1;j<N;j++){\n      var tag = L[i]-L[j];\n      var arr = L.slice(0,L.length);\n      arr.splice(0,j+1);\n      arr.reverse();\n      sum += arr.length-caninsert(arr,tag);\n    //  console.log(tag,caninsert(arr,tag),arr)\n    }\n  }\n  console.log(sum);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n//以下写経。C++なら関数が用意されてるし多少はね…？\nfunction caninsert(array, value){\n  value += 0.1\n    var lower = 0;\n    var upper = array.length;\n\n    while ( lower < upper ) {\n\n        var mid = Math.floor(lower + (upper - lower) / 2);\n\n        if ( array[mid] <= value ) {\n            lower = mid + 1;\n        } else {\n            upper = mid;\n        }\n\n    }\n    return lower;\n\n};", "language": "JavaScript"}
{"filename": "p02917_1", "type": "JavaScript", "obfuscated": "var a0_0x3b0c88 = a0_0x3e72;\nprocess[a0_0x3b0c88(0x0)][a0_0x3b0c88(0x1)]();\nprocess[a0_0x3b0c88(0x0)][a0_0x3b0c88(0x2)](a0_0x3b0c88(0x3));\nfunction a0_0x438e() {\n    var _0x36adee = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'readline',\n        'createInterface',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'map',\n        'min',\n        'length'\n    ];\n    a0_0x438e = function () {\n        return _0x36adee;\n    };\n    return a0_0x438e();\n}\nvar lines = [];\nvar reader = require(a0_0x3b0c88(0x4))[a0_0x3b0c88(0x5)]({\n    'input': process[a0_0x3b0c88(0x0)],\n    'output': process[a0_0x3b0c88(0x6)]\n});\nfunction a0_0x3e72(dOVkeQ, key) {\n    var stringArray = a0_0x438e();\n    a0_0x3e72 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e72(dOVkeQ, key);\n}\nreader['on'](a0_0x3b0c88(0x7), line => {\n    var _0x44ee88 = a0_0x3e72;\n    lines[_0x44ee88(0x8)](line);\n});\nreader['on'](a0_0x3b0c88(0x9), () => {\n    var _0x944eb5 = a0_0x3e72;\n    const list = lines[0x1][_0x944eb5(0xa)]('\\x20')[_0x944eb5(0xb)](v => v - 0x0);\n    let ans = 0x0;\n    for (let i = 0x0; i < list['length'] - 0x1; i++) {\n        ans += Math[_0x944eb5(0xc)](list[i], list[i + 0x1]);\n    }\n    ans += list[list[_0x944eb5(0xd)] - 0x1] + list[0x0];\n    console['log'](ans);\n});", "test_cases": [["3\n2 5", "9"], ["2\n3", "6"], ["6\n0 153 10 10 23", "53"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const list = lines[1].split(\" \").map(v=>v-0);\n    let ans = 0;\n    for(let i=0;i<list.length-1;i++){\n        ans+=Math.min(list[i],list[i+1])\n    }\n    ans += list[list.length-1] + list[0];\n    console.log(ans);\n});\n", "language": "JavaScript"}
{"filename": "p02405_1", "type": "JavaScript", "obfuscated": "function a0_0x4d91(UnGZiH, key) {\n    var stringArray = a0_0xf5b0();\n    a0_0x4d91 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4d91(UnGZiH, key);\n}\nfunction a0_0xf5b0() {\n    var _0x4ba129 = [\n        'toString',\n        'length',\n        'push',\n        '/dev/stdin',\n        'ascii',\n        '0\\x200',\n        'split',\n        'slice',\n        'log'\n    ];\n    a0_0xf5b0 = function () {\n        return _0x4ba129;\n    };\n    return a0_0xf5b0();\n}\n(function () {\n    var _0x2e40ec = a0_0x4d91;\n    var max, max_log2, series, col, j, str, i, line, hw, even, odd;\n    max = 0x12c;\n    max_log2 = max[_0x2e40ec(0x0)](0x2)[_0x2e40ec(0x1)] - 0x1;\n    series = [\n        0x1,\n        0x2\n    ];\n    col = [\n        '#',\n        '#.'\n    ];\n    j = 0x2;\n    str = '#.';\n    for (i = 0x2; i <= max_log2; i++) {\n        series[_0x2e40ec(0x2)](j *= 0x2);\n        col[_0x2e40ec(0x2)](str = str + str);\n    }\n    series[_0x2e40ec(0x2)](series[series[_0x2e40ec(0x1)] - 0x1] * 0x2);\n    function get_column(w) {\n        var i, res;\n        res = '';\n        for (i = 0x1; i < series['length']; i++) {\n            if (w < series[i])\n                break;\n            if (w % series[i + 0x1] >= series[i])\n                res = res + col[i];\n        }\n        if (w % 0x2 === 0x1)\n            res = res + '#';\n        return res;\n    }\n    line = require('fs')['readFileSync'](_0x2e40ec(0x3), _0x2e40ec(0x4))['split']('\\x0a');\n    for (i in line) {\n        if (line[i] === _0x2e40ec(0x5))\n            break;\n        hw = line[i][_0x2e40ec(0x6)]('\\x20')['map'](Number);\n        even = get_column(hw[0x1]);\n        odd = even[_0x2e40ec(0x7)](0x1) + (hw[0x1] % 0x2 === 0x0 ? '#' : '.');\n        for (j = 0x0; j < hw[0x0]; j++) {\n            if (j % 0x2 === 0x0)\n                console[_0x2e40ec(0x8)](even);\n            else\n                console[_0x2e40ec(0x8)](odd);\n        }\n        console['log']('');\n    }\n}());", "test_cases": [["3 4\n5 6\n3 3\n2 2\n1 1\n0 0", "#.#.\n.#.#\n#.#.\n\n#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#\n#.#.#.\n\n#.#\n.#.\n#.#\n\n#.\n.#\n\n#"]], "original": "(function () {\n\tvar max, max_log2, series, col, j, str, i, line, hw, even, odd;\n\t\n\tmax = 300;\n\tmax_log2 = max.toString(2).length - 1;\n\n\tseries = [1, 2];\n\tcol = ['#', '#.'];\n\tj = 2;\n\tstr = '#.';\n\tfor (i = 2; i <= max_log2; i++) {\n\t\tseries.push(j *= 2);\n\t\tcol.push(str = str + str);\n\t}\n\tseries.push(series[series.length-1] * 2);\n\n\tfunction get_column(w) {\n\t\tvar i, res;\n\t\tres = \"\";\n\t\tfor (i = 1; i < series.length; i++) {\n\t\t\tif (w < series[i]) break;\n\t\t\tif (w % series[i+1] >= series[i])\n\t\t\t\tres = res + col[i];\n\t\t}\n\t\tif (w % 2 === 1) res = res + '#';\n\t\treturn res;\n\t}\n\n\tline = require('fs').readFileSync('/dev/stdin', 'ascii').split('\\n');\n\tfor (i in line) {\n\t\tif (line[i] === '0 0') break;\n\t\thw = line[i].split(' ').map(Number);\n\t\teven = get_column(hw[1]);\n\t\todd = even.slice(1) + ((hw[1] % 2 === 0) ? '#' : '.');\n\t\tfor (j = 0; j < hw[0]; j++) {\n\t\t\tif (j % 2 === 0) console.log(even);\n\t\t\telse console.log(odd);\n\t\t}\n\t\tconsole.log(\"\");\n\t}\n}) ();", "language": "JavaScript"}
{"filename": "p02607_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x67b14c = a0_0x1e28;\nfunction main(arg) {\n    const _0x5b07db = a0_0x1e28;\n    let a = arg[_0x5b07db(0x0)]()['split']('\\x0a')[0x1][_0x5b07db(0x1)]('\\x20')[_0x5b07db(0x2)](Number);\n    let N = a[_0x5b07db(0x3)];\n    let ans = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        if ((i + 0x1) % 0x2 === 0x0) {\n            continue;\n        }\n        if (a[i] % 0x2 === 0x0) {\n            continue;\n        }\n        ans++;\n    }\n    console[_0x5b07db(0x4)](ans);\n}\nfunction a0_0x1e28(hksbCU, key) {\n    const stringArray = a0_0x2ba9();\n    a0_0x1e28 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e28(hksbCU, key);\n}\nfunction a0_0x2ba9() {\n    const _0x38f532 = [\n        'trim',\n        'split',\n        'map',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2ba9 = function () {\n        return _0x38f532;\n    };\n    return a0_0x2ba9();\n}\nmain(require('fs')['readFileSync'](a0_0x67b14c(0x5), a0_0x67b14c(0x6)));", "test_cases": [["5\n1 3 4 5 7", "2"], ["15\n13 76 46 15 50 98 93 77 31 43 84 90 6 24 14", "3"]], "original": "\"use strict\"\nfunction main(arg) {\n    let a = arg.trim().split(\"\\n\")[1].split(\" \").map(Number)\n    let N = a.length\n    let ans = 0\n    for (let i = 0; i < N; i++) {\n        if ((i+1) % 2 === 0) {\n            continue\n        }\n        if (a[i] % 2 === 0) {\n            continue\n        }\n        ans++\n        // console.log(i)\n    }\n    console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02683_1", "type": "JavaScript", "obfuscated": "function a0_0x1a57(GMwzQN, key) {\n    const stringArray = a0_0x25f9();\n    a0_0x1a57 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a57(GMwzQN, key);\n}\nfunction a0_0x25f9() {\n    const _0x488876 = [\n        'split',\n        'keys',\n        'length',\n        'splice',\n        'map',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x25f9 = function () {\n        return _0x488876;\n    };\n    return a0_0x25f9();\n}\nconst a0_0x23f6f5 = a0_0x1a57;\nfunction main(input) {\n    const _0x258ac7 = a0_0x1a57;\n    const lines = input['trim']()[_0x258ac7(0x0)]('\\x0a');\n    const [N, M, X] = splitN(lines[0x0]);\n    const costs = [];\n    const options = [...Array(N)[_0x258ac7(0x1)]()];\n    select(options);\n    function select(options, cost = 0x0, aList = []) {\n        const _0x26dfde = a0_0x1a57;\n        for (let i = 0x0; i < options[_0x26dfde(0x2)]; i++) {\n            const _options = [...options], [s] = _options[_0x26dfde(0x3)](i, 0x1), [c, ...a] = splitN(lines[s + 0x1]), _cost = cost + c, _aList = a[_0x26dfde(0x4)]((v, i) => v + (aList[i] || 0x0));\n            if (_aList['every'](v => v >= X)) {\n                costs['push'](_cost);\n                continue;\n            }\n            select(_options, _cost, _aList);\n        }\n    }\n    console[_0x258ac7(0x5)](costs[_0x258ac7(0x2)] ? Math['min'](...costs) : -0x1);\n}\nmain(require('fs')[a0_0x23f6f5(0x6)]('/dev/stdin', a0_0x23f6f5(0x7)));\nfunction splitN(s) {\n    const _0x86ad13 = a0_0x1a57;\n    return s[_0x86ad13(0x0)]('\\x20')['map'](Number);\n}", "test_cases": [["3 3 10\n60 2 2 4\n70 8 7 9\n50 2 3 9", "120"], ["3 3 10\n100 3 1 4\n100 1 5 9\n100 2 6 5", "-1"], ["8 5 22\n100 3 7 5 3 1\n164 4 5 2 7 8\n334 7 2 7 2 9\n234 4 7 2 8 2\n541 5 4 3 3 6\n235 4 8 6 9 7\n394 3 6 1 6 2\n872 8 4 3 7 2", "1067"]], "original": "function main(input) {\n  const lines = input.trim().split(\"\\n\");\n  const [N, M, X] = splitN(lines[0]);\n\n  const costs = [];\n  const options = [...Array(N).keys()];\n  select(options);\n\n  function select(options, cost = 0, aList = []) {\n    for (let i = 0; i < options.length; i++) {\n      const\n        _options = [...options],\n        [s] = _options.splice(i, 1),\n        [c, ...a] = splitN(lines[s+1]),\n        _cost = cost + c,\n        _aList = a.map((v, i) => v + (aList[i] || 0));\n      \n      if (_aList.every(v => v >= X)) {\n        costs.push(_cost);\n        continue;\n      }\n      select(_options, _cost, _aList);\n    }\n  }\n\n  console.log(costs.length ? Math.min(...costs) : -1);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n\nfunction splitN(s) {\n  return s.split(' ').map(Number);\n}", "language": "JavaScript"}
{"filename": "p02691_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x4a7c() {\n    const _0x5c30a9 = [\n        'readFileSync',\n        'split',\n        'shift',\n        'forEach',\n        'keys'\n    ];\n    a0_0x4a7c = function () {\n        return _0x5c30a9;\n    };\n    return a0_0x4a7c();\n}\nconst a0_0x70ed23 = a0_0x3944;\nvar input = require('fs')[a0_0x70ed23(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x3944(UzaPbN, key) {\n    const stringArray = a0_0x4a7c();\n    a0_0x3944 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3944(UzaPbN, key);\n}\nvar cin = input[a0_0x70ed23(0x1)](/ |\\n/), cid = 0x0;\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction main() {\n    const _0x107d41 = a0_0x3944;\n    let n = +cin[_0x107d41(0x2)]();\n    let B = {};\n    let C = {};\n    cin[_0x107d41(0x3)]((v, i) => {\n        let x = +v;\n        B[String(i + x)] = B[String(i + x)] + 0x1 || 0x1;\n        C[String(i - x)] = C[String(i - x)] + 0x1 || 0x1;\n    });\n    let keys = Object[_0x107d41(0x4)](B);\n    let ans = 0x0;\n    keys[_0x107d41(0x3)](i => {\n        ans += B[i] * C[i] || 0x0;\n    });\n    return ans;\n}", "test_cases": [["6\n2 3 3 1 3 1", "3"], ["6\n5 2 4 2 8 8", "0"], ["32\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5", "22"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar cin = input.split(/ |\\n/), cid = 0;\n\nvar myOut = main();\nif (myOut !== undefined) console.log(myOut);\n\nfunction main() {\n    //console.log(cin);\n    //   cin = cin.map(i => +i);\n    let n = +cin.shift();\n    let B = {};\n    let C = {};\n    cin.forEach((v, i) => {\n        let x = +v;\n        B[String(i + x)] = B[String(i + x)] + 1 || 1;\n        C[String(i - x)] = C[String(i - x)] + 1 || 1;\n    });\n    //console.log({ B, C })\n    let keys = Object.keys(B);\n    let ans = 0;\n    keys.forEach(i => {\n        ans += (B[i] * C[i] || 0);\n        //console.log(i, B[i], C[i]);\n    });\n\n\n    return ans;\n}", "language": "JavaScript"}
{"filename": "p02696_1", "type": "JavaScript", "obfuscated": "const a0_0x293a3e = a0_0x1056;\nconst Main = input => {\n    const _0x5ee3de = a0_0x1056;\n    ABN = input[_0x5ee3de(0x0)]('\\x20')[_0x5ee3de(0x1)](item => parseInt(item));\n    console[_0x5ee3de(0x2)](F(ABN[0x0], ABN[0x1], ABN[0x2]));\n};\nfunction a0_0x1056(wZLsUi, key) {\n    const stringArray = a0_0x9a49();\n    a0_0x1056 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1056(wZLsUi, key);\n}\nconst F = (A, B, N) => {\n    const _0x23840b = a0_0x1056;\n    max = 0x0;\n    count = 0x0;\n    count0 = 0x0;\n    for (x = 0x0; x <= N; x++) {\n        result = Math['floor'](A * x / B) - A * Math[_0x23840b(0x3)](x / B);\n        if (result == 0x0) {\n            count0++;\n        }\n        if (count0 > 0x2) {\n            break;\n        }\n        if (result > max) {\n            max = result;\n            count = x;\n        }\n    }\n    return max;\n};\nfunction a0_0x9a49() {\n    const _0x28d1c8 = [\n        'split',\n        'map',\n        'log',\n        'floor',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x9a49 = function () {\n        return _0x28d1c8;\n    };\n    return a0_0x9a49();\n}\nMain(require('fs')['readFileSync'](a0_0x293a3e(0x4), a0_0x293a3e(0x5)));", "test_cases": [["5 7 4", "2"], ["11 10 9", "9"]], "original": "const Main = (input) => {\n    // array = input.split('\\n')\n    // ABN = array.shift().split(' ').map(item => parseInt(item))\n    ABN = input.split(' ').map(item => parseInt(item))\n    // array.pop()\n    // console.log(array)\n    // arrayInt = array.map(item => item.split(' ').map(value => parseInt(value)))\n    // console.log(arrayInt)\n    // arrayInt = array.map(item => parseInt(item))\n    console.log(F(ABN[0], ABN[1], ABN[2]))\n}\n\nconst F = (A, B, N) => {\n    max = 0\n    count = 0\n    count0 = 0\n    for (x = 0; x <= N; x++) {\n        result = Math.floor(A * x / B) - A * Math.floor(x / B)\n        if (result == 0) {\n            count0++\n        }\n        if (count0 > 2) {\n            break\n        }\n        // console.log(x, result, max)\n        if (result > max) {\n            max = result\n            count = x\n        }\n    }\n    return max\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02743_1", "type": "JavaScript", "obfuscated": "function a0_0x4e7c(iweWDM, key) {\n    var stringArray = a0_0x5850();\n    a0_0x4e7c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e7c(iweWDM, key);\n}\nvar a0_0x261178 = a0_0x4e7c;\ninp = require('fs')[a0_0x261178(0x0)](a0_0x261178(0x1), a0_0x261178(0x2))[a0_0x261178(0x3)]()['split']('\\x0a');\nl = inp['shift']()[a0_0x261178(0x4)]('\\x20');\na = l[a0_0x261178(0x5)]() * 0x1;\nfunction a0_0x5850() {\n    var _0x2c902b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'sqrt',\n        'Yes'\n    ];\n    a0_0x5850 = function () {\n        return _0x2c902b;\n    };\n    return a0_0x5850();\n}\nb = l[a0_0x261178(0x5)]() * 0x1;\nc = l[a0_0x261178(0x5)]() * 0x1;\nconsole['log'](Math['sqrt'](a) + Math[a0_0x261178(0x6)](b) < Math[a0_0x261178(0x6)](c) ? a0_0x261178(0x7) : 'No');", "test_cases": [["2 3 9", "No"], ["2 3 10", "Yes"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\na = l.shift() * 1\nb = l.shift() * 1 \nc = l.shift() * 1 \nconsole.log(Math.sqrt(a)+Math.sqrt(b)<Math.sqrt(c) ? \"Yes\": \"No\")", "language": "JavaScript"}
{"filename": "p02924_1", "type": "JavaScript", "obfuscated": "function a0_0x4118() {\n    var _0x449f04 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4118 = function () {\n        return _0x449f04;\n    };\n    return a0_0x4118();\n}\nvar a0_0x30604c = a0_0xb721;\nfunction a0_0xb721(dFsHzG, key) {\n    var stringArray = a0_0x4118();\n    a0_0xb721 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xb721(dFsHzG, key);\n}\nfunction Main(input) {\n    var _0x36b3f1 = a0_0xb721;\n    input = input[_0x36b3f1(0x0)]('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var count = 0x0;\n    if (n != 0x1) {\n        for (var i = 0x1; i < n; i++) {\n            count += i % (i + 0x1);\n        }\n    }\n    console[_0x36b3f1(0x1)]('%s', count);\n}\nMain(require('fs')[a0_0x30604c(0x2)](a0_0x30604c(0x3), a0_0x30604c(0x4)));", "test_cases": [["2", "1"], ["13", "78"], ["1", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0], 10);\n    var count = 0;\n    if (n != 1) {\n        for (var i = 1; i < n; i++ ) {\n            count += i % (i + 1);\n        }\n    }\n    //出力\n    console.log('%s',count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02975_1", "type": "JavaScript", "obfuscated": "var a0_0x2625e0 = a0_0x1c71;\nfunction Main(input) {\n    var _0x1957e7 = a0_0x1c71;\n    input = input[_0x1957e7(0x0)]('\\x0a');\n    var N = input[0x0];\n    var a = input[0x1][_0x1957e7(0x0)]('\\x20');\n    var flag = !![];\n    a = a[_0x1957e7(0x1)](x => parseInt(x));\n    for (var i = 0x0; i < N - 0x2; i++) {\n        var x = i === 0x0 ? N - 0x1 : i - 0x1;\n        if ((a[i + 0x1] ^ a[x]) !== a[i]) {\n            flag = ![];\n            break;\n        }\n    }\n    var str = flag === !![] ? 'Yes' : 'No';\n    console[_0x1957e7(0x2)]('%s', str);\n}\nfunction a0_0x519a() {\n    var _0x501f39 = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x519a = function () {\n        return _0x501f39;\n    };\n    return a0_0x519a();\n}\nfunction a0_0x1c71(ExCCNu, key) {\n    var stringArray = a0_0x519a();\n    a0_0x1c71 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c71(ExCCNu, key);\n}\nMain(require('fs')[a0_0x2625e0(0x3)](a0_0x2625e0(0x4), a0_0x2625e0(0x5)));", "test_cases": [["3\n1 2 3", "Yes"], ["4\n1 2 4 8", "No"]], "original": "function Main(input) {\n  input = input.split('\\n')\n  var N = input[0]\n  var a = input[1].split(' ')\n  var flag = true\n  a = a.map(x => parseInt(x))\n\n  for (var i = 0; i < N - 2; i++) {\n    var x = i === 0 ? N - 1 : i - 1\n    if ((a[i + 1] ^ a[x]) !== a[i]) {\n      flag = false\n      break\n    }\n  }\n\n  var str = flag === true ? 'Yes' : 'No'\n\n  console.log('%s', str)\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02988_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5e1e(lmhyWG, key) {\n    const stringArray = a0_0x31c4();\n    a0_0x5e1e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e1e(lmhyWG, key);\n}\nconst a0_0x31a79e = a0_0x5e1e;\nfunction a0_0x31c4() {\n    const _0x31d6f8 = [\n        'trim',\n        'split',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x31c4 = function () {\n        return _0x31d6f8;\n    };\n    return a0_0x31c4();\n}\nconst Main = arg => {\n    const _0x1190fe = a0_0x5e1e;\n    let input = arg[_0x1190fe(0x0)]()['split']('\\x0a');\n    let n = parseInt(input[0x0]);\n    let pArr = input[0x1][_0x1190fe(0x1)]('\\x20')['map'](Number);\n    let count = 0x0;\n    for (let i = 0x1; i - 0x1 < n; i++) {\n        if (pArr[i - 0x1] < pArr[i] && pArr[i] < pArr[i + 0x1] || pArr[i + 0x1] < pArr[i] && pArr[i] < pArr[i - 0x1]) {\n            count += 0x1;\n        }\n    }\n    console['log'](count);\n};\nMain(require('fs')[a0_0x31a79e(0x2)]('/dev/stdin', a0_0x31a79e(0x3)));", "test_cases": [["5\n1 3 5 4 2", "2"], ["9\n9 6 3 2 5 8 7 4 1", "5"]], "original": "'use strict'\nconst Main = (arg) => {\n  let input = arg.trim().split('\\n');\n  let n = parseInt(input[0]);\n  let pArr = input[1].split(' ').map(Number);\n  // console.log({ n, pArr });\n  let count = 0;\n  for (let i = 1; i - 1 < n; i++) {\n    if ((pArr[i - 1] < pArr[i] && pArr[i] < pArr[i + 1])\n      || (pArr[i + 1] < pArr[i] && pArr[i] < pArr[i - 1])) {\n      count += 1;\n    }\n  }\n  console.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03037_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4db7a6 = a0_0xaf3f;\nfunction a0_0x34f6() {\n    const _0x5b6cf2 = [\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'log',\n        'filter',\n        'length',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x34f6 = function () {\n        return _0x5b6cf2;\n    };\n    return a0_0x34f6();\n}\nfunction a0_0xaf3f(RZkhwe, key) {\n    const stringArray = a0_0x34f6();\n    a0_0xaf3f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xaf3f(RZkhwe, key);\n}\nfunction main(stdin) {\n    const _0x16269a = a0_0xaf3f;\n    const input = stdin[_0x16269a(0x0)]('\\x0a');\n    const N = input[_0x16269a(0x1)]()[_0x16269a(0x0)]('\\x20')[_0x16269a(0x2)](v => parseInt(v, 0xa))[0x0];\n    const gates = input['map'](g => g['split']('\\x20')[_0x16269a(0x2)](v => parseInt(v, 0xa)));\n    const cards = new Array(N)['fill'](!![]);\n    gates[_0x16269a(0x3)](g => {\n        for (let i = 0x0; i < g[0x0] - 0x1; ++i) {\n            cards[i] = ![];\n        }\n        for (let i = g[0x1]; i < N; ++i) {\n            cards[i] = ![];\n        }\n    });\n    console[_0x16269a(0x4)](cards[_0x16269a(0x5)](c => c)[_0x16269a(0x6)]);\n}\nmain(require('fs')['readFileSync'](a0_0x4db7a6(0x7), a0_0x4db7a6(0x8)));", "test_cases": [["4 2\n1 3\n2 4", "2"], ["10 3\n3 6\n5 7\n6 9", "1"], ["100000 1\n1 100000", "100000"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  const N = input.shift().split(' ').map(v => parseInt(v, 10))[0];\n  const gates = input.map(g => g.split(' ').map(v => parseInt(v, 10)));\n  const cards = new Array(N).fill(true);\n\n  gates.forEach(g => {\n    for (let i = 0; i < g[0] - 1; ++i) {\n      cards[i] = false;\n    }\n\n    for (let i = g[1]; i < N; ++i) {\n      cards[i] = false;\n    }\n  });\n\n  console.log(cards.filter(c => c).length);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03073_1", "type": "JavaScript", "obfuscated": "var a0_0x583282 = a0_0xed16;\nfunction Main(input) {\n    var _0x374cae = a0_0xed16;\n    var cnt = 0x0;\n    for (var i = 0x0; i < input[_0x374cae(0x0)]; i++) {\n        if (parseInt(input[i]) != i % 0x2)\n            cnt++;\n    }\n    console[_0x374cae(0x1)](parseInt(Math[_0x374cae(0x2)](cnt, input[_0x374cae(0x0)] - cnt)));\n}\nfunction a0_0xed16(aNiEzS, key) {\n    var stringArray = a0_0x3719();\n    a0_0xed16 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xed16(aNiEzS, key);\n}\nMain(require('fs')['readFileSync'](a0_0x583282(0x3), a0_0x583282(0x4)));\nfunction a0_0x3719() {\n    var _0x16cf81 = [\n        'length',\n        'log',\n        'min',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3719 = function () {\n        return _0x16cf81;\n    };\n    return a0_0x3719();\n}", "test_cases": [["000", "1"], ["10010010", "3"], ["0", "0"]], "original": "function Main(input) {\n  var cnt = 0;\n  for(var i=0; i<input.length; i++){\n  \tif(parseInt(input[i])!=i%2)cnt++;\n  }\n  console.log(parseInt(Math.min(cnt, input.length-cnt)));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03147_1", "type": "JavaScript", "obfuscated": "var a0_0x1b2779 = a0_0x58d4;\nfunction search(h) {\n    var is_start = ![];\n    for (var i = 0x0; i < h['length']; i++) {\n        if (is_start) {\n            if (h[i] == 0x0) {\n                break;\n            }\n            h[i] -= 0x1;\n        } else {\n            if (h[i] == 0x0) {\n                continue;\n            }\n            is_start = !![];\n            h[i] -= 0x1;\n        }\n    }\n    return h;\n}\nfunction main(arg) {\n    var _0x1f57f0 = a0_0x58d4;\n    var h = arg[_0x1f57f0(0x0)]('\\x0a')[0x1]['split']('\\x20')['map'](e => Number(e));\n    var arr = [];\n    var i = 0x0;\n    for (i = 0x1;; i++) {\n        h = search(h);\n        if (h[0x0] == 0x0) {\n            var b = h[_0x1f57f0(0x1)]((x, i, self) => self[_0x1f57f0(0x2)](x) === i);\n            if (b[_0x1f57f0(0x3)] == 0x1) {\n                break;\n            }\n        }\n    }\n    console[_0x1f57f0(0x4)](i);\n}\nfunction a0_0x337e() {\n    var _0x502e23 = [\n        'split',\n        'filter',\n        'indexOf',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x337e = function () {\n        return _0x502e23;\n    };\n    return a0_0x337e();\n}\nfunction a0_0x58d4(skqsmy, key) {\n    var stringArray = a0_0x337e();\n    a0_0x58d4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58d4(skqsmy, key);\n}\nmain(require('fs')['readFileSync'](a0_0x1b2779(0x5), a0_0x1b2779(0x6)));", "test_cases": [["4\n1 2 2 1", "2"], ["5\n3 1 2 3 1", "5"], ["8\n4 23 75 0 23 96 50 100", "221"]], "original": "function search(h) {\n    var is_start = false;\n    for (var i = 0; i < h.length; i++) {\n        if (is_start) {\n            if (h[i] == 0) {\n                break\n            }\n            h[i] -= 1\n\n        } else {\n            if (h[i] == 0) {\n                continue;\n            }\n\n            is_start = true;\n            h[i] -= 1\n        }\n    }\n    return h\n}\n\nfunction main(arg) {\n\tvar h = arg.split(\"\\n\")[1].split(\" \").map(e => Number(e))\n\tvar arr = []\n\n    var i = 0;\n\n    for (i = 1;;i++) {\n        h = search(h)\n        if (h[0] == 0) {\n            var b = h.filter((x, i, self) => self.indexOf(x) === i);\n            if (b.length == 1) {\n                break\n            }\n        }\n    }\n\t console.log(i)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03240_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x237ef9 = a0_0x3d9b;\nfunction a0_0x3d9b(CMnGrk, key) {\n    const stringArray = a0_0x3882();\n    a0_0x3d9b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d9b(CMnGrk, key);\n}\nconst main = input => {\n    const _0x1bb09a = a0_0x3d9b;\n    input = input[_0x1bb09a(0x0)]('\\x0a');\n    const N = parseInt(input[0x0]);\n    let X = [];\n    let Y = [];\n    let Z = [];\n    input['slice'](0x1, N + 0x1)[_0x1bb09a(0x1)](v => {\n        const _0x11fc3b = a0_0x3d9b;\n        let tmp = v[_0x11fc3b(0x0)]('\\x20')[_0x11fc3b(0x2)](j => parseInt(j));\n        X[_0x11fc3b(0x3)](tmp[0x0]);\n        Y['push'](tmp[0x1]);\n        Z[_0x11fc3b(0x3)](tmp[0x2]);\n    });\n    const MAX = 0x64;\n    for (let y = 0x0; y <= MAX; y++) {\n        for (let x = 0x0; x <= MAX; x++) {\n            let needH = -0x1;\n            for (let i = 0x0; i < N; i++) {\n                let tmp = Z[i] + Math['abs'](Y[i] - y) + Math['abs'](X[i] - x);\n                if (needH === -0x1) {\n                    needH = tmp;\n                } else if (needH !== tmp) {\n                    needH = -0x2;\n                    break;\n                }\n            }\n            if (needH === -0x2)\n                continue;\n            console[_0x1bb09a(0x4)](_0x1bb09a(0x5), x, y, needH);\n        }\n    }\n};\nfunction a0_0x3882() {\n    const _0x2e61e7 = [\n        'split',\n        'forEach',\n        'map',\n        'push',\n        'log',\n        '%d\\x20%d\\x20%d',\n        'readFileSync',\n        'utf-8'\n    ];\n    a0_0x3882 = function () {\n        return _0x2e61e7;\n    };\n    return a0_0x3882();\n}\nmain(require('fs')[a0_0x237ef9(0x6)]('/dev/stdin', a0_0x237ef9(0x7)));", "test_cases": [["4\n2 3 5\n2 1 5\n1 2 5\n3 2 5", "2 2 6"], ["2\n0 0 100\n1 1 98", "0 0 100"], ["3\n99 1 191\n100 1 192\n99 0 192", "100 0 193"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0])\n    let X = []\n    let Y = []\n    let Z = []\n    input.slice(1, N + 1).forEach(v => {\n        let tmp = v.split(' ').map(j => parseInt(j))\n        X.push(tmp[0])\n        Y.push(tmp[1])\n        Z.push(tmp[2])\n    })\n\n    const MAX = 100\n    for(let y = 0; y <= MAX; y++){\n        for(let x = 0; x <= MAX; x++){\n            let needH = -1\n            for(let i = 0; i < N; i++){\n                let tmp = Z[i] + Math.abs(Y[i] - y) + Math.abs(X[i] - x)\n                if(needH === -1){\n                    needH = tmp\n                }else if(needH !== tmp){\n                    needH = -2\n                    break\n                }\n            }\n            if(needH === -2) continue\n            console.log('%d %d %d', x, y, needH)\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03324_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2c68(nwybRM, key) {\n    const stringArray = a0_0x1fe2();\n    a0_0x2c68 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c68(nwybRM, key);\n}\nconst a0_0x4519b2 = a0_0x2c68;\nconst main = arg => {\n    const _0x31ddb5 = a0_0x2c68;\n    arg = arg[_0x31ddb5(0x0)]()['split']('\\x0a');\n    const D = parseInt(arg[0x0][_0x31ddb5(0x1)]('\\x20')[0x0]);\n    const N = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    let temp = [...Array(D * 0x2)][_0x31ddb5(0x2)](0x0);\n    let answer = parseInt(N + String(temp[_0x31ddb5(0x3)]('')));\n    let plus = parseInt(0x1 + String(temp[_0x31ddb5(0x3)]('')));\n    console[_0x31ddb5(0x4)](N !== 0x64 ? answer : answer + plus);\n};\nfunction a0_0x1fe2() {\n    const _0x3da524 = [\n        'trim',\n        'split',\n        'fill',\n        'join',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1fe2 = function () {\n        return _0x3da524;\n    };\n    return a0_0x1fe2();\n}\nmain(require('fs')[a0_0x4519b2(0x5)]('/dev/stdin', a0_0x4519b2(0x6)));", "test_cases": [["0 5", "5"], ["1 11", "1100"], ["2 85", "850000"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const D = parseInt(arg[0].split(\" \")[0]);\n    const N = parseInt(arg[0].split(\" \")[1]);\n    \n    let temp = [...Array(D * 2)].fill(0);\n    let answer = parseInt(N + String(temp.join(\"\")));\n    let plus  = parseInt(1 + String(temp.join(\"\")));\n    \n    console.log(N !== 100 ? answer : answer + plus);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02289_1", "type": "JavaScript", "obfuscated": "var a0_0x1772dd = a0_0x50ec;\nfunction a0_0x461b() {\n    var _0x54ebd7 = [\n        'readFileSync',\n        'input',\n        'ascii',\n        'split',\n        'insert',\n        'push',\n        'extract',\n        'sort',\n        'pop'\n    ];\n    a0_0x461b = function () {\n        return _0x54ebd7;\n    };\n    return a0_0x461b();\n}\nconfig = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')[a0_0x1772dd(0x0)](config[a0_0x1772dd(0x1)], a0_0x1772dd(0x2))[a0_0x1772dd(0x3)](config['newline']);\nfunction a0_0x50ec(icVNUK, key) {\n    var stringArray = a0_0x461b();\n    a0_0x50ec = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50ec(icVNUK, key);\n}\nS = [];\nfor (i in line) {\n    ary = line[i][a0_0x1772dd(0x3)]('\\x20');\n    if (ary[0x0] === a0_0x1772dd(0x4))\n        S[a0_0x1772dd(0x5)](parseInt(ary[0x1], 0xa));\n    else if (ary[0x0] === a0_0x1772dd(0x6)) {\n        S[a0_0x1772dd(0x7)](function (a, b) {\n            return a - b;\n        });\n        console['log'](S[a0_0x1772dd(0x8)]());\n    }\n}", "test_cases": [["insert 8\ninsert 2\nextract\ninsert 10\nextract\ninsert 11\nextract\nextract\nend", "8\n10\n11\n2"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline);\n\nS = [];\n\nfor (i in line) {\n  ary = line[i].split(' ');\n  if (ary[0] === 'insert') S.push(parseInt(ary[1], 10));\n  else if (ary[0] === 'extract') {\n    S.sort(function (a, b) { return a - b; });\n    console.log(S.pop());\n  }\n}", "language": "JavaScript"}
{"filename": "p02406_1", "type": "JavaScript", "obfuscated": "function a0_0x490f(dgWlth, key) {\n    var stringArray = a0_0x2deb();\n    a0_0x490f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x490f(dgWlth, key);\n}\nvar a0_0x3c9168 = a0_0x490f;\nvar readable = process[a0_0x3c9168(0x0)];\nreadable[a0_0x3c9168(0x1)]();\nreadable[a0_0x3c9168(0x2)](a0_0x3c9168(0x3));\nfunction a0_0x2deb() {\n    var _0x110d20 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf-8',\n        'data',\n        'push',\n        'log'\n    ];\n    a0_0x2deb = function () {\n        return _0x110d20;\n    };\n    return a0_0x2deb();\n}\nreadable['on'](a0_0x3c9168(0x4), function (chunk) {\n    var _0x433e1b = a0_0x490f;\n    var n = parseInt(chunk);\n    var i = 0x1;\n    var output = [];\n    do {\n        var x = i;\n        if (0x0 == x % 0x3) {\n            output[_0x433e1b(0x5)]('\\x20' + i);\n        } else {\n            do {\n                if (0x3 == x % 0xa) {\n                    output[_0x433e1b(0x5)]('\\x20' + i);\n                    break;\n                } else {\n                    x /= 0xa;\n                }\n            } while (x);\n        }\n    } while (++i <= n);\n    console[_0x433e1b(0x6)](output['join'](''));\n});", "test_cases": [["30", "3 6 9 12 13 15 18 21 23 24 27 30"]], "original": "var readable = process.stdin;\nreadable.resume();\nreadable.setEncoding( 'utf-8' );\nreadable.on( 'data', function( chunk ) {\n  var n = parseInt( chunk );\n  var i = 1;\n  var output = [];\n  do{\n    var x = i;\n    if( 0 == x%3 ) {\n      output.push( \" \"+i );\n    } else {\n      do {\n        if( 3 == x%10 ) {\n          output.push( \" \"+i );\n          break;\n        } else {\n          x /= 10;\n        }\n      } while( x );\n    }\n  } while( ++i <= n );\n  \n  console.log( output.join( '' ) );\n});", "language": "JavaScript"}
{"filename": "p02546_1", "type": "JavaScript", "obfuscated": "const a0_0x21b1dc = a0_0x1b6b;\nfunction a0_0x541b() {\n    const _0x226997 = [\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x541b = function () {\n        return _0x226997;\n    };\n    return a0_0x541b();\n}\nfunction Main(input) {\n    const _0x4be24e = a0_0x1b6b;\n    input = input['split']('\\x0a');\n    input = input[0x0];\n    const last = input[_0x4be24e(0x0)](-0x1);\n    const sufix = last === 's' ? 'es' : 's';\n    console[_0x4be24e(0x1)]('' + input + sufix);\n}\nfunction a0_0x1b6b(BSZbRI, key) {\n    const stringArray = a0_0x541b();\n    a0_0x1b6b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b6b(BSZbRI, key);\n}\nMain(require('fs')[a0_0x21b1dc(0x2)](a0_0x21b1dc(0x3), a0_0x21b1dc(0x4)));", "test_cases": [["apple", "apples"], ["bus", "buses"], ["box", "boxs"]], "original": "function Main(input) {\n    // 最後の文字を取得\n    input = input.split(\"\\n\");\n    input = input[0];\n    const last = input.slice(-1) ;\n    const sufix = last === \"s\" ? \"es\" : \"s\";\n\t//出力\n\tconsole.log(`${input}${sufix}`);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02642_1", "type": "JavaScript", "obfuscated": "function a0_0x24f4() {\n    var _0x1db584 = [\n        'split',\n        'map',\n        'fill',\n        'log',\n        'filter',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x24f4 = function () {\n        return _0x1db584;\n    };\n    return a0_0x24f4();\n}\nvar a0_0x22e9b0 = a0_0x3329;\nfunction a0_0x3329(YvGpnK, key) {\n    var stringArray = a0_0x24f4();\n    a0_0x3329 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3329(YvGpnK, key);\n}\nfunction main(input) {\n    var _0x20e7cd = a0_0x3329;\n    var a = input[0x1]['trim']()[_0x20e7cd(0x0)]('\\x20')[_0x20e7cd(0x1)](e => parseInt(e, 0xa));\n    var a_max = 0xa ** 0x6 + 0x1;\n    var dp = new Array(a_max + 0x1)[_0x20e7cd(0x2)](0x0);\n    for (var i of a) {\n        dp[i]++;\n    }\n    for (var i = 0x1; i <= a_max; i++) {\n        if (dp[i] === 0x0) {\n            continue;\n        }\n        for (var j = i + i; j <= a_max; j += i) {\n            if (dp[j] !== 0x0) {\n                dp[j] = 0x0;\n            }\n        }\n    }\n    console[_0x20e7cd(0x3)](dp[_0x20e7cd(0x4)](function (x) {\n        return x == 0x1;\n    })[_0x20e7cd(0x5)]);\n}\nmain(require('fs')[a0_0x22e9b0(0x6)](a0_0x22e9b0(0x7), a0_0x22e9b0(0x8))['trim']()['split']('\\x0a'));", "test_cases": [["5\n24 11 8 3 16", "3"], ["4\n5 5 5 5", "0"], ["10\n33 18 45 28 8 19 89 86 2 4", "5"]], "original": "function main(input) {\n  var a = input[1].trim().split(\" \").map(e => parseInt(e, 10));\n  var a_max = 10**6+1;\n  var dp = new Array(a_max+1).fill(0);\n  for(var i of a){\n    dp[i]++;\n  }\n \n  for(var i=1;i<=a_max;i++){\n    if(dp[i]===0){ \n      continue;\n    }\n    for(var j=i+i;j<=a_max;j+=i){\n      if(dp[j]!==0){\n        dp[j]=0;\n      }\n    }\n  }\n  console.log(dp.filter(function(x){return x==1}).length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02646_1", "type": "JavaScript", "obfuscated": "const a0_0x412922 = a0_0x47f0;\nfunction a0_0x47f0(qkAbrs, key) {\n    const stringArray = a0_0x34cc();\n    a0_0x47f0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x47f0(qkAbrs, key);\n}\nfunction a0_0x34cc() {\n    const _0x13b240 = [\n        'trim',\n        'split',\n        'map',\n        'abs',\n        'YES',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x34cc = function () {\n        return _0x13b240;\n    };\n    return a0_0x34cc();\n}\nfunction Main(input) {\n    const _0x56723c = a0_0x47f0;\n    const arr = input[_0x56723c(0x0)]()[_0x56723c(0x1)]('\\x0a');\n    const AV = arr[0x0][_0x56723c(0x1)]('\\x20')[_0x56723c(0x2)](Number);\n    const BW = arr[0x1][_0x56723c(0x1)]('\\x20')[_0x56723c(0x2)](Number);\n    const T = Number(arr[0x2]);\n    if (Math[_0x56723c(0x3)](AV[0x0] - BW[0x0]) < T * (AV[0x1] - BW[0x1])) {\n        console['log'](_0x56723c(0x4));\n    } else {\n        console[_0x56723c(0x5)]('NO');\n    }\n}\nMain(require('fs')[a0_0x412922(0x6)](a0_0x412922(0x7), 'utf8'));", "test_cases": [["1 2\n3 1\n3", "YES"], ["1 2\n3 2\n3", "NO"], ["1 2\n3 3\n3", "NO"]], "original": "function Main(input){\n    const arr = input.trim().split(\"\\n\");\n    const AV = arr[0].split(\" \").map(Number);\n    const BW = arr[1].split(\" \").map(Number);\n    const T  = Number(arr[2]);\n    if(Math.abs(AV[0]-BW[0]) < T*(AV[1] - BW[1])){\n        console.log(\"YES\");\n    } else{\n        console.log(\"NO\");\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02687_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x28a47c = a0_0x59b5;\nfunction a0_0x59b5(AFWrja, key) {\n    const stringArray = a0_0x38e2();\n    a0_0x59b5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x59b5(AFWrja, key);\n}\nconst Main = input => {\n    const _0x31def9 = a0_0x59b5;\n    if (input === _0x31def9(0x0)) {\n        console['log'](_0x31def9(0x1));\n    } else {\n        console[_0x31def9(0x2)](_0x31def9(0x0));\n    }\n};\nMain(require('fs')[a0_0x28a47c(0x3)](a0_0x28a47c(0x4), 'utf8'));\nfunction a0_0x38e2() {\n    const _0x1a90a5 = [\n        'ABC',\n        'ARC',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x38e2 = function () {\n        return _0x1a90a5;\n    };\n    return a0_0x38e2();\n}", "test_cases": [["ABC", "ARC"]], "original": "\"use strict\";\nconst Main = input => {\n    if(input === \"ABC\") {\n        console.log(\"ARC\");\n    } else {\n        console.log(\"ABC\");\n    }\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02689_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x18c9() {\n    const _0x44f3e2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'push',\n        'length',\n        'iaoID',\n        'UJnMM',\n        'SvkIY',\n        'UQhGz',\n        'Ygyvd',\n        'sbFJM',\n        'log'\n    ];\n    a0_0x18c9 = function () {\n        return _0x44f3e2;\n    };\n    return a0_0x18c9();\n}\nconst a0_0x330ad8 = a0_0x2b36;\nconst inputs = require('fs')[a0_0x330ad8(0x0)](a0_0x330ad8(0x1), a0_0x330ad8(0x2))[a0_0x330ad8(0x3)]('\\x0a');\ninputs['shift']();\nconst heights = inputs[a0_0x330ad8(0x4)]()['split']('\\x20')[a0_0x330ad8(0x5)](v => parseInt(v, 0xa));\nconst towers = new Array(heights['length'])['fill']()[a0_0x330ad8(0x5)](_ => new Array());\ninputs[a0_0x330ad8(0x6)](v => {\n    const _0x2f6dd1 = a0_0x2b36;\n    const splited = v[_0x2f6dd1(0x3)]('\\x20')['map'](w => parseInt(w, 0xa) - 0x1);\n    towers[splited[0x0]][_0x2f6dd1(0x7)](splited[0x1]);\n    towers[splited[0x1]][_0x2f6dd1(0x7)](splited[0x0]);\n});\nlet result = 0x0;\ntowers['forEach']((t, i) => {\n    const _0x8556b2 = a0_0x2b36;\n    let good = !![];\n    if (t[_0x8556b2(0x8)]) {\n        t[_0x8556b2(0x6)](t2 => {\n            const _0xd80da9 = a0_0x2b36;\n            if (_0xd80da9(0x9) !== _0xd80da9(0xa)) {\n                if (heights[i] <= heights[t2]) {\n                    if (_0xd80da9(0xb) !== _0xd80da9(0xc)) {\n                        good = ![];\n                    } else {\n                        t[_0xd80da9(0x6)](t2 => {\n                            if (heights[i] <= heights[t2]) {\n                                good = ![];\n                            }\n                        });\n                    }\n                }\n            } else {\n                ++result;\n            }\n        });\n    }\n    if (good) {\n        if (_0x8556b2(0xd) === _0x8556b2(0xe)) {\n            if (heights[i] <= heights[t2]) {\n                good = ![];\n            }\n        } else {\n            ++result;\n        }\n    }\n});\nfunction a0_0x2b36(KpGItX, key) {\n    const stringArray = a0_0x18c9();\n    a0_0x2b36 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b36(KpGItX, key);\n}\nconsole[a0_0x330ad8(0xf)](result);", "test_cases": [["4 3\n1 2 3 4\n1 3\n2 3\n2 4", "2"], ["6 5\n8 6 9 1 2 1\n1 3\n4 2\n4 3\n4 6\n4 6", "3"]], "original": "'use strict';\n\nconst inputs = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n');\ninputs.shift();\n\nconst heights = inputs.shift().split(' ').map(v => parseInt(v, 10));\nconst towers = new Array(heights.length).fill().map(_ => new Array());\n\ninputs.forEach(v => {\n  const splited = v.split(' ').map(w => parseInt(w, 10) - 1);\n\n  towers[splited[0]].push(splited[1]);\n  towers[splited[1]].push(splited[0]);\n});\n\nlet result = 0;\ntowers.forEach((t, i) => {\n  let good = true;\n\n  if (t.length) {\n    t.forEach(t2 => {\n      if (heights[i] <= heights[t2]) {\n        good = false;\n      }\n    });\n  }\n\n  if (good) {\n    ++result;\n  }\n});\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02766_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x29bc75 = a0_0x4243;\nfunction main(input) {\n    const _0x3a0b70 = a0_0x4243;\n    let line = input[_0x3a0b70(0x0)](/\\r?\\n/g);\n    let arr = line[0x0][_0x3a0b70(0x0)]('\\x20');\n    const N = parseInt(arr[0x0]), K = parseInt(arr[0x1]);\n    let cnt = 0x1;\n    while (K ** cnt < N)\n        cnt++;\n    console[_0x3a0b70(0x1)](cnt);\n}\nfunction a0_0x4243(zpWKpY, key) {\n    const stringArray = a0_0x1c89();\n    a0_0x4243 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4243(zpWKpY, key);\n}\nmain(require('fs')[a0_0x29bc75(0x2)](a0_0x29bc75(0x3), a0_0x29bc75(0x4)));\nfunction a0_0x1c89() {\n    const _0x16e642 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1c89 = function () {\n        return _0x16e642;\n    };\n    return a0_0x1c89();\n}", "test_cases": [["11 2", "4"], ["1010101 10", "7"], ["314159265 3", "18"]], "original": "\"use strict\";\nfunction main(input) {\n    let line = input.split(/\\r?\\n/g);\n    let arr = line[0].split(\" \");\n    const N = parseInt(arr[0]), K = parseInt(arr[1]);\n    let cnt = 1;\n    while (K ** cnt < N) cnt++;\n    console.log(cnt);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02778_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var _0x406f02 = a0_0xd0c9;\n    var x = 'x';\n    var output = Array(input[_0x406f02(0x0)])[_0x406f02(0x1)](x);\n    console[_0x406f02(0x2)](output[_0x406f02(0x3)](''));\n}\nfunction a0_0xd0c9(pyStSq, key) {\n    var stringArray = a0_0x3920();\n    a0_0xd0c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd0c9(pyStSq, key);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction a0_0x3920() {\n    var _0x47845d = [\n        'length',\n        'fill',\n        'log',\n        'join'\n    ];\n    a0_0x3920 = function () {\n        return _0x47845d;\n    };\n    return a0_0x3920();\n}", "test_cases": [["sardine", "xxxxxxx"], ["xxxx", "xxxx"], ["gone", "xxxx"]], "original": "function main(input) \n{\n    var x = \"x\";\n    var output = Array(input.length).fill(x);\n    console.log(output.join(\"\"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03000_1", "type": "JavaScript", "obfuscated": "function a0_0x752a(vtEsZk, key) {\n    var stringArray = a0_0x27cd();\n    a0_0x752a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x752a(vtEsZk, key);\n}\nvar a0_0x8a7697 = a0_0x752a;\nfunction Main(input) {\n    var _0x3cc295 = a0_0x752a;\n    lines = input['split']('\\x0a');\n    firstLine = lines[0x0][_0x3cc295(0x0)]('\\x20');\n    N = +firstLine[0x0];\n    X = +firstLine[0x1];\n    secondLine = lines[0x1][_0x3cc295(0x0)]('\\x20');\n    distanceTravelled = 0x0;\n    numBounces = 0x1;\n    for (i = 0x0; i < N; i++) {\n        distanceTravelled += +secondLine[i];\n        if (distanceTravelled <= X) {\n            numBounces += 0x1;\n        }\n    }\n    console[_0x3cc295(0x1)](numBounces);\n}\nMain(require('fs')[a0_0x8a7697(0x2)](a0_0x8a7697(0x3), a0_0x8a7697(0x4)));\nfunction a0_0x27cd() {\n    var _0x2af13b = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x27cd = function () {\n        return _0x2af13b;\n    };\n    return a0_0x27cd();\n}", "test_cases": [["3 6\n3 4 5", "2"], ["4 9\n3 3 3 3", "4"]], "original": "function Main(input) {\n  //入力から変数を全て定義\n  lines = input.split(\"\\n\");\n  firstLine = lines[0].split(\" \");\n  N = +firstLine[0];\n  X = +firstLine[1];\n  secondLine = lines[1].split(\" \");\n  \n  //跳ねた距離がX以下かどうか判定するための変数\n  distanceTravelled = 0;\n  //跳ねた回数を記録するための変数（初期値が１なのは、最初に０地点でバウンスするのを先に含めているから）\n  numBounces= 1;\n  \n  //distanceTravelledに毎回バウンスする距離を足していき、\n  //もし跳ねた先がまだX以下の距離ならカウントを足す。これをN回やる。\n  for(i=0;i<N; i++){\n    distanceTravelled += +secondLine[i];\n    \n    if(distanceTravelled <= X){\n      numBounces += 1;\n    }\n  }\n  \n  console.log(numBounces);\n  \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03038_1", "type": "JavaScript", "obfuscated": "function a0_0x3fac() {\n    var _0x1953f6 = [\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'split',\n        'map',\n        'sort',\n        'yetdz',\n        'pjEHW',\n        'log',\n        'push'\n    ];\n    a0_0x3fac = function () {\n        return _0x1953f6;\n    };\n    return a0_0x3fac();\n}\nfunction a0_0x4d3f(nHzRQW, key) {\n    var stringArray = a0_0x3fac();\n    a0_0x4d3f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4d3f(nHzRQW, key);\n}\nvar a0_0x231f3f = a0_0x4d3f;\nvar lines = [];\nvar readline = require('readline');\nvar rl = readline[a0_0x231f3f(0x0)]({\n    'input': process[a0_0x231f3f(0x1)],\n    'output': process[a0_0x231f3f(0x2)]\n});\nrl['on'](a0_0x231f3f(0x3), x => {\n    lines['push'](x);\n});\nvar A;\nrl['on']('close', () => {\n    var _0x2ce06d = a0_0x4d3f;\n    var N = Number(lines[0x0][_0x2ce06d(0x4)]('\\x20')[0x0]);\n    var M = Number(lines[0x0][_0x2ce06d(0x4)]('\\x20')[0x1]);\n    A = lines[0x1][_0x2ce06d(0x4)]('\\x20')[_0x2ce06d(0x5)](i => Number(i));\n    lines['shift']();\n    lines['shift']();\n    var BC = lines[_0x2ce06d(0x5)](i => i[_0x2ce06d(0x4)]('\\x20')[_0x2ce06d(0x5)](i => Number(i)));\n    A['sort']((a, b) => a - b);\n    BC[_0x2ce06d(0x6)]((a, b) => b[0x1] - a[0x1]);\n    var k = 0x0;\n    var ans = 0x0;\n    for (var i = 0x0; i < M; i++) {\n        if (_0x2ce06d(0x7) === _0x2ce06d(0x7)) {\n            var b = BC[i][0x0];\n            var c = BC[i][0x1];\n            var cnt = 0x1;\n            for (var j = k; j < N; j++) {\n                if (b < cnt) {\n                    if (_0x2ce06d(0x8) === _0x2ce06d(0x8)) {\n                        k = j;\n                        break;\n                    } else {\n                        ans += A[x];\n                    }\n                }\n                if (A[j] < c) {\n                    ans += c;\n                } else {\n                    for (var x = j; x < N; x++) {\n                        ans += A[x];\n                    }\n                    console[_0x2ce06d(0x9)](ans);\n                    return 0x0;\n                }\n                cnt++;\n            }\n        } else {\n            lines[_0x2ce06d(0xa)](x);\n        }\n    }\n    for (var x = j; x < N; x++) {\n        ans += A[x];\n    }\n    console[_0x2ce06d(0x9)](ans);\n});", "test_cases": [["3 2\n5 1 4\n2 3\n1 5", "14"], ["10 3\n1 8 5 7 100 4 52 33 13 5\n3 10\n4 30\n1 4", "338"], ["3 2\n100 100 100\n3 99\n3 99", "300"], ["11 3\n1 1 1 1 1 1 1 1 1 1 1\n3 1000000000\n4 1000000000\n3 1000000000", "10000000001"]], "original": "var lines = [];\n\nvar readline = require('readline')\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\n\nrl.on('line', (x) => {\n    lines.push(x)\n});\n\nvar A;\nrl.on('close', () => {\n    var N = Number(lines[0].split(\" \")[0])\n    var M = Number(lines[0].split(\" \")[1])\n    A = lines[1].split(\" \").map(i => Number(i));\n\n    lines.shift(); lines.shift()\n\n    var BC = lines.map(i => i.split(\" \").map(i => Number(i)));\n\n    A.sort((a, b) => a - b);\n    BC.sort((a, b) => b[1] - a[1]);\n\n    var k = 0; var ans = 0;\n    for (var i = 0; i < M; i++) {\n        var b = BC[i][0]; var c = BC[i][1];\n        var cnt = 1;\n\n        for (var j = k; j < N; j++) {\n            if (b < cnt) { k = j; break; }\n\n            if (A[j] < c) { ans += c; }\n            else { for (var x = j; x < N; x++) { ans += A[x] } console.log(ans); return (0) }\n\n            cnt++;\n        }\n    }\n    for (var x = j; x < N; x++) { ans += A[x] } console.log(ans);\n\n});\n\n\n\n", "language": "JavaScript"}
{"filename": "p03072_1", "type": "JavaScript", "obfuscated": "var a0_0x5b3391 = a0_0x1ac8;\ninput = require('fs')[a0_0x5b3391(0x0)](a0_0x5b3391(0x1), a0_0x5b3391(0x2));\nlines = input['split']('\\x0a');\nN = lines[a0_0x5b3391(0x3)]() * 0x1;\nA = lines[a0_0x5b3391(0x3)]()['split']('\\x20');\nfunction a0_0x1ac8(ZKHyAG, key) {\n    var stringArray = a0_0x3c06();\n    a0_0x1ac8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ac8(ZKHyAG, key);\n}\nh = 0x0;\ncnt = 0x0;\nfunction a0_0x3c06() {\n    var _0x1e0b5c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'log'\n    ];\n    a0_0x3c06 = function () {\n        return _0x1e0b5c;\n    };\n    return a0_0x3c06();\n}\nfor (i = 0x0; i < N; i++) {\n    if (h <= A[i]) {\n        cnt++;\n        h = A[i];\n    }\n}\nconsole[a0_0x5b3391(0x4)](cnt);", "test_cases": [["4\n6 5 6 8", "3"], ["5\n4 5 3 5 4", "3"], ["5\n9 5 6 8 4", "1"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nA = lines.shift().split(' ')\n\nh = 0\ncnt = 0\nfor (i=0; i<N; i++) {\n    if (h<=A[i]) {\n        cnt++\n        h = A[i]\n    }\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p03109_1", "type": "JavaScript", "obfuscated": "function a0_0x1c92(TuJZPj, key) {\n    const stringArray = a0_0x2e45();\n    a0_0x1c92 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c92(TuJZPj, key);\n}\nfunction a0_0x2e45() {\n    const _0x1bc627 = [\n        'stdin',\n        'stdout',\n        'push',\n        'close',\n        'length',\n        'replace',\n        'log',\n        'TBD'\n    ];\n    a0_0x2e45 = function () {\n        return _0x1bc627;\n    };\n    return a0_0x2e45();\n}\nconst a0_0x5723ad = a0_0x1c92;\nlet lines = [];\nlet reader = require('readline')['createInterface']({\n    'input': process[a0_0x5723ad(0x0)],\n    'output': process[a0_0x5723ad(0x1)]\n});\nreader['on']('line', function (line) {\n    const _0xd00ca2 = a0_0x1c92;\n    lines[_0xd00ca2(0x2)](line);\n});\nreader['on'](a0_0x5723ad(0x3), function () {\n    const _0x2aa1fe = a0_0x1c92;\n    if (lines[_0x2aa1fe(0x4)] === 0x1) {\n        let date_int = lines[0x0][_0x2aa1fe(0x5)](/\\//g, '');\n        if (date_int <= 0x13414de) {\n            console[_0x2aa1fe(0x6)]('Heisei');\n            return;\n        }\n    }\n    console[_0x2aa1fe(0x6)](_0x2aa1fe(0x7));\n});", "test_cases": [["2019/04/30", "Heisei"], ["2019/11/01", "TBD"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nreader.on('line', function (line) {\n    lines.push(line);\n});\n\nreader.on('close', function () {\n    if (lines.length === 1) {\n        let date_int = lines[0].replace(/\\//g, '');\n        if (date_int <= 20190430) {\n            console.log('Heisei');\n            return;\n        }\n    }\n    console.log('TBD');\n});", "language": "JavaScript"}
{"filename": "p03127_1", "type": "JavaScript", "obfuscated": "var a0_0x35a00f = a0_0x3586;\nvar GET = (function () {\n    var _0x35ac0a = a0_0x3586;\n    function f(s) {\n        var _0x45751e = a0_0x3586;\n        if ('sDMWV' !== _0x45751e(0x0)) {\n            return new g(s);\n        } else {\n            var s = this['_s'][this['_y']++][_0x45751e(0x1)]('\\x20');\n            return f ? s : s['map'](a => +a);\n        }\n    }\n    function g(s) {\n        var _0x1f3e6c = a0_0x3586;\n        this['_s'] = s[_0x1f3e6c(0x2)]()[_0x1f3e6c(0x1)]('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g[_0x35ac0a(0x3)]['a'] = function (f) {\n        var _0x1047a9 = a0_0x3586;\n        if ('GBOWy' === 'GBOWy') {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0x1047a9(0x4))\n                s[y] = s[y][_0x1047a9(0x1)]('\\x20')[_0x1047a9(0x5)]();\n            r = s[y]['pop']();\n            if (!s[y][_0x1047a9(0x6)])\n                this['_y']++;\n            return f ? r : +r;\n        } else {\n            ans = gcd(ans, a[i]);\n        }\n    };\n    g[_0x35ac0a(0x3)]['l'] = function (f) {\n        var _0x198054 = a0_0x3586;\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s[_0x198054(0x7)](a => +a);\n    };\n    g[_0x35ac0a(0x3)]['m'] = function (n, f) {\n        var _0x3bf859 = a0_0x3586;\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r[_0x3bf859(0x7)](a => a[_0x3bf859(0x7)](a => +a));\n    };\n    g[_0x35ac0a(0x3)]['r'] = function (n, f) {\n        var _0xc48dc8 = a0_0x3586;\n        var r = this['_s'][_0xc48dc8(0x8)](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nfunction a0_0x3586(wLCcZW, key) {\n    var stringArray = a0_0x1949();\n    a0_0x3586 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3586(wLCcZW, key);\n}\nvar o = GET(require('fs')[a0_0x35a00f(0x9)](a0_0x35a00f(0xa), 'utf8'));\nfunction gcd(a, b) {\n    return b ? gcd(b, a % b) : a;\n}\nconsole['log'](main());\nfunction a0_0x1949() {\n    var _0x43a3f7 = [\n        'mFqbA',\n        'split',\n        'trim',\n        'prototype',\n        'string',\n        'reverse',\n        'length',\n        'map',\n        'slice',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1949 = function () {\n        return _0x43a3f7;\n    };\n    return a0_0x1949();\n}\nfunction main() {\n    var n = o['a']();\n    var a = o['l']();\n    var ans = a[0x0];\n    for (var i = 0x1; i < n; i++) {\n        ans = gcd(ans, a[i]);\n    }\n    return ans;\n}", "test_cases": [["4\n2 10 8 40", "2"], ["4\n5 13 8 1000000000", "1"], ["3\n1000000000 1000000000 1000000000", "1000000000"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\nfunction gcd(a,b){return b?gcd(b,a%b):a;}\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var a = o.l();\n  var ans = a[0];\n  for(var i = 1; i < n; i++){\n    ans = gcd(ans, a[i]);\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03200_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x52ef50 = a0_0x27ac;\nfunction a0_0x4239() {\n    const _0x171806 = [\n        'split',\n        'filter',\n        'map',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4239 = function () {\n        return _0x171806;\n    };\n    return a0_0x4239();\n}\nfunction a0_0x27ac(pXLvJF, key) {\n    const stringArray = a0_0x4239();\n    a0_0x27ac = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x27ac(pXLvJF, key);\n}\nfunction main(input) {\n    const _0x39c20f = a0_0x27ac;\n    const inputs = input[_0x39c20f(0x0)]('\\x0a')[_0x39c20f(0x1)](x => x !== '');\n    const s = inputs[0x0];\n    const result = s[_0x39c20f(0x0)]('')[_0x39c20f(0x2)]((input, index) => input === 'W' ? index : -0x1)['filter'](x => x !== -0x1)['reduce']((acc, cur, index) => acc + cur - index, 0x0);\n    console[_0x39c20f(0x3)](result);\n}\nmain(require('fs')['readFileSync'](a0_0x52ef50(0x4), a0_0x52ef50(0x5)));", "test_cases": [["BBW", "2"], ["BWBWBW", "6"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n  const s = inputs[0];\n\n  const result = s\n    .split(\"\")\n    .map((input, index) => (input === \"W\" ? index : -1))\n    .filter(x => x !== -1)\n    .reduce((acc, cur, index) => acc + cur - index, 0);\n\n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03244_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x22fad1 = a0_0x2982;\nfunction a0_0x3d5e() {\n    const _0x59efaf = [\n        'shift',\n        'split',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3d5e = function () {\n        return _0x59efaf;\n    };\n    return a0_0x3d5e();\n}\nfunction Main(input) {\n    const _0x5c3cd5 = a0_0x2982;\n    let lines = input['split']('\\x0a');\n    let N = lines['shift']() - 0x0;\n    let V = lines[_0x5c3cd5(0x0)]()[_0x5c3cd5(0x1)](/\\s/)['map'](v => v - 0x0);\n    let ans = 0x0;\n    for (let n = 0x0; n < N - 0x2; n++) {\n        if (V[n] == V[n + 0x1])\n            ans += 0x1;\n        if (V[n] != V[n + 0x2])\n            ans += 0x1;\n    }\n    console['log'](ans);\n}\nfunction a0_0x2982(AjyAbT, key) {\n    const stringArray = a0_0x3d5e();\n    a0_0x2982 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2982(AjyAbT, key);\n}\nMain(require('fs')[a0_0x22fad1(0x2)](a0_0x22fad1(0x3), 'utf8'));", "test_cases": [["4\n3 1 3 2", "1"], ["6\n105 119 105 119 105 119", "0"], ["4\n1 1 1 1", "2"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let N = lines.shift() - 0;\n    let V = lines.shift().split(/\\s/).map((v) => v - 0);\n    let ans = 0;\n    for (let n = 0; n < N - 2; n++) {\n        if (V[n] == V[n+1]) ans += 1;\n        if (V[n] != V[n+2]) ans += 1;\n    }\n    console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03250_1", "type": "JavaScript", "obfuscated": "var a0_0x5e7bf6 = a0_0x1a1e;\nfunction a0_0x1a1e(SuCHMc, key) {\n    var stringArray = a0_0x3129();\n    a0_0x1a1e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a1e(SuCHMc, key);\n}\nfunction main(input) {\n    var _0x1e601e = a0_0x1a1e;\n    abc = input['split']('\\x20');\n    abc = abc[_0x1e601e(0x0)]();\n    a = '';\n    a += abc[0x2];\n    a += abc[0x1];\n    a = parseInt(a, 0xa);\n    b = parseInt(abc[0x0], 0xa);\n    console['log'](a + b);\n}\nmain(require('fs')[a0_0x5e7bf6(0x1)](a0_0x5e7bf6(0x2), a0_0x5e7bf6(0x3)));\nfunction a0_0x3129() {\n    var _0x42d968 = [\n        'sort',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3129 = function () {\n        return _0x42d968;\n    };\n    return a0_0x3129();\n}", "test_cases": [["1 5 2", "53"], ["9 9 9", "108"], ["6 6 7", "82"]], "original": "\nfunction main(input){\n    abc=input.split(' ');\n    abc=abc.sort()\n    a=''\n    a+=abc[2]\n    a+=abc[1]\n    a=parseInt(a,10)\n    b=parseInt(abc[0],10)\n    console.log(a+b)\n    \n\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03274_1", "type": "JavaScript", "obfuscated": "function a0_0x9b62(ZVQyaR, key) {\n    var stringArray = a0_0x7699();\n    a0_0x9b62 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9b62(ZVQyaR, key);\n}\nvar a0_0x126b1a = a0_0x9b62;\nfunction a0_0x7699() {\n    var _0xf9ae3b = [\n        'abs',\n        'ZlvUr',\n        'split',\n        'min',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7699 = function () {\n        return _0xf9ae3b;\n    };\n    return a0_0x7699();\n}\nfunction get_run_length(min, max) {\n    var _0x410458 = a0_0x9b62;\n    var result = 0x0;\n    if (max > Math[_0x410458(0x0)](min)) {\n        if (_0x410458(0x1) !== _0x410458(0x1)) {\n            result = Math['abs'](min) + max * 0x2;\n        } else {\n            result = Math[_0x410458(0x0)](min * 0x2) + max;\n        }\n    } else {\n        result = Math['abs'](min) + max * 0x2;\n    }\n    if (min >= 0x0) {\n        result = max;\n    }\n    if (max <= 0x0) {\n        result = Math[_0x410458(0x0)](min);\n    }\n    return result;\n}\nfunction main(input) {\n    var _0x50cbb9 = a0_0x9b62;\n    const lines = input[_0x50cbb9(0x2)]('\\x0a');\n    const N = parseInt(lines[0x0][_0x50cbb9(0x2)]('\\x20')[0x0]);\n    const K = parseInt(lines[0x0][_0x50cbb9(0x2)]('\\x20')[0x1]);\n    const Xs = lines[0x1][_0x50cbb9(0x2)]('\\x20')['map'](x => parseInt(x));\n    var result = 0x989680;\n    for (var i = 0x0; i < N - K + 0x1; i++) {\n        var min = Xs[i];\n        var max = Xs[i + K - 0x1];\n        var tmp = get_run_length(min, max);\n        result = Math[_0x50cbb9(0x3)](tmp, result);\n    }\n    console[_0x50cbb9(0x4)](result);\n}\nmain(require('fs')['readFileSync'](a0_0x126b1a(0x5), a0_0x126b1a(0x6)));", "test_cases": [["5 3\n-30 -10 10 20 50", "40"], ["3 2\n10 20 30", "20"], ["1 1\n0", "0"], ["8 5\n-9 -7 -4 -3 1 2 3 4", "10"]], "original": "function get_run_length(min, max){\n  var result = 0;\n\n  if(max > Math.abs(min)){\n    result = Math.abs(min*2) + max;\n  }else{\n    result = Math.abs(min) + max*2;\n  }\n\n  if(min>=0){result = max;}\n  if(max<=0){result = Math.abs(min);}\n\n  return result;\n}\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = parseInt(lines[0].split(' ')[0]);\n  const K = parseInt(lines[0].split(' ')[1]);\n  const Xs = lines[1].split(' ').map(x => parseInt(x))\n\n  var result = 1e7;\n  for(var i=0;i<N-K+1;i++){\n    var min = Xs[i];\n    var max = Xs[i+K-1];\n\n   var tmp = get_run_length(min, max);\n    result = Math.min(tmp, result);\n    //console.log([i,result,min,max]);\n  }\n\n  console.log(result);\n}\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03338_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x19ec(OwRJHx, key) {\n    const stringArray = a0_0x4a90();\n    a0_0x19ec = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19ec(OwRJHx, key);\n}\nconst a0_0xea4bfe = a0_0x19ec;\nconst main = arg => {\n    const _0x539f8b = a0_0x19ec;\n    arg = arg[_0x539f8b(0x0)]()[_0x539f8b(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0][_0x539f8b(0x1)]('\\x20')[0x0]);\n    const S = arg[0x1][_0x539f8b(0x1)]('');\n    const charset = new Set(S);\n    const chars = [...charset];\n    let answer = 0x0;\n    for (let i in S) {\n        const first = S[_0x539f8b(0x2)](0x0, i);\n        const last = S[_0x539f8b(0x2)](i, S[_0x539f8b(0x3)]);\n        let temp = 0x0;\n        for (let j in chars) {\n            if (first[_0x539f8b(0x4)](chars[j]) !== -0x1 && last['indexOf'](chars[j]) !== -0x1) {\n                temp++;\n            }\n        }\n        answer = Math['max'](answer, temp);\n    }\n    console[_0x539f8b(0x5)](answer);\n};\nmain(require('fs')['readFileSync'](a0_0xea4bfe(0x6), 'utf8'));\nfunction a0_0x4a90() {\n    const _0x5cdc52 = [\n        'trim',\n        'split',\n        'slice',\n        'length',\n        'indexOf',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x4a90 = function () {\n        return _0x5cdc52;\n    };\n    return a0_0x4a90();\n}", "test_cases": [["6\naabbca", "2"], ["10\naaaaaaaaaa", "1"], ["45\ntgxgdqkyjzhyputjjtllptdfxocrylqfqjynmfbfucbir", "9"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const S = arg[1].split(\"\");\n    \n    const charset = new Set(S);\n    const chars = [...charset];\n    \n    let answer = 0;\n    \n    for(let i in S) {\n        const first = S.slice(0, i);\n        const last  = S.slice(i, S.length);\n        \n        let temp = 0;\n        \n        for(let j in chars) {\n            if(first.indexOf(chars[j]) !== -1 && last.indexOf(chars[j]) !== -1) {\n                temp++;\n            } \n        }\n        \n        // console.log(first);\n        // console.log(last);\n        // console.log(\"---\");\n        answer = Math.max(answer, temp);\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03495_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x206d10 = a0_0x7b93;\nfunction a0_0x7b93(HUNSEu, key) {\n    const stringArray = a0_0x43c9();\n    a0_0x7b93 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7b93(HUNSEu, key);\n}\nfunction main(s) {\n    const _0x427f35 = a0_0x7b93;\n    s = s[_0x427f35(0x0)]('\\x0a');\n    const K = Number(s[0x0][_0x427f35(0x0)]('\\x20')[0x1]);\n    const balls = s[0x1][_0x427f35(0x0)]('\\x20')[_0x427f35(0x1)](el => Number(el));\n    const countBucket = [...Array(0x30d41)][_0x427f35(0x2)](0x0);\n    for (const num of balls) {\n        countBucket[num] += 0x1;\n    }\n    countBucket[_0x427f35(0x3)]((a, b) => b - a);\n    const answer = countBucket['slice'](K)[_0x427f35(0x4)]((a, b) => a + b);\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x206d10(0x5)));\nfunction a0_0x43c9() {\n    const _0x5c222d = [\n        'split',\n        'map',\n        'fill',\n        'sort',\n        'reduce',\n        'utf8'\n    ];\n    a0_0x43c9 = function () {\n        return _0x5c222d;\n    };\n    return a0_0x43c9();\n}", "test_cases": [["5 2\n1 1 2 2 5", "1"], ["4 4\n1 1 2 2", "0"], ["10 3\n5 1 3 2 4 1 1 2 3 4", "3"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n  const K = Number(s[0].split(' ')[1]);\n  const balls = s[1].split(' ').map(el => Number(el));\n  const countBucket = [...Array(200001)].fill(0);\n\n  for (const num of balls) {\n    countBucket[num] += 1;\n  }\n\n  countBucket.sort((a, b) => b - a);\n\n  const answer = countBucket.slice(K).reduce((a, b) => a + b);\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03962_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x199217 = a0_0xd852;\nconst lines = require('fs')['readFileSync'](a0_0x199217(0x0), a0_0x199217(0x1))[a0_0x199217(0x2)]()[a0_0x199217(0x3)]('');\nfunction a0_0x2def() {\n    const _0x504759 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x2def = function () {\n        return _0x504759;\n    };\n    return a0_0x2def();\n}\nif (lines[0x0] === lines[0x1] && lines[0x1] === lines[0x2]) {\n    console[a0_0x199217(0x4)](0x1);\n}\nif (lines[0x0] === lines[0x1] && lines[0x1] !== lines[0x2]) {\n    console[a0_0x199217(0x4)](0x2);\n}\nif (lines[0x0] === lines[0x2] && lines[0x0] !== lines[0x1]) {\n    console[a0_0x199217(0x4)](0x2);\n}\nfunction a0_0xd852(gISXBQ, key) {\n    const stringArray = a0_0x2def();\n    a0_0xd852 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xd852(gISXBQ, key);\n}\nif (lines[0x1] === lines[0x2] && lines[0x0] !== lines[0x1]) {\n    console[a0_0x199217(0x4)](0x2);\n}\nif (lines[0x0] !== lines[0x1] && lines[0x1] !== lines[0x2] && lines[0x2] !== lines[0x0]) {\n    console[a0_0x199217(0x4)](0x3);\n}", "test_cases": [["3 1 4", "3"], ["3 3 33", "2"]], "original": "'use strict';\n\nconst lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\");\n\nif (lines[0]===lines[1] && lines[1]===lines[2]){\n  console.log(1);\n}\nif (lines[0]===lines[1] && lines[1]!==lines[2]){\n  console.log(2);\n}\nif (lines[0]===lines[2] && lines[0]!==lines[1]){\n  console.log(2);\n}\nif (lines[1]===lines[2] && lines[0]!==lines[1]){\n  console.log(2);\n}\nif (lines[0]!==lines[1] && lines[1]!==lines[2] && lines[2]!==lines[0]) {\n  console.log(3);\n}", "language": "JavaScript"}
{"filename": "p02623_1", "type": "JavaScript", "obfuscated": "const a0_0x16df57 = a0_0x2574;\nfunction a0_0x4605() {\n    const _0x1942a6 = [\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4605 = function () {\n        return _0x1942a6;\n    };\n    return a0_0x4605();\n}\nfunction compareFunc(a, b) {\n    return a - b;\n}\nfunction main(input) {\n    const _0x1e6d6c = a0_0x2574;\n    let args = input[_0x1e6d6c(0x0)](/\\n/);\n    let books = [\n        ...args[0x1][_0x1e6d6c(0x0)](/\\s/),\n        ...args[0x2][_0x1e6d6c(0x0)](/\\s/)\n    ];\n    let time = args[0x0][_0x1e6d6c(0x0)](/\\s/)[0x2];\n    let result = 0x0;\n    books['sort'](compareFunc);\n    for (let i = 0x0; i < books['length']; i++) {\n        if (time >= books[i] * 0x1) {\n            time -= books[i];\n            result++;\n        }\n    }\n    console['log'](result);\n}\nfunction a0_0x2574(zXTAFS, key) {\n    const stringArray = a0_0x4605();\n    a0_0x2574 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2574(zXTAFS, key);\n}\nmain(require('fs')[a0_0x16df57(0x1)](a0_0x16df57(0x2), a0_0x16df57(0x3)));", "test_cases": [["3 4 240\n60 90 120\n80 150 80 150", "3"], ["3 4 730\n60 90 120\n80 150 80 150", "7"], ["5 4 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000", "0"]], "original": "function compareFunc(a, b) {\n  return a - b;\n}\n\nfunction main(input) {\n  let args = input.split(/\\n/);\n  let books = [...args[1].split(/\\s/), ...args[2].split(/\\s/)];\n  let time = args[0].split(/\\s/)[2];\n  let result = 0;\n  books.sort(compareFunc);\n  for (let i = 0;i < books.length;i++) {\n    if (time >= books[i] * 1) {\n      time -= books[i];\n      result++;\n    }\n  }\n  console.log(result);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02732_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x229f6b = a0_0x469a;\nfunction a0_0x469a(yDYIdK, key) {\n    const stringArray = a0_0x32f9();\n    a0_0x469a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x469a(yDYIdK, key);\n}\nfunction a0_0x32f9() {\n    const _0x10326c = [\n        'trim',\n        'split',\n        'map',\n        'MqQAe',\n        'keys',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x32f9 = function () {\n        return _0x10326c;\n    };\n    return a0_0x32f9();\n}\nconst combi = function (n) {\n    return n * (n - 0x1) / 0x2;\n};\nconst main = arg => {\n    const _0x265124 = a0_0x469a;\n    const input = arg[_0x265124(0x0)]()[_0x265124(0x1)]('\\x0a');\n    const N = parseInt(input[0x0][_0x265124(0x1)]('\\x20')[0x0]);\n    const A = input[0x1][_0x265124(0x1)]('\\x20')[_0x265124(0x2)](n => parseInt(n));\n    let m = {};\n    for (let i = 0x0; i < A['length']; i++) {\n        if ('MqQAe' !== _0x265124(0x3)) {\n            if (!m[A[i]])\n                m[A[i]] = 0x1;\n            else\n                m[A[i]]++;\n        } else {\n            if (!m[A[i]])\n                m[A[i]] = 0x1;\n            else\n                m[A[i]]++;\n        }\n    }\n    let orgCnt = 0x0;\n    let keys = Object[_0x265124(0x4)](m);\n    for (let i = 0x0; i < keys[_0x265124(0x5)]; i++) {\n        orgCnt = orgCnt + combi(m[keys[i]]);\n    }\n    for (let i = 0x0; i < A[_0x265124(0x5)]; i++) {\n        let num = m[A[i]];\n        const diff = combi(num) - combi(num - 0x1);\n        console[_0x265124(0x6)](orgCnt - diff);\n    }\n};\nmain(require('fs')[a0_0x229f6b(0x7)]('/dev/stdin', a0_0x229f6b(0x8)));", "test_cases": [["5\n1 1 2 1 2", "2\n2\n3\n2\n3"], ["4\n1 2 3 4", "0\n0\n0\n0"], ["5\n3 3 3 3 3", "6\n6\n6\n6\n6"], ["8\n1 2 1 4 2 1 4 1", "5\n7\n5\n7\n7\n5\n7\n5"]], "original": "\"use strict\";\nconst combi = function(n){\n    return n*(n-1)/2\n}\n\nconst main = arg => {\n    const input = arg.trim().split(\"\\n\");\n\n    const N = parseInt(input[0].split(\" \")[0]);\n    const A = input[1].split(\" \").map(n => parseInt(n));\n\n    let m = {}\n    for(let i = 0; i<A.length; i++){\n        if(!m[A[i]]) m[A[i]] = 1\n        else m[A[i]]++\n    }\n    let orgCnt = 0\n    let keys = Object.keys(m)\n    for(let i = 0; i<keys.length; i++){\n        orgCnt = orgCnt + combi(m[keys[i]])\n    }\n\n    for(let i = 0; i<A.length; i++){\n        let num = m[A[i]]\n        const diff = combi(num) - combi(num-1)\n        console.log(orgCnt-diff)\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02767_1", "type": "JavaScript", "obfuscated": "var a0_0x5911c9 = a0_0xe8ed;\nfunction Main(input) {\n    var _0x1d1ec9 = a0_0xe8ed;\n    input = input[_0x1d1ec9(0x0)]('\\x0a');\n    var inputs = input[0x1][_0x1d1ec9(0x0)]('\\x20');\n    function avg(args) {\n        var _0x2b0041 = a0_0xe8ed;\n        var num = 0x0;\n        for (var n of args) {\n            num += Number(n);\n        }\n        return num / args[_0x2b0041(0x1)];\n    }\n    var average = Math[_0x1d1ec9(0x2)](avg(inputs));\n    var useStamina = 0x0;\n    for (var point of inputs) {\n        useStamina += Math[_0x1d1ec9(0x3)](average - point, 0x2);\n    }\n    console[_0x1d1ec9(0x4)](useStamina);\n}\nfunction a0_0x24fd() {\n    var _0x16c3df = [\n        'split',\n        'length',\n        'round',\n        'pow',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x24fd = function () {\n        return _0x16c3df;\n    };\n    return a0_0x24fd();\n}\nfunction a0_0xe8ed(Doauhr, key) {\n    var stringArray = a0_0x24fd();\n    a0_0xe8ed = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe8ed(Doauhr, key);\n}\nMain(require('fs')[a0_0x5911c9(0x5)](a0_0x5911c9(0x6), 'utf8'));", "test_cases": [["2\n1 4", "5"], ["7\n14 14 2 13 56 2 37", "2354"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  var inputs = input[1].split(\" \");\n\n  // argsは配列\n  function avg(args) {\n    var num = 0;\n    for(var n of args) {\n      num += Number(n);\n    }\n    return num / args.length;\n  }\n  var average = Math.round(avg(inputs));\n  // console.log(average);\n\n  var useStamina = 0;\n  for(var point of inputs) {\n    useStamina += Math.pow(average - point, 2);\n  }\n  console.log(useStamina);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main('2\\n1 4');\n// Main('7\\n14 14 2 13 56 2 37');\n", "language": "JavaScript"}
{"filename": "p02802_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x11d9() {\n    const _0x39590a = [\n        'split',\n        'shift',\n        'keys',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x11d9 = function () {\n        return _0x39590a;\n    };\n    return a0_0x11d9();\n}\nconst a0_0x1ffcc4 = a0_0xbeeb;\nfunction Main(input) {\n    const _0x2b335d = a0_0xbeeb;\n    let lines = input[_0x2b335d(0x0)]('\\x0a');\n    let numInfo = lines[_0x2b335d(0x1)]()[_0x2b335d(0x0)]('\\x20')[0x1];\n    let ansObj = {};\n    for (let i = 0x0; i < numInfo; i++) {\n        let quesNum = lines[i][_0x2b335d(0x0)]('\\x20')[0x0];\n        let ansKind = lines[i][_0x2b335d(0x0)]('\\x20')[0x1];\n        if (ansObj[quesNum] === undefined) {\n            ansObj[quesNum] = '' + ansKind;\n        } else {\n            ansObj[quesNum] += ',' + ansKind;\n        }\n    }\n    let WANum = 0x0;\n    let ACNum = 0x0;\n    let ansObjKeys = Object[_0x2b335d(0x2)](ansObj);\n    for (let i = 0x0; i < ansObjKeys[_0x2b335d(0x3)]; i++) {\n        let targetKey = ansObjKeys[i];\n        let target = ansObj[targetKey][_0x2b335d(0x0)](',');\n        for (let j = 0x0; j < target[_0x2b335d(0x3)]; j++) {\n            if (target[j] == 'AC') {\n                ACNum++;\n                break;\n            } else {\n                WANum++;\n            }\n        }\n    }\n    console['log'](ACNum + '\\x20' + WANum);\n}\nfunction a0_0xbeeb(RDVYwX, key) {\n    const stringArray = a0_0x11d9();\n    a0_0xbeeb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xbeeb(RDVYwX, key);\n}\nMain(require('fs')[a0_0x1ffcc4(0x4)](a0_0x1ffcc4(0x5), a0_0x1ffcc4(0x6)));", "test_cases": [["2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA", "2 2"], ["100000 3\n7777 AC\n7777 AC\n7777 AC", "1 0"], ["6 0", "0 0"]], "original": "\"use strict\";\n\nfunction Main(input) {\n  let lines = input.split(\"\\n\");\n  let numInfo = lines.shift().split(\" \")[1];\n  // 答えを調べる用のMap\n  let ansObj = {};\n  for(let i = 0; i < numInfo;i++){\n    \tlet quesNum = lines[i].split(\" \")[0];\n    \tlet ansKind = lines[i].split(\" \")[1];\n    \tif(ansObj[quesNum] === undefined){\n          ansObj[quesNum] = `${ansKind}`;\n        } else {\n        ansObj[quesNum] += `,${ansKind}`;\n        }\n  }\n  let WANum = 0;\n  let ACNum = 0;\n  // objectは直接要素数は取れないらしい\n  // 直線状に解いてるのが良くなかったのでは？\n  let ansObjKeys = Object.keys(ansObj);\n    for(let i = 0; i < ansObjKeys.length; i++){\n      let targetKey = ansObjKeys[i];\n      // 対象を配列として切り出したもの\n      let target = ansObj[targetKey].split(\",\");\n        for(let j = 0; j < target.length; j++){\n          if(target[j] == 'AC') {\n            ACNum++;\n            break;\n          } else {\n            WANum++;\n          } \n        }\n    }\n  console.log(ACNum + \" \" + WANum);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02812_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2565() {\n    const _0x15297d = [\n        'trim',\n        'split',\n        'ABC',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2565 = function () {\n        return _0x15297d;\n    };\n    return a0_0x2565();\n}\nconst a0_0x2155e1 = a0_0x1a75;\nfunction a0_0x1a75(TiLZdh, key) {\n    const stringArray = a0_0x2565();\n    a0_0x1a75 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a75(TiLZdh, key);\n}\nconst Main = input => {\n    const _0x45dc2e = a0_0x1a75;\n    let xs = input[_0x45dc2e(0x0)]()['split']('\\x0a');\n    let N = Number(xs[0x0]);\n    let S = xs[0x1][_0x45dc2e(0x1)]('');\n    let ans = 0x0;\n    for (let i = 0x0; i <= N - 0x3; i++) {\n        if (S[i] + S[i + 0x1] + S[i + 0x2] == _0x45dc2e(0x2)) {\n            ans++;\n        }\n    }\n    console[_0x45dc2e(0x3)](ans);\n};\nMain(require('fs')[a0_0x2155e1(0x4)](a0_0x2155e1(0x5), a0_0x2155e1(0x6)));", "test_cases": [["10\nZABCDBABCQ", "2"], ["19\nTHREEONEFOURONEFIVE", "0"], ["33\nABCCABCBABCCABACBCBBABCBCBCBCABCB", "5"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0]);\n   let S = xs[1].split('');\n   let ans = 0;\n   for(let i=0; i<=N-3; i++){\n   \tif(S[i]+S[i+1]+S[i+2]=='ABC'){\n   \t  ans++\n    }\n   }\n   console.log(ans);\n\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02900_1", "type": "JavaScript", "obfuscated": "var a0_0x4f2734 = a0_0x4904;\nfunction a0_0x4904(nQddIy, key) {\n    var stringArray = a0_0x11fe();\n    a0_0x4904 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4904(nQddIy, key);\n}\nfunction Main(input) {\n    var _0xec971 = a0_0x4904;\n    input = input[_0xec971(0x0)]('\\x20')['map'](x => x * 0x1);\n    function gcd(a1, a2) {\n        return a2 == 0x0 ? a1 : gcd(a2, a1 % a2);\n    }\n    var result = gcd(input[0x0], input[0x1]);\n    var answer = 0x1;\n    for (var i = 0x2; i * i < result; i++) {\n        if (result % i === 0x0) {\n            if (_0xec971(0x1) === _0xec971(0x2)) {\n                if (result % i === 0x0) {\n                    answer++;\n                    while (result % i === 0x0) {\n                        result /= i;\n                    }\n                }\n            } else {\n                answer++;\n                while (result % i === 0x0) {\n                    result /= i;\n                }\n            }\n        }\n    }\n    if (result !== 0x1) {\n        answer++;\n    }\n    console[_0xec971(0x3)](answer);\n}\nfunction a0_0x11fe() {\n    var _0x53707a = [\n        'split',\n        'AwScC',\n        'IlpfP',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x11fe = function () {\n        return _0x53707a;\n    };\n    return a0_0x11fe();\n}\nMain(require('fs')[a0_0x4f2734(0x4)](a0_0x4f2734(0x5), 'utf-8'));", "test_cases": [["12 18", "3"], ["420 660", "4"], ["1 2019", "1"]], "original": "function Main(input) {\n  input = input.split(' ').map(x => x*1);\n   \n  // Eulidean Algorithm\n  function gcd(a1, a2) {\n    return a2 == 0 ? a1 : gcd(a2, a1 % a2);\n  }\n\n  var result = gcd(input[0], input[1]);\n  var answer = 1;\n\n  for(var i = 2; i * i < result; i++) {\n    if(result % i === 0) {\n      answer++;\n      while(result % i === 0) {\n        result /= i;\n      }\n    }\n  }\n  if( result !== 1) {\n    answer++;\n  }\n\n  console.log(answer);\n\n\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf-8'));\n", "language": "JavaScript"}
{"filename": "p02923_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x522b(cmVEUt, key) {\n    const stringArray = a0_0x43d2();\n    a0_0x522b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x522b(cmVEUt, key);\n}\nconst a0_0x3a6102 = a0_0x522b;\nfunction a0_0x43d2() {\n    const _0x3063bd = [\n        'trim',\n        'split',\n        'max',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x43d2 = function () {\n        return _0x3063bd;\n    };\n    return a0_0x43d2();\n}\nfunction Main(input) {\n    const _0x27df88 = a0_0x522b;\n    input = input[_0x27df88(0x0)]()[_0x27df88(0x1)]('\\x0a');\n    const N = Number(input[0x0]);\n    const H = input[0x1][_0x27df88(0x0)]()['split']('\\x20')['map'](Number);\n    let ret = 0x0;\n    let move = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        if (H[i] >= H[i + 0x1]) {\n            move += 0x1;\n        } else {\n            ret = Math[_0x27df88(0x2)](ret, move);\n            move = 0x0;\n        }\n    }\n    console[_0x27df88(0x3)](ret);\n}\nMain(require('fs')['readFileSync'](a0_0x3a6102(0x4), 'utf8'));", "test_cases": [["5\n10 4 8 7 3", "2"], ["7\n4 4 5 6 6 5 5", "3"], ["4\n1 2 3 4", "0"]], "original": "\"use strict\"\n \nfunction Main(input) {\n  input = input.trim().split('\\n');\n  const N = Number(input[0]);\n  const H = input[1].trim().split(' ').map(Number);\n\n  let ret = 0;\n  let move = 0;\n  \n  for(let i=0; i<N; i++){\n    if (H[i] >= H[i+1]) {\n      move += 1;\n    } else {\n      ret = Math.max(ret, move);\n      move = 0;\n    }\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02934_1", "type": "JavaScript", "obfuscated": "function a0_0x45cb(CHcYjZ, key) {\n    var stringArray = a0_0x2d3c();\n    a0_0x45cb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x45cb(CHcYjZ, key);\n}\nvar a0_0xd74d53 = a0_0x45cb;\nfunction Main(input) {\n    var _0x5c44f0 = a0_0x45cb;\n    var input = input[_0x5c44f0(0x0)]('\\x0a');\n    const num = input[0x0];\n    const arr = input[0x1]['split']('\\x20');\n    var a = 0x1;\n    var b = 0x0;\n    arr[_0x5c44f0(0x1)](i => a *= i);\n    for (var i = 0x0; i < arr[_0x5c44f0(0x2)]; i++) {\n        b += a / arr[i];\n    }\n    console[_0x5c44f0(0x3)](a / b);\n}\nMain(require('fs')[a0_0xd74d53(0x4)]('/dev/stdin', a0_0xd74d53(0x5)));\nfunction a0_0x2d3c() {\n    var _0x292170 = [\n        'split',\n        'forEach',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2d3c = function () {\n        return _0x292170;\n    };\n    return a0_0x2d3c();\n}", "test_cases": [["2\n10 30", "7.5"], ["3\n200 200 200", "66.66666666666667"], ["1\n1000", "1000"]], "original": "function Main(input) {\n    var input = input.split(\"\\n\");\n    const num = input[0];\n    const arr = input[1].split(\" \");\n    var a = 1;\n    var b = 0;\n    arr.forEach(i => a *= i);\n    for(var i=0; i<arr.length; i++){\n        b += a / arr[i];\n    }\n    console.log(a/b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02939_1", "type": "JavaScript", "obfuscated": "var a0_0x4e3a23 = a0_0x49c8;\nfunction Main(input) {\n    var _0x2fdf88 = a0_0x49c8;\n    var output = 0x0;\n    var list = [];\n    var output = input['length'];\n    var tmp = '';\n    for (var i = input['length'] - 0x1; i >= 0x0; i--) {\n        var tmp2 = input['slice'](i, i + 0x1);\n        if (list[_0x2fdf88(0x0)] == 0x0) {\n            list['push'](tmp2);\n            continue;\n        } else {\n            var tmp1 = list[list[_0x2fdf88(0x0)] - 0x1];\n            if (tmp1 == tmp2) {\n                list[_0x2fdf88(0x1)](input[_0x2fdf88(0x2)](i - 0x1, i) + tmp2);\n                i--;\n            } else {\n                list[_0x2fdf88(0x1)](tmp2);\n            }\n        }\n    }\n    output = list[_0x2fdf88(0x0)];\n    var first = input[_0x2fdf88(0x2)](0x0, 0x1);\n    var second = input['slice'](0x1, 0x2);\n    if (first == second) {\n        output--;\n    }\n    console['log'](output['toString']());\n}\nfunction a0_0x49c8(vWQqTg, key) {\n    var stringArray = a0_0x194f();\n    a0_0x49c8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x49c8(vWQqTg, key);\n}\nMain(require('fs')[a0_0x4e3a23(0x3)](a0_0x4e3a23(0x4), 'utf8'));\nfunction a0_0x194f() {\n    var _0x2f1a5f = [\n        'length',\n        'push',\n        'slice',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x194f = function () {\n        return _0x2f1a5f;\n    };\n    return a0_0x194f();\n}", "test_cases": [["aabbaa", "4"], ["aaaccacabaababc", "12"]], "original": "function Main(input) {\n  var output = 0;\n  var list = [];\n  var output = input.length;\n  var tmp = \"\";\n  for(var i = input.length - 1; i >= 0; i--){\n    var tmp2 = input.slice(i, i + 1);\n    if(list.length == 0){\n      list.push(tmp2);\n      continue;\n    }else{\n      var tmp1 = list[list.length - 1];\n      if(tmp1 == tmp2){\n         list.push(input.slice(i - 1, i) + tmp2);\n        i--;\n      }else{\n        list.push(tmp2);\n      }\n    }\n  }\n  output = list.length;\n  var first = input.slice(0, 1);\n  var second = input.slice(1, 2);\n  if(first == second){\n     output--;\n  }\n  \n  console.log(output.toString());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02959_1", "type": "JavaScript", "obfuscated": "var a0_0x564fec = a0_0x11c0;\nfunction a0_0x5b54() {\n    var _0x59e3be = [\n        'split',\n        'map',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5b54 = function () {\n        return _0x59e3be;\n    };\n    return a0_0x5b54();\n}\nfunction a0_0x11c0(ahXCVw, key) {\n    var stringArray = a0_0x5b54();\n    a0_0x11c0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x11c0(ahXCVw, key);\n}\nfunction Main(input) {\n    var _0x5392e0 = a0_0x11c0;\n    input = input[_0x5392e0(0x0)]('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var a = input[0x1][_0x5392e0(0x0)]('\\x20');\n    a = a[_0x5392e0(0x1)](str => parseInt(str, 0xa));\n    var b = input[0x2][_0x5392e0(0x0)]('\\x20');\n    b = b['map'](str => parseInt(str, 0xa));\n    var count = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var atarget = a[i] + a[i + 0x1];\n        var rest = atarget - b[i];\n        if (rest < 0x0) {\n            count += atarget;\n            a[i + 0x1] = 0x0;\n        } else {\n            count += b[i];\n            a[i + 0x1] = Math[_0x5392e0(0x2)](rest, a[i + 0x1]);\n        }\n    }\n    console[_0x5392e0(0x3)](count);\n}\nMain(require('fs')[a0_0x564fec(0x4)](a0_0x564fec(0x5), a0_0x564fec(0x6)));", "test_cases": [["2\n3 5 2\n4 5", "9"], ["3\n5 6 3 8\n5 100 8", "22"], ["2\n100 1 1\n1 100", "3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0], 10);\n    var a = input[1].split(\" \");\n    a = a.map(str => parseInt(str, 10));\n    var b = input[2].split(\" \");\n    b = b.map(str => parseInt(str, 10));\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        var atarget = a[i] + a[i+1];\n        var rest = atarget - b[i];\n        if(rest < 0){\n            count += atarget;\n            a[i+1] = 0;\n        }else{\n            count += b[i];\n            a[i+1] = Math.min(rest,a[i+1]); \n        }\n    }\n\t//出力\n\tconsole.log(count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02983_1", "type": "JavaScript", "obfuscated": "const a0_0x3e4c8e = a0_0x3639;\nfunction a0_0x3639(aTFppU, key) {\n    const stringArray = a0_0x5707();\n    a0_0x3639 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3639(aTFppU, key);\n}\nfunction Main(input) {\n    const _0x15fc78 = a0_0x3639;\n    input = input[_0x15fc78(0x0)]('\\x0a');\n    inputStr = input[0x0]['split']('\\x20');\n    const L = Number['parseInt'](inputStr[0x0]);\n    const R = Number[_0x15fc78(0x1)](inputStr[0x1]);\n    var min = 0x7e2;\n    if (L * R > 0x7e3) {\n        if (R - L < 0x7e3) {\n            const L2 = L % 0x7e3;\n            const R2 = R % 0x7e3;\n            for (var i1 = L2; i1 < R2; i1++) {\n                for (var i2 = i1 + 0x1; i2 < R2 + 0x1; i2++) {\n                    min = Math[_0x15fc78(0x2)](min, i1 * i2 % 0x7e3);\n                    if (min === 0x0) {\n                        break;\n                    }\n                }\n            }\n            console['log'](min);\n        } else {\n            console[_0x15fc78(0x3)](0x0);\n        }\n    } else {\n        console['log'](L * (L + 0x1));\n    }\n}\nMain(require('fs')[a0_0x3e4c8e(0x4)](a0_0x3e4c8e(0x5), 'utf8'));\nfunction a0_0x5707() {\n    const _0x2374c7 = [\n        'split',\n        'parseInt',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x5707 = function () {\n        return _0x2374c7;\n    };\n    return a0_0x5707();\n}", "test_cases": [["2020 2040", "2"], ["4 5", "20"]], "original": "function Main(input){\n  input = input.split(\"\\n\");\n  inputStr = input[0].split(\" \");\n  const L = Number.parseInt(inputStr[0]);\n  const R = Number.parseInt(inputStr[1]);\n  \n  var min = 2018;  \n  if ( L * R > 2019){\n    if ( R - L < 2019) {\n      const L2 = L % 2019;\n      const R2 = R % 2019;\n       \n      for(var i1 = L2; i1 < R2; i1++){\n        for(var i2 = i1+1 ; i2 < R2+1 ; i2++){\n          min = Math.min(min,i1 * i2 % 2019);\n          if(min === 0) { break; }\n        }\n      }\n\t  console.log(min);\n    } else {\n      console.log(0);\n    }\n  } else {\n    //LとRの積が2019を超えないなら計算する必要がない\n    console.log(L * (L+1));\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03012_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1b9692 = a0_0x78df;\nfunction a0_0x78df(LtAzni, key) {\n    const stringArray = a0_0x470c();\n    a0_0x78df = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x78df(LtAzni, key);\n}\nconst INF = 0x3333333333333;\nfunction a0_0x470c() {\n    const _0x3d1672 = [\n        'split',\n        'map',\n        'abs',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x470c = function () {\n        return _0x3d1672;\n    };\n    return a0_0x470c();\n}\nfunction mapint(temp) {\n    const _0x5df64c = a0_0x78df;\n    return temp[_0x5df64c(0x0)]('\\x20')[_0x5df64c(0x1)](v => parseInt(v));\n}\nfunction Main(input) {\n    const _0x35e38a = a0_0x78df;\n    let temp = input['trim']()['split']('\\x0a');\n    let n = parseInt(temp[0x0]);\n    let w = mapint(temp[0x1]);\n    let s1 = w[0x0];\n    let s2 = 0x0;\n    for (let i = 0x1; i < n; i++) {\n        s2 += w[i];\n    }\n    let sa = Math[_0x35e38a(0x2)](s1 - s2);\n    let sa2;\n    for (let i = 0x1; i < n; i++) {\n        s1 += w[i];\n        s2 -= w[i];\n        sa = Math['min'](sa, Math[_0x35e38a(0x2)](s1 - s2));\n    }\n    console[_0x35e38a(0x3)](sa);\n}\nMain(require('fs')[a0_0x1b9692(0x4)]('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3", "0"], ["4\n1 3 1 1", "2"], ["8\n27 23 76 2 3 5 62 52", "2"]], "original": "'use strict'\n\nconst INF = 900719925474099;\nfunction mapint(temp){\n    return temp.split(' ').map((v)=>parseInt(v));\n}\n\nfunction Main(input){\n    let temp = input.trim().split('\\n');\n    let n = parseInt(temp[0]);\n    let w = mapint(temp[1]);\n\n    let s1 = w[0];\n    let s2 = 0;\n    for(let i=1;i<n;i++){\n        s2+=w[i];\n    }\n    let sa = Math.abs(s1-s2);\n    let sa2;\n    for(let i=1;i<n;i++){\n        s1+=w[i];\n        s2-=w[i];\n\n        sa = Math.min(sa,Math.abs(s1-s2));\n    }\n    console.log(sa);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03053_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x4270() {\n    var _0x33896f = [\n        'split',\n        'shift',\n        'length',\n        'VQsnI',\n        'aTZcg',\n        'push',\n        'MAX_SAFE_INTEGER',\n        'abs',\n        'YDDnc',\n        'fMUtI',\n        'JLTDN',\n        'daLfp',\n        'hBycQ',\n        'vJvRv',\n        'log',\n        'max',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4270 = function () {\n        return _0x33896f;\n    };\n    return a0_0x4270();\n}\nvar a0_0x5ac857 = a0_0x2f97;\nfunction a0_0x2f97(NqSHaZ, key) {\n    var stringArray = a0_0x4270();\n    a0_0x2f97 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f97(NqSHaZ, key);\n}\nfunction main(arg) {\n    var _0x1fd12e = a0_0x2f97;\n    arg = arg['trim']()[_0x1fd12e(0x0)]('\\x0a');\n    arg[_0x1fd12e(0x1)]();\n    var H = arg['length'];\n    var W = arg[0x0][_0x1fd12e(0x2)];\n    var m1 = [];\n    for (var i = 0x0; i < arg['length']; i++) {\n        if (_0x1fd12e(0x3) !== _0x1fd12e(0x4)) {\n            m1[_0x1fd12e(0x5)](arg[i]['split'](''));\n        } else {\n            var minD = Number[_0x1fd12e(0x6)];\n            for (var i = 0x0; i < slist[_0x1fd12e(0x2)]; i++) {\n                var _y = slist[i][0x0];\n                var _x = slist[i][0x1];\n                var d = Math[_0x1fd12e(0x7)](_y - y) + Math[_0x1fd12e(0x7)](_x - x);\n                if (d < minD) {\n                    minD = d;\n                }\n            }\n            tmp[_0x1fd12e(0x5)](minD);\n        }\n    }\n    var i = 0x0;\n    var slist = [];\n    for (var y = 0x0; y < H; y++)\n        for (var x = 0x0; x < W; x++) {\n            if (_0x1fd12e(0x8) !== _0x1fd12e(0x9)) {\n                if (m1[y][x] === '#') {\n                    if (_0x1fd12e(0xa) !== _0x1fd12e(0xb)) {\n                        slist[_0x1fd12e(0x5)]([\n                            y,\n                            x\n                        ]);\n                    } else {\n                        slist[_0x1fd12e(0x5)]([\n                            y,\n                            x\n                        ]);\n                    }\n                }\n            } else {\n                var _y = slist[i][0x0];\n                var _x = slist[i][0x1];\n                var d = Math[_0x1fd12e(0x7)](_y - y) + Math[_0x1fd12e(0x7)](_x - x);\n                if (d < minD) {\n                    minD = d;\n                }\n            }\n        }\n    var tmp = [];\n    for (var y = 0x0; y < H; y++)\n        for (var x = 0x0; x < W; x++) {\n            if (m1[y][x] === '.') {\n                if ('hBycQ' === _0x1fd12e(0xc)) {\n                    var minD = Number['MAX_SAFE_INTEGER'];\n                    for (var i = 0x0; i < slist['length']; i++) {\n                        if (_0x1fd12e(0xd) !== _0x1fd12e(0xd)) {\n                            m1['push'](arg[i][_0x1fd12e(0x0)](''));\n                        } else {\n                            var _y = slist[i][0x0];\n                            var _x = slist[i][0x1];\n                            var d = Math['abs'](_y - y) + Math['abs'](_x - x);\n                            if (d < minD) {\n                                minD = d;\n                            }\n                        }\n                    }\n                    tmp[_0x1fd12e(0x5)](minD);\n                } else {\n                    if (m1[y][x] === '#') {\n                        slist[_0x1fd12e(0x5)]([\n                            y,\n                            x\n                        ]);\n                    }\n                }\n            }\n        }\n    console[_0x1fd12e(0xe)](Math[_0x1fd12e(0xf)](...tmp));\n}\nmain(require('fs')[a0_0x5ac857(0x10)](a0_0x5ac857(0x11), 'utf8'));", "test_cases": [["3 3\n...\n.#.\n...", "2"], ["6 6\n..#..#\n......\n#..#..\n......\n.#....\n....#.", "3"]], "original": "\"use strict\"\n\nfunction main(arg) {\n    arg = arg.trim().split(\"\\n\")\n    arg.shift()\n    var H = arg.length\n    var W = arg[0].length\n    var m1 = []\n    for (var i = 0; i < arg.length; i++) {\n        m1.push(arg[i].split(''))\n    }\n    var i = 0\n    var slist = []\n    for (var y = 0; y < H; y++) for (var x = 0; x < W; x++) {\n        if (m1[y][x] === '#') {\n            slist.push([y, x])\n        }\n    }\n    var tmp = []\n    for (var y = 0; y < H; y++) for (var x = 0; x < W; x++) {\n        if (m1[y][x] === '.') {\n            var minD = Number.MAX_SAFE_INTEGER\n            for (var i = 0; i < slist.length; i++) {\n                var _y = slist[i][0]\n                var _x = slist[i][1]\n                var d = Math.abs(_y - y) + Math.abs(_x - x)\n                if (d < minD) {\n                    minD = d\n                }\n            }\n            tmp.push(minD)\n        }\n    }\n    console.log(Math.max(...tmp))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03080_1", "type": "JavaScript", "obfuscated": "const a0_0x185f94 = a0_0xf7e9;\nfunction Main(input) {\n    const _0x48b607 = a0_0xf7e9;\n    let Red = 0x0;\n    let Blue = 0x0;\n    const input_line = input[_0x48b607(0x0)]('\\x0a');\n    inputS = input_line[0x1][_0x48b607(0x0)]('');\n    for (i = 0x0; i < inputS[_0x48b607(0x1)]; i++) {\n        if (inputS[i] === 'R') {\n            Red++;\n        } else {\n            Blue++;\n        }\n    }\n    console[_0x48b607(0x2)](Red > Blue ? 'Yes' : 'No');\n}\nMain(require('fs')['readFileSync'](a0_0x185f94(0x3), a0_0x185f94(0x4)));\nfunction a0_0xf7e9(NXRTvi, key) {\n    const stringArray = a0_0xf181();\n    a0_0xf7e9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xf7e9(NXRTvi, key);\n}\nfunction a0_0xf181() {\n    const _0x44d7c7 = [\n        'split',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xf181 = function () {\n        return _0x44d7c7;\n    };\n    return a0_0xf181();\n}", "test_cases": [["4\nRRBR", "Yes"], ["4\nBRBR", "No"]], "original": "function Main(input){\n  let Red = 0;\n  let Blue = 0;\n  const input_line = input.split('\\n');\n  inputS = input_line[1].split('');\n  for (i = 0; i < inputS.length; i++) {\n    if (inputS[i] === 'R'){\n      Red++;\n    }else {\n      Blue++;\n    }\n  }\n//  inputS.forEach((s) => {\n//    if (s === 'R'){\n//      console.log(\"Red++\");\n//      Red++;\n//    } else {\n//      console.log(\"Blue++\");\n//      Blue++;\n//    }\n//  });\n  console.log(Red > Blue ? \"Yes\" : \"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03161_1", "type": "JavaScript", "obfuscated": "const a0_0x1a4fde = a0_0xc931;\nfunction a0_0x393b() {\n    const _0xbbf5e3 = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'push',\n        'abs',\n        'min'\n    ];\n    a0_0x393b = function () {\n        return _0xbbf5e3;\n    };\n    return a0_0x393b();\n}\nfunction Main(input) {\n    const _0x1054af = a0_0xc931;\n    input = input[_0x1054af(0x0)]('\\x0a');\n    const [N, K] = input[0x0]['split']('\\x20')[_0x1054af(0x1)](n => {\n        return parseInt(n, 0xa);\n    });\n    const hn = input[0x1][_0x1054af(0x0)]('\\x20')[_0x1054af(0x1)](n => {\n        return parseInt(n, 0xa);\n    });\n    const h_max = Math['pow'](0xa, 0x9);\n    console[_0x1054af(0x2)](dp(N, K, hn, h_max));\n}\nMain(require('fs')[a0_0x1a4fde(0x3)](a0_0x1a4fde(0x4), a0_0x1a4fde(0x5)));\nfunction a0_0xc931(hcINBa, key) {\n    const stringArray = a0_0x393b();\n    a0_0xc931 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xc931(hcINBa, key);\n}\nfunction dp(N, K, hn, h_max) {\n    const _0x44f297 = a0_0xc931;\n    const dp = [];\n    let dp_work = [];\n    dp[0x0] = 0x0;\n    for (var i = 0x1; i < N; i++) {\n        dp['push'](h_max);\n        dp_work = [];\n        dp_work[_0x44f297(0x6)](dp[i]);\n        for (var dp_work_i = 0x1; dp_work_i <= K; dp_work_i++) {\n            if (i - dp_work_i < 0x0)\n                continue;\n            dp_work[_0x44f297(0x6)](dp[i - dp_work_i] + Math[_0x44f297(0x7)](hn[i - dp_work_i] - hn[i]));\n        }\n        dp[i] = Math[_0x44f297(0x8)](...dp_work);\n    }\n    return dp[N - 0x1];\n}", "test_cases": [["5 3\n10 30 40 50 20", "30"], ["3 1\n10 20 10", "20"], ["2 100\n10 10", "0"], ["10 4\n40 10 20 70 80 10 20 70 80 60", "40"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  const [N,K] = input[0].split(' ').map((n) => {\n    return parseInt(n, 10);\n  });\n  const hn = input[1].split(' ').map((n) => {\n    return parseInt(n, 10);\n  });\n  const h_max = Math.pow(10,9);\n  console.log(dp(N,K,hn,h_max));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction dp(N,K,hn,h_max) {\n  const dp = [];\n  let dp_work = [];\n  dp[0] = 0;\n  for (var i = 1; i < N; i++) {\n    dp.push(h_max);\n    dp_work = [];\n    dp_work.push(dp[i]);\n    for (var dp_work_i = 1; dp_work_i <= K; dp_work_i++) {\n      if (i-dp_work_i < 0) continue;\n      dp_work.push(dp[i-dp_work_i] + Math.abs(hn[i-dp_work_i] - hn[i]));\n    }\n    dp[i] = Math.min(...dp_work);\n  }\n  return dp[N-1];\n}\n", "language": "JavaScript"}
{"filename": "p03292_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x16bd(txkjFh, key) {\n    const stringArray = a0_0x521a();\n    a0_0x16bd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x16bd(txkjFh, key);\n}\nfunction a0_0x521a() {\n    const _0x2911b3 = [\n        'split',\n        'map',\n        'max',\n        'min',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x521a = function () {\n        return _0x2911b3;\n    };\n    return a0_0x521a();\n}\nconst a0_0x18bc6d = a0_0x16bd;\nfunction main(s) {\n    const _0x259e05 = a0_0x16bd;\n    const nums = s[_0x259e05(0x0)]('\\x0a')[0x0]['split']('\\x20')[_0x259e05(0x1)](n => Number(n));\n    const ans = Math[_0x259e05(0x2)](...nums) - Math[_0x259e05(0x3)](...nums);\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x18bc6d(0x4)]('/dev/stdin', a0_0x18bc6d(0x5)));", "test_cases": [["1 6 3", "5"], ["11 5 5", "6"], ["100 100 100", "0"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const nums = s.split('\\n')[0].split(' ').map(n => Number(n));\n  const ans = Math.max(...nums) - Math.min(...nums);\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03339_1", "type": "JavaScript", "obfuscated": "var a0_0x4691a2 = a0_0x16fc;\nfunction a0_0x16fc(SLNVmf, key) {\n    var stringArray = a0_0x4fdd();\n    a0_0x16fc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16fc(SLNVmf, key);\n}\nfunction a0_0x4fdd() {\n    var _0x35928e = [\n        'split',\n        'pow',\n        'GUkpU',\n        'rAUbw',\n        'readFileSync'\n    ];\n    a0_0x4fdd = function () {\n        return _0x35928e;\n    };\n    return a0_0x4fdd();\n}\nfunction main(input) {\n    var _0x3f2082 = a0_0x16fc;\n    const lines = input[_0x3f2082(0x0)]('\\x0a');\n    const N = parseInt(lines[0x0]);\n    const S = lines[0x1][_0x3f2082(0x0)]('');\n    var result = Math[_0x3f2082(0x1)](0xa, 0x8);\n    var current_count = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        if (_0x3f2082(0x2) !== _0x3f2082(0x3)) {\n            if (S[i] == 'E') {\n                current_count++;\n            }\n        } else {\n            current_count--;\n        }\n    }\n    result = current_count;\n    for (var i = 0x1; i < N; i++) {\n        if (S[i] == 'E') {\n            current_count--;\n        }\n        if (S[i - 0x1] == 'W') {\n            current_count++;\n        }\n        result = Math['min'](result, current_count);\n    }\n    console['log'](result);\n}\nmain(require('fs')[a0_0x4691a2(0x4)]('/dev/stdin', 'utf8'));", "test_cases": [["5\nWEEWW", "1"], ["12\nWEWEWEEEWWWE", "4"], ["8\nWWWWWEEE", "3"]], "original": "function main(input){\n  const lines = input.split('\\n');\n\n  const N = parseInt(lines[0]);\n  const S = lines[1].split('');\n\n  \n  var result = Math.pow(10, 8);\n  var current_count = 0;\n  for(var i=0;i<N;i++){\n    if(S[i]=='E'){current_count++;}\n  }\n  result = current_count;\n\n//    console.log(current_count);\n  for(var i=1;i<N;i++){\n    if(S[i]=='E'){current_count--;}\n    if(S[i-1]=='W'){current_count++;}\n    result = Math.min(result, current_count);\n//    console.log(current_count);\n  }\n//    console.log('---');\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02595_1", "type": "JavaScript", "obfuscated": "function a0_0x1e97(xfieXs, key) {\n    const stringArray = a0_0x3c23();\n    a0_0x1e97 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e97(xfieXs, key);\n}\nconst a0_0x207337 = a0_0x1e97;\nfunction a0_0x3c23() {\n    const _0x3f0f3e = [\n        'split',\n        'map',\n        'sqrt',\n        'log',\n        'env',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3c23 = function () {\n        return _0x3f0f3e;\n    };\n    return a0_0x3c23();\n}\nconst main = input => {\n    const _0x293ed0 = a0_0x1e97;\n    input = input['trim']()[_0x293ed0(0x0)]('\\x0a');\n    const [N, D] = input[0x0][_0x293ed0(0x0)]('\\x20')[_0x293ed0(0x1)](Number);\n    const [, ...points] = input;\n    let ans = 0x0;\n    for (let v of points) {\n        const [x, y] = v[_0x293ed0(0x0)]('\\x20')['map'](Number);\n        if (Math[_0x293ed0(0x2)](x ** 0x2 + y ** 0x2) <= D)\n            ans++;\n    }\n    return console[_0x293ed0(0x3)](ans);\n};\nprocess[a0_0x207337(0x4)]['MYTEST'] ? test() : main(require('fs')['readFileSync'](a0_0x207337(0x5), a0_0x207337(0x6)));", "test_cases": [["4 5\n0 5\n-2 4\n3 4\n4 -4", "3"], ["12 3\n1 1\n1 1\n1 1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3", "7"], ["20 100000\n14309 -32939\n-56855 100340\n151364 25430\n103789 -113141\n147404 -136977\n-37006 -30929\n188810 -49557\n13419 70401\n-88280 165170\n-196399 137941\n-176527 -61904\n46659 115261\n-153551 114185\n98784 -6820\n94111 -86268\n-30401 61477\n-55056 7872\n5901 -163796\n138819 -185986\n-69848 -96669", "6"]], "original": "const main = (input) => {\n  input = input.trim().split('\\n')\n  const [N, D] = input[0].split(' ').map(Number)\n  const [, ...points] = input\n\n  let ans = 0\n\n  for (let v of points) {\n    const [x, y] = v.split(' ').map(Number)\n\n    if (Math.sqrt(x**2 + y**2) <= D) ans++\n  }\n\n  return console.log(ans)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02597_1", "type": "JavaScript", "obfuscated": "function a0_0x4b4d(xnzdUk, key) {\n    const stringArray = a0_0x3e37();\n    a0_0x4b4d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b4d(xnzdUk, key);\n}\nconst a0_0x405730 = a0_0x4b4d;\nfunction a0_0x3e37() {\n    const _0x2ee718 = [\n        'split',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3e37 = function () {\n        return _0x2ee718;\n    };\n    return a0_0x3e37();\n}\nfunction MainD(input) {\n    const _0x4ebcea = a0_0x4b4d;\n    const arr = input[_0x4ebcea(0x0)]('\\x0a');\n    const N = arr[0x0];\n    const Ci = arr[0x1]['split']('');\n    let answer = 0x0;\n    let Wnum = 0x0;\n    for (let i = 0x0; i < Ci[_0x4ebcea(0x1)]; i++) {\n        if (Ci[i] === 'W') {\n            Wnum++;\n        }\n    }\n    if (Wnum === 0x0)\n        return console[_0x4ebcea(0x2)](0x0);\n    for (let i = Wnum - 0x1; i < Ci[_0x4ebcea(0x1)]; i++) {\n        if (Ci[i] === 'R') {\n            answer++;\n        }\n    }\n    console[_0x4ebcea(0x2)](answer);\n}\nMainD(require('fs')['readFileSync'](a0_0x405730(0x3), a0_0x405730(0x4)));", "test_cases": [["4\nWWRR", "2"], ["2\nRR", "0"], ["8\nWRWWRWRR", "3"]], "original": "function MainD(input){\n    const arr = input.split('\\n');\n    const N = arr[0];\n    const Ci = arr[1].split('');\n    let answer = 0;\n\n    // Wの数を数える\n    let Wnum = 0;\n    for(let i=0; i<Ci.length; i++){\n        if(Ci[i] === 'W'){\n            Wnum++;\n        }\n    }\n    if(Wnum===0) return console.log(0); // Wが現れなかったら0を出力\n\n    // Wの数以降のRの数を数える\n    for(let i=Wnum-1; i<Ci.length; i++){\n        if(Ci[i] === 'R'){\n            answer++;\n        }\n    }\n    console.log(answer);\n}\nMainD(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02707_1", "type": "JavaScript", "obfuscated": "function a0_0x5899() {\n    const _0x13c9c7 = [\n        'trim',\n        'split',\n        'forEach',\n        'length',\n        'join',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5899 = function () {\n        return _0x13c9c7;\n    };\n    return a0_0x5899();\n}\nconst a0_0x279ea1 = a0_0xfcdb;\nconst Main = input => {\n    const _0x58240e = a0_0xfcdb;\n    const tmp = input[_0x58240e(0x0)]()[_0x58240e(0x1)]('\\x0a');\n    const employees = parseInt(tmp[0x0]);\n    const subordinateArray = tmp[0x1][_0x58240e(0x1)]('\\x20');\n    const subordinateCount = {};\n    const distinctSubordinate = subordinateArray['filter']((x, i, self) => self['indexOf'](x) === i);\n    subordinateArray[_0x58240e(0x2)](elem => {\n        subordinateCount[elem] = subordinateCount[elem] ? subordinateCount[elem] + 0x1 : 0x1;\n    });\n    let result = [];\n    distinctSubordinate['forEach'](elem => {\n        return result['push'](subordinateCount[elem]);\n    });\n    const zeroCount = employees - distinctSubordinate[_0x58240e(0x3)];\n    if (zeroCount > 0x0) {\n        for (let index = 0x0; index < zeroCount; index++) {\n            result['push'](0x0);\n        }\n    }\n    result = result[_0x58240e(0x4)]('\\x0a');\n    console[_0x58240e(0x5)](result);\n    return result;\n};\nfunction a0_0xfcdb(rkvgyd, key) {\n    const stringArray = a0_0x5899();\n    a0_0xfcdb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xfcdb(rkvgyd, key);\n}\nMain(require('fs')[a0_0x279ea1(0x6)](a0_0x279ea1(0x7), a0_0x279ea1(0x8)));", "test_cases": [["5\n1 1 2 2", "2\n2\n0\n0\n0"], ["10\n1 1 1 1 1 1 1 1 1", "9\n0\n0\n0\n0\n0\n0\n0\n0\n0"], ["7\n1 2 3 4 5 6", "1\n1\n1\n1\n1\n1\n0"]], "original": "const Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const employees = parseInt(tmp[0])\n  const subordinateArray = tmp[1].split(' ')\n\n  const subordinateCount = {}\n\n  const distinctSubordinate = subordinateArray.filter(\n    (x, i, self) => self.indexOf(x) === i\n  )\n\n  subordinateArray.forEach((elem) => {\n    subordinateCount[elem] = subordinateCount[elem]\n      ? subordinateCount[elem] + 1\n      : 1\n  })\n\n  let result = []\n  distinctSubordinate.forEach((elem) => {\n    return result.push(subordinateCount[elem])\n  })\n\n  const zeroCount = employees - distinctSubordinate.length\n\n  if (zeroCount > 0) {\n    for (let index = 0; index < zeroCount; index++) {\n      result.push(0)\n    }\n  }\n\n  result = result.join('\\n')\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02756_1", "type": "JavaScript", "obfuscated": "function a0_0x4229() {\n    const _0x21e8a9 = [\n        'split',\n        'shift',\n        'length',\n        'push',\n        'log',\n        'reverse',\n        'join',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4229 = function () {\n        return _0x21e8a9;\n    };\n    return a0_0x4229();\n}\nconst a0_0x4e6ea2 = a0_0x5951;\nfunction Main(input) {\n    'use strict';\n    const _0x3a90e3 = a0_0x5951;\n    const temp = input[_0x3a90e3(0x0)]('\\x0a');\n    const s = temp[_0x3a90e3(0x1)]()[_0x3a90e3(0x0)]();\n    const q = parseInt(temp[_0x3a90e3(0x1)]());\n    const queries = temp['map'](query => query[_0x3a90e3(0x0)]('\\x20'));\n    let reverse_flag = 0x0;\n    for (let i = 0x0; i < q; i++) {\n        const query = queries[i];\n        if (query['length'] == 0x1)\n            reverse_flag = (reverse_flag + 0x1) % 0x2;\n        else if (query[_0x3a90e3(0x2)] == 0x3) {\n            if (reverse_flag + parseInt(query[0x1]) % 0x2 == 0x0)\n                s[_0x3a90e3(0x3)](query[0x2]);\n            else\n                s['unshift'](query[0x2]);\n        }\n    }\n    if (reverse_flag)\n        console[_0x3a90e3(0x4)](s[_0x3a90e3(0x5)]()['join']('') + '\\x0a');\n    else\n        console[_0x3a90e3(0x4)](s[_0x3a90e3(0x6)]('') + '\\x0a');\n}\nfunction a0_0x5951(UYNIsU, key) {\n    const stringArray = a0_0x4229();\n    a0_0x5951 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5951(UYNIsU, key);\n}\nMain(require('fs')['readFileSync'](a0_0x4e6ea2(0x7), a0_0x4e6ea2(0x8)));", "test_cases": [["a\n4\n2 1 p\n1\n2 2 c\n1", "cpa"], ["a\n6\n2 2 a\n2 1 b\n1\n2 2 c\n1\n1", "aabc"], ["y\n1\n2 1 x", "xy"]], "original": "function Main(input) {\n  \"use strict\"\n  const temp = input.split(\"\\n\");\n\n  const s = temp.shift().split()\n  const q = parseInt(temp.shift());\n  const queries = temp.map(query => query.split(\" \"));\n  let reverse_flag = 0\n\n  // queries.forEach( query => {\n  //   if(query.length == 1) reverse_flag = (reverse_flag + 1) % 2\n  //   else if(query.length == 3){\n  //     if((reverse_flag + parseInt(query[1]) % 2 == 0)) s.push(query[2])\n  //     else s.unshift(query[2])\n  //   }\n  // })\n\n  for(let i = 0; i < q; i++){\n    const query = queries[i]\n    if(query.length == 1) reverse_flag = (reverse_flag + 1) % 2\n    else if(query.length == 3){\n      if((reverse_flag + parseInt(query[1]) % 2 == 0)) s.push(query[2])\n      else s.unshift(query[2])\n    }\n  }\n  \n  if(reverse_flag) console.log(s.reverse().join(\"\") + \"\\n\");\n  else console.log(s.join(\"\") + \"\\n\");\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02760_1", "type": "JavaScript", "obfuscated": "function a0_0x3f78() {\n    var _0x2a45b8 = [\n        'push',\n        'split',\n        'indexOf',\n        'map',\n        'log',\n        'Yes',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3f78 = function () {\n        return _0x2a45b8;\n    };\n    return a0_0x3f78();\n}\nvar a0_0x253cb4 = a0_0x3072;\nfunction Main(input) {\n    var _0x43bb16 = a0_0x3072;\n    var n = input[0x3];\n    var ansmap = [\n        [\n            ![],\n            ![],\n            ![]\n        ],\n        [\n            ![],\n            ![],\n            ![]\n        ],\n        [\n            ![],\n            ![],\n            ![]\n        ]\n    ];\n    var chk = [];\n    for (var i = 0x4; i < n + 0x4; i++) {\n        chk[_0x43bb16(0x0)](input[i] - 0x0);\n    }\n    var map = [\n        input[0x0][_0x43bb16(0x1)]('\\x20')['map'](v => chk[_0x43bb16(0x2)](v - 0x0) >= 0x0),\n        input[0x1][_0x43bb16(0x1)]('\\x20')[_0x43bb16(0x3)](v => chk['indexOf'](v - 0x0) >= 0x0),\n        input[0x2][_0x43bb16(0x1)]('\\x20')[_0x43bb16(0x3)](v => chk[_0x43bb16(0x2)](v - 0x0) >= 0x0)\n    ];\n    var flg = ![];\n    if (map[0x0][0x0] && map[0x0][0x1] && map[0x0][0x2])\n        flg = !![];\n    if (map[0x1][0x0] && map[0x1][0x1] && map[0x1][0x2])\n        flg = !![];\n    if (map[0x2][0x0] && map[0x2][0x1] && map[0x2][0x2])\n        flg = !![];\n    if (map[0x0][0x0] && map[0x1][0x0] && map[0x2][0x0])\n        flg = !![];\n    if (map[0x0][0x1] && map[0x1][0x1] && map[0x2][0x1])\n        flg = !![];\n    if (map[0x0][0x2] && map[0x1][0x2] && map[0x2][0x2])\n        flg = !![];\n    if (map[0x0][0x0] && map[0x1][0x1] && map[0x2][0x2])\n        flg = !![];\n    if (map[0x0][0x2] && map[0x1][0x1] && map[0x2][0x0])\n        flg = !![];\n    console[_0x43bb16(0x4)](flg ? _0x43bb16(0x5) : 'No');\n}\nfunction a0_0x3072(PTxuJB, key) {\n    var stringArray = a0_0x3f78();\n    a0_0x3072 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3072(PTxuJB, key);\n}\nMain(require('fs')['readFileSync'](a0_0x253cb4(0x6), a0_0x253cb4(0x7))[a0_0x253cb4(0x8)]()[a0_0x253cb4(0x1)]('\\x0a'));", "test_cases": [["84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30", "Yes"], ["41 7 46\n26 89 2\n78 92 8\n5\n6\n45\n16\n57\n17", "No"], ["60 88 34\n92 41 43\n65 73 48\n10\n60\n43\n88\n11\n48\n73\n65\n41\n92\n34", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var n = input[3];\n    var ansmap = [\n        [false,false,false],\n        [false,false,false],\n        [false,false,false]];\n    var chk = [];\n    for(var i=4;i<n+4;i++){\n        chk.push(input[i]-0);\n    }\n    var map = [\n        input[0].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n        input[1].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n        input[2].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n    ];\n    var flg = false;\n    if(map[0][0]&&map[0][1]&&map[0][2]) flg = true;\n    if(map[1][0]&&map[1][1]&&map[1][2]) flg = true;\n    if(map[2][0]&&map[2][1]&&map[2][2]) flg = true;\n    if(map[0][0]&&map[1][0]&&map[2][0]) flg = true;\n    if(map[0][1]&&map[1][1]&&map[2][1]) flg = true;\n    if(map[0][2]&&map[1][2]&&map[2][2]) flg = true;\n    if(map[0][0]&&map[1][1]&&map[2][2]) flg = true;\n    if(map[0][2]&&map[1][1]&&map[2][0]) flg = true;\n    console.log(flg?\"Yes\":\"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03017_1", "type": "JavaScript", "obfuscated": "function a0_0x2ec6(dQvyEu, key) {\n    var stringArray = a0_0x4e87();\n    a0_0x2ec6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ec6(dQvyEu, key);\n}\nfunction a0_0x4e87() {\n    var _0x153c7a = [\n        'MlDib',\n        'split',\n        'Zvgsi',\n        'slice',\n        'test',\n        'Yes',\n        '/dev/stdin'\n    ];\n    a0_0x4e87 = function () {\n        return _0x153c7a;\n    };\n    return a0_0x4e87();\n}\nvar a0_0x3dd4b0 = a0_0x2ec6;\ndebug = ![];\nfunction log(...args) {\n    var _0x657386 = a0_0x2ec6;\n    if (debug) {\n        if (_0x657386(0x0) === _0x657386(0x0)) {\n            console['log'](...args);\n        } else {\n            if (debug) {\n                console['log'](...args);\n            }\n        }\n    }\n}\nfunction Main(input) {\n    var _0x101e5e = a0_0x2ec6;\n    lines = input[_0x101e5e(0x1)]('\\x0a');\n    f = lines[0x0][_0x101e5e(0x1)]('\\x20');\n    N = f[0x0];\n    A = f[0x1] * 0x1;\n    B = f[0x2] * 0x1;\n    C = f[0x3] * 0x1;\n    D = f[0x4] * 0x1;\n    s = lines[0x1];\n    log(N, A, B, C, D, s);\n    bool = !![];\n    if (C > D) {\n        if (_0x101e5e(0x2) !== 'Zvgsi') {\n            end = D;\n            if (C - D <= 0x2) {\n                end = C;\n            }\n            s2 = s;\n            if (s[D - 0x2] == '#') {\n                log(s2, s2[D - 0x1]);\n                s2[D - 0x1] = '#';\n                s2 = s2['slice'](0x0, D - 0x1) + '#' + s2[_0x101e5e(0x3)](D);\n            }\n            log(s2);\n            str = s2['slice'](B - 0x1, end);\n            log(str, bool);\n            bool = bool && /\\.\\.\\./[_0x101e5e(0x4)](str);\n            log(str, bool);\n        } else {\n            end = D;\n            if (C - D <= 0x2) {\n                end = C;\n            }\n            s2 = s;\n            if (s[D - 0x2] == '#') {\n                log(s2, s2[D - 0x1]);\n                s2[D - 0x1] = '#';\n                s2 = s2[_0x101e5e(0x3)](0x0, D - 0x1) + '#' + s2[_0x101e5e(0x3)](D);\n            }\n            log(s2);\n            str = s2[_0x101e5e(0x3)](B - 0x1, end);\n            log(str, bool);\n            bool = bool && /\\.\\.\\./[_0x101e5e(0x4)](str);\n            log(str, bool);\n        }\n    }\n    str = s[_0x101e5e(0x3)](A - 0x1, C);\n    bool = bool && !/##/[_0x101e5e(0x4)](str);\n    log(str, bool);\n    str = s[_0x101e5e(0x3)](B - 0x1, D);\n    bool = bool && !/##/[_0x101e5e(0x4)](str);\n    log(str, bool);\n    ans = bool ? _0x101e5e(0x5) : 'No';\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync'](a0_0x3dd4b0(0x6), 'utf8'));", "test_cases": [["7 1 3 6 7\n.#..#..", "Yes"], ["7 1 3 7 6\n.#..#..", "No"], ["15 1 3 15 13\n...#.#...#.#...", "Yes"]], "original": "debug = false\nfunction log(...args) {\n  if (debug) {\n    console.log(...args)\n  }\n}\n\nfunction Main(input) {\n  lines = input.split(\"\\n\")\n  f = lines[0].split(\" \")\n  N = f[0]\n  A = f[1] * 1\n  B = f[2] * 1\n  C = f[3] * 1\n  D = f[4] * 1\n  s = lines[1]\n  log(N, A, B, C, D, s)\n\n  bool = true\n  if (C > D) {\n    end = D\n    if (C - D <= 2) {\n      end = C\n    }\n    s2 = s\n    if (s[D - 2] == '#') {\n      log(s2, s2[D - 1])\n      s2[D - 1] = '#'\n      s2 = s2.slice(0, D - 1) + '#' + s2.slice(D)\n    }\n    log(s2)\n    str = s2.slice(B - 1, end)\n    log(str, bool)\n    bool = bool && (/\\.\\.\\./).test(str)\n    log(str, bool)\n  }\n  str = s.slice(A - 1, C)\n  bool = bool && !(/##/).test(str)\n  log(str, bool)\n  str = s.slice(B - 1, D)\n  bool = bool && !(/##/).test(str)\n  log(str, bool)\n\n  ans = bool ? 'Yes' : 'No'\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03085_1", "type": "JavaScript", "obfuscated": "var a0_0xa2265f = a0_0x16ff;\nfunction Main(input) {\n    var _0x4a7054 = a0_0x16ff;\n    input = input['split']('\\x0a');\n    input = input[0x0];\n    switch (input) {\n    case 'A': {\n            console[_0x4a7054(0x0)]('T');\n            return;\n        }\n    case 'T': {\n            if (_0x4a7054(0x1) === _0x4a7054(0x2)) {\n                return;\n            } else {\n                console[_0x4a7054(0x0)]('A');\n                return;\n            }\n        }\n    case 'C': {\n            console[_0x4a7054(0x0)]('G');\n            return;\n        }\n    case 'G': {\n            console[_0x4a7054(0x0)]('C');\n            return;\n        }\n    default: {\n            if (_0x4a7054(0x3) !== _0x4a7054(0x3)) {\n                console[_0x4a7054(0x0)]('G');\n                return;\n            } else {\n                return;\n            }\n        }\n    }\n}\nfunction a0_0xd819() {\n    var _0x2a69ba = [\n        'log',\n        'byKnA',\n        'ePTnf',\n        'IMSda',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xd819 = function () {\n        return _0x2a69ba;\n    };\n    return a0_0xd819();\n}\nfunction a0_0x16ff(YGIoyO, key) {\n    var stringArray = a0_0xd819();\n    a0_0x16ff = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16ff(YGIoyO, key);\n}\nMain(require('fs')['readFileSync'](a0_0xa2265f(0x4), a0_0xa2265f(0x5)));", "test_cases": [["A", "T"], ["G", "C"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    input = input[0]\n    switch(input) {\n        case 'A': {\n            console.log('T');\n            return;\n        }\n        case 'T': {\n            console.log('A');\n            return;\n        }\n        case 'C': {\n            console.log('G');\n            return;\n        }\n        case 'G': {\n            console.log('C');\n            return;\n        }\n        default: {\n            return;\n        }\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03087_1", "type": "JavaScript", "obfuscated": "var a0_0x55f10b = a0_0x2438;\nvar input = require('fs')[a0_0x55f10b(0x0)]('/dev/stdin', a0_0x55f10b(0x1));\nfunction a0_0x2438(TApZXk, key) {\n    var stringArray = a0_0x4f13();\n    a0_0x2438 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2438(TApZXk, key);\n}\nfunction a0_0x4f13() {\n    var _0x24bed7 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x4f13 = function () {\n        return _0x24bed7;\n    };\n    return a0_0x4f13();\n}\nvar arr = input[a0_0x55f10b(0x2)]('\\x0a');\nvar nq = arr[0x0][a0_0x55f10b(0x2)]('\\x20')['map'](Number);\nvar str = arr[0x1];\nvar a = [\n    0x0,\n    0x0\n];\nvar cnt = 0x0;\nfor (var i = 0x1; i < str['length']; i++) {\n    if (str[i] == 'C' && str[i - 0x1] == 'A')\n        cnt++;\n    a[a0_0x55f10b(0x3)](cnt);\n}\nvar ans = [];\nfor (var i = 0x2, len = nq[0x1] + 0x2; i < len; i++) {\n    var lr = arr[i][a0_0x55f10b(0x2)]('\\x20');\n    ans[a0_0x55f10b(0x3)](a[lr[0x1] - 0x0] - a[lr[0x0] - 0x0]);\n}\nconsole[a0_0x55f10b(0x4)](ans[a0_0x55f10b(0x5)]('\\x0a'));", "test_cases": [["8 3\nACACTACG\n3 7\n2 3\n1 8", "2\n0\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.split(\"\\n\");\nvar nq=arr[0].split(\" \").map(Number);\nvar str = arr[1];\nvar a=[0,0];\nvar cnt=0;\nfor(var i=1;i<str.length;i++){\n   if(str[i]==\"C\" && str[i-1]==\"A\")cnt++;\n   a.push(cnt);\n}\nvar ans=[];\nfor(var i=2,len=nq[1]+2;i<len;i++){\n   var lr=arr[i].split(\" \");\n   ans.push(a[lr[1]-0]-a[lr[0]-0]);\n}\nconsole.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03108_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x4b5d() {\n    const _0xb84731 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x4b5d = function () {\n        return _0xb84731;\n    };\n    return a0_0x4b5d();\n}\nconst a0_0x48636b = a0_0x52e3;\nconst input = require('fs')[a0_0x48636b(0x0)](a0_0x48636b(0x1), 'utf8')[a0_0x48636b(0x2)]()[a0_0x48636b(0x3)]('\\x0a')[a0_0x48636b(0x4)](line => line[a0_0x48636b(0x3)]('\\x20')[a0_0x48636b(0x4)](val => parseInt(val), 0xa));\nconst N = input[0x0][0x0];\nconst M = input[0x0][0x1];\nconst ans = [];\nconst par = [];\nfor (let i = 0x1; i <= N; i++) {\n    par[i] = -0x1;\n}\nfunction root(x) {\n    if (par[x] < 0x0) {\n        return x;\n    }\n    return par[x] = root(par[x]);\n}\nfunction unite(x, y) {\n    const rx = root(x);\n    const ry = root(y);\n    if (rx === ry) {\n        return;\n    }\n    par[ry] += par[rx];\n    par[rx] = ry;\n}\nfunction isSame(x, y) {\n    return root(x) === root(y);\n}\nfunction a0_0x52e3(OcbzlT, key) {\n    const stringArray = a0_0x4b5d();\n    a0_0x52e3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x52e3(OcbzlT, key);\n}\nfunction getSize(x) {\n    return -par[root(x)];\n}\nans[M] = N * (N - 0x1) / 0x2;\nfor (let i = M; i > 0x1; i--) {\n    const x = input[i][0x0];\n    const y = input[i][0x1];\n    if (isSame(x, y)) {\n        ans[i - 0x1] = ans[i];\n        continue;\n    }\n    ans[i - 0x1] = ans[i] - getSize(x) * getSize(y);\n    unite(x, y);\n}\nfor (let i = 0x1; i <= M; i++) {\n    console[a0_0x48636b(0x5)](ans[i]);\n}", "test_cases": [["4 5\n1 2\n3 4\n1 3\n2 3\n1 4", "0\n0\n4\n5\n6"], ["6 5\n2 3\n1 2\n5 6\n3 4\n4 5", "8\n9\n12\n14\n15"], ["2 1\n1 2", "1"]], "original": "\"use strict\";\n\n// read lines from stdin\nconst input = require(\"fs\")\n  .readFileSync(\"/dev/stdin\", \"utf8\")\n  .trim()\n  .split(\"\\n\")\n  .map((line) => line.split(\" \").map((val) => parseInt(val), 10));\n\nconst N = input[0][0];\nconst M = input[0][1];\n\nconst ans = [];\n\n// Union-Find\n\nconst par = [];\n\nfor (let i = 1; i <= N; i++) {\n  par[i] = -1;\n}\n\nfunction root(x) {\n  if (par[x] < 0) { return x; }\n  return par[x] = root(par[x]);\n}\n\nfunction unite(x, y) {\n  const rx = root(x);\n  const ry = root(y);\n  if (rx === ry) { return; }\n\n  par[ry] += par[rx];\n  par[rx] = ry;\n}\n\nfunction isSame(x, y) {\n  return root(x) === root(y);\n}\n\nfunction getSize(x) {\n  return -par[root(x)];\n}\n\n// end Union-Find\n\nans[M] = N * (N - 1) / 2;\n\nfor (let i = M; i > 1; i--) {\n  const x = input[i][0];\n  const y = input[i][1];\n\n  if (isSame(x, y)) {\n    ans[i - 1] = ans[i];\n    continue;\n  }\n\n  ans[i - 1] = ans[i] - (getSize(x) * getSize(y));\n  unite(x, y);\n}\n\nfor (let i = 1; i <= M; i++) {\n  console.log(ans[i]);\n}\n", "language": "JavaScript"}
{"filename": "p03137_1", "type": "JavaScript", "obfuscated": "function a0_0x59c2() {\n    var _0x23b94f = [\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'sort',\n        'fill',\n        'log'\n    ];\n    a0_0x59c2 = function () {\n        return _0x23b94f;\n    };\n    return a0_0x59c2();\n}\nfunction a0_0x15f1(DFdThm, key) {\n    var stringArray = a0_0x59c2();\n    a0_0x15f1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15f1(DFdThm, key);\n}\nvar a0_0x2a731d = a0_0x15f1;\nvar readline = require(a0_0x2a731d(0x0));\nvar lines = [];\nvar result = 0x0;\nvar rl = readline[a0_0x2a731d(0x1)]({\n    'input': process[a0_0x2a731d(0x2)],\n    'output': process[a0_0x2a731d(0x3)]\n});\nrl['on'](a0_0x2a731d(0x4), function (x) {\n    var _0x206914 = a0_0x15f1;\n    lines[_0x206914(0x5)](x);\n});\nrl['on'](a0_0x2a731d(0x6), function () {\n    var _0x401759 = a0_0x15f1;\n    var N = Number(lines[0x0][_0x401759(0x7)]('\\x20')[0x0]);\n    var M = Number(lines[0x0][_0x401759(0x7)]('\\x20')[0x1]);\n    var X = lines[0x1][_0x401759(0x7)]('\\x20')['map'](value => Number(value));\n    X[_0x401759(0x8)]((a, b) => a - b);\n    var sum = Array(M)[_0x401759(0x9)](0x0);\n    for (var i = 0x1; i < M; i++) {\n        sum[i] = X[i] - X[i - 0x1];\n    }\n    sum[_0x401759(0x8)]((a, b) => b - a);\n    for (var i = N - 0x1; i < M; i++) {\n        result += sum[i];\n    }\n    console[_0x401759(0xa)](result);\n});", "test_cases": [["2 5\n10 12 1 2 14", "5"], ["3 7\n-10 -3 0 9 -100 2 17", "19"], ["100 1\n-100000", "0"]], "original": "var readline = require('readline');\nvar lines = []; var result = 0;\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var M = Number(lines[0].split(\" \")[1]);\n    var X = lines[1].split(\" \").map(value => Number(value));\n\n    X.sort((a, b) => a - b);\n\n    var sum = Array(M).fill(0);\n    for (var i = 1; i < M; i++) { sum[i] = X[i] - X[i - 1]; }\n\n    sum.sort((a, b) => b - a);\n\n    for (var i = N - 1; i < M; i++) { result += sum[i] }\n    \n    console.log(result);\n});\n", "language": "JavaScript"}
{"filename": "p03328_1", "type": "JavaScript", "obfuscated": "function a0_0x3091() {\n    var _0x4a752a = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3091 = function () {\n        return _0x4a752a;\n    };\n    return a0_0x3091();\n}\nfunction a0_0xa5d0(AxjMrI, key) {\n    var stringArray = a0_0x3091();\n    a0_0xa5d0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xa5d0(AxjMrI, key);\n}\nvar a0_0x3d208e = a0_0xa5d0;\nfunction Main(input) {\n    var _0x9b96a1 = a0_0xa5d0;\n    input = input[_0x9b96a1(0x0)]('\\x20');\n    var a = parseInt(input[0x0], 0xa);\n    var b = parseInt(input[0x1], 0xa);\n    var a_real = 0x1;\n    var b_real = 0x1;\n    var a_count = 0x1;\n    var b_count = 0x1;\n    var ans = 0x0;\n    while (!![]) {\n        while (!![]) {\n            a_count++;\n            a_real += a_count;\n            b_count++;\n            b_real += b_count;\n            if (a_real > a) {\n                break;\n            }\n        }\n        while (!![]) {\n            b_count++;\n            b_real += b_count;\n            if (b_real > b) {\n                break;\n            }\n        }\n        if (a_real - a == b_real - b) {\n            break;\n        }\n    }\n    ans = a_real - a;\n    console[_0x9b96a1(0x1)](ans);\n}\nMain(require('fs')[a0_0x3d208e(0x2)](a0_0x3d208e(0x3), a0_0x3d208e(0x4)));", "test_cases": [["8 13", "2"], ["54 65", "1"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    input = input.split(' ');\n    //文字列から10進数に変換するときはparseIntを使います\n    var a = parseInt(input[0], 10);\n    var b = parseInt(input[1], 10);\n    \n    var a_real = 1;\n    var b_real = 1;\n    var a_count = 1\n    var b_count = 1\n    var ans = 0;\n    while ( true ) {\n        while ( true ) {\n            a_count++;\n            a_real += a_count;\n            b_count++;\n            b_real += b_count;\n            if (a_real > a) {\n                break;\n            }\n        }\n        while ( true ) {\n            b_count++;\n            b_real += b_count;\n            if (b_real > b) {\n                break;\n            }\n        }\n        if ( (a_real - a) == (b_real - b)) {\n            break;\n        }\n    }\n    ans = a_real - a;\n    console.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03363_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x501b() {\n    const _0x14832f = [\n        'split',\n        'fill',\n        'keys',\n        'forEach',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x501b = function () {\n        return _0x14832f;\n    };\n    return a0_0x501b();\n}\nfunction a0_0x3439(ktwAbf, key) {\n    const stringArray = a0_0x501b();\n    a0_0x3439 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3439(ktwAbf, key);\n}\nconst a0_0x127019 = a0_0x3439;\nconst main = arg => {\n    const _0xffb9a8 = a0_0x3439;\n    arg = arg['trim']()[_0xffb9a8(0x0)]('\\x0a');\n    const N = arg[0x0] * 0x1;\n    const nums = arg[0x1]['split']('\\x20')['map'](x => x * 0x1);\n    const totalSum = new Array(N)[_0xffb9a8(0x1)](0x0);\n    for (let i = 0x0; i < N; i++) {\n        totalSum[i] += (totalSum[i - 0x1] || 0x0) + nums[i];\n    }\n    let accumObj = {};\n    accumObj[0x0] = 0x1;\n    for (let i = 0x0; i < N; i++) {\n        accumObj[totalSum[i]] = (accumObj[totalSum[i]] || 0x0) + 0x1;\n    }\n    let ans = 0x0;\n    Object[_0xffb9a8(0x2)](accumObj)[_0xffb9a8(0x3)](x => {\n        ans += accumObj[x] * (accumObj[x] - 0x1) / 0x2;\n    });\n    console[_0xffb9a8(0x4)](ans);\n};\nmain(require('fs')[a0_0x127019(0x5)](a0_0x127019(0x6), a0_0x127019(0x7)));", "test_cases": [["6\n1 3 -4 2 2 -2", "3"], ["7\n1 -1 1 -1 1 -1 1", "12"], ["5\n1 -2 3 -4 5", "0"]], "original": "\"use strict\";\n// 人様のコード参照\nconst main = arg => {\n  \t// お決まりの処理たち\n    arg = arg.trim().split(\"\\n\");\n    const N = arg[0] * 1;\n    const nums = arg[1].split(\" \").map(x => x*1);\n  \t// とりあえず累積和出してみる\n  \tconst totalSum = new Array(N).fill(0);\n   \t// forEachよくないんじゃないか説\n  \tfor(let i = 0; i < N; i++){\n      totalSum[i] += (totalSum[i - 1] || 0) + nums[i];\n    }\n  \n  \t// それぞれの組み合わせがいくつずつかを調べていく\n  \t// そのためにオブジェクト化\n  \tlet accumObj = {};\n  \t// accumObj[0]は必ず存在している体で（理由は不明確）\n  \taccumObj[0] = 1;\n  \tfor(let i = 0; i < N; i++){\n      accumObj[totalSum[i]] = (accumObj[totalSum[i]] || 0) + 1;\n    }\n  \tlet ans = 0;\n  \t// それぞれのエンティティで2つとってくる値を計算する\n  \tObject.keys(accumObj).forEach((x)=> {\n    \tans += accumObj[x]*(accumObj[x]-1)/2\n    })\n  \n  \tconsole.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02266_1", "type": "JavaScript", "obfuscated": "const a0_0x2b88b7 = a0_0x167f;\nconst calc = str => {\n    const _0x1c3236 = a0_0x167f;\n    const areas = [];\n    const depthIndexes = [];\n    let sum = 0x0;\n    for (let i = 0x0; i < str[_0x1c3236(0x0)]; i++) {\n        if (_0x1c3236(0x1) === _0x1c3236(0x1)) {\n            const char = str[i];\n            if (char === '\\x5c') {\n                depthIndexes[_0x1c3236(0x2)](i);\n                continue;\n            }\n            if (char === '/' && depthIndexes[_0x1c3236(0x0)] > 0x0) {\n                const j = depthIndexes[_0x1c3236(0x3)]();\n                sum += i - j;\n                let currentArea = i - j;\n                while (areas['length'] > 0x0 && areas[areas[_0x1c3236(0x0)] - 0x1]['depth'] > j) {\n                    currentArea += areas[areas[_0x1c3236(0x0)] - 0x1][_0x1c3236(0x4)];\n                    areas[_0x1c3236(0x3)]();\n                }\n                areas['push']({\n                    'depth': j,\n                    'area': currentArea\n                });\n            }\n        } else {\n            console[_0x1c3236(0x5)](0x0);\n            return;\n        }\n    }\n    console[_0x1c3236(0x5)](sum);\n    if (areas[_0x1c3236(0x0)] === 0x0) {\n        console[_0x1c3236(0x5)](0x0);\n        return;\n    }\n    console[_0x1c3236(0x5)](areas[_0x1c3236(0x0)] + '\\x20' + areas[_0x1c3236(0x6)](obj => obj[_0x1c3236(0x4)])[_0x1c3236(0x7)]('\\x20'));\n};\nlet inputStr = '';\nprocess[a0_0x2b88b7(0x8)]['on'](a0_0x2b88b7(0x9), input => {\n    const _0x41dede = a0_0x167f;\n    inputStr += String[_0x41dede(0xa)]`${ input }`;\n});\nfunction a0_0x167f(OWhNEI, key) {\n    const stringArray = a0_0x143e();\n    a0_0x167f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x167f(OWhNEI, key);\n}\nprocess['stdin']['on'](a0_0x2b88b7(0xb), () => {\n    calc(inputStr);\n});\nfunction a0_0x143e() {\n    const _0x496b72 = [\n        'length',\n        'sBJws',\n        'push',\n        'pop',\n        'area',\n        'log',\n        'map',\n        'join',\n        'stdin',\n        'data',\n        'raw',\n        'end'\n    ];\n    a0_0x143e = function () {\n        return _0x496b72;\n    };\n    return a0_0x143e();\n}", "test_cases": [["\\\\//", "4\n1 4"], ["\\\\///\\_/\\/\\\\\\\\/_/\\\\///__\\\\\\_\\\\/_\\/_/\\", "35\n5 4 2 1 19 9"]], "original": "const calc = (str) => {\n  const areas = [];\n  const depthIndexes = [];\n  let sum = 0;\n\n  for (let i=0; i<str.length; i++) {\n    const char = str[i];\n\n    if (char === '\\\\') {\n      depthIndexes.push(i);\n      continue;\n    }\n\n    if (char === '/' && depthIndexes.length > 0) {\n      const j = depthIndexes.pop();\n      sum += i - j;\n      let currentArea = i - j;\n      while (areas.length > 0 && areas[areas.length-1].depth > j) {\n        currentArea += areas[areas.length-1].area;\n        areas.pop();\n      }\n      areas.push({\n        depth: j,\n        area: currentArea,\n      });\n    }\n  }\n\n\n\n  console.log(sum);\n  if (areas.length === 0) {\n    console.log(0);\n    return;\n  }\n  console.log(`${areas.length} ${areas.map(obj => obj.area).join(' ')}`);\n};\n\n\nlet inputStr = '';\nprocess.stdin.on('data', (input) => { inputStr += String.raw`${input}` });\n\nprocess.stdin.on('end', () => { calc(inputStr); });\n", "language": "JavaScript"}
{"filename": "p02268_1", "type": "JavaScript", "obfuscated": "const a0_0x160b96 = a0_0x39d6;\nfunction a0_0x39d6(OVcRtv, key) {\n    const stringArray = a0_0x46e1();\n    a0_0x39d6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x39d6(OVcRtv, key);\n}\nvar input = require('fs')[a0_0x160b96(0x0)]('/dev/stdin', a0_0x160b96(0x1));\nvar Arr = input[a0_0x160b96(0x2)]()[a0_0x160b96(0x3)]('\\x0a');\nfunction a0_0x46e1() {\n    const _0x5b3a69 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'floor',\n        'map',\n        'log',\n        'reduce'\n    ];\n    a0_0x46e1 = function () {\n        return _0x5b3a69;\n    };\n    return a0_0x46e1();\n}\nconst binarySearch = (key, arr, N) => {\n    const _0x4b1961 = a0_0x39d6;\n    let mid;\n    let left = 0x0;\n    let right = N;\n    while (left < right) {\n        mid = Math[_0x4b1961(0x4)]((left + right) / 0x2);\n        if (key < arr[mid])\n            right = mid;\n        else if (key > arr[mid])\n            left = mid + 0x1;\n        else\n            return 0x1;\n    }\n    return 0x0;\n};\n(function () {\n    const _0x4b8496 = a0_0x39d6;\n    const N1 = Number(Arr[0x0]);\n    const arr1 = Arr[0x1][_0x4b8496(0x3)]('\\x20')[_0x4b8496(0x5)](Number);\n    const arr2 = Arr[0x3][_0x4b8496(0x3)]('\\x20')[_0x4b8496(0x5)](Number);\n    console[_0x4b8496(0x6)](arr2[_0x4b8496(0x5)](e => binarySearch(e, arr1, N1))[_0x4b8496(0x7)]((a, b) => a + b, 0x0));\n}());", "test_cases": [["5\n1 2 3 4 5\n3\n3 4 1", "3"], ["3\n1 2 3\n1\n5", "0"], ["5\n1 1 2 2 3\n2\n1 2", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr = (input.trim()).split(\"\\n\");\n\nconst binarySearch = (key, arr, N) => {\n  let mid;\n  let left = 0;\n  let right = N;\n  while (left < right) {\n    mid = Math.floor((left + right) / 2);\n    if (key < arr[mid]) right = mid;\n    else if (key > arr[mid]) left = mid + 1;\n    else return 1;\n  }\n  return 0;\n}\n\n\n(function() {\n  const N1 = Number(Arr[0]);\n  const arr1 = Arr[1].split(\" \").map(Number);\n  // const N2 = Number(Arr[2]);\n  const arr2 = Arr[3].split(\" \").map(Number);\n  console.log(arr2.map(e => binarySearch(e, arr1, N1)).reduce((a, b) => a + b, 0));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02271_1", "type": "JavaScript", "obfuscated": "function a0_0x3640() {\n    const _0x492281 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'yes',\n        'log'\n    ];\n    a0_0x3640 = function () {\n        return _0x492281;\n    };\n    return a0_0x3640();\n}\nfunction a0_0x4f2f(JAPbPF, key) {\n    const stringArray = a0_0x3640();\n    a0_0x4f2f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f2f(JAPbPF, key);\n}\n(function main() {\n    const _0x1f0615 = a0_0x4f2f;\n    const lines = require('fs')[_0x1f0615(0x0)]('/dev/stdin', _0x1f0615(0x1))[_0x1f0615(0x2)]()[_0x1f0615(0x3)]('\\x0a');\n    const n1 = Number(lines['shift']());\n    const arr1 = lines[_0x1f0615(0x4)]()[_0x1f0615(0x3)]('\\x20')[_0x1f0615(0x5)](Number);\n    const n2 = Number(lines[_0x1f0615(0x4)]());\n    const arr2 = lines['shift']()[_0x1f0615(0x3)]('\\x20')[_0x1f0615(0x5)](Number);\n    const solve = (i, m) => {\n        if (m == 0x0)\n            return !![];\n        if (i >= n1)\n            return ![];\n        return solve(i + 0x1, m) || solve(i + 0x1, m - arr1[i]);\n    };\n    arr2[_0x1f0615(0x5)](m => solve(0x0, m) ? _0x1f0615(0x6) : 'no')['forEach'](res => console[_0x1f0615(0x7)](res));\n}());", "test_cases": [["5\n1 5 7 10 21\n8\n2 4 17 8 22 21 100 35", "no\nno\nyes\nyes\nyes\nyes\nno\nno"]], "original": "(function main() {\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n1 = Number(lines.shift());\n  const arr1 = lines.shift().split(' ').map(Number);\n  const n2 = Number(lines.shift());\n  const arr2 = lines.shift().split(' ').map(Number);\n\n  const solve = (i, m) => {\n    if (m == 0) return true;\n    if (i >= n1) return false;\n    return solve(i + 1, m) || solve(i + 1, m - arr1[i]);\n  };\n\n  arr2.map(m => solve(0, m) ? 'yes' : 'no').forEach(res => console.log(res));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02404_1", "type": "JavaScript", "obfuscated": "const a0_0x1b69f7 = a0_0x375c;\nlet content = '';\nprocess[a0_0x1b69f7(0x0)][a0_0x1b69f7(0x1)]();\nfunction a0_0x11db() {\n    const _0x37deb7 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'trim',\n        'map',\n        'split',\n        'log',\n        'repeat'\n    ];\n    a0_0x11db = function () {\n        return _0x37deb7;\n    };\n    return a0_0x11db();\n}\nprocess[a0_0x1b69f7(0x0)][a0_0x1b69f7(0x2)](a0_0x1b69f7(0x3));\nprocess[a0_0x1b69f7(0x0)]['on'](a0_0x1b69f7(0x4), buf => {\n    content += buf;\n});\nprocess[a0_0x1b69f7(0x0)]['on']('end', () => {\n    const _0x47ff7b = a0_0x375c;\n    const rects = content[_0x47ff7b(0x5)]()['split']('\\x0a')[_0x47ff7b(0x6)](line => line[_0x47ff7b(0x7)]('\\x20')[_0x47ff7b(0x6)](n => parseInt(n, 0xa)));\n    for (const rect of rects) {\n        if (rect[0x0] !== 0x0 || rect[0x1] !== 0x0) {\n            console[_0x47ff7b(0x8)](drawReact(rect));\n        }\n    }\n});\nfunction a0_0x375c(DPLZrp, key) {\n    const stringArray = a0_0x11db();\n    a0_0x375c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x375c(DPLZrp, key);\n}\nconst drawReact = ([h, w]) => {\n    const _0x30fc9f = a0_0x375c;\n    const hline = '#'[_0x30fc9f(0x9)](w) + '\\x0a';\n    return hline + ('#' + '.'[_0x30fc9f(0x9)](w - 0x2) + '#\\x0a')[_0x30fc9f(0x9)](h - 0x2) + hline;\n};", "test_cases": [["3 4\n5 6\n3 3\n0 0", "####\n#..#\n####\n\n######\n#....#\n#....#\n#....#\n######\n\n###\n#.#\n###"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\nprocess.stdin.on('end', () => {\n  const rects = content\n    .trim()\n    .split('\\n')\n    .map(line => line.split(' ').map(n => parseInt(n, 10)));\n\n  for (const rect of rects) {\n    if (rect[0] !== 0 || rect[1] !== 0) {\n      console.log(drawReact(rect));\n    }\n  }\n});\n\nconst drawReact = ([h, w]) => {\n  const hline = '#'.repeat(w) + '\\n';\n  return hline + `#${'.'.repeat(w - 2)}#\\n`.repeat(h - 2) + hline;\n};\n", "language": "JavaScript"}
{"filename": "p02577_1", "type": "JavaScript", "obfuscated": "const a0_0x561b7d = a0_0x2038;\nfunction a0_0x48c3() {\n    const _0x268c80 = [\n        'length',\n        'floor',\n        'pow',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x48c3 = function () {\n        return _0x268c80;\n    };\n    return a0_0x48c3();\n}\nfunction Main(input) {\n    const _0x5481af = a0_0x2038;\n    let num = parseInt(input, 0xa);\n    let sum = 0x0;\n    let tmp = 0x0;\n    for (let i = input[_0x5481af(0x0)] - 0x1; 0x0 <= i; i--) {\n        tmp = Math[_0x5481af(0x1)](num / Math[_0x5481af(0x2)](0xa, i));\n        sum += tmp;\n        num -= tmp * Math[_0x5481af(0x2)](0xa, i);\n    }\n    const ans = sum % 0x9 === 0x0 ? 'Yes' : 'No';\n    console[_0x5481af(0x3)](ans);\n}\nfunction a0_0x2038(CuFoVj, key) {\n    const stringArray = a0_0x48c3();\n    a0_0x2038 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2038(CuFoVj, key);\n}\n;\nMain(require('fs')[a0_0x561b7d(0x4)](a0_0x561b7d(0x5), a0_0x561b7d(0x6)));", "test_cases": [["123456789", "Yes"], ["0", "Yes"], ["31415926535897932384626433832795028841971693993751058209749445923078164062862089986280", "No"]], "original": "function Main(input) {\n\tlet num = parseInt(input, 10);\n\tlet sum = 0;\n\tlet tmp = 0;\n\tfor(let i = input.length - 1; 0 <= i; i--) {\n\t\ttmp = Math.floor(num / Math.pow(10, i));\n\t\tsum += tmp;\n\t\tnum -= tmp * Math.pow(10, i);\n\t}\n\tconst ans = sum % 9 === 0 ? 'Yes' : 'No'\n\tconsole.log(ans);\n};\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02578_1", "type": "JavaScript", "obfuscated": "var a0_0x8b5aaa = a0_0x52c3;\nprocess['stdin'][a0_0x8b5aaa(0x0)]();\nprocess[a0_0x8b5aaa(0x1)][a0_0x8b5aaa(0x2)](a0_0x8b5aaa(0x3));\nvar lines = [];\nvar reader = require('readline')[a0_0x8b5aaa(0x4)]({\n    'input': process[a0_0x8b5aaa(0x1)],\n    'output': process[a0_0x8b5aaa(0x5)]\n});\nfunction a0_0x52c3(dAeWCq, key) {\n    var stringArray = a0_0x5c21();\n    a0_0x52c3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x52c3(dAeWCq, key);\n}\nreader['on'](a0_0x8b5aaa(0x6), line => {\n    var _0x248b0b = a0_0x52c3;\n    lines[_0x248b0b(0x7)](line);\n});\nfunction a0_0x5c21() {\n    var _0x410189 = [\n        'resume',\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'createInterface',\n        'stdout',\n        'line',\n        'push',\n        'split',\n        'max'\n    ];\n    a0_0x5c21 = function () {\n        return _0x410189;\n    };\n    return a0_0x5c21();\n}\nreader['on']('close', () => {\n    var _0x466744 = a0_0x52c3;\n    var N = parseInt(lines[0x0]);\n    var sum = 0x0;\n    var MaxNum = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var Ai = parseInt(lines[0x1][_0x466744(0x8)]('\\x20')[i]);\n        MaxNum = Math[_0x466744(0x9)](MaxNum, Ai);\n        sum += MaxNum - Ai;\n    }\n    console['log'](sum);\n});", "test_cases": [["5\n2 1 5 4 3", "4"], ["5\n3 3 3 3 3", "0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var N = parseInt(lines[0]);\n \n  var sum = 0;\n  var MaxNum = 0;\n  for (var i = 0; i < N; i++) {\n    var Ai = parseInt(lines[1].split(' ')[i]);\n\tMaxNum = Math.max(MaxNum, Ai);\n    sum += MaxNum - Ai;\n  }\n  \n  console.log(sum);\n});", "language": "JavaScript"}
{"filename": "p02613_1", "type": "JavaScript", "obfuscated": "function a0_0x4ac1(GATWIs, key) {\n    const stringArray = a0_0x4ad1();\n    a0_0x4ac1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ac1(GATWIs, key);\n}\nconst a0_0x3eaf89 = a0_0x4ac1;\nfunction a0_0x4ad1() {\n    const _0x1b57c2 = [\n        'trim',\n        'split',\n        'TLE',\n        'log',\n        'env',\n        'MYTEST'\n    ];\n    a0_0x4ad1 = function () {\n        return _0x1b57c2;\n    };\n    return a0_0x4ad1();\n}\nconst main = input => {\n    const _0xba5233 = a0_0x4ac1;\n    const [n, ...rows] = input[_0xba5233(0x0)]()[_0xba5233(0x1)]('\\x0a');\n    const k = [\n        'AC',\n        'WA',\n        _0xba5233(0x2),\n        'RE'\n    ];\n    const ans = {};\n    for (let v of k)\n        ans[v] = 0x0;\n    for (let r of rows)\n        ans[r] += 0x1;\n    for (let v of k)\n        console[_0xba5233(0x3)](v + '\\x20x\\x20' + ans[v]);\n};\nprocess[a0_0x3eaf89(0x4)][a0_0x3eaf89(0x5)] ? test() : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\nAC\nTLE\nAC\nAC\nWA\nTLE", "AC x 3\nWA x 1\nTLE x 2\nRE x 0"], ["10\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC", "AC x 10\nWA x 0\nTLE x 0\nRE x 0"]], "original": "const main = (input) => {\n  const [n, ...rows] = input.trim().split('\\n')\n  const k = ['AC', 'WA', 'TLE', 'RE']\n  const ans = {}\n  for (let v of k) ans[v] = 0\n\n  for (let r of rows) ans[r] += 1\n\n  for (let v of k) console.log(`${v} x ${ans[v]}`)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02615_1", "type": "JavaScript", "obfuscated": "function a0_0x49aa() {\n    const _0x209c70 = [\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'push',\n        'reduce',\n        'MYTEST',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x49aa = function () {\n        return _0x209c70;\n    };\n    return a0_0x49aa();\n}\nconst a0_0x45334b = a0_0x16f2;\nfunction a0_0x16f2(yqLAuH, key) {\n    const stringArray = a0_0x49aa();\n    a0_0x16f2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x16f2(yqLAuH, key);\n}\nconst main = input => {\n    const _0xcd03a4 = a0_0x16f2;\n    input = input[_0xcd03a4(0x0)]()[_0xcd03a4(0x1)]('\\x0a');\n    let n = parseInt(input[0x0], 0xa) - 0x2;\n    const nums = input[0x1][_0xcd03a4(0x1)]('\\x20')[_0xcd03a4(0x2)](Number)[_0xcd03a4(0x3)]((a, b) => b - a);\n    let r = [0x1];\n    for (n; n >= 0x2; n -= 0x2)\n        r[_0xcd03a4(0x4)](0x2);\n    r[_0xcd03a4(0x4)](n);\n    return console['log'](r[_0xcd03a4(0x5)]((a, b, i) => a + b * nums[i], 0x0));\n};\nprocess['env'][a0_0x45334b(0x6)] ? test() : main(require('fs')[a0_0x45334b(0x7)](a0_0x45334b(0x8), 'utf8'));", "test_cases": [["4\n2 2 1 3", "7"], ["7\n1 1 1 1 1 1 1", "6"]], "original": "const main = (input) => {\n\n  input = input.trim().split('\\n')\n  let n = parseInt(input[0], 10) - 2\n  const nums = input[1].split(' ').map(Number).sort((a, b) => b - a)\n\n  let r = [1]\n  for (n; n >= 2; n-=2) r.push(2)\n  r.push(n)\n\n  return console.log(r.reduce((a, b, i) => a + (b * nums[i]), 0))\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02628_1", "type": "JavaScript", "obfuscated": "const a0_0x200d51 = a0_0x130f;\nfunction a0_0x54fa() {\n    const _0x2d795e = [\n        'log',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x54fa = function () {\n        return _0x2d795e;\n    };\n    return a0_0x54fa();\n}\nfunction a0_0x130f(UsGcvg, key) {\n    const stringArray = a0_0x54fa();\n    a0_0x130f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x130f(UsGcvg, key);\n}\nfunction main(lines) {\n    const _0x17e22b = a0_0x130f;\n    const [N, K] = parseNumberLine(lines[0x0]);\n    const prices = parseNumberLine(lines[0x1])['sort']((a, b) => a - b);\n    let total = 0x0;\n    for (let i = 0x0; i < K; ++i) {\n        total += prices[i];\n    }\n    console[_0x17e22b(0x0)](total);\n}\nfunction parseNumberLine(line, radix = 0xa) {\n    const _0x41ece9 = a0_0x130f;\n    return line['split'](/\\s+/)[_0x41ece9(0x1)](_ => parseInt(_, radix));\n}\nmain(require('fs')[a0_0x200d51(0x2)](a0_0x200d51(0x3), a0_0x200d51(0x4))['split']('\\x0a'));", "test_cases": [["5 3\n50 100 80 120 80", "210"], ["1 1\n1000", "1000"]], "original": "function main(lines) {\n    const [N, K] = parseNumberLine(lines[0])\n    const prices = parseNumberLine(lines[1])\n    \t.sort((a, b) => a - b)\n\n    let total = 0\n    for (let i = 0; i < K; ++i) {\n      total += prices[i]\n    }\n    console.log(total)\n}\n\nfunction parseNumberLine(line, radix = 10) {\n    return line.split(/\\s+/).map(_ => parseInt(_, radix))\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02675_1", "type": "JavaScript", "obfuscated": "var a0_0x38f952 = a0_0x1051;\nfunction a0_0x1051(rBjwMI, key) {\n    var stringArray = a0_0x4b6f();\n    a0_0x1051 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1051(rBjwMI, key);\n}\nfunction Main(input) {\n    var _0x343001 = a0_0x1051;\n    input = '' + input + '';\n    input = input[_0x343001(0x0)](input[_0x343001(0x1)] - 0x1, 0x1);\n    var d = '';\n    if (input == 0x2 || input == 0x4 || input == 0x5 || input == 0x7 || input == 0x9) {\n        d = _0x343001(0x2);\n    }\n    if (input == 0x0 || input == 0x1 || input == 0x6 || input == 0x8) {\n        d = 'pon';\n    }\n    if (input == 0x3) {\n        d = 'bon';\n    }\n    console[_0x343001(0x3)](d);\n}\nMain(require('fs')[a0_0x38f952(0x4)](a0_0x38f952(0x5), a0_0x38f952(0x6)));\nfunction a0_0x4b6f() {\n    var _0x2487d2 = [\n        'substr',\n        'length',\n        'hon',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4b6f = function () {\n        return _0x2487d2;\n    };\n    return a0_0x4b6f();\n}", "test_cases": [["16", "pon"], ["2", "hon"], ["183", "bon"]], "original": "function Main(input)\n{\n\tinput = \"\"+input+\"\";\n\tinput = input.substr(input.length - 1, 1);\n\tvar d = \"\";\n\n\tif (input == 2 || input == 4 || input == 5 ||input == 7 ||input == 9 )\n\t{\n\t\td = \"hon\";\n\t}\n\n\tif (input == 0 || input == 1 || input == 6 ||input == 8)\n\t{\n\t\td = \"pon\";\n\t}\n\n\tif (input == 3 )\n\t{\n\t\td = \"bon\";\n\t}\n\n\tconsole.log(d);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02830_1", "type": "JavaScript", "obfuscated": "const a0_0x2fb0ae = a0_0x5b73;\nfunction Main(input) {\n    const _0x66c5a2 = a0_0x5b73;\n    input = input[_0x66c5a2(0x0)]()[_0x66c5a2(0x1)]('\\x0a');\n    const N = parseInt(input[0x0]);\n    const array = input[0x1][_0x66c5a2(0x1)]('\\x20');\n    const S = array[0x0];\n    const T = array[0x1];\n    let ans = '';\n    for (let i = 0x0; i < N; ++i) {\n        ans += S[i];\n        ans += T[i];\n    }\n    console[_0x66c5a2(0x2)](ans);\n}\nfunction a0_0x5b73(xZFPiX, key) {\n    const stringArray = a0_0x36bc();\n    a0_0x5b73 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b73(xZFPiX, key);\n}\nfunction a0_0x36bc() {\n    const _0x1e7a52 = [\n        'trim',\n        'split',\n        'log',\n        'utf8'\n    ];\n    a0_0x36bc = function () {\n        return _0x1e7a52;\n    };\n    return a0_0x36bc();\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x2fb0ae(0x3)));", "test_cases": [["2\nip cc", "icpc"], ["8\nhmhmnknk uuuuuuuu", "humuhumunukunuku"], ["5\naaaaa aaaaa", "aaaaaaaaaa"]], "original": "function Main(input) {\n  input = input.trim().split('\\n')\n  const N = parseInt(input[0])\n  const array = input[1].split(' ')\n  const S = array[0]\n  const T = array[1]\n  let ans = ''\n  for(let i = 0; i < N; ++i) {\n    ans += S[i]\n    ans += T[i]\n  }\n \n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02848_1", "type": "JavaScript", "obfuscated": "const a0_0x3cd749 = a0_0x4807;\nfunction a0_0x4807(WqpHab, key) {\n    const stringArray = a0_0x54b8();\n    a0_0x4807 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4807(WqpHab, key);\n}\nfunction a0_0x54b8() {\n    const _0x17aa14 = [\n        'filter',\n        'split',\n        'charCodeAt',\n        'fromCharCode',\n        'join',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x54b8 = function () {\n        return _0x17aa14;\n    };\n    return a0_0x54b8();\n}\nfunction Main(input) {\n    const _0x4b5661 = a0_0x4807;\n    const inputs = input['split']('\\x0a')[_0x4b5661(0x0)](v => v);\n    const n = Number(inputs[0x0]);\n    const strs = inputs[0x1][_0x4b5661(0x1)]('');\n    console['log'](strs['map'](function (s) {\n        const _0x4341b5 = a0_0x4807;\n        let c = s[_0x4341b5(0x2)]() + n;\n        if (c > 0x5a) {\n            c -= 0x1a;\n        }\n        return String[_0x4341b5(0x3)](c);\n    })[_0x4b5661(0x4)](''));\n}\nMain(require('fs')['readFileSync'](a0_0x3cd749(0x5), a0_0x3cd749(0x6)));", "test_cases": [["2\nABCXYZ", "CDEZAB"], ["0\nABCXYZ", "ABCXYZ"], ["13\nABCDEFGHIJKLMNOPQRSTUVWXYZ", "NOPQRSTUVWXYZABCDEFGHIJKLM"]], "original": "function Main(input) {\n  const inputs = input.split('\\n')\n    .filter(v => v);\n  const n = Number(inputs[0]);\n  const strs = inputs[1]\n    .split('');\n  \n  console.log(strs.map(function(s) {\n    let c = s.charCodeAt() + n;\n    if (c > 90) {\n      c -= 26;\n    }\n    return String.fromCharCode(c)\n  }).join(''));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02952_1", "type": "JavaScript", "obfuscated": "var a0_0x5a0b01 = a0_0x3777;\nfunction keta(num) {\n    for (var i = 0x1; i <= 0x6; i++) {\n        if (num < 0xa ** i)\n            return i % 0x2;\n    }\n}\nfunction a0_0x3777(oUFTsD, key) {\n    var stringArray = a0_0x52a4();\n    a0_0x3777 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3777(oUFTsD, key);\n}\nfunction Main(input) {\n    var _0x469011 = a0_0x3777;\n    var ans = 0x0;\n    var cnt = 0x1;\n    while (cnt <= input) {\n        ans += keta(cnt);\n        cnt++;\n    }\n    console[_0x469011(0x0)](ans);\n}\nfunction a0_0x52a4() {\n    var _0xbc7f4c = [\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x52a4 = function () {\n        return _0xbc7f4c;\n    };\n    return a0_0x52a4();\n}\nMain(require('fs')[a0_0x5a0b01(0x1)]('/dev/stdin', a0_0x5a0b01(0x2)));", "test_cases": [["11", "9"], ["136", "46"], ["100000", "90909"]], "original": "function keta(num) {\n    for(var i=1; i<=6; i++) {\n        if(num < 10**i) return i%2;\n    }\n}\n\nfunction Main(input) {\n    var ans = 0;\n    var cnt = 1;\n    while(cnt <= input) {\n        ans += keta(cnt);\n        cnt++;\n    }\n    console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02987_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const _0x5acae3 = a0_0x157b;\n    const inputList = input[_0x5acae3(0x0)]('');\n    const list = [];\n    inputList['forEach'](il => {\n        const _0x58b93b = a0_0x157b;\n        if (!list['some'](l => l === il)) {\n            list[_0x58b93b(0x1)](il);\n        }\n    });\n    const result = list[_0x5acae3(0x2)] === 0x2 ? _0x5acae3(0x3) : 'No';\n    console[_0x5acae3(0x4)](result);\n}\nfunction a0_0x3d20() {\n    const _0x34f4f1 = [\n        'split',\n        'push',\n        'length',\n        'Yes',\n        'log'\n    ];\n    a0_0x3d20 = function () {\n        return _0x34f4f1;\n    };\n    return a0_0x3d20();\n}\nfunction a0_0x157b(cDsjcG, key) {\n    const stringArray = a0_0x3d20();\n    a0_0x157b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x157b(cDsjcG, key);\n}\n;\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["ASSA", "Yes"], ["STOP", "No"], ["FFEE", "Yes"], ["FREE", "No"]], "original": "function main(input) {\n  // 入力値（文字列）を改行で区切る\n  const inputList = input.split('');\n  const list = [];\n  inputList.forEach(il => {\n    if (!list.some(l => l === il)) {\n      list.push(il);\n    }\n  });\n  const result = list.length === 2 ? 'Yes' : 'No';\n  console.log(result);\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03036_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2712(IkLqNQ, key) {\n    const stringArray = a0_0x2c95();\n    a0_0x2712 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2712(IkLqNQ, key);\n}\n(function (input) {\n    const _0x2b4777 = a0_0x2712;\n    input = input[_0x2b4777(0x0)]()[_0x2b4777(0x1)](/\\s+/)[_0x2b4777(0x2)](x => x - 0x0);\n    const r = input[0x0];\n    const D = input[0x1];\n    let x = input[0x2];\n    let ans = new Array(0xa);\n    for (let i = 0x0; i < 0xa; i++) {\n        x = r * x - D;\n        ans[i] = x;\n    }\n    console['log'](ans[_0x2b4777(0x3)]('\\x0a'));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));\nfunction a0_0x2c95() {\n    const _0xfdb3e8 = [\n        'trim',\n        'split',\n        'map',\n        'join'\n    ];\n    a0_0x2c95 = function () {\n        return _0xfdb3e8;\n    };\n    return a0_0x2c95();\n}", "test_cases": [["2 10 20", "30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250"], ["4 40 60", "200\n760\n3000\n11960\n47800\n191160\n764600\n3058360\n12233400\n48933560"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const r=input[0];\n  const D=input[1];\n  let x=input[2];\n  let ans=new Array(10);\n  for(let i=0;i<10;i++){\n    x=r*x-D;\n    ans[i]=x;\n  }\n  \n  console.log(ans.join('\\n'));\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03048_1", "type": "JavaScript", "obfuscated": "function a0_0x520f(LwrSde, key) {\n    var stringArray = a0_0x4a3d();\n    a0_0x520f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x520f(LwrSde, key);\n}\nvar a0_0x1342c6 = a0_0x520f;\nfunction main(input) {\n    var _0x4294fc = a0_0x520f;\n    const args = input[_0x4294fc(0x0)]('\\x20');\n    const R = parseInt(args[0x0], 0xa), G = parseInt(args[0x1], 0xa), B = parseInt(args[0x2], 0xa), N = parseInt(args[0x3], 0xa);\n    var s = 0x0;\n    var k = 0x0;\n    for (var i = 0x0; i <= (N / R | 0x0); ++i) {\n        for (var j = 0x0; j <= (N / G | 0x0); ++j) {\n            k = (N - i * R - j * G) / B | 0x0;\n            if (k >= 0x0 && i * R + j * G + k * B == N)\n                ++s;\n        }\n    }\n    console['log'](s);\n}\nmain(require('fs')[a0_0x1342c6(0x1)](a0_0x1342c6(0x2), a0_0x1342c6(0x3)));\nfunction a0_0x4a3d() {\n    var _0x407751 = [\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4a3d = function () {\n        return _0x407751;\n    };\n    return a0_0x4a3d();\n}", "test_cases": [["1 2 3 4", "4"], ["13 1 4 3000", "87058"]], "original": "function main(input){\n  const args = input.split(' ');\n  const R = parseInt(args[0], 10),\n        G = parseInt(args[1], 10),\n        B = parseInt(args[2], 10),\n        N = parseInt(args[3], 10);\n  \n  var s = 0;\n  var k = 0;\n  for (var i = 0; i <= (N / R | 0); ++i){\n    for (var j = 0; j <= (N / G | 0); ++j){\n      k = ((N - i*R - j*G) / B) | 0;\n      if (k >= 0 && i*R + j*G + k*B == N) ++s;\n    }\n  }\n  console.log(s);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03060_1", "type": "JavaScript", "obfuscated": "function a0_0x4c9e(WViWtG, key) {\n    var stringArray = a0_0x4a30();\n    a0_0x4c9e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c9e(WViWtG, key);\n}\nfunction a0_0x4a30() {\n    var _0x1f644c = [\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4a30 = function () {\n        return _0x1f644c;\n    };\n    return a0_0x4a30();\n}\nvar a0_0x43e055 = a0_0x4c9e;\nfunction Main(input) {\n    var _0x1897bd = a0_0x4c9e;\n    input = input[_0x1897bd(0x0)]('\\x0a');\n    n = Number(input[0x0][_0x1897bd(0x0)]('\\x20'));\n    V = input[0x1][_0x1897bd(0x0)]('\\x20')[_0x1897bd(0x1)](Number);\n    C = input[0x2][_0x1897bd(0x0)]('\\x20')['map'](Number);\n    var Y = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        y = V[i] - C[i];\n        if (y >= 0x0) {\n            Y = Y + y;\n        }\n    }\n    console['log'](Y);\n}\nMain(require('fs')[a0_0x43e055(0x2)](a0_0x43e055(0x3), a0_0x43e055(0x4)));", "test_cases": [["3\n10 2 5\n6 3 4", "5"], ["4\n13 21 6 19\n11 30 6 15", "6"], ["1\n1\n50", "0"]], "original": "//   2次配列のよみこみ\n\nfunction Main(input) {\n    input = input.split(\"\\n\");\n  \tn = Number(input[0].split(\" \"));\n    V = input[1].split(\" \").map(Number);\n    C = input[2].split(\" \").map(Number);\n    \n  //  console.log(n);\n  //  console.log(V);\n  //  console.log(C);\n    \n    \n  \tvar Y = 0;\n  \tfor(var i=0; i<n; i++){y = V[i]-C[i];\n                             if ( y >= 0){Y = Y + y;}\n                                      }\n   console.log(Y);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03145_1", "type": "JavaScript", "obfuscated": "var a0_0x3ca70d = a0_0x4cb8;\nfunction Main(input) {\n    var _0x4968ea = a0_0x4cb8;\n    var inputs = input[_0x4968ea(0x0)]('\\x20');\n    var ab = parseInt(inputs[0x0], 0xa);\n    var bc = parseInt(inputs[0x1], 0xa);\n    console[_0x4968ea(0x1)](ab * bc / 0x2);\n}\nfunction a0_0x4cb8(xoMMVe, key) {\n    var stringArray = a0_0x1b20();\n    a0_0x4cb8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cb8(xoMMVe, key);\n}\nMain(require('fs')['readFileSync'](a0_0x3ca70d(0x2), a0_0x3ca70d(0x3)));\nfunction a0_0x1b20() {\n    var _0x3b6ca1 = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1b20 = function () {\n        return _0x3b6ca1;\n    };\n    return a0_0x1b20();\n}", "test_cases": [["3 4 5", "6"], ["5 12 13", "30"], ["45 28 53", "630"]], "original": "function Main(input){ \n  var inputs = input.split(\" \");\n  var ab = parseInt(inputs[0],10);\n  var bc = parseInt(inputs[1],10);\n  console.log(ab*bc/2); \n  \n}\n    Main(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03327_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x24c1(OviKmL, key) {\n    const stringArray = a0_0x3ae7();\n    a0_0x24c1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x24c1(OviKmL, key);\n}\nconst a0_0x152f27 = a0_0x24c1;\nfunction Main(input) {\n    const _0x441188 = a0_0x24c1;\n    const N = Number(input);\n    if (N <= 0x3e7) {\n        console[_0x441188(0x0)](_0x441188(0x1));\n    } else {\n        console[_0x441188(0x0)](_0x441188(0x2));\n    }\n}\nMain(require('fs')[a0_0x152f27(0x3)](a0_0x152f27(0x4), 'utf8')[a0_0x152f27(0x5)]());\nfunction a0_0x3ae7() {\n    const _0x5cb993 = [\n        'log',\n        'ABC',\n        'ABD',\n        'readFileSync',\n        '/dev/stdin',\n        'trim'\n    ];\n    a0_0x3ae7 = function () {\n        return _0x5cb993;\n    };\n    return a0_0x3ae7();\n}", "test_cases": [["999", "ABC"], ["1000", "ABD"], ["1481", "ABD"]], "original": "'use strict'\n\nfunction Main(input) {\n  const N = Number(input);\n\n  if(N <= 999) {\n    console.log('ABC');\n  } else {\n    console.log('ABD');\n  }\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03360_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1fe90e = a0_0x39f8;\nconst main = input => {\n    const _0x280fff = a0_0x39f8;\n    input = input['split']('\\x0a');\n    const nums = input[0x0][_0x280fff(0x0)]('\\x20')[_0x280fff(0x1)](i => parseInt(i));\n    const K = parseInt(input[0x1]);\n    nums[_0x280fff(0x2)]((a, b) => a - b);\n    let n = nums[_0x280fff(0x3)]();\n    n = n * Math[_0x280fff(0x4)](0x2, K);\n    nums[_0x280fff(0x5)](n);\n    console['log'](nums[_0x280fff(0x6)]((p, c) => p + c));\n};\nfunction a0_0x39f8(TklsDX, key) {\n    const stringArray = a0_0x3626();\n    a0_0x39f8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x39f8(TklsDX, key);\n}\nmain(require('fs')[a0_0x1fe90e(0x7)](a0_0x1fe90e(0x8), 'utf-8'));\nfunction a0_0x3626() {\n    const _0x11e70e = [\n        'split',\n        'map',\n        'sort',\n        'pop',\n        'pow',\n        'push',\n        'reduce',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3626 = function () {\n        return _0x11e70e;\n    };\n    return a0_0x3626();\n}", "test_cases": [["5 3 11\n1", "30"], ["3 3 4\n2", "22"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const nums = input[0].split(' ').map(i => parseInt(i))\n    const K = parseInt(input[1])\n\n    nums.sort((a, b) => a - b)\n    let n = nums.pop()\n    n = n * Math.pow(2, K)\n    nums.push(n)\n    console.log(nums.reduce((p, c) => p + c))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03473_1", "type": "JavaScript", "obfuscated": "var a0_0x463cde = a0_0x1aa9;\nfunction Main(input) {\n    var _0x58128c = a0_0x1aa9;\n    input = input['trim']();\n    console[_0x58128c(0x0)](0x18 + (0x18 - input));\n}\nMain(require('fs')['readFileSync'](a0_0x463cde(0x1), a0_0x463cde(0x2)));\nfunction a0_0x1aa9(dMRHbN, key) {\n    var stringArray = a0_0x1356();\n    a0_0x1aa9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1aa9(dMRHbN, key);\n}\nfunction a0_0x1356() {\n    var _0xcd44e1 = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1356 = function () {\n        return _0xcd44e1;\n    };\n    return a0_0x1356();\n}", "test_cases": [["21", "27"], ["12", "36"]], "original": "function Main(input) {\n  input = input.trim()\n//  input = input.split(\" \").map(Number);\nconsole.log(24+(24-input))\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03574_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x30d9(CxtXhC, key) {\n    const stringArray = a0_0x1d57();\n    a0_0x30d9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x30d9(CxtXhC, key);\n}\nconst a0_0x1fe901 = a0_0x30d9;\nfunction Main(input) {\n    const _0x24f170 = a0_0x30d9;\n    input = input[_0x24f170(0x0)]()[_0x24f170(0x1)]('\\x0a');\n    const hw = input['shift']()['split']('\\x20')[_0x24f170(0x2)](str => Number(str));\n    const H = hw[0x0], W = hw[0x1];\n    const data = input[_0x24f170(0x2)](ls => ls[_0x24f170(0x1)](''));\n    const hy = [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    const wx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    for (let i = 0x0; i < H; i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (data[i][j] === '#')\n                continue;\n            let count = 0x0;\n            for (let k = 0x0; k < 0x8; k++) {\n                const y = i + hy[k], x = j + wx[k];\n                if (y < 0x0 || H <= y)\n                    continue;\n                if (x < 0x0 || W <= x)\n                    continue;\n                if (data[y][x] === '#') {\n                    count += 0x1;\n                }\n            }\n            data[i][j] = count;\n        }\n    }\n    const result = data['map'](ls => ls['join'](''))[_0x24f170(0x3)]('\\x0a');\n    console[_0x24f170(0x4)](result);\n}\nMain(require('fs')[a0_0x1fe901(0x5)](a0_0x1fe901(0x6), a0_0x1fe901(0x7)));\nfunction a0_0x1d57() {\n    const _0xcd6281 = [\n        'trim',\n        'split',\n        'map',\n        'join',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1d57 = function () {\n        return _0xcd6281;\n    };\n    return a0_0x1d57();\n}", "test_cases": [["3 5\n.....\n.#.#.\n.....", "11211\n1#2#1\n11211"], ["3 5\n#####\n#####\n#####", "#####\n#####\n#####"], ["6 6\n#####.\n#.#.##\n####.#\n.#..#.\n#.##..\n#.#...", "#####3\n#8#7##\n####5#\n4#65#2\n#5##21\n#4#310"]], "original": "'use strict'\nfunction Main(input){\n  input = input.trim().split('\\n');\n  const hw = input.shift().split(' ').map((str)=> Number(str));\n  const H  = hw[0], W = hw[1];  \n  const data = input.map(ls => ls.split(''));\n  \n  const hy = [-1, -1, -1, 0, 0, 1, 1, 1];\n  const wx = [-1, 0, 1, -1, 1, -1, 0, 1];\n  \n  for(let i = 0; i < H; i++){\n    for(let j = 0; j < W; j++){\n      \n      if(data[i][j] === '#') continue;\n      \n      let count = 0;\n      for(let k = 0; k < 8; k++){\n        const y = i + hy[k] , x = j + wx[k]; \n        if(y < 0 || H <= y) continue;\n        if(x < 0 || W <= x) continue;\n        \n        if(data[y][x] === '#') {\n          count += 1;\n        }\n      }\n      data[i][j] = count;\n    }\n  }\n  const result = data.map(ls => ls.join('')).join('\\n');\n  console.log(result);\n}\n\n//固定\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04045_1", "type": "JavaScript", "obfuscated": "var a0_0x541da4 = a0_0x4e69;\nfunction main(input) {\n    var _0x2ff82f = a0_0x4e69;\n    var inputs = input['split']('\\x0a');\n    var money = inputs[0x0][_0x2ff82f(0x0)]('\\x20')[0x0];\n    var kRegexp = new RegExp(inputs[0x1]['replace']('\\x20', '|'));\n    while (kRegexp[_0x2ff82f(0x1)](String(money))) {\n        money++;\n    }\n    return money;\n}\nfunction a0_0xd1c1() {\n    var _0x356da2 = [\n        'split',\n        'test',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xd1c1 = function () {\n        return _0x356da2;\n    };\n    return a0_0xd1c1();\n}\nfunction a0_0x4e69(NYjhMe, key) {\n    var stringArray = a0_0xd1c1();\n    a0_0x4e69 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e69(NYjhMe, key);\n}\nconsole[a0_0x541da4(0x2)](main(require('fs')[a0_0x541da4(0x3)](a0_0x541da4(0x4), a0_0x541da4(0x5))));", "test_cases": [["1000 8\n1 3 4 5 6 7 8 9", "2000"], ["9999 1\n0", "9999"]], "original": "function main(input) {\n\tvar inputs = input.split(\"\\n\");\n\tvar money = inputs[0].split(\" \")[0];\n    var kRegexp = new RegExp(inputs[1].replace(\" \",\"|\"));\n    while(kRegexp.test(String(money))){\n    \tmoney++;\n    }\n    return money;\n}\n\nconsole.log(main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")));", "language": "JavaScript"}
{"filename": "p02571_1", "type": "JavaScript", "obfuscated": "function a0_0x5ef1() {\n    const _0x162e75 = [\n        'trim',\n        'split',\n        'length',\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5ef1 = function () {\n        return _0x162e75;\n    };\n    return a0_0x5ef1();\n}\nfunction a0_0x3d97(KRkyWj, key) {\n    const stringArray = a0_0x5ef1();\n    a0_0x3d97 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d97(KRkyWj, key);\n}\nconst a0_0xc96f3a = a0_0x3d97;\n(input => {\n    const _0x5e9334 = a0_0x3d97;\n    const [S, T] = input[_0x5e9334(0x0)]()[_0x5e9334(0x1)]('\\x0a');\n    const sl = S[_0x5e9334(0x2)];\n    const tl = T[_0x5e9334(0x2)];\n    const range = sl - tl;\n    let min = tl;\n    for (let i = 0x0; i < range; i++) {\n        const target = S[_0x5e9334(0x3)](i, tl + i);\n        let diff = 0x0;\n        for (let j = 0x0; j < tl; j++) {\n            if (target[j] !== T[j])\n                diff += 0x1;\n        }\n        if (min > diff) {\n            min = diff;\n        }\n    }\n    console[_0x5e9334(0x4)](min);\n})(require('fs')[a0_0xc96f3a(0x5)](a0_0xc96f3a(0x6), a0_0xc96f3a(0x7)));", "test_cases": [["cabacc\nabc", "1"], ["codeforces\natcoder", "6"]], "original": "((input) => {\n  const [S, T] = input.trim().split('\\n');\n  const sl = S.length;\n  const tl = T.length;\n  const range = sl - tl;\n  let min = tl;\n\n  for (let i = 0; i < range; i++) {\n    const target = S.slice(i, tl + i);\n    let diff = 0;\n    for (let j = 0; j < tl; j++) {\n      if (target[j] !== T[j]) diff += 1;\n    }\n    if (min > diff) {\n      min = diff;\n    }\n   }\n\n  console.log(min);\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02608_1", "type": "JavaScript", "obfuscated": "const a0_0xc87555 = a0_0x2b26;\nfunction Main(input) {\n    const _0x336604 = a0_0x2b26;\n    const N = Number(input);\n    let fn = new Array(N)[_0x336604(0x0)](0x0);\n    for (let x = 0x1; x ** 0x2 <= N; x++) {\n        for (let y = 0x1; y ** 0x2 <= N; y++) {\n            if (x + y > N)\n                break;\n            for (let z = 0x1; z ** 0x2 <= N; z++) {\n                const i = x ** 0x2 + y ** 0x2 + z ** 0x2 + x * y + y * z + z * x;\n                if (i > N)\n                    break;\n                fn[i - 0x1]++;\n            }\n        }\n    }\n    console[_0x336604(0x1)](fn[_0x336604(0x2)]('\\x0a'));\n}\nfunction a0_0x2b26(PqZkkD, key) {\n    const stringArray = a0_0x318e();\n    a0_0x2b26 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b26(PqZkkD, key);\n}\nfunction a0_0x318e() {\n    const _0x495a43 = [\n        'fill',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x318e = function () {\n        return _0x495a43;\n    };\n    return a0_0x318e();\n}\nMain(require('fs')[a0_0xc87555(0x3)](a0_0xc87555(0x4), a0_0xc87555(0x5)));", "test_cases": [["20", "0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n3\n3\n0\n0"]], "original": "// 一回計算した結果を全て持っておく\nfunction Main(input){\n    const N = Number(input);\n    let fn = new Array(N).fill(0);\n    for(let x=1; x**2<=N; x++){\n        for(let y=1; y**2<=N; y++){\n            if(x+y > N) break;\n            for(let z=1; z**2<=N; z++){\n                const i = x**2 + y**2 + z**2 + x*y + y*z + z*x;\n                if(i >N) break;\n                fn[i-1]++\n            }\n        }\n    }\n    console.log(fn.join('\\n'));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02712_1", "type": "JavaScript", "obfuscated": "const a0_0x4a3527 = a0_0x51f0;\nfunction Main(input) {\n    const _0x59af12 = a0_0x51f0;\n    inputs = input['split']('\\x0a');\n    const N = Number(inputs[0x0]);\n    const arr = [];\n    for (let i = 0x1; i <= N; i++) {\n        if (i % 0x3 !== 0x0 && i % 0x5 !== 0x0) {\n            arr[_0x59af12(0x0)](i);\n        }\n    }\n    const sum = arr['reduce']((prev, current) => {\n        return prev + current;\n    });\n    console[_0x59af12(0x1)](sum);\n}\nfunction a0_0x4034() {\n    const _0x5e6d6f = [\n        'push',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4034 = function () {\n        return _0x5e6d6f;\n    };\n    return a0_0x4034();\n}\nfunction a0_0x51f0(ftvGwg, key) {\n    const stringArray = a0_0x4034();\n    a0_0x51f0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x51f0(ftvGwg, key);\n}\nMain(require('fs')['readFileSync'](a0_0x4a3527(0x2), a0_0x4a3527(0x3)));", "test_cases": [["15", "60"], ["1000000", "266666333332"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  inputs = input.split(\"\\n\");\n  \n  const N = Number(inputs[0]);\n  const arr = [];\n  for( let i = 1 ; i  <= N ; i++ ){\n    if( i % 3 !== 0 && i % 5 !== 0){\n      arr.push(i);\n    }\n  }\n\n  const sum = arr.reduce( (prev,current) => {\n    return prev + current;\n  });\n\n  console.log(sum);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02754_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1659(HkPcUV, key) {\n    const stringArray = a0_0x395a();\n    a0_0x1659 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1659(HkPcUV, key);\n}\nconst a0_0x2aa383 = a0_0x1659;\nfunction main(input) {\n    const _0x57ef9b = a0_0x1659;\n    let kari = input[0x0][_0x57ef9b(0x0)]()[_0x57ef9b(0x1)]('\\x20');\n    let n = parseInt(kari[0x0]);\n    let a = parseInt(kari[0x1]);\n    let b = parseInt(kari[0x2]);\n    let c = a + b;\n    let ans = 0x0;\n    if (a === 0x0) {\n        console[_0x57ef9b(0x2)](0x0);\n    } else if (b === 0x0) {\n        if (_0x57ef9b(0x3) === _0x57ef9b(0x4)) {\n            console[_0x57ef9b(0x2)](0x0);\n        } else {\n            console[_0x57ef9b(0x2)](n);\n        }\n    } else {\n        if (n % c < a) {\n            ans = Math[_0x57ef9b(0x5)](n / c) * a + n % c;\n        } else {\n            ans = Math['floor'](n / c) * a + a;\n        }\n        console[_0x57ef9b(0x2)](ans);\n    }\n}\nfunction a0_0x395a() {\n    const _0x508fdf = [\n        'trim',\n        'split',\n        'log',\n        'CsxOy',\n        'MsEhk',\n        'floor',\n        'readFileSync'\n    ];\n    a0_0x395a = function () {\n        return _0x508fdf;\n    };\n    return a0_0x395a();\n}\nmain(require('fs')[a0_0x2aa383(0x6)]('/dev/stdin', 'utf8')[a0_0x2aa383(0x0)]()[a0_0x2aa383(0x1)]('\\x0a'));", "test_cases": [["8 3 4", "4"], ["8 0 4", "0"], ["6 2 4", "2"]], "original": "\"use strict\";\nfunction main(input) {\n  let kari = input[0].trim().split(\" \");\n \n  let n = parseInt(kari[0]);\n  let a = parseInt(kari[1]);\n  let b = parseInt(kari[2]);\n \n  let c = a + b;\n  let ans = 0;\n\n  if(a === 0){\n    console.log(0);\n  }else if(b === 0){\n    console.log(n);\n  }else{\n    if(n%c < a){\n      ans = Math.floor(n/c)*a + n%c;\n    }else{\n      ans = Math.floor(n/c)*a + a;\n    }\n    console.log(ans);\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02773_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2c0a(XSVBUu, key) {\n    const stringArray = a0_0x19bc();\n    a0_0x2c0a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c0a(XSVBUu, key);\n}\nconst a0_0x13a64c = a0_0x2c0a;\nconst main = arg => {\n    const _0x123341 = a0_0x2c0a;\n    const rows = arg[_0x123341(0x0)]()[_0x123341(0x1)]('\\x0a');\n    const N = rows[_0x123341(0x2)]();\n    let wordsObj = {};\n    rows[_0x123341(0x3)](row => {\n        const _0x1b07dc = a0_0x2c0a;\n        if (_0x1b07dc(0x4) !== _0x1b07dc(0x5)) {\n            if (wordsObj[row]) {\n                wordsObj[row]++;\n            } else {\n                wordsObj[row] = 0x1;\n            }\n        } else {\n            ansArr[_0x1b07dc(0x6)](Object['keys'](wordsObj)[i]);\n        }\n    });\n    let ansArr = [];\n    let max = 0x0;\n    let output = w => {\n        console['log'](w);\n    };\n    for (let i = 0x0; i < Object[_0x123341(0x7)](wordsObj)[_0x123341(0x8)]; i++) {\n        if (wordsObj[Object[_0x123341(0x7)](wordsObj)[i]] < max) {\n            continue;\n        } else if (wordsObj[Object[_0x123341(0x7)](wordsObj)[i]] > max) {\n            ansArr = [];\n            ansArr[_0x123341(0x6)](Object[_0x123341(0x7)](wordsObj)[i]);\n            max = wordsObj[Object[_0x123341(0x7)](wordsObj)[i]];\n        } else if (wordsObj[Object[_0x123341(0x7)](wordsObj)[i]] * 0x1 == max) {\n            if (_0x123341(0x9) !== 'qnQGI') {\n                ansArr[_0x123341(0x6)](Object['keys'](wordsObj)[i]);\n            } else {\n                console[_0x123341(0xa)](w);\n            }\n        }\n    }\n    ansArr['sort']();\n    ansArr[_0x123341(0x3)](output);\n};\nmain(require('fs')[a0_0x13a64c(0xb)](a0_0x13a64c(0xc), a0_0x13a64c(0xd)));\nfunction a0_0x19bc() {\n    const _0x2371be = [\n        'trim',\n        'split',\n        'shift',\n        'forEach',\n        'kLSXB',\n        'bOxGj',\n        'push',\n        'keys',\n        'length',\n        'jQouM',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x19bc = function () {\n        return _0x2371be;\n    };\n    return a0_0x19bc();\n}", "test_cases": [["7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet", "beet\nvet"], ["8\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo", "buffalo"], ["7\nbass\nbass\nkick\nkick\nbass\nkick\nkick", "kick"], ["4\nushi\ntapu\nnichia\nkun", "kun\nnichia\ntapu\nushi"]], "original": "\"use strict\";\nconst main = arg => {\n  \tconst rows = arg.trim().split(\"\\n\");\n  \tconst N = rows.shift();\n  \tlet wordsObj = {};\n  \trows.forEach(row => {\n    \tif(wordsObj[row]){\n        \twordsObj[row]++;\n        } else {\n        \twordsObj[row] = 1;\n        }\n    })\n  \tlet ansArr = [];\n  \tlet max = 0;\n  \tlet output = (w) => {console.log(w)};\n  \tfor(let i = 0; i < Object.keys(wordsObj).length; i++){\n    \tif(wordsObj[Object.keys(wordsObj)[i]] < max){\t\n          continue;\n        } else if(wordsObj[Object.keys(wordsObj)[i]] > max){\t\n          \tansArr = [];\n        \tansArr.push(Object.keys(wordsObj)[i]);\n          \tmax = wordsObj[Object.keys(wordsObj)[i]];\n        } else if(wordsObj[Object.keys(wordsObj)[i]]*1 == max){\n        \tansArr.push(Object.keys(wordsObj)[i])\n        }\n    }\n\tansArr.sort();\n  \tansArr.forEach(output);\n  \t\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02891_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1036(rsfAGL, key) {\n    const stringArray = a0_0x16ec();\n    a0_0x1036 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1036(rsfAGL, key);\n}\nfunction a0_0x16ec() {\n    const _0x327b22 = [\n        'trim',\n        'split',\n        'log',\n        'length',\n        'floor',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x16ec = function () {\n        return _0x327b22;\n    };\n    return a0_0x16ec();\n}\nconst a0_0x4c633f = a0_0x1036;\nconst main = arg => {\n    const _0x3270f6 = a0_0x1036;\n    arg = arg[_0x3270f6(0x0)]()['split']('\\x0a');\n    const S = arg[0x0][_0x3270f6(0x1)]('');\n    const K = parseInt(arg[0x1]);\n    let streakS = 0x0;\n    for (let i = 0x1; i < S['length']; i++) {\n        if (S[i] === S[i - 0x1]) {\n            streakS++;\n            S[i] = '@';\n        }\n    }\n    console[_0x3270f6(0x2)](S[_0x3270f6(0x3)] === 0x1 ? Math[_0x3270f6(0x4)](K / 0x2) : streakS * K);\n};\nmain(require('fs')[a0_0x4c633f(0x5)](a0_0x4c633f(0x6), 'utf8'));", "test_cases": [["issii\n2", "4"], ["qq\n81", "81"], ["cooooooooonteeeeeeeeeest\n999993333", "8999939997"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    const K = parseInt(arg[1]);\n\n    let streakS = 0;\n    \n    // まずSの連続箇所を調べる\n    for(let i=1; i<S.length; i++) {\n        // 連続している\n        if(S[i] === S[i-1]) {\n            streakS++;\n            S[i] = \"@\";\n        }\n    }\n    \n    console.log(S.length === 1 ? Math.floor(K / 2) : streakS * K);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02898_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x8b8d95 = a0_0x4c24;\nfunction a0_0xbad4() {\n    const _0x5aa7db = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        'UTF-8'\n    ];\n    a0_0xbad4 = function () {\n        return _0x5aa7db;\n    };\n    return a0_0xbad4();\n}\nfunction a0_0x4c24(sHbvnJ, key) {\n    const stringArray = a0_0xbad4();\n    a0_0x4c24 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c24(sHbvnJ, key);\n}\nfunction main(input) {\n    const _0xe5e8f5 = a0_0x4c24;\n    let pass_friend_num = parseInt(input['split']('\\x0a')[0x0][_0xe5e8f5(0x0)]('\\x20')[0x0]);\n    const pass_height = parseInt(input[_0xe5e8f5(0x0)]('\\x0a')[0x0][_0xe5e8f5(0x0)]('\\x20')[0x1]);\n    const friend_height_data = input['split']('\\x0a')[0x1][_0xe5e8f5(0x0)]('\\x20');\n    for (let i = 0x0; i < friend_height_data[_0xe5e8f5(0x1)]; i++) {\n        if (pass_height > parseInt(friend_height_data[i])) {\n            pass_friend_num--;\n        }\n    }\n    console[_0xe5e8f5(0x2)](pass_friend_num);\n}\nmain(require('fs')[a0_0x8b8d95(0x3)]('/dev/stdin', a0_0x8b8d95(0x4)));", "test_cases": [["4 150\n150 140 100 200", "2"], ["1 500\n499", "0"], ["5 1\n100 200 300 400 500", "5"]], "original": "\"use strict\";\n\nfunction main(input) {\n  let pass_friend_num = parseInt(input.split(\"\\n\")[0].split(\" \")[0]);\n  const pass_height = parseInt(input.split(\"\\n\")[0].split(\" \")[1]);\n\n  const friend_height_data = input.split(\"\\n\")[1].split(\" \");\n\n  for (let i = 0; i < friend_height_data.length; i++) {\n    if (pass_height > parseInt(friend_height_data[i])) {\n      pass_friend_num--;\n    }\n  }\n\n  console.log(pass_friend_num);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\"));\n", "language": "JavaScript"}
{"filename": "p02909_1", "type": "JavaScript", "obfuscated": "var a0_0x286fa8 = a0_0xdc40;\nfunction Main(arg) {\n    var _0x2d2f4a = a0_0xdc40;\n    var N = arg[_0x2d2f4a(0x0)]('\\x0a')[0x0];\n    if (N === 'Sunny') {\n        console[_0x2d2f4a(0x1)](_0x2d2f4a(0x2));\n    } else if (N === _0x2d2f4a(0x2)) {\n        console[_0x2d2f4a(0x1)](_0x2d2f4a(0x3));\n    } else if (N === 'Rainy') {\n        console['log'](_0x2d2f4a(0x4));\n    }\n}\nfunction a0_0xdc40(ELdGPa, key) {\n    var stringArray = a0_0x5337();\n    a0_0xdc40 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdc40(ELdGPa, key);\n}\nfunction a0_0x5337() {\n    var _0x112d7b = [\n        'split',\n        'log',\n        'Cloudy',\n        'Rainy',\n        'Sunny',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5337 = function () {\n        return _0x112d7b;\n    };\n    return a0_0x5337();\n}\nMain(require('fs')[a0_0x286fa8(0x5)](a0_0x286fa8(0x6), a0_0x286fa8(0x7)));", "test_cases": [["Sunny", "Cloudy"], ["Rainy", "Sunny"]], "original": "\nfunction Main(arg) {\n \n    var N = arg.split(\"\\n\")[0];\n\n    if (N === \"Sunny\") {\n       console.log(\"Cloudy\");\n    }\n    else if (N === \"Cloudy\") {\n        console.log(\"Rainy\");\n    }\n    else if (N === \"Rainy\") {\n        console.log(\"Sunny\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02911_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2b6d77 = a0_0x40ed;\nlet arg_str = require('fs')[a0_0x2b6d77(0x0)]('/dev/stdin', a0_0x2b6d77(0x1));\narg_str = arg_str['split']('\\x0a');\nconst arg_str_0 = arg_str[0x0][a0_0x2b6d77(0x2)]('\\x20');\nfunction a0_0x293d() {\n    const _0x4a0ad6 = [\n        'readFileSync',\n        'UTF-8',\n        'split',\n        'slice',\n        'Yes'\n    ];\n    a0_0x293d = function () {\n        return _0x4a0ad6;\n    };\n    return a0_0x293d();\n}\nconst N = arg_str_0[0x0];\nconst K = arg_str_0[0x1];\nconst Q = arg_str_0[0x2];\nconst A_array = arg_str[a0_0x2b6d77(0x3)](0x1);\nlet result_val = [];\nfor (let i = 0x0; i < N; i++) {\n    result_val[i] = K;\n}\nfunction a0_0x40ed(LtuBUF, key) {\n    const stringArray = a0_0x293d();\n    a0_0x40ed = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x40ed(LtuBUF, key);\n}\nA_array['forEach']((item, index) => {\n    for (let i = 0x0; i < N; i++) {\n        if (item - 0x1 != i) {\n            result_val[i]--;\n        }\n    }\n});\nresult_val['map'](x => x > 0x0 ? console['log'](a0_0x2b6d77(0x4)) : console['log']('No'));", "test_cases": [["6 3 4\n3\n1\n3\n2", "No\nNo\nYes\nNo\nNo\nNo"], ["6 5 4\n3\n1\n3\n2", "Yes\nYes\nYes\nYes\nYes\nYes"], ["10 13 15\n3\n1\n4\n1\n5\n9\n2\n6\n5\n3\n5\n8\n9\n7\n9", "No\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nYes\nNo"]], "original": "\"use strict\"\n \nlet arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\narg_str = arg_str.split('\\n')\nconst arg_str_0 = arg_str[0].split(' ')\nconst N = arg_str_0[0]\nconst K = arg_str_0[1]\nconst Q = arg_str_0[2]\n \nconst A_array = arg_str.slice(1)\n \nlet result_val = []\n \nfor(let i=0;i<N;i++){\n  result_val[i] = K\n}\n \nA_array.forEach((item, index)=>{\n  for(let i=0;i<N;i++){\n    if(item - 1 != i){\n        result_val[i]--\n    }\n  }\n})\n \nresult_val.map(x=>x>0 ? console.log('Yes') : console.log('No'))\n", "language": "JavaScript"}
{"filename": "p02982_1", "type": "JavaScript", "obfuscated": "function a0_0x15eb(PYtDbc, key) {\n    var stringArray = a0_0x55f6();\n    a0_0x15eb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15eb(PYtDbc, key);\n}\nfunction a0_0x55f6() {\n    var _0x176f7f = [\n        'split',\n        'AwUPN',\n        'fQnhN',\n        'push',\n        'vazVw',\n        'pow',\n        'isInteger',\n        'sqrt',\n        'CMIkF',\n        'buXpI',\n        'ZGWTX',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x55f6 = function () {\n        return _0x176f7f;\n    };\n    return a0_0x55f6();\n}\nvar a0_0x3bcfc8 = a0_0x15eb;\nfunction main(input) {\n    var _0x3dd105 = a0_0x15eb;\n    const args = input[_0x3dd105(0x0)]('\\x0a');\n    const aiueo = args[0x0][_0x3dd105(0x0)]('\\x20');\n    const N = parseInt(aiueo[0x0], 0xa);\n    const D = parseInt(aiueo[0x1], 0xa);\n    var arr = [];\n    for (var i = 0x0; i < N; i++) {\n        if (_0x3dd105(0x1) !== _0x3dd105(0x2)) {\n            arr[i] = [];\n            var subArgs = args[i + 0x1]['split']('\\x20');\n            for (var j = 0x0; j < D + 0x1; j++) {\n                arr[i][_0x3dd105(0x3)](parseInt(subArgs[j], 0xa));\n            }\n        } else {\n            for (var j = i + 0x1; j < N; j++) {\n                if (kyori(arr[i], arr[j]) == !![]) {\n                    kakunin++;\n                }\n            }\n        }\n    }\n    var kakunin = 0x0;\n    function kyori(arr1, arr2) {\n        var _0x3e1420 = a0_0x15eb;\n        var sum = 0x0;\n        for (var i = 0x0; i < D; i++) {\n            if (_0x3e1420(0x4) !== 'BaDRN') {\n                sum = sum + Math[_0x3e1420(0x5)](arr1[i] - arr2[i], 0x2);\n            } else {\n                arr[i] = [];\n                var subArgs = args[i + 0x1][_0x3e1420(0x0)]('\\x20');\n                for (var j = 0x0; j < D + 0x1; j++) {\n                    arr[i][_0x3e1420(0x3)](parseInt(subArgs[j], 0xa));\n                }\n            }\n        }\n        if (Number[_0x3e1420(0x6)](Math[_0x3e1420(0x7)](sum)) == !![]) {\n            if (_0x3e1420(0x8) !== _0x3e1420(0x8)) {\n                return !![];\n            } else {\n                return !![];\n            }\n        } else {\n            return ![];\n        }\n    }\n    for (var i = 0x0; i < N; i++) {\n        if (_0x3dd105(0x9) !== _0x3dd105(0xa)) {\n            for (var j = i + 0x1; j < N; j++) {\n                if (kyori(arr[i], arr[j]) == !![]) {\n                    kakunin++;\n                }\n            }\n        } else {\n            return ![];\n        }\n    }\n    console[_0x3dd105(0xb)](kakunin);\n}\nmain(require('fs')[a0_0x3bcfc8(0xc)](a0_0x3bcfc8(0xd), a0_0x3bcfc8(0xe)));", "test_cases": [["3 2\n1 2\n5 5\n-2 8", "1"], ["3 4\n-3 7 8 2\n-12 1 10 2\n-2 8 9 3", "2"], ["5 1\n1\n2\n3\n4\n5", "10"]], "original": "function main(input){\n  const args=input.split(\"\\n\");\n  const aiueo=args[0].split(\" \");\n  const N=parseInt(aiueo[0],10);\n  const D=parseInt(aiueo[1],10);\n\n  //入力された二次元配列を、javascriptで使える形にする\n  //中身はconsole.log(arr)で確認できる\n  var arr=[]\n  for(var i=0; i<N; i++){\n    arr[i]=[];\n    var subArgs= args[i+1].split(\" \")\n    for(var j=0; j<D+1; j++){\n      arr[i].push(parseInt(subArgs[j],10))\n    }\n  }\n\n  var kakunin=0;\n\n  //二点間の距離を出す関数\n  function kyori(arr1,arr2){\n    var sum=0;\n    for(var i=0; i<D; i++){\n      sum=sum+Math.pow(arr1[i]-arr2[i],2)\n    }\n    //console.log(\"距離の二乗は\"+sum+\"です\")\n    if(Number.isInteger(Math.sqrt(sum))==true){\n      return true\n    }else{\n      return false\n    }\n  }\n\n  //以下は判定用のfor文。距離が整数ならkakunin++する。\n  for(var i=0; i<N; i++){\n    for(var j=i+1; j<N; j++){\n      if(kyori(arr[i],arr[j])==true){\n        kakunin++\n      }\n    }\n  }\n  console.log(kakunin)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03049_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2631() {\n    const _0x1b5e35 = [\n        'split',\n        'length',\n        'shift',\n        'forEach',\n        'EJwsd',\n        'charAt',\n        'FjbRr',\n        'EPCtK',\n        'min',\n        'max',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2631 = function () {\n        return _0x1b5e35;\n    };\n    return a0_0x2631();\n}\nconst a0_0x2e02db = a0_0x1e0a;\nfunction a0_0x1e0a(PwUWZt, key) {\n    const stringArray = a0_0x2631();\n    a0_0x1e0a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e0a(PwUWZt, key);\n}\nfunction counter(str, seq) {\n    const _0x2320e6 = a0_0x1e0a;\n    return str[_0x2320e6(0x0)](seq)[_0x2320e6(0x1)] - 0x1;\n}\nfunction main(stdin) {\n    const _0x1bd3d1 = a0_0x1e0a;\n    const input = stdin[_0x1bd3d1(0x0)]('\\x0a');\n    input[_0x1bd3d1(0x2)]();\n    let ans = 0x0;\n    let startsB = 0x0;\n    let endsA = 0x0;\n    let startsBandEndsA = 0x0;\n    input[_0x1bd3d1(0x3)](s => {\n        const _0x171bd0 = a0_0x1e0a;\n        if (_0x171bd0(0x4) === 'NhMVv') {\n            if (s[_0x171bd0(0x5)](s['length'] - 0x1) === 'A') {\n                ++startsBandEndsA;\n            } else {\n                ++startsB;\n            }\n        } else {\n            ans += counter(s, 'AB');\n            if (s[_0x171bd0(0x5)](0x0) === 'B') {\n                if (s[_0x171bd0(0x5)](s['length'] - 0x1) === 'A') {\n                    if (_0x171bd0(0x6) !== _0x171bd0(0x6)) {\n                        return str[_0x171bd0(0x0)](seq)[_0x171bd0(0x1)] - 0x1;\n                    } else {\n                        ++startsBandEndsA;\n                    }\n                } else {\n                    ++startsB;\n                }\n            } else if (s[_0x171bd0(0x5)](s['length'] - 0x1) === 'A') {\n                if (_0x171bd0(0x7) === 'XssBn') {\n                    ++startsBandEndsA;\n                } else {\n                    ++endsA;\n                }\n            }\n        }\n    });\n    const smaller = Math[_0x1bd3d1(0x8)](startsB, endsA);\n    const bigger = Math[_0x1bd3d1(0x9)](startsB, endsA);\n    const shortage = bigger - smaller;\n    let extra = Math[_0x1bd3d1(0x9)](0x0, startsBandEndsA - shortage);\n    if (shortage === 0x0 && extra !== 0x0)\n        --extra;\n    ans += smaller;\n    ans += Math[_0x1bd3d1(0x8)](shortage, startsBandEndsA);\n    ans += extra;\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x2e02db(0xa)](a0_0x2e02db(0xb), a0_0x2e02db(0xc)));", "test_cases": [["3\nABCA\nXBAZ\nBAD", "2"], ["9\nBEWPVCRWH\nZZNQYIJX\nBAVREA\nPA\nHJMYITEOX\nBCJHMRMNK\nBP\nQVFABZ\nPRGKSPUNA", "4"], ["7\nRABYBBE\nJOZ\nBMHQUVA\nBPA\nISU\nMCMABAOBHZ\nSZMEHMA", "4"]], "original": "'use strict';\n\nfunction counter(str,seq) {\n    return str.split(seq).length - 1;\n}\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  input.shift();\n\n  let ans = 0;\n  let startsB = 0;\n  let endsA = 0;\n  let startsBandEndsA = 0;\n\n  input.forEach(s => {\n    ans += counter(s, 'AB');\n\n    if (s.charAt(0) === 'B') {\n      if (s.charAt(s.length - 1) === 'A') {\n        ++startsBandEndsA;\n      } else {\n        ++startsB;\n      }\n    } else if (s.charAt(s.length - 1) === 'A') {\n      ++endsA;\n    }\n  });\n\n  const smaller = Math.min(startsB, endsA);\n  const bigger = Math.max(startsB, endsA);\n  const shortage = bigger - smaller;\n  let extra = Math.max(0, startsBandEndsA - shortage);\n  if (shortage === 0 && extra !== 0) --extra;\n  \n\n  ans += smaller;\n  ans += Math.min(shortage, startsBandEndsA);\n  ans += extra;\n\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03069_1", "type": "JavaScript", "obfuscated": "function a0_0x37bf(qNpiGK, key) {\n    const stringArray = a0_0x156a();\n    a0_0x37bf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x37bf(qNpiGK, key);\n}\nconst a0_0x380ea3 = a0_0x37bf;\nfunction a0_0x156a() {\n    const _0x235703 = [\n        'split',\n        'pZprL',\n        'log',\n        'dvytl',\n        'AArLa',\n        'kdmLV',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x156a = function () {\n        return _0x235703;\n    };\n    return a0_0x156a();\n}\nfunction Main(input) {\n    'use strict';\n    const _0x5e36a5 = a0_0x37bf;\n    const elements = input[_0x5e36a5(0x0)]('\\x0a');\n    let blackFlag = ![];\n    let numBlack = 0x0;\n    let numWhiteAfterBlack = 0x0;\n    for (let i = 0x0; i < elements[0x0]; i++) {\n        if (blackFlag === ![] && elements[0x1][i] === '#') {\n            blackFlag = !![];\n        }\n        if (blackFlag === !![] && elements[0x1][i] === '.') {\n            if (_0x5e36a5(0x1) !== 'yeHGO') {\n                numWhiteAfterBlack++;\n            } else {\n                console[_0x5e36a5(0x2)](numWhiteAfterBlack);\n            }\n        }\n        if (elements[0x1][i] === '#') {\n            if ('dvytl' === _0x5e36a5(0x3)) {\n                numBlack++;\n            } else {\n                blackFlag = !![];\n            }\n        }\n    }\n    if (numWhiteAfterBlack === 0x0 && blackFlag === ![]) {\n        console[_0x5e36a5(0x2)]('0');\n    } else if (numWhiteAfterBlack === 0x0 && blackFlag === !![]) {\n        if (_0x5e36a5(0x4) === _0x5e36a5(0x4)) {\n            console[_0x5e36a5(0x2)](numBlack);\n        } else {\n            console[_0x5e36a5(0x2)]('0');\n        }\n    } else if (numBlack <= numWhiteAfterBlack) {\n        console[_0x5e36a5(0x2)](numBlack);\n    } else {\n        if (_0x5e36a5(0x5) !== _0x5e36a5(0x5)) {\n            numWhiteAfterBlack++;\n        } else {\n            console['log'](numWhiteAfterBlack);\n        }\n    }\n}\nMain(require('fs')[a0_0x380ea3(0x6)](a0_0x380ea3(0x7), 'utf-8'));", "test_cases": [["3\n#.#", "1"], ["5\n#.##.", "2"], ["9\n.........", "0"]], "original": "function Main(input) {\n    \"use strict\";\n    const elements = input.split('\\n');\n    let blackFlag = false;\n    let numBlack = 0;\n    let numWhiteAfterBlack = 0;\n\n    for (let i = 0; i < elements[0]; i++) {\n        if (blackFlag === false && elements[1][i] === '#') {\n            blackFlag = true;\n        }\n        if (blackFlag === true && elements[1][i] === '.') {\n            numWhiteAfterBlack++;\n        }\n        if (elements[1][i] === '#') {\n            numBlack++;\n        }\n    }\n\n    if (numWhiteAfterBlack === 0 && blackFlag === false) {\n        console.log('0');\n    } else if(numWhiteAfterBlack === 0 && blackFlag === true){\n        console.log(numBlack);\n    }else if (numBlack <= numWhiteAfterBlack) {\n        console.log(numBlack);\n    } else {\n        console.log(numWhiteAfterBlack);\n    }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf-8'));", "language": "JavaScript"}
{"filename": "p03076_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5daf(Xfyova, key) {\n    const stringArray = a0_0x1ea7();\n    a0_0x5daf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5daf(Xfyova, key);\n}\nfunction a0_0x1ea7() {\n    const _0x2816b8 = [\n        'trim',\n        'split',\n        'map',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1ea7 = function () {\n        return _0x2816b8;\n    };\n    return a0_0x1ea7();\n}\nconst a0_0x2ef6cf = a0_0x5daf;\nconst main = arg => {\n    const _0x2bd957 = a0_0x5daf;\n    const times = arg[_0x2bd957(0x0)]()[_0x2bd957(0x1)]('\\x0a')[_0x2bd957(0x2)](n => parseInt(n));\n    let min = 0xa;\n    let sum = 0x0;\n    for (let i = 0x0; i < times[_0x2bd957(0x3)]; i++) {\n        let digitOne = String(times[i])['split']('');\n        digitOne = parseInt(digitOne[digitOne[_0x2bd957(0x3)] - 0x1]);\n        let digitMinus = 0xa - digitOne;\n        sum += parseInt(times[i]);\n        if (digitMinus !== 0xa) {\n            sum += digitMinus;\n        }\n        if (digitMinus !== 0xa && digitOne < min) {\n            min = digitOne;\n        }\n    }\n    console[_0x2bd957(0x4)](parseInt(sum - (0xa - min)));\n};\nmain(require('fs')[a0_0x2ef6cf(0x5)](a0_0x2ef6cf(0x6), 'utf8'));", "test_cases": [["29\n20\n7\n35\n120", "215"], ["101\n86\n119\n108\n57", "481"], ["123\n123\n123\n123\n123", "643"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const times = arg.trim().split(\"\\n\").map(n=>parseInt(n));\n    let min = 10;\n    \n    let sum = 0;\n    \n    for(let i=0; i<times.length; i++) {\n        let digitOne   = String(times[i]).split(\"\");\n        digitOne = parseInt(digitOne[digitOne.length - 1]);\n        \n        let digitMinus = 10 - digitOne;\n        sum += parseInt(times[i]);\n        \n        if(digitMinus !== 10) {\n            sum += digitMinus;\n        }\n        \n        if(digitMinus !== 10 && digitOne < min) {\n            min = digitOne;\n        }\n    }\n\n    console.log(parseInt(sum - (10 - min)));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03103_1", "type": "JavaScript", "obfuscated": "function a0_0x5d10(qjMkat, key) {\n    var stringArray = a0_0x268b();\n    a0_0x5d10 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5d10(qjMkat, key);\n}\nvar a0_0x36dc32 = a0_0x5d10;\nfunction Main(input) {\n    var _0x5a1903 = a0_0x5d10;\n    input = input[_0x5a1903(0x0)]('\\x0a');\n    inputStr = input[0x0][_0x5a1903(0x0)]('\\x20');\n    var N = Number['parseInt'](inputStr[0x0]);\n    var M = Number['parseInt'](inputStr[0x1]);\n    var tmp = [];\n    var array = [];\n    var buycnt = 0x0;\n    var okane = 0x0;\n    var mokori = M;\n    for (i = 0x0; i < N; i++) {\n        tmp = input[i + 0x1][_0x5a1903(0x0)]('\\x20');\n        array[i] = tmp[_0x5a1903(0x1)](tmp => parseInt(tmp, 0xa));\n        array[i][0x0] = (_0x5a1903(0x2) + array[i][0x0])[_0x5a1903(0x3)](-0xa);\n    }\n    array['sort']();\n    for (i = 0x0; i < N; i++) {\n        if (mokori > parseInt(array[i][0x1])) {\n            okane += parseInt(array[i][0x0]) * parseInt(array[i][0x1]);\n            mokori -= parseInt(array[i][0x1]);\n        } else {\n            okane += parseInt(array[i][0x0]) * mokori;\n            break;\n        }\n    }\n    console[_0x5a1903(0x4)](okane);\n}\nMain(require('fs')[a0_0x36dc32(0x5)](a0_0x36dc32(0x6), a0_0x36dc32(0x7)));\nfunction a0_0x268b() {\n    var _0x30bb8d = [\n        'split',\n        'map',\n        '0000000000',\n        'substr',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x268b = function () {\n        return _0x30bb8d;\n    };\n    return a0_0x268b();\n}", "test_cases": [["2 5\n4 9\n2 4", "12"], ["4 30\n6 18\n2 5\n3 10\n7 9", "130"], ["1 100000\n1000000000 100000", "100000000000000"]], "original": "function Main(input){\n  input = input.split(\"\\n\");\n  inputStr = input[0].split(\" \");\n  var N = Number.parseInt(inputStr[0]);\n  var M = Number.parseInt(inputStr[1]);\n  var tmp = [];\n  var array = [];\n  var buycnt = 0;\n  var okane = 0;\n  var mokori = M;\n  //配列に数値化して溜め込む\n  for (i=0;i<N;i++){\n    tmp = input[i+1].split(\" \");\n    array[i] = tmp.map( tmp => parseInt(tmp,10) )\n    array[i][0] = ( \"0000000000\" + array[i][0] ).substr(-10);\n  }\n  //ソートする\n  array.sort();\n  //数値変換しつつ必要本数を買い込む\n  for (i=0 ; i<N ; i++){\n    if (mokori > parseInt(array[i][1])){\n      okane += parseInt(array[i][0]) * parseInt(array[i][1]);\n      mokori -= parseInt(array[i][1]);\n    } else {\n      okane += parseInt(array[i][0]) * mokori;\n      break;\n    }\n  }\n  console.log(okane);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03105_1", "type": "JavaScript", "obfuscated": "const a0_0xacffd4 = a0_0x15e1;\nfunction a0_0x15e1(yDUeQI, key) {\n    const stringArray = a0_0x25a8();\n    a0_0x15e1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x15e1(yDUeQI, key);\n}\nconst main = input => {\n    const _0x4b38b4 = a0_0x15e1;\n    const In = input[_0x4b38b4(0x0)]('\\x20')['map'](n => Number(n));\n    const o1 = In[0x0] > In[0x1] ? 0x0 : In[0x1] / In[0x0];\n    console[_0x4b38b4(0x1)](o1 >= In[0x2] ? In[0x2] : o1);\n};\nfunction a0_0x25a8() {\n    const _0x5bb2f0 = [\n        'split',\n        'log',\n        'utf8'\n    ];\n    a0_0x25a8 = function () {\n        return _0x5bb2f0;\n    };\n    return a0_0x25a8();\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0xacffd4(0x2)));", "test_cases": [["2 11 4", "4"], ["3 9 5", "3"], ["100 1 10", "0"]], "original": "const main = input =>{\n    const In = input.split(' ').map(n=>Number(n));\n    const o1 = In[0] > In[1] ? 0 : In[1]/In[0];\n    console.log(o1 >= In[2] ? In[2] : o1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03219_1", "type": "JavaScript", "obfuscated": "const a0_0x2c2cb1 = a0_0x3fec;\nconst rl = require(a0_0x2c2cb1(0x0))['createInterface']({ 'input': process[a0_0x2c2cb1(0x1)] });\nfunction a0_0x3fec(VSSMod, key) {\n    const stringArray = a0_0x3cfd();\n    a0_0x3fec = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fec(VSSMod, key);\n}\nrl['on'](a0_0x2c2cb1(0x2), line => {\n    const _0x3dc15b = a0_0x3fec;\n    const param = line[_0x3dc15b(0x3)]('\\x20');\n    solve(Number(param[0x0]), Number(param[0x1]));\n    rl[_0x3dc15b(0x4)]();\n});\nfunction a0_0x3cfd() {\n    const _0x1992f5 = [\n        'readline',\n        'stdin',\n        'line',\n        'split',\n        'close',\n        'log'\n    ];\n    a0_0x3cfd = function () {\n        return _0x1992f5;\n    };\n    return a0_0x3cfd();\n}\nfunction solve(x, y) {\n    const _0x4f928a = a0_0x3fec;\n    console[_0x4f928a(0x5)](x + y / 0x2);\n}", "test_cases": [["81 58", "110"], ["4 54", "31"]], "original": "const rl = require('readline')\n    .createInterface({\n        input: process.stdin,\n    });\n\nrl.on('line', (line) => {\n    const param = line.split(\" \");\n    solve(Number(param[0]), Number(param[1]));\n    rl.close();\n});\n\nfunction solve(x,y){\n    console.log(x+y/2);\n}\n", "language": "JavaScript"}
{"filename": "p03221_1", "type": "JavaScript", "obfuscated": "var a0_0x4cd441 = a0_0x1acc;\nfunction fillZero(l, num) {\n    var _0x1e02e1 = a0_0x1acc;\n    num = String(num);\n    for (var i = num[_0x1e02e1(0x0)]; i < l; i++) {\n        num = '0' + num;\n    }\n    return num;\n}\nfunction a0_0x1acc(zfaaCA, key) {\n    var stringArray = a0_0x49d7();\n    a0_0x1acc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1acc(zfaaCA, key);\n}\nfunction a0_0x49d7() {\n    var _0x39d353 = [\n        'length',\n        'trim',\n        'split',\n        'map',\n        'NOmFL',\n        'push',\n        'tkkop',\n        'sort',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x49d7 = function () {\n        return _0x39d353;\n    };\n    return a0_0x49d7();\n}\nfunction main(arg) {\n    var _0x644c48 = a0_0x1acc;\n    arg = arg[_0x644c48(0x1)]()[_0x644c48(0x2)]('\\x0a');\n    arg[0x0] = arg[0x0][_0x644c48(0x2)]('\\x20');\n    var N = Number(arg[0x0][0x0]);\n    var M = Number(arg[0x0][0x1]);\n    arg['shift']();\n    var p_master = {};\n    for (var i = 0x0; i < arg['length']; i++) {\n        var tmp = arg[i][_0x644c48(0x2)]('\\x20')[_0x644c48(0x3)](e => Number(e));\n        arg[i] = tmp;\n        if (!p_master[tmp[0x0]]) {\n            if (_0x644c48(0x4) === _0x644c48(0x4)) {\n                p_master[tmp[0x0]] = [];\n            } else {\n                num = String(num);\n                for (var i = num[_0x644c48(0x0)]; i < l; i++) {\n                    num = '0' + num;\n                }\n                return num;\n            }\n        }\n        p_master[tmp[0x0]][_0x644c48(0x5)](tmp[0x1]);\n    }\n    for (key in p_master) {\n        if (_0x644c48(0x6) === _0x644c48(0x6)) {\n            p_master[key][_0x644c48(0x7)]();\n        } else {\n            p_master[key][_0x644c48(0x7)]();\n        }\n    }\n    for (var i = 0x0; i < arg['length']; i++) {\n        var _p = arg[i][0x0];\n        var j = 0x0;\n        for (var j = 0x0; j < p_master[_p][_0x644c48(0x0)]; j++) {\n            if (p_master[_p][j] === arg[i][0x1]) {\n                break;\n            }\n        }\n        console[_0x644c48(0x8)](fillZero(0x6, _p) + fillZero(0x6, j + 0x1));\n    }\n}\nmain(require('fs')[a0_0x4cd441(0x9)]('/dev/stdin', 'utf8'));", "test_cases": [["2 3\n1 32\n2 63\n1 12", "000001000002\n000002000001\n000001000001"], ["2 3\n2 55\n2 77\n2 99", "000002000001\n000002000002\n000002000003"]], "original": "function fillZero(l,num) {\n\tnum = String(num)\n\tfor (var i = num.length; i < l; i++) {\n\t\tnum = \"0\" + num\n\t}\n\treturn num\n}\n\nfunction main(arg) {\n\targ = arg.trim().split(\"\\n\")\n\targ[0] = arg[0].split(\" \")\n\tvar N = Number(arg[0][0])\n\tvar M = Number(arg[0][1])\n\n\targ.shift()\n\n\tvar p_master = {}\n\n\tfor (var i = 0; i < arg.length; i++) {\n\t\tvar tmp = arg[i].split(\" \").map(e => Number(e))\n\t\targ[i] = tmp\n\n\t\t// p_mastre.push(tmp[0])\n\t\tif (!p_master[tmp[0]]) {\n\t\t\tp_master[tmp[0]] = []\n\t\t}\n\t\tp_master[tmp[0]].push(tmp[1])\n\t}\n\n\tfor (key in p_master) {\n\t\tp_master[key].sort()\n\t}\n\t// console.log(JSON.stringify(p_master))\n\n\tfor (var i = 0; i < arg.length; i++) {\n\t\tvar _p = arg[i][0]\n\n\t\tvar j = 0;\n\t\tfor (var j = 0; j < p_master[_p].length; j++) {\n\t\t\tif (p_master[_p][j] === arg[i][1]) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tconsole.log(fillZero(6,_p) + fillZero(6, j+1))\n\t}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03337_1", "type": "JavaScript", "obfuscated": "function a0_0x1b1a() {\n    const _0xc08ff3 = [\n        'split',\n        'max',\n        'apply',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1b1a = function () {\n        return _0xc08ff3;\n    };\n    return a0_0x1b1a();\n}\nconst a0_0x5960ad = a0_0x50d6;\nfunction main(input) {\n    const _0x7edc04 = a0_0x50d6;\n    const a = parseInt(input[_0x7edc04(0x0)]('\\x20')[0x0], 0xa);\n    const b = parseInt(input[_0x7edc04(0x0)]('\\x20')[0x1], 0xa);\n    ptnAdd = a + b;\n    ptnSub = a - b;\n    ptnMul = a * b;\n    ans = Math[_0x7edc04(0x1)][_0x7edc04(0x2)](null, [\n        ptnAdd,\n        ptnSub,\n        ptnMul\n    ]);\n    console[_0x7edc04(0x3)](ans);\n}\nfunction a0_0x50d6(JGruXD, key) {\n    const stringArray = a0_0x1b1a();\n    a0_0x50d6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x50d6(JGruXD, key);\n}\nmain(require('fs')[a0_0x5960ad(0x4)]('/dev/stdin', a0_0x5960ad(0x5)));", "test_cases": [["3 1", "4"], ["4 -2", "6"], ["0 0", "0"]], "original": "function main (input) {\n  const a = parseInt(input.split(' ')[0],10);\n  const b = parseInt(input.split(' ')[1],10);\n\n  ptnAdd = a + b;\n  ptnSub = a - b;\n  ptnMul = a * b;\n\n  ans = Math.max.apply(null,[ptnAdd,ptnSub,ptnMul]);\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03400_1", "type": "JavaScript", "obfuscated": "var a0_0x3c4d7b = a0_0x183a;\nfunction a0_0x183a(EqcQor, key) {\n    var stringArray = a0_0x2de8();\n    a0_0x183a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x183a(EqcQor, key);\n}\nfunction Main(input) {\n    var _0x25845d = a0_0x183a;\n    input = input[_0x25845d(0x0)]('\\x0a');\n    var n = Number(input[0x0]);\n    var d = Number(input[0x1][_0x25845d(0x0)]('\\x20')[0x0]);\n    var x = Number(input[0x1]['split']('\\x20')[0x1]);\n    var array = [];\n    for (var i = 0x0; i < input[_0x25845d(0x1)] - 0x2; i++) {\n        array[_0x25845d(0x2)](Number(input[i + 0x2]));\n    }\n    var total = [];\n    for (var j = 0x0; j < array[_0x25845d(0x1)]; j++) {\n        for (var k = 0x1; k < 0x64; k++) {\n            if (d >= k * array[j] + 0x1) {\n                total[_0x25845d(0x2)](k * array[j] + 0x1);\n            }\n        }\n    }\n    console[_0x25845d(0x3)](total[_0x25845d(0x1)] + n + x);\n}\nMain(require('fs')['readFileSync'](a0_0x3c4d7b(0x4), a0_0x3c4d7b(0x5)));\nfunction a0_0x2de8() {\n    var _0x3656ba = [\n        'split',\n        'length',\n        'push',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2de8 = function () {\n        return _0x3656ba;\n    };\n    return a0_0x2de8();\n}", "test_cases": [["3\n7 1\n2\n5\n10", "8"], ["2\n8 20\n1\n10", "29"], ["5\n30 44\n26\n18\n81\n18\n6", "56"]], "original": "function Main(input) {\ninput = input.split(\"\\n\");\n\nvar n =Number(input[0]);\nvar d =Number(input[1].split(\" \")[0]);\nvar x =Number(input[1].split(\" \")[1]);\nvar array=[];\nfor(var i =0; i<input.length-2; i++){\n    array.push(Number(input[i+2]));\n}\n\nvar total=[]\nfor(var j =0; j<array.length; j++){\n\n    for(var k=1; k<100;k++){\n    if(d>=k*array[j]+1){\n        total.push(k*array[j]+1);\n}\n    }\n}\n\nconsole.log(total.length+n+x);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03470_1", "type": "JavaScript", "obfuscated": "var a0_0x11df72 = a0_0x3eed;\nvar lines = [];\nfunction a0_0x3030() {\n    var _0x23cb34 = [\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'shift',\n        'map',\n        'filter',\n        'length'\n    ];\n    a0_0x3030 = function () {\n        return _0x23cb34;\n    };\n    return a0_0x3030();\n}\nfunction a0_0x3eed(rNoxGx, key) {\n    var stringArray = a0_0x3030();\n    a0_0x3eed = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3eed(rNoxGx, key);\n}\nvar readline = require(a0_0x11df72(0x0));\nvar rl = readline[a0_0x11df72(0x1)]({\n    'input': process[a0_0x11df72(0x2)],\n    'output': process[a0_0x11df72(0x3)]\n});\nrl['on'](a0_0x11df72(0x4), function (x) {\n    var _0x34310a = a0_0x3eed;\n    lines[_0x34310a(0x5)](x);\n});\nrl['on'](a0_0x11df72(0x6), function () {\n    var _0x966b27 = a0_0x3eed;\n    var N = Number(lines[0x0]);\n    lines[_0x966b27(0x7)]();\n    var D = lines[_0x966b27(0x8)](i => Number(i));\n    D = D[_0x966b27(0x9)]((value, index, array) => {\n        return array['indexOf'](value) === index;\n    });\n    console['log'](D[_0x966b27(0xa)]);\n});", "test_cases": [["4\n10\n8\n8\n6", "3"], ["3\n15\n15\n15", "1"], ["7\n50\n30\n50\n100\n50\n80\n30", "4"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]); lines.shift();\n    var D = lines.map(i => Number(i));\n\n    D = D.filter((value, index, array) => {\n        return (array.indexOf(value) === index)\n    })\n\n    console.log(D.length)\n\n});", "language": "JavaScript"}
{"filename": "p03632_1", "type": "JavaScript", "obfuscated": "function a0_0x327b() {\n    var _0x347ea4 = [\n        'split',\n        'map',\n        'max',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x327b = function () {\n        return _0x347ea4;\n    };\n    return a0_0x327b();\n}\nfunction a0_0xe61e(ITJdOB, key) {\n    var stringArray = a0_0x327b();\n    a0_0xe61e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe61e(ITJdOB, key);\n}\nvar a0_0x30c7ce = a0_0xe61e;\nfunction Main(inp) {\n    var _0x5c10fd = a0_0xe61e;\n    var input = inp[_0x5c10fd(0x0)]('\\x0a')[0x0]['split']('\\x20')[_0x5c10fd(0x1)](function (n) {\n        return Number(n);\n    });\n    var start = Math[_0x5c10fd(0x2)](input[0x0], input[0x2]);\n    var end = Math[_0x5c10fd(0x3)](input[0x1], input[0x3]);\n    var overlap = Math[_0x5c10fd(0x2)](0x0, end - start);\n    console[_0x5c10fd(0x4)](overlap);\n}\nMain(require('fs')[a0_0x30c7ce(0x5)](a0_0x30c7ce(0x6), a0_0x30c7ce(0x7)));", "test_cases": [["0 75 25 100", "50"], ["0 33 66 99", "0"], ["10 90 20 80", "60"]], "original": "function Main(inp) {\n    var input = inp.split('\\n')[0].split(' ').map(function(n) {\n        return Number(n);\n    });\n    var start = Math.max(input[0], input[2]);\n    var end = Math.min(input[1], input[3]);\n    var overlap = Math.max(0, end - start);\n    console.log(overlap);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03679_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x822c06 = a0_0xe77b;\nfunction a0_0x3fa3() {\n    const _0x1634d0 = [\n        'split',\n        'map',\n        'delicious',\n        'abs',\n        'log',\n        'safe',\n        'dangerous',\n        '/dev/stdin'\n    ];\n    a0_0x3fa3 = function () {\n        return _0x1634d0;\n    };\n    return a0_0x3fa3();\n}\nfunction a0_0xe77b(iKIroC, key) {\n    const stringArray = a0_0x3fa3();\n    a0_0xe77b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe77b(iKIroC, key);\n}\nconst main = INPUT => {\n    const _0x432a4d = a0_0xe77b;\n    const input = INPUT['split']('\\x0a')[0x0];\n    const [X, A, B] = input[_0x432a4d(0x0)]('\\x20')[_0x432a4d(0x1)](n => Number(n));\n    if (A - B >= 0x0) {\n        console['log'](_0x432a4d(0x2));\n    } else if (A - B < 0x0 && Math[_0x432a4d(0x3)](A - B) <= X) {\n        console[_0x432a4d(0x4)](_0x432a4d(0x5));\n    } else {\n        console[_0x432a4d(0x4)](_0x432a4d(0x6));\n    }\n};\nmain(require('fs')['readFileSync'](a0_0x822c06(0x7), 'utf8'));", "test_cases": [["4 3 6", "safe"], ["6 5 1", "delicious"], ["3 7 12", "dangerous"]], "original": "'use strict'\n\nconst main = (INPUT) => {\n  const input = INPUT.split('\\n')[0]\n  const [X, A, B] = input.split(' ').map(n => Number(n))\n  if (A - B >= 0) {\n    console.log('delicious')\n  } else if (A - B < 0 && Math.abs(A - B) <= X) {\n    console.log('safe')\n  } else {\n    console.log('dangerous')\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03721_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3375() {\n    const _0x514c56 = [\n        'map',\n        'split',\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3375 = function () {\n        return _0x514c56;\n    };\n    return a0_0x3375();\n}\nconst a0_0x359fe0 = a0_0x397d;\nfunction main(input) {\n    const _0x52b9b2 = a0_0x397d;\n    const args = input['trim']()['split']('\\x0a')[_0x52b9b2(0x0)](_ => _[_0x52b9b2(0x1)]('\\x20')[_0x52b9b2(0x0)](x => parseInt(x, 0xa)));\n    const k = args[0x0][0x1];\n    const arr = args[_0x52b9b2(0x2)](0x1);\n    let cnt = 0x0;\n    let i = 0x0;\n    while (cnt < k) {\n        cnt += arr[i][0x1];\n        i++;\n    }\n    console[_0x52b9b2(0x3)](arr[i - 0x1][0x0]);\n}\nfunction a0_0x397d(pnFmvQ, key) {\n    const stringArray = a0_0x3375();\n    a0_0x397d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x397d(pnFmvQ, key);\n}\nmain(require('fs')[a0_0x359fe0(0x4)](a0_0x359fe0(0x5), a0_0x359fe0(0x6)));", "test_cases": [["3 4\n1 1\n2 2\n3 3", "3"], ["10 500000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000", "1"]], "original": "\"use strict\";\n\nfunction main(input){\n  const args = input.trim().split('\\n').map(_=>_.split(' ').map(x=>parseInt(x,10)));\n  const k = args[0][1];\n  const arr = args.slice(1);\n  \n  let cnt = 0;\n  let i = 0;\n  while(cnt < k){\n    cnt += arr[i][1];\n    i++;\n  }\n  \n  console.log(arr[i-1][0]);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));  ", "language": "JavaScript"}
{"filename": "p02401_1", "type": "JavaScript", "obfuscated": "function a0_0x3963() {\n    var _0x212200 = [\n        'stdin',\n        'resume',\n        'utf8',\n        'data',\n        'split',\n        'length',\n        'log',\n        'dTlXj'\n    ];\n    a0_0x3963 = function () {\n        return _0x212200;\n    };\n    return a0_0x3963();\n}\nvar a0_0x93d399 = a0_0x4ab7;\nfunction a0_0x4ab7(FtUTAJ, key) {\n    var stringArray = a0_0x3963();\n    a0_0x4ab7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ab7(FtUTAJ, key);\n}\nprocess[a0_0x93d399(0x0)][a0_0x93d399(0x1)]();\nprocess[a0_0x93d399(0x0)]['setEncoding'](a0_0x93d399(0x2));\nprocess[a0_0x93d399(0x0)]['on'](a0_0x93d399(0x3), function (chunk) {\n    var _0x290fe9 = a0_0x4ab7;\n    var input = chunk[_0x290fe9(0x4)]('\\x0a');\n    var output = '';\n    for (var i = 0x0; i < input[_0x290fe9(0x5)]; i++) {\n        var r = calc(input[i]);\n        if (r !== ![]) {\n            console[_0x290fe9(0x6)](r);\n        }\n    }\n    function calc(input) {\n        var _0x1a4b7d = a0_0x4ab7;\n        if (_0x1a4b7d(0x7) === 'dTlXj') {\n            var nums = input[_0x1a4b7d(0x4)]('\\x20');\n            nums[0x0] = Number(nums[0x0]);\n            nums[0x2] = Number(nums[0x2]);\n            if (nums[0x1] == '+') {\n                return nums[0x0] + nums[0x2];\n            } else if (nums[0x1] == '-') {\n                if ('JSGlT' !== 'JSGlT') {\n                    var r = calc(input[i]);\n                    if (r !== ![]) {\n                        console[_0x1a4b7d(0x6)](r);\n                    }\n                } else {\n                    return nums[0x0] - nums[0x2];\n                }\n            } else if (nums[0x1] == '*') {\n                return nums[0x0] * nums[0x2];\n            } else if (nums[0x1] == '/') {\n                return nums[0x0] / nums[0x2];\n            } else if (nums[0x1] == '?') {\n                return ![];\n            }\n        } else {\n            return nums[0x0] - nums[0x2];\n        }\n    }\n});", "test_cases": [["1 + 2\n56 - 18\n13 * 2\n100 / 10\n27 + 81\n0 ? 0", "3\n38\n26\n10\n108"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (chunk) {\n    var input = chunk.split(\"\\n\");\n    var output = \"\";\n    \n    for(var i = 0; i < input.length; i ++){\n        var r = calc(input[i]);\n        if(r !== false){\n            console.log(r);\n        }\n    }\n    \n    function calc(input){\n        var nums = input.split(\" \");\n        nums[0] = Number(nums[0]);\n        nums[2] = Number(nums[2]);\n        if(nums[1] == \"+\"){\n            return nums[0] + nums[2];\n        }\n        else if(nums[1] == \"-\"){\n            return nums[0] - nums[2];\n        }\n        else if(nums[1] == \"*\"){\n            return nums[0] * nums[2];\n        }\n        else if(nums[1] == \"/\"){\n            return nums[0] / nums[2];\n        }\n        else if(nums[1] == \"?\"){\n            return false;\n        }\n        \n    }\n});", "language": "JavaScript"}
{"filename": "p02630_1", "type": "JavaScript", "obfuscated": "function a0_0x4f4e(KkoIlW, key) {\n    const stringArray = a0_0x1c8f();\n    a0_0x4f4e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f4e(KkoIlW, key);\n}\nconst a0_0x4e1a76 = a0_0x4f4e;\nfunction main(lines) {\n    const _0x9745f9 = a0_0x4f4e;\n    const [N] = parseNumberLine(lines[0x0]);\n    const numbers = parseNumberLine(lines[0x1]);\n    const [Q] = parseNumberLine(lines[0x2]);\n    const operationLines = lines[_0x9745f9(0x0)](0x3);\n    let result = numbers[_0x9745f9(0x1)]((t, v) => t + v, 0x0);\n    for (let i = 0x0; i < Q; ++i) {\n        const [B, C] = parseNumberLine(operationLines[i]);\n        while (!![]) {\n            const index = numbers['indexOf'](B);\n            if (index < 0x0)\n                break;\n            numbers[index] = C;\n            result += C - B;\n        }\n        console[_0x9745f9(0x2)](result);\n    }\n}\nfunction a0_0x1c8f() {\n    const _0x5691f9 = [\n        'slice',\n        'reduce',\n        'log',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1c8f = function () {\n        return _0x5691f9;\n    };\n    return a0_0x1c8f();\n}\nfunction parseNumberLine(line, radix = 0xa) {\n    const _0x1de029 = a0_0x4f4e;\n    return line[_0x1de029(0x3)](/\\s+/)['map'](_ => parseInt(_, radix));\n}\nmain(require('fs')[a0_0x4e1a76(0x4)](a0_0x4e1a76(0x5), a0_0x4e1a76(0x6))['split']('\\x0a'));", "test_cases": [["4\n1 2 3 4\n3\n1 2\n3 4\n2 4", "11\n12\n16"], ["4\n1 1 1 1\n3\n1 2\n2 1\n3 5", "8\n4\n4"], ["2\n1 2\n3\n1 100\n2 100\n100 1000", "102\n200\n2000"]], "original": "\nfunction main(lines) {\n    const [N] = parseNumberLine(lines[0])\n    const numbers = parseNumberLine(lines[1])\n    const [Q] = parseNumberLine(lines[2])\n    const operationLines = lines.slice(3)\n\n    let result = numbers.reduce((t, v) => t + v, 0)\n    for (let i = 0; i < Q; ++i) {\n        const [B, C] = parseNumberLine(operationLines[i])\n\n        while (true) {\n            const index = numbers.indexOf(B)\n            if (index < 0) break\n\n            numbers[index] = C\n            result += C - B\n        }\n\n        console.log(result)\n    }\n}\n\nfunction parseNumberLine(line, radix = 10) {\n    return line.split(/\\s+/).map(_ => parseInt(_, radix))\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02639_1", "type": "JavaScript", "obfuscated": "const a0_0x49fb02 = a0_0x5f9b;\nfunction a0_0xaedf() {\n    const _0x5f247b = [\n        'trim',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xaedf = function () {\n        return _0x5f247b;\n    };\n    return a0_0xaedf();\n}\nfunction a0_0x5f9b(eAIkMo, key) {\n    const stringArray = a0_0xaedf();\n    a0_0x5f9b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f9b(eAIkMo, key);\n}\nfunction main(input) {\n    const _0x14c1d1 = a0_0x5f9b;\n    const idx = input[_0x14c1d1(0x0)]()['split']('\\x20')[_0x14c1d1(0x1)](el => parseInt(el, 0xa))['findIndex'](el => el === 0x0);\n    console[_0x14c1d1(0x2)](idx + 0x1);\n}\nmain(require('fs')[a0_0x49fb02(0x3)](a0_0x49fb02(0x4), a0_0x49fb02(0x5)));", "test_cases": [["0 2 3 4 5", "1"], ["1 2 0 4 5", "3"]], "original": "function main(input) {\n  const idx = input.trim().split(' ').map(el => parseInt(el, 10)).findIndex(el => el === 0)\n  console.log(idx + 1);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02676_1", "type": "JavaScript", "obfuscated": "const a0_0x35bfc6 = a0_0x1654;\nconst main = arg => {\n    const _0x4eaaa7 = a0_0x1654;\n    arg = arg['trim']()[_0x4eaaa7(0x0)]('\\x0a');\n    const k = arg[0x0];\n    const s = arg[0x1];\n    if (s['length'] <= k)\n        console['log'](s);\n    else\n        console[_0x4eaaa7(0x1)](s[_0x4eaaa7(0x2)](0x0, k) + _0x4eaaa7(0x3));\n};\nfunction a0_0x1654(VZjcYB, key) {\n    const stringArray = a0_0x3de4();\n    a0_0x1654 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1654(VZjcYB, key);\n}\nfunction a0_0x3de4() {\n    const _0x3cf542 = [\n        'split',\n        'log',\n        'slice',\n        '...',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3de4 = function () {\n        return _0x3cf542;\n    };\n    return a0_0x3de4();\n}\nmain(require('fs')[a0_0x35bfc6(0x4)]('/dev/stdin', a0_0x35bfc6(0x5)));", "test_cases": [["7\nnikoandsolstice", "nikoand..."], ["40\nferelibenterhominesidquodvoluntcredunt", "ferelibenterhominesidquodvoluntcredunt"]], "original": "const main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const k = arg[0]\n    const s = arg[1]\n    if(s.length <= k) console.log(s)\n    else console.log(s.slice(0, k) + '...')\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02701_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x42f5a6 = a0_0x52c5;\nfunction a0_0x266b() {\n    const _0x810d6a = [\n        'trim',\n        'split',\n        'size',\n        'readFileSync'\n    ];\n    a0_0x266b = function () {\n        return _0x810d6a;\n    };\n    return a0_0x266b();\n}\nfunction a0_0x52c5(QGwOoY, key) {\n    const stringArray = a0_0x266b();\n    a0_0x52c5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x52c5(QGwOoY, key);\n}\nconst main = arg => {\n    const _0x5d6c66 = a0_0x52c5;\n    const input = arg[_0x5d6c66(0x0)]()[_0x5d6c66(0x1)]('\\x0a');\n    const setItems = new Set(input);\n    console['log'](setItems[_0x5d6c66(0x2)] - 0x1);\n};\nmain(require('fs')[a0_0x42f5a6(0x3)]('/dev/stdin', 'utf8'));", "test_cases": [["3\napple\norange\napple", "2"], ["5\ngrape\ngrape\ngrape\ngrape\ngrape", "1"], ["4\naaaa\na\naaa\naa", "4"]], "original": "'use strict';\nconst main = arg => {\n  const input = arg.trim().split('\\n');\n\n  const setItems = new Set(input);\n  console.log(setItems.size - 1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02784_1", "type": "JavaScript", "obfuscated": "function a0_0x2563() {\n    var _0x476948 = [\n        'split',\n        'reduce',\n        'log',\n        'ceil',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2563 = function () {\n        return _0x476948;\n    };\n    return a0_0x2563();\n}\nfunction a0_0x3e56(KnBSbY, key) {\n    var stringArray = a0_0x2563();\n    a0_0x3e56 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e56(KnBSbY, key);\n}\nvar a0_0xf5a8be = a0_0x3e56;\nfunction main(input) {\n    var _0x378fa8 = a0_0x3e56;\n    var line = input[_0x378fa8(0x0)](/\\r?\\n/g);\n    var arr = line[0x0]['split']('\\x20');\n    const H = arr[0x0], N = arr[0x1];\n    var A = line[0x1]['split']('\\x20')['map'](Number);\n    A = A[_0x378fa8(0x1)]((A, x) => A + x);\n    console[_0x378fa8(0x2)](0x1 < Math[_0x378fa8(0x3)](H / A) ? 'No' : _0x378fa8(0x4));\n}\nmain(require('fs')[a0_0xf5a8be(0x5)](a0_0xf5a8be(0x6), a0_0xf5a8be(0x7)));", "test_cases": [["10 3\n4 5 6", "Yes"], ["20 3\n4 5 6", "No"], ["210 5\n31 41 59 26 53", "Yes"], ["211 5\n31 41 59 26 53", "No"]], "original": "function main(input) {\n    var line = input.split(/\\r?\\n/g);\n    var arr = line[0].split(\" \");\n    const H = arr[0], N = arr[1];\n    var A = line[1].split(\" \").map(Number);\n    A = A.reduce((A, x) => A + x)\n    console.log(1 < Math.ceil(H / A) ? \"No\" : \"Yes\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02790_1", "type": "JavaScript", "obfuscated": "var a0_0x4cca9a = a0_0x4cc6;\nfunction a0_0x4cc6(vRxUkc, key) {\n    var stringArray = a0_0x5b02();\n    a0_0x4cc6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cc6(vRxUkc, key);\n}\nfunction a0_0x5b02() {\n    var _0x3ba162 = [\n        'split',\n        'log',\n        'toString',\n        'repeat',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5b02 = function () {\n        return _0x3ba162;\n    };\n    return a0_0x5b02();\n}\nfunction Main(arg) {\n    var _0x39c9a2 = a0_0x4cc6;\n    var a = arg['split']('\\x0a')[0x0][_0x39c9a2(0x0)]('\\x20')[0x0] - 0x0;\n    var b = arg['split']('\\x0a')[0x0]['split']('\\x20')[0x1] - 0x0;\n    if (a < b) {\n        console[_0x39c9a2(0x1)](a[_0x39c9a2(0x2)]()[_0x39c9a2(0x3)](b));\n    } else {\n        console[_0x39c9a2(0x1)](b[_0x39c9a2(0x2)]()[_0x39c9a2(0x3)](a));\n    }\n    return;\n}\nMain(require('fs')[a0_0x4cca9a(0x4)](a0_0x4cca9a(0x5), a0_0x4cca9a(0x6)));", "test_cases": [["4 3", "3333"], ["7 7", "7777777"]], "original": "function Main(arg)\n{\n  var a = arg.split(\"\\n\")[0].split(\" \")[0]-0;\n  var b = arg.split(\"\\n\")[0].split(\" \")[1]-0;\n \n  if (a < b) {\n    console.log(a.toString().repeat(b));\n  }\n  else {\n    console.log(b.toString().repeat(a));\n  }\n\n  return;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02791_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x50f484 = a0_0x50c7;\nfunction a0_0x50c7(hTfsBA, key) {\n    const stringArray = a0_0x429f();\n    a0_0x50c7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x50c7(hTfsBA, key);\n}\nfunction a0_0x429f() {\n    const _0x16a7d4 = [\n        'trim',\n        'split',\n        'map',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x429f = function () {\n        return _0x16a7d4;\n    };\n    return a0_0x429f();\n}\nfunction Main(s) {\n    const _0x591c92 = a0_0x50c7;\n    s = s[_0x591c92(0x0)]()[_0x591c92(0x1)]('\\x0a');\n    const n = Number(s[0x0]);\n    const p = s[0x1][_0x591c92(0x0)]()[_0x591c92(0x1)]('\\x20')[_0x591c92(0x2)](Number);\n    let cnt = 0x0;\n    for (let i = 0x1; i <= n; i++) {\n        let flg = !![];\n        let t = p['slice'](0x0, i);\n        let x = 0x0;\n        while (x < t[_0x591c92(0x3)] - 0x1) {\n            if (t[x] < p[i - 0x1])\n                flg = ![];\n            x++;\n        }\n        if (flg)\n            cnt++;\n    }\n    console[_0x591c92(0x4)](cnt);\n}\nMain(require('fs')[a0_0x50f484(0x5)](a0_0x50f484(0x6), a0_0x50f484(0x7)));", "test_cases": [["5\n4 2 5 1 3", "3"], ["4\n4 3 2 1", "4"], ["6\n1 2 3 4 5 6", "1"], ["8\n5 7 4 2 6 8 1 3", "4"], ["1\n1", "1"]], "original": "\"use strict\"\n \nfunction Main(s) {\n  s = s.trim().split('\\n');\n  const n = Number(s[0]);\n  const p = s[1].trim().split(' ').map(Number);\n \n  let cnt=0;\n  for(let i=1; i<=n; i++){\n    let flg = true;\n \n    let t = p.slice(0, i);\n    let x = 0;\n    while(x < t.length-1) {\n      if(t[x] < p[i-1]) flg=false;\n      x++;\n    }\n \n    if(flg)cnt++;\n  }\n  console.log(cnt);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02801_1", "type": "JavaScript", "obfuscated": "function a0_0xdca6(ChzlJC, key) {\n    var stringArray = a0_0x723f();\n    a0_0xdca6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdca6(ChzlJC, key);\n}\nMain(myin());\nfunction a0_0x723f() {\n    var _0x3ddad0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'log',\n        'error',\n        'split',\n        'map',\n        'join',\n        'indexOf'\n    ];\n    a0_0x723f = function () {\n        return _0x3ddad0;\n    };\n    return a0_0x723f();\n}\nfunction myin() {\n    var _0xba39d7 = a0_0xdca6;\n    return require('fs')[_0xba39d7(0x0)](_0xba39d7(0x1), 'utf8')['trim']();\n}\nfunction myout(t) {\n    var _0x594cef = a0_0xdca6;\n    console[_0x594cef(0x2)](t);\n}\nfunction myerr(t) {\n    var _0x3d8bb2 = a0_0xdca6;\n    console[_0x3d8bb2(0x3)](t);\n}\nfunction myconv(i, no) {\n    var _0x1d824c = a0_0xdca6;\n    switch (no) {\n    case 0x1:\n        return parseInt(i);\n    case 0x2:\n        return i[_0x1d824c(0x4)]('\\x20');\n    case 0x3:\n        return i[_0x1d824c(0x4)]('\\x0a');\n    case 0x4:\n        return i[_0x1d824c(0x4)]('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i['split']('\\x0a')[_0x1d824c(0x5)](a => Number(a));\n    case 0x6:\n        return i[_0x1d824c(0x4)]('');\n    case 0x7:\n        return i[_0x1d824c(0x4)]('')['map'](a => Number(a));\n    case 0x8:\n        return i[_0x1d824c(0x6)]('\\x20');\n    case 0x9:\n        return i['join']('\\x0a');\n    case 0x0:\n        return i['join']('');\n    default:\n        return i;\n    }\n}\nfunction Main(input) {\n    var _0x53f8e6 = a0_0xdca6;\n    input = myconv(input, null);\n    var list = 'abcdefghijklmnopqrstivwxyz'[_0x53f8e6(0x4)]('');\n    myout(list[list[_0x53f8e6(0x7)](input) + 0x1]);\n}", "test_cases": [["a", "b"], ["y", "z"]], "original": "Main(myin());\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\nfunction myerr(t){console.error(t);}//standard error\n//[no]param\n//不明値:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\n//8:半角SPで結合　9:改行で結合　0:文字なしで結合\nfunction myconv(i,no){switch(no){case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));case 8:return i.join(\" \");case 9:return i.join(\"\\n\");case 0:return i.join(\"\");default:return i;}}\nfunction Main(input) {\n  input = myconv(input,null);\n  var list = \"abcdefghijklmnopqrstivwxyz\".split(\"\");\n  myout(list[list.indexOf(input)+1]);\n}", "language": "JavaScript"}
{"filename": "p02912_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3ee5(DIJQRu, key) {\n    const stringArray = a0_0x1bf3();\n    a0_0x3ee5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ee5(DIJQRu, key);\n}\nconst a0_0x5d4794 = a0_0x3ee5;\nconst arg_str = require('fs')[a0_0x5d4794(0x0)](a0_0x5d4794(0x1), a0_0x5d4794(0x2));\nconst args_lines = arg_str[a0_0x5d4794(0x3)]('\\x0a');\nconst n_m = args_lines[0x0]['split']('\\x20');\nconst N = n_m[0x0];\nconst M = n_m[0x1];\nlet A_array = args_lines[0x1]['split']('\\x20');\nA_array = A_array['map'](x => parseInt(x));\nfor (let i = 0x0; i < M; i++) {\n    const max_value = Math[a0_0x5d4794(0x4)][a0_0x5d4794(0x5)](null, A_array);\n    const max_index = A_array['indexOf'](max_value);\n    A_array[max_index] = A_array[max_index] / 0x2;\n}\nconst result = A_array[a0_0x5d4794(0x6)](x => Math[a0_0x5d4794(0x7)](x))['reduce']((a, x) => a += x, 0x0);\nconsole['log'](result);\nfunction a0_0x1bf3() {\n    const _0x1fdef0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'split',\n        'max',\n        'apply',\n        'map',\n        'floor'\n    ];\n    a0_0x1bf3 = function () {\n        return _0x1fdef0;\n    };\n    return a0_0x1bf3();\n}", "test_cases": [["3 3\n2 13 8", "9"], ["4 4\n1 9 3 5", "6"], ["1 100000\n1000000000", "0"], ["10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "9500000000"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args_lines = arg_str.split('\\n')\nconst n_m = args_lines[0].split(' ')\nconst N = n_m[0]\nconst M = n_m[1]\nlet A_array = args_lines[1].split(' ')\nA_array = A_array.map(x=>parseInt(x))\n\nfor(let i=0;i<M;i++){\n  const max_value = Math.max.apply(null,A_array)\n    const max_index = A_array.indexOf(max_value)\n\n    A_array[max_index] = A_array[max_index] / 2\n}\n\nconst result = A_array.map(x=>Math.floor(x)).reduce((a,x) => a+=x,0)\nconsole.log(result)\n", "language": "JavaScript"}
{"filename": "p02915_1", "type": "JavaScript", "obfuscated": "var a0_0x456443 = a0_0x345f;\nvar GET = (function () {\n    var _0x18cc34 = a0_0x345f;\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        var _0x3a07cf = a0_0x345f;\n        if (_0x3a07cf(0x0) === _0x3a07cf(0x1)) {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0x3a07cf(0x2))\n                s[y] = s[y][_0x3a07cf(0x3)]('\\x20')[_0x3a07cf(0x4)]();\n            r = s[y][_0x3a07cf(0x5)]();\n            if (!s[y][_0x3a07cf(0x6)])\n                this['_y']++;\n            return f ? r : +r;\n        } else {\n            this['_s'] = s[_0x3a07cf(0x7)]()[_0x3a07cf(0x3)]('\\x0a');\n            this['_y'] = 0x0;\n        }\n    }\n    g[_0x18cc34(0x8)]['a'] = function (f) {\n        var _0x223b52 = a0_0x345f;\n        var s = this['_s'], y = this['_y'], r;\n        if (typeof s[y] === _0x223b52(0x2))\n            s[y] = s[y]['split']('\\x20')[_0x223b52(0x4)]();\n        r = s[y][_0x223b52(0x5)]();\n        if (!s[y][_0x223b52(0x6)])\n            this['_y']++;\n        return f ? r : +r;\n    };\n    g[_0x18cc34(0x8)]['l'] = function (f) {\n        var _0x345d45 = a0_0x345f;\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s[_0x345d45(0x9)](a => +a);\n    };\n    g[_0x18cc34(0x8)]['m'] = function (n, f) {\n        var _0x515cf4 = a0_0x345f;\n        if (_0x515cf4(0xa) !== 'IzVZt') {\n            return new g(s);\n        } else {\n            var r = this['_s'][_0x515cf4(0xb)](this['_y'], this['_y'] += n)[_0x515cf4(0x9)](a => a[_0x515cf4(0x3)]('\\x20'));\n            return f ? r : r[_0x515cf4(0x9)](a => a[_0x515cf4(0x9)](a => +a));\n        }\n    };\n    g[_0x18cc34(0x8)]['r'] = function (n, f) {\n        var _0x5cd9ae = a0_0x345f;\n        var r = this['_s'][_0x5cd9ae(0xb)](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nfunction a0_0x1171() {\n    var _0x58f5f4 = [\n        'NHwLT',\n        'xnEuQ',\n        'string',\n        'split',\n        'reverse',\n        'pop',\n        'length',\n        'trim',\n        'prototype',\n        'map',\n        'IzVZt',\n        'slice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        ']).fill(0).map(x=>{return\\x20',\n        ';})',\n        'Array(a['\n    ];\n    a0_0x1171 = function () {\n        return _0x58f5f4;\n    };\n    return a0_0x1171();\n}\nfunction a0_0x345f(FzlwZM, key) {\n    var stringArray = a0_0x1171();\n    a0_0x345f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x345f(FzlwZM, key);\n}\nvar o = GET(require('fs')[a0_0x456443(0xc)](a0_0x456443(0xd), a0_0x456443(0xe)));\nfunction xArray(v) {\n    var _0x6d2656 = a0_0x345f;\n    var a = arguments, l = a[_0x6d2656(0x6)], r = 'Array(a[' + --l + _0x6d2656(0xf) + v + _0x6d2656(0x10);\n    while (--l)\n        r = _0x6d2656(0x11) + l + ']).fill(0).map(x=>' + r + ')';\n    return eval(r);\n}\nconsole['log'](main());\nfunction main() {\n    var n = o['a']();\n    return n * n * n;\n}", "test_cases": [["2", "8"], ["1", "1"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill(0).map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill(0).map(x=>\"+r+\")\";return eval(r);}\n\nconsole.log(main());\nfunction main(){\n  var n=o.a();\n  return n*n*n;\n}", "language": "JavaScript"}
{"filename": "p02935_1", "type": "JavaScript", "obfuscated": "var a0_0x3ffc34 = a0_0x3eea;\nfunction a0_0x1078() {\n    var _0x24c4a5 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'readline',\n        'createInterface',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'map',\n        'sort',\n        'length',\n        'log'\n    ];\n    a0_0x1078 = function () {\n        return _0x24c4a5;\n    };\n    return a0_0x1078();\n}\nprocess[a0_0x3ffc34(0x0)][a0_0x3ffc34(0x1)]();\nprocess[a0_0x3ffc34(0x0)][a0_0x3ffc34(0x2)](a0_0x3ffc34(0x3));\nfunction a0_0x3eea(TAzGPM, key) {\n    var stringArray = a0_0x1078();\n    a0_0x3eea = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3eea(TAzGPM, key);\n}\nvar lines = [];\nvar reader = require(a0_0x3ffc34(0x4))[a0_0x3ffc34(0x5)]({\n    'input': process['stdin'],\n    'output': process[a0_0x3ffc34(0x6)]\n});\nreader['on'](a0_0x3ffc34(0x7), line => {\n    var _0x329ab8 = a0_0x3eea;\n    lines[_0x329ab8(0x8)](line);\n});\nreader['on'](a0_0x3ffc34(0x9), () => {\n    var _0x49270a = a0_0x3eea;\n    var n = Number(lines[0x0]);\n    var v = lines[0x1]['split']('\\x20');\n    v = v[_0x49270a(0xa)](function (str) {\n        return Number(str);\n    });\n    for (i = 0x0; i < n - 0x1; i++) {\n        var min1 = v[_0x49270a(0xb)]((a, b) => a - b)[0x0];\n        v['splice'](0x0, 0x1);\n        var min2 = v[0x0];\n        v['splice'](0x0, 0x1);\n        var a = (min1 + min2) / 0x2;\n        if (v[_0x49270a(0xc)] == 0x0) {\n            break;\n        }\n        v[_0x49270a(0x8)](a);\n    }\n    console[_0x49270a(0xd)](a);\n});", "test_cases": [["2\n3 4", "3.5"], ["3\n500 300 200", "375"], ["5\n138 138 138 138 138", "138"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = []\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on('line', (line) => {\n  lines.push(line);\n});\n\nreader.on('close', () => {\n var n = Number(lines[0]);\n var v = lines[1].split(' ');\n v = v.map(function(str) { return Number(str)});\n\n for(i=0; i<n-1; i++){\n   var min1 = v.sort((a, b)=> a - b)[0];\n   v.splice(0,1);\n   var min2 = v[0];\n   v.splice(0,1);\n   var a = (min1 + min2)/2;\n   if(v.length == 0){\n     break;\n   }\n   v.push(a);\n }\n console.log(a);\n});", "language": "JavaScript"}
{"filename": "p02993_1", "type": "JavaScript", "obfuscated": "function a0_0xb6b4(zotIBW, key) {\n    var stringArray = a0_0x2b19();\n    a0_0xb6b4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xb6b4(zotIBW, key);\n}\nfunction a0_0x2b19() {\n    var _0x34e269 = [\n        'split',\n        'log',\n        'Bad',\n        'Good',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2b19 = function () {\n        return _0x34e269;\n    };\n    return a0_0x2b19();\n}\nvar a0_0x1e355d = a0_0xb6b4;\nfunction Main(input) {\n    var _0x2e2237 = a0_0xb6b4;\n    input = input[_0x2e2237(0x0)]('\\x20');\n    var tem = input;\n    var beforeText = tem;\n    var arr = String(tem)[_0x2e2237(0x0)]('');\n    var a = parseInt(arr[0x0], 0xa);\n    var b = parseInt(arr[0x1], 0xa);\n    var c = parseInt(arr[0x2], 0xa);\n    var d = parseInt(arr[0x3], 0xa);\n    if (a == b) {\n        console[_0x2e2237(0x1)](_0x2e2237(0x2));\n    } else if (b == c) {\n        console[_0x2e2237(0x1)]('Bad');\n    } else if (c == d) {\n        console['log']('Bad');\n    } else {\n        console[_0x2e2237(0x1)](_0x2e2237(0x3));\n    }\n}\nMain(require('fs')[a0_0x1e355d(0x4)](a0_0x1e355d(0x5), 'utf8'));", "test_cases": [["3776", "Bad"], ["8080", "Good"], ["1333", "Bad"], ["0024", "Bad"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t\tinput = input.split(\" \");\n\t\t\n\t\tvar tem = input;\n \n  \n\t\n\t//文字列から10進数に変換するときはparseIntを使います\n\t //   var tem = parseInt(input[0], 10);\n  \n  // 分割する数値\nvar beforeText = tem;\n// 数値を文字列に変換して、一文字ずつ分割\nvar arr = String(tem).split('');\n\nvar a = parseInt(arr[0], 10);\nvar b = parseInt(arr[1], 10);\nvar c = parseInt(arr[2], 10);\nvar d = parseInt(arr[3], 10);\n\n//console.log(arr); \n//console.log(a,b,c,d); \n\nif (a == b){console.log('Bad');}\n      else if (b == c){console.log('Bad');}\n             else if (c == d){console.log('Bad');}\n                             else {console.log('Good');}\n                             \n                      \n                             \n        \n\n\n  \n   \t   }    //    1    \n     \n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03011_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x174256 = a0_0x2156;\nfunction Main(input) {\n    const _0x1d7fa3 = a0_0x2156;\n    const P = Number(input[_0x1d7fa3(0x0)]('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    const Q = Number(input[_0x1d7fa3(0x0)]('\\x0a')[0x0][_0x1d7fa3(0x0)]('\\x20')[0x1]);\n    const R = Number(input[_0x1d7fa3(0x0)]('\\x0a')[0x0][_0x1d7fa3(0x0)]('\\x20')[0x2]);\n    const max = Math[_0x1d7fa3(0x1)](P, Q, R);\n    console[_0x1d7fa3(0x2)](P + Q + R - max);\n}\nfunction a0_0x2156(VIzdBD, key) {\n    const stringArray = a0_0x411e();\n    a0_0x2156 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2156(VIzdBD, key);\n}\nMain(require('fs')[a0_0x174256(0x3)](a0_0x174256(0x4), 'utf8')[a0_0x174256(0x5)]());\nfunction a0_0x411e() {\n    const _0x23ddb9 = [\n        'split',\n        'max',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'trim'\n    ];\n    a0_0x411e = function () {\n        return _0x23ddb9;\n    };\n    return a0_0x411e();\n}", "test_cases": [["1 3 4", "4"], ["3 2 3", "5"]], "original": "'use strict'\n\nfunction Main(input) {\n  const P = Number(input.split(\"\\n\")[0].split(\" \")[0])\n  const Q = Number(input.split(\"\\n\")[0].split(\" \")[1])\n  const R = Number(input.split(\"\\n\")[0].split(\" \")[2])\n\n  const max = Math.max(P, Q, R)\n  console.log(P + Q + R - max)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim())\n", "language": "JavaScript"}
{"filename": "p03077_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3ab41c = a0_0x5bd9;\nfunction a0_0x5bd9(ghvDyg, key) {\n    const stringArray = a0_0x199c();\n    a0_0x5bd9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5bd9(ghvDyg, key);\n}\nfunction main(input) {\n    const _0x4b1272 = a0_0x5bd9;\n    const args = input['split']('\\x0a');\n    const N = parseInt(args[0x0]);\n    const A = parseInt(args[0x1]);\n    const B = parseInt(args[0x2]);\n    const C = parseInt(args[0x3]);\n    const D = parseInt(args[0x4]);\n    const E = parseInt(args[0x5]);\n    const station = [\n        A,\n        B,\n        C,\n        D,\n        E\n    ];\n    let max_traf = Math[_0x4b1272(0x0)](...station);\n    console[_0x4b1272(0x1)](Math[_0x4b1272(0x2)](N / max_traf) + 0x4);\n}\nmain(require('fs')['readFileSync'](a0_0x3ab41c(0x3), a0_0x3ab41c(0x4)));\nfunction a0_0x199c() {\n    const _0x5bfa31 = [\n        'min',\n        'log',\n        'ceil',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x199c = function () {\n        return _0x5bfa31;\n    };\n    return a0_0x199c();\n}", "test_cases": [["5\n3\n2\n4\n3\n5", "7"], ["10\n123\n123\n123\n123\n123", "5"], ["10000000007\n2\n3\n5\n7\n11", "5000000008"]], "original": "\"use strict\";\nfunction main(input) {\n    const args = input.split('\\n');\n\n    const N = parseInt(args[0]);\n    const A = parseInt(args[1]);\n    const B = parseInt(args[2]);\n    const C = parseInt(args[3]);\n    const D = parseInt(args[4]);\n    const E = parseInt(args[5]);\n\n    const station = [A, B, C, D, E];\n    let max_traf = Math.min(...station);\n    console.log(Math.ceil(N / max_traf) + 4);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03086_1", "type": "JavaScript", "obfuscated": "function a0_0x5a56(oSZVYp, key) {\n    var stringArray = a0_0x49fa();\n    a0_0x5a56 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a56(oSZVYp, key);\n}\nvar a0_0x290d95 = a0_0x5a56;\ninput = require('fs')[a0_0x290d95(0x0)](a0_0x290d95(0x1), 'utf8');\nlines = input[a0_0x290d95(0x2)]('\\x0a');\nS = lines[a0_0x290d95(0x3)]();\nfunction a0_0x49fa() {\n    var _0x24b271 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'shift',\n        'length',\n        'test'\n    ];\n    a0_0x49fa = function () {\n        return _0x24b271;\n    };\n    return a0_0x49fa();\n}\nmax = 0x0;\ncnt = 0x0;\nfor (i = 0x0; i < S[a0_0x290d95(0x4)]; i++) {\n    if (/[AGCT]/[a0_0x290d95(0x5)](S[i])) {\n        cnt++;\n    } else {\n        if (max < cnt) {\n            max = cnt;\n        }\n        cnt = 0x0;\n    }\n}\nconsole['log'](max);", "test_cases": [["ATCODER", "3"], ["HATAGAYA", "5"], ["SHINJUKU", "0"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nS = lines.shift()\nmax = 0\ncnt = 0\nfor(i=0;i < S.length; i++) {\n    if (/[AGCT]/.test(S[i])) {\n       cnt++ \n    } else {\n        if (max < cnt) {\n            max = cnt\n        }\n        cnt = 0\n    }\n}\nconsole.log(max)", "language": "JavaScript"}
{"filename": "p03107_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x13465d = a0_0x320a;\nfunction a0_0x320a(vtqDWR, key) {\n    var stringArray = a0_0x285f();\n    a0_0x320a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x320a(vtqDWR, key);\n}\nfunction a0_0x285f() {\n    var _0x14ac65 = [\n        'trim',\n        'replace',\n        'split',\n        'length',\n        'log',\n        'min',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x285f = function () {\n        return _0x14ac65;\n    };\n    return a0_0x285f();\n}\nfunction Main(input) {\n    var _0x381cec = a0_0x320a;\n    input = input[_0x381cec(0x0)]();\n    input = input[_0x381cec(0x1)](/\\s+/, '')[_0x381cec(0x2)]('');\n    var height = input[_0x381cec(0x3)];\n    var one = 0x0;\n    var zero = 0x0;\n    while (input[_0x381cec(0x3)]) {\n        if (input['pop']() === '0')\n            zero++;\n        else\n            one++;\n    }\n    console[_0x381cec(0x4)](Math[_0x381cec(0x5)](zero, one) * 0x2);\n}\nMain(require('fs')['readFileSync'](a0_0x13465d(0x6), a0_0x13465d(0x7)));", "test_cases": [["0011", "4"], ["11011010001011", "12"], ["0", "0"]], "original": "\"use strict\"\nfunction Main(input){\n  input=input.trim();\n  input=input.replace(/\\s+/,\"\").split(\"\");\n  var height=input.length;\n  var one=0;\n  var zero=0;\n  while(input.length){\n    if(input.pop()===\"0\")zero++;\n    else one++;\n  }\n  console.log(Math.min(zero,one)*2);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03126_1", "type": "JavaScript", "obfuscated": "var a0_0x312ca9 = a0_0x19c6;\nfunction a0_0x18ce() {\n    var _0x233da5 = [\n        'split',\n        'map',\n        'shift',\n        'forEach',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x18ce = function () {\n        return _0x233da5;\n    };\n    return a0_0x18ce();\n}\nfunction Main(input) {\n    var _0xd42687 = a0_0x19c6;\n    input = input[_0xd42687(0x0)]('\\x0a');\n    var m = input[0x0]['split']('\\x20')[_0xd42687(0x1)](Number);\n    input[_0xd42687(0x2)]();\n    var arr = new Array(0x23)['fill'](0x0);\n    input[_0xd42687(0x3)](function (val) {\n        var _0x48123f = a0_0x19c6;\n        var mem = val[_0x48123f(0x0)]('\\x20')[_0x48123f(0x1)](Number);\n        mem['shift']();\n        mem[_0x48123f(0x3)](function (p) {\n            arr[p]++;\n        });\n    });\n    var ans = 0x0;\n    arr[_0xd42687(0x3)](function (val) {\n        if (val == m[0x0])\n            ans++;\n    });\n    console[_0xd42687(0x4)](ans);\n}\nfunction a0_0x19c6(EbyXqQ, key) {\n    var stringArray = a0_0x18ce();\n    a0_0x19c6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19c6(EbyXqQ, key);\n}\nMain(require('fs')[a0_0x312ca9(0x5)](a0_0x312ca9(0x6), a0_0x312ca9(0x7))[a0_0x312ca9(0x8)]());", "test_cases": [["3 4\n2 1 3\n3 1 2 3\n2 3 2", "1"], ["5 5\n4 2 3 4 5\n4 1 3 4 5\n4 1 2 4 5\n4 1 2 3 5\n4 1 2 3 4", "0"], ["1 30\n3 5 10 30", "3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var m = input[0].split(\" \").map(Number);\n    input.shift();\n    var arr = new Array(35).fill(0);\n    input.forEach(function(val){\n        var mem = val.split(\" \").map(Number);\n        mem.shift();\n        mem.forEach(function(p){\n            arr[p]++;\n        });\n    })\n    var ans = 0;\n    arr.forEach(function(val){\n      if(val==m[0]) ans++;  \n    })\n    console.log(ans);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03207_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x20cab4 = a0_0x1df1;\nconst main = input => {\n    const _0x208a92 = a0_0x1df1;\n    const args = input[_0x208a92(0x0)]('\\x0a')['map'](arg => arg[_0x208a92(0x0)]('\\x20'));\n    const N = parseInt(args[0x0][0x0], 0xa);\n    const p = args[_0x208a92(0x1)](0x1, N + 0x1)['map'](arg => parseInt(arg[0x0], 0xa))[_0x208a92(0x2)]((a, b) => b - a);\n    let sum = p[0x0] / 0x2;\n    for (let i = 0x1; i < N; i++) {\n        sum += p[i];\n    }\n    console[_0x208a92(0x3)](sum);\n};\nfunction a0_0x1fb8() {\n    const _0x3a7e6c = [\n        'split',\n        'slice',\n        'sort',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1fb8 = function () {\n        return _0x3a7e6c;\n    };\n    return a0_0x1fb8();\n}\nfunction a0_0x1df1(ymcITk, key) {\n    const stringArray = a0_0x1fb8();\n    a0_0x1df1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1df1(ymcITk, key);\n}\nmain(require('fs')[a0_0x20cab4(0x4)](a0_0x20cab4(0x5), 'utf8'));", "test_cases": [["3\n4980\n7980\n6980", "15950"], ["4\n4320\n4320\n4320\n4320", "15120"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst N = parseInt(args[0][0], 10)\n\tconst p = args.slice(1, N + 1).map(arg => parseInt(arg[0], 10)).sort((a, b) => b - a)\n\tlet sum = p[0] / 2\n\n\tfor (let i = 1; i < N; i++) {\n\t\tsum += p[i]\n\t}\n\n\tconsole.log(sum)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03220_1", "type": "JavaScript", "obfuscated": "var a0_0x28302f = a0_0x1991;\nfunction a0_0x1991(lCJLXV, key) {\n    var stringArray = a0_0x200d();\n    a0_0x1991 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1991(lCJLXV, key);\n}\nvar toInt = x => parseInt(x, 0xa);\nfunction a0_0x200d() {\n    var _0x2711c2 = [\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'YgdNN',\n        'log'\n    ];\n    a0_0x200d = function () {\n        return _0x2711c2;\n    };\n    return a0_0x200d();\n}\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var _0x304f16 = a0_0x1991;\n    var rest = arguments, v = rest[0x0];\n    for (var i = 0x1; i < rest[_0x304f16(0x0)]; i++)\n        if (rest[i] < v)\n            v = rest[i];\n    return v;\n}\nfunction max() {\n    var rest = arguments, v = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (rest[i] > v)\n            v = rest[i];\n    return v;\n}\nfunction gcd() {\n    var rest = arguments, v = rest[0x0], temp = (a, b) => b ? temp(b, a % b) : a;\n    for (var i = 0x1; i < rest['length']; i++)\n        v = temp(v, rest[i]);\n    return v;\n}\nMain(require('fs')[a0_0x28302f(0x1)](a0_0x28302f(0x2), a0_0x28302f(0x3)));\nfunction Main(input) {\n    var _0x114649 = a0_0x1991;\n    var input = input[_0x114649(0x4)]('\\x0a');\n    var n = toInt(input[0x0]);\n    var ta = toIntArr(input[0x1]['split']('\\x20'));\n    var hs = toIntArr(input[0x2][_0x114649(0x4)]('\\x20'));\n    var t = ta[0x0];\n    var a = ta[0x1];\n    var ans = 0x1;\n    var x = abs(t - a - 0.006 * hs[0x0]), y;\n    for (var i = 0x1; i < n; i++) {\n        if (_0x114649(0x5) !== _0x114649(0x5)) {\n            y = abs(t - a - 0.006 * hs[i]);\n            if (y < x) {\n                ans = i + 0x1;\n                x = y;\n            }\n        } else {\n            y = abs(t - a - 0.006 * hs[i]);\n            if (y < x) {\n                ans = i + 0x1;\n                x = y;\n            }\n        }\n    }\n    console[_0x114649(0x6)](ans);\n}", "test_cases": [["2\n12 5\n1000 2000", "1"], ["3\n21 -11\n81234 94124 52141", "3"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest=arguments,v=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<v)v=rest[i];return v}\nfunction max(){var rest=arguments,v=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>v)v=rest[i];return v}\nfunction gcd(){var rest=arguments,v=rest[0],temp=(a,b)=>b?temp(b,a%b):a;for(var i=1;i<rest.length;i++)v=temp(v,rest[i]);return v}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar ta = toIntArr(input[1].split(' '));\n\tvar hs = toIntArr(input[2].split(' '));\n\tvar t = ta[0];\n\tvar a = ta[1];\n\n\tvar ans = 1;\n\tvar x =abs(t-a-0.006*hs[0]) ,y;\n\tfor(var i = 1; i < n; i++){\n\t\ty = abs(t-a-0.006*hs[i]);\n\t\t//console.log(i,x,y)\n\t\tif(y<x){\n\t\t\tans = i+1;\n\t\t\tx = y;\n\t\t}\n\t}\n\n\tconsole.log(ans);\n\n}\n\n", "language": "JavaScript"}
{"filename": "p03309_1", "type": "JavaScript", "obfuscated": "function myin() {\n    var _0x3a65ef = a0_0x3aed;\n    return require('fs')[_0x3a65ef(0x0)](_0x3a65ef(0x1), _0x3a65ef(0x2))[_0x3a65ef(0x3)]();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myconv(i, no) {\n    var _0x32463f = a0_0x3aed;\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return parseInt(i);\n    case 0x2:\n        return i[_0x32463f(0x4)]('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i[_0x32463f(0x4)]('\\x20')[_0x32463f(0x5)](a => Number(a));\n    case 0x5:\n        return i[_0x32463f(0x4)]('\\x0a')[_0x32463f(0x5)](a => Number(a));\n    case 0x6:\n        return i[_0x32463f(0x4)]('');\n    case 0x7:\n        return i[_0x32463f(0x4)]('')[_0x32463f(0x5)](a => Number(a));\n    }\n}\nfunction Main(input) {\n    var _0x3c7f87 = a0_0x3aed;\n    input = myconv(input, 0x3);\n    var N = myconv(input[0x0], 0x1);\n    var list = myconv(input[0x1], 0x4);\n    var tmpList = [];\n    for (var i = 0x0; i < N; i++) {\n        tmpList[_0x3c7f87(0x6)](list[i] - (i + 0x1));\n    }\n    tmpList[_0x3c7f87(0x7)](function (a, b) {\n        var _0x17b0ba = a0_0x3aed;\n        if (_0x17b0ba(0x8) === _0x17b0ba(0x8)) {\n            return a - b;\n        } else {\n            tmpList[_0x17b0ba(0x6)](list[i] - (i + 0x1));\n        }\n    });\n    var b = tmpList[myconv(tmpList['length'] / 0x2, 0x1)];\n    var output = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        output += Math[_0x3c7f87(0x9)](list[i] - (b + (i + 0x1)));\n    }\n    myout(output);\n}\nfunction a0_0x3aed(LkbHSu, key) {\n    var stringArray = a0_0x1a9e();\n    a0_0x3aed = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3aed(LkbHSu, key);\n}\nfunction a0_0x1a9e() {\n    var _0x4fc201 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'push',\n        'sort',\n        'LIvkr',\n        'abs'\n    ];\n    a0_0x1a9e = function () {\n        return _0x4fc201;\n    };\n    return a0_0x1a9e();\n}\nMain(myin());", "test_cases": [["5\n2 2 3 5 5", "2"], ["9\n1 2 3 4 5 6 7 8 9", "0"], ["6\n6 5 4 3 2 1", "18"], ["7\n1 1 1 1 2 3 4", "6"]], "original": "function myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  var N = myconv(input[0],1);\n  var list = myconv(input[1],4);\n  \n  var tmpList = [];\n  for(var i = 0; i < N; i++){\n    tmpList.push(list[i] - (i + 1));\n  }\n  \n  tmpList.sort(function(a,b){\n  \treturn a-b;\n  });\n  \n  var b = tmpList[myconv(tmpList.length / 2,1)];\n  var output = 0;\n  for(var i = 0; i < N; i++){\n    output += Math.abs(list[i] - (b + (i + 1)));\n  }\n  myout(output);\n}\n\nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03719_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x85c4(HFDLMw, key) {\n    const stringArray = a0_0x55ac();\n    a0_0x85c4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x85c4(HFDLMw, key);\n}\nconst a0_0xdb84f3 = a0_0x85c4;\nfunction a0_0x55ac() {\n    const _0x593e83 = [\n        'trim',\n        'split',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x55ac = function () {\n        return _0x593e83;\n    };\n    return a0_0x55ac();\n}\nconst main = input => {\n    const _0x4df3dd = a0_0x85c4;\n    const args = input[_0x4df3dd(0x0)]()[_0x4df3dd(0x1)]('\\x20');\n    const a = parseInt(args[0x0], 0xa);\n    const b = parseInt(args[0x1], 0xa);\n    const c = parseInt(args[0x2], 0xa);\n    if (c >= a && c <= b)\n        console[_0x4df3dd(0x2)](_0x4df3dd(0x3));\n    else\n        console[_0x4df3dd(0x2)]('No');\n};\nmain(require('fs')[a0_0xdb84f3(0x4)](a0_0xdb84f3(0x5), a0_0xdb84f3(0x6)));", "test_cases": [["1 3 2", "Yes"], ["6 5 4", "No"], ["2 2 2", "Yes"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.trim().split(' ')\n\tconst a = parseInt(args[0], 10)\n\tconst b = parseInt(args[1], 10)\n\tconst c = parseInt(args[2], 10)\n\tif (c >= a && c <= b) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03852_1", "type": "JavaScript", "obfuscated": "const a0_0x4fc9d9 = a0_0x1b42;\nfunction Main(input) {\n    const _0x47e925 = a0_0x1b42;\n    c = input;\n    const vowel = _0x47e925(0x0);\n    console['log'](vowel[_0x47e925(0x1)](c) !== -0x1 ? _0x47e925(0x2) : _0x47e925(0x3));\n}\nfunction a0_0x2b66() {\n    const _0x3c0e66 = [\n        'aeiou',\n        'indexOf',\n        'vowel',\n        'consonant',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2b66 = function () {\n        return _0x3c0e66;\n    };\n    return a0_0x2b66();\n}\nfunction a0_0x1b42(tmaGbW, key) {\n    const stringArray = a0_0x2b66();\n    a0_0x1b42 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b42(tmaGbW, key);\n}\nMain(require('fs')[a0_0x4fc9d9(0x4)](a0_0x4fc9d9(0x5), 'utf8'));", "test_cases": [["a", "vowel"], ["z", "consonant"], ["s", "consonant"]], "original": "function Main(input) {\n\tc = input;\n\tconst vowel = 'aeiou';\n  \tconsole.log(vowel.indexOf(c)!==-1 ? \"vowel\" : \"consonant\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02573_1", "type": "JavaScript", "obfuscated": "function a0_0x12a6() {\n    const _0x4eafbc = [\n        'split',\n        'map',\n        'OOwaA',\n        'RoIpg',\n        'max',\n        'pLZHJ',\n        'log',\n        'stdin',\n        'data',\n        'end'\n    ];\n    a0_0x12a6 = function () {\n        return _0x4eafbc;\n    };\n    return a0_0x12a6();\n}\nfunction a0_0x1251(DkoHdg, key) {\n    const stringArray = a0_0x12a6();\n    a0_0x1251 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1251(DkoHdg, key);\n}\nconst a0_0x2673d7 = a0_0x1251;\nconst processData = lines => {\n    const _0x326ec5 = a0_0x1251;\n    const [n, m] = lines[0x0][_0x326ec5(0x0)]('\\x20')[_0x326ec5(0x1)](x => +x);\n    let friendships = {};\n    for (let i = 0x0; i < m; i++) {\n        if (_0x326ec5(0x2) === _0x326ec5(0x3)) {\n            const [n, m] = lines[0x0][_0x326ec5(0x0)]('\\x20')['map'](x => +x);\n            let friendships = {};\n            for (let i = 0x0; i < m; i++) {\n                const f = lines[i + 0x1][_0x326ec5(0x0)]('\\x20')[_0x326ec5(0x1)](x => +x);\n                let friendItem = friendships[f[0x0]] || friendships[f[0x1]] || {};\n                friendships[f[0x0]] = friendItem;\n                friendships[f[0x1]] = friendItem;\n                friendItem[f[0x0]] = !![];\n                friendItem[f[0x1]] = !![];\n            }\n            let maxCount = 0x1;\n            for (let p in friendships) {\n                let count = 0x0;\n                for (let t2 in friendships[p]) {\n                    count++;\n                }\n                maxCount = Math[_0x326ec5(0x4)](maxCount, count);\n            }\n            console['log'](maxCount);\n        } else {\n            const f = lines[i + 0x1][_0x326ec5(0x0)]('\\x20')[_0x326ec5(0x1)](x => +x);\n            let friendItem = friendships[f[0x0]] || friendships[f[0x1]] || {};\n            friendships[f[0x0]] = friendItem;\n            friendships[f[0x1]] = friendItem;\n            friendItem[f[0x0]] = !![];\n            friendItem[f[0x1]] = !![];\n        }\n    }\n    let maxCount = 0x1;\n    for (let p in friendships) {\n        let count = 0x0;\n        for (let t2 in friendships[p]) {\n            if (_0x326ec5(0x5) !== 'pLZHJ') {\n                let count = 0x0;\n                for (let t2 in friendships[p]) {\n                    count++;\n                }\n                maxCount = Math[_0x326ec5(0x4)](maxCount, count);\n            } else {\n                count++;\n            }\n        }\n        maxCount = Math[_0x326ec5(0x4)](maxCount, count);\n    }\n    console[_0x326ec5(0x6)](maxCount);\n};\nlet i = '';\nprocess[a0_0x2673d7(0x7)]['on'](a0_0x2673d7(0x8), c => i += c);\nprocess[a0_0x2673d7(0x7)]['on'](a0_0x2673d7(0x9), () => {\n    const {EOL: EOL} = require('os');\n    const lines = i['split'](EOL);\n    processData(lines);\n});", "test_cases": [["5 3\n1 2\n3 4\n5 1", "3"], ["4 10\n1 2\n2 1\n1 2\n2 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4", "4"], ["10 4\n3 1\n4 1\n5 9\n2 6", "3"]], "original": "const processData = (lines) => {\n    const [n, m] = lines[0].split(' ').map( x => +x)\n    let friendships = {}\n    for (let i=0; i<m; i++) {\n        const f = lines[i+1].split(' ').map(x => +x)\n        let friendItem = friendships[f[0]] || friendships[f[1]] || {}\n        friendships[f[0]] = friendItem\n        friendships[f[1]] = friendItem\n\n        friendItem[f[0]] = true\n        friendItem[f[1]] = true\n    }\n    \n    let maxCount = 1\n    for (let p in friendships) {\n        let count = 0\n        for (let t2 in friendships[p]) {\n            count++\n        }\n        maxCount = Math.max(maxCount, count)\n    }\n\n    console.log(maxCount)\n}\n\nlet i = ''\nprocess.stdin.on('data', c => i += c)\nprocess.stdin.on('end', () => {\n    const {EOL} = require('os')\n    const lines = i.split(EOL) /*your input text, split by lines*/\n    processData(lines)\n})\n", "language": "JavaScript"}
{"filename": "p02594_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x30319f = a0_0x3bd4;\nconst main = arg => {\n    const _0x295343 = a0_0x3bd4;\n    arg = arg[_0x295343(0x0)]()['split']('\\x0a');\n    const N = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    console[_0x295343(0x1)](N >= 0x1e ? _0x295343(0x2) : 'No');\n};\nmain(require('fs')[a0_0x30319f(0x3)]('/dev/stdin', a0_0x30319f(0x4)));\nfunction a0_0x3bd4(DUxtbN, key) {\n    const stringArray = a0_0x5750();\n    a0_0x3bd4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3bd4(DUxtbN, key);\n}\nfunction a0_0x5750() {\n    const _0x57b561 = [\n        'trim',\n        'log',\n        'Yes',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x5750 = function () {\n        return _0x57b561;\n    };\n    return a0_0x5750();\n}", "test_cases": [["25", "No"], ["30", "Yes"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n\n    console.log(N >= 30 ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02601_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5219f7 = a0_0x1ddb;\nfunction a0_0x1ddb(ZrYRjP, key) {\n    const stringArray = a0_0x20b5();\n    a0_0x1ddb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ddb(ZrYRjP, key);\n}\nfunction main(input) {\n    const _0x476777 = a0_0x1ddb;\n    input = input[_0x476777(0x0)]()[_0x476777(0x1)]('\\x0a');\n    const line_one = input[0x0][_0x476777(0x1)]('\\x20');\n    const K = parseInt(input[0x1]);\n    let line_one_arr = [];\n    for (let i in line_one) {\n        if ('MDhcW' === _0x476777(0x2)) {\n            array[_0x476777(0x3)](f);\n            return array;\n        } else {\n            line_one_arr[_0x476777(0x4)](parseInt(line_one[i]));\n        }\n    }\n    for (let i = 0x0; i < K; i++) {\n        if (line_one_arr[0x0] >= line_one_arr[0x1]) {\n            line_one_arr[0x1] = line_one_arr[0x1] * 0x2;\n            continue;\n        }\n        if (line_one_arr[0x1] >= line_one_arr[0x2]) {\n            if (_0x476777(0x5) !== 'pvAgt') {\n                line_one_arr[0x2] = line_one_arr[0x2] * 0x2;\n            } else {\n                return a - b;\n            }\n        }\n    }\n    if (line_one_arr[0x0] < line_one_arr[0x1] && line_one_arr[0x1] < line_one_arr[0x2]) {\n        console[_0x476777(0x6)](_0x476777(0x7));\n    } else {\n        console[_0x476777(0x6)]('No');\n    }\n}\nfunction numberSort(array) {\n    const _0x5c3814 = a0_0x1ddb;\n    array[_0x5c3814(0x3)](f);\n    return array;\n}\nvar f = function (a, b) {\n    return a - b;\n};\nmain(require('fs')[a0_0x5219f7(0x8)](a0_0x5219f7(0x9), a0_0x5219f7(0xa)));\nfunction a0_0x20b5() {\n    const _0xf75c88 = [\n        'trim',\n        'split',\n        'WRGdm',\n        'sort',\n        'push',\n        'Fuhly',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x20b5 = function () {\n        return _0xf75c88;\n    };\n    return a0_0x20b5();\n}", "test_cases": [["7 2 5\n3", "Yes"], ["7 4 2\n3", "No"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\"\\n\");\n  const line_one = input[0].split(\" \");\n  const K = parseInt(input[1]);\n  let line_one_arr = [];\n\n  for (let i in line_one) {\n    line_one_arr.push(parseInt(line_one[i]));\n  }\n\n  for (let i = 0; i < K; i++) {\n    if (line_one_arr[0] >= line_one_arr[1]) {\n      line_one_arr[1] = line_one_arr[1] * 2;\n      continue;\n    }\n    if (line_one_arr[1] >= line_one_arr[2]) {\n      line_one_arr[2] = line_one_arr[2] * 2;\n    }\n  }\n\n  if (line_one_arr[0] < line_one_arr[1] && line_one_arr[1] < line_one_arr[2]) {\n    console.log(\"Yes\");\n  } else {\n    console.log(\"No\");\n  }\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02647_1", "type": "JavaScript", "obfuscated": "var a0_0x3eea0d = a0_0x5c5c;\nfunction a0_0x460c() {\n    var _0x368a60 = [\n        'split',\n        'map',\n        'length',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x460c = function () {\n        return _0x368a60;\n    };\n    return a0_0x460c();\n}\nfunction a0_0x5c5c(kzsBOJ, key) {\n    var stringArray = a0_0x460c();\n    a0_0x5c5c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c5c(kzsBOJ, key);\n}\nfunction Main(input) {\n    var _0x442588 = a0_0x5c5c;\n    input = input['split']('\\x0a');\n    var mem = input[0x0][_0x442588(0x0)]('\\x20');\n    var arr = input[0x1]['split']('\\x20')[_0x442588(0x1)](Number);\n    for (var p = 0x0; p < mem[0x1]; p++) {\n        var tmp = new Array(arr['length'])['fill'](0x0);\n        for (var i = 0x0; i < arr[_0x442588(0x2)]; i++) {\n            var n = arr[i];\n            var min = i - n;\n            var max = i + n;\n            if (min < 0x0)\n                min = 0x0;\n            if (max > arr[_0x442588(0x2)] - 0x1)\n                max = arr[_0x442588(0x2)] - 0x1;\n            for (var j = min; j <= max; j++) {\n                tmp[j]++;\n            }\n        }\n        var flag = !![];\n        for (var i = 0x0; i < arr['length']; i++) {\n            if (arr[i] != tmp[i])\n                flag = ![];\n            arr[i] = tmp[i];\n        }\n        if (flag)\n            break;\n    }\n    console[_0x442588(0x3)](arr[_0x442588(0x4)]('\\x20'));\n}\nMain(require('fs')[a0_0x3eea0d(0x5)](a0_0x3eea0d(0x6), a0_0x3eea0d(0x7))[a0_0x3eea0d(0x8)]());", "test_cases": [["5 1\n1 0 0 1 0", "1 2 2 1 2"], ["5 2\n1 0 0 1 0", "3 3 4 4 3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var mem = input[0].split(\" \");\n    var arr = input[1].split(\" \").map(Number);\n    for(var p=0;p<mem[1];p++){\n        var tmp = new Array(arr.length).fill(0);\n        for (var i = 0; i < arr.length; i++) {\n            var n = arr[i];\n          //  console.log(i,n)\n            var min = i - n;\n            var max = i + n;\n            if (min < 0) min = 0;\n            if (max > arr.length-1) max = arr.length-1;\n            for (var j = min; j <= max; j++) {\n                tmp[j]++;\n            }\n          //  console.log(max,min,tmp)\n        }\n      //  console.log(arr)\n        var flag = true;\n      //  console.log(arr.length)\n        for (var i = 0; i < arr.length; i++) {\n            if(arr[i]!=tmp[i]) flag = false;\n            arr[i] = tmp[i];\n        }\n     //   console.log(arr.join(\" \"));\n        if(flag) break;\n    }\n    console.log(arr.join(\" \"));\n} Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p02681_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x183e() {\n    const _0x5b9903 = [\n        'split',\n        'Yes',\n        'replace',\n        'slice',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x183e = function () {\n        return _0x5b9903;\n    };\n    return a0_0x183e();\n}\nconst a0_0x35f2e0 = a0_0x2d23;\nfunction a0_0x2d23(pPEWrW, key) {\n    const stringArray = a0_0x183e();\n    a0_0x2d23 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d23(pPEWrW, key);\n}\nconst Main = input => {\n    const _0x4be932 = a0_0x2d23;\n    const tmp = input['trim']()[_0x4be932(0x0)]('\\x0a');\n    const S = tmp[0x0];\n    const T = tmp[0x1];\n    let result = _0x4be932(0x1);\n    const tmpStr = T[_0x4be932(0x2)](S, '');\n    if (T[_0x4be932(0x3)](-0x1) === tmpStr && tmpStr[_0x4be932(0x4)] === 0x1) {\n        result = _0x4be932(0x1);\n    } else {\n        result = 'No';\n    }\n    console[_0x4be932(0x5)](result);\n    return result;\n};\nMain(require('fs')[a0_0x35f2e0(0x6)]('/dev/stdin', a0_0x35f2e0(0x7)));", "test_cases": [["chokudai\nchokudaiz", "Yes"], ["snuke\nsnekee", "No"], ["a\naa", "Yes"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const S = tmp[0]\n  const T = tmp[1]\n\n  let result = 'Yes'\n\n  const tmpStr = T.replace(S, '')\n\n  if (T.slice(-1) === tmpStr && tmpStr.length === 1) {\n    result = 'Yes'\n  } else {\n    result = 'No'\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02761_1", "type": "JavaScript", "obfuscated": "var a0_0x17a7b7 = a0_0xd840;\nfunction a0_0x374e() {\n    var _0x155055 = [\n        'split',\n        'shift',\n        'forEach',\n        'map',\n        'join',\n        'replace',\n        '10$1',\n        '1$1',\n        'log',\n        'utf8'\n    ];\n    a0_0x374e = function () {\n        return _0x155055;\n    };\n    return a0_0x374e();\n}\nfunction Main(input) {\n    var _0x2f6b5e = a0_0xd840;\n    input = input[_0x2f6b5e(0x0)]('\\x0a');\n    tmp = input[_0x2f6b5e(0x1)]();\n    N = parseInt(tmp[_0x2f6b5e(0x0)]('\\x20')[0x0]);\n    M = tmp[_0x2f6b5e(0x0)]('\\x20')[0x1];\n    S = input;\n    A = 'n'['repeat'](N)[_0x2f6b5e(0x0)]('');\n    flag = !![];\n    S[_0x2f6b5e(0x2)](v => {\n        var _0x1faf49 = a0_0xd840;\n        t = v[_0x1faf49(0x0)]('\\x20')[_0x1faf49(0x3)](v => parseInt(v));\n        if (A[t[0x0] - 0x1] != 'n' && A[t[0x0] - 0x1] != t[0x1])\n            flag = ![];\n        A[t[0x0] - 0x1] = t[0x1];\n    });\n    A = A[_0x2f6b5e(0x4)]('');\n    A = A[_0x2f6b5e(0x5)](/^nn([0-9])/, _0x2f6b5e(0x6));\n    A = A[_0x2f6b5e(0x5)](/^n([0-9])/, _0x2f6b5e(0x7));\n    A = A[_0x2f6b5e(0x5)](/n/g, '0');\n    A = parseInt(A);\n    if (flag && (A + '')['length'] == N) {\n        console[_0x2f6b5e(0x8)](A);\n    } else {\n        console[_0x2f6b5e(0x8)](-0x1);\n    }\n}\nfunction a0_0xd840(lLNiEv, key) {\n    var stringArray = a0_0x374e();\n    a0_0xd840 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd840(lLNiEv, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x17a7b7(0x9)));", "test_cases": [["3 3\n1 7\n3 2\n1 7", "702"], ["3 2\n2 1\n2 3", "-1"], ["3 1\n1 0", "-1"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  tmp = input.shift();\n  N = parseInt(tmp.split(\" \")[0]);\n  M = tmp.split(\" \")[1];\n  S = input;\n  A = \"n\".repeat(N).split(\"\");\n  flag = true;\n  S.forEach(v => {\n    t = v.split(\" \").map(v => parseInt(v));\n    if (A[t[0] - 1] != \"n\" && A[t[0] - 1] != t[1]) flag = false;\n    A[t[0] - 1] = t[1];\n  });\n\n  A = A.join(\"\");\n  A = A.replace(/^nn([0-9])/, \"10$1\");\n  A = A.replace(/^n([0-9])/, \"1$1\");\n  A = A.replace(/n/g, \"0\");\n  A = parseInt(A);\n  if (flag && (A + \"\").length == N) {\n    console.log(A);\n  } else {\n    console.log(-1);\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02885_1", "type": "JavaScript", "obfuscated": "function a0_0xf5a1(ECTosw, key) {\n    var stringArray = a0_0x18e2();\n    a0_0xf5a1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf5a1(ECTosw, key);\n}\nvar a0_0xd0fa2a = a0_0xf5a1;\nfunction Main(input) {\n    var _0x415841 = a0_0xf5a1;\n    var args = input[_0x415841(0x0)]()[_0x415841(0x1)]('\\x20')[_0x415841(0x2)](Number);\n    var nums = args[0x1] * 0x2;\n    var ans = 0x0;\n    if (nums <= args[0x0]) {\n        ans = args[0x0] - nums;\n    }\n    console[_0x415841(0x3)](ans);\n}\nfunction a0_0x18e2() {\n    var _0x583f5d = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x18e2 = function () {\n        return _0x583f5d;\n    };\n    return a0_0x18e2();\n}\nMain(require('fs')[a0_0xd0fa2a(0x4)](a0_0xd0fa2a(0x5), 'utf8'));", "test_cases": [["12 4", "4"], ["20 15", "0"], ["20 30", "0"]], "original": "function Main(input) {\n    var args = input.trim().split(' ').map(Number);\n    var nums = args[1] * 2\n    var ans = 0;\n    if(nums <= args[0]) {\n      ans = args[0] - nums;\n    }\n    console.log(ans);\n }\n \n/* var input = `12 11`;\nMain(input);\n */ \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02899_1", "type": "JavaScript", "obfuscated": "function a0_0x5a50(fCzvOD, key) {\n    var stringArray = a0_0x1404();\n    a0_0x5a50 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a50(fCzvOD, key);\n}\nvar a0_0x195f8a = a0_0x5a50;\nfunction a0_0x1404() {\n    var _0xf66ea9 = [\n        'split',\n        'map',\n        'length',\n        'trim',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1404 = function () {\n        return _0xf66ea9;\n    };\n    return a0_0x1404();\n}\nfunction Main(input) {\n    var _0x4cefde = a0_0x5a50;\n    input = input[_0x4cefde(0x0)]('\\x0a');\n    var N = [];\n    var arr = input[0x1][_0x4cefde(0x0)]('\\x20')[_0x4cefde(0x1)](Number);\n    for (var i = 0x0; i < arr[_0x4cefde(0x2)]; i++) {\n        N['push']([\n            arr[i],\n            i + 0x1\n        ]);\n    }\n    N = N['sort'](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    var ans = '';\n    for (i = 0x0; i < N[_0x4cefde(0x2)]; i++) {\n        ans += N[i][0x1];\n        ans += '\\x20';\n    }\n    console['log'](ans[_0x4cefde(0x3)]());\n}\nMain(require('fs')[a0_0x195f8a(0x4)](a0_0x195f8a(0x5), a0_0x195f8a(0x6))[a0_0x195f8a(0x3)]());", "test_cases": [["3\n2 3 1", "3 1 2"], ["5\n1 2 3 4 5", "1 2 3 4 5"], ["8\n8 2 7 3 4 5 6 1", "8 2 4 5 6 7 3 1"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var N = [];\n    var arr = input[1].split(\" \").map(Number);\n    for(var i=0;i<arr.length;i++){\n        N.push([arr[i],i+1]);\n    }\n    N = N.sort(function(a,b){return a[0]-b[0]});\n    var ans = \"\";\n    for(i=0;i<N.length;i++){\n        ans+=N[i][1]\n        ans+=\" \";\n    }\n   // console.log(N)\n    console.log(ans.trim());\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p02916_1", "type": "JavaScript", "obfuscated": "var a0_0x17a263 = a0_0x50bf;\nfunction a0_0x50bf(soqBKg, key) {\n    var stringArray = a0_0x2768();\n    a0_0x50bf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50bf(soqBKg, key);\n}\nfunction Main(input) {\n    var _0x4a1534 = a0_0x50bf;\n    input = input[_0x4a1534(0x0)]('\\x0a');\n    n = Number(input[0x0]['split']('\\x20'));\n    a = input[0x1]['split']('\\x20')['map'](Number);\n    b = input[0x2][_0x4a1534(0x0)]('\\x20')['map'](Number);\n    c = input[0x3][_0x4a1534(0x0)]('\\x20')[_0x4a1534(0x1)](Number);\n    var count = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        count += b[a[i] - 0x1];\n        if (a[i] === a[i - 0x1] + 0x1) {\n            count += c[a[i] - 0x2];\n        }\n    }\n    console['log'](count);\n}\nfunction a0_0x2768() {\n    var _0x435e55 = [\n        'split',\n        'map',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2768 = function () {\n        return _0x435e55;\n    };\n    return a0_0x2768();\n}\nMain(require('fs')[a0_0x17a263(0x2)]('/dev/stdin', a0_0x17a263(0x3)));", "test_cases": [["3\n3 1 2\n2 5 4\n3 6", "14"], ["4\n2 3 4 1\n13 5 8 24\n45 9 15", "74"], ["2\n1 2\n50 50\n50", "150"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n  \tn = Number(input[0].split(\" \"));\n    a = input[1].split(\" \").map(Number);\n    b = input[2].split(\" \").map(Number);\n    c = input[3].split(\" \").map(Number);\n  \tvar count = 0;\n  \tfor(var i=0; i<n; i++){\n      count += b[a[i]-1];\n      if(a[i] === a[i-1]+1){\n      \tcount += c[a[i]-2];\n      }\n    }\n  console.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02945_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x38ae(rbGOlL, key) {\n    const stringArray = a0_0x39ee();\n    a0_0x38ae = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x38ae(rbGOlL, key);\n}\nconst a0_0x3a31a2 = a0_0x38ae;\nconst main = input => {\n    const _0x115545 = a0_0x38ae;\n    const args = input[_0x115545(0x0)]('\\x0a')[_0x115545(0x1)](arg => arg[_0x115545(0x0)]('\\x20'));\n    const A = parseInt(args[0x0][0x0], 0xa);\n    const B = parseInt(args[0x0][0x1], 0xa);\n    console[_0x115545(0x2)](Math[_0x115545(0x3)](A + B, A - B, A * B) + 0x0);\n};\nfunction a0_0x39ee() {\n    const _0x192c0a = [\n        'split',\n        'map',\n        'log',\n        'max',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x39ee = function () {\n        return _0x192c0a;\n    };\n    return a0_0x39ee();\n}\nmain(require('fs')[a0_0x3a31a2(0x4)](a0_0x3a31a2(0x5), a0_0x3a31a2(0x6)));", "test_cases": [["-13 3", "-10"], ["1 -33", "34"], ["13 3", "39"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst A = parseInt(args[0][0], 10)\n\tconst B = parseInt(args[0][1], 10)\n\tconsole.log(Math.max(A + B, A - B, A * B) + 0)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02989_1", "type": "JavaScript", "obfuscated": "const a0_0x304749 = a0_0x171f;\nfunction a0_0x171f(DBUKgy, key) {\n    const stringArray = a0_0xeca5();\n    a0_0x171f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x171f(DBUKgy, key);\n}\nconst main = input => {\n    const _0xfd5b5 = a0_0x171f;\n    var d = input[0x1]['split']('\\x20')['map'](p => parseInt(p, 0xa))[_0xfd5b5(0x0)]((p, q) => p > q ? 0x1 : -0x1);\n    console[_0xfd5b5(0x1)](d[d['length'] / 0x2] - d[d[_0xfd5b5(0x2)] / 0x2 - 0x1]);\n};\nmain(require('fs')['readFileSync'](a0_0x304749(0x3), a0_0x304749(0x4))['split']('\\x0a'));\nfunction a0_0xeca5() {\n    const _0x31ae8d = [\n        'sort',\n        'log',\n        'length',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xeca5 = function () {\n        return _0x31ae8d;\n    };\n    return a0_0xeca5();\n}", "test_cases": [["6\n9 1 4 4 6 7", "2"], ["8\n9 1 14 5 5 4 4 14", "0"], ["14\n99592 10342 29105 78532 83018 11639 92015 77204 30914 21912 34519 80835 100000 1", "42685"]], "original": "const main = input => {\n    var d = input[1].split(' ').map(p => parseInt(p, 10)).sort((p,q) => p>q?1:-1);\n    console.log(d[d.length/2]-d[d.length/2-1]);   \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));\n", "language": "JavaScript"}
{"filename": "p02999_1", "type": "JavaScript", "obfuscated": "function a0_0x4246(YcSbdg, key) {\n    const stringArray = a0_0x1783();\n    a0_0x4246 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4246(YcSbdg, key);\n}\nconst a0_0x36f4e2 = a0_0x4246;\nfunction Main(input) {\n    const _0x17c16b = a0_0x4246;\n    var result;\n    const X = parseInt(input[0x0]);\n    const A = parseInt(input[0x1]);\n    result = X < A ? 0x0 : 0xa;\n    console[_0x17c16b(0x0)](result);\n}\nfunction a0_0x1783() {\n    const _0x18da90 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split'\n    ];\n    a0_0x1783 = function () {\n        return _0x18da90;\n    };\n    return a0_0x1783();\n}\nMain(require('fs')[a0_0x36f4e2(0x1)](a0_0x36f4e2(0x2), a0_0x36f4e2(0x3))['trim']()[a0_0x36f4e2(0x4)](/\\n|\\s/));", "test_cases": [["3 5", "0"], ["7 5", "10"], ["6 6", "10"]], "original": "function Main(input) {\n    var result;\n    const X = parseInt(input[0])\n    const A = parseInt(input[1])\n    \n    result = X < A ? 0 : 10;\n    console.log(result);\n}\n\n// 1行入力の場合\n// Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n\n// 改行で分割\n// Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n/));\n\n// 改行・空白で分割\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n|\\s/));", "language": "JavaScript"}
{"filename": "p03031_1", "type": "JavaScript", "obfuscated": "var a0_0x3cea79 = a0_0x10c1;\nfunction Main(input) {\n    var _0x2f84e5 = a0_0x10c1;\n    lines = input[_0x2f84e5(0x0)]('\\x0a');\n    lines = input[_0x2f84e5(0x0)]('\\x0a');\n    n = lines[0x0][_0x2f84e5(0x0)]('\\x20')[0x0] * 0x1;\n    m = lines[0x0][_0x2f84e5(0x0)]('\\x20')[0x1] * 0x1;\n    ps = lines[lines[_0x2f84e5(0x1)] - 0x1][_0x2f84e5(0x0)]('\\x20');\n    lines = lines[_0x2f84e5(0x2)](0x1, -0x1)[_0x2f84e5(0x3)](function (l) {\n        var _0x756c6b = a0_0x10c1;\n        return l[_0x756c6b(0x0)]('\\x20')[_0x756c6b(0x2)](0x1);\n    });\n    ans = 0x0;\n    for (i = 0x0; i < 0x1 << n; i++) {\n        s = (_0x2f84e5(0x4) + i[_0x2f84e5(0x5)](0x2))[_0x2f84e5(0x2)](-0x1 * n);\n        flg = !![];\n        for (j = 0x0; j < lines[_0x2f84e5(0x1)]; j++) {\n            on = 0x0;\n            if (!flg)\n                break;\n            for (k = 0x0; k < lines[j][_0x2f84e5(0x1)]; k++) {\n                on += s[n - lines[j][k]] * 0x1;\n            }\n            if (on % 0x2 != ps[j]) {\n                flg = ![];\n            }\n        }\n        if (flg) {\n            ans++;\n        }\n    }\n    console[_0x2f84e5(0x6)](ans);\n}\nfunction a0_0x42aa() {\n    var _0x18f082 = [\n        'split',\n        'length',\n        'slice',\n        'map',\n        '0000000000',\n        'toString',\n        'log',\n        'utf8'\n    ];\n    a0_0x42aa = function () {\n        return _0x18f082;\n    };\n    return a0_0x42aa();\n}\nfunction a0_0x10c1(CdcMUC, key) {\n    var stringArray = a0_0x42aa();\n    a0_0x10c1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x10c1(CdcMUC, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x3cea79(0x7)));", "test_cases": [["2 2\n2 1 2\n1 2\n0 1", "1"], ["2 3\n2 1 2\n1 1\n1 2\n0 0 1", "0"], ["5 2\n3 1 2 5\n2 2 3\n1 0", "8"]], "original": "function Main(input) {\n  lines = input.split(\"\\n\")\n  lines = input.split(\"\\n\")\n  n = lines[0].split(\" \")[0] * 1\n  m = lines[0].split(\" \")[1] * 1\n  ps = lines[lines.length - 1].split(\" \")\n  lines = lines.slice(1, -1).map(function(l) { return l.split(' ').slice(1) })\n  ans = 0\n  for (i = 0; i < (1 << n);i++) {\n    s = (\"0000000000\" + i.toString(2)).slice(-1 * n)\n    flg = true\n    for(j = 0; j < lines.length; j++) {\n      on = 0\n      if (!flg) break;\n      for(k = 0; k < lines[j].length; k++) {\n        on += s[n - lines[j][k]] * 1\n      }\n      if (on % 2 != ps[j]) {\n        flg = false\n      }\n    }\n    if (flg) {\n      ans++\n    }\n  }\n  console.log(ans) \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03061_1", "type": "JavaScript", "obfuscated": "var a0_0x1248bb = a0_0x237c;\nfunction a0_0x2a8f() {\n    var _0x5a1f74 = [\n        'max',\n        'length',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'slice',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2a8f = function () {\n        return _0x5a1f74;\n    };\n    return a0_0x2a8f();\n}\nfunction gcd(arr) {\n    var f = (a, b) => b ? f(b, a % b) : a;\n    var ans = arr[0x0];\n    for (var i = 0x1; i < arr['length']; i++) {\n        ans = f(ans, arr[i]);\n    }\n    return ans;\n}\nfunction getExcep(c) {\n    var _0x44c188 = a0_0x237c;\n    var min = Math['min'](...c);\n    var max = Math[_0x44c188(0x0)](...c);\n    var mincount = 0x0;\n    var maxcount = 0x0;\n    var findValue = 0x0;\n    for (var i = 0x0; i < c[_0x44c188(0x1)]; i++) {\n        if (c[i] === min) {\n            mincount++;\n        }\n    }\n    if (mincount === 0x1) {\n        findValue = min;\n    } else {\n        findValue = max;\n    }\n    for (var i = 0x0; i < c[_0x44c188(0x1)]; i++) {\n        if (c[i] === findValue) {\n            return i;\n        }\n    }\n}\nfunction main(arg) {\n    var _0x6abb12 = a0_0x237c;\n    arg = arg[_0x6abb12(0x2)]()[_0x6abb12(0x3)]('\\x0a');\n    var N = Number(arg[0x0]);\n    var A = arg[0x1][_0x6abb12(0x3)]('\\x20')[_0x6abb12(0x4)](Number);\n    var c = new Array(A['length'])[_0x6abb12(0x5)](0x0);\n    var result = 0x0;\n    for (var i = 0x0; i < A['length']; i++) {\n        var _A = A[_0x6abb12(0x6)]();\n        _A['splice'](i, 0x1);\n        var n = gcd(_A);\n        c[i] = n;\n    }\n    var idx = getExcep(c);\n    A[idx] = A[idx + 0x1];\n    console['log'](gcd(A));\n}\nfunction a0_0x237c(JZLBBz, key) {\n    var stringArray = a0_0x2a8f();\n    a0_0x237c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x237c(JZLBBz, key);\n}\nmain(require('fs')[a0_0x1248bb(0x7)]('/dev/stdin', a0_0x1248bb(0x8)));", "test_cases": [["3\n7 6 8", "2"], ["3\n12 15 18", "6"], ["2\n1000000000 1000000000", "1000000000"]], "original": "function gcd(arr) {\n    var f = (a, b) => b ? f(b, a % b) : a\n    var ans = arr[0]\n    for (var i = 1; i < arr.length; i++) {\n        ans = f(ans, arr[i]); \n    }\n    return ans \n}\n\nfunction getExcep(c) {\n\tvar min = Math.min(...c)\n\tvar max = Math.max(...c)\n\tvar mincount = 0\n\tvar maxcount = 0\n\tvar findValue = 0\n\tfor (var i = 0; i < c.length; i++) {\n\t\tif (c[i] === min) {\n\t\t\tmincount++\n\t\t}\n\t}\n\tif (mincount === 1) {\n\t\tfindValue = min\n\t} else {\n\t\tfindValue = max\n\t}\n\t// console.log(findValue)\n\tfor (var i = 0; i < c.length; i++) {\n\t\tif (c[i] === findValue) {\n\t\t\treturn i\n\t\t}\n\t}\n}\n\nfunction main(arg) {\n\targ = arg.trim().split(\"\\n\")\n\tvar N = Number(arg[0])\n\tvar A = arg[1].split(\" \").map(Number)\n\tvar c = new Array(A.length).fill(0)\n\tvar result = 0\n\tfor (var i = 0; i < A.length;i ++) {\n\t\tvar _A = A.slice()\n\t\t_A.splice(i, 1)\n\t\tvar n = gcd(_A)\n\t\tc[i] = n\n\t\t// console.log(_A)\n\t}\n\tvar idx = getExcep(c)\n\tA[idx] = A[idx+1]\n\n\tconsole.log(gcd(A))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03163_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var _0x25d8a7 = a0_0xfcab;\n    const lines = input[_0x25d8a7(0x0)]('\\x0a');\n    const NW = lines['shift']()[_0x25d8a7(0x0)]('\\x20')[_0x25d8a7(0x1)](x => parseInt(x));\n    const N = NW[0x0];\n    const W = NW[0x1];\n    const items = lines[_0x25d8a7(0x1)](line => line[_0x25d8a7(0x0)]('\\x20')[_0x25d8a7(0x1)](x => parseInt(x)));\n    dp = [];\n    for (var i = 0x0; i < W + 0x1; i++) {\n        if (_0x25d8a7(0x2) !== _0x25d8a7(0x2)) {\n            dp[w][i + 0x1] = Math[_0x25d8a7(0x3)](dp[w][i], dp[w - weight][i] + value);\n        } else {\n            dp[_0x25d8a7(0x4)](Array(N + 0x1)['fill'](0x0));\n        }\n    }\n    var result = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        for (var w = 0x0; w <= W; w++) {\n            var weight = items[i][0x0];\n            var value = items[i][0x1];\n            if (weight <= w) {\n                if (_0x25d8a7(0x5) === 'ZwsiJ') {\n                    dp[w][i + 0x1] = Math[_0x25d8a7(0x3)](dp[w][i], dp[w - weight][i] + value);\n                } else {\n                    dp[w][i + 0x1] = dp[w][i];\n                }\n            } else {\n                if (_0x25d8a7(0x6) === _0x25d8a7(0x7)) {\n                    dp['push'](Array(N + 0x1)[_0x25d8a7(0x8)](0x0));\n                } else {\n                    dp[w][i + 0x1] = dp[w][i];\n                }\n            }\n            if (dp[w][i + 0x1] > result) {\n                result = dp[w][i + 0x1];\n            }\n        }\n    }\n    console[_0x25d8a7(0x9)](result);\n}\nfunction a0_0xfcab(otcPjB, key) {\n    var stringArray = a0_0x44ab();\n    a0_0xfcab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xfcab(otcPjB, key);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction a0_0x44ab() {\n    var _0x42d2e7 = [\n        'split',\n        'map',\n        'gDort',\n        'max',\n        'push',\n        'ZwsiJ',\n        'VfyFS',\n        'xKfvQ',\n        'fill',\n        'log'\n    ];\n    a0_0x44ab = function () {\n        return _0x42d2e7;\n    };\n    return a0_0x44ab();\n}", "test_cases": [["3 8\n3 30\n4 50\n5 60", "90"], ["5 5\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000", "5000000000"], ["6 15\n6 5\n5 6\n6 4\n6 6\n3 5\n7 2", "17"]], "original": "//他人のソース\nfunction main(input){\n  const lines = input.split('\\n');\n  const NW = lines.shift().split(' ').map(x => parseInt(x));\n  const N = NW[0]\n  const W = NW[1]\n  const items = lines.map(line => line.split(' ').map(x => parseInt(x)) );\n\n//console.log(N);\n//console.log(W);\n//console.log(items);\n\n  dp = []\n  for(var i=0;i<W+1;i++){\n    dp.push( Array(N+1).fill(0) );\n  }\n\n  var result = 0;\n  for(var i=0;i<N;i++){\n    for(var w=0;w<=W;w++){\n\n      var weight = items[i][0]\n      var value = items[i][1]\n\n      if(weight <= w){\n        dp[w][i+1] = Math.max(dp[w][i], dp[w-weight][i] + value);\n      }else{\n        dp[w][i+1] = dp[w][i];\n      }\n\n      if(dp[w][i+1] > result){result = dp[w][i+1];}\n\n    }\n  }\n\n//  const result = Math.max( ...dp.map(arr => Math.max(...arr)) )\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03208_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x15528c = a0_0x250a;\nfunction a0_0xe8f2() {\n    const _0x32c3e9 = [\n        'split',\n        'slice',\n        'map',\n        'sort',\n        'push',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xe8f2 = function () {\n        return _0x32c3e9;\n    };\n    return a0_0xe8f2();\n}\nfunction a0_0x250a(KrISzR, key) {\n    const stringArray = a0_0xe8f2();\n    a0_0x250a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x250a(KrISzR, key);\n}\nfunction main(arg) {\n    const _0x2a25d9 = a0_0x250a;\n    const inputs = arg[_0x2a25d9(0x0)]('\\x0a');\n    const N = parseInt(inputs[0x0][_0x2a25d9(0x0)]('\\x20')[0x0]);\n    const K = parseInt(inputs[0x0][_0x2a25d9(0x0)]('\\x20')[0x1]);\n    const list = inputs[_0x2a25d9(0x1)](0x1, N + 0x1)[_0x2a25d9(0x2)](x => parseInt(x))[_0x2a25d9(0x3)]((a, b) => {\n        return a - b;\n    });\n    let i, sa = [];\n    for (i = 0x0; i < N - K + 0x1; ++i)\n        sa[_0x2a25d9(0x4)](list[i + K - 0x1] - list[i]);\n    console[_0x2a25d9(0x5)](Math['min'](...sa));\n}\nmain(require('fs')[a0_0x15528c(0x6)](a0_0x15528c(0x7), a0_0x15528c(0x8)));", "test_cases": [["5 3\n10\n15\n11\n14\n12", "2"], ["5 3\n5\n7\n5\n7\n7", "0"]], "original": "\"use strict\";\nfunction main(arg) {\n    const inputs = arg.split(\"\\n\")\n    const N = parseInt(inputs[0].split(\" \")[0])\n    const K = parseInt(inputs[0].split(\" \")[1])\n    const list = inputs.slice(1,N+1).map((x)=>parseInt(x)).sort((a,b)=>{return a-b})\n    let i, sa = []\n    for(i=0; i<N-K+1; ++i)\n        sa.push(list[i+K-1] - list[i])\n    console.log(Math.min(...sa))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03211_1", "type": "JavaScript", "obfuscated": "var a0_0x1c005b = a0_0x4658;\nvar GET = (function () {\n    var _0x19d832 = a0_0x4658;\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        var _0x2e0d97 = a0_0x4658;\n        this['_s'] = s['trim']()[_0x2e0d97(0x0)]('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g[_0x19d832(0x1)]['a'] = function (f) {\n        var _0x425c24 = a0_0x4658;\n        var s = this['_s'], y = this['_y'], r;\n        if (typeof s[y] === _0x425c24(0x2))\n            s[y] = s[y][_0x425c24(0x0)]('\\x20')[_0x425c24(0x3)]();\n        r = s[y][_0x425c24(0x4)]();\n        if (!s[y][_0x425c24(0x5)])\n            this['_y']++;\n        return f ? r : +r;\n    };\n    g['prototype']['l'] = function (f) {\n        var _0x2730bc = a0_0x4658;\n        var s = this['_s'][this['_y']++][_0x2730bc(0x0)]('\\x20');\n        return f ? s : s[_0x2730bc(0x6)](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var _0x91d590 = a0_0x4658;\n        var r = this['_s'][_0x91d590(0x7)](this['_y'], this['_y'] += n)[_0x91d590(0x6)](a => a[_0x91d590(0x0)]('\\x20'));\n        return f ? r : r[_0x91d590(0x6)](a => a[_0x91d590(0x6)](a => +a));\n    };\n    g[_0x19d832(0x1)]['r'] = function (n, f) {\n        var _0xfebbe7 = a0_0x4658;\n        if ('hWIee' !== 'hWIee') {\n            return new g(s);\n        } else {\n            var r = this['_s'][_0xfebbe7(0x7)](this['_y'], this['_y'] += n);\n            return f ? r : r[_0xfebbe7(0x6)](a => +a);\n        }\n    };\n    return f;\n}());\nfunction a0_0x4658(xrwuSf, key) {\n    var stringArray = a0_0x124b();\n    a0_0x4658 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4658(xrwuSf, key);\n}\nfunction a0_0x124b() {\n    var _0x5e0215 = [\n        'split',\n        'prototype',\n        'string',\n        'reverse',\n        'pop',\n        'length',\n        'map',\n        'slice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'WuuwX',\n        'abs'\n    ];\n    a0_0x124b = function () {\n        return _0x5e0215;\n    };\n    return a0_0x124b();\n}\nvar o = GET(require('fs')[a0_0x1c005b(0x8)](a0_0x1c005b(0x9), a0_0x1c005b(0xa)));\nconsole[a0_0x1c005b(0xb)](main());\nfunction main() {\n    var _0x543085 = a0_0x4658;\n    var s = o['a'](0x1);\n    var ans = 0x3e7;\n    for (var i = 0x2; i < s[_0x543085(0x5)]; i++) {\n        if (_0x543085(0xc) !== _0x543085(0xc)) {\n            var t = s[i - 0x2] + s[i - 0x1] + s[i];\n            t = Math[_0x543085(0xd)](t - 0x2f1);\n            if (ans > t)\n                ans = t;\n        } else {\n            var t = s[i - 0x2] + s[i - 0x1] + s[i];\n            t = Math[_0x543085(0xd)](t - 0x2f1);\n            if (ans > t)\n                ans = t;\n        }\n    }\n    return ans;\n}", "test_cases": [["1234567876", "34"], ["35753", "0"], ["1111111111", "642"]], "original": "var GET = (function(){\n  function f(s){return new g(s);}\n  function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}\n  g.prototype.a = function(f){\n    var s = this._s, y = this._y, r;\n    if(typeof s[y] === \"string\")s[y]=s[y].split(\" \").reverse();\n    r = s[y].pop();\n    if(!s[y].length)this._y++;\n    return f?r:+r;\n  }\n  g.prototype.l = function(f){\n    var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);\n  }\n  g.prototype.m = function(n,f){\n    var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));\n    return f?r:r.map(a=>a.map(a=>+a));\n  }\n  g.prototype.r = function(n,f){\n    var r = this._s.slice(this._y,this._y+=n);\n    return f?r:r.map(a=>+a);\n  }\n  return f;\n})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var s = o.a(1);\n  var ans = 999;\n  for(var i = 2; i < s.length; i++){\n    var t = s[i-2] + s[i-1] + s[i];\n    t = Math.abs(t - 753);\n    if(ans > t)ans = t;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03242_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x29bb() {\n    const _0x414aa9 = [\n        'split',\n        'log',\n        'map',\n        'reduce',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x29bb = function () {\n        return _0x414aa9;\n    };\n    return a0_0x29bb();\n}\nconst a0_0x1a6534 = a0_0x1503;\nfunction a0_0x1503(AaGTPQ, key) {\n    const stringArray = a0_0x29bb();\n    a0_0x1503 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1503(AaGTPQ, key);\n}\nconst main = input => {\n    const _0x3b04e1 = a0_0x1503;\n    let n = input[0x0][_0x3b04e1(0x0)]('');\n    console[_0x3b04e1(0x1)](n[_0x3b04e1(0x2)](val => val == '9' ? 0x1 + '' : 0x9 + '')[_0x3b04e1(0x3)]((acc, cur) => acc + cur));\n};\nmain(require('fs')[a0_0x1a6534(0x4)](a0_0x1a6534(0x5), 'utf8')[a0_0x1a6534(0x0)]('\\x0a'));", "test_cases": [["119", "991"], ["999", "111"]], "original": "'use strict';\nconst main = input => {\n  let n = input[0].split('');\n  console.log(n.map(val => val=='9'?1+'':9+'').reduce((acc, cur) => acc+cur));\n  \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));", "language": "JavaScript"}
{"filename": "p03243_1", "type": "JavaScript", "obfuscated": "var a0_0x297dab = a0_0x595d;\nfunction a0_0x2736() {\n    var _0xbc3272 = [\n        'length',\n        'jsFcm',\n        'VpPhX',\n        'rpCij',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2736 = function () {\n        return _0xbc3272;\n    };\n    return a0_0x2736();\n}\nfunction a0_0x595d(ubWzWh, key) {\n    var stringArray = a0_0x2736();\n    a0_0x595d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x595d(ubWzWh, key);\n}\nfunction myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var _0x1a17f8 = a0_0x595d;\n    input = parseInt(input['trim']());\n    var check = [\n        0x0,\n        0x6f,\n        0xde,\n        0x14d,\n        0x1bc,\n        0x22b,\n        0x29a,\n        0x309,\n        0x378,\n        0x3e7\n    ];\n    for (var i = 0x0; i < check[_0x1a17f8(0x0)] - 0x1; i++) {\n        if (_0x1a17f8(0x1) !== _0x1a17f8(0x2)) {\n            if (check[i] < input && check[i + 0x1] > input) {\n                myout(check[i + 0x1]);\n                return;\n            } else if (check[i] == input) {\n                if ('nxOdY' !== _0x1a17f8(0x3)) {\n                    myout(check[i]);\n                    return;\n                } else {\n                    myout(check[i + 0x1]);\n                    return;\n                }\n            }\n        } else {\n            myout(check[i]);\n            return;\n        }\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x297dab(0x4), a0_0x297dab(0x5)));", "test_cases": [["111", "111"], ["112", "222"], ["750", "777"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input.trim());\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var check = [000,111,222,333,444,555,666,777,888,999];\n  for(var i = 0; i < check.length - 1; i++){\n    if(check[i] < input && check[i + 1] > input){\n       myout(check[i + 1]);\n      return;\n       }else if(check[i] == input){\n             myout(check[i]);\n      return;   \n                }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03273_1", "type": "JavaScript", "obfuscated": "function a0_0x1b9d(GNOfZx, key) {\n    const stringArray = a0_0x2da5();\n    a0_0x1b9d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b9d(GNOfZx, key);\n}\nconst a0_0x119e1c = a0_0x1b9d;\nfunction main(input) {\n    const _0x187299 = a0_0x1b9d;\n    input = input['split'](/\\s/);\n    let h = parseInt(input[0x0]);\n    let w = parseInt(input[0x1]);\n    let mp = [];\n    for (let i = 0x2; i < 0x2 + h; i++)\n        mp[_0x187299(0x0)](input[i]);\n    function check(x, y) {\n        let res = 0x0;\n        for (let i = 0x0; i < h; i++)\n            if (mp[i][x] == '#') {\n                res++;\n                break;\n            }\n        for (let j = 0x0; j < w; j++)\n            if (mp[y][j] == '#') {\n                res++;\n                break;\n            }\n        return res == 0x2;\n    }\n    for (let i = 0x0; i < h; i++) {\n        ans = '';\n        for (let j = 0x0; j < w; j++)\n            if (check(j, i))\n                ans = ans + mp[i][j];\n        if (ans != '')\n            console[_0x187299(0x1)](ans);\n    }\n}\nfunction a0_0x2da5() {\n    const _0x4b7f8e = [\n        'push',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2da5 = function () {\n        return _0x4b7f8e;\n    };\n    return a0_0x2da5();\n}\nmain(require('fs')[a0_0x119e1c(0x2)]('/dev/stdin', a0_0x119e1c(0x3)));", "test_cases": [["4 4\n##.#\n....\n##.#\n.#.#", "###\n###\n.##"], ["3 3\n#..\n.#.\n..#", "#..\n.#.\n..#"], ["4 5\n.....\n.....\n..#..\n.....", "#"], ["7 6\n......\n....#.\n.#....\n..#...\n..#...\n......\n.#..#.", "..#\n#..\n.#.\n.#.\n#.#"]], "original": "\nfunction main(input){\n    input = input.split(/\\s/);\n    let h = parseInt(input[0]);\n    let w = parseInt(input[1]);\n    let mp = [];\n    for(let i = 2; i < 2 + h; i++) mp.push(input[i]);\n\n    function check(x, y){\n\tlet res = 0;\n\tfor(let i = 0;i < h;i++)\n\t    if(mp[i][x] == '#') {\n\t\tres++;\n\t\tbreak;\n\t    }\n\n\tfor(let j = 0;j < w;j++)\n\t    if(mp[y][j] == '#') {\n\t\tres++;\n\t\tbreak;\n\t    }\n\treturn res == 2;\n    }\n\n    for(let i = 0; i < h;i++){\n\tans = ''\n\tfor(let j = 0; j < w;j++)\n\t    if( check(j, i) ) ans = ans + mp[i][j];\n\tif(ans != '') console.log(ans);\n    }\n    \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03282_1", "type": "JavaScript", "obfuscated": "function a0_0x1587(neDPMa, key) {\n    const stringArray = a0_0x3b58();\n    a0_0x1587 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1587(neDPMa, key);\n}\nconst a0_0x2903e9 = a0_0x1587;\nfunction a0_0x3b58() {\n    const _0xb8e9ff = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3b58 = function () {\n        return _0xb8e9ff;\n    };\n    return a0_0x3b58();\n}\nfunction main(input) {\n    const _0xfebb5f = a0_0x1587;\n    const S = input['split']('\\x0a')[0x0][_0xfebb5f(0x0)]('');\n    const K = parseInt(input[_0xfebb5f(0x0)]('\\x0a')[0x0][_0xfebb5f(0x0)]('\\x20')[0x1]);\n    for (var i = 0x0; i < S['length']; i++) {\n        if (S[i] != '1') {\n            console[_0xfebb5f(0x1)](S[i]);\n            return;\n        }\n    }\n    console[_0xfebb5f(0x1)](0x1);\n}\nmain(require('fs')['readFileSync'](a0_0x2903e9(0x2), a0_0x2903e9(0x3)));", "test_cases": [["1214\n4", "2"], ["3\n157", "3"], ["299792458\n9460730472580800", "2"]], "original": "function main(input){\n  const S = input.split('\\n')[0].split('');\n  const K = parseInt(input.split('\\n')[0].split(' ')[1]);\n\n  for(var i=0;i<S.length;i++){\n    if(S[i]!='1'){\n      console.log(S[i]);\n      return;\n    }\n  }\n  console.log(1);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03317_1", "type": "JavaScript", "obfuscated": "var a0_0x4e1fe9 = a0_0x4ed8;\nfunction Main(input) {\n    var _0x1a8859 = a0_0x4ed8;\n    a = input[_0x1a8859(0x0)]('\\x0a');\n    b = a[0x0][_0x1a8859(0x0)]('\\x20')[_0x1a8859(0x1)](Number);\n    c = a[0x1][_0x1a8859(0x0)]('\\x20')[_0x1a8859(0x1)](Number);\n    N = b[0x0], K = b[0x1], r = 0x0;\n    while (c[_0x1a8859(0x2)] > 0x1) {\n        r++;\n        d = [];\n        for (i = 0x0; i < K; i++) {\n            d['push'](c[i]);\n        }\n        for (i = 0x0; i < K; i++) {\n            if (d[_0x1a8859(0x3)]()[0x0] !== c[i]) {\n                c[i] = '';\n            }\n        }\n        c = c[_0x1a8859(0x4)]('')['split']('')['map'](Number);\n    }\n    console[_0x1a8859(0x5)](r);\n}\nfunction a0_0x4ed8(pdNZtI, key) {\n    var stringArray = a0_0x1b39();\n    a0_0x4ed8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ed8(pdNZtI, key);\n}\nfunction a0_0x1b39() {\n    var _0x4f0327 = [\n        'split',\n        'map',\n        'length',\n        'sort',\n        'join',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1b39 = function () {\n        return _0x4f0327;\n    };\n    return a0_0x1b39();\n}\nMain(require('fs')[a0_0x4e1fe9(0x6)]('/dev/stdin', a0_0x4e1fe9(0x7)));", "test_cases": [["4 3\n2 3 1 4", "2"], ["3 3\n1 2 3", "1"], ["8 3\n7 3 1 8 4 6 2 5", "4"]], "original": "function Main(input) {\n\ta=input.split('\\n');\n\tb=a[0].split(' ').map(Number);\n\tc=a[1].split(' ').map(Number);\n\n\tN=b[0], K=b[1], r=0;\n\n\twhile(c.length>1){\n\t\tr++;\n\t\td=[];\n\t\tfor(i=0;i<K;i++){\n\t\t\td.push(c[i]);\n\t\t}\n\n\t\tfor(i=0;i<K;i++){\n\t\t\tif(d.sort()[0]!==c[i]){\n\t\t\t\tc[i]='';\n\t\t\t}\n\t\t}\n\n\t\tc=c.join('').split('').map(Number);\n\t}\n\n\tconsole.log(r);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03469_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x38e1d8 = a0_0x5caf;\nfunction Main(input) {\n    const _0x2d9b39 = a0_0x5caf;\n    const date = input[_0x2d9b39(0x0)]('\\x0a')[0x0]['replace'](/^.{4}/, 0x7e2);\n    console[_0x2d9b39(0x1)](date);\n}\nfunction a0_0xbf3b() {\n    const _0x27fd72 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xbf3b = function () {\n        return _0x27fd72;\n    };\n    return a0_0xbf3b();\n}\nfunction a0_0x5caf(kxwval, key) {\n    const stringArray = a0_0xbf3b();\n    a0_0x5caf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5caf(kxwval, key);\n}\nMain(require('fs')[a0_0x38e1d8(0x2)](a0_0x38e1d8(0x3), a0_0x38e1d8(0x4)));", "test_cases": [["2017/01/07", "2018/01/07"], ["2017/01/31", "2018/01/31"]], "original": "// https://atcoder.jp/contests/abc085/tasks/abc085_a\n\"use strict\"\nfunction Main(input) {\n  const date = input.split(`\\n`)[0].replace(/^.{4}/, 2018 );\n  console.log(date);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03502_1", "type": "JavaScript", "obfuscated": "function a0_0x4aa2(tONfQs, key) {\n    var stringArray = a0_0x175d();\n    a0_0x4aa2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4aa2(tONfQs, key);\n}\nvar a0_0x222462 = a0_0x4aa2;\nfunction Main(input) {\n    var _0x1c9a29 = a0_0x4aa2;\n    input = input[_0x1c9a29(0x0)]('\\x0a');\n    var N = parseInt(input[0x0], 0xa);\n    if (parseInt(N / 0xa) === 0x0) {\n        console[_0x1c9a29(0x1)](_0x1c9a29(0x2));\n        return;\n    }\n    var Sum = 0x0;\n    var Mod = N;\n    for (var i = 0x5f5e100; i >= 0xa; i = i / 0xa) {\n        Sum += parseInt(Mod / i);\n        Mod = Mod % i;\n    }\n    Sum += Mod;\n    if (N % Sum === 0x0) {\n        console[_0x1c9a29(0x1)](_0x1c9a29(0x2));\n    } else {\n        console[_0x1c9a29(0x1)]('No');\n    }\n}\nfunction a0_0x175d() {\n    var _0x2ff361 = [\n        'split',\n        'log',\n        'Yes',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x175d = function () {\n        return _0x2ff361;\n    };\n    return a0_0x175d();\n}\nMain(require('fs')[a0_0x222462(0x3)]('/dev/stdin', a0_0x222462(0x4)));", "test_cases": [["12", "Yes"], ["57", "No"], ["148", "No"]], "original": "    // inputに入力データ全体が入る\n    function Main(input) {\n    \tinput = input.split(\"\\n\");\n\n      var N = parseInt(input[0], 10);\n      \n      if (parseInt(N / 10) === 0){ // 1桁の時\n        console.log('Yes');\n        return;  \n      }\n\n      var Sum = 0;\n      var Mod = N; // 余り\n      for (var i = 100000000; i >= 10; i = i / 10){\n        Sum += parseInt(Mod / i);\n        Mod = Mod % i;\n        // console.log('%d', i);\n        // console.log('%d', Sum);\n        // console.log('%d', Mod);\n        // console.log('--');        \n      }\n      Sum += Mod;\n      // console.log('%d', Sum);\n      // console.log('%d', Mod);\n      // console.log('--');   \n\n      if( N % Sum === 0){\n      \tconsole.log('Yes');\n      }else{\n        console.log('No');\n      }\n    \n    }\n\n    Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03606_1", "type": "JavaScript", "obfuscated": "function a0_0x2421() {\n    var _0x2308a4 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x2421 = function () {\n        return _0x2308a4;\n    };\n    return a0_0x2421();\n}\nvar a0_0x5982c1 = a0_0xd5e6;\nfunction a0_0xd5e6(KebpOZ, key) {\n    var stringArray = a0_0x2421();\n    a0_0xd5e6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd5e6(KebpOZ, key);\n}\nMain(require('fs')[a0_0x5982c1(0x0)]('/dev/stdin', a0_0x5982c1(0x1)));\nfunction Main(args) {\n    var _0x199a2d = a0_0xd5e6;\n    input = args[_0x199a2d(0x2)]('\\x0a');\n    const N = parseInt(input[0x0]);\n    var tmp;\n    var result = 0x0;\n    for (var i = 0x1; i <= N; i++) {\n        tmp = input[i]['split']('\\x20');\n        result += parseInt(tmp[0x1]) - parseInt(tmp[0x0]) + 0x1;\n    }\n    console[_0x199a2d(0x3)](result);\n}", "test_cases": [["1\n24 30", "7"], ["2\n6 8\n3 3", "4"]], "original": "Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction Main(args){\n    input = args.split(\"\\n\");\n    const N = parseInt(input[0]);\n    var tmp;\n    var result = 0;\n    \n    for(var i=1; i<=N; i++){\n        tmp = input[i].split(\" \");\n        result += (parseInt(tmp[1]) - parseInt(tmp[0]) + 1);\n    }\n\n    console.log(result);\n}", "language": "JavaScript"}
{"filename": "p03835_1", "type": "JavaScript", "obfuscated": "function a0_0xa705(yGZSuF, key) {\n    const stringArray = a0_0x1f62();\n    a0_0xa705 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xa705(yGZSuF, key);\n}\nconst a0_0x1e1891 = a0_0xa705;\nfunction Main(input) {\n    const _0x191e9b = a0_0xa705;\n    let inputs = input[_0x191e9b(0x0)]('\\x20');\n    let K = Number(inputs[0x0]);\n    let S = Number(inputs[0x1]);\n    let count = 0x0;\n    for (let X = 0x0; X <= K; X++) {\n        for (let Y = 0x0; Y <= K; Y++) {\n            for (let Z = 0x0; Z <= K; Z++) {\n                if (X + Y + Z === S) {\n                    count++;\n                }\n            }\n        }\n    }\n    console['log'](count);\n}\nfunction a0_0x1f62() {\n    const _0x2f5e1c = [\n        'split',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1f62 = function () {\n        return _0x2f5e1c;\n    };\n    return a0_0x1f62();\n}\nMain(require('fs')[a0_0x1e1891(0x1)]('/dev/stdin', a0_0x1e1891(0x2)));", "test_cases": [["2 2", "6"], ["5 15", "1"]], "original": "function Main(input) {\n  let inputs = input.split(' ');\n  let K = Number(inputs[0]);\n  let S = Number(inputs[1]);\n  let count = 0;\n  for(let X = 0; X <= K; X++) {\n    for(let Y = 0; Y <= K; Y++) {\n      for(let Z = 0; Z <= K; Z++) {\n        if (X + Y + Z === S) {\n          count++;\n        }\n      }\n    }\n  }\n  console.log(count);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04030_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x13d796 = a0_0x3e7b;\nfunction a0_0x4465() {\n    const _0x17f9fa = [\n        'split',\n        'pop',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4465 = function () {\n        return _0x17f9fa;\n    };\n    return a0_0x4465();\n}\nfunction a0_0x3e7b(hMYTeU, key) {\n    const stringArray = a0_0x4465();\n    a0_0x3e7b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e7b(hMYTeU, key);\n}\nfunction Main(input) {\n    const _0x3bb952 = a0_0x3e7b;\n    const tape = input['split']('\\x0a')[0x0][_0x3bb952(0x0)]('');\n    const result = [];\n    for (const v of tape) {\n        if (v === 'B') {\n            result[_0x3bb952(0x1)]();\n        } else {\n            result[_0x3bb952(0x2)](v);\n        }\n    }\n    console['log'](result['join'](''));\n}\nMain(require('fs')[a0_0x13d796(0x3)](a0_0x13d796(0x4), a0_0x13d796(0x5)));", "test_cases": [["01B0", "00"], ["0BB1", "1"]], "original": "'use strict'\n\nfunction Main(input) {\n    const tape = input.split('\\n')[0].split('');\n    const result = []\n\n    for (const v of tape) {\n        if (v === 'B') {\n            result.pop();\n        } else {\n            result.push(v);\n        }\n    }\n\n    console.log(result.join(''));\n}\n\n// input\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02398_1", "type": "JavaScript", "obfuscated": "var a0_0x466d73 = a0_0x37a3;\nfunction a0_0x4b4d() {\n    var _0x5cd614 = [\n        'readFileSync',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x4b4d = function () {\n        return _0x5cd614;\n    };\n    return a0_0x4b4d();\n}\nvar abc = require('fs')[a0_0x466d73(0x0)]('/dev/stdin', 'utf8')[a0_0x466d73(0x1)]('\\x20')[a0_0x466d73(0x2)](Number);\nfunction a0_0x37a3(LmXmbJ, key) {\n    var stringArray = a0_0x4b4d();\n    a0_0x37a3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x37a3(LmXmbJ, key);\n}\nvar a = abc[0x0];\nvar b = abc[0x1];\nvar c = abc[0x2];\nvar i;\nvar result = 0x0;\nfor (i = a; i <= b; i++) {\n    if (c % i === 0x0) {\n        result++;\n    }\n}\nconsole[a0_0x466d73(0x3)](result);", "test_cases": [["5 14 80", "3"]], "original": "var abc = require('fs').readFileSync('/dev/stdin', 'utf8').split(' ').map(Number);\nvar a = abc[0];\nvar b = abc[1];\nvar c = abc[2];\n\nvar i;\nvar result = 0;\nfor (i = a; i <= b; i++) {\n  if (c % i === 0) {\n    result++;\n  }\n}\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02419_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x23b49c = a0_0x44b9;\nfunction a0_0x44b9(VSCQwY, key) {\n    var stringArray = a0_0x4c2f();\n    a0_0x44b9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x44b9(VSCQwY, key);\n}\nfunction a0_0x4c2f() {\n    var _0x4eeb23 = [\n        'toString',\n        'split',\n        'filter',\n        'length',\n        'toLowerCase',\n        'join',\n        'END_OF_TEXT',\n        'trim',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4c2f = function () {\n        return _0x4eeb23;\n    };\n    return a0_0x4c2f();\n}\n(function (stdin) {\n    var _0x5bf66c = a0_0x44b9;\n    var lines = stdin[_0x5bf66c(0x0)]()[_0x5bf66c(0x1)]('\\x0a');\n    var result = function (word, data) {\n        var _0x5982ec = a0_0x44b9;\n        return data[_0x5982ec(0x2)](function (v) {\n            return v === word;\n        })[_0x5982ec(0x3)];\n    }(lines['shift']()[_0x5bf66c(0x4)](), lines[_0x5bf66c(0x5)]('')[_0x5bf66c(0x1)](_0x5bf66c(0x6))[0x0][_0x5bf66c(0x4)]()[_0x5bf66c(0x7)]()[_0x5bf66c(0x1)]('\\x20'));\n    console[_0x5bf66c(0x8)](result);\n}(require('fs')[a0_0x23b49c(0x9)](a0_0x23b49c(0xa), a0_0x23b49c(0xb))));", "test_cases": [["computer\nNurtures computer scientists and highly-skilled computer engineers\nwho will create and exploit \"knowledge\" for the new era.\nProvides an outstanding computer environment.\nEND_OF_TEXT", "3"]], "original": "'use strict';\n(function(stdin) {\n  var lines = stdin.toString().split('\\n');\n\n  var result = (function(word,data) {\n    return data.filter(function(v) {\n      return v === word;\n    }).length;\n  }(\n    lines.shift().toLowerCase()\n    ,lines.join('').split('END_OF_TEXT')[0].toLowerCase().trim().split(' ')\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02572_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x296fce = a0_0x3450;\nfunction a0_0x3450(CmEpki, key) {\n    const stringArray = a0_0x2b10();\n    a0_0x3450 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3450(CmEpki, key);\n}\nfunction main(input) {\n    const _0x476c02 = a0_0x3450;\n    input = input[_0x476c02(0x0)]()[_0x476c02(0x1)]('\\x0a');\n    const N = Number(input[0x0]);\n    const line2_arr = input[0x1][_0x476c02(0x1)]('\\x20');\n    let ans = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        if (Number(line2_arr[i]) == 0x0)\n            continue;\n        for (let j = i + 0x1; j < N; j++) {\n            ans = ans + Number(line2_arr[i]) * Number(line2_arr[j]);\n        }\n    }\n    console[_0x476c02(0x2)](ans % 0x3b9aca07);\n}\nfunction numberSort(array) {\n    array['sort'](f);\n    return array;\n}\nvar f = function (a, b) {\n    return a - b;\n};\nmain(require('fs')[a0_0x296fce(0x3)](a0_0x296fce(0x4), a0_0x296fce(0x5)));\nfunction a0_0x2b10() {\n    const _0x3e136a = [\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x2b10 = function () {\n        return _0x3e136a;\n    };\n    return a0_0x2b10();\n}", "test_cases": [["3\n1 2 3", "11"], ["4\n141421356 17320508 22360679 244949", "437235829"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\"\\n\");\n  const N = Number(input[0]);\n  const line2_arr = input[1].split(\" \");\n  let ans = 0;\n  for (let i = 0; i < N; i++) {\n    if (Number(line2_arr[i]) == 0) continue;\n    for (let j = i + 1; j < N; j++) {\n      ans = ans + Number(line2_arr[i]) * Number(line2_arr[j]);\n      // console.log(ans);\n    }\n  }\n  console.log(ans % 1000000007);\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02621_1", "type": "JavaScript", "obfuscated": "const a0_0x276513 = a0_0x4041;\nconst input = require('fs')[a0_0x276513(0x0)](a0_0x276513(0x1), a0_0x276513(0x2));\nfunction a0_0x2ed1() {\n    const _0x2e518a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2ed1 = function () {\n        return _0x2e518a;\n    };\n    return a0_0x2ed1();\n}\nfunction a0_0x4041(jRrABd, key) {\n    const stringArray = a0_0x2ed1();\n    a0_0x4041 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4041(jRrABd, key);\n}\n(input => {\n    const a = input - 0x0;\n    console['log'](a + a * a + a * a * a);\n})(input);", "test_cases": [["2", "14"], ["10", "1110"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n\n    const a = input - 0\n\n    console.log(a + a * a + a * a * a)\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02640_1", "type": "JavaScript", "obfuscated": "const a0_0x548411 = a0_0x33de;\nconst input = require('fs')[a0_0x548411(0x0)](a0_0x548411(0x1), a0_0x548411(0x2))['split']('\\x0a');\nconst [X, Y] = input[0x0]['split']('\\x20')[a0_0x548411(0x3)](Number);\nlet ans = 'No';\nfunction a0_0xd668() {\n    const _0x632b87 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8',\n        'map',\n        'log'\n    ];\n    a0_0xd668 = function () {\n        return _0x632b87;\n    };\n    return a0_0xd668();\n}\nfunction a0_0x33de(JhVkAm, key) {\n    const stringArray = a0_0xd668();\n    a0_0x33de = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x33de(JhVkAm, key);\n}\nif (X < Y) {\n    const r = Y - X * 0x2;\n    if (r % 0x2 === 0x0 && r / 0x2 <= X)\n        ans = 'Yes';\n}\nconsole[a0_0x548411(0x4)](ans);", "test_cases": [["3 8", "Yes"], ["2 100", "No"], ["1 2", "Yes"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf-8').split('\\n')\nconst [X, Y] = input[0].split(' ').map(Number)\nlet ans = 'No'\nif (X < Y) {\n  const r = Y - X * 2\n  if (r % 2 === 0 && r / 2 <= X) ans = 'Yes'\n}\nconsole.log(ans)\n", "language": "JavaScript"}
{"filename": "p02641_1", "type": "JavaScript", "obfuscated": "const a0_0x39b16d = a0_0x2e72;\nfunction Main(input) {\n    const _0x30c3df = a0_0x2e72;\n    input = input[_0x30c3df(0x0)]('\\x0a');\n    let target = parseInt(input[0x0][_0x30c3df(0x0)]('\\x20')[0x0]);\n    let zerocheck = parseInt(input[0x0][_0x30c3df(0x0)]('\\x20')[0x1]);\n    if (zerocheck == 0x0) {\n        console['log'](target);\n    } else {\n        let str = input[0x1]['split']('\\x20');\n        for (let i = 0x0; i < str[_0x30c3df(0x1)]; i++) {\n            let num = parseInt(str[i]);\n            str[i] = target - num;\n        }\n        for (let ite = 0x1; ite <= 0x64; ite++) {\n            const isp = str[_0x30c3df(0x2)](ite);\n            const isn = str[_0x30c3df(0x2)](-ite);\n            if (isp == -0x1) {\n                console[_0x30c3df(0x3)](target - ite);\n                break;\n            }\n            if (isn == -0x1) {\n                console[_0x30c3df(0x3)](target + ite);\n                break;\n            }\n        }\n    }\n}\nfunction a0_0x3cc7() {\n    const _0x21a3e8 = [\n        'split',\n        'length',\n        'indexOf',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x3cc7 = function () {\n        return _0x21a3e8;\n    };\n    return a0_0x3cc7();\n}\nfunction a0_0x2e72(vdoJaX, key) {\n    const stringArray = a0_0x3cc7();\n    a0_0x2e72 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e72(vdoJaX, key);\n}\nMain(require('fs')['readFileSync'](a0_0x39b16d(0x4), 'utf8'));", "test_cases": [["6 5\n4 7 10 6 5", "8"], ["10 5\n4 7 10 6 5", "9"], ["100 0", "100"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  let target = parseInt(input[0].split(\" \")[0]);\n  let zerocheck = parseInt(input[0].split(\" \")[1]);\n  if (zerocheck == 0) {\n    console.log(target);\n  } else {\n    let str = input[1].split(\" \");\n    for (let i = 0; i < str.length; i++) {\n      let num = parseInt(str[i]);\n      str[i] = target - num;\n    }\n    for (let ite = 1; ite <= 100; ite++) {\n      const isp = str.indexOf(ite);//小さい方\n      const isn = str.indexOf(-ite);//大きい方\n      if (isp == -1) {\n        console.log(target - ite);\n        break;\n      }\n      if (isn == -1) {\n        console.log(target + ite);\n        break;\n      }\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02682_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x28698c = a0_0x18f5;\nfunction main(arg) {\n    const _0x231566 = a0_0x18f5;\n    let getInt = arg['trim']()[_0x231566(0x0)]('\\x20')[0x3];\n    let oneCount = arg[_0x231566(0x1)]()[_0x231566(0x0)]('\\x20')[0x0];\n    let zeroCnt = arg[_0x231566(0x1)]()[_0x231566(0x0)]('\\x20')[0x1];\n    let minusCnt = arg[_0x231566(0x1)]()['split']('\\x20')[0x2];\n    let result = 0x0;\n    if (oneCount == 0x0 && zeroCnt == 0x0 && minusCnt == 0x0) {\n        console[_0x231566(0x2)](0x0);\n        return;\n    }\n    if (getInt > 0x0) {\n        if (getInt > oneCount) {\n            if (_0x231566(0x3) === _0x231566(0x4)) {\n                getInt = getInt - zeroCnt;\n            } else {\n                result = oneCount * 0x1;\n            }\n        } else {\n            result = getInt * 0x1;\n        }\n        getInt = getInt - oneCount;\n    }\n    if (getInt > 0x0) {\n        if (_0x231566(0x5) === _0x231566(0x5)) {\n            getInt = getInt - zeroCnt;\n        } else {\n            result = oneCount * 0x1;\n        }\n    }\n    if (getInt > 0x0) {\n        if (_0x231566(0x6) === _0x231566(0x6)) {\n            result = result + getInt * -0x1;\n        } else {\n            console['log'](0x0);\n            return;\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')[a0_0x28698c(0x7)](a0_0x28698c(0x8), a0_0x28698c(0x9)));\nfunction a0_0x18f5(HcQmrJ, key) {\n    const stringArray = a0_0x419c();\n    a0_0x18f5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x18f5(HcQmrJ, key);\n}\nfunction a0_0x419c() {\n    const _0x20cb7e = [\n        'split',\n        'trim',\n        'log',\n        'pDHJZ',\n        'tCpEl',\n        'RgjgC',\n        'yYqxO',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x419c = function () {\n        return _0x20cb7e;\n    };\n    return a0_0x419c();\n}", "test_cases": [["2 1 1 3", "2"], ["1 2 3 4", "0"], ["2000000000 0 0 2000000000", "2000000000"]], "original": "\"use strict\"\nfunction main(arg) {\n    let getInt = arg.trim().split(\" \")[3];\n    let oneCount = arg.trim().split(\" \")[0];\n    let zeroCnt = arg.trim().split(\" \")[1];\n    let minusCnt = arg.trim().split(\" \")[2];\n\n    let result = 0;\n\n    if(oneCount == 0 && zeroCnt == 0 && minusCnt == 0){\n        console.log(0);\n        return;\n    }\n\n    if(getInt > 0){\n        \n        if(getInt > oneCount){\n            result = oneCount * 1;   \n        }else{\n            result = getInt * 1;\n        }\n        getInt = getInt - oneCount;\n    }\n\n    if(getInt > 0){\n        getInt = getInt - zeroCnt;\n    }\n\n    if(getInt > 0){\n        result = result + (getInt * - 1);\n    }\n\n    console.log(result);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02753_1", "type": "JavaScript", "obfuscated": "'use strict;';\nfunction a0_0x4e53(hbpffM, key) {\n    const stringArray = a0_0x5524();\n    a0_0x4e53 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e53(hbpffM, key);\n}\nfunction a0_0x5524() {\n    const _0x1acb73 = [\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'trim',\n        'split',\n        'log',\n        'Yes'\n    ];\n    a0_0x5524 = function () {\n        return _0x1acb73;\n    };\n    return a0_0x5524();\n}\nconst a0_0x379913 = a0_0x4e53;\nmain(require('fs')[a0_0x379913(0x0)](a0_0x379913(0x1), a0_0x379913(0x2))[a0_0x379913(0x3)]()[a0_0x379913(0x4)]('\\x0a'));\nfunction main(input) {\n    const _0x447c6a = a0_0x4e53;\n    input = input[0x0][_0x447c6a(0x4)]('');\n    let num = 0x2;\n    let isSame = !![];\n    while (num > 0x0) {\n        if (input[num] !== input[0x0]) {\n            isSame = ![];\n            break;\n        }\n        num--;\n    }\n    console[_0x447c6a(0x5)](isSame ? 'No' : _0x447c6a(0x6));\n}", "test_cases": [["ABA", "Yes"], ["BBA", "Yes"], ["BBB", "No"]], "original": "\"use strict;\";\nmain(\n  require(\"fs\")\n    .readFileSync(\"/dev/stdin\", \"UTF-8\")\n    .trim()\n    .split(\"\\n\")\n);\nfunction main(input) {\n  input = input[0].split(\"\");\n  let num = 2;\n  let isSame = true;\n  while (num > 0) {\n    if (input[num] !== input[0]) {\n      isSame = false;\n      break;\n    }\n    num--;\n  }\n  console.log(isSame ? \"No\" : \"Yes\");\n}\n", "language": "JavaScript"}
{"filename": "p02765_1", "type": "JavaScript", "obfuscated": "var a0_0x2f3459 = a0_0x3269;\nfunction a0_0x3269(DaEsOG, key) {\n    var stringArray = a0_0xedc8();\n    a0_0x3269 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3269(DaEsOG, key);\n}\nfunction main(input) {\n    var _0x3101ba = a0_0x3269;\n    var marginDelete = input['trim']();\n    var args = marginDelete[_0x3101ba(0x0)]('\\x20');\n    var n = parseInt(args[0x0], 0xa);\n    var r = parseInt(args[0x1], 0xa);\n    var hiddenRating;\n    if (n >= 0xa) {\n        hiddenRating = r;\n    } else {\n        var argument = 0x64 * (0xa - n);\n        hiddenRating = r + argument;\n    }\n    return hiddenRating;\n}\nfunction a0_0xedc8() {\n    var _0x3bb26b = [\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xedc8 = function () {\n        return _0x3bb26b;\n    };\n    return a0_0xedc8();\n}\nconsole['log'](main(require('fs')[a0_0x2f3459(0x1)](a0_0x2f3459(0x2), a0_0x2f3459(0x3))));", "test_cases": [["2 2919", "3719"], ["22 3051", "3051"]], "original": "function main(input) {\n  var marginDelete = input.trim();\n  var args = marginDelete.split(' ');\n  var n = parseInt(args[0], 10);\n  var r = parseInt(args[1], 10);\n  var hiddenRating;\n  if ( n >= 10) {\n    hiddenRating = r;\n  } else {\n    var argument = 100*(10 - n);\n    hiddenRating = r + argument;\n  }\n  return hiddenRating;\n}\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02785_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1af2() {\n    const _0x546d25 = [\n        'split',\n        'sort',\n        'splice',\n        'length',\n        'reduce',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1af2 = function () {\n        return _0x546d25;\n    };\n    return a0_0x1af2();\n}\nfunction a0_0xa6e8(hjzamL, key) {\n    const stringArray = a0_0x1af2();\n    a0_0xa6e8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xa6e8(hjzamL, key);\n}\nconst a0_0x5aaf8e = a0_0xa6e8;\nfunction main(input) {\n    const _0x39ca3c = a0_0xa6e8;\n    const args = input[_0x39ca3c(0x0)]('\\x0a'), K = parseInt(args[0x0]['split']('\\x20')[0x1]), H = args[0x1][_0x39ca3c(0x0)]('\\x20');\n    var ans = H[_0x39ca3c(0x1)]()[_0x39ca3c(0x2)](0x0, H[_0x39ca3c(0x3)] - K)[_0x39ca3c(0x4)]((a, x) => a + parseInt(x), 0x0);\n    console[_0x39ca3c(0x5)](ans);\n}\nmain(require('fs')[a0_0x5aaf8e(0x6)]('/dev/stdin', a0_0x5aaf8e(0x7)));", "test_cases": [["3 1\n4 1 5", "5"], ["8 9\n7 9 3 2 3 8 4 6", "0"], ["3 0\n1000000000 1000000000 1000000000", "3000000000"]], "original": "'use strict';\n\nfunction main(input) {\n  const args = input.split('\\n'),\n        K = parseInt(args[0].split(' ')[1]),\n        H = args[1].split(' ');\n  var ans = H.sort().splice(0, H.length-K).reduce((a, x) => a + parseInt(x), 0);\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02831_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0xb17c(WDfDdJ, key) {\n    const stringArray = a0_0x2046();\n    a0_0xb17c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xb17c(WDfDdJ, key);\n}\nconst a0_0x945529 = a0_0xb17c;\nconst Main = input => {\n    const _0xc6bfad = a0_0xb17c;\n    let xs = input[_0xc6bfad(0x0)]()['split']('\\x20')[_0xc6bfad(0x1)](v => parseInt(v, 0xa));\n    let m = xs[0x0];\n    let n = xs[0x1];\n    let r = 0x0;\n    let d = 0x0;\n    let x = m;\n    let y = n;\n    if (m >= n) {\n        while (n > 0x0) {\n            let r = m % n;\n            m = n;\n            n = r;\n        }\n        d = m;\n    } else {\n        while (m > 0x0) {\n            r = n % m;\n            n = m;\n            m = r;\n        }\n        d = n;\n    }\n    let ans = x * y / d;\n    console[_0xc6bfad(0x2)](ans);\n};\nMain(require('fs')[a0_0x945529(0x3)](a0_0x945529(0x4), a0_0x945529(0x5)));\nfunction a0_0x2046() {\n    const _0x3a39d9 = [\n        'trim',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2046 = function () {\n        return _0x3a39d9;\n    };\n    return a0_0x2046();\n}", "test_cases": [["2 3", "6"], ["123 456", "18696"], ["100000 99999", "9999900000"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split(' ').map(v=>parseInt(v,10));\n   let m = xs[0];\n   let n = xs[1];\n   let r = 0;\n   let d = 0;\n   let x = m;\n   let y = n;\n   if(m >= n) {\n        \twhile (n > 0) {\n        \t\tlet r = m % n; \n        \t\tm = n;     \n        \t\tn = r;     \n        \t}\n        \td = m;\n        }else{ \n        \twhile (m > 0) {\n        \t\tr = n % m; \n        \t\tn = m;     \n        \t\tm = r;     \n        \t}\n        \td = n;\n        }\n        let ans = x*y/d;\n        console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02836_1", "type": "JavaScript", "obfuscated": "function a0_0x1533(OhsTQx, key) {\n    var stringArray = a0_0x2ea9();\n    a0_0x1533 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1533(OhsTQx, key);\n}\nfunction a0_0x2ea9() {\n    var _0x2ac0c2 = [\n        'split',\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2ea9 = function () {\n        return _0x2ac0c2;\n    };\n    return a0_0x2ea9();\n}\nvar a0_0x5517f2 = a0_0x1533;\nfunction Main(input) {\n    var _0x30b407 = a0_0x1533;\n    input = input[_0x30b407(0x0)]('\\x0a');\n    T = input[0x0];\n    var len = T['length'];\n    var p = len % 0x2;\n    q = Math[_0x30b407(0x1)](len / 0x2);\n    cnt = 0x0;\n    i = 0x0;\n    for (i = 0x0; i < q; i++) {\n        if (T['substr'](i, 0x1) == T['substr'](len - 0x1 - i, 0x1)) {\n            cnt = cnt + 0x0;\n        } else {\n            cnt++;\n        }\n    }\n    console['log'](cnt);\n}\nMain(require('fs')[a0_0x5517f2(0x2)](a0_0x5517f2(0x3), a0_0x5517f2(0x4)));", "test_cases": [["redcoder", "1"], ["vvvvvv", "0"], ["abcdabc", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n    input = input.split(\"\\n\");\n    T = input[0];\n  // console.log(T);\n   \n    var len = T.length;\n  //console.log(len);\n var p = len%2;q = Math.floor(len/2);cnt=0;i=0;\n// console.log (p,q);\n //console.log(T.substr(i,1));\n// console.log(T.substr(len-1,1));\n  \n\t  for(i = 0;i<q;i++)\n\t  {if (T.substr(i,1)==T.substr(len-1-i,1)){cnt=cnt+0;}\n\t  else{cnt++;}\n\t\t  \n\t  }\n\t  console.log(cnt);\n\t\n\n\t\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02881_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x41d551 = a0_0x13d2;\nfunction a0_0x13d2(ErINuQ, key) {\n    const stringArray = a0_0x3fe6();\n    a0_0x13d2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13d2(ErINuQ, key);\n}\nfunction main(input) {\n    const _0xc2570 = a0_0x13d2;\n    const N = parseInt(input);\n    let distance = N - 0x1;\n    for (let a = 0x2; a <= Math[_0xc2570(0x0)](N); ++a) {\n        let b = N / a;\n        if (Number[_0xc2570(0x1)](b) && a + b - 0x2 < distance) {\n            distance = a + b - 0x2;\n        }\n    }\n    console[_0xc2570(0x2)](distance);\n}\nmain(require('fs')['readFileSync'](a0_0x41d551(0x3), a0_0x41d551(0x4)));\nfunction a0_0x3fe6() {\n    const _0x554cea = [\n        'sqrt',\n        'isInteger',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3fe6 = function () {\n        return _0x554cea;\n    };\n    return a0_0x3fe6();\n}", "test_cases": [["10", "5"], ["50", "13"], ["10000000019", "10000000018"]], "original": "'use strict';\nfunction main(input) {\n  const N = parseInt(input);\n  let distance = N - 1;\n  for (let a = 2; a <= Math.sqrt(N); ++a) {\n    let b = N / a;\n    if (Number.isInteger(b) && a+b-2 < distance) {\n      distance = a+b-2;\n    }\n  }\n  console.log(distance);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03013_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3b4c(WxnBbe, key) {\n    const stringArray = a0_0x3b94();\n    a0_0x3b4c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b4c(WxnBbe, key);\n}\nconst a0_0x33b040 = a0_0x3b4c;\nconst main = arg => {\n    const _0x2d474f = a0_0x3b4c;\n    arg = arg[_0x2d474f(0x0)]()['split']('\\x0a');\n    const N = parseInt(arg[0x0][_0x2d474f(0x1)]('\\x20')[0x0]);\n    const M = parseInt(arg[0x0][_0x2d474f(0x1)]('\\x20')[0x1]);\n    const dangers = arg[_0x2d474f(0x2)](0x1, M + 0x1);\n    let answer = [...Array(N + 0x1)][_0x2d474f(0x3)](0x1);\n    let broken = -0x1;\n    let NG = ![];\n    for (let i in dangers) {\n        if (broken + 0x1 === dangers[i]) {\n            NG = !![];\n        }\n        answer[dangers[i]] = 0x0;\n        broken = dangers[i];\n    }\n    for (let i = 0x2; i <= N; i++) {\n        answer[i] = answer[i] * (answer[i - 0x2] + answer[i - 0x1]) % 0x3b9aca07;\n    }\n    console['log'](answer[N]);\n};\nfunction a0_0x3b94() {\n    const _0x3e09fd = [\n        'trim',\n        'split',\n        'slice',\n        'fill',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3b94 = function () {\n        return _0x3e09fd;\n    };\n    return a0_0x3b94();\n}\nmain(require('fs')[a0_0x33b040(0x4)](a0_0x33b040(0x5), 'utf8'));", "test_cases": [["6 1\n3", "4"], ["10 2\n4\n5", "0"], ["100 5\n1\n23\n45\n67\n89", "608200469"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const M = parseInt(arg[0].split(\" \")[1]);\n    \n    const dangers = arg.slice(1, M + 1);\n    \n    let answer = [...Array(N + 1)].fill(1);\n    let broken = -1;\n    let NG     = false;\n    \n    for(let i in dangers) {\n        if(broken + 1 === dangers[i]) {\n            NG = true;\n        }\n        \n        answer[dangers[i]] = 0;\n        broken = dangers[i];\n    }\n    \n    for(let i=2; i<=N; i++) {\n        answer[i] = answer[i] * (answer[i - 2] + answer[i - 1]) % 1000000007;\n    }\n    \n    console.log(answer[N]);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03078_1", "type": "JavaScript", "obfuscated": "var a0_0x21a9eb = a0_0x43a7;\nconst main = input => {\n    var _0x324832 = a0_0x43a7;\n    var K = input[_0x324832(0x0)]()[_0x324832(0x1)]('\\x0a')[0x0][_0x324832(0x1)]('\\x20')[0x3];\n    var x = input[_0x324832(0x0)]()['split']('\\x0a')[0x0][_0x324832(0x1)]('\\x20')[0x0];\n    var y = input[_0x324832(0x0)]()['split']('\\x0a')[0x0][_0x324832(0x1)]('\\x20')[0x1];\n    var z = input['trim']()[_0x324832(0x1)]('\\x0a')[0x0][_0x324832(0x1)]('\\x20')[0x2];\n    var a = input[_0x324832(0x0)]()[_0x324832(0x1)]('\\x0a')[0x1][_0x324832(0x1)]('\\x20')['sort']((a, b) => b - a)[_0x324832(0x2)](v => v - 0x0);\n    var b = input[_0x324832(0x0)]()[_0x324832(0x1)]('\\x0a')[0x2][_0x324832(0x1)]('\\x20')[_0x324832(0x3)]((a, b) => b - a)[_0x324832(0x2)](v => v - 0x0);\n    var c = input['trim']()[_0x324832(0x1)]('\\x0a')[0x3][_0x324832(0x1)]('\\x20')[_0x324832(0x3)]((a, b) => b - a)[_0x324832(0x2)](v => v - 0x0);\n    var anss = [];\n    var idxa = 0x0, idxb = 0x0, idxc = 0x0;\n    var min = 0x0;\n    for (var i = 0x0; i < x; i++) {\n        for (var j = 0x0; j < y; j++) {\n            for (var k = 0x0; k < z; k++) {\n                if (i * j * k > K)\n                    break;\n                var sum = a[i] + b[j] + c[k];\n                anss[_0x324832(0x4)](sum);\n            }\n        }\n    }\n    console['log'](anss['sort']((a, b) => b - a)[_0x324832(0x5)]((v, i) => i < K)[_0x324832(0x6)]('\\x0a'));\n};\nmain(require('fs')[a0_0x21a9eb(0x7)]('/dev/stdin', a0_0x21a9eb(0x8)));\nfunction a0_0x43a7(ioiGwi, key) {\n    var stringArray = a0_0x2bb2();\n    a0_0x43a7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x43a7(ioiGwi, key);\n}\nfunction a0_0x2bb2() {\n    var _0x14e816 = [\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'push',\n        'filter',\n        'join',\n        'readFileSync',\n        'UTF-8'\n    ];\n    a0_0x2bb2 = function () {\n        return _0x14e816;\n    };\n    return a0_0x2bb2();\n}", "test_cases": [["2 2 2 8\n4 6\n1 5\n3 8", "19\n17\n15\n14\n13\n12\n10\n8"], ["3 3 3 5\n1 10 100\n2 20 200\n1 10 100", "400\n310\n310\n301\n301"], ["10 10 10 20\n7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488\n1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338\n4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736", "23379871545\n22444657051\n22302177772\n22095691512\n21667941469\n21366963278\n21287912315\n21279176669\n21160477018\n21085311041\n21059876163\n21017997739\n20703329561\n20702387965\n20590247696\n20383761436\n20343962175\n20254073196\n20210218542\n20150096547"]], "original": "const main = (input) => {\n  var K = input.trim().split(\"\\n\")[0].split(\" \")[3];\n  var x = input.trim().split(\"\\n\")[0].split(\" \")[0];\n  var y = input.trim().split(\"\\n\")[0].split(\" \")[1];\n  var z = input.trim().split(\"\\n\")[0].split(\" \")[2];\n\n  var a = input.trim().split(\"\\n\")[1].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var b = input.trim().split(\"\\n\")[2].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var c = input.trim().split(\"\\n\")[3].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var anss = [];\n  var idxa=0,idxb=0,idxc=0;\n  var min = 0;\n  for(var i=0;i<x;i++){\n    for(var j=0;j<y;j++){\n      for(var k=0;k<z;k++){\n        if(i*j*k > K) break;\n        var sum = a[i]+b[j]+c[k];\n        anss.push(sum);\n      }\n    }\n  }\n  console.log(anss.sort((a,b)=>b-a).filter((v,i)=>i<K).join(\"\\n\"));\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));\n", "language": "JavaScript"}
{"filename": "p03095_1", "type": "JavaScript", "obfuscated": "var a0_0xeef070 = a0_0x15b7;\nfunction roop(depth, A, end) {\n    var _0xcf5158 = a0_0x15b7;\n    var ans = 0x0, i = 0x0;\n    if (depth < end) {\n        for (i = depth; i < end; i++) {\n            if ('MLWnl' === _0xcf5158(0x0)) {\n                ans += roop(i + 0x1, A, end);\n            } else {\n                return A[depth];\n            }\n        }\n        return A[depth] + A[depth] * ans;\n    } else {\n        if (_0xcf5158(0x1) !== _0xcf5158(0x1)) {\n            var ans = 0x0, i = 0x0;\n            if (depth < end) {\n                for (i = depth; i < end; i++) {\n                    ans += roop(i + 0x1, A, end);\n                }\n                return A[depth] + A[depth] * ans;\n            } else {\n                return A[depth];\n            }\n        } else {\n            return A[depth];\n        }\n    }\n}\nfunction a0_0x5dd9() {\n    var _0x2ed81a = [\n        'MLWnl',\n        'dwrxg',\n        'split',\n        'IWUMo',\n        'FHgHP',\n        'aHQDY',\n        'laorA',\n        'EEGVi',\n        'push',\n        'GpOXK',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5dd9 = function () {\n        return _0x2ed81a;\n    };\n    return a0_0x5dd9();\n}\nfunction main(input) {\n    var _0x2d818e = a0_0x15b7;\n    var i, j, A, B, ans = 0x0, count = 0x0;\n    var inputs = input[_0x2d818e(0x2)]('\\x0a');\n    var arg = Number(inputs[0x0]);\n    var str = inputs[0x1]['split']('');\n    A = {};\n    for (i = 0x0; i < arg; ++i) {\n        if (_0x2d818e(0x3) === _0x2d818e(0x4)) {\n            ans += roop(i + 0x1, A, end);\n        } else {\n            if (A[str[i]]) {\n                if (_0x2d818e(0x5) !== 'wenCA') {\n                    A[str[i]]++;\n                } else {\n                    for (i = depth; i < end; i++) {\n                        ans += roop(i + 0x1, A, end);\n                    }\n                    return A[depth] + A[depth] * ans;\n                }\n            } else {\n                if (_0x2d818e(0x6) === _0x2d818e(0x7)) {\n                    A[str[i]] = 0x1;\n                    count++;\n                } else {\n                    A[str[i]] = 0x1;\n                    count++;\n                }\n            }\n        }\n    }\n    B = [];\n    for (key in A) {\n        B[_0x2d818e(0x8)](A[key]);\n    }\n    for (i = 0x0; i < count; ++i) {\n        if (_0x2d818e(0x9) === 'BjPkT') {\n            A[str[i]]++;\n        } else {\n            ans += roop(i, B, count - 0x1);\n        }\n    }\n    ans = Math['round'](ans);\n    console[_0x2d818e(0xa)](ans % 0x3b9aca07);\n}\nfunction a0_0x15b7(foDJTP, key) {\n    var stringArray = a0_0x5dd9();\n    a0_0x15b7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15b7(foDJTP, key);\n}\nmain(require('fs')[a0_0xeef070(0xb)](a0_0xeef070(0xc), a0_0xeef070(0xd)));", "test_cases": [["4\nabcd", "15"], ["3\nbaa", "5"], ["5\nabcab", "17"]], "original": "function roop(depth, A, end){\n    var ans=0, i=0\n    if (depth < end){\n        for (i=depth;i<end;i++){\n            ans+=roop(i+1, A, end)\n        }\n        return A[depth] + A[depth] * ans\n    }else{\n        return A[depth]\n    }\n}\n\nfunction main(input) {\n    var i, j, A, B, ans=0, count=0\n    var inputs = input.split(\"\\n\")\n    var arg = Number(inputs[0])\n    var str = inputs[1].split(\"\")\n    //A=new Array(arg[0])\n    A={}\n    for (i=0;i<arg;++i){\n        if (A[str[i]]){\n            A[str[i]]++\n        }else{\n            A[str[i]]=1\n            count++\n        }\n    }\n    B=[]\n    for(key in A){\n        B.push(A[key])\n    }\n    for(i=0;i<count;++i){\n        ans+=roop(i, B, count-1)\n    }\n    ans=Math.round(ans)\n    console.log(ans%(1000000007))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03102_1", "type": "JavaScript", "obfuscated": "function a0_0x4c80(Toinne, key) {\n    var stringArray = a0_0x4e74();\n    a0_0x4c80 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c80(Toinne, key);\n}\nvar a0_0x2d7c55 = a0_0x4c80;\nfunction Main(input) {\n    var _0x992865 = a0_0x4c80;\n    input = input[_0x992865(0x0)]('\\x0a');\n    tmp0 = input[0x0][_0x992865(0x0)]('\\x20');\n    N = Number(tmp0[0x0]);\n    M = Number(tmp0[0x1]);\n    C = Number(tmp0[0x2]);\n    B = input[0x1][_0x992865(0x0)]('\\x20');\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        A = input[0x2 + i][_0x992865(0x0)]('\\x20');\n        var tmpSum = 0x0;\n        for (var j = 0x0; j < M; j++) {\n            tmpSum += Number(A[j]) * Number(B[j]);\n        }\n        if (tmpSum + C > 0x0) {\n            ans++;\n        }\n    }\n    console[_0x992865(0x1)](ans);\n}\nfunction a0_0x4e74() {\n    var _0xdb00c0 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4e74 = function () {\n        return _0xdb00c0;\n    };\n    return a0_0x4e74();\n}\nMain(require('fs')[a0_0x2d7c55(0x2)](a0_0x2d7c55(0x3), a0_0x2d7c55(0x4)));", "test_cases": [["2 3 -10\n1 2 3\n3 2 1\n1 2 2", "1"], ["5 2 -4\n-2 5\n100 41\n100 40\n-3 0\n-6 -2\n18 -13", "2"], ["3 3 0\n100 -100 0\n0 100 100\n100 100 100\n-100 100 100", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\")\n  tmp0 = input[0].split(\" \")\n  N = Number(tmp0[0])\n  M = Number(tmp0[1])\n  C = Number(tmp0[2])\n  B = input[1].split(\" \")\n\n  var ans = 0;\n  for(var i = 0; i < N; i++)\n  {\n    A = input[2 + i].split(\" \")\n    var tmpSum = 0\n    for(var j = 0; j < M; j++)\n    {\n      tmpSum += Number(A[j]) * Number(B[j])\n    }\n    if( (tmpSum+ C) > 0){\n      ans++;\n    }\n\n  }\n  console.log(ans)\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main(\"3 2\\n2 1\\n\")", "language": "JavaScript"}
{"filename": "p03146_1", "type": "JavaScript", "obfuscated": "const a0_0x54493c = a0_0x237b;\nfunction a0_0x237b(ZmDZsc, key) {\n    const stringArray = a0_0x4347();\n    a0_0x237b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x237b(ZmDZsc, key);\n}\nfunction a0_0x4347() {\n    const _0x1062da = [\n        'BpCgG',\n        'PeHAG',\n        'trim',\n        'split',\n        'MkbHn',\n        'log',\n        'acnfG',\n        'UgRCL',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4347 = function () {\n        return _0x1062da;\n    };\n    return a0_0x4347();\n}\nconst collatz = n => {\n    const _0x398456 = a0_0x237b;\n    if (n % 0x2 === 0x0) {\n        if (_0x398456(0x0) === _0x398456(0x1)) {\n            n /= 0x2;\n        } else {\n            n /= 0x2;\n        }\n    } else {\n        n = 0x3 * n + 0x1;\n    }\n    return n;\n};\nconst main = stdin => {\n    const _0x1f2492 = a0_0x237b;\n    const input = stdin[_0x1f2492(0x2)]()[_0x1f2492(0x3)]('\\x0a');\n    const s = parseInt(input[0x0]);\n    if (s === 0x1 || s === 0x2 || s === 0x4) {\n        if ('KmdQr' !== _0x1f2492(0x4)) {\n            console[_0x1f2492(0x5)](0x4);\n            return;\n        } else {\n            first = i;\n        }\n    }\n    let tmp = s;\n    let first = 0x0;\n    let second = 0x0;\n    for (let i = 0x1;; i++) {\n        if ('UrVJF' === 'UrVJF') {\n            if (tmp === 0x4 && first === 0x0) {\n                if (_0x1f2492(0x6) !== _0x1f2492(0x6)) {\n                    if (n % 0x2 === 0x0) {\n                        n /= 0x2;\n                    } else {\n                        n = 0x3 * n + 0x1;\n                    }\n                    return n;\n                } else {\n                    first = i;\n                }\n            } else if (tmp === 0x4 && first !== 0x0) {\n                if (_0x1f2492(0x7) !== 'MWwLm') {\n                    second = i;\n                    break;\n                } else {\n                    console[_0x1f2492(0x5)](0x4);\n                    return;\n                }\n            }\n            tmp = collatz(tmp);\n        } else {\n            n = 0x3 * n + 0x1;\n        }\n    }\n    console[_0x1f2492(0x5)](second);\n};\nmain(require('fs')[a0_0x54493c(0x8)](a0_0x54493c(0x9), a0_0x54493c(0xa)));", "test_cases": [["8", "5"], ["7", "18"], ["54", "114"]], "original": "const collatz = (n) => {\n  if (n % 2 === 0) {\n    n /= 2\n  } else {\n    n = 3 * n + 1\n  }\n\n  return n\n}\n\nconst main = stdin => {\n  const input = stdin.trim().split('\\n')\n  const s = parseInt(input[0])\n\n  if (s === 1 || s === 2 || s === 4) {\n    console.log(4)\n    return\n  }\n\n  let tmp = s\n  let first = 0\n  let second = 0\n  for (let i = 1; ; i++) {\n    if (tmp === 4 && first === 0) {\n      first = i\n    } else if (tmp === 4 && first !== 0) {\n      second = i\n      break\n    }\n    tmp = collatz(tmp)\n  }\n\n  console.log(second)\n}\n// 標準入力\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03252_1", "type": "JavaScript", "obfuscated": "var a0_0x429df4 = a0_0x3b6f;\nfunction Main(input) {\n    var _0x4afc3b = a0_0x3b6f;\n    input = input['split']('\\x0a');\n    var S = input[0x0];\n    var T = input[0x1];\n    var ans = 'Yes';\n    while (T['length'] != 0x0) {\n        for (i = 0x1; i < T[_0x4afc3b(0x0)]; i++) {\n            if (T['substr'](0x0, 0x1) == T[_0x4afc3b(0x1)](i, 0x1)) {\n                if (S[_0x4afc3b(0x1)](0x0, 0x1) != S[_0x4afc3b(0x1)](i, 0x1)) {\n                    ans = 'No';\n                    break;\n                }\n            }\n            if (S[_0x4afc3b(0x1)](0x0, 0x1) == S[_0x4afc3b(0x1)](i, 0x1)) {\n                if (T[_0x4afc3b(0x1)](0x0, 0x1) != T['substr'](i, 0x1)) {\n                    ans = 'No';\n                    break;\n                }\n            }\n        }\n        if (ans == 'No') {\n            break;\n        }\n        S = S[_0x4afc3b(0x1)](0x1);\n        T = T[_0x4afc3b(0x1)](0x1);\n    }\n    console['log']('%s', ans);\n}\nfunction a0_0x47e7() {\n    var _0xab35aa = [\n        'length',\n        'substr',\n        'getElementById',\n        'value',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x47e7 = function () {\n        return _0xab35aa;\n    };\n    return a0_0x47e7();\n}\nfunction a0_0x3b6f(HzerMD, key) {\n    var stringArray = a0_0x47e7();\n    a0_0x3b6f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b6f(HzerMD, key);\n}\nfunction debug() {\n    var _0x3531ee = a0_0x3b6f;\n    var input = document[_0x3531ee(0x2)]('input')[_0x3531ee(0x3)];\n    Main(input);\n}\nMain(require('fs')['readFileSync'](a0_0x429df4(0x4), a0_0x429df4(0x5)));", "test_cases": [["azzel\napple", "Yes"], ["chokudai\nredcoder", "No"], ["abcdefghijklmnopqrstuvwxyz\nibyhqfrekavclxjstdwgpzmonu", "Yes"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var S = input[0];\n  var T = input[1];\n  var ans=\"Yes\";\n  while(T.length!=0){\n    for(i=1;i<T.length;i++){\n      if(T.substr(0,1)==T.substr(i,1)){\n        if(S.substr(0,1)!=S.substr(i,1)){\n          ans=\"No\";\n          break;\n        }\n      }\n      if(S.substr(0,1)==S.substr(i,1)){\n        if(T.substr(0,1)!=T.substr(i,1)){\n          ans=\"No\";\n          break;\n        }\n      }\n    }\n    if(ans==\"No\"){\n      break;\n    }\n    S=S.substr(1);\n    T=T.substr(1);\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03272_1", "type": "JavaScript", "obfuscated": "var a0_0x2256a1 = a0_0x1ae1;\nfunction a0_0x1ae1(pUrXJQ, key) {\n    var stringArray = a0_0x5142();\n    a0_0x1ae1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ae1(pUrXJQ, key);\n}\nfunction a0_0x5142() {\n    var _0x7e271a = [\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x5142 = function () {\n        return _0x7e271a;\n    };\n    return a0_0x5142();\n}\na = require('fs')[a0_0x2256a1(0x0)]('/dev/stdin', a0_0x2256a1(0x1))['match'](/\\d+/g);\nconsole['log'](a[0x0] - a[0x1] + 0x1);", "test_cases": [["4 2", "3"], ["1 1", "1"], ["15 11", "5"]], "original": "a=require('fs').readFileSync('/dev/stdin','utf8').match(/\\d+/g);console.log(a[0]-a[1]+1)", "language": "JavaScript"}
{"filename": "p03280_1", "type": "JavaScript", "obfuscated": "var a0_0x22d6f5 = a0_0x35e5;\ninp = require('fs')[a0_0x22d6f5(0x0)]('/dev/stdin', a0_0x22d6f5(0x1))[a0_0x22d6f5(0x2)]('\\x0a');\nl = inp[a0_0x22d6f5(0x3)]()[a0_0x22d6f5(0x2)]('\\x20');\nfunction a0_0x35e5(DMOVGv, key) {\n    var stringArray = a0_0x5d27();\n    a0_0x35e5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x35e5(DMOVGv, key);\n}\nA = l[0x0] * 0x1 - 0x1;\nfunction a0_0x5d27() {\n    var _0x32a2a4 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x5d27 = function () {\n        return _0x32a2a4;\n    };\n    return a0_0x5d27();\n}\nB = l[0x1] * 0x1 - 0x1;\nconsole[a0_0x22d6f5(0x4)](A * B);", "test_cases": [["2 2", "1"], ["5 7", "24"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nA = l[0] * 1 - 1\nB = l[1] * 1 - 1\nconsole.log(A * B)", "language": "JavaScript"}
{"filename": "p03472_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5eb1(HepPln, key) {\n    const stringArray = a0_0x1de3();\n    a0_0x5eb1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5eb1(HepPln, key);\n}\nconst a0_0xa7b62 = a0_0x5eb1;\nconst main = arg => {\n    const _0x94962b = a0_0x5eb1;\n    arg = arg[_0x94962b(0x0)]()[_0x94962b(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0][_0x94962b(0x1)]('\\x20')[0x0]);\n    let H = parseInt(arg[0x0][_0x94962b(0x1)]('\\x20')[0x1]);\n    let ab = arg['slice'](0x1, N + 0x1)[_0x94962b(0x2)](n => n[_0x94962b(0x1)]('\\x20')[_0x94962b(0x2)](l => parseInt(l)));\n    ab[_0x94962b(0x3)]((a, b) => b[0x0] - a[0x0]);\n    const aMax = ab[0x0][0x0];\n    ab = ab[_0x94962b(0x3)]((a, b) => b[0x1] - a[0x1])[_0x94962b(0x4)](n => n[0x1] > aMax);\n    let damage = 0x0;\n    let throwAttack = 0x0;\n    for (let i in ab) {\n        H -= ab[i][0x1];\n        throwAttack++;\n        if (H <= 0x0) {\n            console['log'](throwAttack);\n            return;\n        }\n    }\n    const directAttack = Math['ceil'](H / aMax);\n    console['log'](throwAttack + directAttack);\n};\nmain(require('fs')[a0_0xa7b62(0x5)](a0_0xa7b62(0x6), a0_0xa7b62(0x7)));\nfunction a0_0x1de3() {\n    const _0x2b4c4b = [\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'filter',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1de3 = function () {\n        return _0x2b4c4b;\n    };\n    return a0_0x1de3();\n}", "test_cases": [["1 10\n3 5", "3"], ["2 10\n3 5\n2 6", "2"], ["4 1000000000\n1 1\n1 10000000\n1 30000000\n1 99999999", "860000004"], ["5 500\n35 44\n28 83\n46 62\n31 79\n40 43", "9"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N  = parseInt(arg[0].split(\" \")[0]);\n    let H  = parseInt(arg[0].split(\" \")[1]);\n    let ab = arg.slice(1, N + 1).map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    ab.sort((a,b)=>b[0] - a[0]);\n    \n    const aMax = ab[0][0];\n    \n    ab = ab.sort((a,b)=>b[1] - a[1]).filter(n=>n[1] > aMax);\n\n    let damage = 0;\n    let throwAttack = 0;\n    \n    for(let i in ab) {\n        H -= ab[i][1];\n        throwAttack++;\n        \n        if(H <= 0) {\n            console.log(throwAttack);\n            return;\n        }\n    }\n    \n    const directAttack = Math.ceil(H / aMax);\n    \n    console.log(throwAttack + directAttack);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03695_1", "type": "JavaScript", "obfuscated": "var a0_0x42ada5 = a0_0x4dc3;\nfunction a0_0x4dc3(vJukgy, key) {\n    var stringArray = a0_0x1d37();\n    a0_0x4dc3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4dc3(vJukgy, key);\n}\nprocess[a0_0x42ada5(0x0)][a0_0x42ada5(0x1)]();\nprocess[a0_0x42ada5(0x0)][a0_0x42ada5(0x2)](a0_0x42ada5(0x3));\nvar g_input = '';\nprocess[a0_0x42ada5(0x0)]['on']('data', function (chunk) {\n    g_input += chunk;\n});\nprocess[a0_0x42ada5(0x0)]['on']('end', function () {\n    var _0x45c8e6 = a0_0x4dc3;\n    main(g_input[_0x45c8e6(0x4)](/\\r?\\n/));\n});\nfunction main(inputs) {\n    var _0x51fd9c = a0_0x4dc3;\n    var N = parseInt(inputs[0x0]);\n    var rs = inputs[0x1][_0x51fd9c(0x4)]('\\x20')[_0x51fd9c(0x5)](function (a) {\n        return parseInt(a);\n    });\n    var a = new Array(0x7)['fill'](![]);\n    var a8 = 0x0;\n    var count = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        for (var j = 0x0; j < 0x9; j++) {\n            if (j != 0x8) {\n                if (rs[i] < (j + 0x1) * 0x190) {\n                    if (!a[j]) {\n                        if (_0x51fd9c(0x6) !== _0x51fd9c(0x7)) {\n                            a[j] = !![];\n                            count += 0x1;\n                        } else {\n                            min = 0x1;\n                            if (a8 > 0x0) {\n                                a8 -= 0x1;\n                            }\n                        }\n                    }\n                    break;\n                }\n            } else {\n                if (_0x51fd9c(0x8) !== _0x51fd9c(0x9)) {\n                    a8 += 0x1;\n                } else {\n                    a8 += 0x1;\n                }\n            }\n        }\n    }\n    var min = count;\n    if (min == 0x0 && N > 0x0) {\n        if ('OEwJT' !== 'OEwJT') {\n            main(g_input['split'](/\\r?\\n/));\n        } else {\n            min = 0x1;\n            if (a8 > 0x0) {\n                a8 -= 0x1;\n            }\n        }\n    }\n    var max = Math[_0x51fd9c(0xa)](0x8, min + a8);\n    console[_0x51fd9c(0xb)]('' + min + '\\x20' + max);\n}\nfunction a0_0x1d37() {\n    var _0x4c8709 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'split',\n        'map',\n        'mNvxz',\n        'yaicC',\n        'QKsnT',\n        'dNuUJ',\n        'min',\n        'log'\n    ];\n    a0_0x1d37 = function () {\n        return _0x4c8709;\n    };\n    return a0_0x1d37();\n}", "test_cases": [["4\n2100 2500 2700 2700", "2 2"], ["5\n1100 1900 2800 3200 3200", "3 5"], ["20\n800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990", "1 1"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\nprocess.stdin.on('end', function() {\n    main(g_input.split(/\\r?\\n/));\n});\n\nfunction main(inputs) {\n  var N = parseInt(inputs[0]);\n  var rs = inputs[1].split(\" \").map(function(a){return parseInt(a);});\n  var a = new Array(7).fill(false);\n  var a8 = 0;\n  var count = 0;\n  for(var i = 0; i < N; i++){\n    for(var j = 0; j < 9; j++){\n      if(j != 8){\n        if(rs[i] < (j+1)*400){\n          if(!a[j]){\n            a[j] = true;\n            count += 1;\n          }\n          break;\n        }\n      }else{\n        a8 += 1;\n      }\n    }\n  }\n  var min = count;\n  if(min == 0 && N>0){\n    min = 1;\n    if(a8>0){\n      a8 -=1;\n    }\n  }\n  var max = Math.min(8, min + a8);\n  console.log(\"\"+min+\" \"+max);\n}\n", "language": "JavaScript"}
{"filename": "p03777_1", "type": "JavaScript", "obfuscated": "var a0_0x4982bd = a0_0x3dbc;\nfunction a0_0x3dbc(ktXVAm, key) {\n    var stringArray = a0_0x5bc7();\n    a0_0x3dbc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3dbc(ktXVAm, key);\n}\nfunction Main(input) {\n    var _0x32b977 = a0_0x3dbc;\n    input = input[_0x32b977(0x0)]('\\x20');\n    var a = String(input[0x0]);\n    var b = String(input[0x1]);\n    if (a === 'H' && b === 'H' || a === 'D' && b === 'D') {\n        console[_0x32b977(0x1)]('H');\n    } else {\n        console[_0x32b977(0x1)]('D');\n    }\n}\nMain(require('fs')[a0_0x4982bd(0x2)](a0_0x4982bd(0x3), a0_0x4982bd(0x4)));\nfunction a0_0x5bc7() {\n    var _0x1a541d = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5bc7 = function () {\n        return _0x1a541d;\n    };\n    return a0_0x5bc7();\n}", "test_cases": [["H H", "H"], ["D H", "D"], ["D D", "H"]], "original": "function Main(input){\n  input = input.split(' ');\n  var a = String(input[0]);\n  var b = String(input[1]);\n\n  if( a === 'H' && b === 'H' || a === 'D' && b === 'D') {\n      console.log('H');\n  } else {\n    console.log('D');\n\n\n}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03854_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4f4404 = a0_0x1450;\nfunction Main(input) {\n    const _0x3cc101 = a0_0x1450;\n    const arr = [\n        _0x3cc101(0x0),\n        'dreamer',\n        _0x3cc101(0x1),\n        _0x3cc101(0x2)\n    ];\n    for (let i in arr) {\n        arr[i] = reverse(arr[i]);\n    }\n    input = reverse(input);\n    while (input[_0x3cc101(0x3)] > 0x0) {\n        let flag = ![];\n        for (let s of arr) {\n            if ('bBBrZ' === _0x3cc101(0x4)) {\n                arr[i] = reverse(arr[i]);\n            } else {\n                if (input['slice'](0x0, s[_0x3cc101(0x3)]) == s) {\n                    input = input['substr'](s['length']);\n                    flag = !![];\n                }\n            }\n        }\n        if (flag == ![])\n            break;\n    }\n    if (input['length'] <= 0x0) {\n        console[_0x3cc101(0x5)](_0x3cc101(0x6));\n    } else {\n        if (_0x3cc101(0x7) === _0x3cc101(0x8)) {\n            if (input['slice'](0x0, s[_0x3cc101(0x3)]) == s) {\n                input = input[_0x3cc101(0x9)](s[_0x3cc101(0x3)]);\n                flag = !![];\n            }\n        } else {\n            console['log']('NO');\n        }\n    }\n}\nfunction a0_0x1e38() {\n    const _0x2bb93c = [\n        'dream',\n        'erase',\n        'eraser',\n        'length',\n        'DAQAK',\n        'log',\n        'YES',\n        'Jboni',\n        'mdPjo',\n        'substr',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x1e38 = function () {\n        return _0x2bb93c;\n    };\n    return a0_0x1e38();\n}\nfunction reverse(str) {\n    const _0x42faf2 = a0_0x1450;\n    return str['split']('')['reverse']()[_0x42faf2(0xa)]('');\n}\nfunction a0_0x1450(yXwQCt, key) {\n    const stringArray = a0_0x1e38();\n    a0_0x1450 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1450(yXwQCt, key);\n}\nMain(require('fs')[a0_0x4f4404(0xb)](a0_0x4f4404(0xc), a0_0x4f4404(0xd)));", "test_cases": [["erasedream", "YES"], ["dreameraser", "YES"], ["dreamerer", "NO"]], "original": "\"use strict\";\nfunction Main(input) {\n  const arr = [\"dream\", \"dreamer\", \"erase\", \"eraser\"];\n\n  for (let i in arr) {\n    arr[i] = reverse(arr[i]);\n  }\n  input = reverse(input);\n  while (input.length > 0) {\n    let flag = false;\n    for (let s of arr) {\n      // console.log(\n      //   `input: ${input.slice(0, s.length)}, s: ${s}, length: ${s.length}`\n      // );\n      if (input.slice(0, s.length) == s) {\n        input = input.substr(s.length);\n        flag = true;\n      }\n    }\n    if (flag == false) break;\n  }\n  if (input.length <= 0) {\n    console.log(\"YES\");\n  } else {\n    console.log(\"NO\");\n  }\n}\n\nfunction reverse(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02265_1", "type": "JavaScript", "obfuscated": "const a0_0x5a132d = a0_0x3423;\nconst config = {\n    'input': a0_0x5a132d(0x0),\n    'newline': '\\x0a'\n};\nconst line = require('fs')['readFileSync'](config['input'], a0_0x5a132d(0x1))[a0_0x5a132d(0x2)](config[a0_0x5a132d(0x3)]);\nfunction a0_0x5821() {\n    const _0x4d02da = [\n        '/dev/stdin',\n        'utf-8',\n        'split',\n        'newline',\n        'unshift',\n        'length',\n        'pop',\n        'slice',\n        'reduce',\n        'insert',\n        'delete',\n        'deleteFirst',\n        'deleteLast',\n        'toString',\n        'join',\n        'log'\n    ];\n    a0_0x5821 = function () {\n        return _0x4d02da;\n    };\n    return a0_0x5821();\n}\nconst insert = (arr, x) => arr[a0_0x5a132d(0x4)](x);\nconst del = (arr, x) => {\n    const _0x58eaa7 = a0_0x3423;\n    for (var i = 0x0; i < arr[_0x58eaa7(0x5)]; i++) {\n        if (x === arr[i])\n            break;\n    }\n    if (i !== arr[_0x58eaa7(0x5)])\n        arr['splice'](i, 0x1);\n};\nconst delFirst = arr => arr['shift']();\nfunction a0_0x3423(nAjskh, key) {\n    const stringArray = a0_0x5821();\n    a0_0x3423 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3423(nAjskh, key);\n}\nconst delLast = arr => arr[a0_0x5a132d(0x6)]();\nconst cmds = line[a0_0x5a132d(0x7)](0x1);\nconst ans = cmds[a0_0x5a132d(0x8)]((acc, x) => {\n    const _0x19fa82 = a0_0x3423;\n    const cmd = x[_0x19fa82(0x2)]('\\x20');\n    switch (cmd[0x0]) {\n    case _0x19fa82(0x9):\n        insert(acc, parseInt(cmd[0x1]));\n        break;\n    case _0x19fa82(0xa):\n        del(acc, parseInt(cmd[0x1]));\n        break;\n    case _0x19fa82(0xb):\n        delFirst(acc);\n        break;\n    case _0x19fa82(0xc):\n        delLast(acc);\n        break;\n    }\n    return acc;\n}, [])['map'](x => x[a0_0x5a132d(0xd)]())[a0_0x5a132d(0xe)]('\\x20');\nconsole[a0_0x5a132d(0xf)](ans);", "test_cases": [["7\ninsert 5\ninsert 2\ninsert 3\ninsert 1\ndelete 3\ninsert 6\ndelete 5", "6 1 2"], ["9\ninsert 5\ninsert 2\ninsert 3\ninsert 1\ndelete 3\ninsert 6\ndelete 5\ndeleteFirst\ndeleteLast", "1"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nconst insert = (arr, x) => arr.unshift(x);\nconst del = (arr, x) => {\n    for (var i = 0; i < arr.length; i++) {\n        if (x === arr[i]) break;\n    }\n    if (i !== arr.length) arr.splice(i, 1);\n};\nconst delFirst = arr => arr.shift();\nconst delLast = arr => arr.pop();\n\nconst cmds = line.slice(1);\nconst ans = cmds.reduce((acc, x) => {\n    const cmd = x.split(' ');\n    switch (cmd[0]) {\n        case 'insert':\n            insert(acc, parseInt(cmd[1]));\n            break;\n        case 'delete':\n            del(acc, parseInt(cmd[1]));\n            break;\n        case 'deleteFirst':\n            delFirst(acc);\n            break;\n        case 'deleteLast':\n            delLast(acc);\n            break;\n    }\n\n    return acc;\n}, []).map(x => x.toString()).join(' ');\n\nconsole.log(ans);\n\n", "language": "JavaScript"}
{"filename": "p02413_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x264340 = a0_0x627c;\nfunction a0_0x627c(ZMqzkl, key) {\n    var stringArray = a0_0xf268();\n    a0_0x627c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x627c(ZMqzkl, key);\n}\nfunction a0_0xf268() {\n    var _0x13efc5 = [\n        'shift',\n        'map',\n        'sGvdB',\n        'push',\n        'join',\n        'replace',\n        'split',\n        'trim',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0xf268 = function () {\n        return _0x13efc5;\n    };\n    return a0_0xf268();\n}\n(function (stdin) {\n    var _0x3d40a9 = a0_0x627c;\n    function sumLine(a, b) {\n        return a + b;\n    }\n    function result(matrix) {\n        var _0x354b7c = a0_0x627c;\n        if ('nKGhL' === 'nKGhL') {\n            var size = matrix[_0x354b7c(0x0)]();\n            matrix[_0x354b7c(0x1)](function (v) {\n                var _0x1652f6 = a0_0x627c;\n                if (_0x1652f6(0x2) === 'HmRCl') {\n                    return a + b;\n                } else {\n                    return v[_0x1652f6(0x3)](v['reduce'](sumLine));\n                }\n            });\n            var sumColumn = [];\n            for (var i = 0x0; i < size[0x1] + 0x1; i++) {\n                var sumValue = 0x0;\n                for (var j = 0x0; j < size[0x0]; j++) {\n                    sumValue += matrix[j][i];\n                }\n                sumColumn[_0x354b7c(0x3)](sumValue);\n            }\n            matrix[_0x354b7c(0x3)](sumColumn);\n            return matrix[_0x354b7c(0x4)]('\\x0a')[_0x354b7c(0x5)](/,/g, '\\x20');\n        } else {\n            return v[_0x354b7c(0x6)]('\\x20')['map'](Number);\n        }\n    }\n    var inputs = stdin['toString']()[_0x3d40a9(0x7)]()['split']('\\x0a');\n    var sheet = inputs[_0x3d40a9(0x1)](function (v) {\n        var _0x3bfcc4 = a0_0x627c;\n        return v['split']('\\x20')[_0x3bfcc4(0x1)](Number);\n    });\n    console[_0x3d40a9(0x8)](result(sheet));\n}(require('fs')[a0_0x264340(0x9)]('/dev/stdin', a0_0x264340(0xa))));", "test_cases": [["4 5\n1 1 3 4 5\n2 2 2 4 5\n3 3 0 1 1\n2 3 4 4 6", "1 1 3 4 5 14\n2 2 2 4 5 15\n3 3 0 1 1 8\n2 3 4 4 6 19\n8 9 9 13 17 56"]], "original": "'use strict';\n(function(stdin) {\n  //declare function\n  function sumLine(a, b) {\n    return a + b;\n  }\n\n  function result(matrix) {\n    var size = matrix.shift();\n    matrix.map(function(v) {\n      return v.push(v.reduce(sumLine));\n    });\n    var sumColumn = [];\n    for (var i = 0; i < size[1] + 1; i++) {\n      var sumValue = 0;\n      for (var j = 0; j < size[0]; j++) {\n        sumValue += matrix[j][i];\n      }\n      sumColumn.push(sumValue);\n    }\n    matrix.push(sumColumn);\n    return matrix.join('\\n').replace(/,/g, ' ');\n  }\n  //declare variable\n  var inputs = stdin.toString().trim().split('\\n');\n  var sheet = inputs.map(function(v) {\n    return v.split(' ').map(Number);\n  });\n  //main\n\n  //display\n  console.log(result(sheet));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02553_1", "type": "JavaScript", "obfuscated": "var a0_0x2e6bff = a0_0x2ff6;\nfunction a0_0x40a1() {\n    var _0x394fd1 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'readline',\n        'createInterface',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'apply'\n    ];\n    a0_0x40a1 = function () {\n        return _0x394fd1;\n    };\n    return a0_0x40a1();\n}\nprocess[a0_0x2e6bff(0x0)][a0_0x2e6bff(0x1)]();\nfunction a0_0x2ff6(ShcLvZ, key) {\n    var stringArray = a0_0x40a1();\n    a0_0x2ff6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ff6(ShcLvZ, key);\n}\nprocess['stdin'][a0_0x2e6bff(0x2)]('utf8');\nvar lines = [];\nvar t = [];\nvar reader = require(a0_0x2e6bff(0x3))[a0_0x2e6bff(0x4)]({\n    'input': process['stdin'],\n    'output': process[a0_0x2e6bff(0x5)]\n});\nreader['on'](a0_0x2e6bff(0x6), line => {\n    var _0x1df03e = a0_0x2ff6;\n    lines[_0x1df03e(0x7)](line);\n});\nreader['on'](a0_0x2e6bff(0x8), () => {\n    var _0x532540 = a0_0x2ff6;\n    var x = lines[0x0]['split']('\\x20');\n    var a = parseInt(x[0x0]);\n    var b = parseInt(x[0x1]);\n    var c = parseInt(x[0x2]);\n    var d = parseInt(x[0x3]);\n    var ac = a * c;\n    var ad = a * d;\n    var bc = b * c;\n    var bd = b * d;\n    t[_0x532540(0x7)](ac);\n    t[_0x532540(0x7)](ad);\n    t[_0x532540(0x7)](bc);\n    t[_0x532540(0x7)](bd);\n    console['log'](Math['max'][_0x532540(0x9)](null, t));\n});", "test_cases": [["1 2 1 1", "2"], ["3 5 -4 -2", "-6"], ["-1000000000 0 -1000000000 0", "1000000000000000000"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar lines = [];\nvar t = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var x = lines[0].split(' ');\n  var a = parseInt(x[0]);\n  var b= parseInt(x[1]);\n  var c = parseInt(x[2]);\n  var d = parseInt(x[3]);\n  var ac = a * c;\n  var ad = a * d;\n  var bc = b * c;\n  var bd = b * d;\n  t.push(ac);\n  t.push(ad);\n  t.push(bc);\n  t.push(bd);\n  console.log(Math.max.apply(null,t));\n});", "language": "JavaScript"}
{"filename": "p02576_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x545e(kYHshm, key) {\n    const stringArray = a0_0x2eac();\n    a0_0x545e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x545e(kYHshm, key);\n}\nconst a0_0x8d08b8 = a0_0x545e;\nfunction a0_0x2eac() {\n    const _0x3a4e0d = [\n        'trim',\n        'split',\n        'sort',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x2eac = function () {\n        return _0x3a4e0d;\n    };\n    return a0_0x2eac();\n}\nfunction main(input) {\n    const _0x321992 = a0_0x545e;\n    input = input[_0x321992(0x0)]()[_0x321992(0x1)]('\\x20');\n    const N = Number(input[0x0]);\n    const X = Number(input[0x1]);\n    const T = Number(input[0x2]);\n    let ans = 0x0;\n    let i;\n    for (i = 0x0; ans < N; i++) {\n        ans += X;\n    }\n    console['log'](T * i);\n}\nfunction numberSort(array) {\n    const _0x562dd2 = a0_0x545e;\n    array[_0x562dd2(0x2)](f);\n    return array;\n}\nvar f = function (a, b) {\n    return a - b;\n};\nmain(require('fs')['readFileSync'](a0_0x8d08b8(0x3), a0_0x8d08b8(0x4)));", "test_cases": [["20 12 6", "12"], ["1000 1 1000", "1000000"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\" \");\n  const N = Number(input[0]);\n  const X = Number(input[1]);\n  const T = Number(input[2]);\n  let ans = 0;\n\n  let i;\n  for (i = 0; ans < N; i++) {\n    ans += X;\n  }\n\n  console.log(T * i);\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02614_1", "type": "JavaScript", "obfuscated": "function a0_0x26e6(QAJDbt, key) {\n    const stringArray = a0_0x2404();\n    a0_0x26e6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x26e6(QAJDbt, key);\n}\nconst a0_0x439045 = a0_0x26e6;\nfunction a0_0x2404() {\n    const _0x4a01f6 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'length',\n        'XdKSj',\n        'join',\n        'replace',\n        'opIbM',\n        'slice',\n        'vxMHW',\n        'map',\n        'log'\n    ];\n    a0_0x2404 = function () {\n        return _0x4a01f6;\n    };\n    return a0_0x2404();\n}\nconst fs = require('fs');\nconst [h, w, k, ...m] = fs[a0_0x439045(0x0)]('/dev/stdin', a0_0x439045(0x1))[a0_0x439045(0x2)](/\\s/);\nfunction solve(m, x = 0x0, y = 0x0, f) {\n    const _0x4a17b5 = a0_0x26e6;\n    if (m[_0x4a17b5(0x3)] === 0x0 || m[0x0][_0x4a17b5(0x3)] === 0x0) {\n        if ('XdKSj' !== _0x4a17b5(0x4)) {\n            a++;\n        } else {\n            return 0x0;\n        }\n    }\n    const n = m[_0x4a17b5(0x5)]('')[_0x4a17b5(0x6)](/\\./g, '')['length'];\n    let a = 0x0;\n    if (n == k) {\n        if (_0x4a17b5(0x7) !== _0x4a17b5(0x7)) {\n            return a;\n        } else {\n            a++;\n        }\n    }\n    if (n < k) {\n        return a;\n    }\n    if (!f) {\n        for (let i = y; i < m[_0x4a17b5(0x3)]; i++) {\n            a += solve([\n                ...m[_0x4a17b5(0x8)](0x0, i),\n                ...m['slice'](i + 0x1)\n            ], x, i < y ? y : i);\n        }\n    }\n    for (let i = x; i < m[0x0]['length']; i++) {\n        if (_0x4a17b5(0x9) === _0x4a17b5(0x9)) {\n            a += solve(m[_0x4a17b5(0xa)](l => l['slice'](0x0, i) + l['slice'](i + 0x1)), i < x ? x : i, y, !![]);\n        } else {\n            return 0x0;\n        }\n    }\n    return a;\n}\nconsole[a0_0x439045(0xb)](solve(m));", "test_cases": [["2 3 2\n..#\n###", "5"], ["2 3 4\n..#\n###", "1"], ["2 2 3\n##\n##", "0"], ["6 6 8\n..##..\n.#..#.\n#....#\n######\n#....#\n#....#", "208"]], "original": "const fs = require('fs');\nconst [h, w, k, ...m] = fs.readFileSync('/dev/stdin', 'utf8').split(/\\s/);\n\nfunction solve(m, x=0, y=0, f) {\n  if (m.length === 0 || m[0].length === 0) {\n    return 0;\n  }\n  const n = m.join('').replace(/\\./g, '').length;\n  let a = 0;\n  if (n == k) {\n    a++;\n  }\n  if (n < k) {\n\t  return a;\n  }\n  if (!f) {\n    for (let i = y; i < m.length; i++) {\n      a += solve([...m.slice(0, i), ...m.slice(i + 1)], x, i < y ? y : i);\n    }\n  }\n  for (let i = x; i < m[0].length; i++) {\n    a += solve(m.map(l => l.slice(0, i) + l.slice(i + 1)), i < x ? x : i, y, true);\n  }\n  return a;\n}\n\nconsole.log(solve(m));", "language": "JavaScript"}
{"filename": "p02627_1", "type": "JavaScript", "obfuscated": "var a0_0x24302a = a0_0x28d0;\nfunction main(input) {\n    var _0x44bcb4 = a0_0x28d0;\n    input = input['split']('\\x0a');\n    var answer = input[0x0];\n    var answerA = input[0x0]['toUpperCase']();\n    if (answer == answerA) {\n        console[_0x44bcb4(0x0)]('A');\n    } else {\n        console['log']('a');\n    }\n}\nfunction a0_0x28d0(QHmNkf, key) {\n    var stringArray = a0_0x2f3d();\n    a0_0x28d0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28d0(QHmNkf, key);\n}\nfunction a0_0x2f3d() {\n    var _0x4728a3 = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2f3d = function () {\n        return _0x4728a3;\n    };\n    return a0_0x2f3d();\n}\nmain(require('fs')['readFileSync'](a0_0x24302a(0x1), a0_0x24302a(0x2)));", "test_cases": [["B", "A"], ["a", "a"]], "original": "function main(input){\n\tinput=input.split(\"\\n\");\nvar answer=input[0];\nvar answerA=input[0].toUpperCase();\n\nif(answer==answerA){console.log(\"A\")}else{console.log(\"a\")}\n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02684_1", "type": "JavaScript", "obfuscated": "const a0_0x4d3926 = a0_0x5cb0;\nfunction a0_0x5cb0(qVtSRs, key) {\n    const stringArray = a0_0x469d();\n    a0_0x5cb0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5cb0(qVtSRs, key);\n}\nfunction main(input) {\n    const _0x1ead4a = a0_0x5cb0;\n    const lines = input['trim']()[_0x1ead4a(0x0)]('\\x0a');\n    let [n, k] = lines[0x0][_0x1ead4a(0x0)]('\\x20');\n    n = +n;\n    k = BigInt(k);\n    const towns = lines[0x1][_0x1ead4a(0x0)]('\\x20')[_0x1ead4a(0x1)](Number);\n    const visited = new Map();\n    let pos = 0x1;\n    while (k > 0x0) {\n        const i = visited[_0x1ead4a(0x2)](pos);\n        if (!i) {\n            visited[_0x1ead4a(0x3)](pos, BigInt(visited[_0x1ead4a(0x4)]));\n            pos = towns[pos - 0x1];\n            k--;\n        } else {\n            const cycle = BigInt(visited[_0x1ead4a(0x4)]) - i;\n            const rest = k % cycle;\n            for (let [key, value] of visited) {\n                if (value == i + rest) {\n                    pos = key;\n                    break;\n                }\n            }\n            k = 0x0;\n        }\n    }\n    console[_0x1ead4a(0x5)](pos);\n}\nfunction a0_0x469d() {\n    const _0x5f4ef9 = [\n        'split',\n        'map',\n        'get',\n        'set',\n        'size',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x469d = function () {\n        return _0x5f4ef9;\n    };\n    return a0_0x469d();\n}\nmain(require('fs')[a0_0x4d3926(0x6)](a0_0x4d3926(0x7), a0_0x4d3926(0x8)));", "test_cases": [["4 5\n3 2 4 1", "4"], ["6 727202214173249351\n6 5 2 5 3 2", "2"]], "original": "function main(input) {\n  const lines = input.trim().split(\"\\n\");\n  let [n, k] = lines[0].split(' ');\n  n = +n;\n  k = BigInt(k);\n  const towns = lines[1].split(' ').map(Number);\n\n  const visited = new Map();\n  let pos = 1;\n  while (k > 0) {\n    const i = visited.get(pos);\n    if (!i) {\n      visited.set(pos, BigInt(visited.size));\n      pos = towns[pos - 1];\n      k--;\n    } else {\n      const cycle = BigInt(visited.size) - i;\n      const rest = k % cycle;\n      for (let [key, value] of visited) {\n        if (value == i + rest) {\n          pos = key;\n          break;\n        }\n      }\n      k = 0;\n    }\n  }\n  \n  console.log(pos);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02730_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3000() {\n    const _0x5a4160 = [\n        'length',\n        'split',\n        'substring',\n        'substr',\n        'log',\n        'Yes',\n        'utf8'\n    ];\n    a0_0x3000 = function () {\n        return _0x5a4160;\n    };\n    return a0_0x3000();\n}\nfunction a0_0x2da0(PKbyZQ, key) {\n    const stringArray = a0_0x3000();\n    a0_0x2da0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2da0(PKbyZQ, key);\n}\nconst a0_0x53c7d4 = a0_0x2da0;\nconst is_palindrome = s => {\n    const _0x27195c = a0_0x2da0;\n    let n = s[_0x27195c(0x0)];\n    for (let i = 0x0; i < n; i++) {\n        if (s[i] !== s[n - i - 0x1])\n            return ![];\n    }\n    return !![];\n};\nconst main = input => {\n    const _0x1814d1 = a0_0x2da0;\n    const spi = input[_0x1814d1(0x1)]('\\x0a');\n    const s = spi[0x0];\n    const n = s[_0x1814d1(0x0)];\n    if (is_palindrome(s) && is_palindrome(s[_0x1814d1(0x2)](0x0, (n - 0x1) / 0x2)) && is_palindrome(s[_0x1814d1(0x3)]((n + 0x3) / 0x2 - 0x1)))\n        console[_0x1814d1(0x4)](_0x1814d1(0x5));\n    else\n        console[_0x1814d1(0x4)]('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x53c7d4(0x6)));", "test_cases": [["akasaka", "Yes"], ["level", "No"], ["atcoder", "No"]], "original": "\"use strict\";\n\nconst is_palindrome = s => {\n    let n = s.length;\n    for (let i = 0; i < n; i++) {\n        if (s[i] !== s[n - i - 1]) return false;\n    }\n\n    return true;\n}\n\nconst main = (input) => {\n    const spi = input.split('\\n');\n    const s = spi[0];\n    const n = s.length;\n\n    if (is_palindrome(s)\n        && is_palindrome(s.substring(0, (n-1)/2))\n        && is_palindrome(s.substr((n+3)/2-1)))\n        console.log(\"Yes\");\n    else\n        console.log(\"No\");\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02742_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x325ec4 = a0_0x35a8;\nfunction a0_0x35a8(LSszbL, key) {\n    const stringArray = a0_0x2341();\n    a0_0x35a8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x35a8(LSszbL, key);\n}\nfunction a0_0x2341() {\n    const _0x54be49 = [\n        'trim',\n        'ceil',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2341 = function () {\n        return _0x54be49;\n    };\n    return a0_0x2341();\n}\nconst Main = input => {\n    const _0x514364 = a0_0x35a8;\n    const tmp = input[_0x514364(0x0)]()['split']('\\x20');\n    const H = parseInt(tmp[0x0]);\n    const W = parseInt(tmp[0x1]);\n    let result = 0x0;\n    if (H % 0x2 != 0x0 && W % 0x2 != 0x0) {\n        result = Math[_0x514364(0x1)](H * W / 0x2);\n    } else {\n        result = H * W / 0x2;\n    }\n    console[_0x514364(0x2)](result);\n    return result;\n};\nMain(require('fs')[a0_0x325ec4(0x3)](a0_0x325ec4(0x4), a0_0x325ec4(0x5)));", "test_cases": [["4 5", "10"], ["7 3", "11"], ["1000000000 1000000000", "500000000000000000"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split(' ')\n  const H = parseInt(tmp[0])\n  const W = parseInt(tmp[1])\n\n  let result = 0\n\n  if ((H % 2) != 0 && (W % 2) != 0) {\n    result = Math.ceil(H * W / 2)\n  } else {\n    result = H * W / 2\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02777_1", "type": "JavaScript", "obfuscated": "function a0_0x3e87() {\n    const _0x42e7dd = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3e87 = function () {\n        return _0x42e7dd;\n    };\n    return a0_0x3e87();\n}\nfunction a0_0x543c(YBUZwM, key) {\n    const stringArray = a0_0x3e87();\n    a0_0x543c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x543c(YBUZwM, key);\n}\nconst a0_0x8c2fb0 = a0_0x543c;\nfunction Main(impu) {\n    const _0x435afb = a0_0x543c;\n    let imput = impu[_0x435afb(0x0)]('\\x0a');\n    let name = imput[0x0][_0x435afb(0x0)]('\\x20');\n    let count = imput[0x1][_0x435afb(0x0)]('\\x20');\n    if (name[0x0] === imput[0x2])\n        count[0x0]--;\n    else\n        count[0x1]--;\n    console[_0x435afb(0x1)](count[0x0] + '\\x20' + count[0x1]);\n}\nMain(require('fs')[a0_0x8c2fb0(0x2)](a0_0x8c2fb0(0x3), a0_0x8c2fb0(0x4)));", "test_cases": [["red blue\n3 4\nred", "2 4"], ["red blue\n5 5\nblue", "5 4"]], "original": "function Main(impu) {\n\tlet imput = impu.split(\"\\n\");\n\tlet name = imput[0].split(\" \");\n\tlet count = imput[1].split(\" \");\n\t\n\tif(name[0] === imput[2]) \n\t\tcount[0]--;\n\telse\n\t\tcount[1]--;\n\t\n\tconsole.log(count[0] + \" \" + count[1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02818_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2be728 = a0_0x4081;\nfunction a0_0x4bc8() {\n    const _0x18f704 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4bc8 = function () {\n        return _0x18f704;\n    };\n    return a0_0x4bc8();\n}\nfunction Main(inputs) {\n    const _0x4b00d7 = a0_0x4081;\n    const input = inputs[_0x4b00d7(0x0)]('\\x0a');\n    const a = Number(input[0x0]['split']('\\x20')[0x0]);\n    const b = Number(input[0x0]['split']('\\x20')[0x1]);\n    const k = Number(input[0x0][_0x4b00d7(0x0)]('\\x20')[0x2]);\n    console[_0x4b00d7(0x1)](a > k ? a - k : 0x0, a + b > k ? a + b - k : 0x0);\n}\nfunction a0_0x4081(EHsoKf, key) {\n    const stringArray = a0_0x4bc8();\n    a0_0x4081 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4081(EHsoKf, key);\n}\nMain(require('fs')[a0_0x2be728(0x2)](a0_0x2be728(0x3), a0_0x2be728(0x4)));", "test_cases": [["2 3 3", "0 2"], ["500000000000 500000000000 1000000000000", "0 0"]], "original": "'use strict';\nfunction Main(inputs) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  const input = inputs.split(\"\\n\");\n  const a = Number(input[0].split(' ')[0]);\n  const b = Number(input[0].split(' ')[1]);\n  const k = Number(input[0].split(' ')[2]);\n\n  console.log((a > k ? a - k : 0), (a + b > k ? a + b - k : 0));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02832_1", "type": "JavaScript", "obfuscated": "var a0_0x3a7943 = a0_0x265b;\nprocess[a0_0x3a7943(0x0)][a0_0x3a7943(0x1)]();\nprocess[a0_0x3a7943(0x0)][a0_0x3a7943(0x2)](a0_0x3a7943(0x3));\nfunction a0_0x265b(LxGNBF, key) {\n    var stringArray = a0_0x2468();\n    a0_0x265b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x265b(LxGNBF, key);\n}\nfunction a0_0x2468() {\n    var _0x67df16 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'readline',\n        'stdout',\n        'line',\n        'close',\n        'map',\n        'vujra',\n        'log',\n        'xUFev',\n        'rlvRM',\n        'splice',\n        'length',\n        'XuWpS',\n        'njqYL',\n        'push'\n    ];\n    a0_0x2468 = function () {\n        return _0x67df16;\n    };\n    return a0_0x2468();\n}\nvar lines = [];\nvar reader = require(a0_0x3a7943(0x4))['createInterface']({\n    'input': process[a0_0x3a7943(0x0)],\n    'output': process[a0_0x3a7943(0x5)]\n});\nreader['on'](a0_0x3a7943(0x6), line => {\n    lines['push'](line);\n});\nreader['on'](a0_0x3a7943(0x7), () => {\n    var _0x53b1e4 = a0_0x265b;\n    var count = lines[0x0];\n    var ary = lines[0x1]['split']('\\x20')[_0x53b1e4(0x8)](x => Number(x));\n    var break_count = 0x0;\n    var tmp_count = 0x1;\n    var c = 0x0;\n    for (var i = 0x0; i < count; i++) {\n        if (ary[tmp_count - 0x1] == tmp_count) {\n            if ('sKlZh' !== _0x53b1e4(0x9)) {\n                c += tmp_count;\n                tmp_count++;\n            } else {\n                if (judge) {\n                    console[_0x53b1e4(0xa)](-0x1);\n                } else {\n                    console[_0x53b1e4(0xa)](break_count);\n                }\n            }\n        } else {\n            if (_0x53b1e4(0xb) !== _0x53b1e4(0xc)) {\n                break_count++;\n                ary[_0x53b1e4(0xd)](tmp_count - 0x1, 0x1);\n            } else {\n                return n * (n + 0x1) * 0.5;\n            }\n        }\n    }\n    var judge = ![];\n    if (ary[_0x53b1e4(0xe)] == 0x0) {\n        judge = !![];\n    }\n    if (sum(ary['length']) != c) {\n        judge = !![];\n    }\n    if (break_count == 0x0 && judge) {\n        console['log'](0x0);\n    } else {\n        if (_0x53b1e4(0xf) === _0x53b1e4(0xf)) {\n            if (judge) {\n                console['log'](-0x1);\n            } else {\n                console[_0x53b1e4(0xa)](break_count);\n            }\n        } else {\n            console[_0x53b1e4(0xa)](break_count);\n        }\n    }\n    function sum(n) {\n        var _0x93d88c = a0_0x265b;\n        if (_0x93d88c(0x10) !== _0x93d88c(0x10)) {\n            lines[_0x93d88c(0x11)](line);\n        } else {\n            return n * (n + 0x1) * 0.5;\n        }\n    }\n});", "test_cases": [["3\n2 1 2", "1"], ["3\n2 2 2", "-1"], ["10\n3 1 4 1 5 9 2 6 5 3", "7"], ["1\n1", "0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var count = lines[0]\n  var ary = lines[1].split(\" \").map( x => Number(x) )\n  var break_count = 0\n  // 1から開始\n  var tmp_count = 1\n  var c = 0\n  for(var i = 0; i < count; i++) {\n    if (ary[tmp_count - 1] == tmp_count) {\n      c+=tmp_count\n      tmp_count++\n    } else {\n      break_count++\n      ary.splice(tmp_count - 1, 1)\n    }\n  }\n  // 順列になっているか\n  var judge = false\n  if (ary.length == 0) {\n    judge = true\n  }\n  if (sum(ary.length) != c) {\n    judge = true\n  }\n\n  // 順列になっているかつ 0 の時は0\n  if (break_count == 0 && judge) {\n    console.log(0)\n  } else {\n    if (judge) {\n      console.log(-1)\n    } else {\n      console.log(break_count)\n    }\n  }\n  \n  // 1~nの総和を求める関数\n  function sum(n) {\n    return (n * (n + 1) * 0.5)\n  }\n});\n", "language": "JavaScript"}
{"filename": "p02847_1", "type": "JavaScript", "obfuscated": "function a0_0x2a7d(PbiaXp, key) {\n    var stringArray = a0_0x5f1b();\n    a0_0x2a7d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a7d(PbiaXp, key);\n}\nfunction a0_0x5f1b() {\n    var _0x18b25c = [\n        'MON',\n        'TUE',\n        'WED',\n        'THU',\n        'FRI',\n        'SAT',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5f1b = function () {\n        return _0x18b25c;\n    };\n    return a0_0x5f1b();\n}\nvar a0_0x50d9a4 = a0_0x2a7d;\nfunction Main(input) {\n    var _0x22eea1 = a0_0x2a7d;\n    var result;\n    switch (input) {\n    case 'SUN':\n        result = '7';\n        break;\n    case _0x22eea1(0x0):\n        result = '6';\n        break;\n    case _0x22eea1(0x1):\n        result = '5';\n        break;\n    case _0x22eea1(0x2):\n        result = '4';\n        break;\n    case _0x22eea1(0x3):\n        result = '3';\n        break;\n    case _0x22eea1(0x4):\n        result = '2';\n        break;\n    case _0x22eea1(0x5):\n        result = '1';\n        break;\n    }\n    console['log'](result);\n}\nMain(require('fs')[a0_0x50d9a4(0x6)](a0_0x50d9a4(0x7), a0_0x50d9a4(0x8)));", "test_cases": [["SAT", "1"], ["SUN", "7"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  \tvar result;\n  \tswitch (input){\n        case 'SUN':\n        result = '7';\n        break;\n        case 'MON':\n        result = '6';\n        break;\n        case 'TUE':\n        result = '5';\n        break;\n        case 'WED':\n        result = '4';\n        break;\n        case 'THU':\n        result = '3';\n        break;\n        case 'FRI':\n        result = '2';\n        break;\n        case 'SAT':\n        result = '1';\n        break;\n    }\n\tconsole.log(result);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02886_1", "type": "JavaScript", "obfuscated": "function a0_0x5cd8(LIdVLD, key) {\n    var stringArray = a0_0x2557();\n    a0_0x5cd8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5cd8(LIdVLD, key);\n}\nvar a0_0x454aee = a0_0x5cd8;\nfunction a0_0x2557() {\n    var _0x1c25ce = [\n        'split',\n        'map',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x2557 = function () {\n        return _0x1c25ce;\n    };\n    return a0_0x2557();\n}\nfunction Main(input) {\n    var _0x3f9394 = a0_0x5cd8;\n    var input = input[_0x3f9394(0x0)]('\\x0a');\n    const n = Number(input[0x0]);\n    const ocps = input[0x1][_0x3f9394(0x0)]('\\x20')[_0x3f9394(0x1)](ocp => Number(ocp));\n    var r = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = i + 0x1; j < n; j++) {\n            r += ocps[i] * ocps[j];\n        }\n    }\n    console[_0x3f9394(0x2)](r);\n}\nMain(require('fs')['readFileSync'](a0_0x454aee(0x3), 'utf8'));", "test_cases": [["3\n3 1 2", "11"], ["7\n5 0 7 8 3 3 2", "312"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var input = input.split('\\n');\n  const n = Number(input[0])\n  const ocps = input[1].split(' ').map(ocp => Number(ocp));\n  var r = 0;\n  for (var i = 0; i < n; i++) {\n    for (var j = i+1; j < n; j++) {\n      r += ocps[i] * ocps[j]\n    }\n  }\n  console.log(r)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02887_1", "type": "JavaScript", "obfuscated": "function a0_0x7e1f() {\n    var _0x40fd48 = [\n        'replace',\n        'log',\n        'length',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x7e1f = function () {\n        return _0x40fd48;\n    };\n    return a0_0x7e1f();\n}\nfunction a0_0x3305(jzlENv, key) {\n    var stringArray = a0_0x7e1f();\n    a0_0x3305 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3305(jzlENv, key);\n}\nvar a0_0x50fb17 = a0_0x3305;\nfunction main(arg) {\n    var _0x295471 = a0_0x3305;\n    var arg2 = arg['split'](/\\n/g);\n    var honbun = arg2[0x1];\n    var alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    for (i = 0x0; i < alphabet['length']; i++) {\n        var iro = alphabet['substr'](i, 0x1);\n        var regkun = new RegExp(iro + '+', 'g');\n        honbun = honbun[_0x295471(0x0)](regkun, iro);\n    }\n    console[_0x295471(0x1)](honbun[_0x295471(0x2)]);\n}\nmain(require('fs')[a0_0x50fb17(0x3)]('/dev/stdin', a0_0x50fb17(0x4)));", "test_cases": [["10\naabbbbaaca", "5"], ["5\naaaaa", "1"], ["20\nxxzaffeeeeddfkkkkllq", "10"]], "original": "function main(arg) {\n    var arg2 = arg.split(/\\n/g);\n\tvar honbun = arg2[1];\n\tvar alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\tfor(i=0;i<alphabet.length;i++){\n\t\tvar iro = alphabet.substr(i,1);\n\t\tvar regkun = new RegExp(iro+\"+\", 'g');\n\t\thonbun = honbun.replace(regkun,iro);\n\t}\n\tconsole.log(honbun.length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02922_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x46776f = a0_0x2468;\nfunction a0_0x7f30() {\n    const _0x52ae7e = [\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7f30 = function () {\n        return _0x52ae7e;\n    };\n    return a0_0x7f30();\n}\nfunction a0_0x2468(qOjNgc, key) {\n    const stringArray = a0_0x7f30();\n    a0_0x2468 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2468(qOjNgc, key);\n}\nconst Main = input => {\n    const _0x17f851 = a0_0x2468;\n    let xs = input['trim']()['split']('\\x20')[_0x17f851(0x0)](v => parseInt(v, 0xa));\n    let a = xs[0x0];\n    let b = xs[0x1];\n    let ans = 0x1;\n    if (a >= b) {\n        ans = 0x1;\n    } else {\n        for (let i = 0x1; (a - 0x1) * i + 0x1 < b; i++) {\n            ans += 0x1;\n        }\n    }\n    console[_0x17f851(0x1)](ans);\n};\nMain(require('fs')[a0_0x46776f(0x2)](a0_0x46776f(0x3), a0_0x46776f(0x4)));", "test_cases": [["4 10", "3"], ["8 9", "2"], ["8 8", "1"]], "original": "\"use strict\"\nconst Main = (input) =>{\n\tlet xs = input.trim().split(' ').map(v=>parseInt(v,10));\n    let a = xs[0];\n    let b = xs[1];\n    let ans = 1;\n    if(a >= b){\n    ans = 1;\n    }else{ \n    \tfor(let i = 1; (a-1)*i+1 < b; i++){\n    \tans += 1;\n    \t}\n    }\n    console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p02946_1", "type": "JavaScript", "obfuscated": "var a0_0x1214e8 = a0_0x5407;\nvar input = a0_0x1214e8(0x0);\nvar input = require('fs')[a0_0x1214e8(0x1)](a0_0x1214e8(0x2), a0_0x1214e8(0x3));\nfunction a0_0x5407(byRgHp, key) {\n    var stringArray = a0_0x3ff4();\n    a0_0x5407 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5407(byRgHp, key);\n}\nfunction a0_0x3ff4() {\n    var _0x2a0e10 = [\n        '\\x0a3\\x207\\x0a',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'push',\n        'log'\n    ];\n    a0_0x3ff4 = function () {\n        return _0x2a0e10;\n    };\n    return a0_0x3ff4();\n}\nvar arr = input['trim']()[a0_0x1214e8(0x4)]('\\x0a');\nvar k = arr[0x0]['split']('\\x20')[0x0] - 0x0;\nvar x = arr[0x0][a0_0x1214e8(0x4)]('\\x20')[0x1] - 0x0;\nvar a = [];\nfor (var i = x - k + 0x1; i < x + k; i++)\n    a[a0_0x1214e8(0x5)](i);\nconsole[a0_0x1214e8(0x6)](a['join']('\\x20'));", "test_cases": [["3 7", "5 6 7 8 9"], ["4 0", "-3 -2 -1 0 1 2 3"], ["1 100", "100"]], "original": "var input=`\n3 7\n`;\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar k=arr[0].split(\" \")[0]-0;\nvar x=arr[0].split(\" \")[1]-0;\nvar a=[];\nfor(var i=x-k+1;i<x+k;i++)a.push(i);\nconsole.log(a.join(\" \"));", "language": "JavaScript"}
{"filename": "p02947_1", "type": "JavaScript", "obfuscated": "function a0_0x24b2() {\n    const _0x5515bf = [\n        'slice',\n        'map',\n        'from',\n        'join',\n        'length',\n        'has',\n        'get',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x24b2 = function () {\n        return _0x5515bf;\n    };\n    return a0_0x24b2();\n}\nfunction a0_0x405b(ObAiqD, key) {\n    const stringArray = a0_0x24b2();\n    a0_0x405b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x405b(ObAiqD, key);\n}\nconst a0_0x5ed1ec = a0_0x405b;\nfunction main(input) {\n    const _0x33ef6e = a0_0x405b;\n    const list = input['split']('\\x0a')[_0x33ef6e(0x0)](0x1)[_0x33ef6e(0x1)](s => Array[_0x33ef6e(0x2)](s)['sort']()[_0x33ef6e(0x3)](''));\n    let totalCount = 0x0;\n    const map = new Map();\n    for (let i = 0x0; i < list[_0x33ef6e(0x4)]; i++) {\n        if (!map[_0x33ef6e(0x5)](list[i])) {\n            map['set'](list[i], 0x1);\n            continue;\n        }\n        totalCount += map[_0x33ef6e(0x6)](list[i]);\n        map['set'](list[i], map[_0x33ef6e(0x6)](list[i]) + 0x1);\n    }\n    console[_0x33ef6e(0x7)](totalCount);\n}\nmain(require('fs')[a0_0x5ed1ec(0x8)](a0_0x5ed1ec(0x9), a0_0x5ed1ec(0xa)));", "test_cases": [["3\nacornistnt\npeanutbomb\nconstraint", "1"], ["2\noneplustwo\nninemodsix", "0"], ["5\nabaaaaaaaa\noneplustwo\naaaaaaaaba\ntwoplusone\naaaabaaaaa", "4"]], "original": "function main(input) {\n  const list = input.split(\"\\n\")\n    .slice(1)\n    .map(s => Array.from(s).sort().join(''))\n\n  let totalCount = 0\n  const map = new Map()\n  for (let i = 0; i < list.length; i++) {\n    if (!map.has(list[i])) {\n      map.set(list[i], 1)\n      continue;\n    }\n    totalCount += map.get(list[i])\n    map.set(list[i], map.get(list[i]) + 1)\n  }\n\n  console.log(totalCount)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02996_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x734cf5 = a0_0x182b;\nfunction a0_0x182b(wFfZLt, key) {\n    const stringArray = a0_0x48f4();\n    a0_0x182b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x182b(wFfZLt, key);\n}\nfunction a0_0x48f4() {\n    const _0x14b842 = [\n        'split',\n        'sort',\n        'Yes',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x48f4 = function () {\n        return _0x14b842;\n    };\n    return a0_0x48f4();\n}\nfunction main(input) {\n    const _0xb34fbb = a0_0x182b;\n    const lines = input[_0xb34fbb(0x0)]('\\x0a');\n    const N = parseInt(lines['shift']());\n    const tasks = [];\n    for (let i = 0x0; i < N; i++) {\n        tasks['push'](lines[i][_0xb34fbb(0x0)]('\\x20')['map'](x => parseInt(x)));\n    }\n    tasks[_0xb34fbb(0x1)]((a, b) => a[0x1] - b[0x1]);\n    let result = _0xb34fbb(0x2);\n    let sum = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        sum += tasks[i][0x0];\n        if (sum > tasks[i][0x1]) {\n            result = 'No';\n            break;\n        }\n    }\n    console[_0xb34fbb(0x3)](result);\n}\nmain(require('fs')['readFileSync'](a0_0x734cf5(0x4), a0_0x734cf5(0x5)));", "test_cases": [["5\n2 4\n1 9\n1 8\n4 9\n3 12", "Yes"], ["3\n334 1000\n334 1000\n334 1000", "No"], ["30\n384 8895\n1725 9791\n170 1024\n4 11105\n2 6\n578 1815\n702 3352\n143 5141\n1420 6980\n24 1602\n849 999\n76 7586\n85 5570\n444 4991\n719 11090\n470 10708\n1137 4547\n455 9003\n110 9901\n15 8578\n368 3692\n104 1286\n3 4\n366 12143\n7 6649\n610 2374\n152 7324\n4 7042\n292 11386\n334 5720", "Yes"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = parseInt(lines.shift());\n  const tasks = []\n  for(let i=0;i<N;i++){\n    tasks.push( lines[i].split(' ').map( x => parseInt(x) ) );\n  }\n\n  tasks.sort( (a,b) => a[1]-b[1])\n\n  let result = 'Yes';\n  let sum = 0\n  for(let i=0;i<N;i++){\n    sum += tasks[i][0]\n    if(sum > tasks[i][1]){\n      result = 'No';\n      break;\n    }\n  }\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03029_1", "type": "JavaScript", "obfuscated": "function a0_0x7f57() {\n    var _0xe0dc12 = [\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'floor',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7f57 = function () {\n        return _0xe0dc12;\n    };\n    return a0_0x7f57();\n}\nfunction a0_0x5137(MXJnfn, key) {\n    var stringArray = a0_0x7f57();\n    a0_0x5137 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5137(MXJnfn, key);\n}\nvar a0_0x4e64cf = a0_0x5137;\n(stdin => {\n    var _0x5c1c78 = a0_0x5137;\n    var lines = stdin[_0x5c1c78(0x0)]()[_0x5c1c78(0x1)]('\\x0a');\n    var inputs = lines[_0x5c1c78(0x2)]()[_0x5c1c78(0x1)]('\\x20')[_0x5c1c78(0x3)](Number);\n    console[_0x5c1c78(0x4)](Math[_0x5c1c78(0x5)]((inputs[0x0] * 0x3 + inputs[0x1]) / 0x2));\n})(require('fs')['readFileSync'](a0_0x4e64cf(0x6), a0_0x4e64cf(0x7)));", "test_cases": [["1 3", "3"], ["0 1", "0"], ["32 21", "58"]], "original": "((stdin) => {\n  var lines = stdin.trim().split('\\n');\n  var inputs = lines.shift().split(' ').map(Number);\n  console.log(Math.floor((inputs[0] * 3 + inputs[1]) / 2));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03035_1", "type": "JavaScript", "obfuscated": "function a0_0x31b6() {\n    const _0x1aaeb6 = [\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x31b6 = function () {\n        return _0x1aaeb6;\n    };\n    return a0_0x31b6();\n}\nconst a0_0x5be719 = a0_0x4143;\nfunction main(input) {\n    const _0x49ad3c = a0_0x4143;\n    const nums = input['split']('\\x20')[_0x49ad3c(0x0)](num => parseInt(num, 0xa));\n    console['log'](nums[0x0] >= 0xd ? nums[0x1] : nums[0x0] >= 0x6 ? nums[0x1] / 0x2 : 0x0);\n}\nfunction a0_0x4143(bneVmX, key) {\n    const stringArray = a0_0x31b6();\n    a0_0x4143 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4143(bneVmX, key);\n}\nmain(require('fs')[a0_0x5be719(0x1)](a0_0x5be719(0x2), a0_0x5be719(0x3)));", "test_cases": [["30 100", "100"], ["12 100", "50"], ["0 100", "0"]], "original": "function main(input) {\n  const nums = input.split(\" \").map(num => parseInt(num, 10))\n  console.log(nums[0] >= 13 ? nums[1] : nums[0] >= 6 ? nums[1] / 2 : 0)\n}\n \nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03059_1", "type": "JavaScript", "obfuscated": "var a0_0x4a5b93 = a0_0x4165;\nfunction Main(input) {\n    var _0x20091a = a0_0x4165;\n    input = input['split']('\\x20');\n    var a = parseInt(input[0x0], 0xa);\n    var b = parseInt(input[0x1], 0xa);\n    var t = parseInt(input[0x2], 0xa);\n    console[_0x20091a(0x0)]('%d', Math[_0x20091a(0x1)]((t + 0.5) / a) * b);\n}\nfunction a0_0x4165(nmHGPP, key) {\n    var stringArray = a0_0x183b();\n    a0_0x4165 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4165(nmHGPP, key);\n}\nfunction a0_0x183b() {\n    var _0x288b5c = [\n        'log',\n        'floor',\n        'utf8'\n    ];\n    a0_0x183b = function () {\n        return _0x288b5c;\n    };\n    return a0_0x183b();\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x4a5b93(0x2)));", "test_cases": [["3 5 7", "10"], ["3 2 9", "6"], ["20 20 19", "0"]], "original": "function Main(input) {\n  input = input.split(\" \");\n  var a = parseInt(input[0], 10);\n  var b = parseInt(input[1], 10);\n  var t = parseInt(input[2], 10);\n  console.log('%d',Math.floor((t + 0.5) / a) * b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03062_1", "type": "JavaScript", "obfuscated": "var a0_0x1d3ad7 = a0_0x21d8;\nfunction main(input) {\n    var _0x3e2dd0 = a0_0x21d8;\n    const formatted_input = input[_0x3e2dd0(0x0)]('\\x0a');\n    const N = parseInt(formatted_input[0x0], 0xa);\n    const As = formatted_input[0x1][_0x3e2dd0(0x0)]('\\x20')[_0x3e2dd0(0x1)](x => parseInt(x));\n    dp = [];\n    for (var i = 0x0; i < N; i++) {\n        var results = [];\n        if (i == 0x0) {\n            results = [\n                As[i],\n                As[i] * -0x1\n            ];\n        } else {\n            var not_flipped = Math[_0x3e2dd0(0x2)](dp[i - 0x1][0x0] + As[i], dp[i - 0x1][0x1] - As[i]);\n            var flipped = Math[_0x3e2dd0(0x2)](dp[i - 0x1][0x0] - As[i], dp[i - 0x1][0x1] + As[i]);\n            results = [\n                not_flipped,\n                flipped\n            ];\n        }\n        dp[_0x3e2dd0(0x3)](results);\n    }\n    console[_0x3e2dd0(0x4)](dp[N - 0x1][0x0]);\n}\nmain(require('fs')[a0_0x1d3ad7(0x5)](a0_0x1d3ad7(0x6), a0_0x1d3ad7(0x7)));\nfunction a0_0x21d8(ZcAQXC, key) {\n    var stringArray = a0_0x43df();\n    a0_0x21d8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x21d8(ZcAQXC, key);\n}\nfunction a0_0x43df() {\n    var _0x1e1c41 = [\n        'split',\n        'map',\n        'max',\n        'push',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x43df = function () {\n        return _0x1e1c41;\n    };\n    return a0_0x43df();\n}", "test_cases": [["3\n-10 5 -4", "19"], ["5\n10 -4 -8 -11 3", "30"], ["11\n-1000000000 1000000000 -1000000000 1000000000 -1000000000 0 1000000000 -1000000000 1000000000 -1000000000 1000000000", "10000000000"]], "original": "function main(input) {\n  const formatted_input = input.split('\\n');\n\n  const N = parseInt(formatted_input[0], 10);\n  const As = formatted_input[1].split(' ').map(x => parseInt(x));\n\n  dp = [];\n\n  for(var i=0;i<N;i++){\n    var results = [];\n    if(i==0){\n      results=[As[i], As[i]*-1]\n    }else{\n      var not_flipped = Math.max(dp[i-1][0] + As[i], dp[i-1][1] - As[i]);\n      var flipped = Math.max(dp[i-1][0] - As[i], dp[i-1][1] + As[i]);\n      results = [not_flipped, flipped]\n    }\n    dp.push(results);\n  }\n\n  //console.log(dp);\n  console.log(dp[N-1][0]);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n\n", "language": "JavaScript"}
{"filename": "p03081_1", "type": "JavaScript", "obfuscated": "var a0_0x4dfcf5 = a0_0x3a58;\nfunction a0_0x44d7() {\n    var _0x2abd3f = [\n        'split',\n        'push',\n        'OhuxP',\n        'LpIpF',\n        'length',\n        'HvleK',\n        'AeLkA',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x44d7 = function () {\n        return _0x2abd3f;\n    };\n    return a0_0x44d7();\n}\nfunction Main(input) {\n    var _0x5d4d37 = a0_0x3a58;\n    var ary = [];\n    for (var i = 0x0; i < input['split']('\\x0a')[0x0][_0x5d4d37(0x0)]('\\x20')[0x0]; i++) {\n        ary[_0x5d4d37(0x1)](0x1);\n    }\n    var str = input['split']('\\x0a')[0x1];\n    for (var i = 0x2; i < input[_0x5d4d37(0x0)]('\\x0a')['length']; i++) {\n        var jumon = input[_0x5d4d37(0x0)]('\\x0a')[i][_0x5d4d37(0x0)]('\\x20');\n        var newAry = [];\n        for (var j = 0x0; j < ary['length']; j++) {\n            newAry[_0x5d4d37(0x1)](0x0);\n        }\n        if (jumon[0x1] == 'L') {\n            for (var j = 0x0; j < str['length']; j++) {\n                if (_0x5d4d37(0x2) === _0x5d4d37(0x3)) {\n                    for (var j = 0x0; j < str[_0x5d4d37(0x4)]; j++) {\n                        if (j != ary[_0x5d4d37(0x4)] - 0x1 || str[j] != jumon[0x0])\n                            newAry[str[j] == jumon[0x0] ? j + 0x1 : j] += ary[j];\n                    }\n                } else {\n                    if (j != 0x0 || str[j] != jumon[0x0])\n                        newAry[str[j] == jumon[0x0] ? j - 0x1 : j] += ary[j];\n                }\n            }\n        } else {\n            for (var j = 0x0; j < str['length']; j++) {\n                if (_0x5d4d37(0x5) === _0x5d4d37(0x6)) {\n                    for (var j = 0x0; j < str['length']; j++) {\n                        if (j != 0x0 || str[j] != jumon[0x0])\n                            newAry[str[j] == jumon[0x0] ? j - 0x1 : j] += ary[j];\n                    }\n                } else {\n                    if (j != ary[_0x5d4d37(0x4)] - 0x1 || str[j] != jumon[0x0])\n                        newAry[str[j] == jumon[0x0] ? j + 0x1 : j] += ary[j];\n                }\n            }\n        }\n        ary = newAry['concat']();\n    }\n    var golems = 0x0;\n    for (var i of ary)\n        golems += i;\n    console[_0x5d4d37(0x7)](golems);\n}\nfunction a0_0x3a58(AAxRhK, key) {\n    var stringArray = a0_0x44d7();\n    a0_0x3a58 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a58(AAxRhK, key);\n}\nMain(require('fs')[a0_0x4dfcf5(0x8)](a0_0x4dfcf5(0x9), 'utf8'));", "test_cases": [["3 4\nABC\nA L\nB L\nB R\nA R", "2"], ["8 3\nAABCBDBA\nA L\nB R\nA R", "5"], ["10 15\nSNCZWRCEWB\nB R\nR R\nE R\nW R\nZ L\nS R\nQ L\nW L\nB R\nC L\nA L\nN L\nE R\nZ L\nS L", "3"]], "original": "function Main(input){\n  var ary = [];\n  for(var i=0;i<input.split(\"\\n\")[0].split(\" \")[0];i++){\n  \tary.push(1);\n  }\n  var str = input.split(\"\\n\")[1];\n  for(var i=2;i<input.split(\"\\n\").length;i++){\n  \tvar jumon = input.split(\"\\n\")[i].split(\" \");\n    var newAry = [];\n    for(var j=0;j<ary.length;j++){\n        newAry.push(0);\n    }\n    if(jumon[1]==\"L\"){\n      for(var j=0;j<str.length;j++){\n        if(j!=0||str[j]!=jumon[0])newAry[str[j]==jumon[0]?j-1:j]+=ary[j];\n      }\n    }else{\n      for(var j=0;j<str.length;j++){\n        if(j!=ary.length-1||str[j]!=jumon[0])newAry[str[j]==jumon[0]?j+1:j]+=ary[j];\n      }\n    }\n    ary=newAry.concat();\n  }\n  var golems = 0;\n  for(var i of ary)golems+=i;\n  console.log(golems);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03141_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x22aea4 = a0_0x5084;\nfunction a0_0x2c12() {\n    var _0x17b2aa = [\n        'split',\n        'shift',\n        'aoki',\n        'taka',\n        'sort',\n        'WcBBg',\n        'axYYN',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2c12 = function () {\n        return _0x17b2aa;\n    };\n    return a0_0x2c12();\n}\nfunction Main(input) {\n    var _0x11bbaf = a0_0x5084;\n    var lines = input[_0x11bbaf(0x0)]('\\x0a');\n    var N = lines[_0x11bbaf(0x1)]() - 0x0;\n    var ryo = new Array(N);\n    for (var n = 0x0; n < N; n++) {\n        var nums = lines[n][_0x11bbaf(0x0)]('\\x20');\n        ryo[n] = {\n            'taka': nums[0x0] - 0x0,\n            'aoki': nums[0x1] - 0x0\n        };\n        ryo[n]['sa'] = ryo[n][_0x11bbaf(0x2)] - ryo[n][_0x11bbaf(0x3)];\n    }\n    ryo[_0x11bbaf(0x4)](function (a, b) {\n        var _0x113086 = a0_0x5084;\n        if ('wDUTW' !== 'dsviV') {\n            return b['sa'] - a['sa'];\n        } else {\n            if (n % 0x2 == 0x0) {\n                koufuku += ryo[n]['taka'];\n                ryo[n][_0x113086(0x3)] = 0x0;\n            } else {\n                koufuku -= ryo[n][_0x113086(0x2)];\n                ryo[n][_0x113086(0x2)] = 0x0;\n            }\n        }\n    });\n    ryo[_0x11bbaf(0x4)](function (a, b) {\n        var _0x39c5cf = a0_0x5084;\n        if ('mzZKF' !== _0x39c5cf(0x5)) {\n            return b[_0x39c5cf(0x3)] - a['taka'];\n        } else {\n            return b[_0x39c5cf(0x3)] - a['taka'];\n        }\n    });\n    var koufuku = 0x0;\n    for (var n = 0x0; n < N; n++) {\n        if (n % 0x2 == 0x0) {\n            if (_0x11bbaf(0x6) === 'axYYN') {\n                koufuku += ryo[n][_0x11bbaf(0x3)];\n                ryo[n][_0x11bbaf(0x3)] = 0x0;\n            } else {\n                koufuku -= ryo[n][_0x11bbaf(0x2)];\n                ryo[n][_0x11bbaf(0x2)] = 0x0;\n            }\n        } else {\n            koufuku -= ryo[n][_0x11bbaf(0x2)];\n            ryo[n][_0x11bbaf(0x2)] = 0x0;\n        }\n    }\n    console['log'](koufuku);\n}\nfunction a0_0x5084(ihIcAv, key) {\n    var stringArray = a0_0x2c12();\n    a0_0x5084 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5084(ihIcAv, key);\n}\nMain(require('fs')[a0_0x22aea4(0x7)](a0_0x22aea4(0x8), 'utf8'));", "test_cases": [["3\n10 10\n20 20\n30 30", "20"], ["3\n20 10\n20 20\n20 30", "20"], ["6\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000", "-2999999997"]], "original": "\"use strict\";\nfunction Main(input) {\n    var lines = input.split(\"\\n\");\n    var N = lines.shift() - 0;\n    var ryo = new Array(N);\n    for (var n = 0; n < N; n++) {\n        var nums = lines[n].split(\" \");\n        ryo[n] = {\n            taka : nums[0] - 0,\n            aoki : nums[1] - 0,\n        };\n        ryo[n].sa = ryo[n].aoki - ryo[n].taka;\n    }\n    ryo.sort(function(a, b) { return b.sa - a.sa; });\n    ryo.sort(function(a, b) { return b.taka - a.taka; });\n    var koufuku = 0;\n    for (var n = 0; n < N; n++) {\n        if (n % 2 == 0) {\n            koufuku += ryo[n].taka;\n            ryo[n].taka = 0;\n        } else {\n            koufuku -= ryo[n].aoki;\n            ryo[n].aoki = 0;\n        }\n    }\n    console.log(koufuku);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03150_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x57a0be = a0_0x54aa;\nfunction a0_0x22cc() {\n    const _0x5b0595 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'readline',\n        'createInterface',\n        'stdout',\n        'keyence',\n        'indexOf',\n        'log',\n        'YES',\n        'shift',\n        'slice'\n    ];\n    a0_0x22cc = function () {\n        return _0x5b0595;\n    };\n    return a0_0x22cc();\n}\nfunction a0_0x54aa(SwLaqc, key) {\n    const stringArray = a0_0x22cc();\n    a0_0x54aa = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x54aa(SwLaqc, key);\n}\nprocess[a0_0x57a0be(0x0)][a0_0x57a0be(0x1)]();\nprocess[a0_0x57a0be(0x0)][a0_0x57a0be(0x2)](a0_0x57a0be(0x3));\nvar reader = require(a0_0x57a0be(0x4))[a0_0x57a0be(0x5)]({\n    'input': process[a0_0x57a0be(0x0)],\n    'output': process[a0_0x57a0be(0x6)]\n});\nreader['on']('line', line => {\n    const _0x557dd5 = a0_0x54aa;\n    let word = line;\n    let arr = [\n        'k',\n        'e',\n        'y',\n        'e',\n        'n',\n        'c',\n        'e'\n    ];\n    let keyence = _0x557dd5(0x7);\n    if (word[_0x557dd5(0x8)]('keyence') != -0x1) {\n        console[_0x557dd5(0x9)](_0x557dd5(0xa));\n        return;\n    }\n    let str = '';\n    let ans = ![];\n    for (let i = 0x0; i < 0x6; i++) {\n        str += arr[_0x557dd5(0xb)]();\n        let tmp = keyence[_0x557dd5(0xc)](i + 0x1);\n        if (word[_0x557dd5(0x8)](str) != -0x1 && word['indexOf'](tmp) != -0x1) {\n            ans = !![];\n            break;\n        }\n    }\n    if (ans)\n        console[_0x557dd5(0x9)](_0x557dd5(0xa));\n    else\n        console['log']('NO');\n});", "test_cases": [["keyofscience", "YES"], ["mpyszsbznf", "NO"], ["ashlfyha", "NO"], ["keyence", "YES"]], "original": "\"use strict\";\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\n\nvar reader = require(\"readline\").createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on(\"line\", line => {\n  let word = line;\n  let arr = [\"k\", \"e\", \"y\", \"e\", \"n\", \"c\", \"e\"];\n  let keyence = \"keyence\";\n\n  if (word.indexOf(\"keyence\") != -1) {\n    console.log(\"YES\");\n    return;\n  }\n\n  let str = \"\";\n  let ans = false;\n  for (let i = 0; i < 6; i++) {\n    str += arr.shift();\n    let tmp = keyence.slice(i + 1);\n    if (word.indexOf(str) != -1 && word.indexOf(tmp) != -1) {\n     ans = true;\n     break;\n    }\n  }\n\n  if (ans) console.log(\"YES\");\n  else console.log(\"NO\");\n});\n", "language": "JavaScript"}
{"filename": "p03162_1", "type": "JavaScript", "obfuscated": "const a0_0x42ea0a = a0_0x5018;\nfunction main(input) {\n    const _0x8f0250 = a0_0x5018;\n    let tmp = input[_0x8f0250(0x0)]('\\x0a');\n    let vacations = [];\n    for (let i = 0x1; i < tmp[_0x8f0250(0x1)]; i++) {\n        let vacation = tmp[i][_0x8f0250(0x0)]('\\x20')['map'](element => parseInt(element, 0xa));\n        vacations['push'](vacation);\n    }\n    let dp = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let day = 0x0; day < vacations[_0x8f0250(0x1)]; day++) {\n        let vacation = vacations[day];\n        let new_dp = [\n            0x0,\n            0x0,\n            0x0\n        ];\n        for (let i = 0x0; i < 0x3; i++) {\n            if ('SbZuM' === _0x8f0250(0x2)) {\n                for (let j = 0x0; j < 0x3; j++) {\n                    if (i !== j) {\n                        if ('xdQxr' !== 'cAdsG') {\n                            new_dp[j] = Math[_0x8f0250(0x3)](new_dp[j], dp[i] + vacation[j]);\n                        } else {\n                            if (i !== j) {\n                                new_dp[j] = Math[_0x8f0250(0x3)](new_dp[j], dp[i] + vacation[j]);\n                            }\n                        }\n                    }\n                }\n            } else {\n                new_dp[j] = Math[_0x8f0250(0x3)](new_dp[j], dp[i] + vacation[j]);\n            }\n        }\n        dp = new_dp;\n    }\n    console[_0x8f0250(0x4)](Math[_0x8f0250(0x3)](dp[0x0], dp[0x1], dp[0x2]));\n}\nfunction a0_0x22da() {\n    const _0x34ccbc = [\n        'split',\n        'length',\n        'SbZuM',\n        'max',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x22da = function () {\n        return _0x34ccbc;\n    };\n    return a0_0x22da();\n}\nfunction a0_0x5018(abwQaf, key) {\n    const stringArray = a0_0x22da();\n    a0_0x5018 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5018(abwQaf, key);\n}\nmain(require('fs')[a0_0x42ea0a(0x5)]('/dev/stdin', a0_0x42ea0a(0x6)));", "test_cases": [["3\n10 40 70\n20 50 80\n30 60 90", "210"], ["1\n100 10 1", "100"], ["7\n6 7 8\n8 8 3\n2 5 2\n7 8 6\n4 6 8\n2 3 4\n7 5 1", "46"]], "original": "function main(input) {\n  let tmp = input.split(\"\\n\");\n  let vacations = [];\n  for (let i = 1; i < tmp.length; i++ ){\n    let vacation = tmp[i].split(\" \").map(element => parseInt(element, 10));\n    vacations.push(vacation);\n  }\n  let dp = [0, 0, 0];\n  for (let day = 0; day < vacations.length; day++) {\n    let vacation = vacations[day];\n    let new_dp = [0, 0, 0];\n    for (let i = 0; i < 3; i++) {\n      for(let j = 0; j < 3; j++) {\n        if (i !== j) {\n           new_dp[j] = Math.max(new_dp[j], dp[i] + vacation[j]);\n        }\n      }\n    }\n    dp = new_dp;\n  }\n  console.log(Math.max(dp[0], dp[1], dp[2]));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03206_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3325() {\n    const _0x27609e = [\n        'readFileSync',\n        '/dev/stdin',\n        'Christmas\\x20',\n        'Eve\\x20Eve\\x20Eve',\n        'Eve\\x20Eve',\n        'Eve',\n        'log'\n    ];\n    a0_0x3325 = function () {\n        return _0x27609e;\n    };\n    return a0_0x3325();\n}\nfunction a0_0x2d68(ZyBnpo, key) {\n    const stringArray = a0_0x3325();\n    a0_0x2d68 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d68(ZyBnpo, key);\n}\nconst a0_0x112731 = a0_0x2d68;\nconst i = require('fs')[a0_0x112731(0x0)](a0_0x112731(0x1), 'utf8');\nlet r = a0_0x112731(0x2);\nswitch (i) {\ncase '22':\n    r = r + a0_0x112731(0x3);\n    break;\ncase '23':\n    r = r + a0_0x112731(0x4);\n    break;\ncase '24':\n    r = r + a0_0x112731(0x5);\n    break;\ncase '25':\n    r = r;\n    break;\n}\nconsole[a0_0x112731(0x6)](r);", "test_cases": [["25", "Christmas"], ["22", "Christmas Eve Eve Eve"]], "original": "'use strict'\nconst i = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nlet r = 'Christmas ';\nswitch (i) {\n    case '22':\n        r = r + 'Eve Eve Eve';\n        break\n    case '23':\n        r = r + 'Eve Eve';\n        break\n    case '24':\n        r = r + 'Eve'\n        break\n    case '25':\n        r = r;\n        break\n}\nconsole.log(r);", "language": "JavaScript"}
{"filename": "p03210_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x219210 = a0_0x4cbf;\nfunction a0_0x4cbf(avBUqb, key) {\n    const stringArray = a0_0x3cd8();\n    a0_0x4cbf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cbf(avBUqb, key);\n}\nfunction a0_0x3cd8() {\n    const _0x5d40d2 = [\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3cd8 = function () {\n        return _0x5d40d2;\n    };\n    return a0_0x3cd8();\n}\nfunction Main(INPUT) {\n    const _0x1101df = a0_0x4cbf;\n    const N = INPUT[_0x1101df(0x0)]('\\x0a')[0x0];\n    if (N == 0x7 || N == 0x5 || N == 0x3) {\n        console[_0x1101df(0x1)]('YES');\n    } else {\n        console[_0x1101df(0x1)]('NO');\n    }\n}\nMain(require('fs')[a0_0x219210(0x2)]('/dev/stdin', a0_0x219210(0x3)));", "test_cases": [["5", "YES"], ["6", "NO"]], "original": "'use strict';\n\nfunction Main(INPUT) {\n    const N = INPUT.split(\"\\n\")[0];\n    if (N == 7 || N == 5 || N == 3) {\n        console.log(\"YES\");\n    } else {\n        console.log(\"NO\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03239_1", "type": "JavaScript", "obfuscated": "function a0_0x2343(OHiYQP, key) {\n    var stringArray = a0_0x436e();\n    a0_0x2343 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2343(OHiYQP, key);\n}\nvar a0_0x4f6cf9 = a0_0x2343;\nvar lines = [];\nvar result = Infinity;\nvar readline = require(a0_0x4f6cf9(0x0));\nfunction a0_0x436e() {\n    var _0x5147ab = [\n        'readline',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'shift',\n        'map',\n        'min',\n        'log',\n        'TLE'\n    ];\n    a0_0x436e = function () {\n        return _0x5147ab;\n    };\n    return a0_0x436e();\n}\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process[a0_0x4f6cf9(0x1)]\n});\nrl['on'](a0_0x4f6cf9(0x2), function (x) {\n    var _0x118cb1 = a0_0x2343;\n    lines[_0x118cb1(0x3)](x);\n});\nrl['on'](a0_0x4f6cf9(0x4), function () {\n    var _0x146dae = a0_0x2343;\n    var N = Number(lines[0x0][_0x146dae(0x5)]('\\x20')[0x0]);\n    var T = Number(lines[0x0][_0x146dae(0x5)]('\\x20')[0x1]);\n    lines[_0x146dae(0x6)]();\n    var array = lines[_0x146dae(0x7)](value => value[_0x146dae(0x5)]('\\x20')[_0x146dae(0x7)](value => Number(value)));\n    for (var i of array) {\n        if (i[0x1] <= T) {\n            result = Math[_0x146dae(0x8)](result, i[0x0]);\n        }\n    }\n    result !== Infinity ? console[_0x146dae(0x9)](result) : console[_0x146dae(0x9)](_0x146dae(0xa));\n});", "test_cases": [["3 70\n7 60\n1 80\n4 50", "4"], ["4 3\n1 1000\n2 4\n3 1000\n4 500", "TLE"], ["5 9\n25 8\n5 9\n4 10\n1000 1000\n6 1", "5"]], "original": "var lines = []; var result = Infinity;\nvar readline = require('readline');\n\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var T = Number(lines[0].split(\" \")[1]);\n\n    lines.shift();\n\n    var array = lines.map(value => value.split(\" \").map(value => Number(value)));\n\n    for (var i of array) {\n        if (i[1] <= T) { result = Math.min(result, i[0]); }\n    }\n    result !== Infinity ? console.log(result): console.log(\"TLE\");\n});", "language": "JavaScript"}
{"filename": "p03308_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1876d7 = a0_0x2094;\nfunction Main(input) {\n    const _0x593d32 = a0_0x2094;\n    const params = input[_0x593d32(0x0)]('\\x0a');\n    const n = Number(params[0x0]);\n    let max = 0x0;\n    let min = Math['pow'](0xa, 0xa);\n    params[0x1][_0x593d32(0x0)]('\\x20')['forEach'](val => {\n        const _0x406dca = a0_0x2094;\n        max = Math['max'](max, Number(val));\n        min = Math[_0x406dca(0x1)](min, Number(val));\n    });\n    console[_0x593d32(0x2)](max - min);\n}\nfunction a0_0x2094(lsFNtO, key) {\n    const stringArray = a0_0x4524();\n    a0_0x2094 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2094(lsFNtO, key);\n}\nfunction a0_0x4524() {\n    const _0x1fff64 = [\n        'split',\n        'min',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4524 = function () {\n        return _0x1fff64;\n    };\n    return a0_0x4524();\n}\nMain(require('fs')['readFileSync'](a0_0x1876d7(0x3), a0_0x1876d7(0x4)));", "test_cases": [["4\n1 4 6 3", "5"], ["2\n1000000000 1", "999999999"], ["5\n1 1 1 1 1", "0"]], "original": "// https://atcoder.jp/contests/abc102/tasks/abc102_b\n\"use strict\"\nfunction Main(input) {\n  const params = input.split('\\n')\n  const n = Number(params[0]);\n  let max = 0;\n  let min = Math.pow(10, 10);\n  params[1].split(' ').forEach(val => {\n    max = Math.max(max, Number(val));\n    min = Math.min(min, Number(val));\n  });\n  console.log(max -　min);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03325_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x42f0(ZLlwHN, key) {\n    const stringArray = a0_0x517f();\n    a0_0x42f0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x42f0(ZLlwHN, key);\n}\nfunction a0_0x517f() {\n    const _0x2c073a = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x517f = function () {\n        return _0x2c073a;\n    };\n    return a0_0x517f();\n}\nconst a0_0x1092a8 = a0_0x42f0;\nfunction main(s) {\n    const _0x13a67b = a0_0x42f0;\n    const a = s[_0x13a67b(0x0)]('\\x0a')[0x1][_0x13a67b(0x0)]('\\x20')['map'](n => Number(n));\n    let ans = 0x0;\n    for (let n of a) {\n        while (n % 0x2 === 0x0) {\n            n = n / 0x2;\n            ans += 0x1;\n        }\n    }\n    console[_0x13a67b(0x1)](ans);\n}\nmain(require('fs')['readFileSync'](a0_0x1092a8(0x2), a0_0x1092a8(0x3)));", "test_cases": [["3\n5 2 4", "3"], ["4\n631 577 243 199", "0"], ["10\n2184 2126 1721 1800 1024 2528 3360 1945 1280 1776", "39"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const a = s.split('\\n')[1].split(' ').map(n => Number(n));\n\n  let ans = 0;\n\n  for (let n of a) {\n    while (n % 2 === 0) {\n      n = n / 2;\n      ans += 1;\n    }\n  }\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03352_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x115942 = a0_0x4d31;\nfunction a0_0x4d31(DLrzmv, key) {\n    const stringArray = a0_0x2f8e();\n    a0_0x4d31 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4d31(DLrzmv, key);\n}\nfunction main(s) {\n    const _0xc4add0 = a0_0x4d31;\n    const x = Number(s);\n    const nums = [...Array(0x1f)][_0xc4add0(0x0)]((x, i) => i + 0x1);\n    nums[_0xc4add0(0x1)]();\n    const max_ary = [0x1];\n    for (let i = 0x0; i < nums[_0xc4add0(0x2)]; i++) {\n        let j = 0x2;\n        let n = nums[i];\n        let max = Math[_0xc4add0(0x3)](n, j);\n        if (max > x)\n            continue;\n        while (max <= x) {\n            j += 0x1;\n            max = Math[_0xc4add0(0x3)](n, j);\n        }\n        max = Math[_0xc4add0(0x3)](n, j - 0x1);\n        max_ary['push'](max);\n    }\n    const ans = Math['max'](...max_ary);\n    console[_0xc4add0(0x4)](ans);\n}\nmain(require('fs')[a0_0x115942(0x5)](a0_0x115942(0x6), a0_0x115942(0x7)));\nfunction a0_0x2f8e() {\n    const _0x4f7a06 = [\n        'map',\n        'shift',\n        'length',\n        'pow',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2f8e = function () {\n        return _0x4f7a06;\n    };\n    return a0_0x2f8e();\n}", "test_cases": [["10", "9"], ["1", "1"], ["999", "961"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const x = Number(s);\n  const nums = [...Array(31)].map((x, i) => i + 1);\n  nums.shift();\n  const max_ary = [1];\n\n  for (let i = 0; i < nums.length; i++) {\n    let j = 2;\n    let n = nums[i];\n    let max = Math.pow(n, j);\n    if (max > x) continue;\n    while (max <= x) {\n      j += 1;\n      max = Math.pow(n, j);\n    }\n    max = Math.pow(n, j - 1);\n    max_ary.push(max);\n  }\n\n  const ans = Math.max(...max_ary);\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03434_1", "type": "JavaScript", "obfuscated": "function a0_0x2469(TqXDTb, key) {\n    const stringArray = a0_0x3233();\n    a0_0x2469 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2469(TqXDTb, key);\n}\nfunction a0_0x3233() {\n    const _0x3ccf05 = [\n        'split',\n        'map',\n        'sort',\n        'forEach',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3233 = function () {\n        return _0x3ccf05;\n    };\n    return a0_0x3233();\n}\nconst a0_0x3c12f8 = a0_0x2469;\nfunction main(input) {\n    const _0x18e216 = a0_0x2469;\n    const args = input[_0x18e216(0x0)]('\\x0a');\n    const N = parseInt(args[0x0], 0xa);\n    const sorted = args[0x1]['split']('\\x20')[_0x18e216(0x1)](v => parseInt(v))[_0x18e216(0x2)]((a, b) => b - a);\n    var alice = 0x0;\n    var bob = 0x0;\n    sorted[_0x18e216(0x3)]((v, i) => {\n        if ((i + 0x1) % 0x2 == 0x0) {\n            bob += v;\n        } else {\n            alice += v;\n        }\n    });\n    console[_0x18e216(0x4)](alice - bob);\n}\nmain(require('fs')['readFileSync'](a0_0x3c12f8(0x5), a0_0x3c12f8(0x6)));", "test_cases": [["2\n3 1", "2"], ["3\n2 7 4", "5"], ["4\n20 18 2 18", "18"]], "original": "function main(input) {\n  const args = input.split('\\n');\n  const N = parseInt(args[0], 10);\n  const sorted = args[1].split(' ').map(v => parseInt(v)).sort((a, b) => b - a);\n  var alice = 0;\n  var bob = 0;\n  \n  sorted.forEach((v, i) => {\n    if ((i + 1) % 2 == 0) {\n      bob += v;\n    } else {\n      alice += v;\n    }\n  });\n  console.log(alice - bob);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03479_1", "type": "JavaScript", "obfuscated": "var a0_0x4028e5 = a0_0x4e81;\nvar toInt = x => parseInt(x, 0xa);\nfunction a0_0xde7a() {\n    var _0x2f6bb2 = [\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split'\n    ];\n    a0_0xde7a = function () {\n        return _0x2f6bb2;\n    };\n    return a0_0xde7a();\n}\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var _0x207372 = a0_0x4e81;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x207372(0x0)]; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var _0x32fac6 = a0_0x4e81;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x32fac6(0x0)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')[a0_0x4028e5(0x1)](a0_0x4028e5(0x2), a0_0x4028e5(0x3)));\nfunction a0_0x4e81(BJpDUd, key) {\n    var stringArray = a0_0xde7a();\n    a0_0x4e81 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e81(BJpDUd, key);\n}\nfunction Main(input) {\n    var _0x60c4a8 = a0_0x4e81;\n    var input = input[_0x60c4a8(0x4)]('\\x0a');\n    var nk = toIntArr(input[0x0]['split']('\\x20'));\n    var x = nk[0x0];\n    var y = nk[0x1];\n    var a = y / x;\n    var temp = 0x1;\n    var ans = 0x0;\n    while (temp <= a) {\n        temp *= 0x2;\n        ans++;\n    }\n    console['log'](ans);\n}", "test_cases": [["3 20", "3"], ["25 100", "3"], ["314159265 358979323846264338", "31"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar nk = toIntArr(input[0].split(' '));\n\tvar x = nk[0];\n\tvar y = nk[1];\n\tvar a = y/x;\n  \tvar temp = 1;\n \tvar ans = 0;\n    while(temp<=a){\n    \ttemp *= 2;\n      \tans++;\n      //console.log(ans,temp)\n    }\n\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03493_1", "type": "JavaScript", "obfuscated": "var a0_0x1ff1ce = a0_0x790e;\nfunction Main(input) {\n    var _0x76fd1 = a0_0x790e;\n    var args = input[_0x76fd1(0x0)]('\\x20');\n    var num = parseInt(args[0x0], 0xa);\n    var str = num['toString'](0xa);\n    var count = 0x0;\n    for (var i = 0x0; i < str[_0x76fd1(0x1)]; i++) {\n        if (str[i] == '1') {\n            count += 0x1;\n        }\n    }\n    console[_0x76fd1(0x2)](count);\n}\nfunction a0_0x790e(YxLslK, key) {\n    var stringArray = a0_0x3d66();\n    a0_0x790e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x790e(YxLslK, key);\n}\nMain(require('fs')['readFileSync'](a0_0x1ff1ce(0x3), a0_0x1ff1ce(0x4)));\nfunction a0_0x3d66() {\n    var _0x4b1a06 = [\n        'split',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3d66 = function () {\n        return _0x4b1a06;\n    };\n    return a0_0x3d66();\n}", "test_cases": [["101", "2"], ["000", "0"]], "original": "function Main(input){\n  \tvar args = input.split(\" \");\n  \tvar num = parseInt(args[0], 10); // 10進数\n\tvar str = num.toString(10);\n  \tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n      if(str[i]==\"1\"){\n        count += 1;\n      }\n    }\n  \tconsole.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03611_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xea279c = a0_0x303f;\nfunction a0_0x4347() {\n    const _0x429c5e = [\n        'trim',\n        'split',\n        'map',\n        'has',\n        'add',\n        'abs',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x4347 = function () {\n        return _0x429c5e;\n    };\n    return a0_0x4347();\n}\nconst main = arg => {\n    const _0x4fd113 = a0_0x303f;\n    arg = arg[_0x4fd113(0x0)]()[_0x4fd113(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const a = arg[0x1]['split']('\\x20')[_0x4fd113(0x2)](n => parseInt(n))['sort']((a, b) => a - b);\n    const set = new Set();\n    let max = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        let cnt = 0x0;\n        if (set[_0x4fd113(0x3)](a[i])) {\n            continue;\n        }\n        set[_0x4fd113(0x4)](a[i]);\n        for (let j = 0x0; j < N; j++) {\n            if (Math[_0x4fd113(0x5)](a[j] - a[i]) <= 0x1) {\n                cnt++;\n            }\n        }\n        if (cnt > max) {\n            max = cnt;\n        }\n    }\n    console[_0x4fd113(0x6)](max);\n};\nfunction a0_0x303f(DCSYoY, key) {\n    const stringArray = a0_0x4347();\n    a0_0x303f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x303f(DCSYoY, key);\n}\nmain(require('fs')[a0_0xea279c(0x7)]('/dev/stdin', 'utf8'));", "test_cases": [["7\n3 1 4 1 5 9 2", "4"], ["10\n0 1 2 3 4 5 6 7 8 9", "3"], ["1\n99999", "1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const a = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>a-b);\n    \n    const set = new Set();\n    \n    let max = 0;\n    \n    for(let i=0; i<N; i++) {\n        let cnt = 0;\n        \n        if(set.has(a[i])) {\n            continue;\n        }\n        \n        set.add(a[i]);\n        \n        for(let j=0; j<N; j++) {\n            if(Math.abs(a[j] - a[i]) <= 1) {\n                cnt++;\n            }\n        }\n        \n        if(cnt > max) {\n            max = cnt;\n        }\n    }\n    \n    console.log(max);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03636_1", "type": "JavaScript", "obfuscated": "var a0_0x4a153b = a0_0xae40;\nfunction a0_0xae40(BywQYN, key) {\n    var stringArray = a0_0x2438();\n    a0_0xae40 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xae40(BywQYN, key);\n}\nfunction Main(input) {\n    var _0x2e20b8 = a0_0xae40;\n    input = String(input);\n    var len = input['length'];\n    var first = input['substring'](0x0, 0x1);\n    if (len < 0x4) {\n        var mid = 0x1;\n    } else {\n        var mid = len - 0x2;\n    }\n    var last = input[_0x2e20b8(0x0)](len - 0x1, len);\n    console[_0x2e20b8(0x1)]('%s', first + String(mid) + last);\n}\nMain(require('fs')[a0_0x4a153b(0x2)](a0_0x4a153b(0x3), a0_0x4a153b(0x4)));\nfunction a0_0x2438() {\n    var _0x2d6337 = [\n        'substring',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2438 = function () {\n        return _0x2d6337;\n    };\n    return a0_0x2438();\n}", "test_cases": [["internationalization", "i18n"], ["smiles", "s4s"], ["xyz", "x1z"]], "original": "function Main(input){\n    input = String(input);\n\n    var len = input.length;\n    var first = input.substring(0,1);\n\n    if(len < 4){\n        var mid = 1;\n    }else{\n        var mid = len - 2;\n    }\n\n    var last = input.substring(len - 1, len);\n\n    console.log('%s', first + String(mid) + last);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03834_1", "type": "JavaScript", "obfuscated": "var a0_0x5a2981 = a0_0x4cae;\nfunction a0_0x459b() {\n    var _0xcc709e = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'ascii',\n        'data',\n        'end',\n        'split',\n        'join',\n        'stdout'\n    ];\n    a0_0x459b = function () {\n        return _0xcc709e;\n    };\n    return a0_0x459b();\n}\nprocess[a0_0x5a2981(0x0)][a0_0x5a2981(0x1)]();\nprocess[a0_0x5a2981(0x0)][a0_0x5a2981(0x2)](a0_0x5a2981(0x3));\nvar input_stdin = '';\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess[a0_0x5a2981(0x0)]['on'](a0_0x5a2981(0x4), function (data) {\n    input_stdin += data;\n});\nfunction a0_0x4cae(yySNhu, key) {\n    var stringArray = a0_0x459b();\n    a0_0x4cae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cae(yySNhu, key);\n}\nprocess['stdin']['on'](a0_0x5a2981(0x5), function () {\n    var _0x2ba621 = a0_0x4cae;\n    input_stdin_array = input_stdin[_0x2ba621(0x6)]('\\x0a');\n    main();\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var _0x56e20a = a0_0x4cae;\n    var s = readLine();\n    s = s[_0x56e20a(0x6)](',');\n    s = s[_0x56e20a(0x7)]('\\x20');\n    process[_0x56e20a(0x8)]['write'](s);\n}", "test_cases": [["happy,newyear,enjoy", "happy newyear enjoy"], ["haiku,atcoder,tasks", "haiku atcoder tasks"], ["abcde,fghihgf,edcba", "abcde fghihgf edcba"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\n\nfunction main() {\n    var s = readLine();\n    s = s.split(\",\");\n    s = s.join(\" \");\n    \n    process.stdout.write(s);\n}\n", "language": "JavaScript"}
{"filename": "p04029_1", "type": "JavaScript", "obfuscated": "const a0_0x456929 = a0_0x6cac;\nfunction main(input) {\n    const _0x17ae05 = a0_0x6cac;\n    const n = parseInt(input, 0xa);\n    let sum = 0x0;\n    for (let i = 0x1; i <= n; i++) {\n        sum += i;\n    }\n    console[_0x17ae05(0x0)](sum);\n}\nmain(require('fs')[a0_0x456929(0x1)](a0_0x456929(0x2), a0_0x456929(0x3)));\nfunction a0_0x6cac(JVFFkz, key) {\n    const stringArray = a0_0xe4fe();\n    a0_0x6cac = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x6cac(JVFFkz, key);\n}\nfunction a0_0xe4fe() {\n    const _0x315834 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xe4fe = function () {\n        return _0x315834;\n    };\n    return a0_0xe4fe();\n}", "test_cases": [["3", "6"], ["10", "55"], ["1", "1"]], "original": "function main(input) {\n  const n = parseInt(input, 10);\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  console.log(sum);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00002_1", "type": "JavaScript", "obfuscated": "function a0_0x5789(KqwinQ, key) {\n    var stringArray = a0_0x4b95();\n    a0_0x5789 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5789(KqwinQ, key);\n}\nvar a0_0xcba5db = a0_0x5789;\nprocess[a0_0xcba5db(0x0)][a0_0xcba5db(0x1)]();\nprocess['stdin']['setEncoding']('utf8');\nfunction a0_0x4b95() {\n    var _0x26ffeb = [\n        'stdin',\n        'resume',\n        'data',\n        'trim',\n        'split',\n        'toString',\n        'length',\n        'join'\n    ];\n    a0_0x4b95 = function () {\n        return _0x26ffeb;\n    };\n    return a0_0x4b95();\n}\nprocess[a0_0xcba5db(0x0)]['on'](a0_0xcba5db(0x2), function (chunk) {\n    var _0xeefb22 = a0_0x5789;\n    var nums = chunk[_0xeefb22(0x3)]()[_0xeefb22(0x4)]('\\x0a');\n    function digit(e) {\n        var _0x4a687c = a0_0x5789;\n        var a = e[_0x4a687c(0x4)]('\\x20');\n        var wa = parseInt(a[0x0]) + parseInt(a[0x1]);\n        return wa[_0x4a687c(0x5)]()[_0x4a687c(0x6)];\n    }\n    console['log'](nums['map'](digit)[_0xeefb22(0x7)]('\\x0a'));\n});", "test_cases": [["5 7\n1 99\n1000 999", "2\n3\n4"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on(\"data\",function(chunk){\n   var nums=chunk.trim().split(\"\\n\");\n   function digit (e){\n       var a=e.split(\" \");\n       var wa = parseInt(a[0]) + parseInt(a[1]);\n       return  wa.toString().length;\n       }\n   console.log(nums.map(digit).join(\"\\n\"));\n   \n});", "language": "JavaScript"}
{"filename": "p02255_1", "type": "JavaScript", "obfuscated": "function a0_0x4575() {\n    const _0x3c107f = [\n        'split',\n        'map',\n        'log',\n        'join',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x4575 = function () {\n        return _0x3c107f;\n    };\n    return a0_0x4575();\n}\nfunction a0_0x5d91(ZnNPfi, key) {\n    const stringArray = a0_0x4575();\n    a0_0x5d91 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5d91(ZnNPfi, key);\n}\nconst a0_0x4ef1f6 = a0_0x5d91;\nfunction main(lines) {\n    const _0xedba24 = a0_0x5d91;\n    const n = lines[_0xedba24(0x0)]('\\x0a')[0x0];\n    const An = lines[_0xedba24(0x0)]('\\x0a')[0x1][_0xedba24(0x0)]('\\x20')[_0xedba24(0x1)](Number);\n    console[_0xedba24(0x2)](An[_0xedba24(0x3)]('\\x20'));\n    for (let i = 0x1; i < n; i++) {\n        value = An[i];\n        let j = i - 0x1;\n        while (j >= 0x0 && value < An[j]) {\n            An[j + 0x1] = An[j];\n            j--;\n        }\n        An[j + 0x1] = value;\n        console['log'](An['join']('\\x20'));\n    }\n}\nmain(require('fs')[a0_0x4ef1f6(0x4)]('/dev/stdin', a0_0x4ef1f6(0x5)));", "test_cases": [["6\n5 2 4 6 1 3", "5 2 4 6 1 3\n2 5 4 6 1 3\n2 4 5 6 1 3\n2 4 5 6 1 3\n1 2 4 5 6 3\n1 2 3 4 5 6"], ["3\n1 2 3", "1 2 3\n1 2 3\n1 2 3"]], "original": "function main(lines) {\n    const n = lines.split('\\n')[0]\n    const An = lines.split('\\n')[1].split(' ').map(Number)\n    // 初期の配列\n    console.log(An.join(' '))\n\n    for(let i=1; i<n; i++){\n        value = An[i]\n        let j = i - 1\n        while(j>=0 && value<An[j]){\n            An[j+1] = An[j]\n            j--\n        }\n\n        An[j+1] = value\n\n        console.log(An.join(' '))\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02270_1", "type": "JavaScript", "obfuscated": "function a0_0x22e0() {\n    const _0x16e5e6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'floor'\n    ];\n    a0_0x22e0 = function () {\n        return _0x16e5e6;\n    };\n    return a0_0x22e0();\n}\nfunction a0_0xb7e6(ekeZCg, key) {\n    const stringArray = a0_0x22e0();\n    a0_0xb7e6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xb7e6(ekeZCg, key);\n}\n(function main() {\n    const _0x5f36bd = a0_0xb7e6;\n    let lines = require('fs')[_0x5f36bd(0x0)](_0x5f36bd(0x1), _0x5f36bd(0x2))[_0x5f36bd(0x3)]()[_0x5f36bd(0x4)]('\\x0a');\n    let [n, k] = lines[_0x5f36bd(0x5)]()[_0x5f36bd(0x4)]('\\x20')[_0x5f36bd(0x6)](Number);\n    let w = lines[_0x5f36bd(0x6)](Number);\n    const canAllStack = p => {\n        let cnt = 0x0, sum = 0x0;\n        for (let i = 0x0; i < k; i++) {\n            for (sum = 0x0; sum + w[cnt] <= p;) {\n                sum += w[cnt++];\n                if (cnt === n)\n                    return n;\n            }\n        }\n        return cnt;\n    };\n    let mid, left = 0x0, right = 0x3b9aca00;\n    while (right - left > 0x1) {\n        mid = (right + left) / 0x2;\n        if (canAllStack(mid) >= n)\n            right = mid;\n        else\n            left = mid;\n    }\n    console[_0x5f36bd(0x7)](Math[_0x5f36bd(0x8)](right));\n}());", "test_cases": [["5 3\n8\n1\n7\n3\n9", "10"], ["4 2\n1\n2\n2\n6", "6"]], "original": "(function main(){\n  let lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\");\n  let [n, k] = lines.shift().split(' ').map(Number);\n  let w = lines.map(Number);\n\n  const canAllStack = (p) => {\n    let cnt = 0, sum = 0;\n    for (let i = 0; i < k; i++) {\n      for (sum = 0; sum + w[cnt] <= p;) {\n        sum += w[cnt++]\n        if (cnt === n) return n;\n      }\n    }\n    return cnt;\n  };\n\n  let mid, left = 0, right = 1e9;\n  while (right - left > 1) {\n    mid = (right + left) / 2;\n    if (canAllStack(mid) >= n) right = mid;\n    else left = mid;\n  }\n  console.log(Math.floor(right));\n})();\n", "language": "JavaScript"}
{"filename": "p02408_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x250eb2 = a0_0x4985;\nfunction a0_0x4985(leOyBz, key) {\n    var stringArray = a0_0x2ecf();\n    a0_0x4985 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4985(leOyBz, key);\n}\nfunction a0_0x2ecf() {\n    var _0x519504 = [\n        'toString',\n        'split',\n        'join',\n        'forEach',\n        'shift',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2ecf = function () {\n        return _0x519504;\n    };\n    return a0_0x2ecf();\n}\n(function (stdin) {\n    var _0x1872e8 = a0_0x4985;\n    var lines = stdin[_0x1872e8(0x0)]()[_0x1872e8(0x1)]('\\x0a');\n    var result = function (data) {\n        var _0x1136a5 = a0_0x4985;\n        return new Deck()['filter'](function (v) {\n            return this['indexOf'](v) === -0x1;\n        }, data)[_0x1136a5(0x2)]('\\x0a');\n        function Deck() {\n            var _0x1801e8 = a0_0x4985;\n            var deck = [];\n            [\n                'S',\n                'H',\n                'C',\n                'D'\n            ][_0x1801e8(0x3)](function (v) {\n                for (var i = 0x0; i < 0xd; i++)\n                    deck['push']([\n                        v,\n                        i + 0x1\n                    ]['join']('\\x20'));\n            });\n            return deck;\n        }\n    }(lines['slice'](0x0, lines[_0x1872e8(0x4)]()));\n    if (result[_0x1872e8(0x5)] !== 0x0)\n        console[_0x1872e8(0x6)](result);\n}(require('fs')[a0_0x250eb2(0x7)](a0_0x250eb2(0x8), 'utf8')));", "test_cases": [["47\nS 10\nS 11\nS 12\nS 13\nH 1\nH 2\nS 6\nS 7\nS 8\nS 9\nH 6\nH 8\nH 9\nH 10\nH 11\nH 4\nH 5\nS 2\nS 3\nS 4\nS 5\nH 12\nH 13\nC 1\nC 2\nD 1\nD 2\nD 3\nD 4\nD 5\nD 6\nD 7\nC 3\nC 4\nC 5\nC 6\nC 7\nC 8\nC 9\nC 10\nC 11\nC 13\nD 9\nD 10\nD 11\nD 12\nD 13", "S 1\nH 3\nH 7\nC 12\nD 8"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString().split('\\n');\n  var result = (function(data) {\n    return new Deck().filter(function(v) {\n      return this.indexOf(v) === -1;\n    },data).join('\\n');\n\n    function Deck() {\n      var deck = [];\n      ['S','H','C','D'].forEach(function(v) { \n        for (var i = 0; i < 13;i++)\n          deck.push([v,i + 1].join(' '));\n      });\n      return deck;\n    }\n  }(lines.slice(0,lines.shift())\n    ));\n\n  if(result.length !== 0) console.log(result);\n  \n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02547_1", "type": "JavaScript", "obfuscated": "function a0_0x2601(WfnrIw, key) {\n    const stringArray = a0_0x2ef9();\n    a0_0x2601 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2601(WfnrIw, key);\n}\nconst a0_0x4da4ed = a0_0x2601;\nlet lines = [];\nfunction a0_0x2ef9() {\n    const _0x2e00db = [\n        'createInterface',\n        'line',\n        'close',\n        'split',\n        'push',\n        'Yes',\n        'log'\n    ];\n    a0_0x2ef9 = function () {\n        return _0x2e00db;\n    };\n    return a0_0x2ef9();\n}\nlet reader = require('readline')[a0_0x4da4ed(0x0)]({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on'](a0_0x4da4ed(0x1), function (line) {\n    lines['push'](line);\n});\nreader['on'](a0_0x4da4ed(0x2), function () {\n    const _0x50f595 = a0_0x2601;\n    let d1 = [];\n    let d2 = [];\n    const n = lines[0x0];\n    let zorome = 'No';\n    for (let i = 0x1; i < n; i++) {\n        d1['push'](lines[i][_0x50f595(0x3)]('\\x20')[0x0]);\n        d2[_0x50f595(0x4)](lines[i][_0x50f595(0x3)]('\\x20')[0x1]);\n    }\n    for (let i = 0x0; i < n - 0x2; i++) {\n        if (d1[i] == d2[i]) {\n            if (d1[i + 0x1] == d2[i + 0x1]) {\n                if (d1[i + 0x2] == d2[i + 0x2]) {\n                    zorome = _0x50f595(0x5);\n                    break;\n                }\n            }\n        }\n    }\n    console[_0x50f595(0x6)](zorome);\n});", "test_cases": [["5\n1 2\n6 6\n4 4\n3 3\n3 2", "Yes"], ["5\n1 1\n2 2\n3 4\n5 5\n6 6", "No"], ["6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6", "Yes"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n// 標準入力の読み込み\nreader.on('line', function(line) {\n    lines.push(line);\n});\n\nreader.on('close', function() {\n    let d1 = [];\n    let d2 = [];\n    // 処理の記述\n    const n = lines[0];\n    \n    let zorome = 'No';\n    for (let i = 1; i < n; i++) {\n        d1.push(lines[i].split(' ')[0]);\n        d2.push(lines[i].split(' ')[1]);\n    }\n    for (let i = 0; i < n - 2; i++) {\n        if (d1[i] == d2[i]) {\n            if (d1[i+1] == d2[i+1]) {\n                if (d1[i+2] == d2[i+2]) {\n                    zorome = 'Yes';\n                    break;\n                }\n            }\n        }\n\n    }\n\n    // 表示\n    console.log(zorome);\n});", "language": "JavaScript"}
{"filename": "p02629_1", "type": "JavaScript", "obfuscated": "const a0_0x1dcb37 = a0_0x2d12;\nfunction a0_0x2d12(AyoVPu, key) {\n    const stringArray = a0_0x2b5c();\n    a0_0x2d12 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d12(AyoVPu, key);\n}\nfunction Main(inputs) {\n    const _0x48fcf0 = a0_0x2d12;\n    const inputline = inputs[_0x48fcf0(0x0)]('\\x0a')[_0x48fcf0(0x1)](x => parseInt(x, 0xa));\n    const line = inputline[0x0];\n    function base26(number) {\n        const _0x456323 = a0_0x2d12;\n        let remainder26 = number % 0x1a;\n        let division26 = Math[_0x456323(0x2)](number / 0x1a);\n        let output = remainder26 != 0x0 ? String[_0x456323(0x3)](0x40 + remainder26) : (--division26, 'Z');\n        return output = division26 != 0x0 ? base26(division26) + output : output;\n    }\n    console['log'](base26(line)[_0x48fcf0(0x4)]());\n}\nfunction a0_0x2b5c() {\n    const _0xb05fbd = [\n        'split',\n        'map',\n        'floor',\n        'fromCharCode',\n        'toLowerCase',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2b5c = function () {\n        return _0xb05fbd;\n    };\n    return a0_0x2b5c();\n}\nMain(require('fs')['readFileSync'](a0_0x1dcb37(0x5), a0_0x1dcb37(0x6)));", "test_cases": [["2", "b"], ["27", "aa"], ["123456789", "jjddja"]], "original": "function Main(inputs) {\n\tconst inputline = inputs.split(\"\\n\").map(x => parseInt(x, 10));\n  \tconst line = inputline[0];\n  \n  \tfunction base26(number) {\n    \tlet remainder26 = number % 26;\n    \tlet division26 = Math.floor(number / 26) ;\n    \tlet output = (remainder26 != 0) ? String.fromCharCode(64 + remainder26) : (--division26, 'Z');\n      \treturn output = (division26 != 0) ? base26(division26) + output : output;\n\t}\n  \n  \tconsole.log(base26(line).toLowerCase());\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02659_1", "type": "JavaScript", "obfuscated": "var a0_0x2b7cbb = a0_0x2922;\nfunction a0_0x2922(ggyNTP, key) {\n    var stringArray = a0_0x30ea();\n    a0_0x2922 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2922(ggyNTP, key);\n}\nfunction Main(input) {\n    var _0x41cfb8 = a0_0x2922;\n    input = input[_0x41cfb8(0x0)]('\\x0a');\n    var A = Number(input[0x0][_0x41cfb8(0x0)]('\\x20')[0x0]);\n    var B = Number(input[0x0][_0x41cfb8(0x0)]('\\x20')[0x1]);\n    var ans = BigInt(Math[_0x41cfb8(0x1)](A * B));\n    var ans = ans[_0x41cfb8(0x2)]();\n    console[_0x41cfb8(0x3)]('%s', ans);\n    return ans;\n}\nfunction a0_0x30ea() {\n    var _0x391d07 = [\n        'split',\n        'floor',\n        'toString',\n        'log',\n        'input',\n        'getElementById',\n        'output',\n        'result',\n        'innerHTML',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x30ea = function () {\n        return _0x391d07;\n    };\n    return a0_0x30ea();\n}\nfunction debug(n) {\n    var _0x151e78 = a0_0x2922;\n    var input = document['getElementById'](_0x151e78(0x4) + n)['value'];\n    var ans = Main(input);\n    var result = 'WA';\n    if (ans == document[_0x151e78(0x5)](_0x151e78(0x6) + n)['value'][_0x151e78(0x0)]('\\x0a')[0x0]) {\n        result = 'AC';\n    }\n    document['getElementById'](_0x151e78(0x7) + n)[_0x151e78(0x8)] = result;\n}\nMain(require('fs')[a0_0x2b7cbb(0x9)](a0_0x2b7cbb(0xa), a0_0x2b7cbb(0xb)));", "test_cases": [["198 1.10", "217"], ["1 0.01", "0"], ["1000000000000000 9.99", "9990000000000000"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var A = Number(input[0].split(\" \")[0]);\n  var B = Number(input[0].split(\" \")[1]);\n  var ans = BigInt(Math.floor(A * B));\n  var ans = ans.toString();\n\n\n  console.log('%s', ans);\n  return ans;\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02711_1", "type": "JavaScript", "obfuscated": "const a0_0x27448c = a0_0xcddd;\nconst Main = input => {\n    const _0x20b07e = a0_0xcddd;\n    const tmp = input[_0x20b07e(0x0)]()[_0x20b07e(0x1)]('');\n    let result = '';\n    if (tmp[_0x20b07e(0x2)]('7') === -0x1) {\n        result = 'No';\n    } else {\n        result = _0x20b07e(0x3);\n    }\n    console[_0x20b07e(0x4)](result);\n    return result;\n};\nfunction a0_0xcddd(IpWpee, key) {\n    const stringArray = a0_0x7675();\n    a0_0xcddd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xcddd(IpWpee, key);\n}\nMain(require('fs')[a0_0x27448c(0x5)](a0_0x27448c(0x6), a0_0x27448c(0x7)));\nfunction a0_0x7675() {\n    const _0x4b6253 = [\n        'trim',\n        'split',\n        'indexOf',\n        'Yes',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7675 = function () {\n        return _0x4b6253;\n    };\n    return a0_0x7675();\n}", "test_cases": [["117", "Yes"], ["123", "No"], ["777", "Yes"]], "original": "const Main = (input) => {\n  const tmp = input.trim().split('')\n\n  let result = ''\n\n  if (tmp.indexOf('7') === -1) {\n    result = 'No'\n  } else {\n    result = 'Yes'\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02718_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x13ab(GOMVLb, key) {\n    const stringArray = a0_0xaee4();\n    a0_0x13ab = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13ab(GOMVLb, key);\n}\nconst a0_0x1dd804 = a0_0x13ab;\nfunction a0_0xaee4() {\n    const _0x2b92cc = [\n        'split',\n        'zZxNs',\n        'log',\n        'Yes',\n        'qwRcN',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xaee4 = function () {\n        return _0x2b92cc;\n    };\n    return a0_0xaee4();\n}\nfunction main(input) {\n    const _0x5779f7 = a0_0x13ab;\n    const n = Number(input[_0x5779f7(0x0)]('\\x0a')[0x0][_0x5779f7(0x0)]('\\x20')[0x0]);\n    const m = Number(input[_0x5779f7(0x0)]('\\x0a')[0x0][_0x5779f7(0x0)]('\\x20')[0x1]);\n    let a = [];\n    let sum = 0x0;\n    for (let index = 0x0; index < n; index++) {\n        a[index] = input[_0x5779f7(0x0)]('\\x0a')[0x1][_0x5779f7(0x0)]('\\x20')[index];\n        sum += Number(a[index]);\n    }\n    let count = 0x0;\n    for (let index = 0x0; index < n; index++) {\n        if (a[index] * (0x4 * m) - sum > 0x0) {\n            count++;\n        }\n    }\n    if (count >= m) {\n        if (_0x5779f7(0x1) !== 'XQHQy') {\n            console[_0x5779f7(0x2)](_0x5779f7(0x3));\n        } else {\n            count++;\n        }\n    } else {\n        if (_0x5779f7(0x4) !== 'qwRcN') {\n            if (a[index] * (0x4 * m) - sum > 0x0) {\n                count++;\n            }\n        } else {\n            console[_0x5779f7(0x2)]('No');\n        }\n    }\n}\nmain(require('fs')[a0_0x1dd804(0x5)](a0_0x1dd804(0x6), a0_0x1dd804(0x7)));", "test_cases": [["4 1\n5 4 2 1", "Yes"], ["3 2\n380 19 1", "No"], ["12 3\n4 56 78 901 2 345 67 890 123 45 6 789", "Yes"]], "original": "\"use strict\"\n// input data\nfunction main(input) {\n    const n = Number(input.split('\\n')[0].split(' ')[0]);\n    const m = Number(input.split('\\n')[0].split(' ')[1]);\n    let a = [];\n    let sum = 0;\n    for (let index = 0; index < n; index++) {\n        a[index] = input.split('\\n')[1].split(' ')[index];\n        sum += Number(a[index]);\n    }\n    let count = 0;\n    for (let index = 0; index < n; index++) {\n        if (a[index] * (4 * m) - sum > 0) {\n            count++;\n        }\n    }\n    if (count>=m) {\n        console.log('Yes');\n    }else {\n        console.log('No');\n    }\n}\n\n// output\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02796_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5d0f() {\n    const _0xd9c337 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'map',\n        'split',\n        'sort',\n        'length',\n        'log'\n    ];\n    a0_0x5d0f = function () {\n        return _0xd9c337;\n    };\n    return a0_0x5d0f();\n}\nconst a0_0x276ac2 = a0_0x1fa4;\nlet a = require('fs')[a0_0x276ac2(0x0)](a0_0x276ac2(0x1), a0_0x276ac2(0x2))['trim']()['split']('\\x0a');\nfunction a0_0x1fa4(uWjrAQ, key) {\n    const stringArray = a0_0x5d0f();\n    a0_0x1fa4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1fa4(uWjrAQ, key);\n}\na[a0_0x276ac2(0x3)]();\nlet d = a[a0_0x276ac2(0x4)](e => {\n    const _0x1b0ac6 = a0_0x1fa4;\n    let r = e[_0x1b0ac6(0x5)]('\\x20')[_0x1b0ac6(0x4)](Number);\n    return [\n        r[0x0] - r[0x1],\n        r[0x1] + r[0x0]\n    ];\n})[a0_0x276ac2(0x6)]((a, b) => {\n    return a[0x1] - b[0x1];\n});\nlet s = 0x0;\nlet P = Number['MIN_SAFE_INTEGER'];\nfor (let i = 0x0; i < d[a0_0x276ac2(0x7)]; i++) {\n    if (P <= d[i][0x0]) {\n        s++;\n        P = d[i][0x1];\n    }\n}\nconsole[a0_0x276ac2(0x8)](s);", "test_cases": [["4\n2 4\n4 3\n9 3\n100 5", "3"], ["2\n8 20\n1 10", "1"], ["5\n10 1\n2 1\n4 1\n6 1\n8 1", "5"]], "original": "\"use strict\";let a=require('fs').readFileSync('/dev/stdin','utf8').trim().split(\"\\n\");a.shift();let d = a.map(e => {let r = e.split(\" \").map(Number);return [r[0]-r[1],r[1]+r[0]];}).sort((a,b) => {return a[1]-b[1];});let s = 0;let P = Number.MIN_SAFE_INTEGER;for(let i=0;i<d.length;i++){if(P<=d[i][0]){s++;P = d[i][1];}}console.log(s);", "language": "JavaScript"}
{"filename": "p02921_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x428dd6 = a0_0x2cbf;\nlet input = require('fs')[a0_0x428dd6(0x0)]('/dev/stdin', 'utf8');\nconst Nums = input[a0_0x428dd6(0x1)]('\\x0a');\nconst S = Nums[0x0][a0_0x428dd6(0x1)]('');\nconst T = Nums[0x1][a0_0x428dd6(0x1)]('');\nlet ans = 0x0;\nS[a0_0x428dd6(0x2)]((x, i) => {\n    if (x == T[i]) {\n        ans++;\n    }\n});\nfunction a0_0x2cbf(iLPXQx, key) {\n    const stringArray = a0_0x6fc6();\n    a0_0x2cbf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2cbf(iLPXQx, key);\n}\nfunction a0_0x6fc6() {\n    const _0x25fec8 = [\n        'readFileSync',\n        'split',\n        'forEach',\n        'log'\n    ];\n    a0_0x6fc6 = function () {\n        return _0x25fec8;\n    };\n    return a0_0x6fc6();\n}\nconsole[a0_0x428dd6(0x3)](ans);", "test_cases": [["CSS\nCSR", "2"], ["SSR\nSSR", "3"], ["RRR\nSSS", "0"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nconst Nums = input.split('\\n');\nconst S = Nums[0].split(\"\");\nconst T = Nums[1].split(\"\");\nlet ans = 0;\nS.forEach((x,i)=> {\n\tif(x==T[i]){\n    \tans++;\n    }\n});\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p02972_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x27a97e = a0_0x3a9b;\nfunction a0_0x3a9b(fcXgbW, key) {\n    const stringArray = a0_0x297f();\n    a0_0x3a9b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a9b(fcXgbW, key);\n}\nconst arg_str = require('fs')[a0_0x27a97e(0x0)](a0_0x27a97e(0x1), 'UTF-8');\nconst args = arg_str[a0_0x27a97e(0x2)]('\\x0a');\nconst N = parseInt(args[0x0]);\nconst a_array = args[0x1][a0_0x27a97e(0x2)]('\\x20')[a0_0x27a97e(0x3)](x => parseInt(x));\nfor (let i = N; i >= 0x1; i--) {\n    let i_n = 0x0;\n    if (i == 0x1) {\n        i_n = N;\n    } else {\n        i_n = Math['sqrt'](N);\n    }\n    for (let j = i_n; j >= 0x1; j--) {\n        if (i < j) {\n            if (j % i == 0x0) {\n                a_array[i - 0x1] ^= a_array[j - 0x1];\n            }\n        } else {\n            continue;\n        }\n    }\n}\nconst result = [];\na_array[a0_0x27a97e(0x4)]((item, index) => {\n    if (item == 0x1) {\n        result['push'](index + 0x1);\n    }\n});\nconsole[a0_0x27a97e(0x5)](result[a0_0x27a97e(0x6)]);\nfunction a0_0x297f() {\n    const _0x45971e = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'forEach',\n        'log',\n        'length',\n        'join'\n    ];\n    a0_0x297f = function () {\n        return _0x45971e;\n    };\n    return a0_0x297f();\n}\nif (result[a0_0x27a97e(0x6)] > 0x0) {\n    console[a0_0x27a97e(0x5)](result[a0_0x27a97e(0x7)]('\\x20'));\n}", "test_cases": [["3\n1 0 0", "1\n1"], ["5\n0 0 0 0 0", "0"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args= arg_str.split('\\n')\nconst N = parseInt(args[0])\nconst a_array = args[1].split(' ').map(x=>parseInt(x))\n\nfor(let i=N;i>=1;i--){\n  let i_n = 0\n  if(i==1){\n    i_n = N\n  }else{\n    i_n = Math.sqrt(N)\n  }\n  for(let j=i_n;j>=1;j--){\n    if(i < j){\n      if(j % i == 0){\n        a_array[i-1] ^= a_array[j-1]\n      }\n    }else{\n      continue\n    }\n  }\n}\n\nconst result = []\na_array.forEach((item, index)=>{\n  if(item==1){\n    result.push(index+1)\n  }\n})\n\nconsole.log(result.length)\nif(result.length > 0){\n  console.log(result.join(' '))\n}\n", "language": "JavaScript"}
{"filename": "p02994_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x19e6() {\n    const _0x39f131 = [\n        'split',\n        'map',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x19e6 = function () {\n        return _0x39f131;\n    };\n    return a0_0x19e6();\n}\nconst a0_0xa0e95f = a0_0x58ef;\nfunction a0_0x58ef(blDvaK, key) {\n    const stringArray = a0_0x19e6();\n    a0_0x58ef = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x58ef(blDvaK, key);\n}\nfunction main(stdin) {\n    const _0x4d831e = a0_0x58ef;\n    const input = stdin[_0x4d831e(0x0)]('\\x20')[_0x4d831e(0x1)](v => parseInt(v, 0xa));\n    const N = input[0x0];\n    const L = input[0x1];\n    let sum = 0x0;\n    let min = Infinity;\n    for (let i = L; i < L + N; ++i) {\n        sum += i;\n        if (Math[_0x4d831e(0x2)](i) < Math['abs'](min))\n            min = i;\n    }\n    console[_0x4d831e(0x3)](sum - min);\n}\nmain(require('fs')[a0_0xa0e95f(0x4)](a0_0xa0e95f(0x5), a0_0xa0e95f(0x6)));", "test_cases": [["5 2", "18"], ["3 -1", "0"], ["30 -50", "-1044"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split(' ').map(v => parseInt(v, 10));\n  const N = input[0];\n  const L = input[1];\n\n  let sum = 0;\n  let min = Infinity;\n\n  for (let i = L; i < L + N; ++i) {\n    sum += i;\n    if (Math.abs(i) < Math.abs(min)) min = i;\n  }\n  \n  console.log(sum - min);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03075_1", "type": "JavaScript", "obfuscated": "var a0_0x4f1554 = a0_0x1f4d;\nfunction a0_0x5ac3() {\n    var _0x4174aa = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'Yay!'\n    ];\n    a0_0x5ac3 = function () {\n        return _0x4174aa;\n    };\n    return a0_0x5ac3();\n}\nfs = require('fs');\nl = fs[a0_0x4f1554(0x0)](a0_0x4f1554(0x1), a0_0x4f1554(0x2))['split']('\\x0a');\nx = [];\nfor (i = 0x0; i < 0x6; i++) {\n    x['push'](parseInt(l[i]));\n}\nfunction a0_0x1f4d(Kqqrpj, key) {\n    var stringArray = a0_0x5ac3();\n    a0_0x1f4d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f4d(Kqqrpj, key);\n}\nif (x[0x4] - x[0x0] <= x[0x5]) {\n    console[a0_0x4f1554(0x3)](a0_0x4f1554(0x4));\n} else {\n    console[a0_0x4f1554(0x3)](':(');\n}", "test_cases": [["1\n2\n4\n8\n9\n15", "Yay!"], ["15\n18\n26\n35\n36\n18", ":("]], "original": "fs=require(\"fs\");\nl=fs.readFileSync(\"/dev/stdin\",\"utf8\").split(\"\\n\");\nx=[];\nfor(i=0;i<6;i++){\n  x.push(parseInt(l[i]));\n}\nif(x[4]-x[0]<=x[5]){\n  console.log('Yay!');\n}else{\n  console.log(':(');\n}", "language": "JavaScript"}
{"filename": "p03261_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3393e8 = a0_0x5327;\nfunction a0_0x5327(EXxeQZ, key) {\n    const stringArray = a0_0x3b0f();\n    a0_0x5327 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5327(EXxeQZ, key);\n}\nfunction a0_0x3b0f() {\n    const _0x4b8608 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'log',\n        'slice',\n        'add',\n        'Yes'\n    ];\n    a0_0x3b0f = function () {\n        return _0x4b8608;\n    };\n    return a0_0x3b0f();\n}\nconst input = require('fs')[a0_0x3393e8(0x0)]('/dev/stdin', a0_0x3393e8(0x1))[a0_0x3393e8(0x2)]('\\x0a');\nlet ws = new Set();\nlet prev = null;\nconsole[a0_0x3393e8(0x3)](((() => {\n    const _0x5aad7c = a0_0x5327;\n    for (const w of input[_0x5aad7c(0x4)](0x1, parseInt(input[0x0]) + 0x1)) {\n        if (prev && prev != w[0x0]) {\n            return 'No';\n        }\n        if (ws['has'](w)) {\n            return 'No';\n        }\n        ws[_0x5aad7c(0x5)](w);\n        prev = w['substr'](-0x1);\n    }\n    return _0x5aad7c(0x6);\n})()));", "test_cases": [["4\nhoge\nenglish\nhoge\nenigma", "No"], ["9\nbasic\nc\ncpp\nphp\npython\nnadesico\nocaml\nlua\nassembly", "Yes"], ["8\na\naa\naaa\naaaa\naaaaa\naaaaaa\naaa\naaaaaaa", "No"], ["3\nabc\narc\nagc", "No"]], "original": "\"use strict\";\nconst input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\");\nlet ws = new Set();\nlet prev = null;\nconsole.log((() => {\n\tfor (const w of input.slice(1,parseInt(input[0]) + 1)) {\n\t\tif (prev && prev != w[0]) {\n\t\t\treturn \"No\";\n\t\t}\n\t\tif (ws.has(w)) {\n\t\t\treturn \"No\";\n\t\t}\n\t\tws.add(w);\n\t\tprev = w.substr(-1);\n\t}\n\treturn \"Yes\";\n})());\n", "language": "JavaScript"}
{"filename": "p03262_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2fb622 = a0_0x1d0d;\nfunction a0_0x1d0d(nsHvSy, key) {\n    const stringArray = a0_0x2dcf();\n    a0_0x1d0d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d0d(nsHvSy, key);\n}\nfunction a0_0x2dcf() {\n    const _0x2690c0 = [\n        'split',\n        'sort',\n        'forEach',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x2dcf = function () {\n        return _0x2690c0;\n    };\n    return a0_0x2dcf();\n}\nconst main = input => {\n    const _0x20f276 = a0_0x1d0d;\n    input = input[_0x20f276(0x0)]('\\x0a');\n    const N = parseInt(input[0x0][_0x20f276(0x0)]('\\x20')[0x0]);\n    const X = parseInt(input[0x0][_0x20f276(0x0)]('\\x20')[0x1]);\n    const arr = input[0x1][_0x20f276(0x0)]('\\x20')['map'](v => parseInt(v))[_0x20f276(0x1)]((a, b) => a - b);\n    let mostNear = 0x174876e800;\n    arr[_0x20f276(0x2)](v => {\n        let dist = Math['abs'](X - v);\n        if (dist < mostNear) {\n            mostNear = dist;\n        }\n    });\n    for (let i = mostNear; i >= 0x0; i--) {\n        for (let v of arr) {\n            let diff = Math['abs'](v - X);\n            if (diff % mostNear !== 0x0) {\n                break;\n            }\n            console[_0x20f276(0x3)](i);\n            return;\n        }\n    }\n};\nmain(require('fs')[a0_0x2fb622(0x4)](a0_0x2fb622(0x5), a0_0x2fb622(0x6)));", "test_cases": [["3 3\n1 7 11", "2"], ["3 81\n33 105 57", "24"], ["1 1\n1000000000", "999999999"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0].split(' ')[0])\n    const X = parseInt(input[0].split(' ')[1])\n    const arr = input[1].split(' ').map(v => parseInt(v)).sort((a, b) => a - b)\n    let mostNear = 100000000000\n    arr.forEach(v => {\n        let dist = Math.abs(X - v)\n        if(dist < mostNear){\n            mostNear = dist\n        }\n    })\n\n    for(let i = mostNear; i >= 0; i--){\n        for(let v of arr){\n            let diff = Math.abs(v - X)\n            if(diff % mostNear !== 0){\n                break\n            }\n            console.log(i)\n            return\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03370_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3cdc87 = a0_0x20c4;\nlet input = require('fs')[a0_0x3cdc87(0x0)](a0_0x3cdc87(0x1), a0_0x3cdc87(0x2));\ninput = input[a0_0x3cdc87(0x3)]('\\x0a');\nlet info = input[a0_0x3cdc87(0x4)]();\nlet N = info[a0_0x3cdc87(0x3)]('\\x20')[0x0] * 0x1;\nlet X = info[a0_0x3cdc87(0x3)]('\\x20')[0x1];\nfunction a0_0x20c4(AQssFg, key) {\n    const stringArray = a0_0x1001();\n    a0_0x20c4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x20c4(AQssFg, key);\n}\nlet arr = input[a0_0x3cdc87(0x5)](x => x * 0x1);\nlet min = Math['min'](...arr);\nlet sum = arr['reduce']((x, a) => {\n    return a + x;\n});\nlet ans = N + Math[a0_0x3cdc87(0x6)]((X - sum) / min);\nconsole[a0_0x3cdc87(0x7)](ans);\nfunction a0_0x1001() {\n    const _0x2aea48 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'floor',\n        'log'\n    ];\n    a0_0x1001 = function () {\n        return _0x2aea48;\n    };\n    return a0_0x1001();\n}", "test_cases": [["3 1000\n120\n100\n140", "9"], ["4 360\n90\n90\n90\n90", "4"], ["5 3000\n150\n130\n150\n130\n110", "26"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\n// 必要な変数に定義する\ninput = input.split('\\n');\nlet info = input.shift();\nlet N = info.split(\" \")[0]*1;\nlet X = info.split(\" \")[1];\n// 配列要素を数値に変換\nlet arr = input.map(x=> x*1);\nlet min = Math.min(...arr);\n// とりあえず1つずつ要素を足したもの\nlet sum = arr.reduce((x,a)=> {return a+x})\n// 残りで一番量が少なくて済むドーナッツに割り当てる\nlet ans = N + Math.floor((X - sum)/min);\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p03377_1", "type": "JavaScript", "obfuscated": "var a0_0xbca732 = a0_0x322d;\ninp = require('fs')[a0_0xbca732(0x0)](a0_0xbca732(0x1), a0_0xbca732(0x2))['split']('\\x0a');\nl = inp[a0_0xbca732(0x3)]()[a0_0xbca732(0x4)]('\\x20');\nA = l[0x0] * 0x1;\nB = l[0x1] * 0x1;\nfunction a0_0x2a28() {\n    var _0xc85a1e = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'split',\n        'log'\n    ];\n    a0_0x2a28 = function () {\n        return _0xc85a1e;\n    };\n    return a0_0x2a28();\n}\nX = l[0x2] * 0x1;\nfunction a0_0x322d(VgoXeq, key) {\n    var stringArray = a0_0x2a28();\n    a0_0x322d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x322d(VgoXeq, key);\n}\nconsole[a0_0xbca732(0x5)](A + B > X && A < X ? 'YES' : 'NO');", "test_cases": [["3 5 4", "YES"], ["2 2 6", "NO"], ["5 3 2", "NO"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nA = l[0] * 1\nB = l[1] * 1 \nX = l[2] * 1 \nconsole.log(A + B > X && A < X ? 'YES' : 'NO')\t", "language": "JavaScript"}
{"filename": "p03399_1", "type": "JavaScript", "obfuscated": "function a0_0x5158(JxBsTu, key) {\n    var stringArray = a0_0x5443();\n    a0_0x5158 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5158(JxBsTu, key);\n}\nvar a0_0x5144ce = a0_0x5158;\nfunction Main(input) {\n    var _0x288893 = a0_0x5158;\n    var xs = input[_0x288893(0x0)]()[_0x288893(0x1)]('\\x0a')['map'](v => parseInt(v, 0xa));\n    var A = 0x0;\n    if (xs[0x0] <= xs[0x1]) {\n        A = A + xs[0x0];\n    } else if (xs[0x0] >= xs[0x1]) {\n        A = A + xs[0x1];\n    }\n    var B = 0x0;\n    if (xs[0x2] <= xs[0x3]) {\n        B = B + xs[0x2];\n    } else if (xs[0x2] >= xs[0x3]) {\n        B = B + xs[0x3];\n    }\n    console[_0x288893(0x2)](A + B);\n}\nMain(require('fs')[a0_0x5144ce(0x3)](a0_0x5144ce(0x4), 'utf8'));\nfunction a0_0x5443() {\n    var _0x1594e1 = [\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x5443 = function () {\n        return _0x1594e1;\n    };\n    return a0_0x5443();\n}", "test_cases": [["600\n300\n220\n420", "520"], ["555\n555\n400\n200", "755"], ["549\n817\n715\n603", "1152"]], "original": "function Main(input){\n\tvar xs = input.trim().split('\\n').map(v=>parseInt(v,10));\n      var A = 0;\n      if(xs[0] <= xs[1]){\n      A = A + xs[0];\n      }else if(xs[0] >= xs[1]){\n      A = A + xs[1];\n      }\n      var B = 0;\n      if(xs[2] <= xs[3]){\n      B = B + xs[2];\n      }else if(xs[2] >= xs[3]){\n      B = B + xs[3];\n      }\n    console.log(A+B);      \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03448_1", "type": "JavaScript", "obfuscated": "function a0_0x3fbe(TTvhLY, key) {\n    const stringArray = a0_0x21b9();\n    a0_0x3fbe = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fbe(TTvhLY, key);\n}\nfunction a0_0x21b9() {\n    const _0x5994e7 = [\n        'split',\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x21b9 = function () {\n        return _0x5994e7;\n    };\n    return a0_0x21b9();\n}\nconst a0_0x163e5a = a0_0x3fbe;\nfunction main(input) {\n    const _0x297b56 = a0_0x3fbe;\n    const input_array = input[_0x297b56(0x0)]('\\x0a');\n    const coins_count = input_array[_0x297b56(0x1)](0x0, 0x3);\n    const desired_sum = parseInt(input_array[_0x297b56(0x1)](-0x1), 0xa);\n    var answer = 0x0;\n    for (i = 0x0; i <= parseInt(coins_count[0x0], 0xa); i++) {\n        for (j = 0x0; j <= parseInt(coins_count[0x1], 0xa); j++) {\n            for (k = 0x0; k <= parseInt(coins_count[0x2], 0xa); k++) {\n                if (0x1f4 * i + 0x64 * j + 0x32 * k == desired_sum) {\n                    answer++;\n                }\n            }\n        }\n    }\n    console[_0x297b56(0x2)](answer);\n}\nmain(require('fs')[a0_0x163e5a(0x3)](a0_0x163e5a(0x4), a0_0x163e5a(0x5)));", "test_cases": [["2\n2\n2\n100", "2"], ["5\n1\n0\n150", "0"], ["30\n40\n50\n6000", "213"]], "original": "// 500, 100, 50\nfunction main(input) {\n  const input_array = input.split(\"\\n\");\n  const coins_count = input_array.slice(0,3);\n  const desired_sum = parseInt(input_array.slice(-1), 10);\n\n  var answer = 0;\n  for(i=0; i<=parseInt(coins_count[0], 10); i++){\n    for(j=0; j<=parseInt(coins_count[1], 10); j++){\n      for(k=0; k<=parseInt(coins_count[2], 10); k++){\n        if (500 * i + 100 * j + 50 * k == desired_sum){\n          answer++;\n        }\n      }\n    }\n  }\n  \n  console.log(answer);\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03456_1", "type": "JavaScript", "obfuscated": "function a0_0x2074(GGKkhk, key) {\n    var stringArray = a0_0x1f4a();\n    a0_0x2074 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2074(GGKkhk, key);\n}\nvar a0_0x529b09 = a0_0x2074;\nfunction a0_0x1f4a() {\n    var _0x92db8 = [\n        'split',\n        'floor',\n        'sqrt',\n        'Yes',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1f4a = function () {\n        return _0x92db8;\n    };\n    return a0_0x1f4a();\n}\nfunction Main(input) {\n    var _0x308dcb = a0_0x2074;\n    var inp = input[_0x308dcb(0x0)]('\\x20');\n    var a = inp[0x0];\n    var b = inp[0x1];\n    var n = parseInt(a + b);\n    var flsqn = Math[_0x308dcb(0x1)](Math[_0x308dcb(0x2)](n));\n    flsqn * flsqn === n ? console['log'](_0x308dcb(0x3)) : console[_0x308dcb(0x4)]('No');\n}\nMain(require('fs')[a0_0x529b09(0x5)](a0_0x529b09(0x6), a0_0x529b09(0x7)));", "test_cases": [["1 21", "Yes"], ["100 100", "No"], ["12 10", "No"]], "original": "function Main(input){\n  var inp = input.split(' ');\n  var a = inp[0];\n  var b = inp[1];\n  var n = parseInt(a + b);\n  var flsqn = Math.floor(Math.sqrt(n));\n  flsqn * flsqn === n ? console.log('Yes') : console.log('No');\n//  (Math.floor(Math.sqrt(n))) ** 2 ? console.log('Yes') : console.log('No');\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03597_1", "type": "JavaScript", "obfuscated": "var a0_0x11868c = a0_0xdbc1;\nfunction a0_0xdbc1(csIOUQ, key) {\n    var stringArray = a0_0x1ed0();\n    a0_0xdbc1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdbc1(csIOUQ, key);\n}\nfunction Main(input) {\n    var _0xbe895a = a0_0xdbc1;\n    input = input['split']('\\x0a')['map'](n => parseInt(n, 0xa));\n    console[_0xbe895a(0x0)](Math[_0xbe895a(0x1)](input[0x0], 0x2) - input[0x1]);\n}\nfunction a0_0x1ed0() {\n    var _0x47458b = [\n        'log',\n        'pow',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1ed0 = function () {\n        return _0x47458b;\n    };\n    return a0_0x1ed0();\n}\nMain(require('fs')[a0_0x11868c(0x2)](a0_0x11868c(0x3), a0_0x11868c(0x4)));", "test_cases": [["3\n4", "5"], ["19\n100", "261"], ["10\n0", "100"]], "original": "function Main(input) {\n    input = input.split('\\n').map(n => parseInt(n, 10));\n    console.log((Math.pow(input[0], 2)) - input[1]);\n }\n  Main(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03625_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x180c95 = a0_0x5073;\nfunction a0_0x5073(WtFIyC, key) {\n    const stringArray = a0_0x49ba();\n    a0_0x5073 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5073(WtFIyC, key);\n}\nfunction main(input) {\n    const _0x5767af = a0_0x5073;\n    input = input[_0x5767af(0x0)](/\\r?\\n/);\n    input = input[0x1][_0x5767af(0x0)]('\\x20')[_0x5767af(0x1)](v => ~~v)[_0x5767af(0x2)]((a, b) => b - a);\n    let ans = 0x0;\n    let sticks = [];\n    let prev = input[0x0];\n    for (let i = 0x1; i < input['length']; i++) {\n        if (_0x5767af(0x3) !== 'WJpho') {\n            if (prev == input[i]) {\n                sticks['push'](prev);\n                sticks[_0x5767af(0x4)](input[i]);\n                prev = 0x0;\n            } else {\n                if ('TgeQq' !== _0x5767af(0x5)) {\n                    prev = input[i];\n                } else {\n                    prev = input[i];\n                }\n            }\n        } else {\n            ans = sticks[0x0] * sticks[0x3];\n            console[_0x5767af(0x6)](ans);\n        }\n    }\n    if (sticks[_0x5767af(0x7)] >= 0x4) {\n        ans = sticks[0x0] * sticks[0x3];\n        console[_0x5767af(0x6)](ans);\n    } else {\n        console['log'](0x0);\n    }\n}\nfunction a0_0x49ba() {\n    const _0x24cff1 = [\n        'split',\n        'map',\n        'sort',\n        'Dqgbz',\n        'push',\n        'TgeQq',\n        'log',\n        'length',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x49ba = function () {\n        return _0x24cff1;\n    };\n    return a0_0x49ba();\n}\nmain(require('fs')[a0_0x180c95(0x8)](a0_0x180c95(0x9), 'utf8'));", "test_cases": [["6\n3 1 2 4 2 1", "2"], ["4\n1 2 3 4", "0"], ["10\n3 3 3 3 4 4 4 5 5 5", "20"]], "original": "\n\"use strict\"\n\nfunction main(input) {\n    input = input.split(/\\r?\\n/)\n    input = input[1].split(' ').map(v => ~~v).sort((a, b) => b - a)\n\n    let ans = 0\n    let sticks = [] // 2本ずつ、2本ずつ、\n    let prev = input[0]\n    for (let i = 1; i < input.length; i++) {\n\n        if (prev == input[i]) {\n            sticks.push(prev)\n            sticks.push(input[i])\n            prev = 0\n        } else {\n            prev = input[i]\n        }\n\n    }\n    if (sticks.length >= 4) {\n        ans = sticks[0] * sticks[3]\n        console.log(ans)\n    } else {\n        console.log(0)\n    }\n\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03680_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2600() {\n    const _0x2de8af = [\n        'trim',\n        'split',\n        'slice',\n        'map',\n        'log',\n        'utf8'\n    ];\n    a0_0x2600 = function () {\n        return _0x2de8af;\n    };\n    return a0_0x2600();\n}\nfunction a0_0x1315(rTLnct, key) {\n    const stringArray = a0_0x2600();\n    a0_0x1315 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1315(rTLnct, key);\n}\nconst a0_0x161beb = a0_0x1315;\nconst main = arg => {\n    const _0x50e735 = a0_0x1315;\n    arg = arg[_0x50e735(0x0)]()[_0x50e735(0x1)]('\\x0a');\n    const N = ~~arg[0x0];\n    const S = arg[_0x50e735(0x2)](0x1, N + 0x1)[_0x50e735(0x3)](n => ~~n);\n    let now = 0x1;\n    let cnt = 0x0;\n    while (now !== 0x2) {\n        now = S[now - 0x1];\n        cnt++;\n        if (cnt > N) {\n            console[_0x50e735(0x4)](-0x1);\n            return;\n        }\n    }\n    console[_0x50e735(0x4)](cnt);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x161beb(0x5)));", "test_cases": [["3\n3\n1\n2", "2"], ["4\n3\n4\n1\n2", "-1"], ["5\n3\n3\n4\n2\n4", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = ~~arg[0];\n    const S = arg.slice(1, N + 1).map(n=>~~n);\n    \n    let now = 1;\n    let cnt = 0;\n    \n    while(now !== 2) {\n        now = S[now - 1];\n        cnt++;\n        \n        if(cnt > N) {\n            console.log(-1);\n            return;\n        }\n    }\n    \n    console.log(cnt);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03773_1", "type": "JavaScript", "obfuscated": "var a0_0x59fd64 = a0_0x5e4f;\nfunction a0_0xec01() {\n    var _0x2c7a75 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'toString',\n        'split'\n    ];\n    a0_0xec01 = function () {\n        return _0x2c7a75;\n    };\n    return a0_0xec01();\n}\nfunction a0_0x5e4f(JXfqMV, key) {\n    var stringArray = a0_0xec01();\n    a0_0x5e4f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e4f(JXfqMV, key);\n}\nprocess[a0_0x59fd64(0x0)][a0_0x59fd64(0x1)]();\nprocess['stdin'][a0_0x59fd64(0x2)](a0_0x59fd64(0x3));\nprocess[a0_0x59fd64(0x0)]['on'](a0_0x59fd64(0x4), function (chunk) {\n    var _0x221244 = a0_0x5e4f;\n    var lines = chunk[_0x221244(0x5)]()[_0x221244(0x6)]('\\x20');\n    var first = Number(lines[0x0]);\n    var second = Number(lines[0x1]);\n    var time = second + first;\n    if (time < 0x18) {\n        console['log'](time);\n    } else {\n        console['log'](time - 0x18);\n    }\n});", "test_cases": [["9 12", "21"], ["19 0", "19"], ["23 2", "1"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    var lines = chunk.toString().split(' ');\n    var first = Number(lines[0]);\n    var second = Number(lines[1]);\n\n    var time = second + first;\n    \n    if(\n        time<24)\n        {\n            console.log(time)\n        }else{\n            console.log(time-24)\n        }\n        \n//    console.log(lines);\n});", "language": "JavaScript"}
{"filename": "p00007_1", "type": "JavaScript", "obfuscated": "var a0_0x48f3e5 = a0_0x8457;\nfunction a0_0x8457(UzuvwY, key) {\n    var stringArray = a0_0x5e27();\n    a0_0x8457 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x8457(UzuvwY, key);\n}\nfunction main() {\n    var _0x3c4a7c = a0_0x8457;\n    var debt = 0x186a0;\n    for (var i = 0x0; i < input[_0x3c4a7c(0x0)]() - 0x0; i++) {\n        debt = Math[_0x3c4a7c(0x1)](debt * 1.05 / 0x3e8) * 0x3e8;\n    }\n    console[_0x3c4a7c(0x2)](debt);\n}\nvar input = '';\nfunction a0_0x5e27() {\n    var _0x28d724 = [\n        'trim',\n        'ceil',\n        'log',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'data',\n        'end'\n    ];\n    a0_0x5e27 = function () {\n        return _0x28d724;\n    };\n    return a0_0x5e27();\n}\nprocess[a0_0x48f3e5(0x3)][a0_0x48f3e5(0x4)]();\nprocess[a0_0x48f3e5(0x3)][a0_0x48f3e5(0x5)]('utf8');\nprocess['stdin']['on'](a0_0x48f3e5(0x6), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x48f3e5(0x3)]['on'](a0_0x48f3e5(0x7), function () {\n    main();\n});", "test_cases": [["5", "130000"]], "original": "function main(){\n  var debt = 100000;\n \n  for(var i = 0; i < input.trim()-0; i++){\n    debt = Math.ceil((debt * 1.05)/1000) * 1000;\n  }\n\n  console.log(debt);\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  main();\n});", "language": "JavaScript"}
{"filename": "p02233_1", "type": "JavaScript", "obfuscated": "function a0_0x49f9() {\n    const _0x3c60be = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'pow'\n    ];\n    a0_0x49f9 = function () {\n        return _0x3c60be;\n    };\n    return a0_0x49f9();\n}\nfunction a0_0x3520(wrqFND, key) {\n    const stringArray = a0_0x49f9();\n    a0_0x3520 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3520(wrqFND, key);\n}\n(function main() {\n    const _0x48b314 = a0_0x3520;\n    const n = Number(require('fs')[_0x48b314(0x0)](_0x48b314(0x1), _0x48b314(0x2))) + 0x1;\n    root5 = Math['sqrt'](0x5);\n    console[_0x48b314(0x3)](Math['round'](0x1 / root5 * (Math[_0x48b314(0x4)]((0x1 + root5) / 0x2, n) - Math[_0x48b314(0x4)]((0x1 - root5) / 0x2, n))));\n}());", "test_cases": [["3", "3"]], "original": "(function main() {\n  const n = Number(require('fs').readFileSync('/dev/stdin', 'utf8')) + 1;\n  root5 = Math.sqrt(5);\n  console.log(Math.round(1/root5 * (Math.pow((1 + root5) / 2, n) - Math.pow((1 - root5) / 2, n))));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02612_1", "type": "JavaScript", "obfuscated": "const a0_0x36186e = a0_0x66dc;\nfunction Main(input) {\n    const _0x2862fc = a0_0x66dc;\n    const hyaku = Number(input) % 0x3e8;\n    console[_0x2862fc(0x0)](hyaku === 0x0 ? 0x0 : 0x3e8 - hyaku);\n}\nfunction a0_0x66dc(ityPRg, key) {\n    const stringArray = a0_0x1c8a();\n    a0_0x66dc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x66dc(ityPRg, key);\n}\nfunction a0_0x1c8a() {\n    const _0x45c912 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1c8a = function () {\n        return _0x45c912;\n    };\n    return a0_0x1c8a();\n}\nMain(require('fs')[a0_0x36186e(0x1)](a0_0x36186e(0x2), a0_0x36186e(0x3)));", "test_cases": [["1900", "100"], ["3000", "0"]], "original": "function Main(input) {\n    const hyaku = Number(input)%1000;\n    console.log(hyaku === 0 ? 0: 1000-hyaku);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02694_1", "type": "JavaScript", "obfuscated": "var a0_0xebe96a = a0_0x2b12;\nfunction a0_0x2b12(NRuoFI, key) {\n    var stringArray = a0_0x3d75();\n    a0_0x2b12 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b12(NRuoFI, key);\n}\nfunction a0_0x3d75() {\n    var _0x1bcd65 = [\n        'split',\n        'log',\n        'readFileSync',\n        'UTF-8'\n    ];\n    a0_0x3d75 = function () {\n        return _0x1bcd65;\n    };\n    return a0_0x3d75();\n}\nconst main = inputs => {\n    var _0x9515b7 = a0_0x2b12;\n    var array = inputs[0x0][_0x9515b7(0x0)]('\\x20');\n    var X = Number(array);\n    var num = 0x64;\n    var count = 0x0;\n    while (0x1) {\n        var risoku = Math['floor'](num * 0.01);\n        num = num + risoku;\n        count++;\n        if (X <= num)\n            break;\n    }\n    console[_0x9515b7(0x1)](count);\n};\nmain(require('fs')[a0_0xebe96a(0x2)]('/dev/stdin', a0_0xebe96a(0x3))['trim']()[a0_0xebe96a(0x0)]('\\x0a'));", "test_cases": [["103", "3"], ["1000000000000000000", "3760"], ["1333333333", "1706"]], "original": "const main = (inputs) => {\n  var array = inputs[0].split(\" \");\n  var X = Number(array);\n\n  var num = 100;\n  var count = 0;\n  while (1) {\n    var risoku = Math.floor(num * 0.01);\n    num = num + risoku;\n    count++;\n    if (X <= num) break;\n  }\n\n  console.log(count);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02702_1", "type": "JavaScript", "obfuscated": "function a0_0x3ebd(RhcqJP, key) {\n    const stringArray = a0_0x24b3();\n    a0_0x3ebd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ebd(RhcqJP, key);\n}\nconst Main = () => {\n    const _0x231989 = a0_0x3ebd;\n    let line = require('fs')[_0x231989(0x0)](_0x231989(0x1), 'utf8');\n    const mod = {};\n    let count = 0x0;\n    for (let i = line[_0x231989(0x2)]; 0x0 < i; i--) {\n        const n = parseInt(line, 0xa);\n        const m = n % 0x7e3;\n        if (mod[m] || m === 0x0) {\n            count++;\n        }\n        mod[m] = !![];\n        line = line[_0x231989(0x3)](0x1);\n    }\n    console['log'](count);\n};\nfunction a0_0x24b3() {\n    const _0x53c6dc = [\n        'readFileSync',\n        '/dev/stdin',\n        'length',\n        'slice'\n    ];\n    a0_0x24b3 = function () {\n        return _0x53c6dc;\n    };\n    return a0_0x24b3();\n}\nMain();", "test_cases": [["1817181712114", "3"], ["14282668646", "2"], ["2119", "0"]], "original": "const Main = () => {\n    let line = require('fs').readFileSync('/dev/stdin', 'utf8');\n    const mod = {};\n    let count = 0;\n    for (let i = line.length; 0 < i; i--) {\n        const n = parseInt(line, 10);\n        const m = n % 2019;\n        if (mod[m] || m === 0) {\n            count ++;\n        }\n        mod[m] = true;\n        line = line.slice(1);\n    }\n    console.log(count);\n}\n\nMain();", "language": "JavaScript"}
{"filename": "p02717_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x2da829 = a0_0x41bc;\nfunction main(input) {\n    var _0x464945 = a0_0x41bc;\n    var line = input[_0x464945(0x0)]('\\x20');\n    console[_0x464945(0x1)](line[0x2] + '\\x20' + line[0x0] + '\\x20' + line[0x1]);\n}\nmain(require('fs')[a0_0x2da829(0x2)](a0_0x2da829(0x3), a0_0x2da829(0x4)));\nfunction a0_0x41bc(TdkjVO, key) {\n    var stringArray = a0_0x4ef3();\n    a0_0x41bc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41bc(TdkjVO, key);\n}\nfunction a0_0x4ef3() {\n    var _0x3fbe83 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4ef3 = function () {\n        return _0x3fbe83;\n    };\n    return a0_0x4ef3();\n}", "test_cases": [["1 2 3", "3 1 2"], ["100 100 100", "100 100 100"], ["41 59 31", "31 41 59"]], "original": "\"use strict\";\nfunction main(input) {\n    var line = input.split(\" \");\n    console.log(line[2] + \" \" + line[0] + \" \" + line[1]); \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02719_1", "type": "JavaScript", "obfuscated": "var a0_0xef43b1 = a0_0x4e95;\nfunction a0_0x4e95(IqUqMB, key) {\n    var stringArray = a0_0x4ac0();\n    a0_0x4e95 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e95(IqUqMB, key);\n}\nfunction Main(input) {\n    var _0x4595d7 = a0_0x4e95;\n    input = input[_0x4595d7(0x0)]('\\x0a');\n    tmp = input[0x0][_0x4595d7(0x0)]('\\x20');\n    var N = Number(tmp[0x0]);\n    var K = Number(tmp[0x1]);\n    if (K === 0x1)\n        return console[_0x4595d7(0x1)](0x0);\n    var current = Math['abs'](N - K);\n    N = current;\n    while (current >= N) {\n        N = current;\n        current = Math[_0x4595d7(0x2)](N - K);\n    }\n    console['log'](current);\n}\nfunction a0_0x4ac0() {\n    var _0xbb8f68 = [\n        'split',\n        'log',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4ac0 = function () {\n        return _0xbb8f68;\n    };\n    return a0_0x4ac0();\n}\nMain(require('fs')[a0_0xef43b1(0x3)](a0_0xef43b1(0x4), a0_0xef43b1(0x5)));", "test_cases": [["7 4", "1"], ["2 6", "2"], ["1000000000000000000 1", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\ttmp = input[0].split(\" \");\n\tvar N = Number(tmp[0])\n    var K = Number(tmp[1])\n    if(K === 1) return console.log(0)\n    \n    var current = Math.abs(N - K)\n    N = current\n    while(current >= N) {\n      \n      N = current\n      current = Math.abs(N - K)\n    }\n  console.log(current)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02789_1", "type": "JavaScript", "obfuscated": "var a0_0x30a807 = a0_0x348e;\nfunction a0_0x348e(DojCkQ, key) {\n    var stringArray = a0_0x41e9();\n    a0_0x348e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x348e(DojCkQ, key);\n}\nfunction main(input) {\n    var _0x53888f = a0_0x348e;\n    var args = input[_0x53888f(0x0)]('\\x20');\n    var n = parseInt(args[0x0], 0xa);\n    var m = parseInt(args[0x1], 0xa);\n    if (n === m) {\n        return _0x53888f(0x1);\n    } else {\n        return 'No';\n    }\n}\nfunction a0_0x41e9() {\n    var _0x2866c7 = [\n        'split',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x41e9 = function () {\n        return _0x2866c7;\n    };\n    return a0_0x41e9();\n}\nconsole['log'](main(require('fs')[a0_0x30a807(0x2)](a0_0x30a807(0x3), a0_0x30a807(0x4))));", "test_cases": [["3 3", "Yes"], ["3 2", "No"], ["1 1", "Yes"]], "original": "function main(input) {\n  var args = input.split(' ');\n  var n = parseInt(args[0], 10);\n  var m = parseInt(args[1], 10);\n  if ( n === m) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n}\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02829_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5c1b4c = a0_0x19b9;\nfunction a0_0x557c() {\n    const _0xa3e3f4 = [\n        'split',\n        'map',\n        'filter',\n        'find',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x557c = function () {\n        return _0xa3e3f4;\n    };\n    return a0_0x557c();\n}\nfunction a0_0x19b9(UJRkRI, key) {\n    const stringArray = a0_0x557c();\n    a0_0x19b9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19b9(UJRkRI, key);\n}\nfunction main(input) {\n    const _0x1d94ad = a0_0x19b9;\n    const args = input[_0x1d94ad(0x0)]('\\x0a');\n    const num = args[_0x1d94ad(0x1)](el => parseInt(el));\n    const ans = [\n        0x1,\n        0x2,\n        0x3\n    ];\n    let out = ans[_0x1d94ad(0x2)](el => el !== num[0x0]);\n    out = out[_0x1d94ad(0x3)](el => el !== num[0x1]);\n    console['log'](out);\n}\nmain(require('fs')['readFileSync'](a0_0x5c1b4c(0x4), a0_0x5c1b4c(0x5)));", "test_cases": [["3\n1", "2"], ["1\n2", "3"]], "original": "'use strict'\nfunction main(input) {\n  const args = input.split('\\n');\n  const num = args.map(el => parseInt(el))\n  const ans = [1, 2, 3]\n  let out = ans.filter(el => el !== num[0])\n  out = out.find(el => el !== num[1])\n  console.log(out)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02866_1", "type": "JavaScript", "obfuscated": "var a0_0x14af10 = a0_0x2690;\nfunction a0_0x4d93() {\n    var _0x364e16 = [\n        'split',\n        'length',\n        'pow',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4d93 = function () {\n        return _0x364e16;\n    };\n    return a0_0x4d93();\n}\nfunction main(arg) {\n    var _0x389836 = a0_0x2690;\n    var arg2 = arg[_0x389836(0x0)]('\\x0a')[0x1][_0x389836(0x0)](/\\s/g);\n    var kazoe = [];\n    for (i = 0x0; i < arg[_0x389836(0x0)]('\\x0a')[0x0]; i++) {\n        if (!kazoe[arg2[i]]) {\n            kazoe[arg2[i]] = 0x0;\n        }\n        kazoe[arg2[i]] += 0x1;\n    }\n    var ans = 0x1;\n    for (j = 0x0; j < kazoe[_0x389836(0x1)]; j++) {\n        if (j > 0x1) {\n            ans = ans * Math[_0x389836(0x2)](kazoe[j - 0x1], kazoe[j]);\n        }\n        if (!kazoe[j]) {\n            ans = 0x0;\n            break;\n        }\n    }\n    console[_0x389836(0x3)](ans % 0x3b800001);\n}\nfunction a0_0x2690(lyMluS, key) {\n    var stringArray = a0_0x4d93();\n    a0_0x2690 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2690(lyMluS, key);\n}\nmain(require('fs')[a0_0x14af10(0x4)](a0_0x14af10(0x5), 'utf8'));", "test_cases": [["4\n0 1 1 2", "2"], ["4\n1 1 1 1", "0"], ["7\n0 3 2 1 2 2 1", "24"]], "original": "function main(arg) {\n    var arg2 = arg.split(\"\\n\")[1].split(/\\s/g); //元データ\n    var kazoe = []; //各数字の個数の配列\n\n\tfor(i=0;i<arg.split(\"\\n\")[0];i++){\n\t\t//もし存在しなければ作る\n\t\tif(!kazoe[arg2[i]]){\n\t\t\tkazoe[arg2[i]] = 0;\n\t\t}\n\t\tkazoe[arg2[i]] += 1;\n\t}\n\t//答えは(1の個数)^(2の個数)*(2の個数)^(3の個数)*(3の個数)^(4の個数)*…*(N-1の個数)^(Nの個数)\n\tvar ans = 1;\n\tfor(j=0;j<kazoe.length;j++){\n\t    if(j>1){\n\t    \tans = ans * Math.pow(kazoe[j-1],kazoe[j]);\n\t    }\n\t    //もし間に歯抜けがあればfalse\n\t    if(!kazoe[j]){\n\t       ans = 0;\n\t       break;\n\t    }\n\t}\n    console.log(ans%998244353);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02933_1", "type": "JavaScript", "obfuscated": "const a0_0x32e3c7 = a0_0x41e3;\nconst Main = input => {\n    const _0x32804c = a0_0x41e3;\n    input = input['split']('\\x0a');\n    const a = input[0x0];\n    const s = input[0x1];\n    if (a >= 0xc80) {\n        console[_0x32804c(0x0)](s);\n    } else {\n        console[_0x32804c(0x0)]('red');\n    }\n};\nfunction a0_0x41e3(jHqJzX, key) {\n    const stringArray = a0_0xba65();\n    a0_0x41e3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x41e3(jHqJzX, key);\n}\nMain(require('fs')['readFileSync'](a0_0x32e3c7(0x1), a0_0x32e3c7(0x2)));\nfunction a0_0xba65() {\n    const _0x28a816 = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xba65 = function () {\n        return _0x28a816;\n    };\n    return a0_0xba65();\n}", "test_cases": [["3200\npink", "pink"], ["3199\npink", "red"], ["4049\nred", "red"]], "original": "const Main = (input) => {\ninput = input.split('\\n')\nconst a = input[0];\nconst s = input[1];\n\nif(a>=3200){\n  console.log(s);\n}\nelse{\n  console.log(\"red\");\n}\n  \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p02936_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x346f(fAzvUp, key) {\n    const stringArray = a0_0x3d92();\n    a0_0x346f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x346f(fAzvUp, key);\n}\nfunction a0_0x3d92() {\n    const _0xf8aeab = [\n        'trim',\n        'map',\n        'split',\n        'slice',\n        'push',\n        'pop',\n        'concat',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3d92 = function () {\n        return _0xf8aeab;\n    };\n    return a0_0x3d92();\n}\nconst a0_0x535cb0 = a0_0x346f;\nfunction main(input) {\n    const _0x1f6e31 = a0_0x346f;\n    const tmp = input[_0x1f6e31(0x0)]()['split']('\\x0a')[_0x1f6e31(0x1)](v => v[_0x1f6e31(0x2)]('\\x20')[_0x1f6e31(0x1)](v => parseFloat(v)));\n    const n = tmp[0x0][0x0];\n    const q = tmp[0x0][0x1];\n    const edges = tmp[_0x1f6e31(0x3)](0x1, n);\n    const actions = tmp[_0x1f6e31(0x3)](n, n + q);\n    const nodes = [...new Array(n + 0x1)]['map'](v => []);\n    for (let i = 0x0; i < n - 0x1; i++) {\n        const p = edges[i][0x0];\n        nodes[p][_0x1f6e31(0x4)](edges[i][0x1]);\n    }\n    const ans = [...new Array(n + 0x1)][_0x1f6e31(0x1)](v => 0x0);\n    for (let i = 0x0; i < q; i++) {\n        const act = actions[i];\n        const cnt = act[0x1];\n        ans[act[0x0]] += cnt;\n        let stack = [...nodes[act[0x0]]];\n        while (stack['length'] > 0x0) {\n            const t = stack[_0x1f6e31(0x5)]();\n            ans[t] += cnt;\n            stack = stack[_0x1f6e31(0x6)](nodes[t]);\n        }\n    }\n    console['log'](ans[_0x1f6e31(0x3)](0x1)['join']('\\x20'));\n}\nmain(require('fs')[a0_0x535cb0(0x7)](a0_0x535cb0(0x8), a0_0x535cb0(0x9)));", "test_cases": [["4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1", "100 110 111 110"], ["6 2\n1 2\n1 3\n2 4\n3 6\n2 5\n1 10\n1 10", "20 20 20 20 20 20"]], "original": "'use strict'\n\nfunction main(input) {\n  const tmp = input\n    .trim()\n    .split('\\n')\n    .map(v => v.split(' ').map(v => parseFloat(v)))\n  const n = tmp[0][0]\n  const q = tmp[0][1]\n  const edges = tmp.slice(1, n)\n  const actions = tmp.slice(n, n + q)\n\n  const nodes = [...new Array(n + 1)].map(v => [])\n  for (let i = 0; i < n - 1; i++) {\n    const p = edges[i][0]\n    nodes[p].push(edges[i][1])\n  }\n\n  const ans = [...new Array(n + 1)].map(v => 0)\n  // actions.forEach((act, i, self) => {\n  for (let i = 0; i < q; i++) {\n    const act = actions[i]\n    const cnt = act[1]\n    ans[act[0]] += cnt\n    let stack = [...nodes[act[0]]]\n\n    while (stack.length > 0) {\n      const t = stack.pop()\n      ans[t] += cnt\n      // stack = [...stack, ...nodes[t]]\n      stack = stack.concat(nodes[t])\n    }\n  }\n  console.log(ans.slice(1).join(' '))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02957_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3d71() {\n    const _0x44696f = [\n        'split',\n        'map',\n        'log',\n        'IMPOSSIBLE',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3d71 = function () {\n        return _0x44696f;\n    };\n    return a0_0x3d71();\n}\nfunction a0_0x7de3(gWrXiu, key) {\n    const stringArray = a0_0x3d71();\n    a0_0x7de3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7de3(gWrXiu, key);\n}\nconst a0_0x164835 = a0_0x7de3;\nconst main = input => {\n    const _0x1990e7 = a0_0x7de3;\n    const args = input[_0x1990e7(0x0)]('\\x0a')[_0x1990e7(0x1)](arg => arg[_0x1990e7(0x0)]('\\x20'));\n    const a = parseInt(args[0x0][0x0], 0xa);\n    const b = parseInt(args[0x0][0x1], 0xa);\n    const t1 = a + b;\n    const t2 = t1 / 0x2;\n    if (t2 % 0x1 === 0x0)\n        console[_0x1990e7(0x2)](t2);\n    else\n        console['log'](_0x1990e7(0x3));\n};\nmain(require('fs')[a0_0x164835(0x4)]('/dev/stdin', a0_0x164835(0x5)));", "test_cases": [["2 16", "9"], ["0 3", "IMPOSSIBLE"], ["998244353 99824435", "549034394"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst a = parseInt(args[0][0], 10)\n\tconst b = parseInt(args[0][1], 10)\n\tconst t1 = a + b\n\tconst t2 = t1 / 2\n\tif (t2 % 1 === 0) console.log(t2)\n\telse console.log('IMPOSSIBLE')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02958_1", "type": "JavaScript", "obfuscated": "var a0_0x32c4b1 = a0_0x4fc7;\nprocess[a0_0x32c4b1(0x0)][a0_0x32c4b1(0x1)]();\nprocess['stdin'][a0_0x32c4b1(0x2)]('utf8');\nvar lines = [];\nvar reader = require(a0_0x32c4b1(0x3))['createInterface']({\n    'input': process[a0_0x32c4b1(0x0)],\n    'output': process[a0_0x32c4b1(0x4)]\n});\nreader['on'](a0_0x32c4b1(0x5), line => {\n    var _0x238b96 = a0_0x4fc7;\n    lines[_0x238b96(0x6)](line);\n});\nfunction a0_0x4fc7(oVOWoM, key) {\n    var stringArray = a0_0x548e();\n    a0_0x4fc7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fc7(oVOWoM, key);\n}\nreader['on'](a0_0x32c4b1(0x7), () => {\n    var _0x4b8a69 = a0_0x4fc7;\n    const a = lines[0x1][_0x4b8a69(0x8)]('\\x20')[_0x4b8a69(0x9)](v => v - 0x0);\n    const b = lines[0x1][_0x4b8a69(0x8)]('\\x20')[_0x4b8a69(0x9)](v => v - 0x0)['sort']((a, b) => a - b);\n    let ans = a[_0x4b8a69(0xa)]((v, i) => v != b[i])['length'];\n    console[_0x4b8a69(0xb)](ans <= 0x2 ? _0x4b8a69(0xc) : 'NO');\n});\nfunction a0_0x548e() {\n    var _0xf02cba = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'readline',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'map',\n        'filter',\n        'log',\n        'YES',\n        'reduce'\n    ];\n    a0_0x548e = function () {\n        return _0xf02cba;\n    };\n    return a0_0x548e();\n}\nmin = (...a) => {\n    var _0x491017 = a0_0x4fc7;\n    return a[_0x491017(0xd)]((a, b) => a < b ? a : b, a[0x0]);\n};", "test_cases": [["5\n5 2 3 4 1", "YES"], ["5\n2 4 3 5 1", "NO"], ["7\n1 2 3 4 5 6 7", "YES"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const a = lines[1].split(\" \").map(v=>v-0);\n    const b = lines[1].split(\" \").map(v=>v-0).sort((a,b)=>a-b);\n    let ans = a.filter((v,i)=>v!=b[i]).length;\n    console.log(ans<=2?\"YES\":\"NO\");\n});\n\nmin = (...a)=>{return a.reduce((a,b)=>a<b?a:b, a[0])};\n", "language": "JavaScript"}
{"filename": "p02969_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x466a() {\n    var _0x4efe73 = [\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x466a = function () {\n        return _0x4efe73;\n    };\n    return a0_0x466a();\n}\nvar a0_0x348321 = a0_0x50fe;\nvar input = require('fs')[a0_0x348321(0x0)](a0_0x348321(0x1), 'utf8');\nfunction a0_0x50fe(oXfThb, key) {\n    var stringArray = a0_0x466a();\n    a0_0x50fe = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50fe(oXfThb, key);\n}\nvar r = parseInt(input, 0xa);\nconsole['log'](0x3 * r * r);", "test_cases": [["4", "48"], ["15", "675"], ["80", "19200"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar r = parseInt(input, 10);\nconsole.log(3 * r * r);\n", "language": "JavaScript"}
{"filename": "p02971_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x37e790 = a0_0x2f05;\nfunction a0_0x2f05(AGDOWg, key) {\n    var stringArray = a0_0x2736();\n    a0_0x2f05 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f05(AGDOWg, key);\n}\nfunction main(arg) {\n    var _0x1f3b95 = a0_0x2f05;\n    var input = arg[_0x1f3b95(0x0)]('\\x0a');\n    var retu = input[0x0];\n    var kazu = [];\n    for (var i = 0x1; retu >= i; i++) {\n        kazu[_0x1f3b95(0x1)](input[i]);\n    }\n    for (var x = 0x0, len = kazu['length']; x < len; ++x) {\n        var kazu2 = kazu[_0x1f3b95(0x2)](0x0, kazu['length']);\n        kazu2['splice'](x, 0x1);\n        console[_0x1f3b95(0x3)](Math['max'][_0x1f3b95(0x4)](null, kazu2));\n    }\n}\nmain(require('fs')[a0_0x37e790(0x5)]('/dev/stdin', a0_0x37e790(0x6)));\nfunction a0_0x2736() {\n    var _0x54d9d1 = [\n        'split',\n        'push',\n        'slice',\n        'log',\n        'apply',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2736 = function () {\n        return _0x54d9d1;\n    };\n    return a0_0x2736();\n}", "test_cases": [["3\n1\n4\n3", "4\n3\n4"], ["2\n5\n5", "5\n5"]], "original": "\"use strict\"\nfunction main(arg) {\n    //とりあえず行を分割\n    var input = arg.split(\"\\n\");\n    var retu = input[0];\n    var kazu = [];\n    for(var i = 1; retu >= i ;i++){\n        kazu.push(input[i]);\n    }\n\n//X番目を抜いた中で一番大きいやつを求める\nfor (var x = 0, len = kazu.length; x < len; ++x) {\n  var kazu2 = kazu.slice(0, kazu.length);\n  kazu2.splice(x, 1);\n  console.log(Math.max.apply(null, kazu2));\n}\n    \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03024_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3a50(SjwNFg, key) {\n    const stringArray = a0_0x24bc();\n    a0_0x3a50 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a50(SjwNFg, key);\n}\nconst a0_0x2f7fab = a0_0x3a50;\nconst main = arg => {\n    const _0x1f938e = a0_0x3a50;\n    arg = arg['trim']()[_0x1f938e(0x0)]('\\x0a');\n    const S = arg[0x0][_0x1f938e(0x0)]('');\n    const win = S['filter'](n => n === 'o')[_0x1f938e(0x1)];\n    const rest = 0xf - S[_0x1f938e(0x1)];\n    console[_0x1f938e(0x2)](rest + win >= 0x8 ? _0x1f938e(0x3) : 'NO');\n};\nfunction a0_0x24bc() {\n    const _0x4956f4 = [\n        'split',\n        'length',\n        'log',\n        'YES',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x24bc = function () {\n        return _0x4956f4;\n    };\n    return a0_0x24bc();\n}\nmain(require('fs')[a0_0x2f7fab(0x4)](a0_0x2f7fab(0x5), a0_0x2f7fab(0x6)));", "test_cases": [["oxoxoxoxoxoxox", "YES"], ["xxxxxxxx", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    const win  = S.filter(n=>n===\"o\").length;\n    const rest = 15 - S.length;\n    \n    console.log((rest + win) >= 8 ? \"YES\" : \"NO\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03042_1", "type": "JavaScript", "obfuscated": "function a0_0x5c7f(SebZBg, key) {\n    var stringArray = a0_0x1d31();\n    a0_0x5c7f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c7f(SebZBg, key);\n}\nvar a0_0x592103 = a0_0x5c7f;\nfunction a0_0x1d31() {\n    var _0x3af874 = [\n        'charAt',\n        'sZiUC',\n        'log',\n        'AMBIGUOUS',\n        'YYMM',\n        'readFileSync'\n    ];\n    a0_0x1d31 = function () {\n        return _0x3af874;\n    };\n    return a0_0x1d31();\n}\nfunction Main(input) {\n    var _0x52cfb6 = a0_0x5c7f;\n    var a = parseInt(input[_0x52cfb6(0x0)](0x0) + input[_0x52cfb6(0x0)](0x1));\n    var b = parseInt(input[_0x52cfb6(0x0)](0x2) + input[_0x52cfb6(0x0)](0x3));\n    var r = 0x0;\n    if (a >= 0xd || a == 0x0) {\n        r = 0x1;\n    }\n    if (b >= 0xd || b == 0x0) {\n        r = 0x2;\n    }\n    if (a >= 0x1 && a <= 0xc && b >= 0x1 && b <= 0xc) {\n        r = 0x3;\n    }\n    if (a >= 0xd && b >= 0xd || a >= 0xd && b == 0x0 || a == 0x0 && b >= 0xd || a == 0x0 && b == 0x0) {\n        if (_0x52cfb6(0x1) !== 'Tielg') {\n            r = 0x4;\n        } else {\n            console[_0x52cfb6(0x2)](_0x52cfb6(0x3));\n        }\n    }\n    if (r == 0x1) {\n        console['log'](_0x52cfb6(0x4));\n    }\n    if (r == 0x2) {\n        console[_0x52cfb6(0x2)]('MMYY');\n    }\n    if (r == 0x3) {\n        console[_0x52cfb6(0x2)]('AMBIGUOUS');\n    }\n    if (r == 0x4) {\n        console[_0x52cfb6(0x2)]('NA');\n    }\n}\nMain(require('fs')[a0_0x592103(0x5)]('/dev/stdin', 'utf8'));", "test_cases": [["1905", "YYMM"], ["0112", "AMBIGUOUS"], ["1700", "NA"]], "original": "function Main(input) {\n\tvar a = parseInt(input.charAt(0)+input.charAt(1));\n\tvar b = parseInt(input.charAt(2)+input.charAt(3));\n\tvar r = 0;\t// 1=YYMM、2=MMYY、3=両方、4=どちらでもない\n\tif(a >= 13 || a == 0){\n\t\tr = 1;\n\t}\n\tif(b >= 13 || b == 0){\n\t\tr = 2;\n\t}\n\tif(a >= 1 && a <= 12 && b >= 1 && b <= 12){\n\t\tr = 3;\n\t}\n\tif(a >= 13 && b >= 13 || a >= 13 && b == 0 || a == 0 && b >= 13 || a == 0 && b == 0){\n\t\tr = 4;\n\t}\n\tif(r == 1){ console.log(\"YYMM\"); }\n\tif(r == 2){ console.log(\"MMYY\"); }\n\tif(r == 3){ console.log(\"AMBIGUOUS\"); }\n\tif(r == 4){ console.log(\"NA\"); }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03068_1", "type": "JavaScript", "obfuscated": "var a0_0x15e55 = a0_0x348c;\nfunction a0_0x4468() {\n    var _0x3acde1 = [\n        'readline',\n        'stdin',\n        'stdout',\n        'line',\n        'push',\n        'split',\n        'DjTYk',\n        'XOFmG',\n        'log'\n    ];\n    a0_0x4468 = function () {\n        return _0x3acde1;\n    };\n    return a0_0x4468();\n}\nfunction a0_0x348c(bspvRN, key) {\n    var stringArray = a0_0x4468();\n    a0_0x348c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x348c(bspvRN, key);\n}\nvar lines = [];\nvar readline = require(a0_0x15e55(0x0));\nvar rl = readline['createInterface']({\n    'input': process[a0_0x15e55(0x1)],\n    'output': process[a0_0x15e55(0x2)]\n});\nrl['on'](a0_0x15e55(0x3), function (x) {\n    var _0x5361b7 = a0_0x348c;\n    lines[_0x5361b7(0x4)](x);\n});\nrl['on']('close', function () {\n    var _0x4f7ac9 = a0_0x348c;\n    var N = Number(lines[0x0]);\n    var S = lines[0x1][_0x4f7ac9(0x5)]('');\n    var K = Number(lines[0x2]);\n    for (var i = 0x0; i < N; i++) {\n        if (S[K - 0x1] !== S[i]) {\n            if (_0x4f7ac9(0x6) === _0x4f7ac9(0x6)) {\n                S[i] = '*';\n            } else {\n                lines['push'](x);\n            }\n        }\n    }\n    var result = '';\n    for (var i = 0x0; i < N; i++) {\n        if ('HPawJ' !== _0x4f7ac9(0x7)) {\n            result = result + S[i];\n        } else {\n            var N = Number(lines[0x0]);\n            var S = lines[0x1][_0x4f7ac9(0x5)]('');\n            var K = Number(lines[0x2]);\n            for (var i = 0x0; i < N; i++) {\n                if (S[K - 0x1] !== S[i]) {\n                    S[i] = '*';\n                }\n            }\n            var result = '';\n            for (var i = 0x0; i < N; i++) {\n                result = result + S[i];\n            }\n            console[_0x4f7ac9(0x8)](result);\n        }\n    }\n    console[_0x4f7ac9(0x8)](result);\n});", "test_cases": [["5\nerror\n2", "*rr*r"], ["6\neleven\n5", "e*e*e*"], ["9\neducation\n7", "******i**"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var S = lines[1].split(\"\");\n    var K = Number(lines[2]);\n\n    for (var i = 0; i < N; i++) {\n        if (S[K - 1] !== S[i]) { S[i] = \"*\"; }\n    }\n    var result =\"\";\n    for (var i = 0; i < N; i++) {\n        result = result + S[i];\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p03125_1", "type": "JavaScript", "obfuscated": "const a0_0x3a69d5 = a0_0x2f18;\nfunction main(input) {\n    const _0xeffbcf = a0_0x2f18;\n    input = input[_0xeffbcf(0x0)]();\n    const a = input[_0xeffbcf(0x1)]('\\x20')[_0xeffbcf(0x2)](Number);\n    console[_0xeffbcf(0x3)](a[0x1] % a[0x0] == 0x0 ? a[0x0] + a[0x1] : a[0x1] - a[0x0]);\n}\nfunction a0_0x2f18(HYFTjQ, key) {\n    const stringArray = a0_0x2d74();\n    a0_0x2f18 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f18(HYFTjQ, key);\n}\nfunction a0_0x2d74() {\n    const _0xc7281 = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2d74 = function () {\n        return _0xc7281;\n    };\n    return a0_0x2d74();\n}\nmain(require('fs')['readFileSync'](a0_0x3a69d5(0x4), a0_0x3a69d5(0x5)));", "test_cases": [["4 12", "16"], ["8 20", "12"], ["1 1", "2"]], "original": "function main(input) {\n   input = input.trim();\n  const a = input.split(\" \").map(Number);\n\tconsole.log(a[1]%a[0]==0?a[0]+a[1]:a[1]-a[0]);\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03136_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x230586 = a0_0x19f4;\nfunction a0_0x19f4(fCIVlD, key) {\n    const stringArray = a0_0x116e();\n    a0_0x19f4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19f4(fCIVlD, key);\n}\nconst main = arg => {\n    const _0x52dc85 = a0_0x19f4;\n    arg = arg[_0x52dc85(0x0)]()[_0x52dc85(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    let L = arg[0x1][_0x52dc85(0x1)]('\\x20')[_0x52dc85(0x2)](n => parseInt(n))[_0x52dc85(0x3)]((a, b) => b - a);\n    const longest = L[_0x52dc85(0x4)]();\n    const sum = L[_0x52dc85(0x5)]((m, n) => m + n);\n    console[_0x52dc85(0x6)](longest < sum ? 'Yes' : 'No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x230586(0x7)));\nfunction a0_0x116e() {\n    const _0x4445b4 = [\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'shift',\n        'reduce',\n        'log',\n        'utf8'\n    ];\n    a0_0x116e = function () {\n        return _0x4445b4;\n    };\n    return a0_0x116e();\n}", "test_cases": [["4\n3 8 5 1", "Yes"], ["4\n3 8 4 1", "No"], ["10\n1 8 10 5 8 12 34 100 11 3", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    let L = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>b-a);\n    \n    const longest = L.shift();\n    const sum = L.reduce((m,n)=>m+n);\n    \n    console.log(longest < sum ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03285_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4c554d = a0_0x5405;\nfunction Main(input) {\n    let N = Number(input);\n    const func = () => {\n        const _0x1a4deb = a0_0x5405;\n        if (N < 0x4) {\n            console['log']('No');\n        } else if (N % 0x4 === 0x0) {\n            console[_0x1a4deb(0x0)]('Yes');\n        } else if (N % 0x7 === 0x0) {\n            console[_0x1a4deb(0x0)](_0x1a4deb(0x1));\n        } else {\n            N -= 0x4;\n            func();\n        }\n    };\n    func();\n}\n;\nfunction a0_0x5405(BFWdVt, key) {\n    const stringArray = a0_0x3c4a();\n    a0_0x5405 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5405(BFWdVt, key);\n}\nMain(require('fs')[a0_0x4c554d(0x2)](a0_0x4c554d(0x3), a0_0x4c554d(0x4))[a0_0x4c554d(0x5)]());\nfunction a0_0x3c4a() {\n    const _0x156ec7 = [\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3c4a = function () {\n        return _0x156ec7;\n    };\n    return a0_0x3c4a();\n}", "test_cases": [["11", "Yes"], ["40", "Yes"], ["3", "No"]], "original": "'use strict';\n\nfunction Main(input) {\n  let N = Number(input);\n\n  const func = () => {\n    if(N < 4) {\n      console.log('No');\n    } else if (N % 4 === 0) {\n      console.log('Yes');\n    } else if (N % 7 === 0) {\n      console.log('Yes');\n    } else {\n      N -= 4;\n      func();\n    }\n  };\n\n  func();\n\n\n\n};\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03294_1", "type": "JavaScript", "obfuscated": "function a0_0x1690() {\n    var _0xf40790 = [\n        'map',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'log'\n    ];\n    a0_0x1690 = function () {\n        return _0xf40790;\n    };\n    return a0_0x1690();\n}\nvar a0_0xf39004 = a0_0x19aa;\nvar toInt = x => parseInt(x, 0xa);\nfunction a0_0x19aa(JlPFrF, key) {\n    var stringArray = a0_0x1690();\n    a0_0x19aa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19aa(JlPFrF, key);\n}\nvar toIntArr = arr => arr[a0_0xf39004(0x0)](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var _0x16681d = a0_0x19aa;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x16681d(0x1)]; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var _0x5dc59c = a0_0x19aa;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x5dc59c(0x1)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')[a0_0xf39004(0x2)](a0_0xf39004(0x3), 'utf8'));\nfunction Main(input) {\n    var _0x30e578 = a0_0x19aa;\n    var input = input['split']('\\x0a');\n    var n = toInt(input[0x0]);\n    var as = toIntArr(input[0x1][_0x30e578(0x4)]('\\x20'));\n    as[_0x30e578(0x1)] = n;\n    var ans = -n;\n    for (var i = 0x0; i < n; i++) {\n        ans += as[i];\n    }\n    console[_0x30e578(0x5)](ans);\n}", "test_cases": [["3\n3 4 6", "10"], ["5\n7 46 11 20 11", "90"], ["7\n994 518 941 851 647 2 581", "4527"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar as = toIntArr(input[1].split(' '));\n\tas.length = n;\n\tvar ans = -n;\n\tfor(var i = 0; i < n; i++){\n\t\tans += as[i];\n\t}\n\tconsole.log(ans);\t\n}", "language": "JavaScript"}
{"filename": "p03316_1", "type": "JavaScript", "obfuscated": "function a0_0x2ce5() {\n    var _0x27c917 = [\n        'toString',\n        'split',\n        'length',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2ce5 = function () {\n        return _0x27c917;\n    };\n    return a0_0x2ce5();\n}\nfunction a0_0x1df9(QrNvVv, key) {\n    var stringArray = a0_0x2ce5();\n    a0_0x1df9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1df9(QrNvVv, key);\n}\nvar a0_0x567ca2 = a0_0x1df9;\nfunction main(input) {\n    var _0x5c05dd = a0_0x1df9;\n    var inputA = input[_0x5c05dd(0x0)]()[_0x5c05dd(0x1)]('');\n    var sum = 0x0;\n    for (var i = 0x0; i < inputA[_0x5c05dd(0x2)]; i++) {\n        sum += parseInt(inputA[i]);\n    }\n    if (parseInt(input) % sum == 0x0) {\n        console[_0x5c05dd(0x3)](_0x5c05dd(0x4));\n    } else {\n        console[_0x5c05dd(0x3)]('No');\n    }\n}\nmain(require('fs')[a0_0x567ca2(0x5)](a0_0x567ca2(0x6), a0_0x567ca2(0x7)));", "test_cases": [["12", "Yes"], ["101", "No"], ["999999999", "Yes"]], "original": "function main(input) {\n  var inputA = input.toString().split('');\n  var sum = 0;\n  for (var i=0;i<inputA.length;i++){\n   \tsum += parseInt(inputA[i]);\n  }\n  if (parseInt(input) % sum == 0) {\n  \tconsole.log('Yes');\n  } else {\n  \tconsole.log('No');\n  }\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03359_1", "type": "JavaScript", "obfuscated": "function a0_0x49a9(dlvpBX, key) {\n    const stringArray = a0_0x5405();\n    a0_0x49a9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x49a9(dlvpBX, key);\n}\nconst a0_0x231ba1 = a0_0x49a9;\nconst input = require('fs')['readFileSync'](a0_0x231ba1(0x0), 'utf8');\nfunction a0_0x5405() {\n    const _0x3adb9e = [\n        '/dev/stdin',\n        'split',\n        'log'\n    ];\n    a0_0x5405 = function () {\n        return _0x3adb9e;\n    };\n    return a0_0x5405();\n}\nconst list = input[a0_0x231ba1(0x1)]('\\x20');\nconst a = Number(list[0x0]);\nconst b = Number(list[0x1]);\nif (a > b) {\n    console[a0_0x231ba1(0x2)](a - 0x1);\n} else {\n    console[a0_0x231ba1(0x2)](a);\n}", "test_cases": [["5 5", "5"], ["2 1", "1"], ["11 30", "11"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst list = input.split(' ');\n\nconst a = Number(list[0]);\n\nconst b = Number(list[1]);\n\nif (a > b) {\n  console.log(a - 1);\n} else {\n  console.log(a);\n}\n", "language": "JavaScript"}
{"filename": "p03369_1", "type": "JavaScript", "obfuscated": "var a0_0x5f195c = a0_0x527a;\nfunction main(s) {\n    var add = 0x0;\n    for (var i = 0x0; i < 0x3; i++) {\n        if (s[i] == 'o') {\n            add++;\n        }\n    }\n    console['log'](0x2bc + add * 0x64);\n}\nfunction a0_0x527a(EjuqVY, key) {\n    var stringArray = a0_0x4133();\n    a0_0x527a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x527a(EjuqVY, key);\n}\nfunction a0_0x4133() {\n    var _0x1bba41 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4133 = function () {\n        return _0x1bba41;\n    };\n    return a0_0x4133();\n}\nmain(require('fs')[a0_0x5f195c(0x0)](a0_0x5f195c(0x1), a0_0x5f195c(0x2)));", "test_cases": [["oxo", "900"], ["ooo", "1000"], ["xxx", "700"]], "original": "function main (s) {\n    var add=0;\n    for(var i=0;i<3;i++){\n        if(s[i]=='o'){\n            add++;\n        }\n    }\n    console.log(700+add*100);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03474_1", "type": "JavaScript", "obfuscated": "function a0_0x22b0(ZsFqWw, key) {\n    var stringArray = a0_0x4273();\n    a0_0x22b0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x22b0(ZsFqWw, key);\n}\nvar a0_0x21e4a2 = a0_0x22b0;\nfunction Main(input) {\n    var _0x2dd1df = a0_0x22b0;\n    input = input[_0x2dd1df(0x0)]('\\x0a');\n    var a = parseInt(input[0x0][_0x2dd1df(0x0)]('\\x20')[0x0], 0xa);\n    var b = parseInt(input[0x0][_0x2dd1df(0x0)]('\\x20')[0x1], 0xa);\n    var s = input[0x1];\n    var regex = new RegExp('^[0-9]{' + a + '}-[0-9]{' + b + '}$', 'g');\n    var f = s['match'](regex);\n    console[_0x2dd1df(0x1)](f == null ? 'No' : 'Yes');\n}\nMain(require('fs')[a0_0x21e4a2(0x2)](a0_0x21e4a2(0x3), a0_0x21e4a2(0x4)));\nfunction a0_0x4273() {\n    var _0x1a96a8 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4273 = function () {\n        return _0x1a96a8;\n    };\n    return a0_0x4273();\n}", "test_cases": [["3 4\n269-6650", "Yes"], ["1 1\n---", "No"], ["1 2\n7444", "No"]], "original": "function Main(input) {\n  input = input.split('\\n');\n\n  var a = parseInt(input[0].split(' ')[0], 10);\n  var b = parseInt(input[0].split(' ')[1], 10);\n  var s = input[1];\n\n  var regex = new RegExp(`^[0-9]{${a}}-[0-9]{${b}}$`, 'g');\n  var f = s.match(regex);\n\n  console.log(f == null ? 'No' : 'Yes');\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03501_1", "type": "JavaScript", "obfuscated": "function a0_0x1c28(dyASnx, key) {\n    const stringArray = a0_0x2d2f();\n    a0_0x1c28 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c28(dyASnx, key);\n}\nfunction a0_0x2d2f() {\n    const _0x2b87a7 = [\n        'log',\n        'readFileSync'\n    ];\n    a0_0x2d2f = function () {\n        return _0x2b87a7;\n    };\n    return a0_0x2d2f();\n}\nconst a0_0x273b9f = a0_0x1c28;\nfunction Main(input) {\n    const _0x4f7dd0 = a0_0x1c28;\n    const numbers = input['split']('\\x20')['map'](n => Number(n));\n    const p1 = numbers[0x0] * numbers[0x1];\n    const p2 = numbers[0x2];\n    if (p1 > p2) {\n        console['log'](p2);\n    } else {\n        console[_0x4f7dd0(0x0)](p1);\n    }\n}\nMain(require('fs')[a0_0x273b9f(0x1)]('/dev/stdin', 'utf8'));", "test_cases": [["7 17 120", "119"], ["5 20 100", "100"], ["6 18 100", "100"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const p1 = numbers[0] * numbers[1];\n  const p2 = numbers[2];\n\n  if (p1 > p2) {\n    console.log(p2);\n  } else {\n    console.log(p1);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03657_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1a5927 = a0_0x5013;\nfunction a0_0x5013(HpZYpN, key) {\n    const stringArray = a0_0x10e6();\n    a0_0x5013 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5013(HpZYpN, key);\n}\nfunction Main(input) {\n    const _0x3ea3dc = a0_0x5013;\n    input = input[_0x3ea3dc(0x0)]('\\x0a');\n    const arr = input[0x0][_0x3ea3dc(0x0)]('\\x20');\n    if (arr[0x0] % 0x3 === 0x0 || arr[0x1] % 0x3 === 0x0 || (arr[0x0] + arr[0x1]) % 0x3 === 0x0) {\n        console[_0x3ea3dc(0x1)](_0x3ea3dc(0x2));\n    } else {\n        console[_0x3ea3dc(0x1)](_0x3ea3dc(0x3));\n    }\n}\nfunction a0_0x10e6() {\n    const _0x52cd66 = [\n        'split',\n        'log',\n        'Possible',\n        'Impossible',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x10e6 = function () {\n        return _0x52cd66;\n    };\n    return a0_0x10e6();\n}\nMain(require('fs')['readFileSync'](a0_0x1a5927(0x4), a0_0x1a5927(0x5)));", "test_cases": [["4 5", "Possible"], ["1 1", "Impossible"]], "original": "'use strict'\nfunction Main(input) {\n    input = input.split(\"\\n\");\n    const arr = input[0].split(' ')\n    if (arr[0] % 3 === 0 || arr[1] % 3 === 0 || (arr[0] + arr[1]) % 3 === 0) {\n        console.log('Possible')\n    } else {\n        console.log('Impossible')\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03997_1", "type": "JavaScript", "obfuscated": "function a0_0x2242(xpUYwD, key) {\n    var stringArray = a0_0x30ce();\n    a0_0x2242 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2242(xpUYwD, key);\n}\nvar a0_0x8974ae = a0_0x2242;\nfunction a0_0x30ce() {\n    var _0x4acefe = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x30ce = function () {\n        return _0x4acefe;\n    };\n    return a0_0x30ce();\n}\nfunction Main(input) {\n    var _0x16e24c = a0_0x2242;\n    input = input[_0x16e24c(0x0)]('\\x0a');\n    input[0x0] = Number(input[0x0]);\n    input[0x1] = Number(input[0x1]);\n    input[0x2] = Number(input[0x2]);\n    console[_0x16e24c(0x1)]((input[0x0] + input[0x1]) * input[0x2] / 0x2);\n}\nMain(require('fs')[a0_0x8974ae(0x2)](a0_0x8974ae(0x3), a0_0x8974ae(0x4)));", "test_cases": [["3\n4\n2", "7"], ["4\n4\n4", "16"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    input[0] = Number(input[0]);\n    input[1] = Number(input[1]);\n    input[2] = Number(input[2]);\n    console.log((input[0] + input[1]) * input[2] / 2);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04044_1", "type": "JavaScript", "obfuscated": "function a0_0x534a() {\n    var _0x48c9e6 = [\n        'splice',\n        'length',\n        'sort',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x534a = function () {\n        return _0x48c9e6;\n    };\n    return a0_0x534a();\n}\nvar a0_0x2d9ec4 = a0_0x5e5d;\nfunction a0_0x5e5d(jbrbwK, key) {\n    var stringArray = a0_0x534a();\n    a0_0x5e5d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e5d(jbrbwK, key);\n}\nfunction Main(input) {\n    var _0x126a80 = a0_0x5e5d;\n    var lines = input['split']('\\x0a');\n    var s = lines[_0x126a80(0x0)](0x1, lines[_0x126a80(0x1)]);\n    var s_sorted = s[_0x126a80(0x2)]((a, b) => a > b ? 0x1 : -0x1);\n    console['log'](s_sorted[_0x126a80(0x3)](''));\n}\nMain(require('fs')[a0_0x2d9ec4(0x4)](a0_0x2d9ec4(0x5), a0_0x2d9ec4(0x6)));", "test_cases": [["3 3\ndxx\naxx\ncxx", "axxcxxdxx"]], "original": "function Main(input) {\n\tvar lines = input.split(\"\\n\");\n\tvar s = lines.splice(1, lines.length)\n\tvar s_sorted = s.sort((a, b) => a > b ? 1 : -1)\n\tconsole.log(s_sorted.join(''))\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02264_1", "type": "JavaScript", "obfuscated": "function a0_0x2c44(UtnEkt, key) {\n    var stringArray = a0_0x21b3();\n    a0_0x2c44 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c44(UtnEkt, key);\n}\nvar a0_0x7b2bc0 = a0_0x2c44;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x7b2bc0(0x0));\nvar Arr = input[a0_0x7b2bc0(0x1)]()['split']('\\x0a');\nfunction a0_0x21b3() {\n    var _0x3189d1 = [\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'length',\n        'log',\n        'push'\n    ];\n    a0_0x21b3 = function () {\n        return _0x3189d1;\n    };\n    return a0_0x21b3();\n}\nvar t = Arr[0x0][a0_0x7b2bc0(0x2)]('\\x20')[0x1] - 0x0;\nArr[a0_0x7b2bc0(0x3)]();\nvar T = 0x0;\nwhile (Arr[a0_0x7b2bc0(0x4)] != 0x0) {\n    var arr = Arr[0x0][a0_0x7b2bc0(0x2)]('\\x20');\n    Arr[a0_0x7b2bc0(0x3)]();\n    var a = arr[0x0];\n    var b = arr[0x1] - 0x0;\n    if (b - t <= 0x0) {\n        console[a0_0x7b2bc0(0x5)](a + '\\x20' + (T + b));\n        T += b;\n    } else {\n        Arr[a0_0x7b2bc0(0x6)](a + '\\x20' + (b - t));\n        T += t;\n    }\n}", "test_cases": [["5 100\np1 150\np2 80\np3 200\np4 350\np5 20", "p2 180\np5 400\np1 450\np3 550\np4 800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar t=(Arr[0].split(\" \"))[1]-0;\nArr.shift();\nvar T=0;\nwhile(Arr.length!=0){\n   var arr=Arr[0].split(\" \");\n   Arr.shift();\n   var a=arr[0];\n   var b=arr[1]-0;\n   if(b-t<=0){\n      console.log(a+\" \"+(T+b));\n      T+=b;\n   }else{\n      Arr.push(a+\" \"+(b-t));\n      T+=t;\n   }\n}", "language": "JavaScript"}
{"filename": "p02269_1", "type": "JavaScript", "obfuscated": "function a0_0x46fd() {\n    var _0x441ad4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'find',\n        'log',\n        'hasOwnProperty',\n        'yes'\n    ];\n    a0_0x46fd = function () {\n        return _0x441ad4;\n    };\n    return a0_0x46fd();\n}\nvar a0_0x1d902c = a0_0x2a19;\nvar input = require('fs')[a0_0x1d902c(0x0)](a0_0x1d902c(0x1), a0_0x1d902c(0x2));\nvar Arr = input[a0_0x1d902c(0x3)]()['split']('\\x0a');\nArr[a0_0x1d902c(0x4)]();\nvar obj = {};\nfunction a0_0x2a19(fahSul, key) {\n    var stringArray = a0_0x46fd();\n    a0_0x2a19 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a19(fahSul, key);\n}\nArr['forEach'](function (v) {\n    var _0x9a4ee = a0_0x2a19;\n    var arr = v[_0x9a4ee(0x5)]('\\x20');\n    if (arr[0x0] == 'insert')\n        obj[arr[0x1]] = !![];\n    if (arr[0x0] == _0x9a4ee(0x6))\n        console[_0x9a4ee(0x7)](obj[_0x9a4ee(0x8)](arr[0x1]) ? _0x9a4ee(0x9) : 'no');\n});", "test_cases": [["5\ninsert A\ninsert T\ninsert C\nfind G\nfind A", "no\nyes"], ["13\ninsert AAA\ninsert AAC\ninsert AGA\ninsert AGG\ninsert TTT\nfind AAA\nfind CCC\nfind CCC\ninsert CCC\nfind CCC\ninsert T\nfind TTT\nfind T", "yes\nno\nno\nyes\nyes\nyes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.shift();\nvar obj={};\nArr.forEach(function(v){\nvar arr=v.split(\" \");\nif(arr[0]==\"insert\")obj[arr[1]]=true;\nif(arr[0]==\"find\")console.log(obj.hasOwnProperty(arr[1]) ? \"yes\":\"no\");\n});", "language": "JavaScript"}
{"filename": "p02392_1", "type": "JavaScript", "obfuscated": "function a0_0x3d98(EDrlTW, key) {\n    var stringArray = a0_0x4639();\n    a0_0x3d98 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d98(EDrlTW, key);\n}\nfunction a0_0x4639() {\n    var _0x3e3383 = [\n        'stdin',\n        'setEncoding',\n        'split',\n        'map'\n    ];\n    a0_0x4639 = function () {\n        return _0x3e3383;\n    };\n    return a0_0x4639();\n}\nvar a0_0x3b42e6 = a0_0x3d98;\nprocess[a0_0x3b42e6(0x0)]['resume']();\nprocess[a0_0x3b42e6(0x0)][a0_0x3b42e6(0x1)]('utf8');\nprocess[a0_0x3b42e6(0x0)]['on']('data', function (x) {\n    var _0x57ca85 = a0_0x3d98;\n    var args = x[_0x57ca85(0x2)]('\\x20')[_0x57ca85(0x3)](Number);\n    var a = args[0x0];\n    var b = args[0x1];\n    var c = args[0x2];\n    console['log']('%s', a < b && b < c ? 'Yes' : 'No');\n});", "test_cases": [["1 3 8", "Yes"], ["3 8 1", "No"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(x) {\n    var args = x.split(' ').map(Number);\n    var a = args[0];\n    var b = args[1];\n    var c = args[2];\n    console.log('%s', a < b && b < c ? 'Yes' : 'No');\n});", "language": "JavaScript"}
{"filename": "p02393_1", "type": "JavaScript", "obfuscated": "function a0_0x1f32() {\n    var _0x31b423 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        '%d\\x20%d\\x20%d'\n    ];\n    a0_0x1f32 = function () {\n        return _0x31b423;\n    };\n    return a0_0x1f32();\n}\nvar a0_0x582a84 = a0_0x3fd5;\nvar input = require('fs')[a0_0x582a84(0x0)](a0_0x582a84(0x1), a0_0x582a84(0x2));\nfunction a0_0x3fd5(RYUrXW, key) {\n    var stringArray = a0_0x1f32();\n    a0_0x3fd5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fd5(RYUrXW, key);\n}\nvar cnt, i, j;\ninput = input[a0_0x582a84(0x3)]('\\x20');\nfor (cnt = 0x0; cnt < 0x3; cnt++) {\n    for (i = 0x0; i < 0x3; i++) {\n        if (input[i] > input[i + 0x1]) {\n            j = input[i];\n            input[i] = input[i + 0x1];\n            input[i + 0x1] = j;\n        }\n    }\n}\nconsole['log'](a0_0x582a84(0x4), input[0x0], input[0x1], input[0x2]);", "test_cases": [["3 8 1", "1 3 8"]], "original": "var input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cnt,i,j;\n\ninput=input.split(\" \");\nfor(cnt=0;cnt<3;cnt++){\nfor(i=0;i<3;i++){\n    if(input[i]>input[i+1]){\n        j=input[i]\n        input[i]=input[i+1]\n        input[i+1]=j\n    }\n}\n}\n\nconsole.log(\"%d %d %d\",input[0],input[1],input[2]);\n\n", "language": "JavaScript"}
{"filename": "p02397_1", "type": "JavaScript", "obfuscated": "var a0_0x5a9623 = a0_0x39ad;\nfunction a0_0x20a3() {\n    var _0x176f77 = [\n        'log',\n        'readline',\n        'stdin',\n        'stdout',\n        'line',\n        'split',\n        'push'\n    ];\n    a0_0x20a3 = function () {\n        return _0x176f77;\n    };\n    return a0_0x20a3();\n}\nfunction main(tmp) {\n    var _0x578aeb = a0_0x39ad;\n    var i = 0x0;\n    while (tmp[i] != 0x0 && tmp[i + 0x1] != 0x0) {\n        if (tmp[i] < tmp[i + 0x1])\n            console[_0x578aeb(0x0)](tmp[i] + '\\x20' + tmp[i + 0x1]);\n        else\n            console[_0x578aeb(0x0)](tmp[i + 0x1] + '\\x20' + tmp[i]);\n        i = i + 0x2;\n    }\n}\nvar lines = [];\nvar b = [];\nvar reader = require(a0_0x5a9623(0x1))['createInterface']({\n    'input': process[a0_0x5a9623(0x2)],\n    'output': process[a0_0x5a9623(0x3)]\n});\nfunction a0_0x39ad(cnBDWr, key) {\n    var stringArray = a0_0x20a3();\n    a0_0x39ad = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x39ad(cnBDWr, key);\n}\nreader['on'](a0_0x5a9623(0x4), function (line) {\n    var _0x4288d7 = a0_0x39ad;\n    var a = line[_0x4288d7(0x5)]('\\x20');\n    var c = parseInt(a[0x0], 0xa);\n    var d = parseInt(a[0x1], 0xa);\n    b[_0x4288d7(0x6)](c);\n    b[_0x4288d7(0x6)](d);\n    if (c == 0x0 && d == 0x0)\n        main(b);\n});\nprocess['stdin']['on']('end', function () {\n});", "test_cases": [["3 2\n2 2\n5 3\n0 0", "2 3\n2 2\n3 5"]], "original": "function main(tmp) {\n  var i = 0;\n  while(tmp[i]!=0 && tmp[i+1]!=0){\n    if(tmp[i]<tmp[i+1])\n      console.log(tmp[i]+\" \"+tmp[i+1]);\n    else\n      console.log(tmp[i+1]+\" \"+tmp[i]);\n    i = i + 2;\n  }\n}\nvar lines = [];\nvar b = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var c = parseInt(a[0],10);\n  var d = parseInt(a[1],10);\n  b.push(c);\n  b.push(d);\n  if(c==0 && d==0)\n    main(b);\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02552_1", "type": "JavaScript", "obfuscated": "const a0_0x3f191b = a0_0x3f29;\nconst main = arg => {\n    const _0xe4f876 = a0_0x3f29;\n    console[_0xe4f876(0x0)](+arg === 0x0 ? 0x1 : 0x0);\n};\nfunction a0_0xa07f() {\n    const _0x517650 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0xa07f = function () {\n        return _0x517650;\n    };\n    return a0_0xa07f();\n}\nfunction a0_0x3f29(CJmlYW, key) {\n    const stringArray = a0_0xa07f();\n    a0_0x3f29 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f29(CJmlYW, key);\n}\nmain(require('fs')[a0_0x3f191b(0x1)](a0_0x3f191b(0x2), 'utf8'));", "test_cases": [["1", "0"], ["0", "1"]], "original": "const main = (arg) => {\n  console.log(+arg === 0 ? 1 : 0);\n};\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02582_1", "type": "JavaScript", "obfuscated": "const a0_0x4e1151 = a0_0x286d;\nfunction a0_0x286d(poBoxN, key) {\n    const stringArray = a0_0x339e();\n    a0_0x286d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x286d(poBoxN, key);\n}\nfunction a0_0x339e() {\n    const _0x1cd1cb = [\n        'trim',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x339e = function () {\n        return _0x1cd1cb;\n    };\n    return a0_0x339e();\n}\nfunction main(input) {\n    const _0x5b883d = a0_0x286d;\n    input = input[_0x5b883d(0x0)]();\n    let list = input['split']('');\n    let answer = 0x0;\n    for (let i = 0x0; i < list['length']; i++) {\n        if (list[i] === 'R') {\n            if (answer === 0x0) {\n                answer++;\n            } else if (list[i - 0x1] === 'R') {\n                answer++;\n            }\n        }\n    }\n    console[_0x5b883d(0x1)](answer);\n}\nmain(require('fs')[a0_0x4e1151(0x2)]('/dev/stdin', 'utf8'));", "test_cases": [["RRS", "2"], ["SSS", "0"], ["RSR", "1"]], "original": "function main(input){\n  input = input.trim();\n  let list = input.split(\"\");\n  let answer = 0;\n  for(let i=0; i<list.length; i++){\n    if(list[i]===\"R\"){\n      if(answer===0){answer++;\n      }else if(list[i-1]===\"R\"){\n        answer++;\n      }                 \n    }\n  }\n  console.log(answer);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02724_1", "type": "JavaScript", "obfuscated": "function a0_0x25c8(YYbdXQ, key) {\n    var stringArray = a0_0x838f();\n    a0_0x25c8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x25c8(YYbdXQ, key);\n}\nvar a0_0x41027a = a0_0x25c8;\nfunction Main(input) {\n    var _0x408b97 = a0_0x25c8;\n    var joy = 0x0;\n    joy += Math[_0x408b97(0x0)](input / 0x1f4) * 0x3e8;\n    joy += Math[_0x408b97(0x0)](input % 0x1f4 / 0x5) * 0x5;\n    console[_0x408b97(0x1)](joy);\n}\nMain(require('fs')['readFileSync'](a0_0x41027a(0x2), a0_0x41027a(0x3)));\nfunction a0_0x838f() {\n    var _0x3f9388 = [\n        'floor',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x838f = function () {\n        return _0x3f9388;\n    };\n    return a0_0x838f();\n}", "test_cases": [["1024", "2020"], ["0", "0"], ["1000000000", "2000000000"]], "original": "function Main(input) {\n  var joy = 0;\n  joy += (Math.floor(input / 500)) * 1000;\n  joy += Math.floor((input % 500) / 5) * 5;\n  console.log(joy);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02970_1", "type": "JavaScript", "obfuscated": "function a0_0x1009(Ftgwap, key) {\n    var stringArray = a0_0x14b8();\n    a0_0x1009 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1009(Ftgwap, key);\n}\nvar a0_0x1cfb61 = a0_0x1009;\nfunction Main(input) {\n    var _0x5d488f = a0_0x1009;\n    var dataList = input[_0x5d488f(0x0)]('\\x0a');\n    var data = dataList[0x0][_0x5d488f(0x0)]('\\x20');\n    var n = data[0x0];\n    var d = data[0x1];\n    var checkNum = d * 0x2 + 0x1;\n    var num = Math[_0x5d488f(0x1)](n / checkNum);\n    var rest = n % checkNum;\n    if (rest > 0x0)\n        num += 0x1;\n    console[_0x5d488f(0x2)](num);\n}\nfunction a0_0x14b8() {\n    var _0x10d360 = [\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x14b8 = function () {\n        return _0x10d360;\n    };\n    return a0_0x14b8();\n}\nMain(require('fs')[a0_0x1cfb61(0x3)](a0_0x1cfb61(0x4), a0_0x1cfb61(0x5)));", "test_cases": [["6 2", "2"], ["14 3", "2"], ["20 4", "3"]], "original": "function Main(input) {\n  var dataList = input.split(\"\\n\");\n  var data = dataList[0].split(\" \");\n  var n = data[0];\n  var d = data[1];\n  var checkNum = (d * 2) + 1;\n  var num = Math.floor(n/checkNum);\n  var rest = n % checkNum;\n  if (rest > 0) num += 1;\n  console.log(num);\n  \n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03032_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5794c4 = a0_0x25f1;\nfunction a0_0x25f1(cdBweA, key) {\n    const stringArray = a0_0x47d5();\n    a0_0x25f1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x25f1(cdBweA, key);\n}\nfunction main(input) {\n    const _0x1e315b = a0_0x25f1;\n    input = input[_0x1e315b(0x0)]()[_0x1e315b(0x1)]('\\x0a');\n    const NK = input[_0x1e315b(0x2)]()[_0x1e315b(0x1)]('\\x20')['map'](val => Number(val));\n    const count = Math[_0x1e315b(0x3)](...NK);\n    input = input[0x0]['split']('\\x20')[_0x1e315b(0x4)](val => Number(val));\n    const ans = [];\n    for (let l = 0x0; l <= count; l++) {\n        for (let r = 0x0; r <= count - l; r++) {\n            let temp = [\n                ...input[_0x1e315b(0x5)](0x0, l),\n                ...input[_0x1e315b(0x5)](NK[0x0] - r)\n            ][_0x1e315b(0x6)]((a, b) => a - b);\n            let remain = NK[0x1] - l - r;\n            for (let i = 0x0; i < remain; i++) {\n                if (temp[i] >= 0x0)\n                    break;\n                temp[i] = 0x0;\n            }\n            ans[_0x1e315b(0x7)](temp[_0x1e315b(0x8)]((p, c) => p + c, 0x0));\n        }\n    }\n    console['log'](Math[_0x1e315b(0x9)](...ans));\n}\nmain(require('fs')[a0_0x5794c4(0xa)](a0_0x5794c4(0xb), a0_0x5794c4(0xc)));\nfunction a0_0x47d5() {\n    const _0x25f695 = [\n        'trim',\n        'split',\n        'shift',\n        'min',\n        'map',\n        'slice',\n        'sort',\n        'push',\n        'reduce',\n        'max',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x47d5 = function () {\n        return _0x25f695;\n    };\n    return a0_0x47d5();\n}", "test_cases": [["6 4\n-10 8 2 1 2 6", "14"], ["6 4\n-6 -100 50 -2 -5 -3", "44"], ["6 3\n-6 -100 50 -2 -5 -3", "0"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  const NK = input.shift().split(' ').map(val => Number(val))\n  const count = Math.min(...NK)\n  input = input[0].split(' ').map(val => Number(val))\n\n  const ans = []\n\n  for(let l = 0; l <= count; l ++) {\n    for (let r = 0; r <= count - l; r ++) {\n      let temp = [\n        ...input.slice(0, l),\n        ...input.slice(NK[0] - r)\n      ].sort((a, b) => a - b)\n      let remain = NK[1] - l - r\n      for (let i = 0; i < remain; i++) {\n        if (temp[i] >= 0) break;\n        temp[i] = 0\n      }\n      ans.push(temp.reduce((p, c) => p + c, 0))\n    }\n  }\n  console.log(Math.max(...ans))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03041_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x9303b5 = a0_0x51ca;\nconst Main = input => {\n    const _0x3f8cc1 = a0_0x51ca;\n    let tmp = input[_0x3f8cc1(0x0)]('\\x0a');\n    let Num = tmp[0x0][_0x3f8cc1(0x0)]('\\x20')['map'](Number)[0x0];\n    let Kji = tmp[0x0][_0x3f8cc1(0x0)]('\\x20')['map'](Number)[0x1];\n    let Str = tmp[0x1][_0x3f8cc1(0x1)]();\n    let Change = Str[Kji - 0x1];\n    switch (Change) {\n    case 'A':\n        Change = 'a';\n        break;\n    case 'B':\n        Change = 'b';\n        break;\n    case 'C':\n        Change = 'c';\n        break;\n    }\n    let StrArr = Str['split']('');\n    StrArr[Kji - 0x1] = Change;\n    Str = StrArr[_0x3f8cc1(0x2)]('');\n    console[_0x3f8cc1(0x3)](Str);\n};\nMain(require('fs')[a0_0x9303b5(0x4)](a0_0x9303b5(0x5), 'utf8'));\nfunction a0_0x51ca(wGKVAO, key) {\n    const stringArray = a0_0x53f5();\n    a0_0x51ca = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x51ca(wGKVAO, key);\n}\nfunction a0_0x53f5() {\n    const _0x4b62bc = [\n        'split',\n        'trim',\n        'join',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x53f5 = function () {\n        return _0x4b62bc;\n    };\n    return a0_0x53f5();\n}", "test_cases": [["3 1\nABC", "aBC"], ["4 3\nCABA", "CAbA"]], "original": "'use strict'\nconst Main = input => {\n\n  let tmp = input.split('\\n');\n  let Num = tmp[0].split(' ').map(Number)[0];\n  let Kji = tmp[0].split(' ').map(Number)[1];\n  let Str = tmp[1].trim();\n  // console.log({ Num });\n  // console.log({ Kji });\n  // console.log({ Str });\n\n  let Change = Str[Kji - 1];\n\n  switch (Change) {\n    case 'A': Change = 'a';\n      break;\n    case 'B': Change = 'b';\n      break;\n    case 'C': Change = 'c';\n      break;\n  }\n\n  let StrArr = Str.split('');\n  StrArr[Kji - 1] = Change;\n  Str = StrArr.join('');\n\n  console.log(Str);\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03079_1", "type": "JavaScript", "obfuscated": "function a0_0x23ba(NECirx, key) {\n    var stringArray = a0_0x3724();\n    a0_0x23ba = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23ba(NECirx, key);\n}\nfunction a0_0x3724() {\n    var _0x4ec69d = [\n        'map',\n        'log',\n        'Yes',\n        'readFileSync'\n    ];\n    a0_0x3724 = function () {\n        return _0x4ec69d;\n    };\n    return a0_0x3724();\n}\nvar a0_0x5cc0b9 = a0_0x23ba;\nfunction Main(input) {\n    var _0x1d666d = a0_0x23ba;\n    var str = input;\n    var tmp = str['split']('\\x20')[_0x1d666d(0x0)](Number);\n    if (tmp[0x0] == tmp[0x1] && tmp[0x1] == tmp[0x2]) {\n        console[_0x1d666d(0x1)](_0x1d666d(0x2));\n    } else {\n        console[_0x1d666d(0x1)]('No');\n    }\n}\nMain(require('fs')[a0_0x5cc0b9(0x3)]('/dev/stdin', 'utf8'));", "test_cases": [["2 2 2", "Yes"], ["3 4 5", "No"]], "original": "function Main(input){\n  \n  var str = input;\n  var tmp = str.split(\" \").map(Number);\n\n  if(tmp[0]==tmp[1] && tmp[1]==tmp[2]){\n     console.log(\"Yes\");}\n  \n  else {\n       console.log(\"No\");}\n    \n}//function\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03101_1", "type": "JavaScript", "obfuscated": "var a0_0x1e21bc = a0_0xf91c;\nfunction a0_0xf91c(IHqMAD, key) {\n    var stringArray = a0_0x1789();\n    a0_0xf91c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf91c(IHqMAD, key);\n}\nfunction main(arg) {\n    var _0x9a5c12 = a0_0xf91c;\n    var size = arg[_0x9a5c12(0x0)]('\\x0a')[0x0][_0x9a5c12(0x0)]('\\x20');\n    var sel = arg[_0x9a5c12(0x0)]('\\x0a')[0x1][_0x9a5c12(0x0)]('\\x20');\n    console[_0x9a5c12(0x1)](size[0x0] * size[0x1] - size[0x1] * sel[0x0] - (size[0x0] - sel[0x0]) * sel[0x1]);\n}\nmain(require('fs')[a0_0x1e21bc(0x2)](a0_0x1e21bc(0x3), a0_0x1e21bc(0x4)));\nfunction a0_0x1789() {\n    var _0x1befdf = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1789 = function () {\n        return _0x1befdf;\n    };\n    return a0_0x1789();\n}", "test_cases": [["3 2\n2 1", "1"], ["5 5\n2 3", "6"], ["2 4\n2 4", "0"]], "original": "function main(arg) {\n    var size = arg.split(\"\\n\")[0].split(\" \")\n    var sel = arg.split(\"\\n\")[1].split(\" \")\n    console.log(size[0]*size[1]-size[1]*sel[0]-(size[0]-sel[0])*sel[1])\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03160_1", "type": "JavaScript", "obfuscated": "const a0_0x47b550 = a0_0x1351;\nfunction Main(input) {\n    const _0x3f42fc = a0_0x1351;\n    input = input[_0x3f42fc(0x0)]()['split']('\\x0a')['map'](function (x) {\n        const _0x582b31 = a0_0x1351;\n        return x[_0x582b31(0x1)]('\\x20');\n    });\n    let N = parseInt(input[0x0][0x0], 0xa);\n    let v_h = input[0x1]['map'](e => parseInt(e, 0xa));\n    let DP = [\n        0x0,\n        Math[_0x3f42fc(0x2)](v_h[0x1] - v_h[0x0])\n    ];\n    let x1, x2;\n    for (let i = 0x2; i < N; i++) {\n        x1 = DP[i - 0x2] + Math[_0x3f42fc(0x2)](v_h[i] - v_h[i - 0x2]);\n        x2 = DP[i - 0x1] + Math['abs'](v_h[i] - v_h[i - 0x1]);\n        DP[_0x3f42fc(0x3)](Math[_0x3f42fc(0x4)](x1, x2));\n    }\n    console[_0x3f42fc(0x5)](DP[N - 0x1]);\n}\nMain(require('fs')[a0_0x47b550(0x6)](a0_0x47b550(0x7), a0_0x47b550(0x8)));\nfunction a0_0x1351(zFrHbT, key) {\n    const stringArray = a0_0x341a();\n    a0_0x1351 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1351(zFrHbT, key);\n}\nfunction a0_0x341a() {\n    const _0xbe32b2 = [\n        'trim',\n        'split',\n        'abs',\n        'push',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x341a = function () {\n        return _0xbe32b2;\n    };\n    return a0_0x341a();\n}", "test_cases": [["4\n10 30 40 20", "30"], ["2\n10 10", "0"], ["6\n30 10 60 10 60 50", "40"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\n    let N = parseInt(input[0][0], 10);\n    let v_h = input[1].map(e => parseInt(e, 10));\n\n    let DP = [0, Math.abs(v_h[1] - v_h[0])];\n\n    let x1, x2;\n    for(let i = 2; i < N; i++){\n        x1 = DP[i - 2] + Math.abs(v_h[i] - v_h[i - 2]);\n        x2 = DP[i - 1] + Math.abs(v_h[i] - v_h[i - 1]);\n        DP.push(Math.min(x1, x2));\n    }\n\n    console.log(DP[N - 1]);\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03253_1", "type": "JavaScript", "obfuscated": "const a0_0x569d31 = a0_0x129a;\nconsole[a0_0x569d31(0x0)]((args => {\n    const _0x1c5db0 = a0_0x129a;\n    let [N, M] = args[_0x1c5db0(0x1)]()['split']` `['map'](v => v | 0x0);\n    const MOD = 0x3b9aca00 + 0x7;\n    const d = new Map();\n    for (let i = 0x2; i <= M; i++) {\n        if (M % i)\n            continue;\n        let k = 0x0;\n        do {\n            k++;\n            M /= i;\n        } while (M % i === 0x0);\n        d['set'](i, k);\n    }\n    const mul = (a, b) => ((a >> 0x10) * b % MOD * 0x10000 + (a & 0xffff) * b) % MOD;\n    const {\n        fac: fac,\n        finv: finv\n    } = (max => {\n        const _0x3002a6 = a0_0x129a;\n        const fac = [\n                0x1,\n                0x1\n            ], inv = [\n                0x0,\n                0x1\n            ], finv = [\n                0x1,\n                0x1\n            ];\n        for (let i = 0x2; i < max; i++) {\n            fac[_0x3002a6(0x2)](mul(fac[i - 0x1], i));\n            inv['push'](MOD - mul(inv[MOD % i], MOD / i | 0x0));\n            finv['push'](mul(finv[i - 0x1], inv[i]));\n        }\n        return {\n            'fac': fac,\n            'finv': finv\n        };\n    })(N + N);\n    const nCr = (n, r) => mul(fac[n], mul(finv[r], finv[n - r]));\n    let c = 0x1;\n    for (const [, i] of d)\n        c = mul(c, nCr(i + N - 0x1, N - 0x1));\n    return '' + c;\n})(require('fs')[a0_0x569d31(0x3)]('/dev/stdin', a0_0x569d31(0x4))));\nfunction a0_0x129a(oLmHen, key) {\n    const stringArray = a0_0x5140();\n    a0_0x129a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x129a(oLmHen, key);\n}\nfunction a0_0x5140() {\n    const _0x3aa3fb = [\n        'log',\n        'trim',\n        'push',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x5140 = function () {\n        return _0x3aa3fb;\n    };\n    return a0_0x5140();\n}", "test_cases": [["2 6", "4"], ["3 12", "18"], ["100000 1000000000", "957870001"]], "original": "console.log((args=>{\n  let [N,M] = args.trim().split` `.map(v=>v|0);\n  const MOD = 1e9+7;\n  const d = new Map();\n  for ( let i = 2; i <= M; i++ ) {\n    if ( M % i ) continue;\n    let k = 0;\n    do {\n      k++;\n      M /= i;\n    } while ( M % i === 0 );\n    d.set( i, k );\n  }\n  const mul = (a,b) => ((a>>16)*b%MOD*65536+(a&65535)*b)%MOD;\n  const {fac,finv} = (max=>{\n    const fac = [1,1], inv = [0,1], finv = [1,1];\n    for (let i = 2; i < max; i++) {\n      fac.push( mul( fac[i-1], i) );\n      inv.push( MOD - mul(inv[MOD%i], MOD/i|0) );\n      finv.push( mul( finv[i-1], inv[i]) );\n    }\n    return {fac,finv};\n  })(N+N);\n  const nCr = (n,r) => mul(fac[n],mul(finv[r],finv[n-r]));\n  let c = 1;\n  for ( const [,i] of d ) c = mul(c,nCr(i+N-1,N-1));\n  return `${c}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03254_1", "type": "JavaScript", "obfuscated": "var a0_0xe6be80 = a0_0x5f2e;\nfunction a0_0x5f2e(MdDBsx, key) {\n    var stringArray = a0_0x2b46();\n    a0_0x5f2e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f2e(MdDBsx, key);\n}\nfunction Main(input) {\n    var _0xa8006e = a0_0x5f2e;\n    input = input[_0xa8006e(0x0)]('\\x0a');\n    var N = Number(input[0x0]['split']('\\x20')[0x0]);\n    var x = Number(input[0x0][_0xa8006e(0x0)]('\\x20')[0x1]);\n    var a = input[0x1][_0xa8006e(0x0)]('\\x20')[_0xa8006e(0x1)](a => Number(a))[_0xa8006e(0x2)]((a, b) => a - b);\n    var match = 0x0;\n    var left = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        if (x - a[i] >= 0x0) {\n            x = x - a[i];\n            match++;\n        } else {\n            break;\n        }\n    }\n    if (x > 0x0 && match != 0x0) {\n        match--;\n    }\n    console[_0xa8006e(0x3)](match);\n}\nMain(require('fs')[a0_0xe6be80(0x4)]('/dev/stdin', a0_0xe6be80(0x5)));\nfunction a0_0x2b46() {\n    var _0x3a1cef = [\n        'split',\n        'map',\n        'sort',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2b46 = function () {\n        return _0x3a1cef;\n    };\n    return a0_0x2b46();\n}", "test_cases": [["3 70\n20 30 10", "2"], ["3 10\n20 30 10", "1"], ["4 1111\n1 10 100 1000", "4"], ["2 10\n20 20", "0"]], "original": "function Main(input){\n  input = input.split('\\n');\n  var N = Number(input[0].split(' ')[0]);\n  var x = Number(input[0].split(' ')[1]);\n  var a = input[1].split(' ').map((a)=>Number(a)).sort((a,b)=>a-b);\n  var match = 0;\n  var left = 0;\n  for(var i=0;i<N;i++){\n    if(x-a[i]>=0){\n      x=x-a[i];\n      match++;\n    }else{\n      break;\n    }\n  }\n  if((x>0)&&(match!=0)){\n    match--;\n  }\n  console.log(match);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03281_1", "type": "JavaScript", "obfuscated": "function a0_0x3a08() {\n    var _0x1aa3a2 = [\n        '/dev/stdin',\n        'utf8',\n        'split'\n    ];\n    a0_0x3a08 = function () {\n        return _0x1aa3a2;\n    };\n    return a0_0x3a08();\n}\nfunction a0_0x58a4(Mujxnk, key) {\n    var stringArray = a0_0x3a08();\n    a0_0x58a4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58a4(Mujxnk, key);\n}\nvar a0_0x375ad0 = a0_0x58a4;\nfunction main(input) {\n    var N = input[0x0] - 0x0;\n    var ans = 0x0;\n    for (var i = 0x69; i <= N; i += 0x2) {\n        var cnt = 0x0;\n        for (var j = 0x1; j <= i; j++) {\n            if (i % j == 0x0)\n                cnt++;\n            if (cnt > 0x8)\n                break;\n        }\n        if (cnt == 0x8)\n            ans++;\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync'](a0_0x375ad0(0x0), a0_0x375ad0(0x1))['trim']()[a0_0x375ad0(0x2)]('\\x0a'));", "test_cases": [["105", "1"], ["7", "0"]], "original": "function main(input) {\n  var N = input[0]-0;\n  var ans = 0;\n  for(var i=105;i<=N;i+=2){\n    var cnt = 0;\n    for(var j=1;j<=i;j++){\n      if(i%j==0) cnt++;\n      if(cnt>8) break;\n    }\n    if(cnt == 8) ans++;\n  }\n  console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03307_1", "type": "JavaScript", "obfuscated": "function a0_0x1d3b(EugbPB, key) {\n    var stringArray = a0_0x4ae9();\n    a0_0x1d3b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d3b(EugbPB, key);\n}\nvar a0_0x218dca = a0_0x1d3b;\nfunction Main(input) {\n    var _0x5df691 = a0_0x1d3b;\n    input = input[_0x5df691(0x0)]('\\x20');\n    X = 0x2;\n    N = input[_0x5df691(0x1)](input => parseInt(input, 0xa));\n    if (N % X == 0x0) {\n        console[_0x5df691(0x2)](N[0x0]);\n    } else {\n        var ans = N[0x0] * X;\n        console[_0x5df691(0x2)](ans);\n    }\n}\nMain(require('fs')[a0_0x218dca(0x3)](a0_0x218dca(0x4), a0_0x218dca(0x5)));\nfunction a0_0x4ae9() {\n    var _0x3b04d = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4ae9 = function () {\n        return _0x3b04d;\n    };\n    return a0_0x4ae9();\n}", "test_cases": [["3", "6"], ["10", "10"], ["999999999", "1999999998"]], "original": "function Main(input){\n   input = input.split(' ');\n   X = 2;\n   N = input.map(input=>parseInt(input,10));\n   if(N % X ==0){\n      console.log(N[0]);\n      }else{\n      var ans = N[0] * X;\n      console.log(ans);\n      }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03353_1", "type": "JavaScript", "obfuscated": "var a0_0x3ca3b6 = a0_0x1caa;\nfunction a0_0x1caa(ITdGZU, key) {\n    var stringArray = a0_0x3e02();\n    a0_0x1caa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1caa(ITdGZU, key);\n}\nfunction Main(s) {\n    var _0x1be2db = a0_0x1caa;\n    s = s[_0x1be2db(0x0)]('\\x0a');\n    var k = +s[0x1];\n    s = s[0x0];\n    var a = 0x60;\n    var sl = s['length'];\n    var ans = {};\n    var j;\n    loop:\n        while (a <= 0x7a) {\n            a++;\n            var n = s[_0x1be2db(0x1)](String['fromCharCode'](a));\n            while (n !== -0x1) {\n                for (j = 0x0; j < k; j++) {\n                    if (n + j >= sl)\n                        break;\n                    ans[s[_0x1be2db(0x2)](n, n + j + 0x1)] = 0x1;\n                }\n                n = s[_0x1be2db(0x1)](String[_0x1be2db(0x3)](a), n + 0x1);\n            }\n            j = 0x0;\n            var ans2 = [];\n            for (i in ans) {\n                j++;\n                ans2[_0x1be2db(0x4)](i);\n            }\n            if (j >= k) {\n                ans2[_0x1be2db(0x5)]();\n                console[_0x1be2db(0x6)](ans2[k - 0x1]);\n                break loop;\n            }\n        }\n}\nfunction a0_0x3e02() {\n    var _0x9072e8 = [\n        'split',\n        'indexOf',\n        'slice',\n        'fromCharCode',\n        'push',\n        'sort',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3e02 = function () {\n        return _0x9072e8;\n    };\n    return a0_0x3e02();\n}\nMain(require('fs')[a0_0x3ca3b6(0x7)]('/dev/stdin', a0_0x3ca3b6(0x8)));", "test_cases": [["aba\n4", "b"], ["atcoderandatcodeer\n5", "andat"], ["z\n1", "z"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var k = +s[1];\n  s = s[0];\n  var a = 96;\n  var sl = s.length;\n  var ans = {};\n  var j;\n  loop:\n  while(a <= 122){\n    a++;\n    var n = s.indexOf(String.fromCharCode(a));\n    while(n !== -1){\n      for(j = 0; j < k; j++){\n        if(n + j >= sl)break;\n        ans[s.slice(n, n + j + 1)] = 1;\n      }\n      n = s.indexOf(String.fromCharCode(a), n+1);\n    }\n    j = 0;\n    var ans2 = [];\n    for(i in ans){\n      j++;\n      ans2.push(i)\n    }\n    if(j >= k){\n      ans2.sort();\n      console.log(ans2[k-1]);\n      break loop;\n    }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03361_1", "type": "JavaScript", "obfuscated": "const a0_0xa72bf8 = a0_0x58fb;\nfunction a0_0x1359() {\n    const _0x462c67 = [\n        'split',\n        'map',\n        'fill',\n        'slice',\n        'every',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1359 = function () {\n        return _0x462c67;\n    };\n    return a0_0x1359();\n}\nconst main = input => {\n    const _0x4a2526 = a0_0x58fb;\n    const lines = input[_0x4a2526(0x0)]('\\x0a');\n    const [h, w] = lines[0x0]['split']('\\x20')[_0x4a2526(0x1)](Number);\n    const data = Array(h)[_0x4a2526(0x2)](![])['map']((_, i) => lines[i + 0x1]['split']('')[_0x4a2526(0x3)](0x0, w)['map'](c => c === '#'));\n    const ans = data[_0x4a2526(0x4)]((row, i) => row[_0x4a2526(0x4)]((cell, j) => !cell || (data[i - 0x1] || [])[j] || (data[i + 0x1] || [])[j] || data[i][j - 0x1] || data[i][j + 0x1]));\n    console['log'](ans ? _0x4a2526(0x5) : 'No');\n};\nfunction a0_0x58fb(dpObEx, key) {\n    const stringArray = a0_0x1359();\n    a0_0x58fb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x58fb(dpObEx, key);\n}\nmain(require('fs')[a0_0xa72bf8(0x6)](a0_0xa72bf8(0x7), a0_0xa72bf8(0x8)));", "test_cases": [["3 3\n.#.\n###\n.#.", "Yes"], ["5 5\n#.#.#\n.#.#.\n#.#.#\n.#.#.\n#.#.#", "No"], ["11 11\n...#####...\n.##.....##.\n#..##.##..#\n#..##.##..#\n#.........#\n#...###...#\n.#########.\n.#.#.#.#.#.\n##.#.#.#.##\n..##.#.##..\n.##..#..##.", "Yes"]], "original": "const main = input => {\n  const lines = input.split('\\n');\n  const [h, w] = lines[0].split(' ').map(Number);\n\n  const data = Array(h).fill(false).map((_, i) =>\n    lines[i + 1]\n      .split('')\n      .slice(0, w)\n      .map(c => c === '#')\n  );\n\n  const ans = data.every((row, i) =>\n    row.every(\n      (cell, j) =>\n        !cell ||\n        (data[i - 1] || [])[j] ||\n        (data[i + 1] || [])[j] ||\n        data[i][j - 1] ||\n        data[i][j + 1]\n    )\n  );\n  console.log(ans ? 'Yes' : 'No');\n};\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03379_1", "type": "JavaScript", "obfuscated": "const a0_0x134068 = a0_0x55b7;\nfunction a0_0x55b7(FfWwfU, key) {\n    const stringArray = a0_0x110a();\n    a0_0x55b7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x55b7(FfWwfU, key);\n}\nfunction a0_0x110a() {\n    const _0x1ef976 = [\n        'log',\n        'split',\n        'map',\n        'concat',\n        'sort',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x110a = function () {\n        return _0x1ef976;\n    };\n    return a0_0x110a();\n}\nconsole[a0_0x134068(0x0)]((args => {\n    const _0x85f630 = a0_0x55b7;\n    const [[N], X] = args['trim']()[_0x85f630(0x1)]('\\x0a')[_0x85f630(0x2)](r => r[_0x85f630(0x1)]('\\x20')[_0x85f630(0x2)](v => v | 0x0));\n    const _X = [][_0x85f630(0x3)](X)[_0x85f630(0x4)]((a, b) => a - b);\n    const M1 = _X[N / 0x2 - 0x1], M2 = _X[N / 0x2];\n    const m = [];\n    for (let i = 0x0; i < N; i++) {\n        if (X[i] <= M1)\n            m['push'](M2);\n        else\n            m['push'](M1);\n    }\n    return m[_0x85f630(0x5)]`\\n`;\n})(require('fs')[a0_0x134068(0x6)](a0_0x134068(0x7), a0_0x134068(0x8))));", "test_cases": [["4\n2 4 4 3", "4\n3\n3\n4"], ["2\n1 2", "2\n1"], ["6\n5 5 4 4 3 3", "4\n4\n4\n4\n4\n4"]], "original": "console.log((args=>{\n  const [[N],X] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  const _X = [].concat(X).sort((a,b)=>a-b);\n  const M1 = _X[N/2-1], M2 = _X[N/2];\n  const m = [];\n  for ( let i = 0; i < N; i++ ) {\n    if ( X[i] <= M1 ) m.push(M2); else m.push(M1);\n  }\n  return m.join`\\n`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03408_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x238d8a = a0_0x26b2;\nfunction a0_0x26b2(MnHcLm, key) {\n    const stringArray = a0_0x402f();\n    a0_0x26b2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x26b2(MnHcLm, key);\n}\nfunction a0_0x402f() {\n    const _0x3f305a = [\n        'trim',\n        'split',\n        'slice',\n        'Pefuo',\n        'hasOwnProperty',\n        'Yzftn',\n        'TtoDy',\n        'HAMUy',\n        'PNCdQ',\n        'entries',\n        'PrxcF',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x402f = function () {\n        return _0x3f305a;\n    };\n    return a0_0x402f();\n}\nfunction Main(input) {\n    const _0x529898 = a0_0x26b2;\n    const params = input[_0x529898(0x0)]()[_0x529898(0x1)]('\\x0a');\n    const N = Number(params[0x0][_0x529898(0x0)]());\n    const M = Number(params[N + 0x1][_0x529898(0x0)]());\n    const blueCards = params[_0x529898(0x2)](0x1, N + 0x1);\n    const redCards = params[_0x529898(0x2)](N + 0x2);\n    let cardCount = {};\n    for (const card of blueCards) {\n        const c = card[_0x529898(0x0)]();\n        if (cardCount['hasOwnProperty'](c)) {\n            cardCount[c] = cardCount[c] + 0x1;\n        } else {\n            if ('sOHtP' === 'sOHtP') {\n                cardCount[c] = 0x1;\n            } else {\n                if (maxMoney < money) {\n                    maxMoney = money;\n                }\n            }\n        }\n    }\n    for (const card of redCards) {\n        if (_0x529898(0x3) !== _0x529898(0x3)) {\n            const c = card['trim']();\n            if (cardCount[_0x529898(0x4)](c)) {\n                cardCount[c] = cardCount[c] - 0x1;\n            } else {\n                cardCount[c] = 0x1;\n            }\n        } else {\n            const c = card['trim']();\n            if (cardCount['hasOwnProperty'](c)) {\n                if (_0x529898(0x5) === _0x529898(0x6)) {\n                    maxMoney = money;\n                } else {\n                    cardCount[c] = cardCount[c] - 0x1;\n                }\n            } else {\n                if (_0x529898(0x7) === _0x529898(0x8)) {\n                    const c = card[_0x529898(0x0)]();\n                    if (cardCount[_0x529898(0x4)](c)) {\n                        cardCount[c] = cardCount[c] + 0x1;\n                    } else {\n                        cardCount[c] = 0x1;\n                    }\n                } else {\n                    cardCount[c] = 0x1;\n                }\n            }\n        }\n    }\n    let maxMoney = 0x0;\n    for (const [key, money] of Object[_0x529898(0x9)](cardCount)) {\n        if (_0x529898(0xa) !== _0x529898(0xa)) {\n            cardCount[c] = 0x1;\n        } else {\n            if (maxMoney < money) {\n                maxMoney = money;\n            }\n        }\n    }\n    console[_0x529898(0xb)](maxMoney);\n}\nMain(require('fs')[a0_0x238d8a(0xc)]('/dev/stdin', a0_0x238d8a(0xd)));", "test_cases": [["3\napple\norange\napple\n1\ngrape", "2"], ["3\napple\norange\napple\n5\napple\napple\napple\napple\napple", "1"], ["1\nvoldemort\n10\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort", "0"], ["6\nred\nred\nblue\nyellow\nyellow\nred\n5\nred\nred\nyellow\ngreen\nblue", "1"]], "original": "// https://atcoder.jp/contests/abc091/tasks/abc091_b\n\"use strict\";\nfunction Main(input) {\n  const params = input.trim().split(\"\\n\");\n  const N = Number(params[0].trim());\n  const M = Number(params[N + 1].trim());\n  const blueCards = params.slice(1, N + 1);\n  const redCards = params.slice(N + 2);\n\n  let cardCount = {};\n  for (const card of blueCards) {\n    const c = card.trim();\n    if (cardCount.hasOwnProperty(c)) {\n      cardCount[c] = cardCount[c] + 1;\n    } else {\n      cardCount[c] = 1;\n    }\n  }\n\n  for (const card of redCards) {\n    const c = card.trim();\n    if (cardCount.hasOwnProperty(c)) {\n      cardCount[c] = cardCount[c] - 1;\n    } else {\n      cardCount[c] = 1;\n    }\n  }\n\n  let maxMoney = 0;\n  for (const [key, money] of Object.entries(cardCount)) {\n    if (maxMoney < money) {\n      maxMoney = money;\n    }\n  }\n\n  console.log(maxMoney);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03416_1", "type": "JavaScript", "obfuscated": "var a0_0x4dc061 = a0_0x3b41;\nfunction a0_0x3ebb() {\n    var _0x496feb = [\n        'split',\n        'toString',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3ebb = function () {\n        return _0x496feb;\n    };\n    return a0_0x3ebb();\n}\nfunction a0_0x3b41(IeAfHC, key) {\n    var stringArray = a0_0x3ebb();\n    a0_0x3b41 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b41(IeAfHC, key);\n}\nfunction Main(input) {\n    var _0x3e0b54 = a0_0x3b41;\n    var input = input[_0x3e0b54(0x0)]('\\x20');\n    var A = input[0x0];\n    var B = input[0x1];\n    var cnt = 0x0;\n    function hoge() {\n        var _0x5e441c = a0_0x3b41;\n        var x = A[_0x5e441c(0x1)]();\n        if (x[0x0] === x[0x4] && x[0x1] === x[0x3]) {\n            return !![];\n        }\n    }\n    while (A <= B) {\n        if (hoge()) {\n            cnt++;\n        }\n        A++;\n    }\n    console['log'](cnt);\n}\nMain(require('fs')[a0_0x4dc061(0x2)](a0_0x4dc061(0x3), a0_0x4dc061(0x4)));", "test_cases": [["11009 11332", "4"], ["31415 92653", "612"]], "original": "function Main(input) {\n    var input = input.split(' ');\n    var A = input[0];\n    var B = input[1];\n    var cnt = 0;\n    function hoge(){\n        var x = A.toString();\n        if(x[0] === x[4] && x[1] === x[3]){\n            return true;\n        }\n    }\n    while(A <= B) {\n     if(hoge()) {\n            cnt++;\n        }\n    A++;\n    }\n    console.log(cnt);\n    }\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03485_1", "type": "JavaScript", "obfuscated": "function a0_0x270d(dheDRk, key) {\n    const stringArray = a0_0x51c7();\n    a0_0x270d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x270d(dheDRk, key);\n}\nconst a0_0x3c5eb8 = a0_0x270d;\nfunction a0_0x51c7() {\n    const _0x55f809 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'forEach',\n        'log',\n        'ceil',\n        'length'\n    ];\n    a0_0x51c7 = function () {\n        return _0x55f809;\n    };\n    return a0_0x51c7();\n}\nconst input = require('fs')[a0_0x3c5eb8(0x0)](a0_0x3c5eb8(0x1), a0_0x3c5eb8(0x2));\nconst numbers = input[a0_0x3c5eb8(0x3)]('\\x20');\nlet sum = 0x0;\nnumbers[a0_0x3c5eb8(0x4)](function (number) {\n    sum += Number(number);\n});\nconsole[a0_0x3c5eb8(0x5)](Math[a0_0x3c5eb8(0x6)](sum / numbers[a0_0x3c5eb8(0x7)]));", "test_cases": [["1 3", "2"], ["7 4", "6"], ["5 5", "5"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\n\nconst numbers = input.split(' ');\n\nlet sum = 0;\nnumbers.forEach(function (number) {\n    sum += Number(number);\n});\nconsole.log(Math.ceil(sum / numbers.length));\n", "language": "JavaScript"}
{"filename": "p03494_1", "type": "JavaScript", "obfuscated": "var a0_0x9ac75e = a0_0x4848;\nfunction a0_0x4848(vBvipI, key) {\n    var stringArray = a0_0x3219();\n    a0_0x4848 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4848(vBvipI, key);\n}\nfunction main(input) {\n    var _0x1f49ae = a0_0x4848;\n    var nums = input['split']('\\x0a')[0x1][_0x1f49ae(0x0)]('\\x20')[_0x1f49ae(0x1)](n => parseInt(n, 0xa));\n    var count = 0x0;\n    while (nums[_0x1f49ae(0x2)](n => n % 0x2 === 0x0)) {\n        count++;\n        nums = nums[_0x1f49ae(0x1)](n => n / 0x2);\n    }\n    console['log'](count);\n}\nmain(require('fs')['readFileSync'](a0_0x9ac75e(0x3), a0_0x9ac75e(0x4)));\nfunction a0_0x3219() {\n    var _0x499b87 = [\n        'split',\n        'map',\n        'every',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3219 = function () {\n        return _0x499b87;\n    };\n    return a0_0x3219();\n}", "test_cases": [["3\n8 12 40", "2"], ["4\n5 6 8 10", "0"], ["6\n382253568 723152896 37802240 379425024 404894720 471526144", "8"]], "original": "function main(input){\n  var nums = input.split('\\n')[1].split(' ').map((n) => parseInt(n,10));\n  var count = 0;\n  while(nums.every((n) => (n % 2) === 0)) {\n        count++;\n        nums = nums.map((n) => n / 2);\n    }\n\n  console.log(count);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03547_1", "type": "JavaScript", "obfuscated": "var a0_0x478fed = a0_0x1364;\ninp = require('fs')[a0_0x478fed(0x0)](a0_0x478fed(0x1), a0_0x478fed(0x2))[a0_0x478fed(0x3)]('\\x0a');\nfunction a0_0x1364(XGTuiX, key) {\n    var stringArray = a0_0x42a1();\n    a0_0x1364 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1364(XGTuiX, key);\n}\nl = inp['shift']()[a0_0x478fed(0x3)]('\\x20');\nfunction a0_0x42a1() {\n    var _0x43965c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'log',\n        'charCodeAt'\n    ];\n    a0_0x42a1 = function () {\n        return _0x43965c;\n    };\n    return a0_0x42a1();\n}\nx = l[0x0];\ny = l[0x1];\nconsole[a0_0x478fed(0x4)](x == y ? '=' : x[a0_0x478fed(0x5)]() < y[a0_0x478fed(0x5)]() ? '<' : '>');", "test_cases": [["A B", "<"], ["E C", ">"], ["F F", "="]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nx = l[0]\ny = l[1]\nconsole.log(x == y ? '=' : x.charCodeAt() < y.charCodeAt() ? '<' : '>')", "language": "JavaScript"}
{"filename": "p03624_1", "type": "JavaScript", "obfuscated": "var a0_0x2036a5 = a0_0x1fcc;\nfunction a0_0x1fcc(nlIixC, key) {\n    var stringArray = a0_0x38f4();\n    a0_0x1fcc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1fcc(nlIixC, key);\n}\nfunction main(input) {\n    var _0x26d411 = a0_0x1fcc;\n    const S = input[_0x26d411(0x0)]('');\n    alphabetList = _0x26d411(0x1)[_0x26d411(0x0)]('');\n    arr = S[_0x26d411(0x2)](function (x, i, self) {\n        var _0x2b5396 = a0_0x1fcc;\n        return self[_0x2b5396(0x3)](x) === i;\n    })['sort']();\n    tmp = arrDiff(arr, alphabetList);\n    function arrDiff(arr, alphabetList) {\n        var _0x2325c3 = a0_0x1fcc;\n        if (_0x2325c3(0x4) === _0x2325c3(0x5)) {\n            a[arr[i]] = !![];\n        } else {\n            var a = [];\n            var diff = [];\n            for (var i = 0x0; i < arr['length']; i++) {\n                a[arr[i]] = !![];\n            }\n            for (var i = 0x0; i < alphabetList[_0x2325c3(0x6)]; i++) {\n                if (_0x2325c3(0x7) === _0x2325c3(0x8)) {\n                    if (a[alphabetList[i]]) {\n                        delete a[alphabetList[i]];\n                    } else {\n                        a[alphabetList[i]] = !![];\n                    }\n                } else {\n                    if (a[alphabetList[i]]) {\n                        delete a[alphabetList[i]];\n                    } else {\n                        if (_0x2325c3(0x9) !== 'mQQZS') {\n                            a[alphabetList[i]] = !![];\n                        } else {\n                            delete a[alphabetList[i]];\n                        }\n                    }\n                }\n            }\n            for (var k in a) {\n                diff[_0x2325c3(0xa)](k);\n            }\n            return diff;\n        }\n    }\n    if (tmp[_0x26d411(0x6)] > 0x0) {\n        ans = tmp[0x0];\n    } else {\n        ans = _0x26d411(0xb);\n    }\n    console[_0x26d411(0xc)](ans);\n}\nmain(require('fs')[a0_0x2036a5(0xd)]('/dev/stdin', a0_0x2036a5(0xe)));\nfunction a0_0x38f4() {\n    var _0xc80408 = [\n        'split',\n        'abcdefghijklmnopqrstuvwxyz',\n        'filter',\n        'indexOf',\n        'dlmpz',\n        'vztAS',\n        'length',\n        'rwDpC',\n        'NHPBQ',\n        'HPafg',\n        'push',\n        'None',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x38f4 = function () {\n        return _0xc80408;\n    };\n    return a0_0x38f4();\n}", "test_cases": [["atcoderregularcontest", "b"], ["abcdefghijklmnopqrstuvwxyz", "None"], ["fajsonlslfepbjtsaayxbymeskptcumtwrmkkinjxnnucagfrg", "d"]], "original": "function main (input) {\n    const S = input.split('');\n    alphabetList = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\n    // 重複を削除\n    arr = S.filter(function (x,i,self){\n        return self.indexOf(x) === i;\n    }).sort();\n\n    tmp = arrDiff(arr,alphabetList);\n    // 差分抽出\n    function arrDiff (arr, alphabetList) {\n        var a = [];\n        var diff = [];\n        for (var i = 0; i < arr.length; i++) {\n            a[arr[i]] = true;\n        }\n        for (var i = 0; i < alphabetList.length; i++) {\n            if (a[alphabetList[i]]) {\n                delete a[alphabetList[i]];\n            } else {\n                a[alphabetList[i]] = true;\n            }\n        }\n        for (var k in a) {\n            diff.push (k);\n        }\n        return diff;\n    }\n    if (tmp.length > 0) {\n        ans = tmp[0];\n    } else {\n        ans = 'None';\n    }\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03645_1", "type": "JavaScript", "obfuscated": "var a0_0x17d72c = a0_0x3438;\nfunction Main(input) {\n    var _0x6fde39 = a0_0x3438;\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0]['split']('\\x20')[0x0]);\n    var m = parseInt(input[0x0][_0x6fde39(0x0)]('\\x20')[0x1]);\n    x = new Array();\n    var ans = 'IMPOSSIBLE';\n    for (i = 0x0; i < m; i++) {\n        tmp = input[i + 0x1]['split']('\\x20');\n        if (tmp[0x0] == 0x1) {\n            if (x[_0x6fde39(0x1)](tmp[0x1]) != -0x1) {\n                ans = _0x6fde39(0x2);\n                break;\n            } else {\n                x[_0x6fde39(0x3)](tmp[0x1]);\n            }\n        }\n        if (tmp[0x1] == n) {\n            if (x[_0x6fde39(0x1)](tmp[0x0]) != -0x1) {\n                ans = _0x6fde39(0x2);\n                break;\n            } else {\n                x['push'](tmp[0x0]);\n            }\n        }\n    }\n    console[_0x6fde39(0x4)]('%s', ans);\n}\nfunction debug() {\n    var _0x4ccf6c = a0_0x3438;\n    var input = document[_0x4ccf6c(0x5)](_0x4ccf6c(0x6))[_0x4ccf6c(0x7)];\n    Main(input);\n}\nfunction a0_0x3438(KLxYqB, key) {\n    var stringArray = a0_0x218c();\n    a0_0x3438 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3438(KLxYqB, key);\n}\nfunction a0_0x218c() {\n    var _0x35442d = [\n        'split',\n        'indexOf',\n        'POSSIBLE',\n        'push',\n        'log',\n        'getElementById',\n        'input',\n        'value',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x218c = function () {\n        return _0x35442d;\n    };\n    return a0_0x218c();\n}\nMain(require('fs')['readFileSync'](a0_0x17d72c(0x8), a0_0x17d72c(0x9)));", "test_cases": [["3 2\n1 2\n2 3", "POSSIBLE"], ["4 3\n1 2\n2 3\n3 4", "IMPOSSIBLE"], ["100000 1\n1 99999", "IMPOSSIBLE"], ["5 5\n1 3\n4 5\n2 3\n2 4\n1 4", "POSSIBLE"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0].split(\" \")[0]);\n  var m = parseInt(input[0].split(\" \")[1]);\n  x= new Array();\n  var ans = \"IMPOSSIBLE\";\n  for(i=0;i<m;i++){\n    tmp=input[i+1].split(\" \");\n    if(tmp[0]==1){\n      if(x.indexOf(tmp[1])!=-1){\n        ans=\"POSSIBLE\";\n        break;\n      }else{\n      x.push(tmp[1]);\n      }\n    }\n    if(tmp[1]==n){\n      if(x.indexOf(tmp[0])!=-1){\n        ans=\"POSSIBLE\";\n        break;\n      }else{\n        x.push(tmp[0]);\n      }\n    }\n  }\n\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03729_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x325ff9 = a0_0x7a48;\nfunction a0_0x7a48(MDmLNB, key) {\n    const stringArray = a0_0x243f();\n    a0_0x7a48 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7a48(MDmLNB, key);\n}\nfunction a0_0x243f() {\n    const _0x3390c3 = [\n        'split',\n        'length',\n        'log',\n        'YES',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x243f = function () {\n        return _0x3390c3;\n    };\n    return a0_0x243f();\n}\nconst main = arg => {\n    const _0x3eacd4 = a0_0x7a48;\n    const S = arg[_0x3eacd4(0x0)]('\\x0a')[0x0]['split']('\\x20');\n    let tail = S[0x0][_0x3eacd4(0x0)]('')['pop']();\n    for (let i = 0x1; i < S[_0x3eacd4(0x1)]; i++) {\n        if (tail == S[i][_0x3eacd4(0x0)]('')[0x0]) {\n            tail = S[i][_0x3eacd4(0x0)]('')['pop']();\n        } else {\n            console[_0x3eacd4(0x2)]('NO');\n            return;\n        }\n    }\n    console[_0x3eacd4(0x2)](_0x3eacd4(0x3));\n};\nmain(require('fs')[a0_0x325ff9(0x4)](a0_0x325ff9(0x5), a0_0x325ff9(0x6)));", "test_cases": [["rng gorilla apple", "YES"], ["yakiniku unagi sushi", "NO"], ["a a a", "YES"], ["aaaaaaaaab aaaaaaaaaa aaaaaaaaab", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const S  = arg.split(\"\\n\")[0].split(\" \");\n    let tail = S[0].split(\"\").pop();\n\n    for(let i=1; i<S.length; i++) {\n        if(tail == S[i].split(\"\")[0]) {\n            tail = S[i].split(\"\").pop();\n        } else {\n            console.log(\"NO\");\n            return;\n        }\n    }\n    \n    console.log(\"YES\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03795_1", "type": "JavaScript", "obfuscated": "function a0_0x34b3(bxpryK, key) {\n    const stringArray = a0_0x419f();\n    a0_0x34b3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x34b3(bxpryK, key);\n}\nconst a0_0xab1f76 = a0_0x34b3;\nlet n = Number(require('fs')[a0_0xab1f76(0x0)](a0_0xab1f76(0x1), 'utf8'));\nconsole[a0_0xab1f76(0x2)](0x320 * n - 0xc8 * ~~(n / 0xf));\nfunction a0_0x419f() {\n    const _0xe39e73 = [\n        'readFileSync',\n        '/dev/stdin',\n        'log'\n    ];\n    a0_0x419f = function () {\n        return _0xe39e73;\n    };\n    return a0_0x419f();\n}", "test_cases": [["20", "15800"], ["60", "47200"]], "original": "let n = Number(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\nconsole.log(800 * n - 200 * ~~(n / 15));", "language": "JavaScript"}
{"filename": "p03943_1", "type": "JavaScript", "obfuscated": "function a0_0x4cc2(IDxgcx, key) {\n    var stringArray = a0_0x5e1d();\n    a0_0x4cc2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cc2(IDxgcx, key);\n}\nvar a0_0x5cadf0 = a0_0x4cc2;\nfunction Main(input) {\n    var _0x36e616 = a0_0x4cc2;\n    input = input['split']('\\x20');\n    input = input['map'](Number);\n    children = 0x2;\n    var sub = function (arry, num) {\n        var _0x41cba1 = a0_0x4cc2;\n        var sum = 0x0;\n        arry[_0x41cba1(0x0)](element => {\n            sum += element;\n        });\n        return arry[_0x41cba1(0x1)](sum / num);\n    };\n    if (sub(input, children)) {\n        console[_0x36e616(0x2)](_0x36e616(0x3));\n    } else {\n        console[_0x36e616(0x2)]('No');\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x5cadf0(0x4), a0_0x5cadf0(0x5)));\nfunction a0_0x5e1d() {\n    var _0xd8d92f = [\n        'forEach',\n        'includes',\n        'log',\n        'Yes',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5e1d = function () {\n        return _0xd8d92f;\n    };\n    return a0_0x5e1d();\n}", "test_cases": [["10 30 20", "Yes"], ["30 30 100", "No"], ["56 25 31", "Yes"]], "original": "function Main(input){\n    input= input.split(\" \");\n    input= input.map(Number);\n    children = 2;\n    \n    var sub = function(arry,num){\n        var sum = 0;\n        arry.forEach(element => {\n            sum += element;\n        });\n        return arry.includes(sum/num);\n    }\n    \n    if(sub(input,children)){\n        console.log('Yes');\n    }else{\n        console.log('No');\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p02394_1", "type": "JavaScript", "obfuscated": "function a0_0x2610() {\n    const _0x52231b = [\n        'split',\n        'map',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2610 = function () {\n        return _0x52231b;\n    };\n    return a0_0x2610();\n}\nconst a0_0x19f759 = a0_0x29fa;\nfunction main(input) {\n    const _0x5d39d1 = a0_0x29fa;\n    let numarray = input[_0x5d39d1(0x0)]('\\x20')[_0x5d39d1(0x1)](Number);\n    let W, H, x, y, r;\n    W = numarray[0x0];\n    H = numarray[0x1];\n    x = numarray[0x2];\n    y = numarray[0x3];\n    r = numarray[0x4];\n    if (x < r || y < r || x + r > W || y + r > H) {\n        console[_0x5d39d1(0x2)]('No');\n    } else {\n        console[_0x5d39d1(0x2)](_0x5d39d1(0x3));\n    }\n}\nfunction a0_0x29fa(skVOwP, key) {\n    const stringArray = a0_0x2610();\n    a0_0x29fa = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x29fa(skVOwP, key);\n}\nmain(require('fs')[a0_0x19f759(0x4)](a0_0x19f759(0x5), a0_0x19f759(0x6)));", "test_cases": [["5 4 2 2 1", "Yes"], ["5 4 2 4 1", "No"]], "original": "function main(input){\n    let numarray=input.split(' ').map(Number);\n    let W,H,x,y,r;\n    W=numarray[0];\n    H=numarray[1];\n    x=numarray[2];\n    y=numarray[3];\n    r=numarray[4];\n    if (x<r || y<r || x+r > W || y+r > H){\n        console.log('No');\n    } else {\n        console.log('Yes');\n    }\n    \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02402_1", "type": "JavaScript", "obfuscated": "const a0_0x422c69 = a0_0x2016;\nconst input = require('fs')[a0_0x422c69(0x0)](a0_0x422c69(0x1), a0_0x422c69(0x2));\nconst arr = input[a0_0x422c69(0x3)](/\\n/);\nconst numbers = arr[0x1][a0_0x422c69(0x3)]('\\x20')[a0_0x422c69(0x4)](Number);\nlet min = numbers[0x0];\nlet max = numbers[0x0];\nlet sum = 0x0;\nfunction a0_0x2016(czQZbV, key) {\n    const stringArray = a0_0x9308();\n    a0_0x2016 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2016(czQZbV, key);\n}\nnumbers[a0_0x422c69(0x5)](number => {\n    if (min > number)\n        min = number;\n    if (max < number)\n        max = number;\n    sum += number;\n});\nfunction a0_0x9308() {\n    const _0x186ad3 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x9308 = function () {\n        return _0x186ad3;\n    };\n    return a0_0x9308();\n}\nconsole[a0_0x422c69(0x6)](min + '\\x20' + max + '\\x20' + sum);", "test_cases": [["5\n10 1 5 4 17", "1 17 37"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst arr = input.split(/\\n/);\nconst numbers = arr[1].split(\" \").map(Number);\nlet min = numbers[0];\nlet max = numbers[0];\nlet sum = 0;\n\nnumbers.forEach(number => {\n  if(min > number) min = number;\n  if(max < number) max = number;\n  sum += number;\n})\n\nconsole.log(min + \" \" + max + \" \" + sum);\n\n\n", "language": "JavaScript"}
{"filename": "p02411_1", "type": "JavaScript", "obfuscated": "function a0_0x16dc(HyKeUd, key) {\n    const stringArray = a0_0x2cd0();\n    a0_0x16dc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x16dc(HyKeUd, key);\n}\nconst a0_0x275c43 = a0_0x16dc;\nlet input = require('fs')[a0_0x275c43(0x0)](a0_0x275c43(0x1), a0_0x275c43(0x2));\nfunction a0_0x2cd0() {\n    const _0x16c1ce = [\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'split',\n        'log'\n    ];\n    a0_0x2cd0 = function () {\n        return _0x16c1ce;\n    };\n    return a0_0x2cd0();\n}\nlet array = input[a0_0x275c43(0x3)]('\\x0a');\nlet result = '';\nfor (let i = 0x0; i < array['length']; i++) {\n    let data = array[i][a0_0x275c43(0x3)]('\\x20')['map'](Number);\n    let fScore = data[0x0];\n    let lScore = data[0x1];\n    let retest = data[0x2];\n    if (fScore === -0x1 && lScore === -0x1 && retest === -0x1)\n        break;\n    if (i !== 0x0)\n        result += '\\x0a';\n    if (fScore === -0x1 || lScore === -0x1) {\n        result += 'F';\n    } else {\n        let sum = fScore + lScore;\n        switch (!![]) {\n        case sum >= 0x50:\n            result += 'A';\n            break;\n        case 0x41 <= sum && sum < 0x50:\n            result += 'B';\n            break;\n        case 0x32 <= sum && sum < 0x41:\n            result += 'C';\n            break;\n        case 0x1e <= sum && sum < 0x32:\n            result += retest >= 0x32 ? 'C' : 'D';\n            break;\n        default:\n            result += 'F';\n        }\n        ;\n    }\n}\nconsole[a0_0x275c43(0x4)](result);", "test_cases": [["40 42 -1\n20 30 -1\n0 2 -1\n-1 -1 -1", "A\nC\nF"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'UTF-8');\nlet array = input.split('\\n'); // 3人分の試験データ配列\nlet result = '';\n\n// 学生分ループ\nfor (let i=0; i<array.length; i++) {\n  let data = array[i].split(' ').map(Number);\n  let fScore = data[0];\n  let lScore = data[1];\n  let retest = data[2];\n\n  // データが全て-1の時終了する\n  if (fScore === -1 && lScore === -1 && retest === -1) break;\n\n  if (i !== 0) result += '\\n';\n\n  // 中間試験、期末試験のいずれかを欠席した場合成績はF\n  if (fScore === -1 || lScore === -1) {\n    result += 'F';\n  } else {\n    let sum = fScore + lScore;\n    switch (true) {\n      case sum >= 80:\n        result += 'A';\n        break;\n      case 65 <= sum && sum < 80:\n        result += 'B';\n        break;\n      case 50 <= sum && sum < 65:\n        result += 'C';\n        break;\n      case 30 <= sum && sum < 50:\n        result += retest >= 50 ? 'C' : 'D';\n        break;\n      default:\n        result += 'F';\n    };\n  }\n}\nconsole.log(result);\n", "language": "JavaScript"}
{"filename": "p02556_1", "type": "JavaScript", "obfuscated": "function a0_0xa820(JAjiKP, key) {\n    const stringArray = a0_0x4f7e();\n    a0_0xa820 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xa820(JAjiKP, key);\n}\nconst a0_0x30b363 = a0_0xa820;\nfunction Main(input) {\n    const _0x42d5f8 = a0_0xa820;\n    input = input['split']('\\x0a');\n    input[_0x42d5f8(0x0)]();\n    let xy = input[_0x42d5f8(0x1)](val => val[_0x42d5f8(0x2)]('\\x20')[_0x42d5f8(0x1)](Number));\n    let arr0 = xy[_0x42d5f8(0x1)](val => val[0x0] + val[0x1]);\n    let arr1 = xy[_0x42d5f8(0x1)](val => val[0x0] - val[0x1]);\n    let arr0_calc = Math[_0x42d5f8(0x3)](...arr0) - Math['min'](...arr0);\n    let arr1_calc = Math[_0x42d5f8(0x3)](...arr1) - Math['min'](...arr1);\n    console[_0x42d5f8(0x4)](Math[_0x42d5f8(0x3)](arr0_calc, arr1_calc));\n}\nfunction a0_0x4f7e() {\n    const _0x3fc21f = [\n        'shift',\n        'map',\n        'split',\n        'max',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4f7e = function () {\n        return _0x3fc21f;\n    };\n    return a0_0x4f7e();\n}\nMain(require('fs')[a0_0x30b363(0x5)](a0_0x30b363(0x6), a0_0x30b363(0x7)));", "test_cases": [["3\n1 1\n2 4\n3 2", "4"], ["2\n1 1\n1 1", "0"]], "original": "function Main(input) {\n\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    input.shift();\n    \n    let xy = input.map(val => val.split(\" \").map(Number));\n\n    let arr0 = xy.map(val => val[0] + val[1]);\n    let arr1 = xy.map(val => val[0] - val[1]);\n    \n    let arr0_calc = Math.max(...arr0) - Math.min(...arr0);\n    let arr1_calc = Math.max(...arr1) - Math.min(...arr1);\n \n    console.log(Math.max(arr0_calc,arr1_calc));\n    \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02599_1", "type": "JavaScript", "obfuscated": "var a0_0x450f1c = a0_0xc245;\nfunction Main(input) {\n    var _0x14e3a6 = a0_0xc245;\n    input = input['split']('\\x0a');\n    var [n, q] = input[0x0][_0x14e3a6(0x0)]('\\x20')[_0x14e3a6(0x1)](a => parseInt(a, 0xa));\n    var colors = input[0x1][_0x14e3a6(0x0)]('\\x20');\n    for (var i = 0x0; i < q; i++) {\n        var [start, end] = input[i + 0x2][_0x14e3a6(0x0)]('\\x20')[_0x14e3a6(0x1)](a => parseInt(a, 0xa));\n        var cs = [];\n        for (var j = start - 0x1; j < end; j++) {\n            var color = colors[j];\n            if (cs[_0x14e3a6(0x2)](color) === -0x1) {\n                cs[_0x14e3a6(0x3)](color);\n            }\n        }\n        console['log'](cs[_0x14e3a6(0x4)]);\n    }\n}\nfunction a0_0xc245(WbCwcU, key) {\n    var stringArray = a0_0x1ded();\n    a0_0xc245 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xc245(WbCwcU, key);\n}\nMain(require('fs')[a0_0x450f1c(0x5)]('/dev/stdin', a0_0x450f1c(0x6)));\nfunction a0_0x1ded() {\n    var _0x3ed41c = [\n        'split',\n        'map',\n        'indexOf',\n        'push',\n        'length',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1ded = function () {\n        return _0x3ed41c;\n    };\n    return a0_0x1ded();\n}", "test_cases": [["4 3\n1 2 1 3\n1 3\n2 4\n3 3", "2\n3\n1"], ["10 10\n2 5 6 5 2 1 7 9 7 2\n5 5\n2 4\n6 7\n2 2\n7 8\n7 9\n1 8\n6 9\n8 10\n6 8", "1\n2\n2\n1\n2\n2\n6\n3\n3\n3"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var [n, q] = input[0].split(\" \").map(a => parseInt(a, 10));\n  var colors = input[1].split(\" \");\n  for (var i = 0; i<q; i++) {\n    var [start, end] = input[i+2].split(\" \").map(a => parseInt(a, 10));\n    var cs = [];\n    for (var j = start - 1; j<end; j++) {\n      var color = colors[j];\n      if (cs.indexOf(color) === -1) {\n        cs.push(color);\n      }\n    }\n    console.log(cs.length);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02714_1", "type": "JavaScript", "obfuscated": "function a0_0x4f22(MOYCnA, key) {\n    const stringArray = a0_0x4589();\n    a0_0x4f22 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f22(MOYCnA, key);\n}\nconst a0_0x5b5a1d = a0_0x4f22;\nfunction a0_0x4589() {\n    const _0x5e5805 = [\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'createInterface',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'filter',\n        'length'\n    ];\n    a0_0x4589 = function () {\n        return _0x5e5805;\n    };\n    return a0_0x4589();\n}\nprocess['stdin']['resume']();\nprocess[a0_0x5b5a1d(0x0)][a0_0x5b5a1d(0x1)](a0_0x5b5a1d(0x2));\nconst lines = [];\nconst reader = require('readline')[a0_0x5b5a1d(0x3)]({\n    'input': process[a0_0x5b5a1d(0x0)],\n    'output': process[a0_0x5b5a1d(0x4)]\n});\nreader['on'](a0_0x5b5a1d(0x5), line => {\n    const _0x2a1242 = a0_0x4f22;\n    lines[_0x2a1242(0x6)](line);\n});\nreader['on'](a0_0x5b5a1d(0x7), () => {\n    const _0x4bca8b = a0_0x4f22;\n    const inputLength = Number(lines[0x0]);\n    const inputString = lines[0x1];\n    const inputArray = inputString[_0x4bca8b(0x8)]('');\n    const rArray = inputArray['filter'](element => element === 'R');\n    const gArray = inputArray['filter'](element => element === 'G');\n    const bArray = inputArray[_0x4bca8b(0x9)](element => element === 'B');\n    let sum = 0x0;\n    for (let i = 0x1; i < Number(inputLength) + 0x1; i++) {\n        for (let j = i + 0x1; j < Number(inputLength) + 0x1; j++) {\n            const k = j + j - i;\n            if (k <= inputLength && inputArray[i - 0x1] !== inputArray[j - 0x1] && inputArray[j - 0x1] !== inputArray[k - 0x1] && inputArray[i - 0x1] !== inputArray[k - 0x1]) {\n                if ('TqoYe' === 'TqoYe') {\n                    sum = sum + 0x1;\n                } else {\n                    for (let j = i + 0x1; j < Number(inputLength) + 0x1; j++) {\n                        const k = j + j - i;\n                        if (k <= inputLength && inputArray[i - 0x1] !== inputArray[j - 0x1] && inputArray[j - 0x1] !== inputArray[k - 0x1] && inputArray[i - 0x1] !== inputArray[k - 0x1]) {\n                            sum = sum + 0x1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    console['log'](rArray[_0x4bca8b(0xa)] * gArray[_0x4bca8b(0xa)] * bArray[_0x4bca8b(0xa)] - sum);\n});", "test_cases": [["4\nRRGB", "1"], ["39\nRBRBGRBGGBBRRGBBRRRBGGBRBGBRBGBRBBBGBBB", "1800"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nconst lines = [];\nconst reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line)\n});\nreader.on('close', () => {\n  const inputLength = Number(lines[0])\n  const inputString = lines[1]\n  const inputArray = inputString.split('')\n  const rArray = inputArray.filter(element => element === 'R')\n  const gArray = inputArray.filter(element => element === 'G')\n  const bArray = inputArray.filter(element => element === 'B')\n\n  let sum = 0\n  for (let i = 1; i < Number(inputLength) + 1; i++) {\n    for (let j = i + 1; j < Number(inputLength) + 1; j++) {\n      const k = j + j - i \n\n      if(k <= inputLength && inputArray[i - 1] !== inputArray[j - 1]  && inputArray[j - 1] !== inputArray[k - 1] && inputArray[i - 1] !== inputArray[k - 1]){\n        sum = sum + 1\n      }\n    }\n  }\n\n  console.log(rArray.length * gArray.length * bArray.length - sum)\n\n});", "language": "JavaScript"}
{"filename": "p02747_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1011() {\n    const _0xe67e11 = [\n        'split',\n        'length',\n        'LOXtv',\n        'jgtKe',\n        'NGFwA',\n        'log',\n        'Yes',\n        'cRObm',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1011 = function () {\n        return _0xe67e11;\n    };\n    return a0_0x1011();\n}\nconst a0_0x59d80c = a0_0x246a;\nfunction a0_0x246a(xtWKQq, key) {\n    const stringArray = a0_0x1011();\n    a0_0x246a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x246a(xtWKQq, key);\n}\nconst Main = input => {\n    const _0x11c3e2 = a0_0x246a;\n    let xs = input['trim']()[_0x11c3e2(0x0)]('');\n    let len = xs[_0x11c3e2(0x1)];\n    let ans = 0x0;\n    for (let i = 0x0; i <= len; i++) {\n        if ('crizh' !== _0x11c3e2(0x2)) {\n            if (i % 0x2 == 0x0 && xs[i] == 'h' && [i + 0x1] != 'h') {\n                ans += 0x1;\n            } else if (i % 0x2 == 0x1 && xs[i] == 'i' && xs[i + 0x1] != 'i') {\n                ans += 0x1;\n            } else {\n                if (_0x11c3e2(0x3) !== 'PTOzE') {\n                    ans += 0x0;\n                } else {\n                    ans += 0x0;\n                }\n            }\n        } else {\n            ans += 0x1;\n        }\n    }\n    if (ans >= 0x2) {\n        if (_0x11c3e2(0x4) !== 'NGFwA') {\n            ans += 0x1;\n        } else {\n            console[_0x11c3e2(0x5)](_0x11c3e2(0x6));\n        }\n    } else {\n        if ('cRObm' === _0x11c3e2(0x7)) {\n            console[_0x11c3e2(0x5)]('No');\n        } else {\n            if (i % 0x2 == 0x0 && xs[i] == 'h' && [i + 0x1] != 'h') {\n                ans += 0x1;\n            } else if (i % 0x2 == 0x1 && xs[i] == 'i' && xs[i + 0x1] != 'i') {\n                ans += 0x1;\n            } else {\n                ans += 0x0;\n            }\n        }\n    }\n};\nMain(require('fs')[a0_0x59d80c(0x8)](a0_0x59d80c(0x9), a0_0x59d80c(0xa)));", "test_cases": [["hihi", "Yes"], ["hi", "Yes"], ["ha", "No"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('');\n   let len = xs.length;\n   let ans = 0;\n\n    for(let i =0; i<=len; i++) {\n       if(i%2==0 && xs[i]=='h'&&[i+1]!='h') {\n       \tans+=1;\n       }else if(i%2==1 && xs[i]=='i' &&xs[i+1]!='i'){\n        ans+=1;\n       }else{\n        ans+=0;\n       }\n    }\n    if(ans>=2){\n    console.log('Yes');\n    }else{\n    console.log('No');\n    }\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02823_1", "type": "JavaScript", "obfuscated": "var a0_0x428082 = a0_0x4b95;\nfunction Main(input) {\n    var _0x25360f = a0_0x4b95;\n    const array = input[_0x25360f(0x0)]()[_0x25360f(0x1)]('\\x20')['map'](s => parseInt(s));\n    const N = array[0x0];\n    var A = array[0x1];\n    var B = array[0x2];\n    var ans = 0x0;\n    var dist = B - A;\n    if (dist % 0x2) {\n        var diff = Math[_0x25360f(0x2)](N - B, A - 0x1) + 0x1;\n        ans += diff;\n        ans += Math[_0x25360f(0x3)]((B - A - 0x1) / 0x2);\n    } else {\n        ans = dist / 0x2;\n    }\n    console[_0x25360f(0x4)](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x428082(0x5)));\nfunction a0_0x4b95(CwLCMU, key) {\n    var stringArray = a0_0x551a();\n    a0_0x4b95 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b95(CwLCMU, key);\n}\nfunction a0_0x551a() {\n    var _0x1821d8 = [\n        'trim',\n        'split',\n        'min',\n        'floor',\n        'log',\n        'utf8'\n    ];\n    a0_0x551a = function () {\n        return _0x1821d8;\n    };\n    return a0_0x551a();\n}", "test_cases": [["5 2 4", "1"], ["5 2 3", "2"]], "original": "function Main(input) {\n  const array = input.trim().split(' ').map(s => parseInt(s))\n  const N = array[0]\n  var A = array[1]\n  var B = array[2]\n\n  var ans = 0\n  var dist = B - A\n  if (dist % 2) {\n    var diff = Math.min(N - B, A - 1) + 1\n    ans += diff\n    ans += Math.floor((B - A - 1)/2)\n  } else {\n    ans = dist / 2\n  }\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02844_1", "type": "JavaScript", "obfuscated": "var a0_0x1c0a0a = a0_0x1777;\nfunction Main(input) {\n    var _0x44c1f1 = a0_0x1777;\n    input = input[_0x44c1f1(0x0)]()[_0x44c1f1(0x1)]('\\x0a');\n    var N = parseInt(input[0x0]);\n    var SasStr = input[0x1];\n    var ans = 0x0;\n    var x1, x2, x3, xTmp, x1i, x2i, x3i, sTmp;\n    for (var i = 0x3e8; i < 0x7d0; i++) {\n        xTmp = String(i);\n        x1 = xTmp[_0x44c1f1(0x2)](0x1, 0x1);\n        x2 = xTmp[_0x44c1f1(0x2)](0x2, 0x1);\n        x3 = xTmp[_0x44c1f1(0x2)](0x3, 0x1);\n        x1i = SasStr[_0x44c1f1(0x3)](x1);\n        if (x1i !== -0x1) {\n            sTmp = SasStr['substr'](x1i + 0x1);\n            x2i = sTmp[_0x44c1f1(0x3)](x2);\n            if (x2i !== -0x1) {\n                sTmp = sTmp['substr'](x2i + 0x1);\n                x3i = sTmp[_0x44c1f1(0x3)](x3);\n                if (x3i !== -0x1) {\n                    ans++;\n                }\n            }\n        }\n    }\n    console[_0x44c1f1(0x4)](ans);\n}\nMain(require('fs')['readFileSync'](a0_0x1c0a0a(0x5), a0_0x1c0a0a(0x6)));\nfunction a0_0x1777(UPKvjQ, key) {\n    var stringArray = a0_0x4353();\n    a0_0x1777 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1777(UPKvjQ, key);\n}\nfunction a0_0x4353() {\n    var _0x2ed70e = [\n        'trim',\n        'split',\n        'substr',\n        'indexOf',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4353 = function () {\n        return _0x2ed70e;\n    };\n    return a0_0x4353();\n}", "test_cases": [["4\n0224", "3"], ["6\n123123", "17"], ["19\n3141592653589793238", "329"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\");\n    var N = parseInt(input[0]);\n    var SasStr = input[1];\n    var ans = 0;\n    var x1, x2, x3, xTmp, x1i, x2i, x3i, sTmp;\n    for (var i = 1000; i < 2000; i++){\n    \txTmp = String(i);\n    \tx1 = xTmp.substr(1, 1);\n    \tx2 = xTmp.substr(2, 1);\n    \tx3 = xTmp.substr(3, 1);\n    \tx1i = SasStr.indexOf(x1);\n    \tif (x1i !== -1) { \n    \t\tsTmp = SasStr.substr(x1i + 1);\n    \t\tx2i = sTmp.indexOf(x2);\n    \t\tif (x2i !== -1) { \n    \t\tsTmp = sTmp.substr(x2i + 1);\n    \t\tx3i = sTmp.indexOf(x3);\n    \t\t\tif (x3i !== -1) { \n    \t\t\t\tans ++;\n    \t\t\t}\n    \t\t}\n    \t}\t\n    }\n    console.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02953_1", "type": "JavaScript", "obfuscated": "const a0_0x26aa3d = a0_0x13ae;\nfunction a0_0x16af() {\n    const _0x443ec3 = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x16af = function () {\n        return _0x443ec3;\n    };\n    return a0_0x16af();\n}\nfunction a0_0x13ae(JnVRWp, key) {\n    const stringArray = a0_0x16af();\n    a0_0x13ae = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13ae(JnVRWp, key);\n}\nfunction Main(args) {\n    const _0x376c97 = a0_0x13ae;\n    const firstRow = args['split']('\\x0a')[0x0];\n    const row = args[_0x376c97(0x0)]('\\x0a')[0x1][_0x376c97(0x0)]('\\x20');\n    for (var i = row[_0x376c97(0x1)] - 0x1; i > 0x0; i--) {\n        if (row[i - 0x1] > row[i]) {\n            row[i - 0x1] -= 0x1;\n        }\n        if (row[i - 0x1] > row[i]) {\n            return console[_0x376c97(0x2)]('No');\n        }\n    }\n    console[_0x376c97(0x2)]('Yes');\n}\nMain(require('fs')[a0_0x26aa3d(0x3)](a0_0x26aa3d(0x4), a0_0x26aa3d(0x5)));", "test_cases": [["5\n1 2 1 1 3", "Yes"], ["4\n1 3 2 1", "No"], ["5\n1 2 3 4 5", "Yes"], ["1\n1000000000", "Yes"]], "original": "\nfunction Main(args){\n\n  const firstRow = args.split(\"\\n\")[0];\n  const row = args.split(\"\\n\")[1].split(\" \");\n\n  for(var i = row.length -1; i > 0; i-- ){\n    if( row[i-1] > row[i] ){\n      // console.log(row[i-1] + \"を\" + String(row[i-1] -1));\n      row[i-1] -= 1;\n    }\n    if( row[i-1] > row[i] ){\n      return console.log(\"No\");\n    }\n  }\n\n  console.log(\"Yes\");\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03238_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1420d8 = a0_0x408c;\nconst main = input => {\n    const _0x5b186c = a0_0x408c;\n    const args = input['trim']()[_0x5b186c(0x0)]('\\x0a');\n    const n = parseInt(args[0x0], 0xa);\n    if (n === 0x1) {\n        console['log'](_0x5b186c(0x1));\n    } else {\n        const a = parseInt(args[0x1], 0xa);\n        const b = parseInt(args[0x2], 0xa);\n        console[_0x5b186c(0x2)](a + b);\n    }\n};\nmain(require('fs')[a0_0x1420d8(0x3)](a0_0x1420d8(0x4), 'utf8'));\nfunction a0_0x408c(WfSDqL, key) {\n    const stringArray = a0_0xda21();\n    a0_0x408c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x408c(WfSDqL, key);\n}\nfunction a0_0xda21() {\n    const _0x25c8e2 = [\n        'split',\n        'Hello\\x20World',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0xda21 = function () {\n        return _0x25c8e2;\n    };\n    return a0_0xda21();\n}", "test_cases": [["1", "Hello World"], ["2\n3\n5", "8"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.trim().split('\\n')\n\tconst n = parseInt(args[0], 10)\n\n\tif (n === 1) {\n\t\tconsole.log('Hello World')\n\t} else {\n\t\tconst a = parseInt(args[1], 10)\n\t\tconst b = parseInt(args[2], 10)\n\t\tconsole.log(a + b)\n\t}\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03264_1", "type": "JavaScript", "obfuscated": "function a0_0x21d2() {\n    var _0x397c88 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x21d2 = function () {\n        return _0x397c88;\n    };\n    return a0_0x21d2();\n}\nvar a0_0x3deabc = a0_0x4688;\nfunction a0_0x4688(OeOiOv, key) {\n    var stringArray = a0_0x21d2();\n    a0_0x4688 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4688(OeOiOv, key);\n}\nfunction Main(input) {\n    var _0x3e362c = a0_0x4688;\n    var k = parseInt(input['split']('\\x0a')[0x0], 0xa);\n    var a = 0x0;\n    var b = 0x0;\n    for (i = 0x1; i <= k; i++) {\n        if (i % 0x2 == 0x0) {\n            a++;\n        } else {\n            b++;\n        }\n    }\n    console[_0x3e362c(0x0)](a * b);\n}\nMain(require('fs')[a0_0x3deabc(0x1)](a0_0x3deabc(0x2), a0_0x3deabc(0x3)));", "test_cases": [["3", "2"], ["6", "9"], ["11", "30"], ["50", "625"]], "original": "function Main(input){\n  var k = parseInt(input.split(\"\\n\")[0],10);\n  var a = 0;\n  var b = 0;\n  for(i = 1; i <= k;i++){\n    if(i % 2 == 0){\n    \ta++;\n  \t}else{\n    \tb++;\n  \t}\n  }\n  console.log(a * b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03288_1", "type": "JavaScript", "obfuscated": "var a0_0x41a022 = a0_0x2fab;\nfunction a0_0x2da9() {\n    var _0x42240b = [\n        'ABC',\n        'log',\n        'ARC',\n        'AGC',\n        '/dev/stdin',\n        'utf8',\n        'split'\n    ];\n    a0_0x2da9 = function () {\n        return _0x42240b;\n    };\n    return a0_0x2da9();\n}\nfunction main(input) {\n    var _0x4540a8 = a0_0x2fab;\n    var R = input[0x0] - 0x0;\n    if (R < 0x4b0)\n        console['log'](_0x4540a8(0x0));\n    else if (R < 0xaf0)\n        console[_0x4540a8(0x1)](_0x4540a8(0x2));\n    else\n        console['log'](_0x4540a8(0x3));\n}\nfunction a0_0x2fab(symDMo, key) {\n    var stringArray = a0_0x2da9();\n    a0_0x2fab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fab(symDMo, key);\n}\nmain(require('fs')['readFileSync'](a0_0x41a022(0x4), a0_0x41a022(0x5))['trim']()[a0_0x41a022(0x6)]('\\x0a'));", "test_cases": [["1199", "ABC"], ["1200", "ARC"], ["4208", "AGC"]], "original": "function main(input) {\n  var R = input[0]-0;\n  if(R<1200) console.log('ABC');\n  else if(R<2800) console.log('ARC');\n  else console.log('AGC');\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03293_1", "type": "JavaScript", "obfuscated": "function a0_0x117d() {\n    var _0x3eb8e2 = [\n        'trim',\n        'split',\n        'length',\n        'substr',\n        'slice',\n        'log',\n        'utf8'\n    ];\n    a0_0x117d = function () {\n        return _0x3eb8e2;\n    };\n    return a0_0x117d();\n}\nvar a0_0x23b932 = a0_0x4af8;\nfunction Main(input) {\n    var _0x1583cd = a0_0x4af8;\n    ans = 'No';\n    input = input[_0x1583cd(0x0)]()[_0x1583cd(0x1)]('\\x0a');\n    rotate = input[0x0];\n    for (i = 0x0; i <= input[0x0][_0x1583cd(0x2)]; i++) {\n        head = rotate[_0x1583cd(0x3)](0x0, 0x1);\n        str = rotate[_0x1583cd(0x4)](0x1) + head;\n        if (input[0x1] === str) {\n            ans = 'Yes';\n            break;\n        }\n        rotate = str;\n    }\n    console[_0x1583cd(0x5)](ans);\n}\nfunction a0_0x4af8(NTeGpu, key) {\n    var stringArray = a0_0x117d();\n    a0_0x4af8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4af8(NTeGpu, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x23b932(0x6)));", "test_cases": [["kyoto\ntokyo", "Yes"], ["abc\narc", "No"], ["aaaaaaaaaaaaaaab\naaaaaaaaaaaaaaab", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tans = 'No'\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.trim().split(\"\\n\");\n\trotate = input[0]\n\t// s = input[0].split(' ').map((n) => (parseInt(n)))\n\tfor (i = 0; i <= input[0].length; i++) {\n\t\thead = rotate.substr(0,1)\n\t\tstr = rotate.slice(1) + head\n\n\t\tif (input[1] === str) {\n\t\t\tans = 'Yes'\n\t\t\tbreak\n\t\t}\n\t\trotate = str\n\t}\n\n\t// sort\n\t// s.sort()\n\t// s.sort((a, b) => { return b - a})\n\n\n\n\t//出力\n\tconsole.log(ans)\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main(require('fs').readFileSync('./input.txt', 'utf-8'));", "language": "JavaScript"}
{"filename": "p03477_1", "type": "JavaScript", "obfuscated": "function a0_0x2f6b() {\n    const _0x561430 = [\n        'map',\n        'log',\n        'Right',\n        'utf8'\n    ];\n    a0_0x2f6b = function () {\n        return _0x561430;\n    };\n    return a0_0x2f6b();\n}\nconst a0_0x919cff = a0_0xf90f;\nfunction Main(input) {\n    const _0x55f9e1 = a0_0xf90f;\n    const numbers = input['split']('\\x20')[_0x55f9e1(0x0)](n => Number(n));\n    const l = numbers[0x0] + numbers[0x1];\n    const r = numbers[0x2] + numbers[0x3];\n    if (l > r) {\n        console[_0x55f9e1(0x1)]('Left');\n    } else if (l < r) {\n        console[_0x55f9e1(0x1)](_0x55f9e1(0x2));\n    } else {\n        console[_0x55f9e1(0x1)]('Balanced');\n    }\n}\nfunction a0_0xf90f(tTuTyN, key) {\n    const stringArray = a0_0x2f6b();\n    a0_0xf90f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xf90f(tTuTyN, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x919cff(0x3)));", "test_cases": [["3 8 7 1", "Left"], ["3 4 5 2", "Balanced"], ["1 7 6 4", "Right"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const l = numbers[0] + numbers[1];\n  const r = numbers[2] + numbers[3];\n  if (l > r) {\n    console.log('Left');\n  } else if (l < r) {\n    console.log('Right');\n  } else {\n    console.log('Balanced');\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03557_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x55c903 = a0_0x1ce1;\nfunction a0_0x1ce1(icPJTA, key) {\n    const stringArray = a0_0x5ca0();\n    a0_0x1ce1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ce1(icPJTA, key);\n}\nfunction main(input) {\n    const _0x147b75 = a0_0x1ce1;\n    const lines = input[_0x147b75(0x0)]('\\x0a');\n    const N = parseInt(lines[_0x147b75(0x1)]());\n    const A = lines[_0x147b75(0x1)]()[_0x147b75(0x0)]('\\x20')['map'](x => parseInt(x))[_0x147b75(0x2)]((a, b) => a - b);\n    const B = lines[_0x147b75(0x1)]()[_0x147b75(0x0)]('\\x20')[_0x147b75(0x3)](x => parseInt(x))[_0x147b75(0x2)]((a, b) => a - b);\n    const C = lines[_0x147b75(0x1)]()[_0x147b75(0x0)]('\\x20')['map'](x => parseInt(x))[_0x147b75(0x2)]((a, b) => a - b);\n    let result = 0x0;\n    for (let b = 0x0; b < N; b++) {\n        let current_b = B[b];\n        let count_a = N;\n        for (let a = 0x0; a < N; a++) {\n            if (current_b <= A[a]) {\n                count_a--;\n            }\n        }\n        let count_c = N;\n        for (let c = 0x0; c < N; c++) {\n            if (current_b >= C[c]) {\n                count_c--;\n            }\n        }\n        result += count_a * count_c;\n    }\n    console[_0x147b75(0x4)](result);\n}\nmain(require('fs')[a0_0x55c903(0x5)](a0_0x55c903(0x6), 'utf8'));\nfunction a0_0x5ca0() {\n    const _0x5684a4 = [\n        'split',\n        'shift',\n        'sort',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x5ca0 = function () {\n        return _0x5684a4;\n    };\n    return a0_0x5ca0();\n}", "test_cases": [["2\n1 5\n2 4\n3 6", "3"], ["3\n1 1 1\n2 2 2\n3 3 3", "27"], ["6\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288", "87"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N  =parseInt(lines.shift());\n  const A = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n  const B = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n  const C = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n\n\n//console.log(A);\n//console.log(B);\n//console.log(C);\n\n  let result = 0;\n\n  for(let b=0;b<N;b++){\n    let current_b = B[b];\n\n    let count_a = N;\n    for(let a=0;a<N;a++){\n      if(current_b <= A[a] ){\n        count_a--;\n      }\n    }\n  \n\n    let count_c = N;\n    for(let c=0;c<N;c++){\n      if(current_b >= C[c]){\n        count_c --;\n      }\n    }\n//console.log([count_a,count_c])\n    result += count_a*count_c\n  }\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03573_1", "type": "JavaScript", "obfuscated": "function a0_0xafc3(mOYeRc, key) {\n    const stringArray = a0_0x40ba();\n    a0_0xafc3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xafc3(mOYeRc, key);\n}\nconst a0_0x5e6a7e = a0_0xafc3;\nfunction Main(input) {\n    const _0x104b28 = a0_0xafc3;\n    const numbers = input[_0x104b28(0x0)]('\\x20')[_0x104b28(0x1)](n => Number(n));\n    const a = numbers[0x0];\n    const b = numbers[0x1];\n    const c = numbers[0x2];\n    if (a === b) {\n        console['log'](c);\n    } else if (b === c) {\n        console[_0x104b28(0x2)](a);\n    } else {\n        console[_0x104b28(0x2)](b);\n    }\n}\nfunction a0_0x40ba() {\n    const _0x132a55 = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x40ba = function () {\n        return _0x132a55;\n    };\n    return a0_0x40ba();\n}\nMain(require('fs')[a0_0x5e6a7e(0x3)](a0_0x5e6a7e(0x4), 'utf8'));", "test_cases": [["5 7 5", "7"], ["1 1 7", "7"], ["-100 100 100", "-100"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const a = numbers[0];\n  const b = numbers[1];\n  const c = numbers[2];\n\n  if (a === b) {\n    console.log(c);\n  } else if (b === c) {\n    console.log(a);\n  } else {\n    console.log(b);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03623_1", "type": "JavaScript", "obfuscated": "function a0_0x488b(WxatUm, key) {\n    var stringArray = a0_0x1a32();\n    a0_0x488b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x488b(WxatUm, key);\n}\nvar a0_0x126a1f = a0_0x488b;\nfunction Main(input) {\n    var _0x35eb26 = a0_0x488b;\n    input = input[_0x35eb26(0x0)]('\\x0a')[0x0][_0x35eb26(0x0)]('\\x20');\n    if (Math[_0x35eb26(0x1)](input[0x0] - input[0x1]) < Math['abs'](input[0x0] - input[0x2]))\n        console[_0x35eb26(0x2)]('A');\n    else\n        console[_0x35eb26(0x2)]('B');\n}\nfunction a0_0x1a32() {\n    var _0x4c4cfc = [\n        'split',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1a32 = function () {\n        return _0x4c4cfc;\n    };\n    return a0_0x1a32();\n}\nMain(require('fs')[a0_0x126a1f(0x3)](a0_0x126a1f(0x4), a0_0x126a1f(0x5)));", "test_cases": [["5 2 7", "B"], ["1 999 1000", "A"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\")[0].split(\" \"); // 1行目がinput[0], 2行目がinput[1], …に入る\n    \n    if( Math.abs(input[0] - input[1]) < Math.abs(input[0] - input[2]))\n        console.log(\"A\");\n    else\n        console.log(\"B\");\n}\n \n// ※この行以降は編集しない (標準入力から一度に読み込みMainを呼び出します)\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p03759_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5ebd(SjMmpt, key) {\n    const stringArray = a0_0x2f16();\n    a0_0x5ebd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ebd(SjMmpt, key);\n}\nconst a0_0x5098f9 = a0_0x5ebd;\nconst main = arg => {\n    const _0x566c52 = a0_0x5ebd;\n    const [a, b, c] = arg[_0x566c52(0x0)]('\\x0a')[0x0][_0x566c52(0x0)]('\\x20');\n    console[_0x566c52(0x1)](b - a == c - b ? 'YES' : 'NO');\n};\nfunction a0_0x2f16() {\n    const _0x54dfa1 = [\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2f16 = function () {\n        return _0x54dfa1;\n    };\n    return a0_0x2f16();\n}\nmain(require('fs')[a0_0x5098f9(0x2)]('/dev/stdin', a0_0x5098f9(0x3)));", "test_cases": [["2 4 6", "YES"], ["2 5 6", "NO"], ["3 2 1", "YES"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const [a, b, c] = arg.split(\"\\n\")[0].split(\" \");\n    console.log(b - a == c - b ? \"YES\" : \"NO\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03775_1", "type": "JavaScript", "obfuscated": "var a0_0xf37f4d = a0_0x7e2f;\nfunction a0_0x7e2f(wTZovO, key) {\n    var stringArray = a0_0x17dc();\n    a0_0x7e2f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7e2f(wTZovO, key);\n}\nfunction divisor(n) {\n    var _0xbe192e = a0_0x7e2f;\n    var ret = [];\n    for (var i = 0x1; i * i <= n; i++) {\n        if (n % i == 0x0) {\n            ret['push'](i);\n            if (i * i != n)\n                ret[_0xbe192e(0x0)](n / i);\n        }\n    }\n    return ret;\n}\nfunction f(a, b) {\n    var _0x49a8ac = a0_0x7e2f;\n    return Math[_0x49a8ac(0x1)](('' + a)[_0x49a8ac(0x2)], ('' + b)[_0x49a8ac(0x2)]);\n}\nfunction a0_0x17dc() {\n    var _0xcbb761 = [\n        'push',\n        'max',\n        'length',\n        'split',\n        'floor',\n        'min',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x17dc = function () {\n        return _0xcbb761;\n    };\n    return a0_0x17dc();\n}\nfunction main(input) {\n    var _0x514869 = a0_0x7e2f;\n    var inputs = input[_0x514869(0x3)]('\\x0a');\n    var n = parseInt(inputs[0x0], 0xa);\n    var divisors = divisor(n)['sort']((a, b) => a - b);\n    var surplus = divisors[_0x514869(0x2)] % 0x2;\n    var lastIndex = divisors[_0x514869(0x2)] - 0x1;\n    var halfLen = Math[_0x514869(0x4)](divisors[_0x514869(0x2)] / 0x2);\n    var minF = ('' + n)['length'];\n    for (var i = 0x0; i < halfLen - surplus; i++) {\n        minF = Math[_0x514869(0x5)](minF, f(divisors[i], divisors[lastIndex - i]));\n    }\n    if (surplus == 0x1)\n        minF = Math[_0x514869(0x5)](minF, ('' + divisors[halfLen])[_0x514869(0x2)]);\n    console[_0x514869(0x6)](minF);\n}\nmain(require('fs')[a0_0xf37f4d(0x7)]('/dev/stdin', a0_0xf37f4d(0x8)));", "test_cases": [["10000", "3"], ["1000003", "7"], ["9876543210", "6"]], "original": "// Atcoder057 - C\nfunction divisor(n) {var ret=[]; for (var i=1;i*i<=n;i++){if(n%i==0){ret.push(i);if(i*i!=n)ret.push(n/i);}}return ret;}\nfunction f(a , b){return Math.max(`${a}`.length, `${b}`.length);}\nfunction main(input) {\n  var inputs = input.split('\\n');\n  var n = parseInt(inputs[0], 10);\n\n  var divisors = divisor(n).sort((a, b) => a - b);\n  var surplus = divisors.length % 2;\n\n  var lastIndex = divisors.length - 1;\n  var halfLen = Math.floor(divisors.length / 2);\n\n  var minF = `${n}`.length;\n  for (var i = 0; i < halfLen - surplus; i++) {\n    minF = Math.min(minF, f(divisors[i], divisors[lastIndex - i]));\n  }\n  if (surplus == 1) minF = Math.min(minF, `${divisors[halfLen]}`.length);\n\n  console.log(minF);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03803_1", "type": "JavaScript", "obfuscated": "const a0_0x5aacdb = a0_0x5c23;\nlet [a, b] = require('fs')[a0_0x5aacdb(0x0)](a0_0x5aacdb(0x1), a0_0x5aacdb(0x2))['split']('\\x20')[a0_0x5aacdb(0x3)](Number);\nfunction a0_0x26e5() {\n    const _0x372461 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'log',\n        'Draw',\n        'Alice',\n        'Bob'\n    ];\n    a0_0x26e5 = function () {\n        return _0x372461;\n    };\n    return a0_0x26e5();\n}\nfunction a0_0x5c23(mOwekk, key) {\n    const stringArray = a0_0x26e5();\n    a0_0x5c23 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c23(mOwekk, key);\n}\nif (a == 0x1)\n    a = 0xe;\nif (b == 0x1)\n    b = 0xe;\nconsole[a0_0x5aacdb(0x4)](a == b ? a0_0x5aacdb(0x5) : a > b ? a0_0x5aacdb(0x6) : a0_0x5aacdb(0x7));", "test_cases": [["8 6", "Alice"], ["1 1", "Draw"], ["13 1", "Bob"]], "original": "let [a, b] = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\" \").map(Number);\nif (a == 1) a = 14;\nif (b == 1) b = 14;\nconsole.log(a == b ? \"Draw\" : a > b ? \"Alice\" : \"Bob\");", "language": "JavaScript"}
{"filename": "p03813_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5045b0 = a0_0x4fc2;\nfunction main(s) {\n    const _0x227405 = a0_0x4fc2;\n    const x = Number(s);\n    const ans = x >= 0x4b0 ? _0x227405(0x0) : _0x227405(0x1);\n    console['log'](ans);\n}\nfunction a0_0x4fc2(irFGFK, key) {\n    const stringArray = a0_0x204e();\n    a0_0x4fc2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fc2(irFGFK, key);\n}\nmain(require('fs')[a0_0x5045b0(0x2)](a0_0x5045b0(0x3), 'utf8'));\nfunction a0_0x204e() {\n    const _0x5d5496 = [\n        'ARC',\n        'ABC',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x204e = function () {\n        return _0x5d5496;\n    };\n    return a0_0x204e();\n}", "test_cases": [["1000", "ABC"], ["2000", "ARC"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const x = Number(s);\n\n  const ans = (x >= 1200) ? 'ARC' : 'ABC';\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03860_1", "type": "JavaScript", "obfuscated": "var a0_0x104a05 = a0_0x241a;\nfunction Main(input) {\n    var _0x33b577 = a0_0x241a;\n    input = input[_0x33b577(0x0)]('\\x20');\n    tmp = input[0x1][0x0];\n    console[_0x33b577(0x1)]('A' + tmp + 'C');\n}\nfunction a0_0x5355() {\n    var _0x5b5a23 = [\n        'split',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x5355 = function () {\n        return _0x5b5a23;\n    };\n    return a0_0x5355();\n}\nfunction a0_0x241a(yoyGzc, key) {\n    var stringArray = a0_0x5355();\n    a0_0x241a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x241a(yoyGzc, key);\n}\nMain(require('fs')['readFileSync'](a0_0x104a05(0x2), 'utf8'));", "test_cases": [["AtCoder Beginner Contest", "ABC"], ["AtCoder Snuke Contest", "ASC"], ["AtCoder X Contest", "AXC"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\" \");\n\ttmp = input[1][0];\n\tconsole.log(\"A\" + tmp + \"C\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03944_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5794cc = a0_0xed69;\nfunction a0_0x52a3() {\n    const _0x527e74 = [\n        'split',\n        'map',\n        'trim',\n        'MtLyC',\n        'IjcqW',\n        'UvSha',\n        'pATkM',\n        'log',\n        'xZUOu',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x52a3 = function () {\n        return _0x527e74;\n    };\n    return a0_0x52a3();\n}\nfunction Main(input) {\n    const _0x58a1c1 = a0_0xed69;\n    input = input['trim']()[_0x58a1c1(0x0)]('\\x0a');\n    let WHN = input[0x0]['split']('\\x20')[_0x58a1c1(0x1)](Number);\n    let minX = 0x0;\n    let minY = 0x0;\n    let maxX = WHN[0x0];\n    let maxY = WHN[0x1];\n    const N = WHN[0x2];\n    for (let i = 0x1; i <= N; i++) {\n        let tmp = input[i][_0x58a1c1(0x2)]()['split']('\\x20')['map'](Number);\n        let A = tmp[0x2];\n        if (A === 0x1) {\n            if (_0x58a1c1(0x3) !== _0x58a1c1(0x3)) {\n                console['log'](0x0);\n            } else {\n                if (tmp[0x0] > minX) {\n                    minX = tmp[0x0];\n                }\n            }\n        } else if (A === 0x2) {\n            if (tmp[0x0] < maxX) {\n                if (_0x58a1c1(0x4) === _0x58a1c1(0x4)) {\n                    maxX = tmp[0x0];\n                } else {\n                    minY = tmp[0x1];\n                }\n            }\n        } else if (A === 0x3) {\n            if (_0x58a1c1(0x5) === _0x58a1c1(0x5)) {\n                if (tmp[0x1] > minY) {\n                    minY = tmp[0x1];\n                }\n            } else {\n                if (tmp[0x1] < maxY) {\n                    maxY = tmp[0x1];\n                }\n            }\n        } else if (A === 0x4) {\n            if (_0x58a1c1(0x6) !== _0x58a1c1(0x6)) {\n                console[_0x58a1c1(0x7)](X * Y);\n            } else {\n                if (tmp[0x1] < maxY) {\n                    maxY = tmp[0x1];\n                }\n            }\n        }\n    }\n    const X = maxX - minX;\n    const Y = maxY - minY;\n    if (X <= 0x0 || Y <= 0x0) {\n        if (_0x58a1c1(0x8) !== _0x58a1c1(0x8)) {\n            maxY = tmp[0x1];\n        } else {\n            console['log'](0x0);\n        }\n    } else {\n        console[_0x58a1c1(0x7)](X * Y);\n    }\n}\nfunction a0_0xed69(JyKyCR, key) {\n    const stringArray = a0_0x52a3();\n    a0_0xed69 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xed69(JyKyCR, key);\n}\nMain(require('fs')['readFileSync'](a0_0x5794cc(0x9), a0_0x5794cc(0xa)));", "test_cases": [["5 4 2\n2 1 1\n3 3 4", "9"], ["5 4 3\n2 1 1\n3 3 4\n1 4 2", "0"], ["10 10 5\n1 6 1\n4 1 3\n6 9 4\n9 4 2\n3 1 3", "64"]], "original": "\"use strict\"\nfunction Main(input) {\n  input = input.trim().split('\\n');\n  let WHN = input[0].split(' ').map(Number);\n  let minX = 0;\n  let minY = 0;\n  let maxX = WHN[0];\n  let maxY = WHN[1];\n  const N = WHN[2];\n \n  for(let i=1; i<=N; i++){\n    let tmp = input[i].trim().split(' ').map(Number)\n    let A = tmp[2];\n    if(A === 1){\n      if(tmp[0] > minX){\n        minX = tmp[0];\n      }\n    } else if (A === 2) {\n      if(tmp[0] < maxX){\n        maxX = tmp[0];\n      }\n    } else if (A === 3) {\n      if(tmp[1] > minY) {\n        minY = tmp[1];\n      }\n    } else if (A === 4) {\n      if(tmp[1] < maxY) {\n        maxY = tmp[1];\n      }\n    }\n  }\n \n  const X = maxX - minX;\n  const Y = maxY - minY;\n  if(X <= 0 || Y <= 0){\n    console.log(0);\n  } else {\n    console.log(X*Y);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03963_1", "type": "JavaScript", "obfuscated": "var a0_0xdc3081 = a0_0x6261;\nfunction a0_0x4778() {\n    var _0xee6d69 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4778 = function () {\n        return _0xee6d69;\n    };\n    return a0_0x4778();\n}\nfunction a0_0x6261(HDtfbJ, key) {\n    var stringArray = a0_0x4778();\n    a0_0x6261 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6261(HDtfbJ, key);\n}\nfunction Main(input) {\n    var _0x16b747 = a0_0x6261;\n    var input = input['split']('\\x0a');\n    var tmp = input[0x0][_0x16b747(0x0)]('\\x20');\n    var N = tmp[0x0];\n    var K = tmp[0x1];\n    var pattern = K;\n    for (i = 0x1; i < N; i++) {\n        pattern *= K - 0x1;\n    }\n    console[_0x16b747(0x1)](pattern);\n}\nMain(require('fs')[a0_0xdc3081(0x2)](a0_0xdc3081(0x3), a0_0xdc3081(0x4)));", "test_cases": [["2 2", "2"], ["1 10", "10"]], "original": "function Main(input) {\n    // 1行目がinput[0], 2行目がinput[1], …に入る\n    var input = input.split(\"\\n\");\n    var tmp = input[0].split(\" \");\n    var N = tmp[0];\n    var K = tmp[1];\n\n    var pattern = K;\n    for (i = 1;i < N;i++) {\n\tpattern *= K - 1;\n    }\n\n    console.log(pattern);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00019_1", "type": "JavaScript", "obfuscated": "var a0_0x1d2cf9 = a0_0x2618;\nfunction a0_0x2618(sWqGlR, key) {\n    var stringArray = a0_0x58cc();\n    a0_0x2618 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2618(sWqGlR, key);\n}\nfunction main(input) {\n    var _0x1a53b6 = a0_0x2618;\n    var ans = 0x1;\n    var inputNum = toInt(input);\n    for (var i = 0x1; i <= input; i++) {\n        ans = ans * i;\n    }\n    console[_0x1a53b6(0x0)](ans);\n}\nfunction toInt(str) {\n    return parseInt(str, 0xa);\n}\nmain(require('fs')[a0_0x1d2cf9(0x1)](a0_0x1d2cf9(0x2), a0_0x1d2cf9(0x3)));\nfunction a0_0x58cc() {\n    var _0x51e5e0 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x58cc = function () {\n        return _0x51e5e0;\n    };\n    return a0_0x58cc();\n}", "test_cases": [["5", "120"]], "original": "function main(input){\n    var ans=1;\n    var inputNum=toInt(input);\n    for(var i=1;i<=input;i++){\n        ans=ans*i;\n    }\n    console.log(ans);\n}\nfunction toInt(str){\n    return parseInt(str, 10);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00021_1", "type": "JavaScript", "obfuscated": "function a0_0x28ae(saETxb, key) {\n    var stringArray = a0_0x110f();\n    a0_0x28ae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28ae(saETxb, key);\n}\nfunction a0_0x110f() {\n    var _0xa094ef = [\n        'replace',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'toFixed',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x110f = function () {\n        return _0xa094ef;\n    };\n    return a0_0x110f();\n}\nvar a0_0x5dbe46 = a0_0x28ae;\n(function (input) {\n    var _0x556d23 = a0_0x28ae;\n    var p = input[_0x556d23(0x0)](/\\n$/, '')[_0x556d23(0x1)]('\\x0a');\n    var n = Number(p[_0x556d23(0x2)]());\n    var i = 0x0;\n    while (i++ < n) {\n        var args = p[_0x556d23(0x2)]()[_0x556d23(0x1)]('\\x20')[_0x556d23(0x3)](Number);\n        var x1 = args[_0x556d23(0x2)]();\n        var y1 = args[_0x556d23(0x2)]();\n        var x2 = args[_0x556d23(0x2)]();\n        var y2 = args[_0x556d23(0x2)]();\n        var x3 = args[_0x556d23(0x2)]();\n        var y3 = args['shift']();\n        var x4 = args[_0x556d23(0x2)]();\n        var y4 = args[_0x556d23(0x2)]();\n        console[_0x556d23(0x4)](((y2 - y1) / (x2 - x1))[_0x556d23(0x5)](0x5) === ((y4 - y3) / (x4 - x3))[_0x556d23(0x5)](0x5) ? _0x556d23(0x6) : 'NO');\n    }\n}(require('fs')[a0_0x5dbe46(0x7)](a0_0x5dbe46(0x8), 'utf8')));", "test_cases": [["2\n0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0\n3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0", "YES\nNO"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  var i = 0;\n  while (i++ < n) {\n    var args = p.shift().split(' ').map(Number);\n    var x1 = args.shift();\n    var y1 = args.shift();\n    var x2 = args.shift();\n    var y2 = args.shift();\n    var x3 = args.shift();\n    var y3 = args.shift();\n    var x4 = args.shift();\n    var y4 = args.shift();\n    console.log(((y2 - y1) / (x2 - x1)).toFixed(5) === ((y4 - y3) / (x4 - x3)).toFixed(5) ? 'YES' : 'NO');\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02259_1", "type": "JavaScript", "obfuscated": "var a0_0x735111 = a0_0x1080;\nfunction bubbleSort(A) {\n    var _0x212b49 = a0_0x1080;\n    var N = A[_0x212b49(0x0)];\n    var flag = 0x1;\n    var i = 0x0;\n    var cnt = 0x0;\n    while (flag == 0x1) {\n        flag = 0x0;\n        for (var j = N - 0x1; j >= i + 0x1; j--) {\n            if (A[j] < A[j - 0x1]) {\n                var m = A[j];\n                A[j] = A[j - 0x1];\n                A[j - 0x1] = m;\n                flag = 0x1;\n                cnt++;\n            }\n        }\n        i++;\n    }\n    return [\n        A,\n        cnt\n    ];\n}\nvar input = require('fs')['readFileSync'](a0_0x735111(0x1), 'utf8');\nvar Arr = input[a0_0x735111(0x2)]()['split']('\\x0a');\nArr[a0_0x735111(0x3)]();\nvar arr = Arr[0x0][a0_0x735111(0x4)]('\\x20')[a0_0x735111(0x5)](Number);\nvar result = bubbleSort(arr);\nconsole[a0_0x735111(0x6)](result[0x0][a0_0x735111(0x7)]('\\x20'));\nconsole[a0_0x735111(0x6)](result[0x1]);\nfunction a0_0x1080(jNjHgK, key) {\n    var stringArray = a0_0x2656();\n    a0_0x1080 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1080(jNjHgK, key);\n}\nfunction a0_0x2656() {\n    var _0x31f8db = [\n        'length',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'log',\n        'join'\n    ];\n    a0_0x2656 = function () {\n        return _0x31f8db;\n    };\n    return a0_0x2656();\n}", "test_cases": [["5\n5 3 2 4 1", "1 2 3 4 5\n8"], ["6\n5 2 4 6 1 3", "1 2 3 4 5 6\n9"]], "original": "function bubbleSort(A){\n   var N=A.length;\n   var flag=1;\n   var i=0;\n   var cnt=0;\n   while(flag==1){\n      flag=0;\n      for(var j=N-1;j>=i+1;j--){\n         if(A[j]<A[j-1]){\n         var m=A[j];\n         A[j]=A[j-1];\n         A[j-1]=m;\n         flag=1;\n         cnt++;\n         }\n      }\n      i++;   \n   }\n   return [A,cnt];\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.shift();\nvar arr=Arr[0].split(\" \").map(Number);\nvar result=bubbleSort(arr);\nconsole.log(result[0].join(\" \"));\nconsole.log(result[1]);", "language": "JavaScript"}
{"filename": "p02580_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x41f7fa = a0_0xe641;\nfunction a0_0xe641(muNhpQ, key) {\n    const stringArray = a0_0x5776();\n    a0_0xe641 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe641(muNhpQ, key);\n}\nfunction Main(input) {\n    const _0x110016 = a0_0xe641;\n    const tmp = input[_0x110016(0x0)]()[_0x110016(0x1)]('\\x0a');\n    const [H, W, M] = tmp[_0x110016(0x2)]()['split']('\\x20')[_0x110016(0x3)](v => Number(v));\n    const hw = tmp[_0x110016(0x3)](v => v['split']('\\x20')[_0x110016(0x3)](v => Number(v)));\n    let result = 0x0;\n    for (let i = 0x1; i <= H; i++) {\n        const harr = hw[_0x110016(0x4)](v => v[0x0] !== i);\n        const hlen = hw[_0x110016(0x5)] - harr[_0x110016(0x5)];\n        for (let j = 0x1; j <= W; j++) {\n            const warr = harr[_0x110016(0x4)](v => v[0x1] === j);\n            if (result < hlen + warr[_0x110016(0x5)]) {\n                result = hlen + warr[_0x110016(0x5)];\n            }\n        }\n    }\n    console[_0x110016(0x6)](result);\n    return;\n}\nMain(require('fs')[a0_0x41f7fa(0x7)](a0_0x41f7fa(0x8), a0_0x41f7fa(0x9)));\nfunction a0_0x5776() {\n    const _0x30df17 = [\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'filter',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5776 = function () {\n        return _0x30df17;\n    };\n    return a0_0x5776();\n}", "test_cases": [["2 3 3\n2 2\n1 1\n1 3", "3"], ["3 3 4\n3 3\n3 1\n1 1\n1 2", "3"], ["5 5 10\n2 5\n4 3\n2 3\n5 5\n2 2\n5 4\n5 3\n5 1\n3 5\n1 4", "6"]], "original": "'use strict';\n\nfunction Main(input) {\n    //H W M\n    // (hi, wi)\n    const tmp = input.trim().split('\\n');\n    const [H, W, M] = tmp\n        .shift()\n        .split(' ')\n        .map((v) => Number(v));\n    const hw = tmp.map((v) => v.split(' ').map((v) => Number(v)));\n    // console.log(H, W, M, hw);\n    let result = 0;\n    for (let i = 1; i <= H; i++) {\n        const harr = hw.filter((v) => v[0] !== i);\n        const hlen = hw.length - harr.length;\n        for (let j = 1; j <= W; j++) {\n            const warr = harr.filter((v) => v[1] === j);\n            if (result < hlen + warr.length) {\n                result = hlen + warr.length;\n            }\n        }\n    }\n    console.log(result);\n    return;\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02606_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x386f(cCpoFh, key) {\n    const stringArray = a0_0x3235();\n    a0_0x386f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x386f(cCpoFh, key);\n}\nconst a0_0x2951da = a0_0x386f;\nfunction a0_0x3235() {\n    const _0x21853e = [\n        'trim',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3235 = function () {\n        return _0x21853e;\n    };\n    return a0_0x3235();\n}\nconst main = arg => {\n    const _0x485ef1 = a0_0x386f;\n    arg = arg[_0x485ef1(0x0)]()['split']('\\x0a');\n    const L = parseInt(arg[0x0][_0x485ef1(0x1)]('\\x20')[0x0]);\n    const R = parseInt(arg[0x0][_0x485ef1(0x1)]('\\x20')[0x1]);\n    const d = parseInt(arg[0x0][_0x485ef1(0x1)]('\\x20')[0x2]);\n    let answer = 0x0;\n    for (let i = L; i <= R; i++) {\n        if (i % d === 0x0)\n            answer++;\n    }\n    console['log'](answer);\n};\nmain(require('fs')[a0_0x2951da(0x2)](a0_0x2951da(0x3), a0_0x2951da(0x4)));", "test_cases": [["5 10 2", "3"], ["6 20 7", "2"], ["1 100 1", "100"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const L = parseInt(arg[0].split(\" \")[0]);\n    const R = parseInt(arg[0].split(\" \")[1]);\n    const d = parseInt(arg[0].split(\" \")[2]);\n    \n    let answer = 0;\n    \n    for(let i=L; i<=R; i++) {\n        if(i % d === 0) answer++;\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02657_1", "type": "JavaScript", "obfuscated": "function a0_0x5c78(WwrevO, key) {\n    const stringArray = a0_0x1fcd();\n    a0_0x5c78 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c78(WwrevO, key);\n}\nconst a0_0x5c1dae = a0_0x5c78;\nconst main = stdin => {\n    const _0x3b6dc3 = a0_0x5c78;\n    const [A, B] = stdin[_0x3b6dc3(0x0)]()['split']('\\x20')[_0x3b6dc3(0x1)](x => parseInt(x));\n    console[_0x3b6dc3(0x2)](A * B);\n};\nfunction a0_0x1fcd() {\n    const _0x994143 = [\n        'trim',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1fcd = function () {\n        return _0x994143;\n    };\n    return a0_0x1fcd();\n}\nmain(require('fs')[a0_0x5c1dae(0x3)](a0_0x5c1dae(0x4), 'utf8'));", "test_cases": [["2 5", "10"], ["100 100", "10000"]], "original": "const main = stdin => {\n  const [A, B] = stdin.trim().split(' ').map(x => parseInt(x))\n  console.log(A * B)\n}\n\n// 標準入力\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p02660_1", "type": "JavaScript", "obfuscated": "var a0_0x2e045b = a0_0x2b21;\nfunction Main(input) {\n    var _0x45ec91 = a0_0x2b21;\n    input = input[_0x45ec91(0x0)]('\\x0a');\n    var N = parseInt(input[0x0]);\n    var ans = 0x0;\n    var set = new Set();\n    var N2 = N;\n    for (var i = 0x2; i < Math['sqrt'](N); i++) {\n        var x = i;\n        for (var j = 0x1; x < N; j++) {\n            if (N2 % Math[_0x45ec91(0x1)](i, j) == 0x0) {\n                ans++;\n                N2 = N2 / Math[_0x45ec91(0x1)](i, j);\n            } else {\n                break;\n            }\n            x = Math['pow'](i, j + 0x1);\n        }\n    }\n    if (ans == 0x0 && N != 0x1) {\n        ans = 0x1;\n    }\n    console[_0x45ec91(0x2)]('%s', ans);\n    return ans;\n}\nfunction debug(n) {\n    var _0x578b4f = a0_0x2b21;\n    var input = document[_0x578b4f(0x3)]('input' + n)[_0x578b4f(0x4)];\n    var ans = Main(input);\n    var result = 'WA';\n    if (ans == document[_0x578b4f(0x3)]('output' + n)[_0x578b4f(0x4)][_0x578b4f(0x0)]('\\x0a')[0x0]) {\n        result = 'AC';\n    }\n    document[_0x578b4f(0x3)](_0x578b4f(0x5) + n)[_0x578b4f(0x6)] = result;\n}\nfunction a0_0x2b21(iQAhMs, key) {\n    var stringArray = a0_0x7a40();\n    a0_0x2b21 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b21(iQAhMs, key);\n}\nMain(require('fs')[a0_0x2e045b(0x7)](a0_0x2e045b(0x8), a0_0x2e045b(0x9)));\nfunction a0_0x7a40() {\n    var _0x4a698b = [\n        'split',\n        'pow',\n        'log',\n        'getElementById',\n        'value',\n        'result',\n        'innerHTML',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7a40 = function () {\n        return _0x4a698b;\n    };\n    return a0_0x7a40();\n}", "test_cases": [["24", "3"], ["1", "0"], ["64", "3"], ["1000000007", "1"], ["997764507000", "7"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0]);\n  var ans = 0;\n  var set = new Set();\n  var N2=N;\n  for(var i=2;i<Math.sqrt(N);i++){\n    var x =i;\n    for(var j=1;x<N;j++){\n      if(N2%Math.pow(i,j)==0){\n        ans++;\n        N2=N2/Math.pow(i,j);\n      }else{\n        break;\n      }\n      x=Math.pow(i,j+1);\n    }\n  }\n  if(ans==0&&N!=1){\n    ans=1;\n  }\n  \n\n\n\n  console.log('%s', ans);\n  return ans;\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02688_1", "type": "JavaScript", "obfuscated": "const a0_0x51c5f1 = a0_0x106b;\nfunction a0_0xb6b0() {\n    const _0xa8b018 = [\n        'split',\n        'shift',\n        'length',\n        'lgevX',\n        'hlgfZ',\n        'push',\n        'indexOf',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0xb6b0 = function () {\n        return _0xa8b018;\n    };\n    return a0_0xb6b0();\n}\nfunction a0_0x106b(wlvUqw, key) {\n    const stringArray = a0_0xb6b0();\n    a0_0x106b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x106b(wlvUqw, key);\n}\nfunction Main(input) {\n    const _0x5c762f = a0_0x106b;\n    tmp = input[_0x5c762f(0x0)]('\\x0a');\n    tmp2 = tmp[0x0][_0x5c762f(0x0)]('\\x20');\n    var n = parseInt(tmp2[0x0], 0xa);\n    var k = parseInt(tmp2[0x1], 0xa);\n    tmp[_0x5c762f(0x1)]();\n    arry = tmp['slice']();\n    list = [];\n    count = 0x0;\n    tmp3 = [];\n    for (let i = 0x0; i < arry[_0x5c762f(0x2)]; i++) {\n        if ('lgevX' === _0x5c762f(0x3)) {\n            if (i % 0x2 !== 0x0) {\n                if (_0x5c762f(0x4) === _0x5c762f(0x4)) {\n                    arry[i] = arry[i][_0x5c762f(0x0)]('\\x20');\n                    tmp3 = arry[i]['map'](Number);\n                    for (let index = 0x0; index < tmp3[_0x5c762f(0x2)]; index++) {\n                        list[_0x5c762f(0x5)](tmp3[index]);\n                    }\n                } else {\n                    count += 0x1;\n                }\n            }\n        } else {\n            if (list[_0x5c762f(0x6)](i) >= 0x0) {\n            } else {\n                count += 0x1;\n            }\n        }\n    }\n    for (let i = 0x1; i <= n; i++) {\n        if (list[_0x5c762f(0x6)](i) >= 0x0) {\n        } else {\n            count += 0x1;\n        }\n    }\n    console[_0x5c762f(0x7)](count);\n}\nMain(require('fs')['readFileSync'](a0_0x51c5f1(0x8), 'utf8'));", "test_cases": [["3 2\n2\n1 3\n1\n3", "1"], ["3 3\n1\n3\n1\n3\n1\n3", "2"]], "original": "function Main(input) {\n    tmp = input.split(\"\\n\");\n    tmp2 = tmp[0].split(\" \");\n    var n = parseInt(tmp2[0], 10);\n    var k = parseInt(tmp2[1], 10);\n    tmp.shift();\n    arry = tmp.slice();\n    list = [];\n    count = 0;\n    tmp3 = [];\n\n    for (let i = 0; i < arry.length; i++) {\n       if (i % 2 !== 0) {\n\n           arry[i] = arry[i].split(\" \");\n           tmp3 = arry[i].map(Number);\n\n           for (let index = 0; index < tmp3.length; index++) {\n               list.push(tmp3[index]);\n           }\n       }\n    }\n  \n    for (let i = 1; i <= n; i++) {\n        if (list.indexOf(i) >= 0) {\n            \n        } else{\n            count += 1;\n        }        \n    }\n\n    console.log(count);    \n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02713_1", "type": "JavaScript", "obfuscated": "var a0_0x4bc87f = a0_0x34a0;\nfunction main(input) {\n    var _0x43a154 = a0_0x34a0;\n    input = parseInt(input);\n    var ans = 0x0;\n    for (var i = 0x1; i < input + 0x1; i++) {\n        if (_0x43a154(0x0) !== _0x43a154(0x1)) {\n            for (var j = 0x1; j < input + 0x1; j++) {\n                if ('HHJLe' === _0x43a154(0x2)) {\n                    for (var k = 0x1; k < input + 0x1; k++) {\n                        if (_0x43a154(0x3) === _0x43a154(0x4)) {\n                            return a;\n                        } else {\n                            ans += gcd(k, gcd(i, j));\n                        }\n                    }\n                } else {\n                    if (b == 0x0) {\n                        return a;\n                    }\n                    return gcd(b, a % b);\n                }\n            }\n        } else {\n            for (var j = 0x1; j < input + 0x1; j++) {\n                for (var k = 0x1; k < input + 0x1; k++) {\n                    ans += gcd(k, gcd(i, j));\n                }\n            }\n        }\n    }\n    console[_0x43a154(0x5)](ans);\n}\nfunction a0_0x34a0(yeiIPi, key) {\n    var stringArray = a0_0x3cd9();\n    a0_0x34a0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x34a0(yeiIPi, key);\n}\nfunction gcd(a, b) {\n    var _0x4b6e23 = a0_0x34a0;\n    if (b == 0x0) {\n        if (_0x4b6e23(0x6) !== 'dOZSm') {\n            input = parseInt(input);\n            var ans = 0x0;\n            for (var i = 0x1; i < input + 0x1; i++) {\n                for (var j = 0x1; j < input + 0x1; j++) {\n                    for (var k = 0x1; k < input + 0x1; k++) {\n                        ans += gcd(k, gcd(i, j));\n                    }\n                }\n            }\n            console['log'](ans);\n        } else {\n            return a;\n        }\n    }\n    return gcd(b, a % b);\n}\nmain(require('fs')[a0_0x4bc87f(0x7)](a0_0x4bc87f(0x8), a0_0x4bc87f(0x9)));\nfunction a0_0x3cd9() {\n    var _0x3d978c = [\n        'IOGuJ',\n        'cJcMD',\n        'HHJLe',\n        'jmQKZ',\n        'xPBMH',\n        'log',\n        'dOZSm',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3cd9 = function () {\n        return _0x3d978c;\n    };\n    return a0_0x3cd9();\n}", "test_cases": [["2", "9"], ["200", "10813692"]], "original": "function main(input) {\n    input = parseInt(input);\n    var ans = 0;\n    for (var i = 1; i < input+1; i++) {\n        for (var j = 1; j < input+1; j++) {\n            for (var k = 1; k < input+1; k++) {\n                ans += gcd(k, gcd(i, j));\n            }\n        }\n    }\n\n    console.log(ans);\n}\n\nfunction gcd(a, b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a%b);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02727_1", "type": "JavaScript", "obfuscated": "var a0_0x5d09ad = a0_0x17af;\nvar input = require('fs')[a0_0x5d09ad(0x0)]('/dev/stdin', a0_0x5d09ad(0x1));\nvar lines = input[a0_0x5d09ad(0x2)]('\\x0a');\nconst parse = (s, sep) => {\n    var _0x33b026 = a0_0x17af;\n    return s[_0x33b026(0x2)](sep)[_0x33b026(0x3)](v => parseInt(v));\n};\nconst split = (s, sep, result, keys) => {\n    var _0x46bc0e = a0_0x17af;\n    var arr = parse(s, sep);\n    for (var i = 0x0; i < arr[_0x46bc0e(0x4)]; i++) {\n        result[keys[i]] = arr[i];\n    }\n};\nfunction a0_0x17af(ywAgLR, key) {\n    var stringArray = a0_0x2442();\n    a0_0x17af = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x17af(ywAgLR, key);\n}\nvar inp = {};\nsplit(lines[0x0], '\\x20', inp, [\n    'x',\n    'y',\n    'a',\n    'b',\n    'c'\n]);\nvar p = parse(lines[0x1], '\\x20')[a0_0x5d09ad(0x5)]((a, b) => b - a);\nvar q = parse(lines[0x2], '\\x20')[a0_0x5d09ad(0x5)]((a, b) => b - a);\nvar r = parse(lines[0x3], '\\x20')[a0_0x5d09ad(0x5)]((a, b) => b - a);\nfunction a0_0x2442() {\n    var _0xf87fb3 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'map',\n        'length',\n        'sort',\n        'slice',\n        'reduce'\n    ];\n    a0_0x2442 = function () {\n        return _0xf87fb3;\n    };\n    return a0_0x2442();\n}\np = p[a0_0x5d09ad(0x6)](0x0, inp['x']);\nq = q[a0_0x5d09ad(0x6)](0x0, inp['y']);\nconsole['log'](p['concat'](q, r)[a0_0x5d09ad(0x5)]((a, b) => b - a)['slice'](0x0, inp['x'] + inp['y'])[a0_0x5d09ad(0x7)]((a, b) => a + b, 0x0));", "test_cases": [["1 2 2 2 1\n2 4\n5 1\n3", "12"], ["2 2 2 2 2\n8 6\n9 1\n2 1", "25"], ["2 2 4 4 4\n11 12 13 14\n21 22 23 24\n1 2 3 4", "74"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nconst parse = (s, sep) => {\n  return s.split(sep).map(v => parseInt(v));\n}\nconst split = (s, sep, result, keys) => {\n  var arr = parse(s, sep);\n  for (var i = 0; i < arr.length; i++) {\n    result[keys[i]] = arr[i];\n  }\n}\n\nvar inp = {};\nsplit(lines[0], ' ', inp, ['x', 'y', 'a', 'b', 'c']);\nvar p = parse(lines[1], ' ').sort((a, b) => b - a);\nvar q = parse(lines[2], ' ').sort((a, b) => b - a);\nvar r = parse(lines[3], ' ').sort((a, b) => b - a);\np = p.slice(0, inp.x);\nq = q.slice(0, inp.y);\n\nconsole.log(p.concat(q, r).sort((a, b) => b - a).slice(0, inp.x + inp.y).reduce((a, b) => a + b, 0));\n", "language": "JavaScript"}
{"filename": "p02783_1", "type": "JavaScript", "obfuscated": "const a0_0x4ecc6e = a0_0x259b;\nfunction Main(input) {\n    const _0xbdf59f = a0_0x259b;\n    const args = input[_0xbdf59f(0x0)]('\\x20');\n    const H = parseInt(args[0x0], 0xa);\n    const A = parseInt(args[0x1], 0xa);\n    const ans = Math[_0xbdf59f(0x1)](H / A);\n    console[_0xbdf59f(0x2)](ans);\n}\nfunction a0_0x259b(UVBUzS, key) {\n    const stringArray = a0_0x2ae9();\n    a0_0x259b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x259b(UVBUzS, key);\n}\nfunction a0_0x2ae9() {\n    const _0x25765d = [\n        'split',\n        'ceil',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2ae9 = function () {\n        return _0x25765d;\n    };\n    return a0_0x2ae9();\n}\nMain(require('fs')['readFileSync'](a0_0x4ecc6e(0x3), a0_0x4ecc6e(0x4)));", "test_cases": [["10 4", "3"], ["1 10000", "1"], ["10000 1", "10000"]], "original": "function Main(input) {\n    const args = input.split(' ');\n    const H = parseInt(args[0], 10);\n    const A = parseInt(args[1], 10);\n    const ans = Math.ceil(H/A)\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p02842_1", "type": "JavaScript", "obfuscated": "function a0_0x5122(ZNLoRP, key) {\n    var stringArray = a0_0x1960();\n    a0_0x5122 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5122(ZNLoRP, key);\n}\nvar a0_0x4081db = a0_0x5122;\nfunction Main(input) {\n    var _0xd073fd = a0_0x5122;\n    var tax = 1.08;\n    var invalid = ':(';\n    var input = input['split']('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var x = Math[_0xd073fd(0x0)](n / tax);\n    var reverse_n = Math[_0xd073fd(0x0)](x * tax);\n    if (n == reverse_n) {\n        if (_0xd073fd(0x1) !== _0xd073fd(0x2)) {\n            console['log'](x);\n            return;\n        } else {\n            console[_0xd073fd(0x3)](x);\n            return;\n        }\n    }\n    var x_u = x + 0x1;\n    if (Math[_0xd073fd(0x0)](x_u * tax) == n) {\n        console[_0xd073fd(0x3)](x_u);\n        return;\n    }\n    var x_u2 = x + 0x2;\n    if (Math[_0xd073fd(0x0)](x_u2 * tax) == n) {\n        console[_0xd073fd(0x3)](x_u2);\n        return;\n    }\n    var x_d = x - 0x1;\n    if (Math['floor'](x_d * tax) == n) {\n        console['log'](x_d);\n        return;\n    }\n    var x_d = x - 0x2;\n    if (Math['floor'](x_d * tax) == n) {\n        if ('aQUnJ' !== _0xd073fd(0x4)) {\n            console['log'](x_d);\n            return;\n        } else {\n            console['log'](x_d);\n            return;\n        }\n    }\n    console[_0xd073fd(0x3)](invalid);\n}\nMain(require('fs')[a0_0x4081db(0x5)](a0_0x4081db(0x6), a0_0x4081db(0x7)));\nfunction a0_0x1960() {\n    var _0x75a840 = [\n        'floor',\n        'SVvHq',\n        'FPoky',\n        'log',\n        'gqSre',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1960 = function () {\n        return _0x75a840;\n    };\n    return a0_0x1960();\n}", "test_cases": [["432", "400"], ["1079", ":("], ["1001", "927"]], "original": "function Main(input) {\n    var tax = 1.08;\n    var invalid = \":(\";\n\n\tvar input = input.split(\"\\n\");\n\tvar n = parseInt(input[0], 10);\n\n    var x = Math.floor( n / tax);\n\n    var reverse_n = Math.floor(x * tax);\n\n    if (n == reverse_n) {\n        console.log(x);\n        return;\n    } \n\n    var x_u = x + 1;\n    if ((Math.floor((x_u) * tax)) == n) {\n        console.log(x_u);\n        return;\n    }\n\n    var x_u2 = x + 2;\n    if ((Math.floor((x_u2) * tax)) == n) {\n        console.log(x_u2);\n        return;\n    }\n\n    var x_d = x - 1;\n    if ((Math.floor((x_d) * tax)) == n) {\n        console.log(x_d);\n        return;\n    }\n\n    var x_d = x - 2;\n    if ((Math.floor((x_d) * tax)) == n) {\n        console.log(x_d);\n        return;\n    }\n\n    console.log(invalid);\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03018_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4b794c = a0_0x29de;\nfunction a0_0x29de(mkvRWD, key) {\n    const stringArray = a0_0x18df();\n    a0_0x29de = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x29de(mkvRWD, key);\n}\nfunction Main(input) {\n    const _0x428318 = a0_0x29de;\n    let s = input;\n    let tmp = s[_0x428318(0x0)](_0x428318(0x1));\n    let result = tmp[_0x428318(0x2)] - 0x1;\n    while (tmp['length'] !== 0x1) {\n        s = tmp[_0x428318(0x3)]('BCA');\n        tmp = s['split']('ABC');\n        result += tmp[_0x428318(0x2)] - 0x1;\n    }\n    console[_0x428318(0x4)](result);\n}\nMain(require('fs')[a0_0x4b794c(0x5)]('/dev/stdin', a0_0x4b794c(0x6)));\nfunction a0_0x18df() {\n    const _0x134cbf = [\n        'split',\n        'ABC',\n        'length',\n        'join',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x18df = function () {\n        return _0x134cbf;\n    };\n    return a0_0x18df();\n}", "test_cases": [["ABCABC", "3"], ["C", "0"], ["ABCACCBABCBCAABCB", "6"]], "original": "'use strict'\n\nfunction Main(input) {\n  let s = input;\n  let tmp = s.split('ABC');\n  let result = tmp.length - 1;\n  while(tmp.length !== 1){\n    s = tmp.join('BCA')\n    tmp = s.split('ABC');\n    result += tmp.length - 1;\n  }\n  console.log(result)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03047_1", "type": "JavaScript", "obfuscated": "function a0_0x14b7(OwfZJc, key) {\n    var stringArray = a0_0x16aa();\n    a0_0x14b7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x14b7(OwfZJc, key);\n}\nfunction a0_0x16aa() {\n    var _0x1ad675 = [\n        'split',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x16aa = function () {\n        return _0x1ad675;\n    };\n    return a0_0x16aa();\n}\nvar a0_0x5d6b3b = a0_0x14b7;\nfunction Main(input) {\n    var _0xd58ced = a0_0x14b7;\n    var str = input['trim']();\n    var h = str[_0xd58ced(0x0)]('\\x20');\n    var n = h[0x0];\n    var k = h[0x1];\n    var kekka = 0x0;\n    var kekka = n - k + 0x1;\n    console['log'](kekka);\n}\nMain(require('fs')[a0_0x5d6b3b(0x1)]('/dev/stdin', a0_0x5d6b3b(0x2)));", "test_cases": [["3 2", "2"], ["13 3", "11"]], "original": "function Main(input){\n  \n  var str = input.trim();\n    var h = str.split(\" \");\n  var n = h[0];\n  var k = h[1];\n\n  var kekka = 0;\n  \n  var kekka = n-k+1;\n  \n  console.log(kekka);\n \n}//function end\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03289_1", "type": "JavaScript", "obfuscated": "function a0_0x6df5(utlVXY, key) {\n    var stringArray = a0_0x27a7();\n    a0_0x6df5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6df5(utlVXY, key);\n}\nfunction a0_0x27a7() {\n    var _0x388de1 = [\n        'trim',\n        'split',\n        'map',\n        'length',\n        'Vdjne',\n        'bPRJe',\n        'log',\n        'iiNbL',\n        'splice',\n        'PAcMu',\n        'wQcwr',\n        'test',\n        'lscXd',\n        'GQXkh',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x27a7 = function () {\n        return _0x388de1;\n    };\n    return a0_0x27a7();\n}\nvar a0_0x2697bc = a0_0x6df5;\nfunction main(input) {\n    var _0x50e5f0 = a0_0x6df5;\n    input = input[_0x50e5f0(0x0)]();\n    var arr = input[_0x50e5f0(0x1)]('')[_0x50e5f0(0x2)](n => n);\n    var ans = 0x0;\n    if (arr[0x0] == 'A') {\n        ans++;\n    }\n    var temp = 0x0;\n    var memo = 0x0;\n    for (var i = 0x2; i < arr[_0x50e5f0(0x3)] - 0x1; i++) {\n        if (_0x50e5f0(0x4) === _0x50e5f0(0x4)) {\n            if (arr[i] == 'C') {\n                if (_0x50e5f0(0x5) === _0x50e5f0(0x5)) {\n                    temp++;\n                    memo = i;\n                } else {\n                    console[_0x50e5f0(0x6)]('WA');\n                }\n            }\n        } else {\n            ans++;\n        }\n    }\n    if (temp == 0x1) {\n        if ('iiNbL' !== _0x50e5f0(0x7)) {\n            ans++;\n        } else {\n            ans++;\n        }\n    }\n    if (ans == 0x2) {\n        arr[_0x50e5f0(0x8)](0x0, 0x1);\n        arr[_0x50e5f0(0x8)](memo - 0x1, 0x1);\n        if (/A-Z/['test'](arr) == ![]) {\n            ans++;\n        }\n        if (ans == 0x3) {\n            console[_0x50e5f0(0x6)]('AC');\n        } else {\n            if (_0x50e5f0(0x9) === _0x50e5f0(0xa)) {\n                arr[_0x50e5f0(0x8)](0x0, 0x1);\n                arr[_0x50e5f0(0x8)](memo - 0x1, 0x1);\n                if (/A-Z/[_0x50e5f0(0xb)](arr) == ![]) {\n                    ans++;\n                }\n                if (ans == 0x3) {\n                    console['log']('AC');\n                } else {\n                    console[_0x50e5f0(0x6)]('WA');\n                }\n            } else {\n                console['log']('WA');\n            }\n        }\n    } else {\n        if (_0x50e5f0(0xc) === _0x50e5f0(0xd)) {\n            if (arr[i] == 'C') {\n                temp++;\n                memo = i;\n            }\n        } else {\n            console[_0x50e5f0(0x6)]('WA');\n        }\n    }\n}\nmain(require('fs')[a0_0x2697bc(0xe)](a0_0x2697bc(0xf), a0_0x2697bc(0x10)));", "test_cases": [["AtCoder", "AC"], ["ACoder", "WA"], ["AcycliC", "WA"], ["AtCoCo", "WA"], ["Atcoder", "WA"]], "original": "function main(input) {\n  input=input.trim();\n  var arr = input.split(\"\").map((n) => (n));\n  var ans = 0\n\n  if(arr[0]==\"A\"){\n    ans++\n  }\n\n  var temp=0;\n  var memo=0;\n  for(var i=2; i<arr.length-1; i++){\n    if(arr[i]==\"C\"){\n      temp++;\n      memo=i\n    }\n  }\n  if(temp==1){\n    ans++\n  }\n\n  if(ans==2){\n    arr.splice(0,1);\n    arr.splice(memo-1,1);\n    if(/A-Z/.test(arr)==false){\n      ans++\n    }\n    if(ans==3){\n      console.log(\"AC\");\n    }else{\n      console.log(\"WA\");\n    }\n  }else{\n    console.log(\"WA\");\n  }\n \n\n  \n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03351_1", "type": "JavaScript", "obfuscated": "var a0_0x521d40 = a0_0x1fad;\nfunction a0_0x1fad(UJuyiN, key) {\n    var stringArray = a0_0x1753();\n    a0_0x1fad = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1fad(UJuyiN, key);\n}\nfunction Main(input) {\n    var _0x454320 = a0_0x1fad;\n    input = input['split'](/\\s/);\n    input[_0x454320(0x0)](function (e, i, a) {\n        a[i] = Number(a[i]);\n    });\n    var ans = 'No';\n    if (Math[_0x454320(0x1)](input[0x0] - input[0x2]) <= input[0x3]) {\n        ans = 'Yes';\n    }\n    if (Math['abs'](input[0x0] - input[0x1]) <= input[0x3] && Math[_0x454320(0x1)](input[0x1] - input[0x2]) <= input[0x3]) {\n        ans = _0x454320(0x2);\n    }\n    console[_0x454320(0x3)](ans);\n}\nfunction a0_0x1753() {\n    var _0x5be5aa = [\n        'forEach',\n        'abs',\n        'Yes',\n        'log',\n        'utf8'\n    ];\n    a0_0x1753 = function () {\n        return _0x5be5aa;\n    };\n    return a0_0x1753();\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x521d40(0x4)));", "test_cases": [["4 7 9 3", "Yes"], ["100 10 1 2", "No"], ["10 10 10 1", "Yes"], ["1 100 2 10", "Yes"]], "original": "function Main(input){\n\tinput=input.split(/\\s/);\n\tinput.forEach(function(e,i,a){a[i]=Number(a[i]);});\n\t\n\tvar ans=\"No\";\n\tif(Math.abs(input[0]-input[2])<=input[3]){ans=\"Yes\";}\n\tif(Math.abs(input[0]-input[1])<=input[3]&&Math.abs(input[1]-input[2])<=input[3]){ans=\"Yes\";}\n\t\n\tconsole.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03371_1", "type": "JavaScript", "obfuscated": "var a0_0x4238fc = a0_0x2279;\nfunction a0_0x2279(tTwUcT, key) {\n    var stringArray = a0_0x44ac();\n    a0_0x2279 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2279(tTwUcT, key);\n}\nfunction a0_0x44ac() {\n    var _0x574e4f = [\n        'split',\n        'min',\n        'rlTUO',\n        'max',\n        'GQfIW',\n        'log',\n        'getElementById',\n        'input',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x44ac = function () {\n        return _0x574e4f;\n    };\n    return a0_0x44ac();\n}\nfunction Main(input) {\n    var _0x29ccd9 = a0_0x2279;\n    input = input[_0x29ccd9(0x0)]('\\x0a');\n    A = parseInt(input[0x0][_0x29ccd9(0x0)]('\\x20')[0x0]);\n    B = parseInt(input[0x0][_0x29ccd9(0x0)]('\\x20')[0x1]);\n    C = parseInt(input[0x0][_0x29ccd9(0x0)]('\\x20')[0x2]);\n    X = parseInt(input[0x0]['split']('\\x20')[0x3]);\n    Y = parseInt(input[0x0][_0x29ccd9(0x0)]('\\x20')[0x4]);\n    var ans = 0x0;\n    if (C <= (A + B) / 0x2 && C >= Math[_0x29ccd9(0x1)](A, B)) {\n        if (X <= Y) {\n            ans = C * X * 0x2 + B * (Y - X);\n        } else {\n            if (_0x29ccd9(0x2) === _0x29ccd9(0x2)) {\n                ans = C * Y * 0x2 + A * (X - Y);\n            } else {\n                ans = C * Math[_0x29ccd9(0x3)](X, Y) * 0x2;\n            }\n        }\n    } else if (C <= (A + B) / 0x2 && C < Math[_0x29ccd9(0x1)](A, B)) {\n        ans = C * Math[_0x29ccd9(0x3)](X, Y) * 0x2;\n    } else {\n        if (_0x29ccd9(0x4) === _0x29ccd9(0x4)) {\n            ans = X * A + Y * B;\n        } else {\n            ans = X * A + Y * B;\n        }\n    }\n    console[_0x29ccd9(0x5)]('%s', ans);\n}\nfunction debug() {\n    var _0x4ffa7f = a0_0x2279;\n    var input = document[_0x4ffa7f(0x6)](_0x4ffa7f(0x7))['value'];\n    Main(input);\n}\nMain(require('fs')[a0_0x4238fc(0x8)]('/dev/stdin', a0_0x4238fc(0x9)));", "test_cases": [["1500 2000 1600 3 2", "7900"], ["1500 2000 1900 3 2", "8500"], ["1500 2000 500 90000 100000", "100000000"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  A = parseInt(input[0].split(\" \")[0]);\n  B = parseInt(input[0].split(\" \")[1]);\n  C = parseInt(input[0].split(\" \")[2]);\n  X = parseInt(input[0].split(\" \")[3]);\n  Y = parseInt(input[0].split(\" \")[4]);\n  var ans =0;\n  if(C<=(A+B)/2&&C>=Math.min(A,B)){\n    if(X<=Y){\n    ans=C*X*2+B*(Y-X);\n    }else{\n      ans=C*Y*2+A*(X-Y);\n    }\n  }else if(C<=(A+B)/2&&C<Math.min(A,B)){\n    ans=C*Math.max(X,Y)*2;\n  }else{\n    ans=X*A+Y*B;\n\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03415_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x267c3d = a0_0x560d;\nfunction main(arg) {\n    const _0x26a6e7 = a0_0x560d;\n    const letters = arg['split']('\\x0a')['map'](n => n[_0x26a6e7(0x0)](''));\n    console['log'](letters[0x0][0x0] + letters[0x1][0x1] + letters[0x2][0x2]);\n}\nfunction a0_0x560d(zkzifm, key) {\n    const stringArray = a0_0x3479();\n    a0_0x560d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x560d(zkzifm, key);\n}\nfunction a0_0x3479() {\n    const _0x546f02 = [\n        'split',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3479 = function () {\n        return _0x546f02;\n    };\n    return a0_0x3479();\n}\nmain(require('fs')[a0_0x267c3d(0x1)](a0_0x267c3d(0x2), 'utf8'));", "test_cases": [["ant\nobe\nrec", "abc"], ["edu\ncat\nion", "ean"]], "original": "\"use strict\";\n\nfunction main(arg) {\n    const letters = arg.split(\"\\n\").map(n=>n.split(\"\"));\n    console.log(letters[0][0] + letters[1][1] + letters[2][2]);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03523_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5cd168 = a0_0x24f6;\nlet input = require('fs')[a0_0x5cd168(0x0)]('/dev/stdin', a0_0x5cd168(0x1));\ninput = input[a0_0x5cd168(0x2)]();\nlet ans = a0_0x5cd168(0x3);\nif (input[0x0] == 'A') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nif (input[0x0] == 'K') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nif (input[0x0] == 'I') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'H') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'B') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'R') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nfunction a0_0x24f6(sTkjfM, key) {\n    const stringArray = a0_0x3712();\n    a0_0x24f6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x24f6(sTkjfM, key);\n}\nif (input[0x0] == 'A') {\n    input = input[a0_0x5cd168(0x4)](0x1);\n}\nfunction a0_0x3712() {\n    const _0xe5c5d5 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'YES',\n        'slice',\n        'log'\n    ];\n    a0_0x3712 = function () {\n        return _0xe5c5d5;\n    };\n    return a0_0x3712();\n}\ninput == '' ? ans = a0_0x5cd168(0x3) : ans = 'NO';\nconsole[a0_0x5cd168(0x5)](ans);", "test_cases": [["KIHBR", "YES"], ["AKIBAHARA", "NO"], ["AAKIAHBAARA", "NO"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\ninput = input.trim();\nlet ans = \"YES\";\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"K\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"I\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"H\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"B\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"R\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\ninput == \"\" ? ans = \"YES\" : ans = \"NO\";\n\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03543_1", "type": "JavaScript", "obfuscated": "var a0_0xd559ab = a0_0x2351;\nfunction Main(input) {\n    var _0x472366 = a0_0x2351;\n    input = input[_0x472366(0x0)]('\\x0a');\n    var n = input[0x0];\n    var s = 'No';\n    if (n[0x1] == n[0x2]) {\n        if (n[0x0] == n[0x1] || n[0x2] == n[0x3])\n            s = 'Yes';\n    }\n    console[_0x472366(0x1)]('%s', s);\n}\nfunction a0_0x4f90() {\n    var _0x5f00c8 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4f90 = function () {\n        return _0x5f00c8;\n    };\n    return a0_0x4f90();\n}\nfunction a0_0x2351(JpxcGC, key) {\n    var stringArray = a0_0x4f90();\n    a0_0x2351 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2351(JpxcGC, key);\n}\nMain(require('fs')[a0_0xd559ab(0x2)](a0_0xd559ab(0x3), 'utf8'));", "test_cases": [["1118", "Yes"], ["7777", "Yes"], ["1234", "No"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar n = input[0];\n\tvar s = \"No\";\n\tif(n[1]==n[2]){\n\t    if(n[0]==n[1]||n[2]==n[3])s = \"Yes\";\n\t}\n\tconsole.log('%s',s);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03555_1", "type": "JavaScript", "obfuscated": "var a0_0x23d6bf = a0_0x5960;\nfunction a0_0x5960(OaPKJm, key) {\n    var stringArray = a0_0xa1d3();\n    a0_0x5960 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5960(OaPKJm, key);\n}\nfunction a0_0xa1d3() {\n    var _0x4bdc1c = [\n        'trim',\n        'split',\n        'log',\n        'YES',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0xa1d3 = function () {\n        return _0x4bdc1c;\n    };\n    return a0_0xa1d3();\n}\nfunction Main(input) {\n    var _0x25a425 = a0_0x5960;\n    input = input[_0x25a425(0x0)]();\n    input = input['split']('\\x0a');\n    var A = input[0x0][_0x25a425(0x1)]('');\n    var B = input[0x1][_0x25a425(0x1)]('');\n    if (A[0x0] == B[0x2] && A[0x1] == B[0x1] && A[0x2] == B[0x0])\n        console[_0x25a425(0x2)](_0x25a425(0x3));\n    else\n        console[_0x25a425(0x2)]('NO');\n}\nMain(require('fs')[a0_0x23d6bf(0x4)]('/dev/stdin', a0_0x23d6bf(0x5)));", "test_cases": [["pot\ntop", "YES"], ["tab\nbet", "NO"], ["eye\neel", "NO"]], "original": "function Main(input) {\n  input = input.trim()\n  input = input.split(\"\\n\");\n  var A = input[0].split(\"\");\n  var B = input[1].split(\"\");\n  if(A[0]==B[2]&&A[1]==B[1]&&A[2]==B[0]) console.log(\"YES\")\n  else console.log(\"NO\")\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03556_1", "type": "JavaScript", "obfuscated": "function a0_0x2fc3(XhiblM, key) {\n    var stringArray = a0_0x2491();\n    a0_0x2fc3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fc3(XhiblM, key);\n}\nvar a0_0x3322fa = a0_0x2fc3;\nfunction Main(input) {\n    var _0x1a3579 = a0_0x2fc3;\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0]);\n    var ans = Math[_0x1a3579(0x0)](Math[_0x1a3579(0x1)](Math['sqrt'](n)), 0x2);\n    console['log']('%s', ans);\n}\nfunction a0_0x2491() {\n    var _0x433d6e = [\n        'pow',\n        'floor',\n        'utf8'\n    ];\n    a0_0x2491 = function () {\n        return _0x433d6e;\n    };\n    return a0_0x2491();\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x3322fa(0x2)));", "test_cases": [["10", "9"], ["81", "81"], ["271828182", "271821169"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  var ans =Math.pow(Math.floor(Math.sqrt(n)),2);\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03644_1", "type": "JavaScript", "obfuscated": "var a0_0x504367 = a0_0x1ab5;\nfunction a0_0x232c() {\n    var _0x4497e9 = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x232c = function () {\n        return _0x4497e9;\n    };\n    return a0_0x232c();\n}\nfunction a0_0x1ab5(zKGafN, key) {\n    var stringArray = a0_0x232c();\n    a0_0x1ab5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ab5(zKGafN, key);\n}\nfunction main(input) {\n    var _0x91468f = a0_0x1ab5;\n    const N = input;\n    var ans = 0x1;\n    var cnt = 0x0;\n    var maxCnt = 0x0;\n    for (var i = 0x1; i <= N; i++) {\n        cnt = 0x0;\n        var tmp = i;\n        while (!![]) {\n            if (tmp % 0x2 === 0x0) {\n                cnt = cnt + 0x1;\n                tmp = tmp / 0x2;\n            } else {\n                break;\n            }\n        }\n        if (maxCnt < cnt) {\n            maxCnt = cnt;\n            ans = i;\n        }\n    }\n    console[_0x91468f(0x0)](ans);\n}\nmain(require('fs')['readFileSync'](a0_0x504367(0x1), a0_0x504367(0x2)));", "test_cases": [["7", "4"], ["32", "32"], ["1", "1"], ["100", "64"]], "original": "function main (input) {\n    const N = input;\n    var ans = 1;\n    var cnt = 0;\n    var maxCnt = 0;\n\n    for (var i = 1;i <= N;i++){\n        cnt = 0;\n        var tmp = i;\n        while (true) {\n            if (tmp%2 === 0) {\n                cnt = cnt + 1;\n                tmp = tmp/2;\n            } else {\n                break;\n            }\n        }\n        if (maxCnt < cnt) {\n            maxCnt = cnt;\n            ans = i;\n        }\n    }\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03671_1", "type": "JavaScript", "obfuscated": "const a0_0x3a0da1 = a0_0x9115;\nfunction a0_0x117e() {\n    const _0x35c8d6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x117e = function () {\n        return _0x35c8d6;\n    };\n    return a0_0x117e();\n}\nlet [a, b, c] = require('fs')[a0_0x3a0da1(0x0)](a0_0x3a0da1(0x1), a0_0x3a0da1(0x2))[a0_0x3a0da1(0x3)]('\\x20')[a0_0x3a0da1(0x4)](Number);\nfunction a0_0x9115(UXEbEj, key) {\n    const stringArray = a0_0x117e();\n    a0_0x9115 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x9115(UXEbEj, key);\n}\nconsole[a0_0x3a0da1(0x5)](a + b + c - Math['max'](...[\n    a,\n    b,\n    c\n]));", "test_cases": [["700 600 780", "1300"], ["10000 10000 10000", "20000"]], "original": "let [a, b, c] = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\" \").map(Number);\nconsole.log(a + b + c - Math.max(...[a, b, c]));", "language": "JavaScript"}
{"filename": "p03705_1", "type": "JavaScript", "obfuscated": "function a0_0x2b2a(JEoWci, key) {\n    var stringArray = a0_0x5557();\n    a0_0x2b2a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b2a(JEoWci, key);\n}\nvar a0_0x9b6d8d = a0_0x2b2a;\nfunction a0_0x5557() {\n    var _0x1640a4 = [\n        'split',\n        'log',\n        'max',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5557 = function () {\n        return _0x1640a4;\n    };\n    return a0_0x5557();\n}\nmain = function (input) {\n    var _0x557778 = a0_0x2b2a;\n    var data = input[_0x557778(0x0)]('\\x20');\n    var n = parseInt(data[0x0]);\n    var a = parseInt(data[0x1]);\n    var b = parseInt(data[0x2]);\n    var ans = (n - 0x2) * (b - a) + 0x1;\n    console[_0x557778(0x1)](Math[_0x557778(0x2)](ans, 0x0));\n};\nmain(require('fs')[a0_0x9b6d8d(0x3)](a0_0x9b6d8d(0x4), a0_0x9b6d8d(0x5)));", "test_cases": [["4 4 6", "5"], ["5 4 3", "0"], ["1 7 10", "0"], ["1 3 3", "1"]], "original": "main = function(input) {\n    var data = input.split(' ');\n    var n = parseInt(data[0]);\n    var a = parseInt(data[1]);\n    var b = parseInt(data[2]);\n    \n    var ans = (n - 2) * (b - a) + 1;\n    \n    \n    console.log(Math.max(ans, 0));\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03711_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2b70c9 = a0_0x3b31;\nfunction a0_0x3a52() {\n    const _0x3121ec = [\n        'split',\n        'map',\n        'includes',\n        'Yes',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3a52 = function () {\n        return _0x3121ec;\n    };\n    return a0_0x3a52();\n}\nfunction a0_0x3b31(byxZIS, key) {\n    const stringArray = a0_0x3a52();\n    a0_0x3b31 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b31(byxZIS, key);\n}\nconst main = input => {\n    const _0x2d0f85 = a0_0x3b31;\n    const args = input[_0x2d0f85(0x0)]('\\x0a')[_0x2d0f85(0x1)](arg => arg[_0x2d0f85(0x0)]('\\x20'));\n    const x = parseInt(args[0x0][0x0], 0xa);\n    const y = parseInt(args[0x0][0x1], 0xa);\n    const group1 = [\n        0x1,\n        0x3,\n        0x5,\n        0x7,\n        0x8,\n        0xa,\n        0xc\n    ];\n    const group2 = [\n        0x4,\n        0x6,\n        0x9,\n        0xb\n    ];\n    if (group1['includes'](x) && group1[_0x2d0f85(0x2)](y))\n        console['log'](_0x2d0f85(0x3));\n    else if (group2[_0x2d0f85(0x2)](x) && group2[_0x2d0f85(0x2)](y))\n        console[_0x2d0f85(0x4)](_0x2d0f85(0x3));\n    else\n        console[_0x2d0f85(0x4)]('No');\n};\nmain(require('fs')[a0_0x2b70c9(0x5)]('/dev/stdin', a0_0x2b70c9(0x6)));", "test_cases": [["1 3", "Yes"], ["2 4", "No"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst x = parseInt(args[0][0], 10)\n\tconst y = parseInt(args[0][1], 10)\n\tconst group1 = [1, 3, 5, 7, 8, 10, 12]\n\tconst group2 = [4, 6, 9, 11]\n\n\tif (group1.includes(x) && group1.includes(y)) console.log('Yes')\n\telse if (group2.includes(x) && group2.includes(y)) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03844_1", "type": "JavaScript", "obfuscated": "var a0_0x36c5b9 = a0_0x2292;\nprocess['stdin'][a0_0x36c5b9(0x0)]();\nfunction a0_0x2292(IoOCaB, key) {\n    var stringArray = a0_0x618e();\n    a0_0x2292 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2292(IoOCaB, key);\n}\nprocess[a0_0x36c5b9(0x1)][a0_0x36c5b9(0x2)](a0_0x36c5b9(0x3));\nvar input_stdin = '';\nfunction a0_0x618e() {\n    var _0x87e8e2 = [\n        'resume',\n        'stdin',\n        'setEncoding',\n        'ascii',\n        'data',\n        'SIGINT',\n        'split',\n        'end',\n        'log'\n    ];\n    a0_0x618e = function () {\n        return _0x87e8e2;\n    };\n    return a0_0x618e();\n}\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess[a0_0x36c5b9(0x1)]['on'](a0_0x36c5b9(0x4), function (data) {\n    input_stdin += data;\n});\nprocess['on'](a0_0x36c5b9(0x5), function () {\n    var _0x480b3f = a0_0x2292;\n    input_stdin_array = input_stdin[_0x480b3f(0x6)]('\\x0a');\n    main();\n    process['exit']();\n});\nprocess['stdin']['on'](a0_0x36c5b9(0x7), function () {\n    var _0x5d9b99 = a0_0x2292;\n    input_stdin_array = input_stdin[_0x5d9b99(0x6)]('\\x0a');\n    main();\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var _0x5f5da1 = a0_0x2292;\n    var s = readLine()[_0x5f5da1(0x6)]('\\x20');\n    var a = parseInt(s[0x0]);\n    var op = s[0x1];\n    var b = parseInt(s[0x2]);\n    var c;\n    if (op == '+') {\n        c = a + b;\n    } else {\n        c = a - b;\n    }\n    console[_0x5f5da1(0x8)](c);\n}", "test_cases": [["1 + 2", "3"], ["5 - 7", "-2"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.on('SIGINT', function(){\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();\n    process.exit();\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\nfunction main() {\n\tvar s = readLine().split(\" \");\n\tvar a = parseInt(s[0]);\n\tvar op = s[1];\n\tvar b = parseInt(s[2]);\n\tvar c;\n\t\n\tif (op == \"+\"){ c = a+b;}\n\telse {c = a-b;}\n\t\n\tconsole.log(c);\n}\n", "language": "JavaScript"}
{"filename": "p03994_1", "type": "JavaScript", "obfuscated": "var a0_0x5cbb00 = a0_0x129e;\nfunction Main(input) {\n    var _0x5b3ab4 = a0_0x129e;\n    var s, K, ref;\n    ref = input[_0x5b3ab4(0x0)]('\\x0a'), s = ref[0x0], K = parseInt(ref[0x1]);\n    console[_0x5b3ab4(0x1)](Array[_0x5b3ab4(0x2)](s)[_0x5b3ab4(0x3)]((v, i, arr) => {\n        var _0x40b2dd = a0_0x129e;\n        var code = v[_0x40b2dd(0x4)]();\n        if (i === arr[_0x40b2dd(0x5)] - 0x1) {\n            code += K % 0x1a;\n            code -= code > 0x7a ? 0x1a : 0x0;\n            return String[_0x40b2dd(0x6)](code);\n        } else {\n            if (v === 'a')\n                return v;\n            return 0x7b - code <= K ? (K -= 0x7b - code, 'a') : v;\n        }\n    })['join'](''));\n}\nfunction a0_0x3e9b() {\n    var _0x3e3956 = [\n        'split',\n        'log',\n        'from',\n        'map',\n        'charCodeAt',\n        'length',\n        'fromCharCode',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3e9b = function () {\n        return _0x3e3956;\n    };\n    return a0_0x3e9b();\n}\nfunction a0_0x129e(BUGvVF, key) {\n    var stringArray = a0_0x3e9b();\n    a0_0x129e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x129e(BUGvVF, key);\n}\nMain(require('fs')[a0_0x5cbb00(0x7)]('/dev/stdin', a0_0x5cbb00(0x8)));", "test_cases": [["xyz\n4", "aya"], ["a\n25", "z"], ["codefestival\n100", "aaaafeaaivap"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var s, K, ref;\n  ref = input.split(\"\\n\"), s = ref[0], K = parseInt(ref[1]);\n  console.log(Array.from(s).map((v, i, arr)=> {\n    var code = v.charCodeAt();\n    if(i === arr.length - 1) {\n      code += K%26;\n      code -= code >122 ? 26 : 0;\n      return String.fromCharCode(code);\n    } else {\n      if(v === \"a\") return v;\n      return 123 - code <= K ? ((K -= 123 - code), \"a\") : v;\n    }\n  }).join(\"\"));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04048_1", "type": "JavaScript", "obfuscated": "function a0_0x36da(zsYeir, key) {\n    var stringArray = a0_0x28ea();\n    a0_0x36da = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x36da(zsYeir, key);\n}\nvar a0_0x3e3cf1 = a0_0x36da;\nfunction a0_0x28ea() {\n    var _0x3576ad = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x28ea = function () {\n        return _0x3576ad;\n    };\n    return a0_0x28ea();\n}\nfunction Main(data) {\n    var _0x59aaa2 = a0_0x36da;\n    data = data[_0x59aaa2(0x0)]('\\x20');\n    data[0x0] = Number(data[0x0]);\n    data[0x1] = Number(data[0x1]);\n    var a = data[0x1] + (data[0x0] - data[0x1]) + (data[0x0] - (data[0x0] - data[0x1])) * 0x2 + (data[0x0] - data[0x1] - (data[0x0] - (data[0x0] - data[0x1]))) * 0x3;\n    console[_0x59aaa2(0x1)](a);\n}\nMain(require('fs')[a0_0x3e3cf1(0x2)](a0_0x3e3cf1(0x3), a0_0x3e3cf1(0x4)));", "test_cases": [["5 2", "12"]], "original": "function Main (data) {\n  data = data.split(\" \");\n  data[0] = Number(data[0]);\n  data[1] = Number(data[1]);\n  var a = data[1] + (data[0] - data[1])\n  + ((data[0] - (data[0] - data[1])) * 2)\n  + (data[0] - data[1] - (data[0] - (data[0] - data[1]))) * 3\n  console.log(a);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02645_1", "type": "JavaScript", "obfuscated": "const a0_0x5a3182 = a0_0x5731;\nfunction main(lines) {\n    const _0x59a2d3 = a0_0x5731;\n    const input = lines['split']('\\x20');\n    console['log'](input[_0x59a2d3(0x0)]()['slice'](0x0, 0x3));\n}\nfunction a0_0x5731(xutqZt, key) {\n    const stringArray = a0_0x5dd5();\n    a0_0x5731 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5731(xutqZt, key);\n}\nfunction a0_0x5dd5() {\n    const _0x25c7e9 = [\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5dd5 = function () {\n        return _0x25c7e9;\n    };\n    return a0_0x5dd5();\n}\nmain(require('fs')[a0_0x5a3182(0x1)](a0_0x5a3182(0x2), a0_0x5a3182(0x3)));", "test_cases": [["takahashi", "tak"], ["naohiro", "nao"]], "original": "function main(lines) {\n  const input = lines.split(' ')\n  console.log(input.join().slice(0,3))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02700_1", "type": "JavaScript", "obfuscated": "function a0_0x245e() {\n    const _0x44be5e = [\n        'split',\n        'log',\n        'Yes',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x245e = function () {\n        return _0x44be5e;\n    };\n    return a0_0x245e();\n}\nconst a0_0xb9b9d2 = a0_0x1689;\nfunction a0_0x1689(GZSsef, key) {\n    const stringArray = a0_0x245e();\n    a0_0x1689 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1689(GZSsef, key);\n}\nfunction Main(input) {\n    const _0x589452 = a0_0x1689;\n    const array = input[_0x589452(0x0)]('\\x20');\n    let takahashi = Number(array[0x0]);\n    let aoki = Number(array[0x2]);\n    let count = 0x0;\n    let bool = !![];\n    while (bool) {\n        if (count % 0x2 === 0x0) {\n            aoki = aoki - Number(array[0x1]);\n            if (aoki <= 0x0) {\n                console[_0x589452(0x1)](_0x589452(0x2));\n                bool = ![];\n            }\n        } else {\n            takahashi = takahashi - Number(array[0x3]);\n            if (takahashi <= 0x0) {\n                console[_0x589452(0x1)]('No');\n                bool = ![];\n            }\n        }\n        count++;\n    }\n}\nMain(require('fs')['readFileSync'](a0_0xb9b9d2(0x3), a0_0xb9b9d2(0x4)));", "test_cases": [["10 9 10 10", "No"], ["46 4 40 5", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  const array = input.split(' ');\n  let takahashi = Number(array[0]);\n  let aoki = Number(array[2]);\n  \n  let count = 0;\n  let bool = true;\n  while(bool) {\n    if(count%2 === 0){\n      aoki = aoki - Number(array[1]);\n      if(aoki <= 0){\n        console.log('Yes');\n        bool = false;\n      }\n    } else {\n      takahashi = takahashi - Number(array[3]);\n      if(takahashi <= 0){\n        console.log('No');\n        bool = false;\n      }\n    }\n    count++;\n  }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02706_1", "type": "JavaScript", "obfuscated": "var a0_0x53f730 = a0_0x3669;\nfunction a0_0x3669(RpFowp, key) {\n    var stringArray = a0_0x2e5c();\n    a0_0x3669 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3669(RpFowp, key);\n}\nfunction a0_0x2e5c() {\n    var _0x301648 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'trim'\n    ];\n    a0_0x2e5c = function () {\n        return _0x301648;\n    };\n    return a0_0x2e5c();\n}\nconst main = inputs => {\n    var _0x3d43a2 = a0_0x3669;\n    var array = inputs[0x0][_0x3d43a2(0x0)]('\\x20');\n    var array2 = inputs[0x1][_0x3d43a2(0x0)]('\\x20');\n    var N = array[0x0] - 0x0;\n    var M = array[0x1] - 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; i < M; i++) {\n        sum = sum + Number(array2[i]);\n    }\n    console[_0x3d43a2(0x1)](N - sum < 0x0 ? -0x1 : N - sum);\n};\nmain(require('fs')[a0_0x53f730(0x2)](a0_0x53f730(0x3), a0_0x53f730(0x4))[a0_0x53f730(0x5)]()['split']('\\x0a'));", "test_cases": [["41 2\n5 6", "30"], ["10 2\n5 6", "-1"], ["11 2\n5 6", "0"], ["314 15\n9 26 5 35 8 9 79 3 23 8 46 2 6 43 3", "9"]], "original": "const main = (inputs) => {\n  var array = inputs[0].split(\" \");\n  var array2 = inputs[1].split(\" \");\n  var N = array[0] - 0;\n  var M = array[1] - 0;\n  var sum = 0;\n\n  for (var i = 0; i < M; i++) {\n    sum = sum + Number(array2[i]);\n  }\n\n  console.log(N - sum < 0 ? -1 : N - sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02729_1", "type": "JavaScript", "obfuscated": "function a0_0x3f26(LHdpnG, key) {\n    var stringArray = a0_0xd6ed();\n    a0_0x3f26 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f26(LHdpnG, key);\n}\nfunction a0_0xd6ed() {\n    var _0x2aac34 = [\n        'map',\n        'log',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split'\n    ];\n    a0_0xd6ed = function () {\n        return _0x2aac34;\n    };\n    return a0_0xd6ed();\n}\nvar a0_0x5bb5f4 = a0_0x3f26;\nfunction Main(input) {\n    var _0xbf4c20 = a0_0x3f26;\n    var a = input[0x0]['split']('\\x20')[_0xbf4c20(0x0)](v => v - 0x0);\n    if (a[0x0] + a[0x1] == 0x0)\n        console[_0xbf4c20(0x1)](0x0);\n    else\n        console['log'](~~(a[0x0] * (a[0x0] - 0x1) / 0x2 + a[0x1] * (a[0x1] - 0x1) / 0x2));\n}\nMain(require('fs')['readFileSync'](a0_0x5bb5f4(0x2), a0_0x5bb5f4(0x3))[a0_0x5bb5f4(0x4)]()[a0_0x5bb5f4(0x5)]('\\x0a'));", "test_cases": [["2 1", "1"], ["4 3", "9"], ["1 1", "0"], ["13 3", "81"], ["0 3", "3"]], "original": "function Main(input) {\n    var a = input[0].split(\" \").map(v=>v-0);\n    if(a[0]+a[1] == 0) console.log(0);\n    else console.log(~~(a[0]*(a[0]-1)/2+(a[1]*(a[1]-1)/2)));\n}\n\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02741_1", "type": "JavaScript", "obfuscated": "var a0_0x32ed4e = a0_0x37c6;\nfunction a0_0x37c6(MUhgwj, key) {\n    var stringArray = a0_0x4fff();\n    a0_0x37c6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x37c6(MUhgwj, key);\n}\nfunction Main(input) {\n    var _0x32f9d5 = a0_0x37c6;\n    var list = [\n        0x1,\n        0x1,\n        0x1,\n        0x2,\n        0x1,\n        0x2,\n        0x1,\n        0x5,\n        0x2,\n        0x2,\n        0x1,\n        0x5,\n        0x1,\n        0x2,\n        0x1,\n        0xe,\n        0x1,\n        0x5,\n        0x1,\n        0x5,\n        0x2,\n        0x2,\n        0x1,\n        0xf,\n        0x2,\n        0x2,\n        0x5,\n        0x4,\n        0x1,\n        0x4,\n        0x1,\n        0x33\n    ];\n    input = parseInt(input);\n    if (0x1 <= input && input <= 0x20) {\n        console[_0x32f9d5(0x0)](list[input - 0x1]);\n    } else {\n        console[_0x32f9d5(0x0)](0x0);\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x32ed4e(0x1), a0_0x32ed4e(0x2)));\nfunction a0_0x4fff() {\n    var _0x4c97be = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4fff = function () {\n        return _0x4c97be;\n    };\n    return a0_0x4fff();\n}", "test_cases": [["6", "2"], ["27", "5"]], "original": "function Main(input) {\nvar list = [1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51];\n  input = parseInt(input);\n  if(1 <= input && input <= 32)\n  {\n      console.log(list[input - 1]);\n  } else {\n  console.log(0);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02771_1", "type": "JavaScript", "obfuscated": "function a0_0x274c() {\n    var _0x2ad51f = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x274c = function () {\n        return _0x2ad51f;\n    };\n    return a0_0x274c();\n}\nvar a0_0xfd3180 = a0_0x2174;\nfunction a0_0x2174(GQzZSC, key) {\n    var stringArray = a0_0x274c();\n    a0_0x2174 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2174(GQzZSC, key);\n}\nconst Main = input => {\n    var _0x49e052 = a0_0x2174;\n    const tmp = input['split']('\\x20');\n    var a = parseInt(tmp[0x0]);\n    var b = parseInt(tmp[0x1]);\n    var c = parseInt(tmp[0x2]);\n    if (a === b && b !== c || b === c && c !== a || c === a && b !== c) {\n        console[_0x49e052(0x0)]('Yes');\n    } else {\n        console[_0x49e052(0x0)]('No');\n    }\n};\nMain(require('fs')[a0_0xfd3180(0x1)](a0_0xfd3180(0x2), a0_0xfd3180(0x3)));", "test_cases": [["5 7 5", "Yes"], ["4 4 4", "No"], ["4 9 6", "No"], ["3 3 4", "Yes"]], "original": "const Main = (input) => {\n  const tmp = input.split(' ')\n  var a = parseInt(tmp[0])\n  var b = parseInt(tmp[1])\n  var c = parseInt(tmp[2])\n  if (((a === b) && (b !== c)) || ((b === c) && (c !== a)) || ((c === a) && (b !== c))) {\n    console.log('Yes')\n  } else {\n    console.log('No')\n  }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02786_1", "type": "JavaScript", "obfuscated": "var a0_0x4f9720 = a0_0x2664;\nfunction a0_0x1256() {\n    var _0x2b6791 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log',\n        'pow'\n    ];\n    a0_0x1256 = function () {\n        return _0x2b6791;\n    };\n    return a0_0x1256();\n}\ninp = require('fs')[a0_0x4f9720(0x0)]('/dev/stdin', a0_0x4f9720(0x1))[a0_0x4f9720(0x2)]()[a0_0x4f9720(0x3)]('\\x0a');\nH = inp[a0_0x4f9720(0x4)]() * 0x1;\nfunction a0_0x2664(BmqAPZ, key) {\n    var stringArray = a0_0x1256();\n    a0_0x2664 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2664(BmqAPZ, key);\n}\nc = 0x1;\nh = 0x2;\nwhile (H >= h) {\n    h *= 0x2;\n    c++;\n}\nconsole[a0_0x4f9720(0x5)](Math[a0_0x4f9720(0x6)](0x2, c) - 0x1);", "test_cases": [["2", "3"], ["4", "7"], ["1000000000000", "1099511627775"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nH = inp.shift() * 1\nc=1\nh=2\nwhile(H>=h) {\n    h *= 2\n    c++\n}\nconsole.log(Math.pow(2,c)-1)\n\n", "language": "JavaScript"}
{"filename": "p02880_1", "type": "JavaScript", "obfuscated": "const a0_0x2c751d = a0_0x3c47;\nfunction Main(input) {\n    const _0x2dff8e = a0_0x3c47;\n    input = input['split']('\\x20');\n    const num = parseInt(input[0x0], 0xa);\n    if (num > 0x51) {\n        console[_0x2dff8e(0x0)]('No');\n        return;\n    }\n    if (num % 0x2 == 0x0 && num / 0x2 < 0xa || num % 0x3 == 0x0 && num / 0x3 < 0xa || num % 0x4 == 0x0 && num / 0x4 < 0xa || num % 0x5 == 0x0 && num / 0x5 < 0xa || num % 0x6 == 0x0 && num / 0x6 < 0xa || num % 0x7 == 0x0 && num / 0x7 < 0xa || num % 0x8 == 0x0 && num / 0x8 < 0xa || num % 0x9 == 0x0 && num / 0x9 < 0xa) {\n        console[_0x2dff8e(0x0)](_0x2dff8e(0x1));\n    } else {\n        console[_0x2dff8e(0x0)]('No');\n    }\n}\nfunction a0_0x3c47(YbIfcI, key) {\n    const stringArray = a0_0x3e29();\n    a0_0x3c47 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c47(YbIfcI, key);\n}\nMain(require('fs')[a0_0x2c751d(0x2)](a0_0x2c751d(0x3), a0_0x2c751d(0x4)));\nfunction a0_0x3e29() {\n    const _0x4acecb = [\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3e29 = function () {\n        return _0x4acecb;\n    };\n    return a0_0x3e29();\n}", "test_cases": [["10", "Yes"], ["50", "No"], ["81", "Yes"]], "original": "function Main(input) {\n\t\tinput = input.split(\" \");\n\t\tconst num = parseInt(input[0], 10);\n\t\tif (num > 81) {\n\t\t\t\tconsole.log('No');\n\t\t\t\treturn;\n\t\t}\n\nif((num%2==0 && num/2<10) ||(num%3==0 && num/3<10) ||(num%4==0 && num/4<10) ||(num%5==0 && num/5<10) ||(num%6==0 && num/6<10) ||(num%7==0 && num/7<10) ||(num%8==0 && num/8<10) ||(num%9==0 && num/9<10)){\nconsole.log('Yes');\n}else {\nconsole.log('No');\n}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02954_1", "type": "JavaScript", "obfuscated": "function a0_0x1e90(fvICqD, key) {\n    var stringArray = a0_0x4e7f();\n    a0_0x1e90 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e90(fvICqD, key);\n}\nvar a0_0x461f82 = a0_0x1e90;\nfunction a0_0x4e7f() {\n    var _0x15986b = [\n        'split',\n        'length',\n        'push',\n        'bEsAb',\n        'nAyWf',\n        'fJiYd',\n        'YxVEH',\n        'AkyfG',\n        'slice',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4e7f = function () {\n        return _0x15986b;\n    };\n    return a0_0x4e7f();\n}\nfunction Main(input) {\n    var _0x27bda4 = a0_0x1e90;\n    var idata = input[_0x27bda4(0x0)]('');\n    var ninzuu = [];\n    var nextninzuutemp = [];\n    for (let i = 0x0; i < idata[_0x27bda4(0x1)]; i++) {\n        ninzuu[_0x27bda4(0x2)](0x1);\n        nextninzuutemp[_0x27bda4(0x2)](0x0);\n    }\n    var nextninzuu = nextninzuutemp['slice']();\n    for (let turn = 0x0; turn < ninzuu['length'] + ninzuu[_0x27bda4(0x1)] % 0x2; turn++) {\n        if (_0x27bda4(0x3) === _0x27bda4(0x3)) {\n            for (let j = 0x0; j < ninzuu[_0x27bda4(0x1)]; j++) {\n                if ('IkAPg' === _0x27bda4(0x4)) {\n                    if (idata[j] == 'R') {\n                        nextninzuu[j + 0x1] += ninzuu[j];\n                    } else if (idata[j] == 'L') {\n                        nextninzuu[j - 0x1] += ninzuu[j];\n                    }\n                } else {\n                    if (idata[j] == 'R') {\n                        if (_0x27bda4(0x5) !== _0x27bda4(0x6)) {\n                            nextninzuu[j + 0x1] += ninzuu[j];\n                        } else {\n                            ninzuu['push'](0x1);\n                            nextninzuutemp[_0x27bda4(0x2)](0x0);\n                        }\n                    } else if (idata[j] == 'L') {\n                        if (_0x27bda4(0x7) === _0x27bda4(0x7)) {\n                            nextninzuu[j - 0x1] += ninzuu[j];\n                        } else {\n                            for (let j = 0x0; j < ninzuu[_0x27bda4(0x1)]; j++) {\n                                if (idata[j] == 'R') {\n                                    nextninzuu[j + 0x1] += ninzuu[j];\n                                } else if (idata[j] == 'L') {\n                                    nextninzuu[j - 0x1] += ninzuu[j];\n                                }\n                            }\n                            ninzuu = nextninzuu['slice']();\n                            nextninzuu = nextninzuutemp[_0x27bda4(0x8)]();\n                        }\n                    }\n                }\n            }\n            ninzuu = nextninzuu[_0x27bda4(0x8)]();\n            nextninzuu = nextninzuutemp[_0x27bda4(0x8)]();\n        } else {\n            nextninzuu[j + 0x1] += ninzuu[j];\n        }\n    }\n    console[_0x27bda4(0x9)](ninzuu[_0x27bda4(0xa)]('\\x20'));\n}\nMain(require('fs')[a0_0x461f82(0xb)](a0_0x461f82(0xc), a0_0x461f82(0xd)));", "test_cases": [["RRLRL", "0 1 2 1 1"], ["RRLLLLRLRRLL", "0 3 3 0 0 0 1 1 0 2 2 0"], ["RRRLLRLLRRRLLLLL", "0 0 3 2 0 2 1 0 0 0 4 4 0 0 0 0"]], "original": "function Main(input) {\n\tvar idata = input.split(\"\");\n\tvar ninzuu = [];\n\tvar nextninzuutemp = [];\n\t//人数の配列を生成\n\tfor( let i=0; i<idata.length ; i++ ){\n\t    ninzuu.push(1);\n\t    nextninzuutemp.push(0);\n\t}\n\tvar nextninzuu = nextninzuutemp.slice();\n\t//一回ごとに操作が行われる\n\tfor( let turn=0; turn<ninzuu.length+ninzuu.length%2 ; turn++ ){\n\t\tfor( let j=0; j<ninzuu.length ; j++ ){\n\t\t\t//着目しているマスに右に行けと書いてあった場合\n\t\t\tif(idata[j]==\"R\"){\n\t\t\t\tnextninzuu[j+1]+=ninzuu[j];\n\t\t\t}else if(idata[j]==\"L\"){\n\t\t\t    nextninzuu[j-1]+=ninzuu[j];\n\t\t\t}\n\t\t}\n\t\tninzuu = nextninzuu.slice();\n\t\tnextninzuu = nextninzuutemp.slice();\n\t}\n\tconsole.log(ninzuu.join(\" \"));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03071_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2b13() {\n    const _0x1955ae = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2b13 = function () {\n        return _0x1955ae;\n    };\n    return a0_0x2b13();\n}\nconst a0_0x316749 = a0_0x22f3;\nfunction Main(input) {\n    const _0x3dc5a9 = a0_0x22f3;\n    input = input[_0x3dc5a9(0x0)]('\\x0a')[0x0];\n    const numbers = input[_0x3dc5a9(0x0)]('\\x20')[_0x3dc5a9(0x1)](i => {\n        return parseInt(i, 0xa);\n    });\n    const a = numbers[0x0];\n    const b = numbers[0x1];\n    let result = 0x0;\n    if (a > b) {\n        result = 0x2 * a - 0x1;\n    } else if (b > a) {\n        result = 0x2 * b - 0x1;\n    } else {\n        result = 0x2 * a;\n    }\n    console[_0x3dc5a9(0x2)](result);\n}\nfunction a0_0x22f3(cmcjuL, key) {\n    const stringArray = a0_0x2b13();\n    a0_0x22f3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x22f3(cmcjuL, key);\n}\nMain(require('fs')[a0_0x316749(0x3)]('/dev/stdin', a0_0x316749(0x4)));", "test_cases": [["5 3", "9"], ["3 4", "7"], ["6 6", "12"]], "original": "'use strict'\nfunction Main(input) {\n    input = input.split(\"\\n\")[0]\n    const numbers = input.split(' ').map(i => {\n      return parseInt(i, 10)\n    })\n\n    const a = numbers[0]\n    const b = numbers[1]\n    let result = 0\n\n    if(a > b) {\n      result = 2*a - 1\n    } else if (b > a) {\n      result = 2*b - 1  \n    } else {\n      result = 2 * a\n    }\n    \n    console.log(result)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03074_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2ab2bc = a0_0x19fe;\nfunction a0_0x3ea7() {\n    const _0x15e9a0 = [\n        'shift',\n        'split',\n        'map',\n        'push',\n        'kind',\n        'len',\n        'undefined',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3ea7 = function () {\n        return _0x15e9a0;\n    };\n    return a0_0x3ea7();\n}\nfunction a0_0x19fe(dixQVW, key) {\n    const stringArray = a0_0x3ea7();\n    a0_0x19fe = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19fe(dixQVW, key);\n}\nfunction Main(input) {\n    const _0x2079ec = a0_0x19fe;\n    let lines = input['split']('\\x0a');\n    let nk = lines[_0x2079ec(0x0)]()[_0x2079ec(0x1)](/\\s/)['map'](v => v - 0x0);\n    let N = nk[0x0], K = nk[0x1];\n    let S = lines[_0x2079ec(0x0)]()[_0x2079ec(0x1)](/\\s/)[0x0][_0x2079ec(0x1)]('')[_0x2079ec(0x2)](v => v - 0x0);\n    let n = 0x0, Z = [];\n    let p, b = S[0x0], i = 0x0;\n    while (n < N) {\n        for (p = n; p < N && S[p] == b; p++) {\n        }\n        let l = p - n;\n        Z[_0x2079ec(0x3)]({\n            'kind': b,\n            'pos': n,\n            'len': l,\n            'index': i++\n        });\n        b = (b + 0x1) % 0x2;\n        n = p;\n    }\n    let L = Z['length'], LL = L - (K - 0x1) * 0x2;\n    let start = Z[0x0][_0x2079ec(0x4)];\n    let ans = 0x0;\n    for (let n = 0x0; n < LL; n += 0x2) {\n        let sum = 0x0, m, k;\n        for (m = n, k = 0x0; m < L && k < K; k++, m += 0x2) {\n            if (m < L)\n                sum += Z[m][_0x2079ec(0x5)];\n            if (m + 0x1 < L)\n                sum += Z[m + 0x1]['len'];\n        }\n        if (start == 0x1 && m < L)\n            sum += Z[m]['len'];\n        if (ans < sum)\n            ans = sum;\n    }\n    console['log'](ans);\n}\nif (typeof window == a0_0x2ab2bc(0x6))\n    Main(require('fs')[a0_0x2ab2bc(0x7)](a0_0x2ab2bc(0x8), a0_0x2ab2bc(0x9)));", "test_cases": [["5 1\n00010", "4"], ["14 2\n11101010110011", "8"], ["1 1\n1", "1"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let nk = lines.shift().split(/\\s/).map((v) => v - 0);\n    let N = nk[0], K = nk[1];\n    let S = lines.shift().split(/\\s/)[0].split(\"\").map((v) => v - 0);\n    let n = 0, Z = [];\n    let p, b = S[0], i = 0;\n    while (n < N) {\n        for (p = n; p < N && S[p] == b; p++) { }\n        let l = p - n;\n        Z.push({kind: b, pos: n, len: l, index: i++});\n        b = (b + 1) % 2;\n        n = p;\n    }\n    let L = Z.length, LL = L - (K - 1) * 2;\n    let start = Z[0].kind;\n    let ans = 0;\n    for (let n = 0; n < LL; n += 2) {\n        let sum = 0, m, k;\n        for (m = n, k = 0; m < L && k < K; k++, m += 2) {\n            if (m < L) sum += Z[m].len;\n            if (m + 1 < L) sum += Z[m + 1].len;\n        }\n        if (start == 1 && m < L) sum += Z[m].len;\n        if (ans < sum) ans = sum;\n    }\n    console.log(ans);\n}\nif (typeof window == \"undefined\") Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03106_1", "type": "JavaScript", "obfuscated": "function a0_0x6b82(YYWpui, key) {\n    var stringArray = a0_0x2a4e();\n    a0_0x6b82 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6b82(YYWpui, key);\n}\nvar a0_0x52b6a2 = a0_0x6b82;\nfunction a0_0x2a4e() {\n    var _0x47dc06 = [\n        'isInteger',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2a4e = function () {\n        return _0x47dc06;\n    };\n    return a0_0x2a4e();\n}\nfunction main(input) {\n    var _0x487f13 = a0_0x6b82;\n    const args = input['split']('\\x20');\n    var A = Number(args[0x0]);\n    var B = Number(args[0x1]);\n    var K = Number(args[0x2]);\n    var cu = 0x0;\n    var sum;\n    var count = 0x0;\n    for (cu = A; cu > 0x0; --cu) {\n        if (Number[_0x487f13(0x0)](A / cu) && Number[_0x487f13(0x0)](B / cu)) {\n            count++;\n            if (count === K) {\n                sum = cu;\n                break;\n            }\n        }\n    }\n    console[_0x487f13(0x1)](sum);\n}\nmain(require('fs')[a0_0x52b6a2(0x2)](a0_0x52b6a2(0x3), 'utf8'));", "test_cases": [["8 12 2", "2"], ["100 50 4", "5"], ["1 1 1", "1"]], "original": "function main(input) {\n  const args = input.split(' ');\n  var A = Number(args[0]);\n  var B = Number(args[1]);\n  var K = Number(args[2]);\n  var cu = 0;\n  var sum;\n  var count = 0;\n  for (cu = A; cu > 0; --cu) {\n    if (Number.isInteger(A / cu) && Number.isInteger(B / cu)) {\n      count++;\n      if (count === K) {\n        sum = cu;\n        break;\n      }\n    }\n  }\n  console.log(sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03140_1", "type": "JavaScript", "obfuscated": "var a0_0x28a2bc = a0_0x3b3d;\nfunction Main(input) {\n    var _0x3157f8 = a0_0x3b3d;\n    inputList = input[_0x3157f8(0x0)]('\\x0a');\n    inputNum = parseInt(inputList[0x0], 0xa);\n    firstList = inputList[0x1][_0x3157f8(0x0)]('');\n    secondList = inputList[0x2][_0x3157f8(0x0)]('');\n    thirdList = inputList[0x3][_0x3157f8(0x0)]('');\n    count = 0x0;\n    for (var i = 0x0; i < inputNum; i++) {\n        if (firstList[i] == secondList[i] && secondList[i] == thirdList[i]) {\n            continue;\n        }\n        if (firstList[i] == secondList[i] || secondList[i] == thirdList[i] || thirdList[i] == firstList[i]) {\n            count++;\n            continue;\n        }\n        count++;\n        count++;\n    }\n    console[_0x3157f8(0x1)](count);\n}\nMain(require('fs')[a0_0x28a2bc(0x2)](a0_0x28a2bc(0x3), a0_0x28a2bc(0x4)));\nfunction a0_0x3b3d(HpYIBg, key) {\n    var stringArray = a0_0x43fa();\n    a0_0x3b3d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b3d(HpYIBg, key);\n}\nfunction a0_0x43fa() {\n    var _0x14570b = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x43fa = function () {\n        return _0x14570b;\n    };\n    return a0_0x43fa();\n}", "test_cases": [["4\nwest\neast\nwait", "3"], ["9\ndifferent\ndifferent\ndifferent", "0"], ["7\nzenkoku\ntouitsu\nprogram", "13"]], "original": "// inputに入力データ全体が入る\n// 7\n// zenkoku\n// touitsu\n// program\n\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinputList = input.split(\"\\n\");\n    inputNum = parseInt(inputList[0], 10);\n    firstList = inputList[1].split(\"\");\n    secondList = inputList[2].split(\"\");\n    thirdList = inputList[3].split(\"\");\n    count = 0;\n    for (var i = 0; i < inputNum; i++) {\n        if(firstList[i] == secondList[i] && secondList[i] == thirdList[i]) {\n            continue;\n        }\n        if(firstList[i] == secondList[i] || secondList[i] == thirdList[i] || thirdList[i] == firstList[i]) {\n            count++;\n            continue;\n        }\n        count++;\n        count++;\n    }\n\tconsole.log(count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03202_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x238d03 = a0_0x5300;\nfunction a0_0x3332() {\n    const _0x395c9b = [\n        'filter',\n        'map',\n        'log',\n        'length',\n        'zZBPc',\n        'LufBU',\n        'repeat',\n        'substring',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3332 = function () {\n        return _0x395c9b;\n    };\n    return a0_0x3332();\n}\nfunction a0_0x5300(gPtJWI, key) {\n    const stringArray = a0_0x3332();\n    a0_0x5300 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5300(gPtJWI, key);\n}\nfunction main(input) {\n    const _0x2edc90 = a0_0x5300;\n    const inputs = input['split']('\\x0a')[_0x2edc90(0x0)](x => x !== '');\n    const n = inputs[0x0];\n    const a = inputs[0x1]['split']('\\x20')[_0x2edc90(0x1)](x => Number(x));\n    let result = 0x1;\n    while (testN(result, a) === ![]) {\n        result = result + 0x1;\n    }\n    console[_0x2edc90(0x2)](result);\n    function testN(n, a) {\n        const _0x48e38e = a0_0x5300;\n        let current = '0'['repeat'](a[0x0]);\n        for (let i = 0x1; i < a[_0x48e38e(0x3)]; i++) {\n            if (a[i - 0x1] < a[i]) {\n                current = current + '0'['repeat'](a[i] - a[i - 0x1]);\n            } else {\n                if (_0x48e38e(0x4) === _0x48e38e(0x5)) {\n                    current = '0'[_0x48e38e(0x6)](a[i] - current['length']) + current;\n                } else {\n                    current = parseInt(current[_0x48e38e(0x7)](0x0, a[i]), n) + 0x1;\n                    if (isNaN(current)) {\n                        return ![];\n                    }\n                    current = '' + current;\n                    if (current['length'] > a[i]) {\n                        return ![];\n                    } else {\n                        current = '0'[_0x48e38e(0x6)](a[i] - current[_0x48e38e(0x3)]) + current;\n                    }\n                }\n            }\n        }\n        return !![];\n    }\n}\nmain(require('fs')['readFileSync'](a0_0x238d03(0x8), a0_0x238d03(0x9)));", "test_cases": [["3\n3 2 1", "2"], ["5\n2 3 2 1 2", "2"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n\n  const n = inputs[0];\n  const a = inputs[1].split(\" \").map(x => Number(x));\n\n  let result = 1;\n  while (testN(result, a) === false) {\n    result = result + 1;\n  }\n\n  console.log(result);\n\n  function testN(n, a) {\n    let current = \"0\".repeat(a[0]);\n\n    for (let i = 1; i < a.length; i++) {\n      if (a[i - 1] < a[i]) {\n        current = current + \"0\".repeat(a[i] - a[i - 1]);\n      } else {\n        current = parseInt(current.substring(0, a[i]), n) + 1;\n        if (isNaN(current)) {\n          return false;\n        }\n\n        current = \"\" + current;\n        if (current.length > a[i]) {\n          return false;\n        } else {\n          current = \"0\".repeat(a[i] - current.length) + current;\n        }\n      }\n    }\n    return true;\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03251_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x330aca = a0_0x3454;\nfunction a0_0x3454(Mncuqd, key) {\n    const stringArray = a0_0x35c1();\n    a0_0x3454 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3454(Mncuqd, key);\n}\nfunction a0_0x35c1() {\n    const _0x5048b6 = [\n        'map',\n        'split',\n        'max',\n        'log',\n        'War',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x35c1 = function () {\n        return _0x5048b6;\n    };\n    return a0_0x35c1();\n}\nconst main = input => {\n    const _0x5be49a = a0_0x3454;\n    const num = input[0x0]['split']('\\x20')[_0x5be49a(0x0)](val => parseInt(val)), N = num[0x0], M = num[0x1], X = num[0x2], Y = num[0x3], x = input[0x1][_0x5be49a(0x1)]('\\x20')['map'](val => parseInt(val)), y = input[0x2]['split']('\\x20')[_0x5be49a(0x0)](val => parseInt(val));\n    const xMax = Math[_0x5be49a(0x2)](...x), yMin = Math['min'](...y);\n    let ans = 0x0;\n    for (let z = X + 0x1; z <= Y; z++) {\n        if (xMax < z && yMin >= z) {\n            ans = 0x1;\n            break;\n        }\n    }\n    console[_0x5be49a(0x3)](ans == 0x1 ? 'No\\x20War' : _0x5be49a(0x4));\n};\nmain(require('fs')[a0_0x330aca(0x5)](a0_0x330aca(0x6), a0_0x330aca(0x7))[a0_0x330aca(0x1)]('\\x0a'));", "test_cases": [["3 2 10 20\n8 15 13\n16 22", "No War"], ["4 2 -48 -1\n-20 -35 -91 -23\n-22 66", "War"], ["5 3 6 8\n-10 3 1 5 -100\n100 6 14", "War"]], "original": "'use strict';\nconst main = input => {\n  const num = input[0].split(' ').map(val => parseInt(val)), N = num[0], M = num[1], X = num[2], Y = num[3], x = input[1].split(' ').map(val => parseInt(val)), y = input[2].split(' ').map(val => parseInt(val));\n  // console.log(N, M, X, Y, x, y);\n  const xMax = Math.max(...x), yMin = Math.min(...y);\n  // console.log(xMax, yMin);\n  let ans = 0;\n  for(let z=X+1; z<=Y; z++) {\n    if (xMax < z && yMin >= z) {\n      ans = 1;\n      break;\n    }\n  }\n  console.log(ans==1?'No War':'War');\n  \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));", "language": "JavaScript"}
{"filename": "p03315_1", "type": "JavaScript", "obfuscated": "var a0_0x377f27 = a0_0x2181;\nfunction a0_0x4815() {\n    var _0x9a21e2 = [\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4815 = function () {\n        return _0x9a21e2;\n    };\n    return a0_0x4815();\n}\nfunction a0_0x2181(JFoYsV, key) {\n    var stringArray = a0_0x4815();\n    a0_0x2181 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2181(JFoYsV, key);\n}\nfunction main(input) {\n    var input = input;\n    var sum = 0x0;\n    for (var i = 0x0; i < 0x4; i++) {\n        if (input[i] == '+') {\n            sum += 0x1;\n        } else {\n            sum -= 0x1;\n        }\n    }\n    console['log'](sum);\n}\nmain(require('fs')[a0_0x377f27(0x0)](a0_0x377f27(0x1), 'utf8'));", "test_cases": [["+-++", "2"], ["-+--", "-2"], ["----", "-4"]], "original": "function main(input) {\n  \n  var input = input;\n  var sum = 0;\n  for (var i=0;i<4;i++){\n    if(input[i] == '+') {\n    \tsum += 1;\n    } else {\n    \tsum -= 1;\n    }\n  }\n  console.log(sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03385_1", "type": "JavaScript", "obfuscated": "function a0_0x2a8a(BgoBJh, key) {\n    var stringArray = a0_0x1a7c();\n    a0_0x2a8a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a8a(BgoBJh, key);\n}\nfunction a0_0x1a7c() {\n    var _0x21be59 = [\n        'indexOf',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1a7c = function () {\n        return _0x21be59;\n    };\n    return a0_0x1a7c();\n}\nvar a0_0x2f8897 = a0_0x2a8a;\nfunction main(input) {\n    var _0x3669a9 = a0_0x2a8a;\n    var aa = input[_0x3669a9(0x0)]('a');\n    var bb = input[_0x3669a9(0x0)]('b');\n    var cc = input[_0x3669a9(0x0)]('c');\n    if (aa == -0x1 || bb == -0x1 || cc == -0x1) {\n        console[_0x3669a9(0x1)]('No');\n    } else {\n        console[_0x3669a9(0x1)](_0x3669a9(0x2));\n    }\n}\nmain(require('fs')[a0_0x2f8897(0x3)](a0_0x2f8897(0x4), a0_0x2f8897(0x5)));", "test_cases": [["bac", "Yes"], ["bab", "No"], ["abc", "Yes"], ["aaa", "No"]], "original": "function main(input) {\n    \n    var aa=input.indexOf(\"a\");\n    var bb=input.indexOf(\"b\");\n    var cc=input.indexOf(\"c\");\n\n  if(aa==-1 || bb==-1 || cc==-1){\n  console.log(\"No\");\n  }else{\n    console.log(\"Yes\");\n}\n}\n  main(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03409_1", "type": "JavaScript", "obfuscated": "var a0_0x49e4b0 = a0_0x2848;\nfunction Main(s) {\n    var _0x52c8e8 = a0_0x2848;\n    s = s[_0x52c8e8(0x0)]('\\x0a');\n    var n = parseInt(s[0x0]);\n    var a = Array(n);\n    var c = Array(n);\n    for (var i = 0x0; i < n; i++) {\n        a[i] = s[i + 0x1][_0x52c8e8(0x0)]('\\x20')[_0x52c8e8(0x1)](a => parseInt(a));\n    }\n    for (var i = 0x0; i < n; i++) {\n        c[i] = s[i + n + 0x1][_0x52c8e8(0x0)]('\\x20')[_0x52c8e8(0x1)](a => parseInt(a));\n    }\n    a = a['sort']((a, b) => a[0x1] - b[0x1]);\n    a = a[_0x52c8e8(0x2)]((a, b) => a[0x0] - b[0x0]);\n    c = c[_0x52c8e8(0x2)]((a, b) => a[0x0] - b[0x0]);\n    c = c[_0x52c8e8(0x2)]((a, b) => b[0x1] - a[0x1]);\n    var ans = 0x0;\n    for (i = n - 0x1; i >= 0x0; i--) {\n        for (var j = c[_0x52c8e8(0x3)] - 0x1; j >= 0x0; j--) {\n            if (a[i][0x0] < c[j][0x0] && a[i][0x1] < c[j][0x1]) {\n                ans++;\n                c['splice'](j, 0x1);\n                break;\n            }\n        }\n    }\n    console['log'](ans);\n}\nfunction a0_0x2848(DRDWZc, key) {\n    var stringArray = a0_0x5ce5();\n    a0_0x2848 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2848(DRDWZc, key);\n}\nMain(require('fs')[a0_0x49e4b0(0x4)](a0_0x49e4b0(0x5), a0_0x49e4b0(0x6))[a0_0x49e4b0(0x7)]());\nfunction a0_0x5ce5() {\n    var _0x17f1e6 = [\n        'split',\n        'map',\n        'sort',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x5ce5 = function () {\n        return _0x17f1e6;\n    };\n    return a0_0x5ce5();\n}", "test_cases": [["3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5", "2"], ["3\n0 0\n1 1\n5 2\n2 3\n3 4\n4 5", "2"], ["2\n2 2\n3 3\n0 0\n1 1", "0"], ["5\n0 0\n7 3\n2 2\n4 8\n1 6\n8 5\n6 9\n5 4\n9 1\n3 7", "5"], ["5\n0 0\n1 1\n5 5\n6 6\n7 7\n2 2\n3 3\n4 4\n8 8\n9 9", "4"]], "original": "function Main(s) {\n\ts = s.split(\"\\n\");\n\tvar n = parseInt(s[0]);\n\tvar a = Array(n);\n\tvar c = Array(n);\n\tfor(var i = 0; i < n; i++){\n\t\ta[i] = s[i+1].split(\" \").map(a => parseInt(a));\n\t}\n\tfor(var i = 0; i < n; i++){\n\t\tc[i] = s[i+n+1].split(\" \").map(a => parseInt(a));\n\t}\n\ta = a.sort((a,b) => a[1] - b[1]);\n\ta = a.sort((a,b) => a[0] - b[0]);\n\tc = c.sort((a,b) => a[0] - b[0]);\n\tc = c.sort((a,b) => b[1] - a[1]);\n\t\n\tvar ans = 0;\n\tfor(i = n-1; i >= 0; i--){\n\t\tfor(var j = c.length-1; j >= 0; j--){\n\t\t\tif(a[i][0] < c[j][0] && a[i][1] < c[j][1]){\n\t\t\t\tans++;\n\t\t\t\tc.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03423_1", "type": "JavaScript", "obfuscated": "const a0_0x289ffd = a0_0x4432;\nfunction a0_0x16f6() {\n    const _0x238549 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x16f6 = function () {\n        return _0x238549;\n    };\n    return a0_0x16f6();\n}\nfunction a0_0x4432(stYbiK, key) {\n    const stringArray = a0_0x16f6();\n    a0_0x4432 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4432(stYbiK, key);\n}\nfunction main(input) {\n    const _0x16c383 = a0_0x4432;\n    input = input['trim']();\n    const a = parseInt(input[_0x16c383(0x0)]('\\x20')[0x0], 0xa);\n    console[_0x16c383(0x1)](Math['floor'](a / 0x3));\n}\nmain(require('fs')[a0_0x289ffd(0x2)](a0_0x289ffd(0x3), a0_0x289ffd(0x4)));", "test_cases": [["8", "2"], ["2", "0"], ["9", "3"]], "original": "function main(input) {\n  input=input.trim();\nconst a = parseInt(input.split(\" \")[0], 10);\n  console.log(Math.floor(a/3));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03455_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2c7c43 = a0_0x6b27;\nfunction a0_0xc223() {\n    const _0x494296 = [\n        'split',\n        'Even',\n        'Odd',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xc223 = function () {\n        return _0x494296;\n    };\n    return a0_0xc223();\n}\nfunction a0_0x6b27(vjrkWm, key) {\n    const stringArray = a0_0xc223();\n    a0_0x6b27 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x6b27(vjrkWm, key);\n}\nfunction main(input) {\n    const _0x28fb66 = a0_0x6b27;\n    input = input['trim']()[_0x28fb66(0x0)]('\\x20')['map'](Number);\n    const A = input[0x0];\n    const B = input[0x1];\n    const ans = A % 0x2 ^ B % 0x2 ? _0x28fb66(0x1) : _0x28fb66(0x2);\n    console[_0x28fb66(0x3)](ans);\n}\nmain(require('fs')[a0_0x2c7c43(0x4)](a0_0x2c7c43(0x5), a0_0x2c7c43(0x6)));", "test_cases": [["3 4", "Even"], ["1 21", "Odd"]], "original": "'use strict'\n\nfunction main(input) {\n  input = input\n    .trim()\n    .split(' ')\n    .map(Number)\n\n  const A = input[0]\n  const B = input[1]\n  const ans = A % 2 ^ B % 2 ? 'Even' : 'Odd'\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03478_1", "type": "JavaScript", "obfuscated": "function a0_0x4f70(MXryTw, key) {\n    var stringArray = a0_0x222f();\n    a0_0x4f70 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f70(MXryTw, key);\n}\nfunction a0_0x222f() {\n    var _0x4b2f1a = [\n        'split',\n        'LAzVs',\n        'KdcXH',\n        'map',\n        'reduce',\n        'CUzLw',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x222f = function () {\n        return _0x4b2f1a;\n    };\n    return a0_0x222f();\n}\nvar a0_0x3aaf4f = a0_0x4f70;\nfunction Main(input) {\n    var _0x3c78a4 = a0_0x4f70;\n    var input = input[_0x3c78a4(0x0)]('\\x20');\n    var n = input[0x0];\n    var a = input[0x1];\n    var b = input[0x2];\n    var Sum = 0x0;\n    for (j = 0x1; j <= n; j++) {\n        if (_0x3c78a4(0x1) !== _0x3c78a4(0x2)) {\n            if (0x0 <= j && j <= 0x9) {\n                if (a <= j && j <= b) {\n                    Sum += j;\n                }\n            } else {\n                var str = j['toString']();\n                var arr = str[_0x3c78a4(0x0)]('')[_0x3c78a4(0x3)](n => parseInt(n));\n                var x = arr[_0x3c78a4(0x4)](function (prev, current, i, arr) {\n                    return prev + current;\n                });\n            }\n            ;\n            if (a <= x && x <= b) {\n                if ('SZwSI' === _0x3c78a4(0x5)) {\n                    Sum += j;\n                } else {\n                    Sum += j;\n                }\n            }\n        } else {\n            if (a <= j && j <= b) {\n                Sum += j;\n            }\n        }\n    }\n    console[_0x3c78a4(0x6)](Sum);\n}\nMain(require('fs')[a0_0x3aaf4f(0x7)](a0_0x3aaf4f(0x8), 'utf8'));", "test_cases": [["20 2 5", "84"], ["10 1 2", "13"], ["100 4 16", "4554"]], "original": "function Main(input) {\n    var input  = input.split(' ');\n    var n = input[0];\n    var a = input[1];\n    var b = input[2];\n    var Sum = 0;\n    for (j = 1; j <= n; j++) {\n        if(0 <= j && j <= 9) {\n            if(a <= j && j <= b) {\n                Sum += j;\n            }\n        } else {\n        var str = j.toString();\n        var arr = str.split('').map(n => parseInt(n));\n        var x = arr.reduce(function(prev, current, i, arr) {\n                return prev+current;\n            });\n        };\n        if(a <= x && x <= b) {\n            Sum += j;\n        }\n    \n    }\n    console.log(Sum);\n\n    }\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03486_1", "type": "JavaScript", "obfuscated": "var a0_0x502fdf = a0_0x5dff;\nfunction a0_0x5dff(CQREtN, key) {\n    var stringArray = a0_0x2c72();\n    a0_0x5dff = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5dff(CQREtN, key);\n}\nfunction a0_0x2c72() {\n    var _0xc26fff = [\n        'split',\n        'sort',\n        'reverse',\n        'join',\n        'log',\n        'Yes',\n        '/dev/stdin',\n        'UTF-8'\n    ];\n    a0_0x2c72 = function () {\n        return _0xc26fff;\n    };\n    return a0_0x2c72();\n}\nfunction main(input) {\n    var _0x26a246 = a0_0x5dff;\n    var lines = input['split']('\\x0a');\n    var s = lines[0x0][_0x26a246(0x0)]('');\n    var t = lines[0x1][_0x26a246(0x0)]('');\n    s = s[_0x26a246(0x1)]()['join']();\n    t = t[_0x26a246(0x1)]()[_0x26a246(0x2)]()[_0x26a246(0x3)]();\n    s < t ? console[_0x26a246(0x4)](_0x26a246(0x5)) : console[_0x26a246(0x4)]('No');\n}\nmain(require('fs')['readFileSync'](a0_0x502fdf(0x6), a0_0x502fdf(0x7)));", "test_cases": [["yx\naxy", "Yes"], ["ratcode\natlas", "Yes"], ["cd\nabc", "No"], ["w\nww", "Yes"], ["zzz\nzzz", "No"]], "original": "function main(input){\n  var lines = input.split('\\n');\n  var s = lines[0].split(\"\"); // change to array\n  var t = lines[1].split(\"\");\n  s = s.sort().join();\n  t = t.sort().reverse().join();\n\n  s < t ? console.log(\"Yes\") : console.log(\"No\");\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));", "language": "JavaScript"}
{"filename": "p03563_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x10dc32 = a0_0x4e47;\nfunction a0_0x1ced() {\n    const _0x16cb59 = [\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1ced = function () {\n        return _0x16cb59;\n    };\n    return a0_0x1ced();\n}\nfunction main(s) {\n    s = s['split']('\\x0a');\n    const r = Number(s[0x0]);\n    const g = Number(s[0x1]);\n    let ans = g + (g - r);\n    console['log'](ans);\n}\nfunction a0_0x4e47(AWFFZM, key) {\n    const stringArray = a0_0x1ced();\n    a0_0x4e47 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e47(AWFFZM, key);\n}\nmain(require('fs')['readFileSync'](a0_0x10dc32(0x0), a0_0x10dc32(0x1)));", "test_cases": [["2002\n2017", "2032"], ["4500\n0", "-4500"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n  const r = Number(s[0]);\n  const g = Number(s[1]);\n  let ans = g + (g - r);\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03610_1", "type": "JavaScript", "obfuscated": "var a0_0x923c48 = a0_0x1889;\nfunction a0_0x1889(qpQRVa, key) {\n    var stringArray = a0_0x5974();\n    a0_0x1889 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1889(qpQRVa, key);\n}\nfunction Main(input) {\n    var _0x24a31d = a0_0x1889;\n    input = input['split']('\\x0a');\n    input = input[0x0];\n    var ans = '';\n    for (var i = 0x1; i <= input[_0x24a31d(0x0)]; i = i + 0x2) {\n        ans += input[i - 0x1];\n    }\n    console['log'](ans);\n}\nfunction a0_0x5974() {\n    var _0x50f47b = [\n        'length',\n        '/dev/stdin'\n    ];\n    a0_0x5974 = function () {\n        return _0x50f47b;\n    };\n    return a0_0x5974();\n}\nMain(require('fs')['readFileSync'](a0_0x923c48(0x1), 'utf8'));", "test_cases": [["atcoder", "acdr"], ["aaaa", "aa"], ["z", "z"], ["fukuokayamaguchi", "fkoaaauh"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\tinput = input[0];\n\n\tvar ans = \"\";\n\tfor(var i = 1; i <= input.length; i = i + 2){\n\t\tans += input[i-1];\n\t}\n\tconsole.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03693_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x181c(suFKfg, key) {\n    const stringArray = a0_0x262a();\n    a0_0x181c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x181c(suFKfg, key);\n}\nconst a0_0x156aa9 = a0_0x181c;\nfunction Main(input) {\n    const _0x573588 = a0_0x181c;\n    const param = Number(input[_0x573588(0x0)]('\\x20')[_0x573588(0x1)](''));\n    if (param % 0x4 === 0x0) {\n        console[_0x573588(0x2)]('YES');\n    } else {\n        console[_0x573588(0x2)]('NO');\n    }\n}\nMain(require('fs')[a0_0x156aa9(0x3)](a0_0x156aa9(0x4), a0_0x156aa9(0x5)));\nfunction a0_0x262a() {\n    const _0x286618 = [\n        'split',\n        'join',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x262a = function () {\n        return _0x286618;\n    };\n    return a0_0x262a();\n}", "test_cases": [["4 3 2", "YES"], ["2 3 4", "NO"]], "original": "// https://atcoder.jp/contests/abc064/tasks/abc064_a\n\"use strict\"\nfunction Main(input) {\n  const param = Number(input.split(' ').join(''));\n  if(param % 4 === 0) {\n    console.log('YES');\n  } else {\n    console.log('NO');\n  }\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03697_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1a191e = a0_0x34ff;\nfunction a0_0x34ff(yeyHdn, key) {\n    const stringArray = a0_0x42f2();\n    a0_0x34ff = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x34ff(yeyHdn, key);\n}\nfunction Main(INPUT) {\n    const _0x51a6c5 = a0_0x34ff;\n    const input = INPUT[_0x51a6c5(0x0)]('\\x0a')[0x0]['split']('\\x20');\n    const A = parseInt(input[0x0], 0xa);\n    const B = parseInt(input[0x1], 0xa);\n    console[_0x51a6c5(0x1)](A + B >= 0xa ? _0x51a6c5(0x2) : A + B);\n}\nMain(require('fs')['readFileSync'](a0_0x1a191e(0x3), a0_0x1a191e(0x4)));\nfunction a0_0x42f2() {\n    const _0x3a7377 = [\n        'split',\n        'log',\n        'error',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x42f2 = function () {\n        return _0x3a7377;\n    };\n    return a0_0x42f2();\n}", "test_cases": [["6 3", "9"], ["6 4", "error"]], "original": "'use strict';\n\nfunction Main(INPUT) {\n    const input = INPUT.split(\"\\n\")[0].split(\" \");\n    const A = parseInt(input[0], 10);\n    const B = parseInt(input[1], 10);\n\n    console.log(A + B >= 10 ? \"error\" : A + B);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03698_1", "type": "JavaScript", "obfuscated": "var a0_0x389a12 = a0_0x3906;\nfunction a0_0x3906(DfHJsw, key) {\n    var stringArray = a0_0x4961();\n    a0_0x3906 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3906(DfHJsw, key);\n}\nfunction main(data) {\n    var _0x4c05f6 = a0_0x3906;\n    input = data[_0x4c05f6(0x0)]('');\n    len = input[_0x4c05f6(0x1)];\n    temp = [];\n    for (i = 0x0; i < len; i += 0x1) {\n        if (temp[_0x4c05f6(0x2)](input[i]) === -0x1) {\n            temp[_0x4c05f6(0x3)](input[i]);\n        } else {\n            console['log']('no');\n            return;\n        }\n    }\n    console[_0x4c05f6(0x4)](_0x4c05f6(0x5));\n}\nfunction a0_0x4961() {\n    var _0x40d5ba = [\n        'split',\n        'length',\n        'indexOf',\n        'push',\n        'log',\n        'yes',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4961 = function () {\n        return _0x40d5ba;\n    };\n    return a0_0x4961();\n}\nmain(require('fs')[a0_0x389a12(0x6)](a0_0x389a12(0x7), 'utf8'));", "test_cases": [["uncopyrightable", "yes"], ["different", "no"], ["no", "yes"]], "original": "function main(data){\n    input = data.split(\"\");\n    len = input.length;\n    temp = []\n    for(i = 0; i<len; i+=1){\n        if(temp.indexOf(input[i]) === -1){\n            temp.push(input[i]);\n        }else{\n            console.log(\"no\");\n            return;\n        }\n    }\n    console.log(\"yes\");\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03737_1", "type": "JavaScript", "obfuscated": "function a0_0x4d92(hRCAaP, key) {\n    var stringArray = a0_0x23d7();\n    a0_0x4d92 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4d92(hRCAaP, key);\n}\nfunction a0_0x23d7() {\n    var _0x247e13 = [\n        'toUpperCase',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x23d7 = function () {\n        return _0x247e13;\n    };\n    return a0_0x23d7();\n}\nvar a0_0x39facc = a0_0x4d92;\nfunction Main(input) {\n    var _0x19936a = a0_0x4d92;\n    console['log']((input || '')['split'](/\\s+/)['map'](function (entry) {\n        var _0x31a5f5 = a0_0x4d92;\n        return entry[0x0][_0x31a5f5(0x0)]();\n    })[_0x19936a(0x1)](''));\n}\nMain(require('fs')[a0_0x39facc(0x2)](a0_0x39facc(0x3), a0_0x39facc(0x4)));", "test_cases": [["atcoder beginner contest", "ABC"], ["resident register number", "RRN"], ["k nearest neighbor", "KNN"], ["async layered coding", "ALC"]], "original": "function Main(input) {\n  console.log( (input || \"\").split(/\\s+/).map(function(entry) {\n    return entry[0].toUpperCase();\n  }).join(\"\"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03826_1", "type": "JavaScript", "obfuscated": "var a0_0x5cc0e9 = a0_0xa1ca;\nvar input = require('fs')[a0_0x5cc0e9(0x0)](a0_0x5cc0e9(0x1), a0_0x5cc0e9(0x2));\nvar inputArray = input['split']('\\x20');\nvar a = inputArray[0x0];\nfunction a0_0x2d44() {\n    var _0x5e4556 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2d44 = function () {\n        return _0x5e4556;\n    };\n    return a0_0x2d44();\n}\nvar b = inputArray[0x1];\nvar c = inputArray[0x2];\nfunction a0_0xa1ca(DFxdFT, key) {\n    var stringArray = a0_0x2d44();\n    a0_0xa1ca = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xa1ca(DFxdFT, key);\n}\nvar d = inputArray[0x3];\nvar result = a * b > c * d ? a * b : c * d;\nconsole['log'](result);", "test_cases": [["3 5 2 7", "15"], ["100 600 200 300", "60000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar inputArray = input.split(' ');\nvar a = inputArray[0];\nvar b = inputArray[1];\nvar c = inputArray[2];\nvar d = inputArray[3];\n\nvar result = (a * b > c * d) ? a * b : c * d;\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p04012_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x25f1d6 = a0_0x3748;\nfunction a0_0x3d46() {\n    const _0x24934c = [\n        'replace',\n        'split',\n        'forEach',\n        'indexOf',\n        'push',\n        'word',\n        'counter',\n        'every',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3d46 = function () {\n        return _0x24934c;\n    };\n    return a0_0x3d46();\n}\nfunction a0_0x3748(JEAuoC, key) {\n    const stringArray = a0_0x3d46();\n    a0_0x3748 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3748(JEAuoC, key);\n}\nfunction main(s) {\n    const _0x1ee7e3 = a0_0x3748;\n    const input = s[_0x1ee7e3(0x0)](/\\n/g, '')[_0x1ee7e3(0x1)]('');\n    let words = [];\n    input[_0x1ee7e3(0x2)]((x, i, self) => {\n        const _0x114f57 = a0_0x3748;\n        if (self[_0x114f57(0x3)](x) === i) {\n            words[_0x114f57(0x4)]({\n                'word': x,\n                'counter': 0x1\n            });\n        } else {\n            words[_0x114f57(0x2)](y => {\n                const _0x2253fb = a0_0x3748;\n                if (x === y[_0x2253fb(0x5)]) {\n                    y[_0x2253fb(0x6)] += 0x1;\n                }\n            });\n        }\n    });\n    const result = words[_0x1ee7e3(0x7)](x => x[_0x1ee7e3(0x6)] % 0x2 === 0x0) ? 'Yes' : 'No';\n    console[_0x1ee7e3(0x8)](result);\n}\nmain(require('fs')[a0_0x25f1d6(0x9)]('/dev/stdin', a0_0x25f1d6(0xa)));", "test_cases": [["abaccaba", "Yes"], ["hthth", "No"]], "original": "'use strict'\n\nfunction main(s) {  \n  \n  const input = s.replace(/\\n/g, '').split('');\n  let words = [];\n\n  // 文字配列の重複を検出\n  input.forEach((x, i, self) => {\n    \n    // 初出時はオブジェクト追加\n    if(self.indexOf(x) === i) {\n      words.push({word : x, counter: 1});\n\n    // 2回目以降はカウントするのみ\n    } else {\n      words.forEach(y => {\n        if(x === y.word) {\n          y.counter += 1;\n        }\n      })\n    }\n  });\n\n  // 全ての文字が偶数回出ているかどうか\n  const result = words.every(x => (x.counter % 2) === 0) ? 'Yes' : 'No';\n  \n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00006_1", "type": "JavaScript", "obfuscated": "var a0_0x3d1dde = a0_0x19ae;\nvar input = require('fs')[a0_0x3d1dde(0x0)](a0_0x3d1dde(0x1), 'utf8');\nvar string = input[a0_0x3d1dde(0x2)]();\nconsole[a0_0x3d1dde(0x3)](reverse(string));\nfunction a0_0x4763() {\n    var _0x5d18a4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'log',\n        'split'\n    ];\n    a0_0x4763 = function () {\n        return _0x5d18a4;\n    };\n    return a0_0x4763();\n}\nfunction a0_0x19ae(MxdYvW, key) {\n    var stringArray = a0_0x4763();\n    a0_0x19ae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19ae(MxdYvW, key);\n}\nfunction reverse(s) {\n    var _0x3e9a67 = a0_0x19ae;\n    return string[_0x3e9a67(0x4)]('')['reverse']()['join']('');\n}", "test_cases": [["w32nimda", "admin23w"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar string = input.trim();\n\nconsole.log(reverse(string));\n\nfunction reverse(s){\n    return string.split(\"\").reverse().join(\"\");\n}", "language": "JavaScript"}
{"filename": "p00018_1", "type": "JavaScript", "obfuscated": "function a0_0x3169() {\n    var _0x5e77e6 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'sort',\n        'join'\n    ];\n    a0_0x3169 = function () {\n        return _0x5e77e6;\n    };\n    return a0_0x3169();\n}\nvar a0_0x295534 = a0_0xf100;\nfunction a0_0xf100(gZCqYs, key) {\n    var stringArray = a0_0x3169();\n    a0_0xf100 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf100(gZCqYs, key);\n}\nconsole[a0_0x295534(0x0)](require('fs')[a0_0x295534(0x1)](a0_0x295534(0x2), a0_0x295534(0x3))[a0_0x295534(0x4)](/\\s/)[a0_0x295534(0x5)](function (a, b) {\n    return b - a;\n})[a0_0x295534(0x6)]('\\x20'));", "test_cases": [["3 6 9 7 5", "9 7 6 5 3"]], "original": "console.log(require('fs').readFileSync('/dev/stdin','utf8').split(/\\s/).sort(function(a,b){return b-a}).join(\" \"));", "language": "JavaScript"}
{"filename": "p00024_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x26d8a4 = a0_0x8a44;\nvar input = require('fs')[a0_0x26d8a4(0x0)]('/dev/stdin', a0_0x26d8a4(0x1));\nvar minvs = input[a0_0x26d8a4(0x2)]()[a0_0x26d8a4(0x3)]('\\x0a');\nvar minv;\nwhile (minv = minvs['shift']()) {\n    var floor = Math[a0_0x26d8a4(0x4)](Math[a0_0x26d8a4(0x5)](parseFloat(minv), 0x2) / 0x62 + 0x1);\n    console[a0_0x26d8a4(0x6)](floor);\n}\nfunction a0_0x8a44(jksKrc, key) {\n    var stringArray = a0_0x4dfe();\n    a0_0x8a44 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x8a44(jksKrc, key);\n}\nfunction a0_0x4dfe() {\n    var _0x5709e3 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'ceil',\n        'pow',\n        'log'\n    ];\n    a0_0x4dfe = function () {\n        return _0x5709e3;\n    };\n    return a0_0x4dfe();\n}", "test_cases": [["25.4\n25.4", "8\n8"]], "original": "'use strict';\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar minvs = input.trim().split('\\n');\n//var minvs = ['25.4','21.4','36.3'];\nvar minv;\nwhile (minv = minvs.shift()) {\n\tvar floor = Math.ceil(Math.pow(parseFloat(minv), 2)/98 + 1);\n\tconsole.log(floor);\n}", "language": "JavaScript"}
{"filename": "p00036_1", "type": "JavaScript", "obfuscated": "var a0_0x3c9666 = a0_0x3126;\nfunction a0_0x3126(fOlqjO, key) {\n    var stringArray = a0_0x3700();\n    a0_0x3126 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3126(fOlqjO, key);\n}\nfunction a0_0x3700() {\n    var _0x4aebb0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log',\n        'indexOf',\n        '1101',\n        '101',\n        '1000001',\n        '10000001'\n    ];\n    a0_0x3700 = function () {\n        return _0x4aebb0;\n    };\n    return a0_0x3700();\n}\nrequire('fs')[a0_0x3c9666(0x0)](a0_0x3c9666(0x1), a0_0x3c9666(0x2))[a0_0x3c9666(0x3)]()[a0_0x3c9666(0x4)]('\\x0a\\x0a')[a0_0x3c9666(0x5)](function (i) {\n    var _0x46e963 = a0_0x3126;\n    c = i['replace'](/\\s/g, '')[_0x46e963(0x4)]('')['join']('');\n    console[_0x46e963(0x6)](c['indexOf']('1111') != -0x1 ? 'C' : c[_0x46e963(0x7)]('111') != -0x1 ? 'F' : c[_0x46e963(0x7)](_0x46e963(0x8)) != -0x1 ? 'D' : c[_0x46e963(0x7)](_0x46e963(0x9)) != -0x1 ? 'B' : c['indexOf'](_0x46e963(0xa)) != -0x1 ? 'G' : c[_0x46e963(0x7)](_0x46e963(0xb)) != -0x1 ? 'A' : 'E');\n});", "test_cases": [["00000000\n00000000\n01100000\n00110000\n00000000\n00000000\n00000000\n00000000\n\n00011110\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n\n00000000\n00000000\n00110000\n00110000\n00000000\n00000000\n00000000\n00000000", "E\nC\nA"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n\\n').map(function(i){c=i.replace(/\\s/g,'').split('').join('');console.log(c.indexOf(\"1111\")!=-1?\"C\":c.indexOf(\"111\")!=-1?\"F\":c.indexOf(\"1101\")!=-1?\"D\":c.indexOf(\"101\")!=-1?\"B\":c.indexOf(\"1000001\")!=-1?\"G\":c.indexOf(\"10000001\")!=-1?\"A\":\"E\")})", "language": "JavaScript"}
{"filename": "p02391_1", "type": "JavaScript", "obfuscated": "const a0_0x37ef46 = a0_0x59c2;\nfunction a0_0x575b() {\n    const _0x5c0c2d = [\n        'log',\n        'a\\x20<\\x20b',\n        'readFileSync',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x575b = function () {\n        return _0x5c0c2d;\n    };\n    return a0_0x575b();\n}\nfunction main(input) {\n    const _0x28a974 = a0_0x59c2;\n    let nums = input['split']('\\x20')['map'](item => parseInt(item));\n    if (nums[0x0] > nums[0x1]) {\n        console['log']('a\\x20>\\x20b');\n    } else if (nums[0x0] < nums[0x1]) {\n        console[_0x28a974(0x0)](_0x28a974(0x1));\n    } else {\n        console[_0x28a974(0x0)]('a\\x20==\\x20b');\n    }\n}\nfunction a0_0x59c2(GZOCWQ, key) {\n    const stringArray = a0_0x575b();\n    a0_0x59c2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x59c2(GZOCWQ, key);\n}\nmain(require('fs')[a0_0x37ef46(0x2)](a0_0x37ef46(0x3), a0_0x37ef46(0x4)));", "test_cases": [["1 2", "a < b"], ["4 3", "a > b"], ["5 5", "a == b"]], "original": "function main(input){\n    let nums = input.split(\" \").map(item=>parseInt(item));\n    if(nums[0]>nums[1]){\n        console.log(\"a > b\");\n    }else if(nums[0]<nums[1]){\n        console.log(\"a < b\");\n    }else{\n        console.log(\"a == b\");\n    }\n    \n    \n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02407_1", "type": "JavaScript", "obfuscated": "const a0_0x4b47f2 = a0_0x13da;\nconst input = require('fs')[a0_0x4b47f2(0x0)](a0_0x4b47f2(0x1), 'utf8')[a0_0x4b47f2(0x2)](/\\n/);\nlet num = input[0x1][a0_0x4b47f2(0x2)]('\\x20')[a0_0x4b47f2(0x3)](Number);\nfunction a0_0x13da(mvLuLj, key) {\n    const stringArray = a0_0x5dba();\n    a0_0x13da = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13da(mvLuLj, key);\n}\nfunction a0_0x5dba() {\n    const _0x4761f8 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'reverse',\n        'join'\n    ];\n    a0_0x5dba = function () {\n        return _0x4761f8;\n    };\n    return a0_0x5dba();\n}\nnum[a0_0x4b47f2(0x4)]();\nconsole['log'](num[a0_0x4b47f2(0x5)]('\\x20'));", "test_cases": [["5\n1 2 3 4 5", "5 4 3 2 1"], ["8\n3 3 4 4 5 8 7 9", "9 7 8 5 4 4 3 3"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/);\nlet num = input[1].split(' ').map(Number);\nnum.reverse();\n\nconsole.log(num.join(' '));\n", "language": "JavaScript"}
{"filename": "p02583_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x3853e4 = a0_0x5f3c;\nvar input = require('fs')[a0_0x3853e4(0x0)](a0_0x3853e4(0x1), a0_0x3853e4(0x2));\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction a0_0x550a() {\n    var _0x4a157b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'slice',\n        'map',\n        'push',\n        'length',\n        ']).fill().map(x=>{return\\x20',\n        ']).fill().map(x=>',\n        'log'\n    ];\n    a0_0x550a = function () {\n        return _0x4a157b;\n    };\n    return a0_0x550a();\n}\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction a0_0x5f3c(DCHeDR, key) {\n    var stringArray = a0_0x550a();\n    a0_0x5f3c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f3c(DCHeDR, key);\n}\nfunction nexts(n, a) {\n    var _0x2fe4aa = a0_0x5f3c;\n    return a ? cin[_0x2fe4aa(0x3)](cid, cid += n) : cin[_0x2fe4aa(0x3)](cid, cid += n)[_0x2fe4aa(0x4)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x3703af = a0_0x5f3c;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x3703af(0x5)](cin[_0x3703af(0x3)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x3703af(0x5)](cin[_0x3703af(0x3)](cid, cid += w)[_0x3703af(0x4)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x477142 = a0_0x5f3c;\n    var a = arguments, l = a[_0x477142(0x6)], r = 'Array(a[' + --l + _0x477142(0x7) + v + ';})';\n    while (--l)\n        r = 'Array(a[' + l + _0x477142(0x8) + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x3853e4(0x9)](String(myOut));\nfunction main() {\n    var n = next();\n    var l = nexts(n)['sort']((a, b) => a - b);\n    var ans = 0x0;\n    for (var i = 0x0; i < n; i++)\n        for (var j = i + 0x1; j < n; j++)\n            for (var k = j + 0x1; k < n; k++) {\n                if (l[i] === l[j] || l[j] === l[k])\n                    continue;\n                if (l[i] + l[j] > l[k])\n                    ans++;\n            }\n    return ans;\n}", "test_cases": [["5\n4 4 9 7 5", "5"], ["6\n4 5 4 3 3 5", "8"], ["10\n9 4 6 1 9 6 10 6 6 8", "39"], ["2\n1 1", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var l = nexts(n).sort((a,b)=>a-b);\n  var ans = 0;\n  for(var i = 0; i < n; i++)\n  for(var j = i+1; j < n; j++)\n  for(var k = j+1; k < n; k++){\n    if(l[i] === l[j] || l[j] === l[k])continue;\n    if(l[i] + l[j] > l[k])ans++;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p02584_1", "type": "JavaScript", "obfuscated": "const a0_0x22b9ed = a0_0x4759;\nconst input = require('fs')[a0_0x22b9ed(0x0)](a0_0x22b9ed(0x1), a0_0x22b9ed(0x2));\nconst lines = input[a0_0x22b9ed(0x3)]('\\x0a');\nlet [X, K, D] = lines[0x0][a0_0x22b9ed(0x3)]('\\x20')[a0_0x22b9ed(0x4)](Number);\nfunction a0_0x4759(WfQIai, key) {\n    const stringArray = a0_0x8d5c();\n    a0_0x4759 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4759(WfQIai, key);\n}\nX = Math[a0_0x22b9ed(0x5)](X);\nconst div = Math[a0_0x22b9ed(0x6)](Math['floor'](X / D), K);\nlet x = X - div * D;\nfunction a0_0x8d5c() {\n    const _0x2f6c6f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'abs',\n        'min',\n        'log'\n    ];\n    a0_0x8d5c = function () {\n        return _0x2f6c6f;\n    };\n    return a0_0x8d5c();\n}\nlet k = K - div;\nfor (let i = 0x0; i < k; i++) {\n    x -= D;\n    if (x <= 0x0) {\n        if (!((k - i) % 0x2)) {\n            x += D;\n        }\n        break;\n    }\n}\nconsole[a0_0x22b9ed(0x7)](Math['abs'](x));", "test_cases": [["6 2 4", "2"], ["7 4 3", "1"], ["10 1 2", "8"], ["1000000000000000 1000000000000000 1000000000000000", "1000000000000000"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nconst lines = input.split('\\n')\nlet [X, K, D] = lines[0].split(' ').map(Number)\n\nX = Math.abs(X)\nconst div = Math.min(Math.floor(X / D), K)\nlet x = X - div * D\nlet k = K - div\nfor (let i = 0; i < k; i++) {\n    x -= D\n    if (x <= 0) {\n        if (!((k - i) % 2)) {\n            x += D\n        }\n        break\n    }\n}\nconsole.log(Math.abs(x))", "language": "JavaScript"}
{"filename": "p02723_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0xfb4c() {\n    const _0x2fb778 = [\n        'Yes',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0xfb4c = function () {\n        return _0x2fb778;\n    };\n    return a0_0xfb4c();\n}\nconst a0_0x2f259d = a0_0x4fb0;\nfunction a0_0x4fb0(WkKGZC, key) {\n    const stringArray = a0_0xfb4c();\n    a0_0x4fb0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fb0(WkKGZC, key);\n}\nfunction main(inp) {\n    const _0x56aed2 = a0_0x4fb0;\n    let ans = 'No';\n    if (inp[0x2] === inp[0x3] && inp[0x4] === inp[0x5]) {\n        ans = _0x56aed2(0x0);\n    }\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x2f259d(0x1)]('/dev/stdin', a0_0x2f259d(0x2)));", "test_cases": [["sippuu", "Yes"], ["iphone", "No"], ["coffee", "Yes"]], "original": "'use strict'\nfunction main(inp) {\n  let ans = \"No\";\n  if(inp[2] === inp[3] && inp[4] === inp[5]){\n  \tans = \"Yes\"\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02759_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x519da9 = a0_0x3223;\nfunction a0_0x31ac() {\n    const _0x4a41c8 = [\n        'split',\n        'log',\n        'round',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x31ac = function () {\n        return _0x4a41c8;\n    };\n    return a0_0x31ac();\n}\nfunction main(input) {\n    const _0x25bfc0 = a0_0x3223;\n    input = input[_0x25bfc0(0x0)]('\\x0a');\n    const a = parseInt(input[0x0], 0xa);\n    console[_0x25bfc0(0x1)](Math[_0x25bfc0(0x2)](a / 0x2));\n}\nfunction a0_0x3223(SYgNwC, key) {\n    const stringArray = a0_0x31ac();\n    a0_0x3223 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3223(SYgNwC, key);\n}\nmain(require('fs')[a0_0x519da9(0x3)](a0_0x519da9(0x4), a0_0x519da9(0x5)));", "test_cases": [["5", "3"], ["2", "1"], ["100", "50"]], "original": "'use strict';\nfunction main(input) {\n  input = input.split(\"\\n\");\n  const a = parseInt(input[0], 10);\n  \n  console.log(Math.round(a / 2));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02779_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x568987 = a0_0x58f7;\nfunction a0_0x34cf() {\n    const _0x1dbfd5 = [\n        'trim',\n        'YES',\n        'slice',\n        'indexOf',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x34cf = function () {\n        return _0x1dbfd5;\n    };\n    return a0_0x34cf();\n}\nfunction a0_0x58f7(yYJjUF, key) {\n    const stringArray = a0_0x34cf();\n    a0_0x58f7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x58f7(yYJjUF, key);\n}\nfunction Main(input) {\n    const _0x7c3a37 = a0_0x58f7;\n    input = input[_0x7c3a37(0x0)]()['split']('\\x0a');\n    const N = Number(input[0x0]['trim']());\n    const A = input[0x1][_0x7c3a37(0x0)]()['split']('\\x20')['map'](Number);\n    let ret = _0x7c3a37(0x1);\n    for (let i = 0x0; i < N; i++) {\n        let tmp = A[_0x7c3a37(0x2)](i + 0x1);\n        let r = tmp[_0x7c3a37(0x3)](A[i]);\n        if (r !== -0x1) {\n            ret = 'NO';\n            break;\n        }\n    }\n    console[_0x7c3a37(0x4)](ret);\n}\nMain(require('fs')['readFileSync'](a0_0x568987(0x5), a0_0x568987(0x6)));", "test_cases": [["5\n2 6 1 4 5", "YES"], ["6\n4 1 3 1 6 2", "NO"], ["2\n10000000 10000000", "NO"]], "original": "\"use strict\"\nfunction Main(input) {\n  input = input.trim().split('\\n');\n  const N = Number(input[0].trim());\n  const A = input[1].trim().split(' ').map(Number);\n  \n  let ret = 'YES';\n  for(let i=0; i<N; i++){\n    let tmp = A.slice(i+1);\n    let r = tmp.indexOf(A[i]);\n    if(r !== -1){\n      ret = 'NO';\n      break;\n    }\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02819_1", "type": "JavaScript", "obfuscated": "var a0_0x38986f = a0_0x50c2;\nvar fs = require('fs');\nfunction a0_0x50c2(upygsj, key) {\n    var stringArray = a0_0x2d34();\n    a0_0x50c2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50c2(upygsj, key);\n}\nvar inn = parseInt(fs['readFileSync'](0x0)[a0_0x38986f(0x0)]());\nfunction isPrime(n) {\n    var _0x3da153 = a0_0x50c2;\n    if (n <= 0x3)\n        return n > 0x1;\n    else if (n % 0x2 === 0x0 || n % 0x3 === 0x0)\n        return ![];\n    var i = 0x5;\n    while (Math[_0x3da153(0x1)](i, 0x2) <= n) {\n        if (n % i === 0x0 || n % (i + 0x2) === 0x0)\n            return ![];\n        i += 0x6;\n    }\n    return !![];\n}\nwhile (!isPrime(inn)) {\n    inn++;\n}\nconsole[a0_0x38986f(0x2)](inn);\nfunction a0_0x2d34() {\n    var _0x15f590 = [\n        'toString',\n        'pow',\n        'log'\n    ];\n    a0_0x2d34 = function () {\n        return _0x15f590;\n    };\n    return a0_0x2d34();\n}", "test_cases": [["20", "23"], ["2", "2"], ["99992", "100003"]], "original": "var fs = require('fs');\nvar inn = parseInt(fs.readFileSync(0).toString());\nfunction isPrime(n) {\n    if(n <= 3) return n > 1;\n    else if (n % 2 === 0 || n % 3 === 0) return false;\n    var i = 5;\n    while (Math.pow(i, 2) <= n) {\n        if (n % i === 0 || n % (i + 2) === 0) return false;\n        i += 6;\n    }\n    return true;\n}\nwhile (!isPrime(inn)) {\ninn++;\n}\nconsole.log(inn);", "language": "JavaScript"}
{"filename": "p02948_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5ade28 = a0_0x31b1;\nfunction a0_0x591a() {\n    const _0x22f7cb = [\n        'split',\n        'map',\n        'sort',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x591a = function () {\n        return _0x22f7cb;\n    };\n    return a0_0x591a();\n}\nfunction a0_0x31b1(yNCSoy, key) {\n    const stringArray = a0_0x591a();\n    a0_0x31b1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x31b1(yNCSoy, key);\n}\nfunction Main(input) {\n    const _0x5115a9 = a0_0x31b1;\n    const N = Number(input['split']('\\x0a')[0x0][_0x5115a9(0x0)]('\\x20')[0x0]);\n    const M = Number(input['split']('\\x0a')[0x0][_0x5115a9(0x0)]('\\x20')[0x1]);\n    const list = input[_0x5115a9(0x0)]('\\x0a')['slice'](0x1)[_0x5115a9(0x1)](x => x[_0x5115a9(0x0)]('\\x20')[_0x5115a9(0x1)](x => Number(x)))['filter'](x => x[0x0] <= M)[_0x5115a9(0x2)]((a, b) => {\n        if (a[0x1] === b[0x1]) {\n            return b[0x0] - a[0x0];\n        } else {\n            return b[0x1] - a[0x1];\n        }\n    });\n    let ans = 0x0;\n    let now = 0x0;\n    if (list[_0x5115a9(0x3)] === 0x0) {\n        console[_0x5115a9(0x4)](0x0);\n        return;\n    }\n    for (let i = 0x0; i < N; i++) {\n        if (now === M) {\n            break;\n        }\n        if (list[i][0x0] > M - now) {\n            continue;\n        }\n        ans += list[i][0x1];\n        now++;\n    }\n    console[_0x5115a9(0x4)](ans);\n}\nMain(require('fs')[a0_0x5ade28(0x5)](a0_0x5ade28(0x6), a0_0x5ade28(0x7))[a0_0x5ade28(0x8)]());", "test_cases": [["3 4\n4 3\n4 1\n2 2", "5"], ["5 3\n1 2\n1 3\n1 4\n2 1\n2 3", "10"], ["1 1\n2 1", "0"]], "original": "'use strict'\n\nfunction Main(input) {\n  const N = Number(input.split(\"\\n\")[0].split(\" \")[0])\n  const M = Number(input.split(\"\\n\")[0].split(\" \")[1])\n  const list = input.split(\"\\n\").slice(1)\n    .map(x => x.split(\" \")\n    .map(x => Number(x)))\n    .filter(x => x[0] <= M)\n    .sort((a, b) => {\n      if(a[1] === b[1]) {\n        return b[0] - a[0]\n      } else {\n        return b[1] - a[1]\n      }\n    })\n  \n  let ans = 0\n  let now = 0\n  if(list.length === 0) {\n    console.log(0)\n    return\n  }\n\n  for(let i=0; i<N; i++) {\n    if(now === M) {\n      break\n    }\n    if(list[i][0] > M-now) {\n      continue\n    }\n    ans += list[i][1]\n    now++\n  }\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim())\n", "language": "JavaScript"}
{"filename": "p02981_1", "type": "JavaScript", "obfuscated": "var a0_0x29ae9b = a0_0x20be;\nvar main = standardInput => {\n    var _0x4083e1 = a0_0x20be;\n    var lengthList = standardInput[_0x4083e1(0x0)]('\\x20');\n    var n = Number[_0x4083e1(0x1)](lengthList[0x0]);\n    var a = Number[_0x4083e1(0x1)](lengthList[0x1]);\n    var b = Number[_0x4083e1(0x1)](lengthList[0x2]);\n    if (n * a >= b) {\n        console[_0x4083e1(0x2)](b);\n    } else {\n        console[_0x4083e1(0x2)](n * a);\n    }\n};\nfunction a0_0x20be(VOXLoo, key) {\n    var stringArray = a0_0x3a73();\n    a0_0x20be = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x20be(VOXLoo, key);\n}\nmain(require('fs')[a0_0x29ae9b(0x3)](a0_0x29ae9b(0x4), a0_0x29ae9b(0x5)));\nfunction a0_0x3a73() {\n    var _0x5e3134 = [\n        'split',\n        'parseInt',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8'\n    ];\n    a0_0x3a73 = function () {\n        return _0x5e3134;\n    };\n    return a0_0x3a73();\n}", "test_cases": [["4 2 9", "8"], ["4 2 7", "7"], ["4 2 8", "8"]], "original": "var main = (standardInput) => {\n    var lengthList = standardInput.split(' ');\n\tvar n = Number.parseInt(lengthList[0]);\n\tvar a = Number.parseInt(lengthList[1])\n    var b = Number.parseInt(lengthList[2])\n    \n    if ( n*a >= b){\n \t console.log(b);\n\t} else {\n  \t console.log(n*a)\n \t}\n    \t\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));", "language": "JavaScript"}
{"filename": "p03030_1", "type": "JavaScript", "obfuscated": "const a0_0x2d6dca = a0_0x193a;\nfunction a0_0x193a(YGjcgC, key) {\n    const stringArray = a0_0x827c();\n    a0_0x193a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x193a(YGjcgC, key);\n}\nfunction Main(input) {\n    'use strict';\n    const _0x4c9625 = a0_0x193a;\n    const temp = input[_0x4c9625(0x0)]('\\x0a');\n    const n = parseInt(temp[_0x4c9625(0x1)](), 0xa);\n    for (let i = 0x0; i < n; i++) {\n        temp[i] = temp[i]['split']('\\x20');\n        temp[i][_0x4c9625(0x2)](i + 0x1);\n        temp[i][0x1] = parseInt(temp[i][0x1], 0xa);\n    }\n    temp[_0x4c9625(0x3)]((a, b) => b[0x1] - a[0x1]);\n    temp[_0x4c9625(0x3)]((a, b) => {\n        if (a[0x0] < b[0x0])\n            return -0x1;\n        else if (a[0x0] > b[0x0])\n            return 0x1;\n        else\n            0x0;\n    });\n    const ans = temp['map'](e => e[0x2]);\n    console[_0x4c9625(0x4)](ans[_0x4c9625(0x5)]('\\x0a'));\n    return ![];\n}\nMain(require('fs')[a0_0x2d6dca(0x6)]('/dev/stdin', a0_0x2d6dca(0x7)));\nfunction a0_0x827c() {\n    const _0x575f17 = [\n        'split',\n        'shift',\n        'push',\n        'sort',\n        'log',\n        'join',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x827c = function () {\n        return _0x575f17;\n    };\n    return a0_0x827c();\n}", "test_cases": [["6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40", "3\n4\n6\n1\n5\n2"], ["10\nyakutsk 10\nyakutsk 20\nyakutsk 30\nyakutsk 40\nyakutsk 50\nyakutsk 60\nyakutsk 70\nyakutsk 80\nyakutsk 90\nyakutsk 100", "10\n9\n8\n7\n6\n5\n4\n3\n2\n1"]], "original": "function Main(input) {\n    'use strict';\n   \n    const temp = input.split(\"\\n\");\n   \n    const n = parseInt(temp.shift(), 10);\n    for(let i = 0; i < n; i++){\n      temp[i] = temp[i].split(\" \");\n      temp[i].push(i + 1);\n      temp[i][1] = parseInt(temp[i][1],10)\n    }\n   \n    temp.sort((a,b) => b[1] - a[1]);\n    temp.sort((a,b) => {\n      if(a[0] < b[0]) return -1;\n      else if(a[0] > b[0]) return 1;\n      else 0;\n    });\n    \n    // temp.forEach(e => console.log(e[2]))\n    const ans = temp.map(e => e[2]);\n    console.log(ans.join(\"\\n\"));\n    return false;\n}\n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\n  Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03290_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x48f5(gRsXnp, key) {\n    const stringArray = a0_0x4d58();\n    a0_0x48f5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x48f5(gRsXnp, key);\n}\nconst a0_0x856f69 = a0_0x48f5;\nfunction a0_0x4d58() {\n    const _0x5ad7c6 = [\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'pow',\n        'ceil',\n        'push',\n        'min',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4d58 = function () {\n        return _0x5ad7c6;\n    };\n    return a0_0x4d58();\n}\nfunction main(input) {\n    const _0x1b45ff = a0_0x48f5;\n    input = input[_0x1b45ff(0x0)]()[_0x1b45ff(0x1)]('\\x0a');\n    const DG = input[_0x1b45ff(0x2)]()[_0x1b45ff(0x1)]('\\x20')[_0x1b45ff(0x3)](v => Number(v));\n    input = input[_0x1b45ff(0x3)](v => v[_0x1b45ff(0x1)]('\\x20')['map'](v => Number(v)));\n    const calc = (a, r) => {\n        const _0x222d6c = a0_0x48f5;\n        let count = [Math[_0x222d6c(0x4)](0xa, 0x8)];\n        for (let i = 0x0; i < DG[0x0]; i++) {\n            const cur = Math[_0x222d6c(0x4)](0x2, i);\n            if ((a & cur) === cur) {\n                const points = (i + 0x1) * 0x64;\n                let max = points * input[i][0x0] + input[i][0x1];\n                let num = Math[_0x222d6c(0x5)](r / points);\n                if (max < r) {\n                    count[_0x222d6c(0x6)](input[i][0x0] + calc(a - cur, r - max));\n                } else {\n                    count[_0x222d6c(0x6)](num < input[i][0x0] ? num : input[i][0x0]);\n                }\n            }\n        }\n        return Math[_0x222d6c(0x7)](...count);\n    };\n    console['log'](calc(Math[_0x1b45ff(0x4)](0x2, DG[0x0]) - 0x1, DG[0x1]));\n}\nmain(require('fs')['readFileSync'](a0_0x856f69(0x8), a0_0x856f69(0x9)));", "test_cases": [["2 700\n3 500\n5 800", "3"], ["2 2000\n3 500\n5 800", "7"], ["2 400\n3 500\n5 800", "2"], ["5 25000\n20 1000\n40 1000\n50 1000\n30 1000\n1 1000", "66"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  const DG = input.shift().split(' ').map(v => Number(v))\n  input = input.map(v => v.split(' ').map(v => Number(v)))\n  const calc = (a, r) => {\n    let count = [Math.pow(10, 8)]\n    for(let i = 0; i < DG[0]; i++) {\n      const cur = Math.pow(2, i)\n      if ((a & cur) === cur) {\n        const points = (i+1) * 100\n        let max = points * input[i][0] + input[i][1]\n        let num = Math.ceil(r / points)\n        if (max < r) {\n          count.push(input[i][0] + calc(a - cur, r - max))\n        } else {\n          count.push(num < input[i][0] ? num : input[i][0])\n        }\n      }\n    }\n    return Math.min(...count)\n  }\n  console.log(calc(Math.pow(2, DG[0]) - 1, DG[1]))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03407_1", "type": "JavaScript", "obfuscated": "function a0_0x2dc9(uPSFLg, key) {\n    var stringArray = a0_0x505e();\n    a0_0x2dc9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2dc9(uPSFLg, key);\n}\nvar a0_0x257f79 = a0_0x2dc9;\nfunction Main(s) {\n    var _0x5266f7 = a0_0x2dc9;\n    s = s['split']('\\x20')['map'](a => parseInt(a));\n    console['log'](s[0x0] + s[0x1] >= s[0x2] ? _0x5266f7(0x0) : 'No');\n}\nfunction a0_0x505e() {\n    var _0xe06a50 = [\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x505e = function () {\n        return _0xe06a50;\n    };\n    return a0_0x505e();\n}\nMain(require('fs')[a0_0x257f79(0x1)](a0_0x257f79(0x2), a0_0x257f79(0x3))[a0_0x257f79(0x4)]());", "test_cases": [["50 100 120", "Yes"], ["500 100 1000", "No"], ["19 123 143", "No"], ["19 123 142", "Yes"]], "original": "function Main(s) {\n\ts = s.split(\" \").map(a => parseInt(a));\n\t\n\tconsole.log(s[0] + s[1] >= s[2] ? \"Yes\" : \"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03447_1", "type": "JavaScript", "obfuscated": "const a0_0x3d5ebc = a0_0x5b5a;\nconst BKRT = '\\x0a';\nfunction a0_0x24f1() {\n    const _0x3bdda1 = [\n        'concat',\n        'split',\n        'shift',\n        'undefined',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'join',\n        'stack',\n        'message',\n        'string',\n        '<form>',\n        'append',\n        'map',\n        '<textarea>',\n        '<br>',\n        'body',\n        '\\x0a1234\\x0a150\\x0a100\\x0a'\n    ];\n    a0_0x24f1 = function () {\n        return _0x3bdda1;\n    };\n    return a0_0x24f1();\n}\nconst SPAC = '\\x20';\nconst NOSP = '';\nfunction a0_0x5b5a(HCJQpL, key) {\n    const stringArray = a0_0x24f1();\n    a0_0x5b5a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b5a(HCJQpL, key);\n}\nfunction Main(input) {\n    const _0x45a460 = a0_0x5b5a;\n    input = [][_0x45a460(0x0)](...input[_0x45a460(0x1)](BKRT)['map'](a => a[_0x45a460(0x1)](SPAC)));\n    const strShift = () => input[_0x45a460(0x2)]();\n    const intShift = () => ~~input[_0x45a460(0x2)]();\n    return ~~(intShift() - intShift()) % intShift();\n}\n((b, c, d) => a0_0x3d5ebc(0x3) != typeof require ? console[a0_0x3d5ebc(0x4)](Main(require('fs')[a0_0x3d5ebc(0x5)](a0_0x3d5ebc(0x6), a0_0x3d5ebc(0x7)))) : [\n    b = b[a0_0x3d5ebc(0x1)]('\\x0a')['slice'](0x1, -0x1)[a0_0x3d5ebc(0x8)]('\\x0a'),\n    c = (function () {\n        const _0x22d348 = a0_0x5b5a;\n        try {\n            return Main(b);\n        } catch (f) {\n            return f[_0x22d348(0x9)] || f[_0x22d348(0xa)];\n        }\n    }()),\n    d = typeof c,\n    a0_0x3d5ebc(0xb) == d || (c = JSON['stringify'](c)),\n    $(a0_0x3d5ebc(0xc))[a0_0x3d5ebc(0xd)]([\n        [\n            0xa,\n            b\n        ],\n        0x0,\n        [\n            0x1,\n            d\n        ],\n        0x0,\n        [\n            0xa,\n            c\n        ]\n    ][a0_0x3d5ebc(0xe)](f => $(f ? a0_0x3d5ebc(0xf) : a0_0x3d5ebc(0x10), f && {\n        'rows': f[0x0],\n        'cols': 0x28,\n        'text': f[0x1]\n    })))['appendTo'](a0_0x3d5ebc(0x11))\n])(a0_0x3d5ebc(0x12));", "test_cases": [["1234\n150\n100", "84"], ["1000\n108\n108", "28"], ["579\n123\n456", "0"], ["7477\n549\n593", "405"]], "original": "const BKRT = \"\\n\";\nconst SPAC = \" \";\nconst NOSP = \"\";\n\nfunction Main(input){\n\tinput = [].concat(...input.split(BKRT).map(a=>a.split(SPAC)));\n  const strShift = ()=>input.shift();\n  const intShift = ()=>~~input.shift();\n  \n  return ~~(intShift()-intShift())%intShift();\n}\n\n// If you are interested in the algorithms I used, \n// there is no need to read down from this line.\n\n((b,c,d)=>\"undefined\"!=typeof require?console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"))):[b=b.split(\"\\n\").slice(1,-1).join(\"\\n\"),c=function(){try{return Main(b)}catch(f){return f.stack||f.message}}(),d=typeof c,\"string\"==d||(c=JSON.stringify(c)),$(\"<form>\").append([[10,b],0,[1,d],0,[10,c]].map(f=>$(f?\"<textarea>\":\"<br>\",f&&{rows:f[0],cols:40,text:f[1]}))).appendTo(\"body\")])(`\n1234\n150\n100\n`);", "language": "JavaScript"}
{"filename": "p03565_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x337383 = a0_0x577d;\nfunction main(input) {\n    const _0x219d77 = a0_0x577d;\n    input = input[_0x219d77(0x0)](/\\n/);\n    let S = input[0x0][_0x219d77(0x0)]('');\n    const T = input[0x1][_0x219d77(0x0)]('');\n    const us = _0x219d77(0x1);\n    for (let i = S[_0x219d77(0x2)] - T[_0x219d77(0x2)]; i >= 0x0; i--) {\n        let x = 0x0;\n        for (let j = 0x0; j < T[_0x219d77(0x2)]; j++) {\n            if (S[i + j] == T[j] || S[i + j] == '?') {\n            } else {\n                x++;\n                continue;\n            }\n        }\n        if (x > 0x0)\n            continue;\n        for (let k = 0x0; k < T['length']; k++) {\n            S[i + k] = T[k];\n        }\n        for (let i = 0x0; i < S[_0x219d77(0x2)]; i++) {\n            S[i] = S[i] == '?' ? 'a' : S[i];\n        }\n        console[_0x219d77(0x3)](S = S[_0x219d77(0x4)](''));\n        return;\n    }\n    console[_0x219d77(0x3)](us);\n}\nfunction a0_0x38e1() {\n    const _0x124f3f = [\n        'split',\n        'UNRESTORABLE',\n        'length',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x38e1 = function () {\n        return _0x124f3f;\n    };\n    return a0_0x38e1();\n}\nfunction a0_0x577d(DnDxNL, key) {\n    const stringArray = a0_0x38e1();\n    a0_0x577d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x577d(DnDxNL, key);\n}\nmain(require('fs')[a0_0x337383(0x5)](a0_0x337383(0x6), 'utf8'));", "test_cases": [["?tc????\ncoder", "atcoder"], ["??p??d??\nabc", "UNRESTORABLE"]], "original": "\"use strict\"\n\nfunction main(input) {\n  input = input.split(/\\n/)\n  let S = input[0].split(\"\")\n  const T = input[1].split(\"\")\n  const us = \"UNRESTORABLE\"\n  // if (S.length < T.length) {\n  //   console.log(us)\n  //   return\n  // } else {\n  for (let i = S.length - T.length; i >= 0; i--) {\n    //\n    let x = 0\n    for (let j = 0; j < T.length; j++) {\n      //Tの区間の中で合致するかどうか\n      if (S[i + j] == T[j] || S[i + j] == \"?\") {\n        //この文字は合致、または?だからパス\n      } else {\n        //合致しない＞この区間は合致しない\n        x++\n        continue\n      }\n      //\n    }\n    //合致しなかったら次のforへ、合致したら次のステップへ\n    if (x > 0) continue\n\n    //Tで埋める\n    for (let k = 0; k < T.length; k++) {\n      S[i + k] = T[k]\n    }\n    //残りの?をaに変換 <todo> : 正規表現などで\n    // S = S.replace(/(.+)/, \"a\")\n    for (let i = 0; i < S.length; i++) {\n      S[i] = S[i] == \"?\" ? \"a\" : S[i]\n    }\n    console.log((S = S.join(\"\")))\n    return\n  }\n  // }\n  //\n  console.log(us)\n  //\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03605_1", "type": "JavaScript", "obfuscated": "var a0_0xea5120 = a0_0x19c9;\nprocess[a0_0xea5120(0x0)][a0_0xea5120(0x1)]();\nfunction a0_0x19c9(gzcwDD, key) {\n    var stringArray = a0_0x5156();\n    a0_0x19c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19c9(gzcwDD, key);\n}\nfunction a0_0x5156() {\n    var _0x4d3882 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end',\n        'log',\n        'Yes'\n    ];\n    a0_0x5156 = function () {\n        return _0x4d3882;\n    };\n    return a0_0x5156();\n}\nprocess[a0_0xea5120(0x0)][a0_0xea5120(0x2)](a0_0xea5120(0x3));\nvar g_input = '';\nprocess[a0_0xea5120(0x0)]['on'](a0_0xea5120(0x4), function (chunk) {\n    g_input += chunk;\n});\nprocess['stdin']['on'](a0_0xea5120(0x5), function () {\n    Main(g_input['split'](/\\r?\\n/));\n});\nfunction Main(input) {\n    var _0x80311a = a0_0x19c9;\n    if (input[0x0][0x0] === '9' || input[0x0][0x1] === '9') {\n        console[_0x80311a(0x6)](_0x80311a(0x7));\n    } else {\n        console[_0x80311a(0x6)]('No');\n    }\n    return 0x0;\n}", "test_cases": [["29", "Yes"], ["72", "No"], ["91", "Yes"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\n\nprocess.stdin.on('end', function() {\n    Main(g_input.split(/\\r?\\n/));\n});\n\nfunction Main(input) {\n\n    if (input[0][0] === '9' || input[0][1] === '9') {\n        console.log('Yes');\n    }\n    else {\n        console.log('No');\n    }\n\n    return 0;\n}\n\n", "language": "JavaScript"}
{"filename": "p03643_1", "type": "JavaScript", "obfuscated": "var a0_0x185486 = a0_0x3e69;\nfunction a0_0x1140() {\n    var _0x2aa3bd = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1140 = function () {\n        return _0x2aa3bd;\n    };\n    return a0_0x1140();\n}\nfunction Main(input) {\n    var _0x4d0540 = a0_0x3e69;\n    console[_0x4d0540(0x0)]('ABC' + input);\n}\nfunction a0_0x3e69(yzSpoX, key) {\n    var stringArray = a0_0x1140();\n    a0_0x3e69 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e69(yzSpoX, key);\n}\nMain(require('fs')['readFileSync'](a0_0x185486(0x1), a0_0x185486(0x2)));", "test_cases": [["100", "ABC100"], ["425", "ABC425"], ["999", "ABC999"]], "original": "function Main(input) {\n  console.log('ABC' + input);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03658_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x464e(vQFrGY, key) {\n    const stringArray = a0_0x43bc();\n    a0_0x464e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x464e(vQFrGY, key);\n}\nconst a0_0x2668b7 = a0_0x464e;\nconst Main = input => {\n    const _0x58d54a = a0_0x464e;\n    let xs = input['trim']()[_0x58d54a(0x0)]('\\x0a');\n    let N = Number(xs[0x0]['split']('\\x20')[0x0]);\n    let K = Number(xs[0x0][_0x58d54a(0x0)]('\\x20')[0x1]);\n    let l = [];\n    for (let i = 0x0; i < N; i++) {\n        l[_0x58d54a(0x1)](xs[0x1]['split']('\\x20')[i]);\n    }\n    const compare = (b, a) => {\n        return a - b;\n    };\n    l[_0x58d54a(0x2)](compare);\n    let ans = 0x0;\n    for (let i = 0x0; i < K; i++) {\n        ans += Number(l[i]);\n    }\n    console['log'](ans);\n};\nMain(require('fs')[a0_0x2668b7(0x3)](a0_0x2668b7(0x4), a0_0x2668b7(0x5)));\nfunction a0_0x43bc() {\n    const _0x54699b = [\n        'split',\n        'push',\n        'sort',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x43bc = function () {\n        return _0x54699b;\n    };\n    return a0_0x43bc();\n}", "test_cases": [["5 3\n1 2 3 4 5", "12"], ["15 14\n50 26 27 21 41 7 42 35 7 5 5 36 39 1 45", "386"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0].split(' ')[0]);\n   let K = Number(xs[0].split(' ')[1]);\n   let l = [];\n   for(let i=0; i<N; i++){\n   l.push(xs[1].split(' ')[i]);\n   }\n   const compare = (b, a)=>{ //関数名は何でもOK\n   return a - b;  //a - b 昇順 b - a 降順\n   }\n   l.sort(compare);\n   \n   let ans = 0;\n   for(let i=0; i<K; i++){\n     ans += Number(l[i]);\n   }  \n   console.log(ans);\n\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03745_1", "type": "JavaScript", "obfuscated": "var a0_0x105c6a = a0_0x3c1b;\nfunction a0_0x3c1b(OZReYr, key) {\n    var stringArray = a0_0x18a8();\n    a0_0x3c1b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c1b(OZReYr, key);\n}\n(function (stdin) {\n    input = stdin['split']('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var a = input[0x1]['split']('\\x20');\n    var ans = 0x1;\n    var up = ![];\n    var down = ![];\n    for (var i = 0x0; i < n - 0x1; i++) {\n        if (a[i] < a[i + 0x1]) {\n            up = !![];\n        }\n        if (a[i] > a[i + 0x1]) {\n            down = !![];\n        }\n        if (up && down) {\n            up = down = ![];\n            ans++;\n        }\n    }\n    console['log']('%d', ans);\n}(require('fs')[a0_0x105c6a(0x0)](a0_0x105c6a(0x1), 'utf8')));\nfunction a0_0x18a8() {\n    var _0x5c707f = [\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x18a8 = function () {\n        return _0x5c707f;\n    };\n    return a0_0x18a8();\n}", "test_cases": [["6\n1 2 3 2 2 1", "2"], ["9\n1 2 1 2 1 2 1 2 1", "5"], ["7\n1 2 3 2 1 999999999 1000000000", "3"]], "original": "(function(stdin){\n  input = stdin.split(\"\\n\");\n  var n = parseInt(input[0], 10);\n  var a = input[1].split(\" \");\n\n  var ans = 1;\n  var up = false;\n  var down = false;\n  for (var i = 0; i < n - 1; i++) {\n    if (a[i] < a[i + 1]) {\n      up = true;\n    }\n\n    if (a[i] > a[i + 1]) {\n      down = true;\n    }\n\n    if (up && down) {\n      up = down = false;\n      ans++;\n    }\n  }\n\n  console.log(\"%d\", ans);\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03999_1", "type": "JavaScript", "obfuscated": "function a0_0x4c8b(YkDBOE, key) {\n    var stringArray = a0_0x342e();\n    a0_0x4c8b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c8b(YkDBOE, key);\n}\nfunction a0_0x342e() {\n    var _0x4d668b = [\n        'length',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x342e = function () {\n        return _0x4d668b;\n    };\n    return a0_0x342e();\n}\nvar a0_0x565519 = a0_0x4c8b;\nfunction Main(s) {\n    var _0x385326 = a0_0x4c8b;\n    const sl = s[_0x385326(0x0)] - 0x1;\n    const sa = s[_0x385326(0x1)]('')[_0x385326(0x2)](a => parseInt(a));\n    var ans = 0x0;\n    for (var i = 0x0; i < 0x1 << sl; i++) {\n        var b = 0x0;\n        for (var j = 0x0; j < sl; j++) {\n            b += sa[j];\n            if (i & 0x1 << j) {\n                ans += b;\n                b = 0x0;\n            } else\n                b *= 0xa;\n        }\n        ans += b + sa[sl];\n    }\n    console[_0x385326(0x3)](ans);\n}\nMain(require('fs')[a0_0x565519(0x4)](a0_0x565519(0x5), a0_0x565519(0x6))[a0_0x565519(0x7)]());", "test_cases": [["125", "176"], ["9999999999", "12656242944"]], "original": "function Main(s) {\n  const sl = s.length - 1;\n  const sa = s.split(\"\").map(a => parseInt(a));\n  var ans = 0;\n  for(var i = 0; i < 1 << sl; i++){\n    var b = 0;\n    for(var j = 0; j < sl; j++){\n      b += sa[j];\n      if(i & 1 << j){\n        ans += b;\n        b = 0;\n      }\n      else b *= 10;\n    }\n    ans += b + sa[sl];\n }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p00023_1", "type": "JavaScript", "obfuscated": "var a0_0x2b0e94 = a0_0x233e;\nfunction a0_0x233e(YySxJk, key) {\n    var stringArray = a0_0x12c1();\n    a0_0x233e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x233e(YySxJk, key);\n}\nfunction a0_0x12c1() {\n    var _0x1a088f = [\n        'replace',\n        'split',\n        'shift',\n        'map',\n        'sqrt',\n        'pow',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x12c1 = function () {\n        return _0x1a088f;\n    };\n    return a0_0x12c1();\n}\n(function (input) {\n    var _0x16e0b5 = a0_0x233e;\n    var p = input[_0x16e0b5(0x0)](/\\n$/, '')[_0x16e0b5(0x1)]('\\x0a');\n    var n = Number(p['shift']());\n    for (var i = 0x0; i < n; i++) {\n        var args = p[_0x16e0b5(0x2)]()['split']('\\x20')[_0x16e0b5(0x3)](Number);\n        var xa = args[_0x16e0b5(0x2)]();\n        var ya = args[_0x16e0b5(0x2)]();\n        var ra = args['shift']();\n        var xb = args[_0x16e0b5(0x2)]();\n        var yb = args['shift']();\n        var rb = args[_0x16e0b5(0x2)]();\n        var d = Math[_0x16e0b5(0x4)](Math['pow'](xb - xa, 0x2) + Math[_0x16e0b5(0x5)](yb - ya, 0x2));\n        if (ra > d + rb) {\n            console[_0x16e0b5(0x6)](0x2);\n        } else if (rb > d + ra) {\n            console['log'](-0x2);\n        } else if (d < ra + rb) {\n            console[_0x16e0b5(0x6)](0x1);\n        } else {\n            console['log'](0x0);\n        }\n    }\n}(require('fs')[a0_0x2b0e94(0x7)]('/dev/stdin', 'utf8')));", "test_cases": [["2\n0.0 0.0 5.0 0.0 0.0 4.0\n0.0 0.0 2.0 4.1 0.0 2.0", "2\n0"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    var args = p.shift().split(' ').map(Number);\n    var xa = args.shift();\n    var ya = args.shift();\n    var ra = args.shift();\n    var xb = args.shift();\n    var yb = args.shift();\n    var rb = args.shift();\n    var d = Math.sqrt(Math.pow(xb - xa, 2) + Math.pow(yb - ya, 2));\n\n    if (ra > d + rb) {\n      console.log(2);\n    } else if (rb > d + ra) {\n      console.log(-2);\n    } else if (d < ra + rb) {\n      console.log(1);\n    } else {\n      console.log(0);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p01101_1", "type": "JavaScript", "obfuscated": "function a0_0xbc6b(ZLLkSK, key) {\n    const stringArray = a0_0x343c();\n    a0_0xbc6b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xbc6b(ZLLkSK, key);\n}\nfunction a0_0x343c() {\n    const _0x1e686c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'push',\n        'sort',\n        'log',\n        'NONE'\n    ];\n    a0_0x343c = function () {\n        return _0x1e686c;\n    };\n    return a0_0x343c();\n}\nconst a0_0x242c45 = a0_0xbc6b;\nconst input = require('fs')[a0_0x242c45(0x0)](a0_0x242c45(0x1), a0_0x242c45(0x2));\nconst lines = input[a0_0x242c45(0x3)]()['split']('\\x0a');\nwhile (line = lines[a0_0x242c45(0x4)]()) {\n    const [n, max] = line[a0_0x242c45(0x5)]('\\x20')['map'](Number);\n    if (n === 0x0 && max === 0x0) {\n        break;\n    }\n    const prices = lines[a0_0x242c45(0x4)]()[a0_0x242c45(0x5)]('\\x20')[a0_0x242c45(0x6)](Number);\n    const allSum = [];\n    prices['map']((priceA, indexA) => {\n        const _0x5e8b90 = a0_0xbc6b;\n        prices[_0x5e8b90(0x6)]((priceB, indexB) => {\n            const _0x26682d = a0_0xbc6b;\n            if (indexA !== indexB) {\n                const sum = priceA + priceB;\n                if (sum <= max) {\n                    allSum[_0x26682d(0x7)](sum);\n                }\n            }\n        });\n    });\n    const answer = allSum[a0_0x242c45(0x8)]((a, b) => b - a)[0x0];\n    if (answer) {\n        console['log'](answer);\n        continue;\n    }\n    console[a0_0x242c45(0x9)](a0_0x242c45(0xa));\n}", "test_cases": [["3 45\n10 20 30\n6 10\n1 2 5 8 9 11\n7 100\n11 34 83 47 59 29 70\n4 100\n80 70 60 50\n4 20\n10 5 10 16\n0 0", "40\n10\n99\nNONE\n20"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst lines = input.trim().split('\\n');\n\nwhile (line = lines.shift()) {\n\tconst [n, max] = line.split(' ').map(Number);\n\n\tif (n === 0 && max === 0) {break;}\n\n\tconst prices = lines.shift().split(' ').map(Number);\n\n\tconst allSum = [];\n\n\tprices.map((priceA, indexA) => {\n\t\t\tprices.map((priceB, indexB) => {\n\t\t\t\tif (indexA !== indexB) {\n\t\t\t\t\tconst sum = priceA + priceB;\n\n\t\t\t\t\tif(sum <= max) {\n\t\t\t\t\t\tallSum.push(sum);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t);\n\n\tconst answer = allSum.sort((a,b) => b - a)[0];\n\n\tif (answer) {\n\t\tconsole.log(answer);\n\t\tcontinue;\n\t}\n\n\tconsole.log('NONE');\n}\n\n", "language": "JavaScript"}
{"filename": "p02256_1", "type": "JavaScript", "obfuscated": "function a0_0x3ecc() {\n    var _0x3f5852 = [\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3ecc = function () {\n        return _0x3f5852;\n    };\n    return a0_0x3ecc();\n}\nfunction a0_0x3981(QmQAUC, key) {\n    var stringArray = a0_0x3ecc();\n    a0_0x3981 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3981(QmQAUC, key);\n}\nvar a0_0x2d4412 = a0_0x3981;\nfunction Main(input) {\n    var _0x10f149 = a0_0x3981;\n    var [a, b] = input['split']('\\x20')[_0x10f149(0x0)](Number);\n    if (b > a)\n        [a, b] = [\n            b,\n            a\n        ];\n    var r;\n    do {\n        r = a % b;\n        a = b;\n        b = r;\n    } while (r);\n    console['log'](a);\n}\nMain(require('fs')[a0_0x2d4412(0x1)](a0_0x2d4412(0x2), a0_0x2d4412(0x3)));", "test_cases": [["54 20", "2"], ["147 105", "21"]], "original": "function Main(input) {\n  var [a, b] = input.split(\" \").map(Number);\n  if(b > a) [a, b] = [b, a];\n  var r;\n  do {\n    r = a % b;\n    a = b;\n    b = r;\n  } while(r)\n  console.log(a);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p02390_1", "type": "JavaScript", "obfuscated": "function a0_0x4fa0() {\n    var _0x5eae99 = [\n        'readFileSync',\n        '/dev/stdin',\n        'floor',\n        'log'\n    ];\n    a0_0x4fa0 = function () {\n        return _0x5eae99;\n    };\n    return a0_0x4fa0();\n}\nvar a0_0x35b38b = a0_0x3a88;\nvar x = require('fs')[a0_0x35b38b(0x0)](a0_0x35b38b(0x1), 'utf8');\nx = parseInt(x, 0xa);\nfunction a0_0x3a88(QfsuLH, key) {\n    var stringArray = a0_0x4fa0();\n    a0_0x3a88 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a88(QfsuLH, key);\n}\nvar h = Math[a0_0x35b38b(0x2)](x / 0xe10);\nvar m = Math[a0_0x35b38b(0x2)](x % 0xe10 / 0x3c);\nvar s = x % 0xe10 % 0x3c;\nconsole[a0_0x35b38b(0x3)](h + ':' + m + ':' + s);", "test_cases": [["46979", "13:2:59"]], "original": "var x = require('fs').readFileSync('/dev/stdin', 'utf8');\nx = parseInt(x, 10)\nvar h = Math.floor(x / 3600)\nvar m = Math.floor((x % 3600) / 60)\nvar s = x % 3600 % 60;\nconsole.log(h + \":\" + m + \":\" + s);\n", "language": "JavaScript"}
{"filename": "p02570_1", "type": "JavaScript", "obfuscated": "const a0_0x13c91e = a0_0x1c39;\nfunction a0_0x1e52() {\n    const _0x4a5593 = [\n        'split',\n        '/dev/stdin',\n        'map',\n        'reduce'\n    ];\n    a0_0x1e52 = function () {\n        return _0x4a5593;\n    };\n    return a0_0x1e52();\n}\nfunction a0_0x1c39(bbFqZS, key) {\n    const stringArray = a0_0x1e52();\n    a0_0x1c39 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c39(bbFqZS, key);\n}\nfunction Main(raw_input) {\n    const _0x3f92c7 = a0_0x1c39;\n    const [line] = raw_input[_0x3f92c7(0x0)]('\\x0a');\n    const [d, t, s] = toNumArray(line);\n    let isYes = t * s >= d;\n    console['log'](isYes ? 'Yes' : 'No');\n}\nMain(require('fs')['readFileSync'](a0_0x13c91e(0x1), 'utf8'));\nfunction toNumArray(str, delimitor = '\\x20') {\n    const _0x2837e3 = a0_0x1c39;\n    return str['split'](delimitor)[_0x2837e3(0x2)](s => parseInt(s, 0xa));\n}\nfunction toBitIntArray(str, delimitor = '\\x20') {\n    const _0x7fd7de = a0_0x1c39;\n    return str[_0x7fd7de(0x0)](delimitor)[_0x7fd7de(0x2)](s => BigInt(s));\n}\nfunction toMatrix(array, delimitor = '\\x20') {\n    const _0x51ae83 = a0_0x1c39;\n    const result = array[_0x51ae83(0x2)](v => v['split'](delimitor));\n    return result;\n}\nfunction sum(n) {\n    const _0x4d9504 = a0_0x1c39;\n    return n[_0x4d9504(0x3)]((a, b) => a + b);\n}", "test_cases": [["1000 15 80", "Yes"], ["2000 20 100", "Yes"], ["10000 1 1", "No"]], "original": "/**\n * @param {String} raw_input 入力\n */\nfunction Main(raw_input) {\n\tconst [line] = raw_input.split(\"\\n\");\n\tconst [ d, t, s ] = toNumArray(line);\n\t\n\tlet isYes = t * s >= d;\n\tconsole.log(isYes ? 'Yes': 'No');\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n////////// ユーティリティ関数\n\n/**\n * 文字列を数値配列\n * @param {String} str 文字列\n */\nfunction toNumArray(str, delimitor = ' ') {\n\treturn str.split(delimitor).map(s => parseInt(s, 10));\n}\n\n/**\n * 文字列をVigInt配列に変換する\n * @param {String} str 文字列\n */\nfunction toBitIntArray(str, delimitor = ' ') {\n\treturn str.split(delimitor).map(s => BigInt(s));\n}\n\n/**\n * 2次元配列を返す\n * @param {Array<String>} array 1次元の文字列配列\n * @param {String} delimitor デリミタ\n */\nfunction toMatrix(array, delimitor = ' ') {\n\tconst result = array.map(v => v.split(delimitor));\n\treturn result;\n}\n\n/**\n * 合計を出す\n * @param {Array<Number>} n 数値配列\n */\nfunction sum(n) {\n\treturn n.reduce((a, b) => a + b);\n}", "language": "JavaScript"}
{"filename": "p02843_1", "type": "JavaScript", "obfuscated": "function a0_0x472b(xEWlrm, key) {\n    var stringArray = a0_0x33d5();\n    a0_0x472b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x472b(xEWlrm, key);\n}\nvar a0_0x361819 = a0_0x472b;\nfunction Main(input) {\n    var _0x229917 = a0_0x472b;\n    const n = input[_0x229917(0x0)]('\\x0a')[0x0];\n    var ans = 0x0;\n    if (n >= 0x9dd) {\n        ans = 0x1;\n        console['log'](ans);\n    } else {\n        for (var i = 0x1; i <= 0x19; i++) {\n            if (n >= i * 0x65 && n <= i * 0x69) {\n                ans = 0x1;\n                break;\n            }\n        }\n    }\n    console[_0x229917(0x1)](ans);\n}\nfunction a0_0x33d5() {\n    var _0x2fa1e5 = [\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x33d5 = function () {\n        return _0x2fa1e5;\n    };\n    return a0_0x33d5();\n}\nMain(require('fs')[a0_0x361819(0x2)]('/dev/stdin', a0_0x361819(0x3)));", "test_cases": [["615", "1"], ["217", "0"]], "original": "function Main(input) {\n    const n = input.split(\"\\n\")[0];\n    var ans = 0 \n    if (n >= 2525){\n        ans = 1\n        console.log(ans);\n    } else {\n        for(var i = 1; i <= 25; i++){\n            if (n >= i * 101 && n <= i* 105) {\n                ans = 1\n                break;\n            }\n        }\n    }\n    console.log(ans)\n    }    \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  ", "language": "JavaScript"}
{"filename": "p02859_1", "type": "JavaScript", "obfuscated": "var a0_0x2ccd23 = a0_0x427c;\nfunction a0_0x427c(NxPzZF, key) {\n    var stringArray = a0_0x37d4();\n    a0_0x427c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x427c(NxPzZF, key);\n}\nfunction a0_0x37d4() {\n    var _0xc4df48 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x37d4 = function () {\n        return _0xc4df48;\n    };\n    return a0_0x37d4();\n}\nconsole[a0_0x2ccd23(0x0)](Math['pow'](parseInt(require('fs')[a0_0x2ccd23(0x1)](a0_0x2ccd23(0x2), a0_0x2ccd23(0x3)), 0xa), 0x2));", "test_cases": [["2", "4"], ["100", "10000"]], "original": "console.log(Math.pow(parseInt(require('fs').readFileSync('/dev/stdin','utf8'),10),2))", "language": "JavaScript"}
{"filename": "p02860_1", "type": "JavaScript", "obfuscated": "function a0_0x58a8(AnuoBC, key) {\n    var stringArray = a0_0x3102();\n    a0_0x58a8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58a8(AnuoBC, key);\n}\nvar a0_0x33e450 = a0_0x58a8;\nfunction Main(input) {\n    var _0x24136b = a0_0x58a8;\n    var data = input['split']('\\x0a');\n    var split = parseInt(data[0x0]) / 0x2;\n    var cdn = [];\n    for (let i = 0x0; i < data[0x1][_0x24136b(0x0)]; i += split) {\n        cdn[_0x24136b(0x1)](data[0x1]['slice'](i, i + split));\n    }\n    if (cdn[0x0] == cdn[0x1]) {\n        console[_0x24136b(0x2)](_0x24136b(0x3));\n    } else {\n        console[_0x24136b(0x2)]('No');\n    }\n}\nMain(require('fs')[a0_0x33e450(0x4)](a0_0x33e450(0x5), 'utf8'));\nfunction a0_0x3102() {\n    var _0x4370ce = [\n        'length',\n        'push',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3102 = function () {\n        return _0x4370ce;\n    };\n    return a0_0x3102();\n}", "test_cases": [["6\nabcabc", "Yes"], ["6\nabcadc", "No"], ["1\nz", "No"]], "original": "function Main(input) {\n    var data = input.split(\"\\n\")\n    var split = parseInt(data[0])/2;\n\tvar cdn = [];\n\tfor (let i = 0; i < data[1].length; i+=split) {\n    \tcdn.push(data[1].slice(i, i+split));\n\t}\n\tif(cdn[0]==cdn[1]) {\n\t\tconsole.log('Yes');\n\t}else{\n\t\tconsole.log('No');\n\t}\n}\n\n// Don't edit this line!\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02951_1", "type": "JavaScript", "obfuscated": "var a0_0x5c5880 = a0_0x59c1;\nfunction Main(input) {\n    var _0x4c9f8e = a0_0x59c1;\n    var a, b, c;\n    a = Number(input[_0x4c9f8e(0x0)]('\\x0a')[0x0][_0x4c9f8e(0x0)]('\\x20')[0x0]);\n    b = Number(input[_0x4c9f8e(0x0)]('\\x0a')[0x0][_0x4c9f8e(0x0)]('\\x20')[0x1]);\n    c = Number(input[_0x4c9f8e(0x0)]('\\x0a')[0x0][_0x4c9f8e(0x0)]('\\x20')[0x2]);\n    console[_0x4c9f8e(0x1)](c - (a - b) > 0x0 ? c - (a - b) : 0x0);\n}\nMain(require('fs')[a0_0x5c5880(0x2)](a0_0x5c5880(0x3), a0_0x5c5880(0x4)));\nfunction a0_0x59c1(myJFcR, key) {\n    var stringArray = a0_0x33f2();\n    a0_0x59c1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59c1(myJFcR, key);\n}\nfunction a0_0x33f2() {\n    var _0xe9abd = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x33f2 = function () {\n        return _0xe9abd;\n    };\n    return a0_0x33f2();\n}", "test_cases": [["6 4 3", "1"], ["8 3 9", "4"], ["12 3 7", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var a,b,c;\n  a = Number(input.split('\\n')[0].split(' ')[0]);\n  b = Number(input.split('\\n')[0].split(' ')[1]);\n  c = Number(input.split('\\n')[0].split(' ')[2]);\n  console.log(c - (a - b) > 0 ? c - (a - b) : 0);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03006_1", "type": "JavaScript", "obfuscated": "function a0_0x39d7(qHHYhl, key) {\n    const stringArray = a0_0x1cfd();\n    a0_0x39d7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x39d7(qHHYhl, key);\n}\nconst a0_0x7c3bcb = a0_0x39d7;\nfunction Main(input) {\n    const _0x46422c = a0_0x39d7;\n    input = input[_0x46422c(0x0)]('\\x0a');\n    const n = +input[0x0];\n    if (n <= 0x2) {\n        console[_0x46422c(0x1)](0x1);\n        return;\n    }\n    const xy = input[_0x46422c(0x2)](0x1)[_0x46422c(0x3)](s => s[_0x46422c(0x0)]('\\x20')[_0x46422c(0x3)](n => +n));\n    const map = {};\n    xy[_0x46422c(0x4)](a => {\n        xy['forEach'](b => {\n            if (a === b)\n                return;\n            const vec = [\n                b[0x0] - a[0x0],\n                b[0x1] - a[0x1]\n            ];\n            const m = vec['join']('_');\n            map[m] = map[m] == null ? 0x1 : map[m] + 0x1;\n        });\n    });\n    const res = Object[_0x46422c(0x5)](map)[_0x46422c(0x6)]((r, xystr) => {\n        const count = map[xystr];\n        return count > r[0x0] ? [\n            count,\n            xystr\n        ] : [\n            r[0x0],\n            r[0x1]\n        ];\n    }, [\n        0x0,\n        ''\n    ]);\n    console['log'](0x1 + (n - 0x1) - res[0x0]);\n}\nMain(require('fs')[a0_0x7c3bcb(0x7)]('/dev/stdin', 'utf8'));\nfunction a0_0x1cfd() {\n    const _0x5c5d4a = [\n        'split',\n        'log',\n        'slice',\n        'map',\n        'forEach',\n        'keys',\n        'reduce',\n        'readFileSync'\n    ];\n    a0_0x1cfd = function () {\n        return _0x5c5d4a;\n    };\n    return a0_0x1cfd();\n}", "test_cases": [["2\n1 1\n2 2", "1"], ["3\n1 4\n4 6\n7 8", "1"], ["4\n1 1\n1 2\n2 1\n2 2", "2"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    const n = +input[0];\n  \n    if (n <= 2) {\n      console.log(1);\n      return;\n    }\n  \n    const xy = input.slice(1).map(s => s.split(' ').map(n => +n));\n    // [[x, y],[x, y],[]]\n  \n    const map = {};\n    xy.forEach(a => {\n      xy.forEach(b => {\n        if (a === b) return; // 自分自身の場合\n        \n        const vec = [b[0] - a[0], b[1] - a[1]];\n        const m = vec.join('_');\n        map[m] = map[m] == null ? 1 : map[m] + 1;\n      });\n    });\n\n\tconst res = Object.keys(map).reduce((r, xystr) => {\n\t\tconst count = map[xystr];\n        return count > r[0] ? [count, xystr] : [r[0], r[1]];\n    }, [0, '']);\n  \t\n//    const pq = res[1];\n    \n    \n    console.log(1 + (n - 1) - res[0]);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03164_1", "type": "JavaScript", "obfuscated": "var a0_0xc27086 = a0_0xa10b;\nvar MAX_VALUE = 0x3e8;\nvar inputRaw = require('fs')[a0_0xc27086(0x0)]('/dev/stdin', a0_0xc27086(0x1));\nvar rows = inputRaw[a0_0xc27086(0x2)]()['split']('\\x0a');\nvar row1 = rows[0x0][a0_0xc27086(0x3)]('\\x20')[a0_0xc27086(0x4)](Number);\nfunction a0_0x4047() {\n    var _0xf5cc5d = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'slice',\n        'from',\n        'fill',\n        'min',\n        'log'\n    ];\n    a0_0x4047 = function () {\n        return _0xf5cc5d;\n    };\n    return a0_0x4047();\n}\nvar N = row1[0x0];\nfunction a0_0xa10b(eZrCLc, key) {\n    var stringArray = a0_0x4047();\n    a0_0xa10b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xa10b(eZrCLc, key);\n}\nvar W = row1[0x1];\nvar list = rows[a0_0xc27086(0x5)](0x1)[a0_0xc27086(0x4)](r => r['split']('\\x20')[a0_0xc27086(0x4)](Number));\nvar dp = Array[a0_0xc27086(0x6)]({ 'length': N + 0x1 }, _ => Array(N * MAX_VALUE + 0x1)[a0_0xc27086(0x7)](0x0));\ndp[0x0] = Array(N * MAX_VALUE + 0x1)[a0_0xc27086(0x7)](Infinity);\ndp[0x0][0x0] = 0x0;\nfunction solve() {\n    var _0xd88ceb = a0_0xa10b;\n    for (var i = 0x0; i < N; i++) {\n        for (var j = 0x0; j <= N * MAX_VALUE; j++) {\n            if (list[i][0x1] <= j) {\n                var a = dp[i][j - list[i][0x1]] + list[i][0x0];\n                var b = dp[i][j];\n                dp[i + 0x1][j] = Math[_0xd88ceb(0x8)](a, b);\n            } else {\n                dp[i + 0x1][j] = dp[i][j];\n            }\n        }\n    }\n    var result = 0x0;\n    for (var i = 0x0; i <= N * MAX_VALUE; i++)\n        if (dp[N][i] <= W)\n            result = i;\n    return result;\n}\nconsole[a0_0xc27086(0x9)](solve());", "test_cases": [["3 8\n3 30\n4 50\n5 60", "90"], ["1 1000000000\n1000000000 10", "10"], ["6 15\n6 5\n5 6\n6 4\n6 6\n3 5\n7 2", "17"]], "original": "var MAX_VALUE = 1000;\n\nvar inputRaw = require('fs').readFileSync('/dev/stdin', 'utf8')\nvar rows = inputRaw.trim().split('\\n');\nvar row1 = rows[0].split(' ').map(Number);\nvar N = row1[0];\nvar W = row1[1];\nvar list = rows.slice(1).map(r => r.split(' ').map(Number));\nvar dp = Array.from({ length: N + 1 }, _ => Array( N * MAX_VALUE + 1).fill(0));\ndp[0] = Array( N * MAX_VALUE + 1).fill(Infinity)\ndp[0][0] = 0;\n// console.log(dp);\n\nfunction solve() {\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j <= N * MAX_VALUE; j++) {\n      if (list[i][1] <= j) {\n        var a = dp[i][j - list[i][1]] + list[i][0];\n        var b = dp[i][j];\n        dp[i + 1][j] = Math.min(a, b);\n      } else {\n        dp[i + 1][j] = dp[i][j];\n      }\n    }\n  }\n\n  var result = 0;\n  for (var i = 0; i <= N * MAX_VALUE; i++) if (dp[N][i] <= W) result = i;\n  return result;\n}\n\nconsole.log(solve());\n", "language": "JavaScript"}
{"filename": "p03166_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2806ba = a0_0x13e4;\nfunction a0_0x13e4(ueRUmI, key) {\n    const stringArray = a0_0x3200();\n    a0_0x13e4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13e4(ueRUmI, key);\n}\nconsole[a0_0x2806ba(0x0)](function (args) {\n    const _0x36b815 = a0_0x13e4;\n    const tmp = args['trim']()[_0x36b815(0x1)]('\\x0a')[_0x36b815(0x2)](r => r[_0x36b815(0x1)]('\\x20')['map'](v => v | 0x0));\n    const N = tmp[0x0][0x0], M = tmp[0x0][0x1];\n    const x = [], y = [];\n    for (let i = 0x0; i < M; i++) {\n        x[_0x36b815(0x3)](tmp[0x1 + i][0x0]);\n        y[_0x36b815(0x3)](tmp[0x1 + i][0x1]);\n    }\n    const dp = Array(M + 0x1)[_0x36b815(0x4)](0x0)['map'](_ => Array(N + 0x1)[_0x36b815(0x4)](0x0));\n    for (let i = 0x1; i <= M; i++) {\n        for (let j = 0x0; j < M; j++) {\n            dp[i][y[j]] = Math['max'](dp[i][y[j]], dp[i - 0x1][x[j]] + 0x1);\n        }\n    }\n    return Math[_0x36b815(0x5)](...dp[M])['toString']();\n}(require('fs')[a0_0x2806ba(0x6)](a0_0x2806ba(0x7), 'utf8')));\nfunction a0_0x3200() {\n    const _0x34f4dc = [\n        'log',\n        'split',\n        'map',\n        'push',\n        'fill',\n        'max',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3200 = function () {\n        return _0x34f4dc;\n    };\n    return a0_0x3200();\n}", "test_cases": [["4 5\n1 2\n1 3\n3 2\n2 4\n3 4", "3"], ["6 3\n2 3\n4 5\n5 6", "2"], ["5 8\n5 3\n2 3\n2 4\n5 2\n5 1\n1 4\n4 3\n1 3", "3"]], "original": "'use strict';\nconsole.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const N = tmp[0][0], M = tmp[0][1];\n  const x = [], y = [];\n  for ( let i = 0; i < M; i++ ) {\n    x.push( tmp[1+i][0] );\n    y.push( tmp[1+i][1] );\n  }\n  const dp = Array(M+1).fill(0).map(_=>Array(N+1).fill(0));\n  for ( let i = 1; i <= M; i++ ) {\n    for ( let j = 0; j < M; j++ ) {\n      dp[i][y[j]] = Math.max( dp[i][y[j]], dp[i-1][x[j]] + 1 );\n    }\n  }\n  return Math.max(...dp[M]).toString();\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03212_1", "type": "JavaScript", "obfuscated": "var a0_0x504d43 = a0_0x1a3a;\nfunction a0_0x5367() {\n    var _0x3e87c6 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5367 = function () {\n        return _0x3e87c6;\n    };\n    return a0_0x5367();\n}\nfunction a0_0x1a3a(UolZmY, key) {\n    var stringArray = a0_0x5367();\n    a0_0x1a3a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a3a(UolZmY, key);\n}\nfunction f(use, x, n, acc) {\n    if (x > n)\n        return acc;\n    if (use === 0x7)\n        acc += 0x1;\n    acc += f(use | 0x1, x * 0xa + 0x3, n, 0x0);\n    acc += f(use | 0x2, x * 0xa + 0x5, n, 0x0);\n    acc += f(use | 0x4, x * 0xa + 0x7, n, 0x0);\n    return acc;\n}\nfunction Main(input) {\n    var _0x779a8f = a0_0x1a3a;\n    var n = parseInt(input);\n    console[_0x779a8f(0x0)](f(0x0, 0x0, n, 0x0));\n}\nMain(require('fs')[a0_0x504d43(0x1)](a0_0x504d43(0x2), a0_0x504d43(0x3)));", "test_cases": [["575", "4"], ["3600", "13"], ["999999999", "26484"]], "original": "  function f(use, x, n, acc) {\n    if (x > n) return acc;\n    if (use === 0b111) acc += 1;\n    acc += f(use | 0b001, x * 10 + 3, n, 0);\n    acc += f(use | 0b010, x * 10 + 5, n, 0);\n   acc += f(use | 0b100, x * 10 + 7, n, 0);\n    return acc;\n  }\n\n  function Main(input) {\n    var n = parseInt(input);\n    console.log(f(0, 0, n, 0));\n  }\n\n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\n  Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03215_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3659d5 = a0_0x5ab7;\nfunction a0_0x5ab7(AbUYWA, key) {\n    const stringArray = a0_0x19d8();\n    a0_0x5ab7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ab7(AbUYWA, key);\n}\nfunction _(s) {\n    const _0x1a64e9 = a0_0x5ab7;\n    let l = s[_0x1a64e9(0x0)]('\\x0a');\n    if (l[l[_0x1a64e9(0x1)] - 0x1] == '')\n        l[_0x1a64e9(0x2)]();\n    this['l'] = l;\n    this['y'] = 0x0;\n}\nfunction a0_0x19d8() {\n    const _0x2781ec = [\n        'split',\n        'length',\n        'pop',\n        'ints',\n        'prototype',\n        'intv',\n        'slice',\n        'map',\n        'strv',\n        'strn',\n        '/dev/stdin',\n        'utf8',\n        'push',\n        'sort',\n        'filter',\n        'cnKqy',\n        'log'\n    ];\n    a0_0x19d8 = function () {\n        return _0x2781ec;\n    };\n    return a0_0x19d8();\n}\n_['prototype'][a0_0x3659d5(0x3)] = function () {\n    const _0x3b22b2 = a0_0x5ab7;\n    return this['l'][this['y']++][_0x3b22b2(0x0)]('\\x20')['map'](v => +v);\n};\n_[a0_0x3659d5(0x4)][a0_0x3659d5(0x5)] = function () {\n    const _0x1b2c08 = a0_0x5ab7;\n    const y = this['y'];\n    this['y'] = this['l'][_0x1b2c08(0x1)];\n    return this['l'][_0x1b2c08(0x6)](y)[_0x1b2c08(0x7)](v => +v);\n};\n_[a0_0x3659d5(0x4)][a0_0x3659d5(0x8)] = function () {\n    const _0x16e8f6 = a0_0x5ab7;\n    const y = this['y'];\n    this['y'] = this['l'][_0x16e8f6(0x1)];\n    return this['l'][_0x16e8f6(0x6)](y);\n};\n_[a0_0x3659d5(0x4)][a0_0x3659d5(0x9)] = function (n) {\n    const _0x2e6b93 = a0_0x5ab7;\n    const y = this['y'];\n    this['y'] += n;\n    return this['l'][_0x2e6b93(0x6)](y, y + n);\n};\nconst $ = new _(require('fs')['readFileSync'](a0_0x3659d5(0xa), a0_0x3659d5(0xb)));\n((() => {\n    const _0x16a44f = a0_0x5ab7;\n    const nk = $[_0x16a44f(0x3)]();\n    const n = nk[0x0];\n    const k = nk[0x1];\n    const a = $[_0x16a44f(0x3)]();\n    const rr = [];\n    for (let i = 0x0; i < n; i++) {\n        let s = 0x0;\n        for (let j = i; j < n; j++) {\n            s += a[j];\n            rr[_0x16a44f(0xc)](s);\n        }\n    }\n    rr[_0x16a44f(0xd)]((a, b) => b - a);\n    let res = 0x0;\n    for (let d = 0x29; d >= 0x0; d--) {\n        let border = 0x1 << d;\n        let num = rr[_0x16a44f(0xe)](e => (e & res + border) === res + border)[_0x16a44f(0x1)];\n        if (num >= k) {\n            if ('QdxDI' !== _0x16a44f(0xf)) {\n                res += border;\n            } else {\n                res += border;\n            }\n        }\n    }\n    console[_0x16a44f(0x10)](res);\n})());", "test_cases": [["4 2\n2 5 2 5", "12"], ["8 4\n9 1 8 2 7 5 6 4", "32"]], "original": "'use strict'\nfunction _(s){let l=s.split('\\n');if(l[l.length-1]=='')l.pop();this.l=l;this.y=0}\n_.prototype.ints = function(){return this.l[this.y++].split(' ').map(v=>+v)}\n_.prototype.intv = function(){const y=this.y;this.y=this.l.length;return this.l.slice(y).map(v=>+v)}\n_.prototype.strv = function(){const y=this.y;this.y=this.l.length;return this.l.slice(y)}\n_.prototype.strn = function(n){const y=this.y;this.y+=n;return this.l.slice(y,y+n)}\nconst $ = new _(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n(()=>{\n\nconst nk = $.ints()\nconst n = nk[0]\nconst k = nk[1]\nconst a = $.ints()\n\nconst rr = []\nfor(let i=0;i<n;i++){\n    let s = 0;\n    for(let j=i;j<n;j++){\n        s+=a[j]\n        rr.push(s)\n    }\n}\nrr.sort((a,b)=>b-a)\nlet res = 0\nfor(let d=41; d>=0; d--){\n    let border = 1 << d\n    let num = rr.filter(e=>(e&(res+border)) === (res+border)).length\n    if(num>=k){\n        res += border\n    }\n}\nconsole.log(res)\n\n\n\n\n})()", "language": "JavaScript"}
{"filename": "p03231_1", "type": "JavaScript", "obfuscated": "var a0_0x1b10ed = a0_0x2608;\nfunction toNum(str) {\n    return parseInt(str, 0xa);\n}\nfunction gcd(a, b) {\n    var _0x2a6be3 = a0_0x2608;\n    if (a % b === 0x0) {\n        if ('XMfJm' !== _0x2a6be3(0x0)) {\n            return b;\n        } else {\n            return a * b / gcd(a, b);\n        }\n    } else {\n        return gcd(b, a % b);\n    }\n}\nfunction lcm(a, b) {\n    return a * b / gcd(a, b);\n}\nfunction Main(input) {\n    var _0x4a7077 = a0_0x2608;\n    var N = toNum(input[_0x4a7077(0x1)]('\\x0a')[0x0][_0x4a7077(0x1)]('\\x20')[0x0]);\n    var M = toNum(input[_0x4a7077(0x1)]('\\x0a')[0x0][_0x4a7077(0x1)]('\\x20')[0x1]);\n    var S = input[_0x4a7077(0x1)]('\\x0a')[0x1];\n    var T = input[_0x4a7077(0x1)]('\\x0a')[0x2];\n    var L = lcm(N, M);\n    var flag = !![];\n    var X = [];\n    for (var i = 0x0; i < L; i++) {\n        if (_0x4a7077(0x2) === _0x4a7077(0x2)) {\n            X[_0x4a7077(0x3)]('');\n        } else {\n            if (a % b === 0x0) {\n                return b;\n            } else {\n                return gcd(b, a % b);\n            }\n        }\n    }\n    X[0x0] = S[0x0];\n    for (var i = 0x1; i < S['length']; i++) {\n        if (_0x4a7077(0x4) === _0x4a7077(0x5)) {\n            return gcd(b, a % b);\n        } else {\n            X[i * (L / N)] = S[i];\n        }\n    }\n    if (X[0x0] != T[0x0]) {\n        console[_0x4a7077(0x6)]('-1');\n    } else {\n        for (var i = 0x1; i < T[_0x4a7077(0x7)]; i++) {\n            if ('HlBMW' !== _0x4a7077(0x8)) {\n                if (X[i * (L / M)] != '' && X[i * (L / M)] != T[i]) {\n                    console[_0x4a7077(0x6)]('-1');\n                    flag = ![];\n                    break;\n                }\n            } else {\n                X[_0x4a7077(0x3)]('');\n            }\n        }\n    }\n    if (flag) {\n        if (_0x4a7077(0x9) === _0x4a7077(0xa)) {\n            return b;\n        } else {\n            console[_0x4a7077(0x6)](L);\n        }\n    }\n}\nfunction a0_0x2608(eLPZJL, key) {\n    var stringArray = a0_0x4c7c();\n    a0_0x2608 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2608(eLPZJL, key);\n}\nfunction a0_0x4c7c() {\n    var _0xccb114 = [\n        'aXMcf',\n        'split',\n        'dgqSe',\n        'push',\n        'YPwaB',\n        'qtzGx',\n        'log',\n        'length',\n        'ulMQT',\n        'KcyQR',\n        'QUJMc',\n        '/dev/stdin'\n    ];\n    a0_0x4c7c = function () {\n        return _0xccb114;\n    };\n    return a0_0x4c7c();\n}\nMain(require('fs')['readFileSync'](a0_0x1b10ed(0xb), 'utf8'));", "test_cases": [["3 2\nacp\nae", "6"], ["6 3\nabcdef\nabc", "-1"], ["15 9\ndnsusrayukuaiia\ndujrunuma", "45"]], "original": "function toNum(str) {\n\treturn parseInt(str, 10);\n}\n\n// 最大公約数\nfunction gcd(a, b) {\n\tif (a % b === 0) {\n\t\treturn b;\n\t} else {\n\t\treturn gcd(b, a % b);\n\t}\n}\n\n// 最小公倍数\nfunction lcm(a, b) {\n\treturn a * b / gcd(a, b);\n}\n\n// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar N = toNum(input.split('\\n')[0].split(' ')[0]);\n\tvar M = toNum(input.split('\\n')[0].split(' ')[1]);\n\tvar S = input.split('\\n')[1];\n\tvar T = input.split('\\n')[2];\n\tvar L = lcm(N, M);\n\tvar flag = true;\n\tvar X = [];\n\tfor ( var i = 0; i < L; i++) {\n\t\tX.push('');\n\t}\n\tX[0] = S[0];\n\tfor ( var i = 1; i < S.length; i++ ) {\n\t\tX[i * (L / N)] = S[i];\n\t}\n\tif ( X[0] != T[0] ) {\n\t\tconsole.log('-1');\n\t} else {\n\t\tfor (var i = 1; i < T.length; i++) {\n\t\t\tif (X[i * (L / M)] != '' && X[i * (L / M)] != T[i]) {\n\t\t\t\tconsole.log('-1');\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ( flag ) {\n\t\tconsole.log(L);\n\t}\n}\n\n// ※この行以降は編集しない (標準入力から一度に読み込みMainを呼び出します)\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03284_1", "type": "JavaScript", "obfuscated": "var a0_0x377f04 = a0_0x5648;\nfunction a0_0x5648(YpswaY, key) {\n    var stringArray = a0_0x2bea();\n    a0_0x5648 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5648(YpswaY, key);\n}\nfunction Main(input) {\n    var _0x5477e3 = a0_0x5648;\n    var N = input['split']('\\x20')[0x0];\n    var K = input[_0x5477e3(0x0)]('\\x20')[0x1];\n    N = parseInt(N, 0xa);\n    K = parseInt(K, 0xa);\n    var jud = N % K === 0x0;\n    if (jud) {\n        console[_0x5477e3(0x1)](0x0);\n    } else {\n        console[_0x5477e3(0x1)](0x1);\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x377f04(0x2), a0_0x377f04(0x3)));\nfunction a0_0x2bea() {\n    var _0x1c4b4a = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2bea = function () {\n        return _0x1c4b4a;\n    };\n    return a0_0x2bea();\n}", "test_cases": [["7 3", "1"], ["100 10", "0"], ["1 1", "0"]], "original": "function Main(input){\n  var N = input.split(\" \")[0];\n  var K = input.split(\" \")[1];\n  N = parseInt(N,10);\n  K = parseInt(K,10);\n\n  var jud = N%K === 0;\n  if(jud){\n    console.log(0);\n  }else{\n    console.log(1);\n  }\n}\n  Main(require('fs').readFileSync('/dev/stdin','utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03329_1", "type": "JavaScript", "obfuscated": "var a0_0x33ef63 = a0_0x2732;\nfunction equal(a, b) {\n    var _0x328a47 = a0_0x2732;\n    var aP = Object['getOwnPropertyNames'](a);\n    var bP = Object[_0x328a47(0x0)](b);\n    if (aP[_0x328a47(0x1)] != bP[_0x328a47(0x1)])\n        return ![];\n    for (var i = 0x0; i < aP[_0x328a47(0x1)]; i++)\n        if (a[aP[i]] !== b[aP[i]])\n            return ![];\n    return !![];\n}\nfunction a0_0x4604() {\n    var _0x1001ca = [\n        'getOwnPropertyNames',\n        'length',\n        'map',\n        'pow',\n        'min',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4604 = function () {\n        return _0x1001ca;\n    };\n    return a0_0x4604();\n}\nfunction pi(text) {\n    return parseInt(text, 0xa);\n}\nvar six = [\n    0x6,\n    0x5,\n    0x4,\n    0x3,\n    0x2,\n    0x1\n][a0_0x33ef63(0x2)](_ => Math['pow'](0x6, _));\nvar nine = [\n    0x5,\n    0x4,\n    0x3,\n    0x2,\n    0x1\n]['map'](_ => Math[a0_0x33ef63(0x3)](0x9, _));\nfunction count(i) {\n    var _0x2db5c3 = a0_0x2732;\n    if (i < 0x6)\n        return i;\n    if (i < 0x9)\n        return 0x1 + (i - 0x6);\n    return Math[_0x2db5c3(0x4)](count(i - six['find'](_ => _ <= i)) + 0x1, count(i - nine['find'](_ => _ <= i)) + 0x1);\n}\nfunction main(input) {\n    var _0x35be29 = a0_0x2732;\n    var i = pi(input);\n    console[_0x35be29(0x5)](count(i));\n}\nfunction a0_0x2732(bSMMSn, key) {\n    var stringArray = a0_0x4604();\n    a0_0x2732 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2732(bSMMSn, key);\n}\nmain(require('fs')['readFileSync'](a0_0x33ef63(0x6), a0_0x33ef63(0x7)));", "test_cases": [["127", "4"], ["3", "3"], ["44852", "16"]], "original": "function equal(a, b) {\n    var aP = Object.getOwnPropertyNames(a);\n    var bP = Object.getOwnPropertyNames(b);\n    if (aP.length != bP.length)\n        return false;\n    for (var i = 0; i < aP.length; i++)\n        if (a[aP[i]] !== b[aP[i]])\n            return false;\n    return true;\n}\nfunction pi(text) {\n    return parseInt(text, 10);\n}\nvar six = [6, 5, 4, 3, 2, 1].map(_ => Math.pow(6, _));\nvar nine = [5, 4, 3, 2, 1].map(_ => Math.pow(9, _));\nfunction count(i) {\n    if (i < 6)\n        return i;\n    if (i < 9)\n        return 1 + (i - 6);\n    return Math.min(count(i - six.find(_ => _ <= i)) + 1, count(i - nine.find(_ => _ <= i)) + 1);\n}\nfunction main(input) {\n    var i = pi(input);\n    console.log(count(i));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03449_1", "type": "JavaScript", "obfuscated": "function a0_0x34ed() {\n    const _0x36a44d = [\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x34ed = function () {\n        return _0x36a44d;\n    };\n    return a0_0x34ed();\n}\nconst a0_0x4bed42 = a0_0x308a;\nfunction Main(input) {\n    const _0x197e3a = a0_0x308a;\n    const setting = input[_0x197e3a(0x0)]()[_0x197e3a(0x1)]('\\x0a');\n    const process_sum = setting[0x0] - 0x0;\n    const up = setting[0x1]['split']('\\x20');\n    const down = setting[0x2]['split']('\\x20');\n    let answer = 0x0;\n    for (let process_up = 0x0; process_up < process_sum; process_up++) {\n        let process_down = process_sum - process_up - 0x1;\n        let candies = 0x0;\n        for (let i = 0x0; i <= process_up; i++) {\n            candies += parseInt(up[i]);\n        }\n        for (let i = 0x0; i <= process_down; i++) {\n            candies += parseInt(down[process_up + i]);\n        }\n        if (answer < candies) {\n            answer = candies;\n        }\n    }\n    console[_0x197e3a(0x2)](answer);\n}\nfunction a0_0x308a(vberkN, key) {\n    const stringArray = a0_0x34ed();\n    a0_0x308a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x308a(vberkN, key);\n}\nMain(require('fs')[a0_0x4bed42(0x3)](a0_0x4bed42(0x4), a0_0x4bed42(0x5)));", "test_cases": [["5\n3 2 2 4 1\n1 2 2 2 1", "14"], ["4\n1 1 1 1\n1 1 1 1", "5"], ["7\n3 3 4 5 4 5 3\n5 3 4 4 2 3 2", "29"], ["1\n2\n3", "5"]], "original": "function Main(input) {\n\tconst setting = input.trim().split('\\n')\n  const process_sum = setting[0] - 0\n  const up = setting[1].split(' ')\n  const down = setting[2].split(' ')\n\n  let answer = 0\n\n  for (let process_up = 0; process_up < process_sum; process_up++) {\n    let process_down = process_sum - process_up - 1\n    let candies = 0\n    for (let i = 0; i <= process_up; i++) {\n      candies += parseInt(up[i])\n    }\n\n    for (let i = 0; i <= process_down; i++) {\n      candies += parseInt(down[process_up + i])\n    }\n    if (answer < candies) {\n      answer = candies\n    }\n  }\n\n  console.log(answer)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03631_1", "type": "JavaScript", "obfuscated": "var a0_0x421011 = a0_0x21ec;\nfunction a0_0x21ec(UexVuB, key) {\n    var stringArray = a0_0x194f();\n    a0_0x21ec = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x21ec(UexVuB, key);\n}\nfunction a0_0x194f() {\n    var _0x4e446 = [\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x194f = function () {\n        return _0x4e446;\n    };\n    return a0_0x194f();\n}\nfunction Main(input) {\n    var _0x2e7d39 = a0_0x21ec;\n    var tmp = String(input);\n    var truecount = 0x0;\n    if (tmp[0x2] == tmp[0x0]) {\n        console[_0x2e7d39(0x0)](_0x2e7d39(0x1));\n    } else {\n        console[_0x2e7d39(0x0)]('No');\n    }\n}\nMain(require('fs')[a0_0x421011(0x2)](a0_0x421011(0x3), a0_0x421011(0x4)));", "test_cases": [["575", "Yes"], ["123", "No"], ["812", "No"]], "original": "function Main(input) {\n        var tmp = String(input);\n        var truecount = 0;\n        if(tmp[2] == tmp[0]) {\n           console.log(\"Yes\");\n        } else {\n           console.log(\"No\");\n        }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03633_1", "type": "JavaScript", "obfuscated": "function a0_0x5a6a(CxfYpl, key) {\n    var stringArray = a0_0x45b1();\n    a0_0x5a6a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a6a(CxfYpl, key);\n}\nfunction a0_0x45b1() {\n    var _0xd9f754 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map'\n    ];\n    a0_0x45b1 = function () {\n        return _0xd9f754;\n    };\n    return a0_0x45b1();\n}\nvar a0_0x33cffc = a0_0x5a6a;\nlog = console[a0_0x33cffc(0x0)];\nvar stdin = require('fs')[a0_0x33cffc(0x1)](a0_0x33cffc(0x2), 'UTF-8');\nvar lines = stdin[a0_0x33cffc(0x3)]('\\x0a');\nvar N = lines[0x0]['split']('\\x20')[a0_0x33cffc(0x4)](Number)[0x0];\nvar T = lines['slice'](0x1)['filter'](v => v !== '')[a0_0x33cffc(0x4)](Number);\nfunction gcd(a, b) {\n    if (b === 0x0)\n        return a;\n    return gcd(b, a % b);\n}\nfunction lcm(a, b) {\n    return a * b / gcd(a, b);\n}\nfor (var i = 0x1; i < N; i++) {\n    T[i] = lcm(T[i], T[i - 0x1]);\n}\nlog(T[N - 0x1]);", "test_cases": [["2\n2\n3", "6"], ["5\n2\n5\n10\n1000000000000000000\n1000000000000000000", "1000000000000000000"]], "original": "log = console.log;\n\nvar stdin = require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\");\nvar lines = stdin.split(\"\\n\");\nvar N = lines[0].split(\" \").map(Number)[0];\nvar T = lines\n  .slice(1)\n  .filter(v => v !== \"\")\n  .map(Number);\n\nfunction gcd(a,b){\n  if(b === 0) return a\n  return gcd(b,a % b)\n}\n\nfunction lcm(a,b){\n  return a * b / gcd(a,b)\n}\n\nfor(var i=1; i<N;i++){\n  T[i] = lcm(T[i],T[i-1])\n}\n\nlog(T[N-1])", "language": "JavaScript"}
{"filename": "p04011_1", "type": "JavaScript", "obfuscated": "var a0_0x438c1b = a0_0x2568;\nfunction a0_0x2568(UuQYWR, key) {\n    var stringArray = a0_0x4986();\n    a0_0x2568 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2568(UuQYWR, key);\n}\nprocess['stdin'][a0_0x438c1b(0x0)]();\nfunction a0_0x4986() {\n    var _0x1af6b3 = [\n        'resume',\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'split',\n        'initial_answer',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4986 = function () {\n        return _0x1af6b3;\n    };\n    return a0_0x4986();\n}\nprocess[a0_0x438c1b(0x1)][a0_0x438c1b(0x2)](a0_0x438c1b(0x3));\nfunction Main(input) {\n    var _0x5abed4 = a0_0x2568;\n    var arg = input[_0x5abed4(0x4)]('\\x0a');\n    var line0 = arg[0x0][_0x5abed4(0x4)]('\\x20');\n    var line1 = arg[0x1][_0x5abed4(0x4)]('\\x20');\n    var line2 = arg[0x2][_0x5abed4(0x4)]('\\x20');\n    var line3 = arg[0x3][_0x5abed4(0x4)]('\\x20');\n    var input1 = Number(line0[0x0]);\n    var input2 = Number(line1[0x0]);\n    var input3 = Number(line2[0x0]);\n    var input4 = Number(line3[0x0]);\n    var ans = _0x5abed4(0x5);\n    if (input1 < input2)\n        console[_0x5abed4(0x6)](input3 * input1);\n    else\n        console[_0x5abed4(0x6)](input3 * input2 + (input1 - input2) * input4);\n}\nMain(require('fs')[a0_0x438c1b(0x7)](a0_0x438c1b(0x8), a0_0x438c1b(0x3)));", "test_cases": [["5\n3\n10000\n9000", "48000"], ["2\n3\n10000\n9000", "20000"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var arg   = input.split(\"\\n\");\n  var line0 = arg[0].split(\" \");\n  var line1 = arg[1].split(\" \");\n  var line2 = arg[2].split(\" \");\n  var line3 = arg[3].split(\" \");\n\n  var input1 = Number(line0[0]);\n  var input2 = Number(line1[0]);\n  var input3 = Number(line2[0]);\n  var input4 = Number(line3[0]);\n//  var a = input2;\n  //var b = input3;\n\n  var ans = \"initial_answer\";\n  //console.log( \"[INPUT] \"+ input1 +\" \"+ input2 +\" \"+ input3 + \" \" + input4 );\n  \n  // LOGIC //\n\n  if(input1 < input2) console.log( input3 * input1);\n  else console.log( input3 * input2 + ((input1 - input2) * input4) );\n\n\n  \n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p00003_1", "type": "JavaScript", "obfuscated": "var a0_0x1721fe = a0_0x479f;\nprocess[a0_0x1721fe(0x0)][a0_0x1721fe(0x1)]();\nfunction a0_0x1cd6() {\n    var _0x5b0165 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'toString',\n        'sort',\n        'log',\n        'YES'\n    ];\n    a0_0x1cd6 = function () {\n        return _0x5b0165;\n    };\n    return a0_0x1cd6();\n}\nfunction a0_0x479f(yRuTcO, key) {\n    var stringArray = a0_0x1cd6();\n    a0_0x479f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x479f(yRuTcO, key);\n}\nprocess[a0_0x1721fe(0x0)][a0_0x1721fe(0x2)](a0_0x1721fe(0x3));\nprocess[a0_0x1721fe(0x0)]['on'](a0_0x1721fe(0x4), function (chunk) {\n    var _0x683a86 = a0_0x479f;\n    var aaa = chunk[_0x683a86(0x5)]();\n    var line = aaa['split']('\\x0a');\n    line['shift']();\n    for (var i in line) {\n        var l = line[i]['split']('\\x20');\n        for (var i in l) {\n            l[i] = new Number(l[i]);\n        }\n        l[_0x683a86(0x6)](function (a, b) {\n            if (a > b)\n                return -0x1;\n            if (a < b)\n                return 0x1;\n            return 0x0;\n        });\n        var num1 = new Number(l[0x0]) * new Number(l[0x0]);\n        var num2 = new Number(l[0x1]) * new Number(l[0x1]);\n        var num3 = new Number(l[0x2]) * new Number(l[0x2]);\n        var num4 = num2 + num3;\n        if (num1 === num4) {\n            console[_0x683a86(0x7)](_0x683a86(0x8));\n        } else {\n            console['log']('NO');\n        }\n    }\n});", "test_cases": [["3\n4 3 5\n4 3 6\n8 8 8", "YES\nNO\nNO"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    var aaa = chunk.toString();\n    var line = aaa.split(\"\\n\")\n    //line.pop();\n    line.shift();\n    for(var i in line){\n        var l = line[i].split(\" \")\n        for(var i in l){\n            l[i] = new Number(l[i]);\n        }\n        l.sort(function(a,b){\n            if( a > b ) return -1;\n            if( a < b ) return 1;\n            return 0;\n        });\n        var num1 = new Number(l[0]) *new Number(l[0]);\n        var num2 = new Number(l[1])*new Number(l[1]);\n        var num3 = new Number(l[2])*new Number(l[2]);\n        var num4 = num2+num3;\n        if(num1 === num4){\n            console.log(\"YES\");\n        }else{\n            console.log(\"NO\")\n            \n        }\n    }\n});", "language": "JavaScript"}
{"filename": "p02258_1", "type": "JavaScript", "obfuscated": "var a0_0x1a31f3 = a0_0x3f9b;\nfunction main(input) {\n    var _0x1604c3 = a0_0x3f9b;\n    input = input['split']('\\x0a');\n    var values = input[_0x1604c3(0x0)](function (v) {\n        return parseInt(v);\n    });\n    var min = Number[_0x1604c3(0x1)], val = -Number[_0x1604c3(0x1)];\n    var N = values[0x0];\n    for (var i = 0x1; i <= N - 0x1; i++) {\n        if (min >= values[i]) {\n            min = values[i];\n        }\n        if (values[i + 0x1] - min >= val) {\n            val = values[i + 0x1] - min;\n        }\n    }\n    console['log'](val);\n    return val;\n}\nmain(require('fs')[a0_0x1a31f3(0x2)](a0_0x1a31f3(0x3), a0_0x1a31f3(0x4)));\nfunction a0_0x3f9b(yVhNOt, key) {\n    var stringArray = a0_0x565b();\n    a0_0x3f9b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f9b(yVhNOt, key);\n}\nfunction a0_0x565b() {\n    var _0x5769b7 = [\n        'map',\n        'MAX_VALUE',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x565b = function () {\n        return _0x5769b7;\n    };\n    return a0_0x565b();\n}", "test_cases": [["6\n5\n3\n1\n3\n4\n3", "3"], ["3\n4\n3\n2", "-1"]], "original": "function main(input) {\n  input = input.split(\"\\n\");\n  var values = input.map(function(v) { return parseInt(v); });\n\n  var min = Number.MAX_VALUE, val = -Number.MAX_VALUE;\n  var N = values[0];\n  for (var i = 1; i <= N-1; i++) {\n    if (min >= values[i]) {\n      min = values[i];\n    }\n    if (values[i+1] - min >= val) {\n      val = values[i+1] - min;\n    }\n  }\n  console.log(val);\n  return val;\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02415_1", "type": "JavaScript", "obfuscated": "var a0_0x486e85 = a0_0x54e6;\nfunction a0_0x46df() {\n    var _0x69cdfe = [\n        'log',\n        'replace',\n        'split',\n        'match',\n        'toUpperCase',\n        'toLowerCase',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x46df = function () {\n        return _0x69cdfe;\n    };\n    return a0_0x46df();\n}\nfunction a0_0x54e6(iRhvEU, key) {\n    var stringArray = a0_0x46df();\n    a0_0x54e6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x54e6(iRhvEU, key);\n}\n(function (input) {\n    var _0x10150e = a0_0x54e6;\n    console[_0x10150e(0x0)](input[_0x10150e(0x1)](/\\n$/, '')[_0x10150e(0x2)]('')['map'](function (e) {\n        var _0x2bb73e = a0_0x54e6;\n        if (e[_0x2bb73e(0x3)](/[a-z]/)) {\n            return e[_0x2bb73e(0x4)]();\n        } else if (e[_0x2bb73e(0x3)](/[A-Z]/)) {\n            return e[_0x2bb73e(0x5)]();\n        }\n        return e;\n    })[_0x10150e(0x6)](''));\n}(require('fs')[a0_0x486e85(0x7)](a0_0x486e85(0x8), a0_0x486e85(0x9))));", "test_cases": [["fAIR, LATER, OCCASIONALLY CLOUDY.", "Fair, later, occasionally cloudy."]], "original": "(function(input) {\n    console.log(input.replace(/\\n$/, '').split('').map(function(e) {\n        if (e.match(/[a-z]/)) {\n            return e.toUpperCase();\n        } else if (e.match(/[A-Z]/)) {\n            return e.toLowerCase();\n        }\n        return e;\n    }).join(''));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02725_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x192ed6 = a0_0x1cae;\nfunction a0_0x1cae(hDBShd, key) {\n    const stringArray = a0_0x548c();\n    a0_0x1cae = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1cae(hDBShd, key);\n}\nfunction main(input) {\n    const _0x371601 = a0_0x1cae;\n    const args = input[_0x371601(0x0)]('\\x0a')[0x0];\n    const a = input['split']('\\x0a')[0x1];\n    let as = a[_0x371601(0x0)]('\\x20');\n    const K = Number(args[_0x371601(0x0)]('\\x20')[0x0]);\n    const N = Number(args[_0x371601(0x0)]('\\x20')[0x1]);\n    let ans = 0x0;\n    const kh = Math[_0x371601(0x1)](K / 0x2);\n    for (let i = 0x0; i < N; i++) {\n        ans += Math[_0x371601(0x2)](0x0 - as[i]) > Math[_0x371601(0x2)](kh - as[i]) ? Math[_0x371601(0x2)](kh - as[i]) : Math[_0x371601(0x2)](0x0 - as[i]);\n    }\n    console[_0x371601(0x3)](ans);\n}\nmain(require('fs')['readFileSync'](a0_0x192ed6(0x4), a0_0x192ed6(0x5)));\nfunction a0_0x548c() {\n    const _0x36fb32 = [\n        'split',\n        'floor',\n        'abs',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x548c = function () {\n        return _0x36fb32;\n    };\n    return a0_0x548c();\n}", "test_cases": [["20 3\n5 10 15", "10"], ["20 3\n0 5 15", "10"]], "original": "\"use strict\"\n// input\nfunction main(input) {\n    const args = input.split('\\n')[0];\n    const a = input.split('\\n')[1];\n    let as = a.split(' ');\n    \n    const K = Number(args.split(' ')[0]);\n    const N = Number(args.split(' ')[1]);\n    let ans = 0;\n    const kh = Math.floor(K / 2);\n    for (let i = 0; i < N; i++) {\n        ans += Math.abs(0 - as[i]) > Math.abs(kh - as[i]) ? Math.abs(kh - as[i]) : Math.abs(0 - as[i]);\n    }\n    console.log(ans);\n}\n\n// output\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02820_1", "type": "JavaScript", "obfuscated": "function a0_0x4e87(ucwkJG, key) {\n    var stringArray = a0_0x12af();\n    a0_0x4e87 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e87(ucwkJG, key);\n}\nvar a0_0x2cb2d9 = a0_0x4e87;\nfunction a0_0x12af() {\n    var _0x57b3bb = [\n        'split',\n        'slice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x12af = function () {\n        return _0x57b3bb;\n    };\n    return a0_0x12af();\n}\nfunction Main(input) {\n    var _0x39b5e9 = a0_0x4e87;\n    input = input[_0x39b5e9(0x0)]('\\x0a');\n    var tmp0 = input[0x0][_0x39b5e9(0x0)]('\\x20');\n    var N = tmp0[0x0] - 0x0;\n    var K = tmp0[0x1] - 0x0;\n    var tmp1 = input[0x1][_0x39b5e9(0x0)]('\\x20');\n    var point = {\n        'r': tmp1[0x2] - 0x0,\n        's': tmp1[0x0] - 0x0,\n        'p': tmp1[0x1] - 0x0\n    };\n    var str = input[0x2];\n    var sum = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var char = str[i];\n        var charBK = '';\n        if (i - K >= 0x0) {\n            charBK = str[i - K];\n        }\n        if (char == charBK) {\n            str = str[_0x39b5e9(0x1)](0x0, i) + 'B' + str[_0x39b5e9(0x1)](i + 0x1);\n            continue;\n        }\n        sum += point[char];\n    }\n    console['log'](sum);\n}\nMain(require('fs')[a0_0x2cb2d9(0x2)](a0_0x2cb2d9(0x3), a0_0x2cb2d9(0x4)));", "test_cases": [["5 2\n8 7 6\nrsrpr", "27"], ["7 1\n100 10 1\nssssppr", "211"], ["30 5\n325 234 123\nrspsspspsrpspsppprpsprpssprpsr", "4996"]], "original": "function Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  \n  //入力データ取得\n  var tmp0 = input[0].split(\" \");\n  var N = tmp0[0] - 0;\n  var K = tmp0[1] - 0;\n  var tmp1 = input[1].split(\" \");\n  \n  var point = {r:tmp1[2]-0,s:tmp1[0]-0,p:tmp1[1]-0};\n  var str = input[2];\n  var sum = 0;\n  \n  for(var i=0; i<N; i++){\n    var char = str[i];\n    var charBK = \"\";\n    if(i-K >= 0){\n      charBK = str[i-K];\n    }\n    if(char == charBK){\n      str = str.slice(0,i) + 'B' + str.slice(i+1);\n      continue;\n    }\n    sum += point[char];\n  }\n  //出力\n  console.log(sum);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02835_1", "type": "JavaScript", "obfuscated": "var a0_0x576c40 = a0_0x5d3d;\nfunction a0_0x58cd() {\n    var _0x4ae146 = [\n        'split',\n        'log',\n        'bust',\n        'win',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x58cd = function () {\n        return _0x4ae146;\n    };\n    return a0_0x58cd();\n}\nfunction a0_0x5d3d(JxAnNL, key) {\n    var stringArray = a0_0x58cd();\n    a0_0x5d3d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5d3d(JxAnNL, key);\n}\nfunction Main(input) {\n    var _0x3caa66 = a0_0x5d3d;\n    input = input[_0x3caa66(0x0)]('\\x20');\n    tmp = parseInt(input[0x0]) + parseInt(input[0x1]) + parseInt(input[0x2]);\n    if (tmp > 0x15) {\n        console[_0x3caa66(0x1)](_0x3caa66(0x2));\n    } else {\n        console[_0x3caa66(0x1)](_0x3caa66(0x3));\n    }\n}\nMain(require('fs')[a0_0x576c40(0x4)](a0_0x576c40(0x5), 'utf8'));", "test_cases": [["5 7 9", "win"], ["13 7 2", "bust"]], "original": "function Main(input){\n    input = input.split(\" \");\n    tmp = parseInt(input[0]) + parseInt(input[1]) + parseInt(input[2]);\n    if(tmp > 21){\n     console.log(\"bust\");   \n    }else{\n     console.log(\"win\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02837_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xaa4740 = a0_0x3884;\nfunction a0_0x6248() {\n    const _0x42af0b = [\n        'log',\n        'split',\n        'shift',\n        'splice',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x6248 = function () {\n        return _0x42af0b;\n    };\n    return a0_0x6248();\n}\nfunction a0_0x3884(FkOhQJ, key) {\n    const stringArray = a0_0x6248();\n    a0_0x3884 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3884(FkOhQJ, key);\n}\nconsole[a0_0xaa4740(0x0)](function (args) {\n    const _0x3639e5 = a0_0x3884;\n    const _tmp = args['trim']()[_0x3639e5(0x1)]('\\x0a');\n    const N = _tmp[_0x3639e5(0x2)]() | 0x0;\n    const A = [], x = [], y = [];\n    for (let i = 0x0; i < N; i++) {\n        A[i] = _tmp['shift']() | 0x0;\n        x[i] = [];\n        y[i] = [];\n        for (let j = 0x0; j < A[i]; j++) {\n            const xy = _tmp[j][_0x3639e5(0x1)]('\\x20');\n            x[i][j] = xy[0x0] - 0x1;\n            y[i][j] = xy[0x1] | 0x0;\n        }\n        _tmp[_0x3639e5(0x3)](0x0, A[i]);\n    }\n    let K = 0x0;\n    TEST:\n        for (let honest = 0x1; honest < 0x1 << N; honest++) {\n            let k = 0x0;\n            for (let i = 0x0; i < N; i++) {\n                if (!(honest & 0x1 << i))\n                    continue;\n                k++;\n                for (let j = 0x0; j < A[i]; j++) {\n                    const Xij = x[i][j], Yij = y[i][j];\n                    const target = honest & 0x1 << Xij;\n                    if (target !== Yij << Xij)\n                        continue TEST;\n                }\n            }\n            if (k > K)\n                K = k;\n        }\n    return K;\n}(require('fs')[a0_0xaa4740(0x4)]('/dev/stdin', a0_0xaa4740(0x5))));", "test_cases": [["3\n1\n2 1\n1\n1 1\n1\n2 0", "2"], ["3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0", "0"], ["2\n1\n2 0\n1\n1 0", "1"]], "original": "'use strict';\nconsole.log(function(args){\n  const _tmp = args.trim().split('\\n');\n  const N = _tmp.shift()|0;\n  const A = [], x = [], y = [];\n  for ( let i = 0; i < N; i++ ) {\n    A[i] = _tmp.shift()|0;\n    x[i] = []; y[i] = [];\n    for ( let j = 0; j < A[i]; j++ ) {\n      const xy = _tmp[j].split(' ');\n      x[i][j] = xy[0]-1; y[i][j] = xy[1]|0;\n    }\n    _tmp.splice(0,A[i]);\n  }\n  let K = 0;\n  TEST: for ( let honest = 1; honest < 1<<N; honest++ ) {\n    let k = 0;\n    for ( let i = 0; i < N; i++ ) {\n        if ( !(honest&1<<i) ) continue;\n      k++;\n      for ( let j = 0; j < A[i]; j++ ) {\n        const Xij = x[i][j], Yij = y[i][j];\n        const target = honest&(1<<Xij);\n        if ( target!==(Yij<<Xij) ) continue TEST;\n      }\n    }\n    if ( k > K ) K = k;\n  }\n  return K;\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03129_1", "type": "JavaScript", "obfuscated": "function a0_0x2f98() {\n    var _0x280c2f = [\n        'split',\n        'log',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2f98 = function () {\n        return _0x280c2f;\n    };\n    return a0_0x2f98();\n}\nvar a0_0x21dbb1 = a0_0x41b5;\nfunction a0_0x41b5(ZGytdn, key) {\n    var stringArray = a0_0x2f98();\n    a0_0x41b5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41b5(ZGytdn, key);\n}\nfunction main(arg) {\n    var _0x281255 = a0_0x41b5;\n    arg = arg['split']('\\x0a')[0x0][_0x281255(0x0)]('\\x20');\n    var N = Number(arg[0x0]);\n    var K = Number(arg[0x1]);\n    var count = 0x0;\n    for (var i = 0x1; i <= N; i += 0x2) {\n        count++;\n    }\n    if (K > count) {\n        console[_0x281255(0x1)]('NO');\n    } else {\n        console[_0x281255(0x1)](_0x281255(0x2));\n    }\n}\nmain(require('fs')[a0_0x21dbb1(0x3)](a0_0x21dbb1(0x4), 'utf8'));", "test_cases": [["3 2", "YES"], ["5 5", "NO"], ["31 10", "YES"], ["10 90", "NO"]], "original": "function main(arg) {\n\targ = arg.split(\"\\n\")[0].split(\" \")\n\tvar N = Number(arg[0])\n\tvar K = Number(arg[1])\n\tvar count = 0\n\tfor (var i = 1; i <= N; i+=2 ) {\n\t\tcount++\n\t}\n\tif (K > count) {\n\t\tconsole.log(\"NO\")\n\t} else {\n\t\tconsole.log(\"YES\")\n\t}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03260_1", "type": "JavaScript", "obfuscated": "function a0_0x3b6a() {\n    const _0x18e9d7 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x3b6a = function () {\n        return _0x18e9d7;\n    };\n    return a0_0x3b6a();\n}\nconst a0_0x66230 = a0_0x400f;\nvar input = require('fs')['readFileSync'](a0_0x66230(0x0), a0_0x66230(0x1));\ninput = input[a0_0x66230(0x2)](/\\s/);\nconst A = Number(input[0x0]);\nconst B = Number(input[0x1]);\nfunction a0_0x400f(Bmspiv, key) {\n    const stringArray = a0_0x3b6a();\n    a0_0x400f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x400f(Bmspiv, key);\n}\nvar result = A === 0x2 || B === 0x2 ? 'No' : 'Yes';\nconsole[a0_0x66230(0x3)](result);", "test_cases": [["3 1", "Yes"], ["1 2", "No"], ["2 2", "No"]], "original": "var input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\ninput = input.split(/\\s/);\n\nconst A = Number(input[0]);\nconst B = Number(input[1]);\n\nvar result = (A === 2 || B === 2) ? \"No\" : \"Yes\";\n\nconsole.log(result);\n", "language": "JavaScript"}
{"filename": "p03283_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x20e5(aMJpny, key) {\n    const stringArray = a0_0x3db7();\n    a0_0x20e5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x20e5(aMJpny, key);\n}\nfunction a0_0x3db7() {\n    const _0x3bb033 = [\n        'split',\n        'shift',\n        'map',\n        'fill',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3db7 = function () {\n        return _0x3bb033;\n    };\n    return a0_0x3db7();\n}\nconst a0_0x1bea72 = a0_0x20e5;\nfunction Main(input) {\n    const _0xaf8758 = a0_0x20e5;\n    let lines = input[_0xaf8758(0x0)]('\\x0a');\n    let nmq = lines[_0xaf8758(0x1)]()[_0xaf8758(0x0)](/\\s/)[_0xaf8758(0x2)](v => v - 0x0);\n    let N = nmq[0x0], M = nmq[0x1], Q = nmq[0x2];\n    let T = new Array(N + 0x1)[_0xaf8758(0x3)](0x0)[_0xaf8758(0x2)](() => new Array(N + 0x1)[_0xaf8758(0x3)](0x0));\n    for (let m = 0x0; m < M; m++) {\n        let lr = lines['shift']()[_0xaf8758(0x0)](/\\s/)[_0xaf8758(0x2)](v => v - 0x0);\n        T[lr[0x0]][lr[0x1]] += 0x1;\n    }\n    for (let p = 0x1; p <= N; p++) {\n        for (let q = 0x1; q <= N; q++) {\n            T[p][q] += T[p - 0x1][q];\n            T[p][q] += T[p][q - 0x1];\n            T[p][q] -= T[p - 0x1][q - 0x1];\n        }\n    }\n    for (let n = 0x0; n < Q; n++) {\n        let pq = lines[_0xaf8758(0x1)]()[_0xaf8758(0x0)](/\\s/)[_0xaf8758(0x2)](v => v - 0x0);\n        let p = pq[0x0], q = pq[0x1];\n        console[_0xaf8758(0x4)](T[q][q] - T[p - 0x1][q]);\n    }\n}\nMain(require('fs')[a0_0x1bea72(0x5)](a0_0x1bea72(0x6), a0_0x1bea72(0x7)));", "test_cases": [["2 3 1\n1 1\n1 2\n2 2\n1 2", "3"], ["10 3 2\n1 5\n2 8\n7 10\n1 7\n3 10", "1\n1"], ["10 10 10\n1 6\n2 9\n4 5\n4 7\n4 7\n5 8\n6 6\n6 7\n7 9\n10 10\n1 8\n1 9\n1 10\n2 8\n2 9\n2 10\n3 8\n3 9\n3 10\n1 10", "7\n9\n10\n6\n8\n9\n6\n7\n8\n10"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let nmq = lines.shift().split(/\\s/).map((v) => v - 0);\n    let N = nmq[0], M = nmq[1], Q = nmq[2];\n    let T = new Array(N+1).fill(0).map(() => new Array(N+1).fill(0));\n    for (let m = 0; m < M; m++) {\n        let lr = lines.shift().split(/\\s/).map((v) => v - 0);\n        T[lr[0]][lr[1]] += 1;\n    }\n    for (let p = 1; p <= N; p++) {\n        for (let q = 1; q <= N; q++) {\n            T[p][q] += T[p - 1][q];\n            T[p][q] += T[p][q - 1];\n            T[p][q] -= T[p - 1][q - 1];\n        }\n    }\n    for (let n = 0; n < Q; n++) {\n        let pq = lines.shift().split(/\\s/).map((v) => v - 0);\n        let p = pq[0], q = pq[1];\n        console.log(T[q][q] - T[p - 1][q]);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03326_1", "type": "JavaScript", "obfuscated": "function a0_0x196f() {\n    var _0x2b672f = [\n        'split',\n        'map',\n        'sort',\n        'max',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x196f = function () {\n        return _0x2b672f;\n    };\n    return a0_0x196f();\n}\nfunction a0_0x2f7f(MRtThM, key) {\n    var stringArray = a0_0x196f();\n    a0_0x2f7f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f7f(MRtThM, key);\n}\nvar a0_0xe63194 = a0_0x2f7f;\nfunction Main(s) {\n    var _0x1f7768 = a0_0x2f7f;\n    s = s[_0x1f7768(0x0)]('\\x0a');\n    var n = s[0x0]['split']('\\x20')[_0x1f7768(0x1)](a => +a);\n    var m = n[0x1];\n    n = n[0x0];\n    var x;\n    var a = Array(0x4)['fill'](0x0)[_0x1f7768(0x1)](a => Array(n));\n    for (var i = 0x0; i < n; i++) {\n        x = s[i + 0x1][_0x1f7768(0x0)]('\\x20')[_0x1f7768(0x1)](a => +a);\n        a[0x0][i] = x[0x0] + x[0x1] + x[0x2];\n        a[0x1][i] = x[0x0] + x[0x1] - x[0x2];\n        a[0x2][i] = x[0x0] - x[0x1] + x[0x2];\n        a[0x3][i] = -x[0x0] + x[0x1] + x[0x2];\n    }\n    var ans = 0x0;\n    for (i = 0x0; i < 0x4; i++) {\n        a[i][_0x1f7768(0x2)]((a, b) => a - b);\n        var t = 0x0;\n        for (var j = 0x0; j < m; j++) {\n            t += a[i][j];\n        }\n        ans = Math[_0x1f7768(0x3)](ans, Math[_0x1f7768(0x4)](t));\n        t = 0x0;\n        for (j = n; j > n - m;) {\n            t += a[i][--j];\n        }\n        ans = Math[_0x1f7768(0x3)](ans, Math[_0x1f7768(0x4)](t));\n    }\n    console['log'](ans);\n}\nMain(require('fs')[a0_0xe63194(0x5)](a0_0xe63194(0x6), a0_0xe63194(0x7)));", "test_cases": [["5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9", "56"], ["5 3\n1 -2 3\n-4 5 -6\n7 -8 -9\n-10 11 -12\n13 -14 15", "54"], ["10 5\n10 -80 21\n23 8 38\n-94 28 11\n-26 -2 18\n-69 72 79\n-26 -86 -54\n-72 -50 59\n21 65 -32\n40 -94 87\n-62 18 82", "638"], ["3 2\n2000000000 -9000000000 4000000000\n7000000000 -5000000000 3000000000\n6000000000 -1000000000 8000000000", "30000000000"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1];\n  n = n[0];\n  var x;\n  var a = Array(4).fill(0).map(a=>Array(n));\n  for(var i = 0; i < n; i++){\n    x = s[i+1].split(\" \").map(a=>+a);\n    a[0][i] = x[0] + x[1] + x[2];\n    a[1][i] = x[0] + x[1] - x[2];\n    a[2][i] = x[0] - x[1] + x[2];\n    a[3][i] = -x[0] + x[1] + x[2];\n  }\n  var ans = 0;\n  for(i = 0; i < 4; i++){\n    a[i].sort((a,b)=>a-b);\n    var t = 0;\n    for(var j = 0; j < m; j++){\n      t += a[i][j];\n    }\n    ans = Math.max(ans, Math.abs(t));\n    t = 0;\n    for(j = n; j > n - m;){\n      t += a[i][--j];\n    }\n    ans = Math.max(ans, Math.abs(t));\n  }\n  \n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03433_1", "type": "JavaScript", "obfuscated": "function a0_0x205d(OCfneC, key) {\n    var stringArray = a0_0x20a1();\n    a0_0x205d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x205d(OCfneC, key);\n}\nvar a0_0x36a7b1 = a0_0x205d;\nfunction main(input) {\n    var _0x222c65 = a0_0x205d;\n    var line = input[_0x222c65(0x0)]('\\x0a')['map'](n => parseInt(n, 0xa));\n    while (line[0x0] > 0x1f4) {\n        line[0x0] -= 0x1f4;\n    }\n    line[0x0] <= line[0x1] ? console[_0x222c65(0x1)](_0x222c65(0x2)) : console['log']('No');\n}\nmain(require('fs')['readFileSync'](a0_0x36a7b1(0x3), a0_0x36a7b1(0x4)));\nfunction a0_0x20a1() {\n    var _0x11ae5e = [\n        'split',\n        'log',\n        'Yes',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x20a1 = function () {\n        return _0x11ae5e;\n    };\n    return a0_0x20a1();\n}", "test_cases": [["2018\n218", "Yes"], ["2763\n0", "No"], ["37\n514", "Yes"]], "original": "function main (input) {\n  var line = input.split('\\n').map(n => parseInt(n, 10));  \n\n  while(line[0] > 500) {\n    line[0] -= 500;\n  }\n\n  line[0]<=line[1] ? console.log('Yes') : console.log('No');\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03609_1", "type": "JavaScript", "obfuscated": "function a0_0x30dc(QcwnhA, key) {\n    const stringArray = a0_0x2a1e();\n    a0_0x30dc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x30dc(QcwnhA, key);\n}\nconst a0_0x10f17f = a0_0x30dc;\nfunction main(input) {\n    const _0x5006f1 = a0_0x30dc;\n    input = input[_0x5006f1(0x0)]();\n    const a = input[_0x5006f1(0x1)]('\\x20')['map'](Number);\n    if (a[0x0] <= a[0x1]) {\n        console[_0x5006f1(0x2)]('0');\n    } else {\n        console[_0x5006f1(0x2)](a[0x0] - a[0x1]);\n    }\n}\nfunction a0_0x2a1e() {\n    const _0x323176 = [\n        'trim',\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2a1e = function () {\n        return _0x323176;\n    };\n    return a0_0x2a1e();\n}\nmain(require('fs')['readFileSync'](a0_0x10f17f(0x3), a0_0x10f17f(0x4)));", "test_cases": [["100 17", "83"], ["48 58", "0"], ["1000000000 1000000000", "0"]], "original": "function main(input) {\n  input = input.trim();\n  const a = input.split(\" \").map(Number);\n  if(a[0]<=a[1]){\n    console.log(\"0\");\n  }else{\n    console.log(a[0]-a[1]);\n  }\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03694_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4c31a4 = a0_0x44cd;\nfunction a0_0x21c4() {\n    const _0x32eaee = [\n        'split',\n        'min',\n        'max',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x21c4 = function () {\n        return _0x32eaee;\n    };\n    return a0_0x21c4();\n}\nfunction a0_0x44cd(YvBpOL, key) {\n    const stringArray = a0_0x21c4();\n    a0_0x44cd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x44cd(YvBpOL, key);\n}\nfunction main(s) {\n    const _0x2a07d6 = a0_0x44cd;\n    const houses = s['split']('\\x0a')[0x1][_0x2a07d6(0x0)]('\\x20')['map'](n => Number(n));\n    const min = Math[_0x2a07d6(0x1)](...houses);\n    const max = Math[_0x2a07d6(0x2)](...houses);\n    const answer = max - min;\n    console[_0x2a07d6(0x3)](answer);\n}\nmain(require('fs')['readFileSync'](a0_0x4c31a4(0x4), a0_0x4c31a4(0x5)));", "test_cases": [["4\n2 3 7 9", "7"], ["8\n3 1 4 1 5 9 2 6", "8"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const houses = s.split('\\n')[1].split(' ').map(n => Number(n));\n  const min = Math.min(...houses);\n  const max = Math.max(...houses);\n\n  const answer = max - min;\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03796_1", "type": "JavaScript", "obfuscated": "function a0_0x25bf(juSHHU, key) {\n    var stringArray = a0_0x4265();\n    a0_0x25bf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x25bf(juSHHU, key);\n}\nvar a0_0x3bc48e = a0_0x25bf;\nprocess[a0_0x3bc48e(0x0)][a0_0x3bc48e(0x1)]();\nprocess[a0_0x3bc48e(0x0)][a0_0x3bc48e(0x2)]('utf8');\nfunction Main(input) {\n    var _0x2d74fb = a0_0x25bf;\n    var tmp = input[_0x2d74fb(0x3)]('\\x0a');\n    var N = Number(tmp[0x0]);\n    var pow = 0x1;\n    for (var i = 0x1; i <= N; i++) {\n        pow *= i;\n        pow %= 0x3b9aca07;\n    }\n    console['log'](pow);\n}\nMain(require('fs')[a0_0x3bc48e(0x4)](a0_0x3bc48e(0x5), a0_0x3bc48e(0x6)));\nfunction a0_0x4265() {\n    var _0x27bc43 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4265 = function () {\n        return _0x27bc43;\n    };\n    return a0_0x4265();\n}", "test_cases": [["3", "6"], ["10", "3628800"], ["100000", "457992974"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var tmp = input.split(\"\\n\");\n  //var line0 = tmp[0].split(\" \");\n  //var line1 = tmp[1].split(\" \");\n  //var line2 = tmp[2].split(\" \");\n  //var line3 = tmp[3].split(\" \");\n\n  var N = Number(tmp[0]);\n  //var A = Number(line0[1]);\n  //var B = Number(line0[2]);\n  \n  var pow = 1;\n  for(var i=1; i<=N; i++){\n    pow *= i;\n    pow %= 1000000007;\n  }\n  \n  console.log(pow);\n\n  \n  //入出力確認コード\n  // A.forEach( function(value) console.log(value); );\n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03814_1", "type": "JavaScript", "obfuscated": "const a0_0x8f9bad = a0_0x5c39;\nfunction main(input) {\n    const _0x48afcb = a0_0x5c39;\n    const S = input[_0x48afcb(0x0)]('');\n    let a_idx;\n    let z_idx;\n    for (let i = 0x0; i < S[_0x48afcb(0x1)]; i++) {\n        if (S[i] === 'A' && !a_idx) {\n            a_idx = i;\n        }\n        if (S[i] === 'Z') {\n            z_idx = i;\n        }\n    }\n    console[_0x48afcb(0x2)](z_idx - a_idx + 0x1);\n}\nfunction a0_0x5c39(nTlsyB, key) {\n    const stringArray = a0_0x30d2();\n    a0_0x5c39 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c39(nTlsyB, key);\n}\nfunction a0_0x30d2() {\n    const _0x57f105 = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x30d2 = function () {\n        return _0x57f105;\n    };\n    return a0_0x30d2();\n}\nmain(require('fs')[a0_0x8f9bad(0x3)](a0_0x8f9bad(0x4), a0_0x8f9bad(0x5)));", "test_cases": [["QWERTYASDFZXCV", "5"], ["ZABCZ", "4"], ["HASFJGHOGAKZZFEGA", "12"]], "original": "function main(input) {\n  const S = input.split('');\n  let a_idx;\n  let z_idx;\n  \n  for(let i = 0; i < S.length; i++) {\n  \tif (S[i] === 'A' && !a_idx) { a_idx = i; }\n    if (S[i] === 'Z') { z_idx = i; }\n  }\n  \n  console.log((z_idx - a_idx) + 1);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00017_1", "type": "JavaScript", "obfuscated": "var a0_0xe27fed = a0_0x3a96;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0xe27fed(0x0));\nfunction a0_0x3a96(nYluLb, key) {\n    var stringArray = a0_0x268b();\n    a0_0x3a96 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a96(nYluLb, key);\n}\nvar strA = input[a0_0xe27fed(0x1)]();\nvar abc = a0_0xe27fed(0x2)['split']('');\nfor (var i = 0x0; i < 0x1a; i++) {\n    var strB = strA[a0_0xe27fed(0x3)](/[a-z]/g, function (s) {\n        var _0x34eec2 = a0_0x3a96;\n        return abc[(abc[_0x34eec2(0x4)](s) + i) % 0x1a];\n    });\n    if (strB[a0_0xe27fed(0x5)](/the|this|that/))\n        break;\n}\nfunction a0_0x268b() {\n    var _0x33eba8 = [\n        'utf8',\n        'trim',\n        'abcdefghijklmnopqrstuvwxyz',\n        'replace',\n        'indexOf',\n        'match',\n        'log'\n    ];\n    a0_0x268b = function () {\n        return _0x33eba8;\n    };\n    return a0_0x268b();\n}\nconsole[a0_0xe27fed(0x6)](strB);", "test_cases": [["xlmw mw xli tmgxyvi xlex m xsso mr xli xvmt.", "this is the picture that i took in the trip."]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar strA=input.trim();\nvar abc=\"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nfor(var i=0;i<26;i++){\n   var strB=strA.replace(/[a-z]/g,function(s){\n      return abc[(abc.indexOf(s)+i)%26];\n   });\n   if(strB.match(/the|this|that/))break;\n}\nconsole.log(strB);", "language": "JavaScript"}
{"filename": "p00026_1", "type": "JavaScript", "obfuscated": "function a0_0x20fa(FSDCzV, key) {\n    var stringArray = a0_0x4ddc();\n    a0_0x20fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x20fa(FSDCzV, key);\n}\nvar a0_0x1994b2 = a0_0x20fa;\nvar input = '';\nvar mem = new Array(0xe);\nfunction a0_0x4ddc() {\n    var _0x210966 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'split',\n        'length',\n        'LmveW',\n        'FGExj',\n        'log'\n    ];\n    a0_0x4ddc = function () {\n        return _0x210966;\n    };\n    return a0_0x4ddc();\n}\nfor (var i = 0x0; i < 0xe; i++) {\n    mem[i] = new Array(0xe);\n    for (var j = 0x0; j < 0xe; j++)\n        mem[i][j] = 0x0;\n}\nvar dx = [\n    [\n        0x0,\n        -0x1,\n        0x0,\n        0x1,\n        0x0\n    ],\n    [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ],\n    [\n        0x0,\n        -0x1,\n        0x0,\n        -0x1,\n        -0x2,\n        -0x1,\n        0x0,\n        0x1,\n        0x2,\n        -0x1,\n        0x0,\n        0x1,\n        0x0\n    ]\n];\nvar dy = [\n    [\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x1\n    ],\n    [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ],\n    [\n        -0x2,\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x2\n    ]\n];\nprocess[a0_0x1994b2(0x0)][a0_0x1994b2(0x1)]();\nprocess[a0_0x1994b2(0x0)][a0_0x1994b2(0x2)](a0_0x1994b2(0x3));\nprocess[a0_0x1994b2(0x0)]['on'](a0_0x1994b2(0x4), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x1994b2(0x0)]['on']('end', function () {\n    var _0x1193f1 = a0_0x20fa;\n    input = input[_0x1193f1(0x5)]('\\x0a');\n    for (var i = 0x0; i < input[_0x1193f1(0x6)]; i++) {\n        s = input[i][_0x1193f1(0x5)](',');\n        x = Number(s[0x0]) + 0x2;\n        y = Number(s[0x1]) + 0x2;\n        v = Number(s[0x2]) - 0x1;\n        for (var j in dx[v])\n            mem[x + dx[v][j]][y + dy[v][j]]++;\n    }\n    m = 0x0;\n    b = 0x0;\n    for (var i = 0x2; i < 0xc; i++) {\n        if (_0x1193f1(0x7) === _0x1193f1(0x8)) {\n            input = input[_0x1193f1(0x5)]('\\x0a');\n            for (var i = 0x0; i < input['length']; i++) {\n                s = input[i]['split'](',');\n                x = Number(s[0x0]) + 0x2;\n                y = Number(s[0x1]) + 0x2;\n                v = Number(s[0x2]) - 0x1;\n                for (var j in dx[v])\n                    mem[x + dx[v][j]][y + dy[v][j]]++;\n            }\n            m = 0x0;\n            b = 0x0;\n            for (var i = 0x2; i < 0xc; i++) {\n                for (var j = 0x2; j < 0xc; j++) {\n                    if (mem[i][j] == 0x0)\n                        b++;\n                    m = Math['max'](m, mem[i][j]);\n                }\n            }\n            console['log'](b);\n            console['log'](m);\n        } else {\n            for (var j = 0x2; j < 0xc; j++) {\n                if (mem[i][j] == 0x0)\n                    b++;\n                m = Math['max'](m, mem[i][j]);\n            }\n        }\n    }\n    console[_0x1193f1(0x9)](b);\n    console[_0x1193f1(0x9)](m);\n});", "test_cases": [["2,5,3\n3,6,1\n3,4,2\n4,5,2\n3,6,3\n2,4,1", "77\n5"]], "original": "\nvar input = \"\";\nvar mem = new Array(14);\nfor(var i = 0; i < 14; i++)\n{\n  mem[i] = new Array(14);\n  for(var j = 0; j < 14; j++)\n    mem[i][j] = 0;\n}\nvar dx = [\n  [0, -1, 0, 1, 0],\n  [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n  [0, -1, 0, -1, -2, -1, 0, 1, 2, -1, 0, 1, 0]\n]\nvar dy =[\n  [-1, 0, 0, 0, 1],\n  [-1, -1, -1, 0, 0, 0, 1, 1, 1,],\n  [-2, -1, -1, -1, 0, 0, 0, 0, 0, 1, 1, 1, 2]\n]\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk){input += chunk});\nprocess.stdin.on('end', function()\n{\n  input = input.split('\\n');\n  for(var i = 0; i < input.length; i++)\n  {\n    s = input[i].split(',');\n    x = Number(s[0]) + 2;\n    y = Number(s[1]) + 2;\n    v = Number(s[2]) - 1;\n    for(var j in dx[v])\n      mem[x + dx[v][j]][y + dy[v][j]]++;\n  }\n  m = 0;\n  b = 0;\n  for(var i = 2; i < 12; i++)\n  {\n    for(var j = 2; j < 12; j++)\n    {\n      if(mem[i][j] == 0)\n        b++;\n      m = Math.max(m, mem[i][j]);\n    }\n  }\n  console.log(b);\n  console.log(m);\n});", "language": "JavaScript"}
{"filename": "p02260_1", "type": "JavaScript", "obfuscated": "const a0_0x1730cb = a0_0x3313;\nlet inputString = '';\nfunction a0_0x3313(fOWmMb, key) {\n    const stringArray = a0_0x106c();\n    a0_0x3313 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3313(fOWmMb, key);\n}\nprocess[a0_0x1730cb(0x0)]['on'](a0_0x1730cb(0x1), inputStdin => {\n    inputString += inputStdin;\n});\nfunction a0_0x106c() {\n    const _0x2d7e30 = [\n        'stdin',\n        'data',\n        'end',\n        'split',\n        'replace',\n        'map',\n        'length',\n        'lENJY',\n        'thENZ',\n        'cDFPy',\n        'npSED',\n        'log',\n        'join'\n    ];\n    a0_0x106c = function () {\n        return _0x2d7e30;\n    };\n    return a0_0x106c();\n}\nprocess['stdin']['on'](a0_0x1730cb(0x2), function () {\n    const _0x547bc4 = a0_0x3313;\n    inputString = inputString['replace'](/\\s*$/, '')[_0x547bc4(0x3)]('\\x0a')['map'](str => str[_0x547bc4(0x4)](/\\s*$/, ''));\n    selectionSort(inputString[0x1][_0x547bc4(0x3)]('\\x20')[_0x547bc4(0x5)](str => Number(str)));\n});\nconst selectionSort = arr => {\n    const _0x364a3d = a0_0x3313;\n    let swap = 0x0;\n    for (let i = 0x0; i < arr[_0x364a3d(0x6)]; i++) {\n        let minj = i;\n        for (let j = i; j < arr[_0x364a3d(0x6)]; j++) {\n            if (_0x364a3d(0x7) === _0x364a3d(0x8)) {\n                arr[minj] = a;\n                arr[i] = b;\n                swap++;\n            } else {\n                if (arr[j] < arr[minj]) {\n                    minj = j;\n                }\n            }\n        }\n        const a = arr[i];\n        const b = arr[minj];\n        if (a !== b) {\n            if (_0x364a3d(0x9) !== _0x364a3d(0xa)) {\n                arr[minj] = a;\n                arr[i] = b;\n                swap++;\n            } else {\n                minj = j;\n            }\n        }\n    }\n    console[_0x364a3d(0xb)](arr[_0x364a3d(0xc)]('\\x20'));\n    console[_0x364a3d(0xb)](swap);\n};", "test_cases": [["6\n5 6 4 2 1 3", "1 2 3 4 5 6\n4"], ["6\n5 2 4 6 1 3", "1 2 3 4 5 6\n3"]], "original": "let inputString = '';\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\nprocess.stdin.on('end', function() {\n    inputString = inputString.replace(/\\s*$/, '')\n        .split('\\n')\n        .map(str => str.replace(/\\s*$/, ''));\n\n    selectionSort(inputString[1].split(' ').map(str => Number(str)));\n});\n\nconst selectionSort = (arr) => {\n  let swap = 0;\n\n  for (let i=0; i<arr.length; i++) {\n    let minj = i;\n    for (let j=i; j<arr.length; j++) {\n      if (arr[j] < arr[minj]) { minj = j; }\n    }\n    const a = arr[i];\n    const b = arr[minj];\n    if (a !== b) {\n      arr[minj] = a;\n      arr[i] = b;\n      swap++;\n    }\n  }\n\n  console.log(arr.join(' '));\n  console.log(swap);\n};\n", "language": "JavaScript"}
{"filename": "p02327_1", "type": "JavaScript", "obfuscated": "var a0_0x571c42 = a0_0x6b1a;\nfunction a0_0x6b1a(YtXAfp, key) {\n    var stringArray = a0_0x1258();\n    a0_0x6b1a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6b1a(YtXAfp, key);\n}\nfunction a0_0x1258() {\n    var _0x4e205a = ['log'];\n    a0_0x1258 = function () {\n        return _0x4e205a;\n    };\n    return a0_0x1258();\n}\nconsole[a0_0x571c42(0x0)](0x6);", "test_cases": [["4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0", "6"]], "original": "console.log(6);", "language": "JavaScript"}
{"filename": "p02389_1", "type": "JavaScript", "obfuscated": "function a0_0x2c0e() {\n    var _0x5e7d8b = [\n        'toString',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2c0e = function () {\n        return _0x5e7d8b;\n    };\n    return a0_0x2c0e();\n}\nfunction a0_0x4039(eEaGjt, key) {\n    var stringArray = a0_0x2c0e();\n    a0_0x4039 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4039(eEaGjt, key);\n}\nvar a0_0x3b6f27 = a0_0x4039;\n(function (stdin) {\n    var _0x3732dc = a0_0x4039;\n    var lines = stdin[_0x3732dc(0x0)]()[_0x3732dc(0x1)]('\\x20');\n    var x = parseInt(lines[0x0], 0xa);\n    var y = parseInt(lines[0x1], 0xa);\n    console[_0x3732dc(0x2)](x * y, (x + y) * 0x2);\n}(require('fs')[a0_0x3b6f27(0x3)](a0_0x3b6f27(0x4), a0_0x3b6f27(0x5))));", "test_cases": [["3 5", "15 16"]], "original": " (function(stdin) {\n    var lines = stdin.toString().split(' ');\n    var x = parseInt(lines[0],10);\n    var y = parseInt(lines[1],10);\n    \n    console.log((x*y),(x+y)*2);\n\n }(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02600_1", "type": "JavaScript", "obfuscated": "function a0_0x3d33(OdOfpg, key) {\n    var stringArray = a0_0x454e();\n    a0_0x3d33 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d33(OdOfpg, key);\n}\nfunction a0_0x454e() {\n    var _0x40060f = [\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x454e = function () {\n        return _0x40060f;\n    };\n    return a0_0x454e();\n}\nvar a0_0x51b3ea = a0_0x3d33;\nfunction main(input) {\n    var _0x56925c = a0_0x3d33;\n    console[_0x56925c(0x0)](0xa - Math['floor'](input / 0xc8));\n}\nmain(require('fs')[a0_0x51b3ea(0x1)](a0_0x51b3ea(0x2), 'utf8'));", "test_cases": [["725", "7"], ["1600", "2"]], "original": "function main(input) {\n    console.log(10 - Math.floor(input / 200));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02603_1", "type": "JavaScript", "obfuscated": "const a0_0x529027 = a0_0x330a;\nfunction main(arg) {\n    const _0x41f52f = a0_0x330a;\n    let n = Number(arg[_0x41f52f(0x0)]('\\x0a')[0x0]);\n    let a = arg[_0x41f52f(0x0)]('\\x0a')[0x1][_0x41f52f(0x0)]('\\x20')[_0x41f52f(0x1)](Number);\n    let dp = [];\n    for (let i = 0x0; i < n + 0x1; i++)\n        dp[i] = 0x0;\n    dp[0x0] = 0x3e8;\n    let stock = 0x0;\n    for (let i = 0x1; i < n + 0x1; i++) {\n        if (i == n) {\n            dp[i] = dp[i - 0x1] + stock * a[i - 0x1];\n        } else if (a[i] > a[i - 0x1]) {\n            let addStock = parseInt(dp[i - 0x1] / a[i - 0x1]);\n            dp[i] = dp[i - 0x1] - addStock * a[i - 0x1];\n            stock += addStock;\n        } else {\n            let rmStock = stock;\n            dp[i] = dp[i - 0x1] + rmStock * a[i - 0x1];\n            stock -= rmStock;\n        }\n    }\n    console['log'](dp[n]);\n}\nfunction a0_0x330a(gpClUE, key) {\n    const stringArray = a0_0x2769();\n    a0_0x330a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x330a(gpClUE, key);\n}\nmain(require('fs')['readFileSync'](a0_0x529027(0x2), a0_0x529027(0x3)));\nfunction a0_0x2769() {\n    const _0x889e8 = [\n        'split',\n        'map',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2769 = function () {\n        return _0x889e8;\n    };\n    return a0_0x2769();\n}", "test_cases": [["7\n100 130 130 130 115 115 150", "1685"], ["6\n200 180 160 140 120 100", "1000"], ["2\n157 193", "1216"]], "original": "function main(arg) {\n    let n = Number(arg.split(\"\\n\")[0])\n    let a = arg.split(\"\\n\")[1].split(\" \").map(Number)\n    \n    let dp = []\n    for(let i=0; i<n+1; i++)dp[i]=0\n    dp[0] = 1000\n    \n    let stock = 0\n    for(let i=1; i<n+1; i++) {\n        if(i==n) {\n        // 売却\n            dp[i] = dp[i-1] + stock*a[i-1]\n        }else if(a[i]>a[i-1]) {\n        // 購入\n            let addStock = parseInt(dp[i-1]/a[i-1])\n            dp[i] = dp[i-1] - addStock * a[i-1]\n            stock += addStock\n            //console.log(`addStock=${addStock}`)\n        } else {\n        // 売却\n            let rmStock = stock\n            dp[i] = dp[i-1] + rmStock * a[i-1]\n            stock -= rmStock\n            //console.log(`rmStock=${rmStock}`)\n        }\n            //console.log(`stock=${stock}`)\n    }\n    console.log(dp[n])\n    \n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02663_1", "type": "JavaScript", "obfuscated": "const a0_0x431113 = a0_0x3f64;\nconst input = require('fs')[a0_0x431113(0x0)](a0_0x431113(0x1), a0_0x431113(0x2));\nfunction a0_0x44a2() {\n    const _0x4c65b1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'log'\n    ];\n    a0_0x44a2 = function () {\n        return _0x4c65b1;\n    };\n    return a0_0x44a2();\n}\nfunction a0_0x3f64(EEpShU, key) {\n    const stringArray = a0_0x44a2();\n    a0_0x3f64 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f64(EEpShU, key);\n}\nlet cin = input[a0_0x431113(0x3)](/ |\\n/), cid = 0x0;\nconst next = () => cin[cid++];\nconst nexts = n => cin[a0_0x431113(0x4)](cid, cid += n)[a0_0x431113(0x5)](i => parseInt(i));\nconst [H1, M1, H2, M2, K] = nexts(0x5);\nconst time = H2 * 0x3c + M2 - (H1 * 0x3c + M1) - K;\ntime > 0x0 ? console[a0_0x431113(0x6)](time) : console[a0_0x431113(0x6)](0x0);", "test_cases": [["10 0 15 0 30", "270"], ["10 0 12 0 120", "0"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nlet cin = input.split(/ |\\n/), cid = 0\nconst next = () => cin[cid++]\nconst nexts = (n) => cin.slice(cid, cid+=n).map(i=>parseInt(i))\n\nconst [H1, M1, H2, M2, K] = nexts(5);\nconst time = H2 * 60 + M2 - (H1 * 60 + M1) - K\ntime > 0 ? console.log(time) : console.log(0)\n", "language": "JavaScript"}
{"filename": "p02693_1", "type": "JavaScript", "obfuscated": "var a0_0x5267fc = a0_0x2b81;\nfunction a0_0x2b81(QcepKZ, key) {\n    var stringArray = a0_0x458c();\n    a0_0x2b81 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b81(QcepKZ, key);\n}\nfunction Main(input) {\n    var _0x2b5fa6 = a0_0x2b81;\n    var str = input;\n    const n = str[_0x2b5fa6(0x0)]('\\x0a');\n    var k = Number(n[0x0]);\n    var p = n[0x1][_0x2b5fa6(0x0)]('\\x20');\n    var a = Number(p[0x0]);\n    var b = Number(p[0x1]);\n    var ans = '';\n    for (var i = a; i <= b; i++) {\n        if (i % k === 0x0) {\n            ans = 'OK';\n        }\n    }\n    if (ans !== 'OK') {\n        ans = 'NG';\n    }\n    console['log'](ans);\n}\nfunction a0_0x458c() {\n    var _0x31db9 = [\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x458c = function () {\n        return _0x31db9;\n    };\n    return a0_0x458c();\n}\nMain(require('fs')[a0_0x5267fc(0x1)](a0_0x5267fc(0x2), a0_0x5267fc(0x3)));", "test_cases": [["7\n500 600", "OK"], ["4\n5 7", "NG"], ["1\n11 11", "OK"]], "original": "function Main(input) {\n\tvar str = input;\n\tconst n = str.split('\\n');\n\tvar k  =Number(n[0]);\n\tvar p = n[1].split(\" \");\t\n\tvar a = Number(p[0]); \n\tvar b = Number(p[1]);\n\tvar ans = \"\";\n\t\n\tfor(var i = a; i <= b; i++){\n\t\tif(i%k===0){\n\t\t\tans = \"OK\";\n\t\t}\n\t}\nif(ans !== \"OK\"){\n\tans = \"NG\"\n}\n console.log(ans);\n }\n \n \n//*おまじない\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02879_1", "type": "JavaScript", "obfuscated": "var a0_0x511a58 = a0_0x45dd;\nfunction Main(input) {\n    var _0x967911 = a0_0x45dd;\n    var input = input[_0x967911(0x0)]('\\x20');\n    var a = Number(input[0x0]);\n    var b = Number(input[0x1]);\n    if (a > 0x9 || b > 0x9) {\n        console[_0x967911(0x1)](-0x1);\n        return;\n    }\n    var result = a * b;\n    console['log'](result);\n}\nfunction a0_0x45dd(lZPERM, key) {\n    var stringArray = a0_0x5e71();\n    a0_0x45dd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x45dd(lZPERM, key);\n}\nMain(require('fs')[a0_0x511a58(0x2)](a0_0x511a58(0x3), a0_0x511a58(0x4)));\nfunction a0_0x5e71() {\n    var _0x1d9c46 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5e71 = function () {\n        return _0x1d9c46;\n    };\n    return a0_0x5e71();\n}", "test_cases": [["2 5", "10"], ["5 10", "-1"], ["9 9", "81"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var input = input.split(' ')\n  var a = Number(input[0])\n  var b = Number(input[1])\n  if (a > 9 || b > 9){\n    console.log(-1)\n  \treturn;\n  }\n  var result = a * b;\n  console.log(result);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02918_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x7252(beezzh, key) {\n    const stringArray = a0_0x3367();\n    a0_0x7252 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7252(beezzh, key);\n}\nconst a0_0x3fa72c = a0_0x7252;\nconst main = arg => {\n    const _0x47f083 = a0_0x7252;\n    arg = arg[_0x47f083(0x0)]()['split']('\\x0a');\n    const N = parseInt(arg[0x0][_0x47f083(0x1)]('\\x20')[0x0]);\n    const K = parseInt(arg[0x0][_0x47f083(0x1)]('\\x20')[0x1]);\n    const S = arg[0x1][_0x47f083(0x1)]('');\n    let alreadyHappy = 0x0;\n    let last;\n    for (let i in S) {\n        if (last === 'L' && S[i] === 'L') {\n            alreadyHappy++;\n        }\n        if (last === 'R' && S[i] === 'R') {\n            alreadyHappy++;\n        }\n        last = S[i];\n    }\n    console['log'](Math[_0x47f083(0x2)](N - 0x1, alreadyHappy + 0x2 * K));\n};\nfunction a0_0x3367() {\n    const _0x43ec14 = [\n        'trim',\n        'split',\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3367 = function () {\n        return _0x43ec14;\n    };\n    return a0_0x3367();\n}\nmain(require('fs')[a0_0x3fa72c(0x3)](a0_0x3fa72c(0x4), a0_0x3fa72c(0x5)));", "test_cases": [["6 1\nLRLRRL", "3"], ["13 3\nLRRLRLRRLRLLR", "9"], ["10 1\nLLLLLRRRRR", "9"], ["9 2\nRRRLRLRLL", "7"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n    \n    const S = arg[1].split(\"\");\n    let alreadyHappy = 0;\n    let last;\n    \n    for(let i in S) {\n        if(last === \"L\" && S[i] === \"L\") {\n            alreadyHappy++;\n        }\n        \n        if(last === \"R\" && S[i] === \"R\") {\n            alreadyHappy++;\n        }\n        \n        last = S[i];\n    }\n\n    console.log(Math.min(N - 1, alreadyHappy + (2 * K)));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03014_1", "type": "JavaScript", "obfuscated": "function a0_0x5d53(rzCkIU, key) {\n    var stringArray = a0_0x3164();\n    a0_0x5d53 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5d53(rzCkIU, key);\n}\nvar a0_0xf448ae = a0_0x5d53;\nfunction a0_0x3164() {\n    var _0x503111 = [\n        'split',\n        'push',\n        'length',\n        'max',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'trim'\n    ];\n    a0_0x3164 = function () {\n        return _0x503111;\n    };\n    return a0_0x3164();\n}\nconst main = inputs => {\n    var _0x189e86 = a0_0x5d53;\n    var H = inputs[0x0][_0x189e86(0x0)]('\\x20')[0x0] - 0x0;\n    var W = inputs[0x0][_0x189e86(0x0)]('\\x20')[0x1] - 0x0;\n    var map = {};\n    var ymap = {};\n    var tmap = {};\n    var keys = [];\n    for (var h = 0x0; h < H; h++) {\n        map[h] = inputs[h + 0x1];\n        for (var w = 0x0; w < W; w++) {\n            var ukey = h - 0x1 + '_' + w;\n            var lkey = h + '_' + (w - 0x1);\n            var key = h + '_' + w;\n            if (map[h][w] == '#') {\n            } else {\n                keys[_0x189e86(0x1)](key);\n                if (ymap[lkey]) {\n                    ymap[key] = ymap[lkey];\n                    ymap[key]['n']++;\n                } else {\n                    ymap[key] = { 'n': 0x1 };\n                }\n                if (tmap[ukey]) {\n                    tmap[key] = tmap[ukey];\n                    tmap[key]['n']++;\n                } else {\n                    tmap[key] = { 'n': 0x1 };\n                }\n            }\n        }\n    }\n    var ans = 0x0;\n    var key;\n    for (var i = keys[_0x189e86(0x2)] - 0x1; i >= 0x0; i--) {\n        key = keys[i];\n        ans = Math[_0x189e86(0x3)](ans, tmap[key]['n'] + ymap[key]['n'] - 0x1);\n        if (ans == H + W - 0x1)\n            break;\n    }\n    console[_0x189e86(0x4)](ans);\n};\nmain(require('fs')[a0_0xf448ae(0x5)](a0_0xf448ae(0x6), a0_0xf448ae(0x7))[a0_0xf448ae(0x8)]()[a0_0xf448ae(0x0)]('\\x0a'));", "test_cases": [["4 6\n#..#..\n.....#\n....#.\n#.#...", "8"], ["8 8\n..#...#.\n....#...\n##......\n..###..#\n...#..#.\n##....#.\n#...#...\n###.#..#", "13"]], "original": "const main = (inputs) => {\n  var H = inputs[0].split(\" \")[0]-0;\n  var W = inputs[0].split(\" \")[1]-0;\n \n  var map = {};\n  var ymap = {};\n  var tmap = {};\n  var keys = [];\n  for(var h=0;h<H;h++){\n    map[h] = inputs[h+1];\n    for(var w=0;w<W;w++){\n      var ukey = (h-1)+\"_\"+w;\n      var lkey = h+\"_\"+(w-1);\n      var key = h+\"_\"+w;\n      if(map[h][w] == \"#\"){\n      }else{\n        keys.push(key);\n        if(ymap[lkey]){\n          ymap[key] = ymap[lkey];\n          ymap[key].n++;\n        }else{\n          ymap[key] = {n:1};\n        }\n \n        if(tmap[ukey]){\n          tmap[key] = tmap[ukey];\n          tmap[key].n++;\n        }else{\n          tmap[key] = {n:1};\n        }\n      }\n    }\n  }\n  var ans = 0;\n  var key;\n  for(var i=keys.length-1;i>=0;i--){\n    key = keys[i];\n    ans = Math.max(ans, tmap[key].n + ymap[key].n - 1);\n    if(ans == H+W-1) break;\n  }\n  console.log(ans);\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03089_1", "type": "JavaScript", "obfuscated": "var a0_0x32dfa1 = a0_0x45ef;\ninput = require('fs')[a0_0x32dfa1(0x0)]('/dev/stdin', 'utf8');\nlines = input[a0_0x32dfa1(0x1)]('\\x0a');\nN = lines['shift']() * 0x1;\nb = lines[a0_0x32dfa1(0x2)]()['split']('\\x20');\na = [];\nfor (i = N; i > 0x0; i--) {\n    found = ![];\n    for (j = i; j > 0x0; j--) {\n        if (b[j - 0x1] == j) {\n            a[a0_0x32dfa1(0x3)](b['splice'](j - 0x1, 0x1));\n            found = !![];\n            break;\n        }\n    }\n    if (!found) {\n        a = [-0x1];\n        break;\n    }\n}\nfunction a0_0x45ef(mXvsFt, key) {\n    var stringArray = a0_0x2541();\n    a0_0x45ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x45ef(mXvsFt, key);\n}\nconsole[a0_0x32dfa1(0x4)](a[a0_0x32dfa1(0x5)]()[a0_0x32dfa1(0x6)]('\\x0a'));\nfunction a0_0x2541() {\n    var _0x15da99 = [\n        'readFileSync',\n        'split',\n        'shift',\n        'push',\n        'log',\n        'reverse',\n        'join'\n    ];\n    a0_0x2541 = function () {\n        return _0x15da99;\n    };\n    return a0_0x2541();\n}", "test_cases": [["3\n1 2 1", "1\n1\n2"], ["2\n2 2", "-1"], ["9\n1 1 1 2 2 1 2 3 2", "1\n2\n2\n3\n1\n2\n2\n1\n1"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nb = lines.shift().split(' ')\na = []\nfor (i=N; i>0; i--) {\n    found = false\n    for (j=i; j>0; j--) {\n        if (b[j-1] == j) {\n            a.push(b.splice(j-1, 1))\n            found = true\n            break;\n        }\n    }\n    if (!found) {\n        a = [-1]\n        break;\n    }\n}\nconsole.log(a.reverse().join(\"\\n\"))", "language": "JavaScript"}
{"filename": "p03295_1", "type": "JavaScript", "obfuscated": "var a0_0x1ed2da = a0_0x401d;\nvar toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr[a0_0x1ed2da(0x0)](x => toInt(x));\nfunction a0_0x401d(GIeJtL, key) {\n    var stringArray = a0_0x59dd();\n    a0_0x401d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x401d(GIeJtL, key);\n}\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var _0x5b1f59 = a0_0x401d;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x5b1f59(0x1)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')[a0_0x1ed2da(0x2)](a0_0x1ed2da(0x3), a0_0x1ed2da(0x4)));\nfunction Main(input) {\n    var _0x1fd1fb = a0_0x401d;\n    var input = input['split']('\\x0a');\n    var temp1 = input[0x0][_0x1fd1fb(0x5)]('\\x20');\n    var n = toInt(temp1[0x0]);\n    var m = toInt(temp1[0x1]);\n    var abs = [];\n    for (var i = 0x0; i < m; i++) {\n        if ('FHSNg' !== _0x1fd1fb(0x6)) {\n            return a[0x0] - b[0x0];\n        } else {\n            c = toIntArr(input[i + 0x1][_0x1fd1fb(0x5)]('\\x20'));\n            a = c[0x0];\n            b = c[0x1];\n            abs[i] = [\n                a,\n                b\n            ];\n        }\n    }\n    abs[_0x1fd1fb(0x7)](function (a, b) {\n        var _0x1ca4ed = a0_0x401d;\n        if (_0x1ca4ed(0x8) === _0x1ca4ed(0x9)) {\n            var rest = arguments, val = rest[0x0];\n            for (var i = 0x1; i < rest[_0x1ca4ed(0x1)]; i++)\n                if (rest[i] > val)\n                    val = rest[i];\n            return val;\n        } else {\n            if (a[0x0] !== b[0x0]) {\n                return a[0x0] - b[0x0];\n            } else {\n                return a[0x1] - b[0x1];\n            }\n        }\n    });\n    var l = 0x0;\n    r = n - 0x1;\n    var ab;\n    var ans = 0x1;\n    for (var i = 0x0; i < m; i++) {\n        if (_0x1fd1fb(0xa) !== _0x1fd1fb(0xb)) {\n            ab = abs[i];\n            if (ab[0x1] <= l || r <= ab[0x0]) {\n                ans++;\n                l = ab[0x0];\n                r = ab[0x1];\n            } else {\n                if (_0x1fd1fb(0xc) === 'fsnIE') {\n                    l = max(l, ab[0x0]);\n                    r = min(r, ab[0x1]);\n                } else {\n                    return a[0x1] - b[0x1];\n                }\n            }\n        } else {\n            var rest = arguments, val = rest[0x0];\n            for (var i = 0x1; i < rest['length']; i++)\n                if (rest[i] < val)\n                    val = rest[i];\n            return val;\n        }\n    }\n    console[_0x1fd1fb(0xd)](ans);\n}\nfunction a0_0x59dd() {\n    var _0x2e49b5 = [\n        'map',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'FHSNg',\n        'sort',\n        'vVDMA',\n        'cYDTo',\n        'cVBXN',\n        'SHMul',\n        'fsnIE',\n        'log'\n    ];\n    a0_0x59dd = function () {\n        return _0x2e49b5;\n    };\n    return a0_0x59dd();\n}", "test_cases": [["5 2\n1 4\n2 5", "1"], ["9 5\n1 8\n2 7\n3 5\n4 6\n7 9", "2"], ["5 10\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5", "4"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar temp1 = input[0].split(' ');\n\tvar n = toInt(temp1[0]);\n\tvar m = toInt(temp1[1]);\n\tvar abs = [];\n\tfor(var i = 0; i < m; i++){\n\t\tc = toIntArr(input[i+1].split(' '));\n\t\ta = c[0];\n\t\tb = c[1];\n\t\tabs[i] = [a,b];\n\t}\n\tabs.sort(function(a,b){\n\t\tif(a[0]!==b[0]){\n\t\t\treturn a[0] - b[0];\n\t\t}else{\n\t\t\treturn a[1] - b[1];\n\t\t}\n\t})\n\tvar l=0;r=n-1;\n\tvar ab;\n\tvar ans = 1;\n\tfor(var i = 0; i < m; i++){\n\t\tab = abs[i];\n\t\tif(ab[1]<=l || r<=ab[0]){\n\t\t\tans++;\n\t\t\tl = ab[0];\n\t\t\tr = ab[1];\n\t\t}else{\n\t\t\tl = max(l,ab[0]);\n\t\t\tr = min(r,ab[1]);\n\t\t}\n\t}\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03331_1", "type": "JavaScript", "obfuscated": "var a0_0x255fc9 = a0_0x382b;\nfunction main(input) {\n    var _0x4a9c72 = a0_0x382b;\n    var digits = input[_0x4a9c72(0x0)]()[_0x4a9c72(0x1)];\n    var input = parseInt(input, 0xa);\n    var divisor = Math['pow'](0xa, digits - 0x1);\n    var arr = [];\n    for (var i = 0x0; i < digits; i++) {\n        arr[_0x4a9c72(0x2)](Math[_0x4a9c72(0x3)](input / divisor));\n        input = input % divisor;\n        divisor /= 0xa;\n    }\n    var answer = arr['reduce']((a, b) => a + b);\n    if (answer == 0x1) {\n        answer = 0xa;\n    }\n    console[_0x4a9c72(0x4)](answer);\n}\nfunction a0_0x2412() {\n    var _0x299334 = [\n        'toString',\n        'length',\n        'push',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2412 = function () {\n        return _0x299334;\n    };\n    return a0_0x2412();\n}\nfunction a0_0x382b(FAflNh, key) {\n    var stringArray = a0_0x2412();\n    a0_0x382b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x382b(FAflNh, key);\n}\nmain(require('fs')[a0_0x255fc9(0x5)](a0_0x255fc9(0x6), 'utf8'));", "test_cases": [["15", "6"], ["100000", "10"]], "original": "function main(input) {\n  var digits = input.toString().length;\n  var input = parseInt(input, 10);\n \n  var divisor = Math.pow(10, digits - 1);\n  var arr = [];\n  for (var i = 0; i < digits; i++) {\n  \tarr.push(Math.floor(input / divisor))\n  \tinput = input % divisor;\n  \tdivisor /= 10;\n \n  }\n  var answer = arr.reduce((a, b) => a + b);\n  if(answer == 1) {answer = 10;}\n \n  console.log(answer);\n \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03457_1", "type": "JavaScript", "obfuscated": "var a0_0x27e5d0 = a0_0x5e09;\nfunction a0_0x58b5() {\n    var _0x595927 = [\n        'split',\n        'slice',\n        'length',\n        'abs',\n        'Yes',\n        'push',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x58b5 = function () {\n        return _0x595927;\n    };\n    return a0_0x58b5();\n}\nfunction Main(input) {\n    var _0xa37e0b = a0_0x5e09;\n    var args = input[_0xa37e0b(0x0)]('\\x0a');\n    var N = parseInt(args, 0xa);\n    var history = args[_0xa37e0b(0x1)](0x1, N + 0x1);\n    var answer;\n    var flg = 0x1;\n    var plan = [];\n    plan[0x0] = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < N; i++) {\n        plan[i + 0x1] = parser(history[i]);\n    }\n    for (var i = 0x1; i < plan[_0xa37e0b(0x2)]; i++) {\n        var rec1 = plan[i - 0x1];\n        var rec2 = plan[i];\n        var dt = rec2[0x0] - rec1[0x0];\n        var dist = Math[_0xa37e0b(0x3)](rec2[0x1] + rec2[0x2] - rec1[0x1] - rec1[0x2]);\n        if (dt >= dist && dt % 0x2 === dist % 0x2) {\n        } else {\n            flg = 0x0;\n        }\n    }\n    answer = flg ? _0xa37e0b(0x4) : 'No';\n    console['log'](answer);\n}\nfunction a0_0x5e09(ixAzKy, key) {\n    var stringArray = a0_0x58b5();\n    a0_0x5e09 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e09(ixAzKy, key);\n}\nfunction parser(record) {\n    var _0x38396f = a0_0x5e09;\n    var args = record['split']('\\x20');\n    var return_val = [];\n    return_val['push'](parseInt(args[0x0], 0xa));\n    return_val[_0x38396f(0x5)](parseInt(args[0x1], 0xa));\n    return_val['push'](parseInt(args[0x2], 0xa));\n    return return_val;\n}\nMain(require('fs')['readFileSync'](a0_0x27e5d0(0x6), a0_0x27e5d0(0x7)));", "test_cases": [["2\n3 1 2\n6 1 1", "Yes"], ["1\n2 100 100", "No"], ["2\n5 1 1\n100 1 1", "No"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar args = input.split(\"\\n\");\n\tvar N = parseInt(args,10);\n\tvar history = args.slice(1,N+1);\n\tvar answer;\n\tvar flg = 1;\n\tvar plan = [];\n\tplan[0]=[0,0,0];\n\tfor(var i=0;i<N;i++){\n\t\tplan[i+1] = parser(history[i]);\n\t}\n\n\tfor(var i=1;i<plan.length;i++){\n\t\tvar rec1 = plan[i-1];\n\t\tvar rec2 = plan[i];\n\t\tvar dt = rec2[0] - rec1[0];\n\t\tvar dist = Math.abs(rec2[1]+rec2[2]-rec1[1]-rec1[2]);\n\t\tif (dt >= dist && dt % 2 === dist % 2){\n\t\t}else{\n\t\t\t\tflg = 0;\n\t\t}\n\t}\n\tanswer = flg ? \"Yes\" : \"No\" ;\n\t//出力\n\tconsole.log(answer);\n}\nfunction parser(record){\n\tvar args = record.split(\" \");\n\tvar return_val=[];\n\treturn_val.push(parseInt(args[0],10));\n\treturn_val.push(parseInt(args[1],10));\n\treturn_val.push(parseInt(args[2],10));\n\treturn return_val\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03635_1", "type": "JavaScript", "obfuscated": "var a0_0x3bf762 = a0_0x23c6;\nfunction Main(input) {\n    var _0x3d1075 = a0_0x23c6;\n    input = input[_0x3d1075(0x0)]('\\x0a');\n    var line = input[0x0]['split']('\\x20');\n    var m = parseInt(line[0x0]);\n    var n = parseInt(line[0x1]);\n    var ans = (m - 0x1) * (n - 0x1);\n    console[_0x3d1075(0x1)](ans);\n}\nfunction a0_0x23c6(PzNjGp, key) {\n    var stringArray = a0_0x245b();\n    a0_0x23c6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23c6(PzNjGp, key);\n}\nfunction a0_0x245b() {\n    var _0x4a8961 = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x245b = function () {\n        return _0x4a8961;\n    };\n    return a0_0x245b();\n}\nMain(require('fs')['readFileSync'](a0_0x3bf762(0x2), a0_0x3bf762(0x3)));", "test_cases": [["3 4", "6"], ["2 2", "1"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var line = input[0].split(\" \");\n    var m = parseInt(line[0]);\n    var n = parseInt(line[1]);\n    \n    var ans = (m-1)*(n-1);\n    console.log(ans);\n    \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03998_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5821a3 = a0_0x31ee;\nfunction a0_0x31ee(xKyxWE, key) {\n    const stringArray = a0_0x2014();\n    a0_0x31ee = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x31ee(xKyxWE, key);\n}\nfunction a0_0x2014() {\n    const _0x2a744a = [\n        'trim',\n        'split',\n        'shift',\n        'toUpperCase',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2014 = function () {\n        return _0x2a744a;\n    };\n    return a0_0x2014();\n}\nconst main = arg => {\n    const _0x2d0acb = a0_0x31ee;\n    const input = arg[_0x2d0acb(0x0)]()[_0x2d0acb(0x1)]('\\x0a');\n    let a = input[0x0][_0x2d0acb(0x1)]('');\n    let b = input[0x1][_0x2d0acb(0x1)]('');\n    let c = input[0x2]['split']('');\n    function shiftCard(man) {\n        const _0x25290f = a0_0x31ee;\n        let out = eval(man)[_0x25290f(0x2)]();\n        if (out === undefined) {\n            console['log'](man[_0x25290f(0x3)]());\n            return;\n        }\n        shiftCard(out);\n    }\n    shiftCard('a');\n};\nmain(require('fs')[a0_0x5821a3(0x4)](a0_0x5821a3(0x5), a0_0x5821a3(0x6)));", "test_cases": [["aca\naccc\nca", "A"], ["abcb\naacb\nbccc", "C"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet a = input[0].split('')\n\tlet b = input[1].split('')\n\tlet c = input[2].split('')\n\t\n\tfunction shiftCard(man) {\n\t\tlet out = eval(man).shift()\n\t\tif(out === undefined) {\n\t\t\tconsole.log(man.toUpperCase())\n\t\t\treturn\n\t\t}\n\t\tshiftCard(out)\n\t}\n\tshiftCard('a')\n\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00093_1", "type": "JavaScript", "obfuscated": "var a0_0x1d27b3 = a0_0x4885;\nfunction a0_0x4885(PHfSiU, key) {\n    var stringArray = a0_0xee8b();\n    a0_0x4885 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4885(PHfSiU, key);\n}\nprocess[a0_0x1d27b3(0x0)][a0_0x1d27b3(0x1)]();\nprocess['stdin'][a0_0x1d27b3(0x2)](a0_0x1d27b3(0x3));\nx = require('fs')[a0_0x1d27b3(0x4)](a0_0x1d27b3(0x5), a0_0x1d27b3(0x3))[a0_0x1d27b3(0x6)]()[a0_0x1d27b3(0x7)](/\\s/);\nfunction a0_0xee8b() {\n    var _0x4ca161 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'log',\n        'NA\\x0a'\n    ];\n    a0_0xee8b = function () {\n        return _0x4ca161;\n    };\n    return a0_0xee8b();\n}\nfor (i = 0x0; i < x[a0_0x1d27b3(0x8)]; i += 0x2) {\n    count = 0x0;\n    y = x[i];\n    if (y + x[i + 0x1] == 0x0)\n        break;\n    for (; y <= x[i + 0x1]; y++) {\n        if (y % 0x190 == 0x0 || y % 0x4 == 0x0 && y % 0x64 != 0x0) {\n            console[a0_0x1d27b3(0x9)](String(y)[a0_0x1d27b3(0x6)]());\n            count++;\n        }\n    }\n    if (i != 0x0 || i == x[a0_0x1d27b3(0x8)] - 0x1)\n        console[a0_0x1d27b3(0x9)]();\n    if (count == 0x0) {\n        console[a0_0x1d27b3(0x9)](a0_0x1d27b3(0xa));\n    }\n}", "test_cases": [["2001 2010\n2005 2005\n2001 2010\n0 0", "2004\n2008\n\nNA\n\n2004\n2008"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n// Here your code !\nx=require('fs').readFileSync('/dev/stdin','utf8').trim().split(/\\s/);\nfor(i=0;i<x.length;i+=2){\n    count=0;\n    y=x[i];\n    //if(i!=0||i==x.length-1)console.log();\n    if(y+x[i+1]==0)break;\n    for(;y<=x[i+1];y++){\n        if (y % 400 == 0 || (y % 4 == 0 && y % 100 != 0)){\n            console.log(String(y).trim());\n            count++;\n        }\n    }\n    if(i!=0||i==x.length-1)console.log();\n    if(count==0){\n        console.log(\"NA\\n\");\n    }\n    \n}", "language": "JavaScript"}
{"filename": "p02248_1", "type": "JavaScript", "obfuscated": "function a0_0x512f() {\n    var _0x13169e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'length',\n        'log'\n    ];\n    a0_0x512f = function () {\n        return _0x13169e;\n    };\n    return a0_0x512f();\n}\nvar a0_0x255c0d = a0_0x4d21;\nfunction a0_0x4d21(EsdRJM, key) {\n    var stringArray = a0_0x512f();\n    a0_0x4d21 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4d21(EsdRJM, key);\n}\nvar input = require('fs')[a0_0x255c0d(0x0)](a0_0x255c0d(0x1), 'utf8');\nvar arr = input[a0_0x255c0d(0x2)]()['split']('\\x0a');\nvar a = arr[0x0];\nvar b = arr[0x1];\nvar str = '';\nfor (var i = 0x0; i < a[a0_0x255c0d(0x3)]; i++) {\n    var flag = !![];\n    ;\n    for (var j = 0x0; j < b[a0_0x255c0d(0x3)]; j++) {\n        if (a[i + j] != b[j]) {\n            flag = ![];\n            break;\n        }\n    }\n    if (flag)\n        str += i + '\\x0a';\n}\nconsole[a0_0x255c0d(0x4)](str);", "test_cases": [["aabaaa\naa", "0\n3\n4"], ["xyzz\nyz", "1"], ["abc\nxyz", ""]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar a=arr[0];\nvar b=arr[1];\nvar str=\"\";\nfor(var i=0;i<a.length;i++){\n   var flag=true;;\n   for(var j=0;j<b.length;j++){\n      if(a[i+j]!=b[j]){\n         flag=false;\n         break;\n      }\n   }\n   if(flag)str+=i+\"\\n\";\n}\nconsole.log(str);", "language": "JavaScript"}
{"filename": "p02414_1", "type": "JavaScript", "obfuscated": "var a0_0x13e6c0 = a0_0x315a;\nfunction a0_0x5282() {\n    var _0x3c6bdc = [\n        'stdin',\n        'setEncoding',\n        'ascii',\n        'data',\n        'toString',\n        'split',\n        'length',\n        'map',\n        'slice',\n        'BmbQp',\n        'push'\n    ];\n    a0_0x5282 = function () {\n        return _0x3c6bdc;\n    };\n    return a0_0x5282();\n}\nvar n, m, l, a, b, bt;\nprocess[a0_0x13e6c0(0x0)][a0_0x13e6c0(0x1)](a0_0x13e6c0(0x2));\nprocess[a0_0x13e6c0(0x0)]['on'](a0_0x13e6c0(0x3), function (chunk) {\n    var _0x19c8da = a0_0x315a;\n    var line, ary;\n    line = chunk[_0x19c8da(0x4)]()['split'](/\\r?\\n/);\n    for (i in line) {\n        ary = line[i][_0x19c8da(0x5)]('\\x20');\n        if (ary[_0x19c8da(0x6)] !== 0x0)\n            line[i] = ary[_0x19c8da(0x7)](Number);\n    }\n    n = line[0x0][0x0];\n    m = line[0x0][0x1];\n    l = line[0x0][0x2];\n    a = line[_0x19c8da(0x8)](0x1, n + 0x1);\n    b = line[_0x19c8da(0x8)](n + 0x1, n + m + 0x1);\n});\nprocess[a0_0x13e6c0(0x0)]['on']('end', function () {\n    var _0x482477 = a0_0x315a;\n    var i, j, ci;\n    make_b_transpose();\n    for (i in a) {\n        if ('BmbQp' !== _0x482477(0x9)) {\n            ary = line[i][_0x482477(0x5)]('\\x20');\n            if (ary[_0x482477(0x6)] !== 0x0)\n                line[i] = ary[_0x482477(0x7)](Number);\n        } else {\n            ci = [];\n            for (j in bt) {\n                ci[_0x482477(0xa)](inner_product(a[i], bt[j]));\n            }\n            console['log'](ci['join']('\\x20'));\n        }\n    }\n});\nfunction a0_0x315a(vZmmQt, key) {\n    var stringArray = a0_0x5282();\n    a0_0x315a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x315a(vZmmQt, key);\n}\nfunction make_b_transpose() {\n    var _0x30662e = a0_0x315a;\n    var j, k, bj;\n    bt = [];\n    for (j = 0x0; j < l; j++) {\n        bj = [];\n        for (k = 0x0; k < m; k++)\n            bj[_0x30662e(0xa)](b[k][j]);\n        bt['push'](bj);\n    }\n}\nfunction inner_product(a, b) {\n    var res = 0x0;\n    for (var i in a)\n        res += a[i] * b[i];\n    return res;\n}", "test_cases": [["3 2 3\n1 2\n0 3\n4 5\n1 2 1\n0 3 2", "1 8 5\n0 9 6\n4 23 14"]], "original": "var n, m, l, a, b, bt;\n\nprocess.stdin.setEncoding('ascii');\nprocess.stdin.on('data', function (chunk) {\n\tvar line, ary;\n\tline = chunk.toString().split(/\\r?\\n/);\n\tfor (i in line) {\n\t\tary = line[i].split(' ');\n\t\tif (ary.length !== 0) line[i] = ary.map(Number);\n\t}\n\tn = line[0][0];\n\tm = line[0][1];\n\tl = line[0][2];\n\ta = line.slice(1, n+1);\n\tb = line.slice(n+1, n+m+1);\n});\n\nprocess.stdin.on('end', function() {\n\tvar i, j, ci;\n\n\tmake_b_transpose();\n\n\tfor (i in a) {\n\t\tci = [];\n\t\tfor (j in bt) {\n\t\t\tci.push(inner_product(a[i], bt[j]));\n\t\t}\n\t\tconsole.log(ci.join(' '));\n\t}\n});\n\nfunction make_b_transpose() {\n\tvar j, k, bj;\n\tbt = [];\n\tfor (j = 0; j < l; j++) {\n\t\tbj = [];\n\t\tfor (k = 0; k < m; k++)\n\t\t\tbj.push(b[k][j]);\n\t\tbt.push(bj);\n\t}\n}\n\nfunction inner_product(a, b) {\n\tvar res = 0;\n\tfor (var i in a) res += a[i] * b[i];\n\treturn res;\n}", "language": "JavaScript"}
{"filename": "p02598_1", "type": "JavaScript", "obfuscated": "const a0_0x574932 = a0_0x2b1f;\nfunction main(input) {\n    const _0x163426 = a0_0x2b1f;\n    const lines = input['split']('\\x0a');\n    const K = 0x0 | lines[0x0]['split']('\\x20')[0x1];\n    let arr = new Int32Array(lines[0x1][_0x163426(0x0)]('\\x20'));\n    let isOk = (t = 0x0, k = 0x0) => {\n        const _0xf5d33 = a0_0x2b1f;\n        if (_0xf5d33(0x1) !== _0xf5d33(0x1)) {\n            res = mid;\n            r = mid - 0x1;\n        } else {\n            arr[_0xf5d33(0x2)](v => {\n                let d = 0x0 | v / t;\n                if (v === d * t) {\n                    d--;\n                }\n                k -= d;\n            });\n            return k >= 0x0;\n        }\n    };\n    let l = 0x0;\n    let r = Math[_0x163426(0x3)](...arr);\n    let mid = 0x0 | (r + l) * 0.5;\n    let res = r;\n    while (l < r) {\n        if (isOk(mid, K)) {\n            res = mid;\n            r = mid - 0x1;\n        } else {\n            l = mid + 0x1;\n        }\n        mid = 0x0 | (r + l) * 0.5;\n    }\n    return res;\n}\nexports[a0_0x574932(0x4)] = main;\nfunction a0_0x7860() {\n    const _0x56d07e = [\n        'split',\n        'wLvkw',\n        'forEach',\n        'max',\n        'main',\n        'log',\n        'trim',\n        'argv',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x7860 = function () {\n        return _0x56d07e;\n    };\n    return a0_0x7860();\n}\nfunction a0_0x2b1f(FPrRqy, key) {\n    const stringArray = a0_0x7860();\n    a0_0x2b1f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b1f(FPrRqy, key);\n}\nfunction Main(input) {\n    const _0x52b6ab = a0_0x2b1f;\n    console[_0x52b6ab(0x5)](main(input[_0x52b6ab(0x6)]()));\n}\nif (process[a0_0x574932(0x7)][0x2] !== 'test') {\n    Main(require('fs')[a0_0x574932(0x8)](a0_0x574932(0x9), a0_0x574932(0xa)));\n}", "test_cases": [["2 3\n7 9", "4"], ["3 0\n3 4 5", "5"], ["10 10\n158260522 877914575 602436426 24979445 861648772 623690081 433933447 476190629 262703497 211047202", "292638192"]], "original": "//解説参照済み\n\nfunction main(input) {\n    const lines = input.split(\"\\n\");\n    const K = 0 | lines[0].split(\" \")[1];\n    let arr = new Int32Array(lines[1].split(\" \"));\n\n    let isOk = (t = 0, k = 0) => {\n        arr.forEach((v) => {\n            let d = 0 | v / t;\n            if (v === d * t) { d--; }\n            k -= d;\n        })\n        return k >= 0;\n    }\n\n    let l = 0;\n    let r = Math.max(...arr);\n    let mid = 0 | (r + l) * 0.5;\n    let res = r;\n    while (l < r) {\n        if (isOk(mid, K)) {\n            res = mid;\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n        mid = 0 | (r + l) * 0.5;\n    }\n    return res;\n}\n\n\n//******************************\nexports.main = main;\n\nfunction Main(input) {\n    console.log(main(input.trim()));\n}\n\nif (process.argv[2] !== \"test\") {\n    Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n}", "language": "JavaScript"}
{"filename": "p02699_1", "type": "JavaScript", "obfuscated": "const a0_0x5e71f8 = a0_0x4f4c;\nfunction a0_0x4f4c(mqbctu, key) {\n    const stringArray = a0_0x48bc();\n    a0_0x4f4c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f4c(mqbctu, key);\n}\nfunction Main(input) {\n    const _0xe34ced = a0_0x4f4c;\n    input = input[_0xe34ced(0x0)]('\\x20');\n    const S = parseInt(input[0x0]);\n    const W = parseInt(input[0x1]);\n    const ret = S <= W ? _0xe34ced(0x1) : _0xe34ced(0x2);\n    console[_0xe34ced(0x3)](ret);\n}\nfunction a0_0x48bc() {\n    const _0x39b471 = [\n        'split',\n        'unsafe',\n        'safe',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x48bc = function () {\n        return _0x39b471;\n    };\n    return a0_0x48bc();\n}\nMain(require('fs')[a0_0x5e71f8(0x4)]('/dev/stdin', a0_0x5e71f8(0x5)));", "test_cases": [["4 5", "unsafe"], ["100 2", "safe"], ["10 10", "unsafe"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\" \");\n\tconst S = parseInt(input[0]);\n  const W = parseInt(input[1]);\n\n  const ret = (S <= W)? 'unsafe' : 'safe';\n  console.log(ret);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02973_1", "type": "JavaScript", "obfuscated": "var a0_0x1e5320 = a0_0x5068;\nfunction a0_0x4216() {\n    var _0x21a32f = [\n        'split',\n        'pop',\n        'length',\n        'push',\n        'unshift',\n        'floor',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x4216 = function () {\n        return _0x21a32f;\n    };\n    return a0_0x4216();\n}\nfunction Main(input) {\n    var _0x3e8de9 = a0_0x5068;\n    input = input[_0x3e8de9(0x0)]('\\x0a');\n    if (input[input['length'] - 0x1] === '') {\n        input[_0x3e8de9(0x1)]();\n    }\n    const N = input[0x0] - 0x0;\n    var colors = [];\n    var temp;\n    var min, max, mid;\n    for (var i = 0x1; i < input[_0x3e8de9(0x2)]; i++) {\n        temp = input[i] - 0x0;\n        if (colors['length'] === 0x0) {\n            colors[_0x3e8de9(0x3)](temp);\n            continue;\n        }\n        if (temp <= colors[0x0]) {\n            colors[_0x3e8de9(0x4)](temp);\n            continue;\n        }\n        if (temp > colors[colors['length'] - 0x1]) {\n            colors[colors[_0x3e8de9(0x2)] - 0x1] = temp;\n            continue;\n        }\n        min = 0x0;\n        max = colors['length'] - 0x1;\n        while (max - min > 0x1) {\n            mid = Math[_0x3e8de9(0x5)]((max + min) / 0x2);\n            if (colors[mid] <= temp) {\n                max = mid;\n            } else {\n                min = mid;\n            }\n        }\n        colors[min] = temp;\n    }\n    console[_0x3e8de9(0x6)](colors['length']);\n}\nfunction a0_0x5068(KuBZiR, key) {\n    var stringArray = a0_0x4216();\n    a0_0x5068 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5068(KuBZiR, key);\n}\nMain(require('fs')[a0_0x1e5320(0x7)]('/dev/stdin', a0_0x1e5320(0x8)));", "test_cases": [["5\n2\n1\n4\n5\n3", "2"], ["4\n0\n0\n0\n0", "4"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0]-0;\n  var colors=[];\n  var temp;\n  var min,max,mid;\n  for(var i=1;i<input.length;i++){\n    temp=input[i]-0;\n    if(colors.length===0){\n      colors.push(temp);\n      continue;\n    }\n    if(temp<=colors[0]){\n      colors.unshift(temp);\n      continue;\n    }\n    if(temp>colors[colors.length-1]){\n      colors[colors.length-1]=temp;\n      continue;\n    }\n    min=0;\n    max=colors.length-1;\n    while(max-min>1){\n      mid=Math.floor((max+min)/2);\n      if(colors[mid]<=temp){\n        max=mid;\n      }else{\n        min=mid;\n      }\n    }\n    colors[min]=temp;\n  }\n  console.log(colors.length);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03067_1", "type": "JavaScript", "obfuscated": "var a0_0x270320 = a0_0x5734;\nfunction Main(input) {\n    var _0x4c18b8 = a0_0x5734;\n    var A = parseInt(input[0x0], 0xa);\n    var B = parseInt(input[0x1], 0xa);\n    var C = parseInt(input[0x2], 0xa);\n    if (A < B) {\n        if (_0x4c18b8(0x0) === 'UshVF') {\n            console[_0x4c18b8(0x1)]('Yes');\n        } else {\n            if (A < C && C < B) {\n                console[_0x4c18b8(0x1)](_0x4c18b8(0x2));\n            } else {\n                if (_0x4c18b8(0x3) !== _0x4c18b8(0x3)) {\n                    console[_0x4c18b8(0x1)]('No');\n                } else {\n                    console[_0x4c18b8(0x1)]('No');\n                }\n            }\n        }\n    } else {\n        if ('NTsnt' !== _0x4c18b8(0x4)) {\n            if (B < C && C < A) {\n                if (_0x4c18b8(0x5) !== _0x4c18b8(0x5)) {\n                    if (A < C && C < B) {\n                        console[_0x4c18b8(0x1)](_0x4c18b8(0x2));\n                    } else {\n                        console['log']('No');\n                    }\n                } else {\n                    console['log']('Yes');\n                }\n            } else {\n                if (_0x4c18b8(0x6) !== _0x4c18b8(0x6)) {\n                    console['log']('No');\n                } else {\n                    console[_0x4c18b8(0x1)]('No');\n                }\n            }\n        } else {\n            if (B < C && C < A) {\n                console['log'](_0x4c18b8(0x2));\n            } else {\n                console[_0x4c18b8(0x1)]('No');\n            }\n        }\n    }\n}\nMain(require('fs')[a0_0x270320(0x7)]('/dev/stdin', a0_0x270320(0x8))['trim']()[a0_0x270320(0x9)](/\\n|\\s/));\nfunction a0_0x5734(slLAIB, key) {\n    var stringArray = a0_0x491d();\n    a0_0x5734 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5734(slLAIB, key);\n}\nfunction a0_0x491d() {\n    var _0x4815c8 = [\n        'rqqcb',\n        'log',\n        'Yes',\n        'JAyyv',\n        'yCKcT',\n        'TmSLy',\n        'nkSEN',\n        'readFileSync',\n        'utf8',\n        'split'\n    ];\n    a0_0x491d = function () {\n        return _0x4815c8;\n    };\n    return a0_0x491d();\n}", "test_cases": [["3 8 5", "Yes"], ["7 3 1", "No"], ["10 2 4", "Yes"], ["31 41 59", "No"]], "original": "\nfunction Main(input) {\n  // 数字\n  var A = parseInt(input[0], 10);\n  var B = parseInt(input[1], 10);\n  var C = parseInt(input[2], 10);\n  // 文字\n  // var A = input[0];\n\n  if (A < B) {\n    if (A < C && C < B) {\n      console.log('Yes');\n    } else {\n      console.log('No');\n    }\n  } else {\n    if (B < C && C < A) {\n      console.log('Yes');\n    } else {\n      console.log('No');\n    }\n  }\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n|\\s/));", "language": "JavaScript"}
{"filename": "p03139_1", "type": "JavaScript", "obfuscated": "var a0_0x541d4c = a0_0x9dbe;\nfunction a0_0x9dbe(elADvX, key) {\n    var stringArray = a0_0x3fe6();\n    a0_0x9dbe = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9dbe(elADvX, key);\n}\nfunction main(input) {\n    input = input['split']('\\x20');\n    var max = input[0x1] < input[0x2] ? input[0x1] : input[0x2];\n    var min = input[0x0] - input[0x1] > input[0x2] ? 0x0 : input[0x2] - (input[0x0] - input[0x1]);\n    console['log'](max + '\\x20' + min);\n}\nmain(require('fs')['readFileSync'](a0_0x541d4c(0x0), a0_0x541d4c(0x1)));\nfunction a0_0x3fe6() {\n    var _0x2fa662 = [\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3fe6 = function () {\n        return _0x2fa662;\n    };\n    return a0_0x3fe6();\n}", "test_cases": [["10 3 5", "3 0"], ["10 7 5", "5 2"], ["100 100 100", "100 100"]], "original": "function main(input) {\n  input = input.split(\" \");\n  var max = input[1] < input[2] ? input[1] : input[2];\n  var min = input[0]-input[1] > input[2] ? 0 : input[2]-(input[0]-input[1]);\n  console.log(max + \" \" + min);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03149_1", "type": "JavaScript", "obfuscated": "var a0_0x266456 = a0_0x3fc6;\nfunction Main(input) {\n    var _0x155892 = a0_0x3fc6;\n    tmp = input[_0x155892(0x0)]('\\x20');\n    a = 0x0;\n    b = 0x0;\n    c = 0x0;\n    d = 0x0;\n    for (var i = 0x0; i < 0x4; i++) {\n        if (tmp[i] == '1') {\n            if (_0x155892(0x1) === _0x155892(0x2)) {\n                console[_0x155892(0x3)]('NO');\n            } else {\n                a = 0x1;\n            }\n        }\n        if (tmp[i] == '9') {\n            if (_0x155892(0x4) !== _0x155892(0x4)) {\n                c = 0x1;\n            } else {\n                b = 0x1;\n            }\n        }\n        if (tmp[i] == '7') {\n            if (_0x155892(0x5) === _0x155892(0x5)) {\n                c = 0x1;\n            } else {\n                console['log'](_0x155892(0x6));\n            }\n        }\n        if (tmp[i] == '4') {\n            if (_0x155892(0x7) === _0x155892(0x7)) {\n                d = 0x1;\n            } else {\n                a = 0x1;\n            }\n        }\n    }\n    if (a == 0x1 && b == 0x1 && c == 0x1 && d == 0x1) {\n        console[_0x155892(0x3)](_0x155892(0x6));\n    } else {\n        if (_0x155892(0x8) !== _0x155892(0x9)) {\n            console[_0x155892(0x3)]('NO');\n        } else {\n            d = 0x1;\n        }\n    }\n}\nMain(require('fs')[a0_0x266456(0xa)](a0_0x266456(0xb), 'utf8'));\nfunction a0_0x3fc6(yMiyng, key) {\n    var stringArray = a0_0x27a9();\n    a0_0x3fc6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fc6(yMiyng, key);\n}\nfunction a0_0x27a9() {\n    var _0x18d585 = [\n        'split',\n        'Cltxl',\n        'eIbLQ',\n        'log',\n        'KEwRK',\n        'xUcXD',\n        'YES',\n        'Vmflv',\n        'hDkzK',\n        'BtXgX',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x27a9 = function () {\n        return _0x18d585;\n    };\n    return a0_0x27a9();\n}", "test_cases": [["1 7 9 4", "YES"], ["1 9 7 4", "YES"], ["1 2 9 1", "NO"], ["4 9 0 8", "NO"]], "original": "function Main(input) {\n\ttmp = input.split(\" \");\n\ta=0;\n\tb=0;\n\tc=0;\n\td=0;\n\tfor ( var i = 0 ; i < 4 ; i++ ){\n\t\tif(tmp[i]==\"1\"){\n\t\t\ta=1;\n\t\t}\n\t\tif(tmp[i]==\"9\"){\n\t\t\tb=1;\n\t\t}\n\t\tif(tmp[i]==\"7\"){\n\t\t\tc=1;\n\t\t}\n\t\tif(tmp[i]==\"4\"){\n\t\t\td=1;\n\t\t}\n\t}\n\tif(a==1 && b==1 && c==1 && d==1){\n\t\tconsole.log(\"YES\");\n\t}else{\n\t\tconsole.log(\"NO\");\n\t}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03475_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x55cf90 = a0_0x1509;\nfunction a0_0x1509(waJMaw, key) {\n    const stringArray = a0_0x5aa9();\n    a0_0x1509 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1509(waJMaw, key);\n}\nfunction a0_0x5aa9() {\n    const _0x3baf3d = [\n        'split',\n        'shift',\n        'map',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5aa9 = function () {\n        return _0x3baf3d;\n    };\n    return a0_0x5aa9();\n}\nfunction main(input) {\n    const _0x16aa00 = a0_0x1509;\n    input = input[_0x16aa00(0x0)](/\\n/);\n    const n = ~~input[_0x16aa00(0x1)]();\n    input = input['map'](v => v[_0x16aa00(0x0)](/\\s/)[_0x16aa00(0x2)](x => ~~x));\n    let ans = '';\n    for (let i = 0x0; i < input[_0x16aa00(0x3)]; i++) {\n        let time = 0x0;\n        let wait = 0x0;\n        for (let j = i; j < input[_0x16aa00(0x3)]; j++) {\n            time += time > input[j][0x1] ? 0x0 : input[j][0x1] - time;\n            time += input[j][0x0];\n        }\n        ans += time + '\\x0a';\n    }\n    ans += '0\\x0a';\n    console[_0x16aa00(0x4)](ans);\n}\nmain(require('fs')[a0_0x55cf90(0x5)](a0_0x55cf90(0x6), a0_0x55cf90(0x7)));", "test_cases": [["3\n6 5 1\n1 10 1", "12\n11\n0"], ["4\n12 24 6\n52 16 4\n99 2 2", "187\n167\n101\n0"], ["4\n12 13 1\n44 17 17\n66 4096 64", "4162\n4162\n4162\n0"]], "original": "\"use strict\";\n\nfunction main(input) {\n  //かかる秒数　開業からの運行開始　運行間隔\n  input = input.split(/\\n/);\n  const n = ~~input.shift();\n  input = input.map(v => v.split(/\\s/).map(x => ~~x));\n\n  //[[12, 13, 1], [44, 17, 17], [66, 4096, 64]]\n  let ans = \"\";\n  for (let i = 0; i < input.length; i++) {\n    let time = 0;\n    let wait = 0;\n    for (let j = i; j < input.length; j++) {\n      time += time > input[j][1] ? 0 : input[j][1] - time;\n      time += input[j][0];\n    }\n    ans += time + \"\\n\";\n  }\n\n  ans += \"0\\n\";\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03564_1", "type": "JavaScript", "obfuscated": "var a0_0x2bee07 = a0_0x2519;\nfunction a0_0x2519(nhntwO, key) {\n    var stringArray = a0_0x425c();\n    a0_0x2519 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2519(nhntwO, key);\n}\nprocess[a0_0x2bee07(0x0)][a0_0x2bee07(0x1)]();\nprocess[a0_0x2bee07(0x0)]['setEncoding']('utf8');\nfunction a0_0x425c() {\n    var _0x1f3346 = [\n        'stdin',\n        'resume',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x425c = function () {\n        return _0x1f3346;\n    };\n    return a0_0x425c();\n}\nfunction Main(input) {\n    var _0x51b635 = a0_0x2519;\n    var tmp = input[_0x51b635(0x2)]('\\x0a');\n    var line0 = tmp[0x0][_0x51b635(0x2)]('\\x20');\n    var line1 = tmp[0x1][_0x51b635(0x2)]('\\x20');\n    var n = Number(line0[0x0]);\n    var k = Number(line1[0x0]);\n    var ans = 0x1;\n    for (var i = 0x1; i <= n; i++) {\n        if (ans < k)\n            ans *= 0x2;\n        else\n            ans += k;\n    }\n    console[_0x51b635(0x3)](ans);\n}\nMain(require('fs')[a0_0x2bee07(0x4)](a0_0x2bee07(0x5), a0_0x2bee07(0x6)));", "test_cases": [["4\n3", "10"], ["10\n10", "76"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var tmp = input.split(\"\\n\");\n  var line0 = tmp[0].split(\" \");\n  var line1 = tmp[1].split(\" \");\n  //var line2 = tmp[2].split(\" \");\n  //var line3 = tmp[3].split(\" \");\n\n  var n = Number(line0[0]);\n  var k = Number(line1[0]);\n//  var b = Number(line0[2]);\n\n  var ans = 1;\n\n  //console.log( n+\" \"+ k +\" \"+ \" hoge \")\n  \n  for(var i=1; i <=n; i++){\n    if(ans < k) ans *= 2;\n    else ans += k;\n  }\n\n  console.log(ans);\n  \n  \n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03699_1", "type": "JavaScript", "obfuscated": "function a0_0x4f89(WkGwZU, key) {\n    var stringArray = a0_0x301d();\n    a0_0x4f89 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f89(WkGwZU, key);\n}\nvar a0_0x3817dc = a0_0x4f89;\nfunction a0_0x301d() {\n    var _0x5bf0c5 = [\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'sort',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x301d = function () {\n        return _0x5bf0c5;\n    };\n    return a0_0x301d();\n}\nfunction Main(input) {\n    var _0x5c7d38 = a0_0x4f89;\n    input = input[_0x5c7d38(0x0)]()[_0x5c7d38(0x1)]('\\x0a')[_0x5c7d38(0x2)](input => Number(input));\n    var len = input[0x0];\n    input[_0x5c7d38(0x3)]();\n    input[_0x5c7d38(0x4)](function (a, b) {\n        return a - b;\n    });\n    var sum = 0x0;\n    for (var i = 0x0; i < input[_0x5c7d38(0x5)]; i++) {\n        sum += input[i];\n    }\n    var count = 0x0;\n    while (sum % 0xa == 0x0 && sum != 0x0) {\n        sum -= input[count];\n        count++;\n    }\n    console[_0x5c7d38(0x6)](sum);\n}\nMain(require('fs')[a0_0x3817dc(0x7)](a0_0x3817dc(0x8), a0_0x3817dc(0x9)));", "test_cases": [["3\n5\n10\n15", "25"], ["3\n10\n10\n15", "35"], ["3\n10\n20\n30", "0"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map((input)=>Number(input));\n  var len = input[0];\n  input.shift();\n  input.sort(function(a,b){\n  \treturn a - b;\n  });\n  var sum = 0;\n  for(var i = 0; i < input.length; i++){\n    sum += input[i];\n  }\n  var count = 0;\n  while(sum % 10 == 0 && sum != 0){\n     sum -= input[count];\n    count++;\n  }\n  console.log(sum);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03730_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x48c1a2 = a0_0x29b8;\nfunction a0_0x53b5() {\n    const _0x5c6797 = [\n        'split',\n        'YES',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x53b5 = function () {\n        return _0x5c6797;\n    };\n    return a0_0x53b5();\n}\nfunction a0_0x29b8(XslTOW, key) {\n    const stringArray = a0_0x53b5();\n    a0_0x29b8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x29b8(XslTOW, key);\n}\nconst main = arg => {\n    const _0x377b6f = a0_0x29b8;\n    let Nums = arg[_0x377b6f(0x0)]('\\x0a')[0x0][_0x377b6f(0x0)]('\\x20')['map'](n => Number(n));\n    let A = Nums[0x0], B = Nums[0x1], C = Nums[0x2];\n    let ans = 'NO';\n    for (let i = 0x1; i <= B; i++) {\n        if (A * i % B == C) {\n            ans = _0x377b6f(0x1);\n        }\n    }\n    console[_0x377b6f(0x2)](ans);\n};\nmain(require('fs')[a0_0x48c1a2(0x3)]('/dev/stdin', a0_0x48c1a2(0x4)));", "test_cases": [["7 5 1", "YES"], ["2 2 1", "NO"], ["1 100 97", "YES"], ["40 98 58", "YES"], ["77 42 36", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n  // とりあえず切り分け\n  let Nums = arg.split(\"\\n\")[0].split(\" \").map(n => Number(n));  \n  let A = Nums[0],B = Nums[1], C = Nums[2];\n  let ans = \"NO\";\n  // 解説見ての回答\n  for(let i = 1; i<= B; i++){\n  \tif(A*i % B == C){\n\t\tans = \"YES\"\n    }\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03804_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0xd7e1(WYMKwK, key) {\n    const stringArray = a0_0x349d();\n    a0_0xd7e1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xd7e1(WYMKwK, key);\n}\nconst a0_0xcb5535 = a0_0xd7e1;\nconst input = require('fs')[a0_0xcb5535(0x0)](a0_0xcb5535(0x1), a0_0xcb5535(0x2))[a0_0xcb5535(0x3)]()[a0_0xcb5535(0x4)]('\\x0a');\nconst NM = input[0x0][a0_0xcb5535(0x4)]('\\x20')[a0_0xcb5535(0x5)](Number);\nconst N = NM[0x0];\nconst M = NM[0x1];\nfunction a0_0x349d() {\n    const _0x43fbf8 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'slice',\n        'log',\n        'Yes',\n        'exit'\n    ];\n    a0_0x349d = function () {\n        return _0x43fbf8;\n    };\n    return a0_0x349d();\n}\nconst As = input[a0_0xcb5535(0x6)](0x1, N + 0x1);\nconst Bs = input['slice'](N + 0x1, N + M + 0x1);\nfor (let ax = 0x0; ax < N - M; ax++) {\n    for (let ay = 0x0; ay < N - M; ay++) {\n        let flag = !![];\n        for (let bx = 0x0; bx < M; bx++) {\n            for (let by = 0x0; by < M; by++) {\n                if (As[ax + bx][ay + by] !== Bs[bx][by]) {\n                    flag = ![];\n                    break;\n                }\n            }\n            if (!flag)\n                break;\n        }\n        if (flag) {\n            console[a0_0xcb5535(0x7)](a0_0xcb5535(0x8));\n            process[a0_0xcb5535(0x9)](0x0);\n        }\n    }\n}\nconsole[a0_0xcb5535(0x7)]('No');", "test_cases": [["3 2\n#.#\n.#.\n#.#\n#.\n.#", "Yes"], ["4 1\n....\n....\n....\n....\n#", "No"]], "original": "'use strict';\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nconst NM = input[0].split(' ').map(Number);\nconst N = NM[0];\nconst M = NM[1];\nconst As = input.slice(1, N + 1);\nconst Bs = input.slice(N + 1, N + M + 1);\n\nfor (let ax = 0; ax < N - M; ax++) {\n    for (let ay = 0; ay < N - M; ay++) {\n        let flag = true;\n        for (let bx = 0; bx < M; bx++) {\n            for (let by = 0; by < M; by++) {\n                if (As[ax + bx][ay + by] !== Bs[bx][by]) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (!flag) break;\n        }\n\n        if (flag) {\n            console.log('Yes');\n            process.exit(0);\n        }\n    }\n}\nconsole.log('No');", "language": "JavaScript"}
{"filename": "p02263_1", "type": "JavaScript", "obfuscated": "function a0_0x5174() {\n    const _0x159451 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'data',\n        'end',\n        'trim',\n        'split',\n        'map',\n        'zuCtL',\n        '+-/*',\n        'includes',\n        'JteYV',\n        'pop',\n        'push',\n        'log'\n    ];\n    a0_0x5174 = function () {\n        return _0x159451;\n    };\n    return a0_0x5174();\n}\nconst a0_0xec7e08 = a0_0x5c70;\nlet content = '';\nprocess[a0_0xec7e08(0x0)][a0_0xec7e08(0x1)]();\nprocess[a0_0xec7e08(0x0)][a0_0xec7e08(0x2)]('utf8');\nfunction a0_0x5c70(hKaXya, key) {\n    const stringArray = a0_0x5174();\n    a0_0x5c70 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c70(hKaXya, key);\n}\nprocess['stdin']['on'](a0_0xec7e08(0x3), buf => {\n    content += buf;\n});\nprocess[a0_0xec7e08(0x0)]['on'](a0_0xec7e08(0x4), () => {\n    const _0x1fe985 = a0_0x5c70;\n    const stack = [];\n    const tokens = content[_0x1fe985(0x5)]()[_0x1fe985(0x6)]('\\x20')[_0x1fe985(0x7)](line => {\n        const _0x40c60f = a0_0x5c70;\n        if (_0x40c60f(0x8) === 'CZcrx') {\n            const num = parseInt(line, 0xa);\n            return isNaN(num) ? line : num;\n        } else {\n            const num = parseInt(line, 0xa);\n            return isNaN(num) ? line : num;\n        }\n    });\n    const opTokens = _0x1fe985(0x9)['split']('');\n    for (const token of tokens) {\n        if (opTokens[_0x1fe985(0xa)](token)) {\n            if (_0x1fe985(0xb) === _0x1fe985(0xb)) {\n                const b = stack[_0x1fe985(0xc)]();\n                const a = stack[_0x1fe985(0xc)]();\n                stack[_0x1fe985(0xd)](expr(token, a, b));\n            } else {\n                if (opTokens['includes'](token)) {\n                    const b = stack['pop']();\n                    const a = stack['pop']();\n                    stack[_0x1fe985(0xd)](expr(token, a, b));\n                } else {\n                    stack[_0x1fe985(0xd)](token);\n                }\n            }\n        } else {\n            stack[_0x1fe985(0xd)](token);\n        }\n    }\n    console[_0x1fe985(0xe)](stack[_0x1fe985(0xc)]());\n});\nconst expr = (op, a, b) => {\n    switch (op) {\n    case '*':\n        return a * b;\n    case '/':\n        return a / b;\n    case '+':\n        return a + b;\n    case '-':\n        return a - b;\n    }\n};", "test_cases": [["1 2 +", "3"], ["1 2 + 3 4 - *", "-3"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\n\nprocess.stdin.on('end', () => {\n  const stack = [];\n  const tokens = content\n    .trim()\n    .split(' ')\n    .map(line => {\n      const num = parseInt(line, 10);\n      return isNaN(num) ? line : num;\n    });\n\n  const opTokens = '+-/*'.split('');\n  for (const token of tokens) {\n    if (opTokens.includes(token)) {\n      const b = stack.pop();\n      const a = stack.pop();\n      stack.push(expr(token, a, b));\n    } else {\n      stack.push(token);\n    }\n\n  }\n\n  console.log(stack.pop());\n});\n\nconst expr = (op, a, b) => {\n  switch(op) {\n    case '*':\n      return a * b;\n    case '/':\n      return a / b;\n    case '+':\n      return a + b;\n    case '-':\n      return a - b;\n  }\n};\n", "language": "JavaScript"}
{"filename": "p02609_1", "type": "JavaScript", "obfuscated": "const a0_0x34ab88 = a0_0xae89;\nconst input = require('fs')[a0_0x34ab88(0x0)](a0_0x34ab88(0x1), a0_0x34ab88(0x2));\nfunction a0_0xae89(lJRQRY, key) {\n    const stringArray = a0_0x1d54();\n    a0_0xae89 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xae89(lJRQRY, key);\n}\n(input => {\n    const _0x2a7cbb = a0_0xae89;\n    const lines = input['split']('\\x0a');\n    const N = lines[0x0] - 0x0;\n    const X = lines[0x1];\n    const popcount = n => {\n        const _0x386941 = a0_0xae89;\n        if (_0x386941(0x3) !== _0x386941(0x4)) {\n            let count = 0x0;\n            do {\n                if (_0x386941(0x5) !== _0x386941(0x6)) {\n                    n & 0x1 ? count++ : count;\n                } else {\n                    return 0x0;\n                }\n            } while (n = n >>> 0x1);\n            return count;\n        } else {\n            console[_0x386941(0x7)](0x0);\n        }\n    };\n    const f = n => {\n        const _0x536039 = a0_0xae89;\n        if (n === 0x0) {\n            if (_0x536039(0x8) !== _0x536039(0x9)) {\n                return 0x0;\n            } else {\n                let count = 0x0;\n                do {\n                    n & 0x1 ? count++ : count;\n                } while (n = n >>> 0x1);\n                return count;\n            }\n        }\n        let count = 0x1;\n        while (n %= popcount(n))\n            count++;\n        return count;\n    };\n    const x = parseInt(X, 0x2);\n    const pr = popcount(x) - 0x1;\n    const nx = popcount(x) + 0x1;\n    for (let i = 0x0; i < N; i++) {\n        if ('iFwEB' !== _0x2a7cbb(0xa)) {\n            console[_0x2a7cbb(0x7)](f(n % (X[i] === '1' ? pr : nx)) + 0x1);\n        } else {\n            let n = x ^ Math[_0x2a7cbb(0xb)](0x2, N - i - 0x1);\n            if (n === 0x0) {\n                if ('NhfiK' !== _0x2a7cbb(0xc)) {\n                    console[_0x2a7cbb(0x7)](0x0);\n                } else {\n                    let n = x ^ Math[_0x2a7cbb(0xb)](0x2, N - i - 0x1);\n                    if (n === 0x0) {\n                        console[_0x2a7cbb(0x7)](0x0);\n                    } else {\n                        console[_0x2a7cbb(0x7)](f(n % (X[i] === '1' ? pr : nx)) + 0x1);\n                    }\n                }\n            } else {\n                console['log'](f(n % (X[i] === '1' ? pr : nx)) + 0x1);\n            }\n        }\n    }\n})(input);\nfunction a0_0x1d54() {\n    const _0x31cfd2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'fHXTt',\n        'iwzZe',\n        'XWoKX',\n        'PUauG',\n        'log',\n        'ByXoE',\n        'YsiKL',\n        'iFwEB',\n        'pow',\n        'IuYNF'\n    ];\n    a0_0x1d54 = function () {\n        return _0x31cfd2;\n    };\n    return a0_0x1d54();\n}", "test_cases": [["3\n011", "2\n1\n1"], ["23\n00110111001011011001110", "2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n\n    const lines = input.split('\\n')\n    const N = lines[0] - 0\n    const X = lines[1]\n\n    const popcount = n => {\n        let count = 0\n        do {\n            n & 1 ? count++ : count\n        } while  (n = n >>> 1)\n        return count\n    }\n\n    const f = n => {\n        if (n === 0) {\n            return 0\n        }\n        let count = 1\n        while (n %= popcount(n)) count++\n        return count\n    }\n\n    const x = parseInt(X, 2)\n    const pr = popcount(x) - 1\n    const nx = popcount(x) + 1\n    for (let i = 0; i < N; i++) {\n        let n = x ^ Math.pow(2, N - i - 1)\n        if (n === 0) {\n            console.log(0)\n        } else {\n            console.log(f(n % (X[i] === '1' ? pr : nx)) + 1)\n        }\n    }\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02925_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5732d1 = a0_0x1fcb;\nfunction a0_0x3a04() {\n    const _0x5d1bc9 = [\n        'shift',\n        'map',\n        'length',\n        'some',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3a04 = function () {\n        return _0x5d1bc9;\n    };\n    return a0_0x3a04();\n}\nfunction main(stdin) {\n    const _0x1ae9c7 = a0_0x1fcb;\n    const input = stdin['split']('\\x0a');\n    const N = Number(input[_0x1ae9c7(0x0)]());\n    const params = input[_0x1ae9c7(0x1)](p => p['split']('\\x20')[_0x1ae9c7(0x1)](v => parseInt(v, 0xa)));\n    console['log'](solve(params));\n}\nfunction a0_0x1fcb(iShlfv, key) {\n    const stringArray = a0_0x3a04();\n    a0_0x1fcb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1fcb(iShlfv, key);\n}\nfunction solve(params) {\n    const _0x30bd1e = a0_0x1fcb;\n    const l = params[_0x30bd1e(0x2)];\n    function matching() {\n        let matched = ![];\n        for (let i = 0x0; i < l; ++i) {\n            const op = params[i][cur[i]] - 0x1;\n            if (isNaN(op))\n                continue;\n            if (params[op][cur[op]] - 0x1 === i) {\n                matched = !![];\n                ++cur[i];\n                ++cur[op];\n            }\n        }\n        return matched;\n    }\n    function isNotCompleted() {\n        const _0x2157d5 = a0_0x1fcb;\n        return cur[_0x2157d5(0x3)](v => v < l - 0x1);\n    }\n    const cur = [];\n    for (let i = 0x0; i < l; ++i) {\n        cur[i] = 0x0;\n    }\n    let day = 0x1;\n    while (isNotCompleted()) {\n        const res = matching();\n        if (res === ![])\n            return -0x1;\n        ++day;\n    }\n    return day;\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x5732d1(0x4))[a0_0x5732d1(0x5)]());", "test_cases": [["3\n2 3\n1 3\n1 2", "3"], ["4\n2 3 4\n1 3 4\n4 1 2\n3 1 2", "4"], ["3\n2 3\n3 1\n1 2", "-1"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  const N = Number(input.shift());\n  const params = input.map(p => p.split(' ').map(v => parseInt(v, 10)));\n  \n  console.log(solve(params));\n}\n\nfunction solve(params) {\n  const l = params.length;\n\n  function matching() {\n    let matched = false;\n\n    for (let i = 0; i < l; ++i) {\n      const op = params[i][cur[i]] - 1;\n      if (isNaN(op)) continue;\n      if (params[op][cur[op]] - 1 === i) {\n        matched = true;\n        ++cur[i];\n        ++cur[op];\n      }\n    }\n\n    return matched;\n  }\n\n  function isNotCompleted() {\n    return cur.some(v => v < l - 1);\n  }\n\n  const cur = [];\n  for (let i = 0; i < l; ++i) {\n    cur[i] = 0;\n  }\n\n  let day = 1;\n  while (isNotCompleted()) {\n    const res = matching();\n    if (res === false) return -1;\n    ++day;\n  }\n\n  return day;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim());", "language": "JavaScript"}
{"filename": "p03111_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x439822 = a0_0x3cdd;\nfunction main(input) {\n    const _0x1d7814 = a0_0x3cdd;\n    input = input[_0x1d7814(0x0)]()[_0x1d7814(0x1)]('\\x0a');\n    let ABC = input['shift']()['split']('\\x20')[_0x1d7814(0x2)](v => Number(v));\n    const N = ABC[_0x1d7814(0x3)]();\n    input = input[_0x1d7814(0x2)](v => Number(v))[_0x1d7814(0x4)]((a, b) => b - a);\n    const INF = Math['pow'](0xa, 0x9);\n    const dfs = (cur, a, b, c) => {\n        const _0x4b7077 = a0_0x3cdd;\n        if (cur === N) {\n            if (Math[_0x4b7077(0x5)](a, b, c) > 0x0) {\n                return Math[_0x4b7077(0x6)](a - ABC[0x0]) + Math[_0x4b7077(0x6)](b - ABC[0x1]) + Math['abs'](c - ABC[0x2]) - 0x1e;\n            }\n            return INF;\n        }\n        return Math['min'](dfs(cur + 0x1, a, b, c), dfs(cur + 0x1, a + input[cur], b, c) + 0xa, dfs(cur + 0x1, a, b + input[cur], c) + 0xa, dfs(cur + 0x1, a, b, c + input[cur]) + 0xa);\n    };\n    console[_0x1d7814(0x7)](dfs(0x0, 0x0, 0x0, 0x0));\n}\nmain(require('fs')[a0_0x439822(0x8)](a0_0x439822(0x9), 'utf8'));\nfunction a0_0x3cdd(QtRTFf, key) {\n    const stringArray = a0_0x39ff();\n    a0_0x3cdd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3cdd(QtRTFf, key);\n}\nfunction a0_0x39ff() {\n    const _0x1b9a32 = [\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'sort',\n        'min',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x39ff = function () {\n        return _0x1b9a32;\n    };\n    return a0_0x39ff();\n}", "test_cases": [["5 100 90 80\n98\n40\n30\n21\n80", "23"], ["8 100 90 80\n100\n100\n90\n90\n90\n80\n80\n80", "0"], ["8 1000 800 100\n300\n333\n400\n444\n500\n555\n600\n666", "243"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  let ABC = input.shift().split(' ').map(v => Number(v))\n  const N = ABC.shift()\n  input = input.map(v => Number(v)).sort((a, b) => b - a)\n  const INF = Math.pow(10, 9)\n\n  const dfs = (cur, a, b, c) => {\n    if (cur === N) {\n      if (Math.min(a, b, c) > 0) {\n        return Math.abs(a - ABC[0]) + Math.abs(b - ABC[1]) + Math.abs(c - ABC[2]) - 30\n      }\n      return INF\n    }\n    return Math.min(\n      dfs(cur+1, a, b, c),\n      dfs(cur+1, a + input[cur], b, c) + 10,\n      dfs(cur+1, a, b + input[cur], c) + 10,\n      dfs(cur+1, a, b, c + input[cur]) + 10\n    )\n  }\n  console.log(dfs(0,0,0,0))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03172_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x1edf3f = a0_0x46bf;\nconst mod = 0x3b9aca00 + 0x7;\nfunction solve(N, K, A) {\n    var _0x16f9cc = a0_0x46bf;\n    if (K === 0x0) {\n        return 0x1;\n    }\n    var dp = new Array(K + 0x1)[_0x16f9cc(0x0)](0x0);\n    var prefix = new Array(N)[_0x16f9cc(0x0)](0x0)['map'](e => new Array(K + 0x1)[_0x16f9cc(0x0)](0x0));\n    for (var i = N - 0x1; i >= 0x0; i--) {\n        for (var j = 0x0; j <= K; j++) {\n            if (_0x16f9cc(0x1) !== _0x16f9cc(0x2)) {\n                if (i === N - 0x1) {\n                    if ('AiCFj' !== _0x16f9cc(0x3)) {\n                        dp[j] = j <= A[i] ? 0x1 : 0x0;\n                        prefix[i][j] = j - 0x1 >= 0x0 ? prefix[i][j - 0x1] % mod + dp[j] % mod : dp[j] % mod;\n                    } else {\n                        for (var j = 0x0; j <= K; j++) {\n                            if (i === N - 0x1) {\n                                dp[j] = j <= A[i] ? 0x1 : 0x0;\n                                prefix[i][j] = j - 0x1 >= 0x0 ? prefix[i][j - 0x1] % mod + dp[j] % mod : dp[j] % mod;\n                            } else {\n                                dp[j] = j <= A[i] ? prefix[i + 0x1][j] % mod : prefix[i + 0x1][j] % mod - prefix[i + 0x1][j - A[i] - 0x1] % mod;\n                                prefix[i][j] = j - 0x1 >= 0x0 ? prefix[i][j - 0x1] % mod + dp[j] % mod : dp[j] % mod;\n                            }\n                        }\n                    }\n                } else {\n                    if (_0x16f9cc(0x4) !== _0x16f9cc(0x5)) {\n                        dp[j] = j <= A[i] ? prefix[i + 0x1][j] % mod : prefix[i + 0x1][j] % mod - prefix[i + 0x1][j - A[i] - 0x1] % mod;\n                        prefix[i][j] = j - 0x1 >= 0x0 ? prefix[i][j - 0x1] % mod + dp[j] % mod : dp[j] % mod;\n                    } else {\n                        dp[j] = j <= A[i] ? prefix[i + 0x1][j] % mod : prefix[i + 0x1][j] % mod - prefix[i + 0x1][j - A[i] - 0x1] % mod;\n                        prefix[i][j] = j - 0x1 >= 0x0 ? prefix[i][j - 0x1] % mod + dp[j] % mod : dp[j] % mod;\n                    }\n                }\n            } else {\n                return 0x1;\n            }\n        }\n    }\n    return dp[K] % mod;\n}\nfunction a0_0x46bf(XyJNrw, key) {\n    var stringArray = a0_0x3ce4();\n    a0_0x46bf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x46bf(XyJNrw, key);\n}\nfunction main(input) {\n    var _0x4c3039 = a0_0x46bf;\n    var lines = input[_0x4c3039(0x6)]('\\x0a');\n    var NK = lines[0x0][_0x4c3039(0x6)]('\\x20')[_0x4c3039(0x7)](l => parseInt(l));\n    var N = NK[0x0];\n    var K = NK[0x1];\n    var A = lines[0x1][_0x4c3039(0x6)]('\\x20')[_0x4c3039(0x7)](l => parseInt(l));\n    var ans = solve(N, K, A);\n    console[_0x4c3039(0x8)](ans);\n}\nmain(require('fs')[a0_0x1edf3f(0x9)](a0_0x1edf3f(0xa), 'utf8'));\nfunction a0_0x3ce4() {\n    var _0x5631f5 = [\n        'fill',\n        'ekZmj',\n        'YEgSq',\n        'OSKDf',\n        'gPFje',\n        'KQUJI',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3ce4 = function () {\n        return _0x5631f5;\n    };\n    return a0_0x3ce4();\n}", "test_cases": [["3 4\n1 2 3", "5"], ["1 10\n9", "0"], ["2 0\n0 0", "1"], ["4 100000\n100000 100000 100000 100000", "665683269"]], "original": "'use strict'\n\nconst mod = 1e9 + 7\n\nfunction solve(N, K, A) {\n  if (K === 0) {\n    return 1\n  }\n  var dp = new Array(K+1).fill(0)\n  var prefix = new Array(N).fill(0).map(e => new Array(K+1).fill(0))\n\n  for (var i = N-1; i >= 0; i--) {\n    for (var j = 0; j <= K; j++) {\n      if (i === (N-1)) {\n        dp[j] = j <= A[i] ? 1 : 0\n        prefix[i][j] = (j - 1) >= 0 ? (prefix[i][j-1] % mod) + (dp[j] % mod) : dp[j] % mod\n      } else {\n        dp[j] = j <= A[i] ? prefix[i+1][j] % mod : (prefix[i+1][j] % mod) - (prefix[i+1][j - A[i] - 1] % mod)\n        prefix[i][j] = (j - 1) >= 0 ? (prefix[i][j-1] % mod) + (dp[j] % mod) : dp[j] % mod\n      }\n    }\n  }\n  return dp[K] % mod\n}\n\nfunction main(input) {\n  var lines = input.split(\"\\n\")\n  var NK = lines[0].split(' ').map(l => parseInt(l))\n  var N = NK[0]\n  var K = NK[1]\n  var A = lines[1].split(' ').map(l => parseInt(l))\n  var ans = solve(N, K, A)\n  console.log(ans)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03196_1", "type": "JavaScript", "obfuscated": "var a0_0x3e4644 = a0_0x5ac0;\ninp = require('fs')[a0_0x3e4644(0x0)](a0_0x3e4644(0x1), a0_0x3e4644(0x2))[a0_0x3e4644(0x3)]()['split']('\\x0a');\nfunction a0_0x4a22() {\n    var _0x24553d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'nuxtO',\n        'push',\n        'teOCY',\n        'FSWSZ',\n        'length',\n        'log'\n    ];\n    a0_0x4a22 = function () {\n        return _0x24553d;\n    };\n    return a0_0x4a22();\n}\nl = inp['shift']()[a0_0x3e4644(0x4)]('\\x20');\nN = l[a0_0x3e4644(0x5)]() * 0x1;\nP = l[a0_0x3e4644(0x5)]() * 0x1;\n_primFactors = function (n) {\n    var _0x2c60ac = a0_0x5ac0;\n    var arr = [];\n    if (n == 0x1) {\n        if ('nuxtO' !== _0x2c60ac(0x6)) {\n            do {\n                r++;\n                n /= i;\n            } while (n % i === 0x0);\n            arr[_0x2c60ac(0x7)]({\n                'n': i,\n                'r': r\n            });\n        } else {\n            return [{\n                    'n': 0x1,\n                    'r': 0x1\n                }];\n        }\n    }\n    s = n;\n    var i = 0x2;\n    r = 0x0;\n    if (n % i === 0x0) {\n        if (_0x2c60ac(0x8) !== 'azxBG') {\n            do {\n                r++;\n                n /= i;\n            } while (n % i === 0x0);\n            arr[_0x2c60ac(0x7)]({\n                'n': i,\n                'r': r\n            });\n        } else {\n            arr[_0x2c60ac(0x7)]({\n                'n': n,\n                'r': 0x1\n            });\n        }\n    }\n    for (i = 0x3; i * i <= s; i += 0x2) {\n        r = 0x0;\n        if (n % i === 0x0) {\n            do {\n                r++;\n                n /= i;\n            } while (n % i === 0x0);\n            arr['push']({\n                'n': i,\n                'r': r\n            });\n        }\n    }\n    if (n > 0x1) {\n        if (_0x2c60ac(0x9) === _0x2c60ac(0x9)) {\n            arr[_0x2c60ac(0x7)]({\n                'n': n,\n                'r': 0x1\n            });\n        } else {\n            return [{\n                    'n': 0x1,\n                    'r': 0x1\n                }];\n        }\n    }\n    return arr;\n};\narr = _primFactors(P);\nans = 0x1;\nfor (i = 0x0; i < arr[a0_0x3e4644(0xa)]; i++) {\n    a = arr[i];\n    r = a['r'];\n    while (r >= N) {\n        ans *= a['n'];\n        r -= N;\n    }\n}\nfunction a0_0x5ac0(JPvpTy, key) {\n    var stringArray = a0_0x4a22();\n    a0_0x5ac0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ac0(JPvpTy, key);\n}\nconsole[a0_0x3e4644(0xb)](ans);", "test_cases": [["3 24", "2"], ["5 1", "1"], ["1 111", "111"], ["4 972439611840", "206"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\nN = l.shift() * 1\nP = l.shift() * 1\n\n// 素因数分解\n_primFactors = function(n) {\n  var arr = []\n  if (n == 1) {\n      return [{n:1, r:1}]\n  }\n  s = n\n\n  var i = 2\n  r = 0\n  if (n % i === 0) {\n    do {\n      r++\n      n /= i\n    } while(n%i===0)\n    arr.push({n: i, r: r})\n  }\n  \n  for (i = 3; i*i <= s; i+=2) {\n    r = 0\n    if (n % i === 0) {\n       do {\n           r++\n           n /= i\n       } while(n%i===0)\n       arr.push({n: i, r: r})\n    }\n  }\n  if (n > 1) {\n      arr.push({n: n, r: 1})\n  }\n  return arr\n}\n\narr = _primFactors(P)\nans = 1\nfor (i=0; i<arr.length;i++) {\n    a = arr[i]\n    r = a.r\n    while (r>=N) {\n        ans *= a.n\n        r -= N\n    }\n}\nconsole.log(ans)", "language": "JavaScript"}
{"filename": "p03265_1", "type": "JavaScript", "obfuscated": "function a0_0x130f(FMqqJy, key) {\n    var stringArray = a0_0x19d5();\n    a0_0x130f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x130f(FMqqJy, key);\n}\nvar a0_0x1e2ef1 = a0_0x130f;\nprocess[a0_0x1e2ef1(0x0)][a0_0x1e2ef1(0x1)]();\nprocess['stdin'][a0_0x1e2ef1(0x2)]('utf8');\nvar lines = [];\nvar reader = require('readline')[a0_0x1e2ef1(0x3)]({\n    'input': process[a0_0x1e2ef1(0x0)],\n    'output': process[a0_0x1e2ef1(0x4)]\n});\nfunction a0_0x19d5() {\n    var _0x3a1dd = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'createInterface',\n        'stdout',\n        'line',\n        'close',\n        'split',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x19d5 = function () {\n        return _0x3a1dd;\n    };\n    return a0_0x19d5();\n}\nreader['on'](a0_0x1e2ef1(0x5), line => {\n    lines['push'](line);\n});\nreader['on'](a0_0x1e2ef1(0x6), () => {\n    var _0x397a14 = a0_0x130f;\n    var abcd = lines[0x0][_0x397a14(0x7)]('\\x20');\n    var one = Number(abcd[0x0]);\n    var two = Number(abcd[0x1]);\n    var three = Number(abcd[0x2]);\n    var four = Number(abcd[0x3]);\n    var ans = [];\n    ans[_0x397a14(0x8)](three + (two - four));\n    ans[_0x397a14(0x8)](three + four - one);\n    ans['push'](one + two - four);\n    ans[_0x397a14(0x8)](three + two - one);\n    console[_0x397a14(0x9)](ans[_0x397a14(0xa)]('\\x20'));\n});", "test_cases": [["0 0 0 1", "-1 1 -1 0"], ["2 3 6 6", "3 10 -1 7"], ["31 -41 -59 26", "-126 -64 -36 -131"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = []\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on('line', (line) => {\n  lines.push(line);\n});\n\nreader.on('close', () => {\n var abcd = lines[0].split(' ');\n var one = Number(abcd[0]);\n var two = Number(abcd[1]);\n var three = Number(abcd[2]);\n var four = Number(abcd[3]);\n\n var ans = [];\n ans.push(three + (two - four));\n ans.push((three + four) - one);\n ans.push((one + two) - four);\n ans.push((three + two) - one);\n\n console.log(ans.join(' '));\n \n});", "language": "JavaScript"}
{"filename": "p03598_1", "type": "JavaScript", "obfuscated": "var a0_0x14aa22 = a0_0x5706;\nfunction a0_0x5706(wvFeMN, key) {\n    var stringArray = a0_0x255c();\n    a0_0x5706 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5706(wvFeMN, key);\n}\nfunction a0_0x255c() {\n    var _0x206c76 = [\n        'split',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x255c = function () {\n        return _0x206c76;\n    };\n    return a0_0x255c();\n}\nfunction Main(input) {\n    var _0x1d3f6f = a0_0x5706;\n    var input = input[_0x1d3f6f(0x0)]('\\x0a');\n    var ballXList = input[0x2]['split']('\\x20');\n    var ret = 0x0;\n    for (var i = 0x0; i < input[0x0]; i++) {\n        var aDistance = ballXList[i];\n        var bDistance = input[0x1] - ballXList[i];\n        var ret = ret + (aDistance < bDistance ? aDistance : bDistance) * 0x2;\n    }\n    console[_0x1d3f6f(0x1)](ret);\n}\nMain(require('fs')['readFileSync'](a0_0x14aa22(0x2), 'utf8'));", "test_cases": [["1\n10\n2", "4"], ["2\n9\n3 6", "12"], ["5\n20\n11 12 9 17 12", "74"]], "original": "function Main(input) {\n  var input = input.split('\\n');\n\n  var ballXList = input[2].split(' ');\n  var ret = 0;\n  for (var i = 0; i < input[0]; i++) {\n    var aDistance = ballXList[i];\n    var bDistance = input[1] - ballXList[i];\n    var ret = ret + (aDistance < bDistance ? aDistance : bDistance) * 2;\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03767_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1da3(ONSiOK, key) {\n    const stringArray = a0_0x358c();\n    a0_0x1da3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1da3(ONSiOK, key);\n}\nfunction a0_0x358c() {\n    const _0xf80f82 = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x358c = function () {\n        return _0xf80f82;\n    };\n    return a0_0x358c();\n}\nconst a0_0x167a26 = a0_0x1da3;\nfunction Main(input) {\n    const _0x3893c5 = a0_0x1da3;\n    const params = input['trim']()['split']('\\x0a');\n    const N = Number(params[0x0][_0x3893c5(0x0)]());\n    const sortedA = params[0x1][_0x3893c5(0x0)]()[_0x3893c5(0x1)]('\\x20')[_0x3893c5(0x2)](Number)['sort']((a, b) => b - a);\n    let total = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        total += sortedA[i * 0x2 + 0x1];\n    }\n    console[_0x3893c5(0x3)](total);\n}\nMain(require('fs')[a0_0x167a26(0x4)](a0_0x167a26(0x5), 'utf8'));", "test_cases": [["2\n5 2 8 5 1 5", "10"], ["10\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "10000000000"]], "original": "// https://atcoder.jp/contests/agc012/tasks/agc012_a\n\"use strict\";\nfunction Main(input) {\n  const params = input.trim().split(\"\\n\");\n  const N = Number(params[0].trim());\n  const sortedA = params[1]\n    .trim()\n    .split(\" \")\n    .map(Number)\n    .sort((a, b) => b - a);\n\n  let total = 0;\n  for (let i = 0; i < N; i++) {\n    total += sortedA[i * 2 + 1];\n  }\n\n  console.log(total);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03785_1", "type": "JavaScript", "obfuscated": "var a0_0x4369dc = a0_0x35ac;\nfunction a0_0x2c98() {\n    var _0x4db9d7 = [\n        'split',\n        'map',\n        'slice',\n        'sort',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2c98 = function () {\n        return _0x4db9d7;\n    };\n    return a0_0x2c98();\n}\nfunction a0_0x35ac(HEmWol, key) {\n    var stringArray = a0_0x2c98();\n    a0_0x35ac = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x35ac(HEmWol, key);\n}\nfunction Main(s) {\n    var _0x3d95de = a0_0x35ac;\n    var s = s['split']('\\x0a');\n    var zero = s[0x0][_0x3d95de(0x0)]('\\x20')[_0x3d95de(0x1)](e => parseInt(e, 0xa));\n    var t = s[_0x3d95de(0x2)](0x1)[_0x3d95de(0x1)](e => parseInt(e, 0xa))[_0x3d95de(0x3)]((a, b) => a - b);\n    var cnt = 0x1;\n    var c = zero[0x1];\n    for (var i = 0x1; i < zero[0x0]; i++) {\n        if (t[i - 0x1] <= t[i] && t[i] <= t[i - 0x1] + zero[0x2]) {\n            c--;\n            if (c === 0x0) {\n                cnt++;\n                c = zero[0x1];\n            }\n        } else {\n            cnt++;\n            c = zero[0x1];\n        }\n    }\n    console[_0x3d95de(0x4)](cnt);\n}\nMain(require('fs')[a0_0x4369dc(0x5)](a0_0x4369dc(0x6), a0_0x4369dc(0x7)));", "test_cases": [["5 3 5\n1\n2\n3\n6\n12", "3"], ["6 3 3\n7\n6\n2\n8\n10\n6", "3"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\");\n  var zero = s[0].split(\" \").map(e => parseInt(e, 10));\n  var t = s.slice(1).map(e => parseInt(e, 10)).sort((a, b) => a - b);\n  var cnt = 1;\n  var c = zero[1];\n  for (var i = 1; i < zero[0]; i++) {\n    if (t[i - 1] <= t[i] && t[i] <= t[i - 1] + zero[2]) {\n      c--;\n      if (c === 0) {\n        cnt++;\n        c = zero[1];\n      }\n    } else {\n      cnt++;\n      c = zero[1];\n    }\n  }\n  console.log(cnt);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02257_1", "type": "JavaScript", "obfuscated": "var a0_0x16da08 = a0_0x40c9;\nvar input = require('fs')[a0_0x16da08(0x0)](a0_0x16da08(0x1), a0_0x16da08(0x2));\nvar Arr = input[a0_0x16da08(0x3)]()['split']('\\x0a')[a0_0x16da08(0x4)](Number);\nArr[a0_0x16da08(0x5)]();\nfunction a0_0x40c9(qicsnz, key) {\n    var stringArray = a0_0x11bb();\n    a0_0x40c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x40c9(qicsnz, key);\n}\nArr[a0_0x16da08(0x6)](function (a, b) {\n    return a - b;\n});\nvar max = Arr[Arr[a0_0x16da08(0x7)] - 0x1];\nfunction a0_0x11bb() {\n    var _0x35b80c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'shift',\n        'sort',\n        'length',\n        'sqrt',\n        'push',\n        'indexOf',\n        'log'\n    ];\n    a0_0x11bb = function () {\n        return _0x35b80c;\n    };\n    return a0_0x11bb();\n}\nvar arr = [0x2];\nfor (var i = 0x3; i <= max; i = i + 0x2) {\n    var a = !![];\n    var sqrt = ~~Math[a0_0x16da08(0x8)](i) + 0x1;\n    for (var j = 0x0; j < arr['length']; j++) {\n        if (arr[j] > sqrt)\n            break;\n        if (i % arr[j] == 0x0) {\n            a = ![];\n            break;\n        }\n    }\n    if (a)\n        arr[a0_0x16da08(0x9)](i);\n}\nvar num = 0x0;\nvar f = 0x0;\nfor (var i = 0x0; i < Arr[a0_0x16da08(0x7)]; i++) {\n    if (Arr[i] != 0x2 && Arr[i] % 0x2 == 0x0)\n        continue;\n    var index = arr[a0_0x16da08(0xa)](Arr[i], f);\n    if (index != -0x1) {\n        f = index;\n        num++;\n    }\n}\nconsole[a0_0x16da08(0xb)](num);", "test_cases": [["5\n2\n3\n4\n5\n6", "3"], ["11\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n \nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nArr.shift();\nArr.sort(function(a,b){return a-b;});\nvar max=Arr[Arr.length-1];\nvar arr=[2];\n \nfor(var i=3;i<=max;i=i+2){\n   var a=true;\n   var sqrt=~~(Math.sqrt(i))+1;\n   for(var j=0;j<arr.length;j++){\n      if(arr[j]>sqrt)break;\n      if(i%arr[j]==0){\n         a=false;\n         break;\n      }\n   }\n   if(a)arr.push(i);\n}\n \nvar num=0;\nvar f=0;\n \nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]!=2 && Arr[i]%2==0)continue;\n   var index=arr.indexOf(Arr[i],f);\n   if(index!=-1){\n      f=index;\n      num++;\n   }\n}\nconsole.log(num);", "language": "JavaScript"}
{"filename": "p02267_1", "type": "JavaScript", "obfuscated": "function a0_0x21ef(nEaqyD, key) {\n    var stringArray = a0_0x2b06();\n    a0_0x21ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x21ef(nEaqyD, key);\n}\nvar a0_0x3c060d = a0_0x21ef;\nfunction Main(input) {\n    var _0x47984c = a0_0x21ef;\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var q = parseInt(input[0x2], 0xa);\n    input[0x1] = input[0x1][_0x47984c(0x0)]('\\x20');\n    input[0x3] = input[0x3][_0x47984c(0x0)]('\\x20');\n    var s = Array(n), t = Array(q);\n    for (var i = 0x0; i < n; i++) {\n        s[i] = parseInt(input[0x1][i], 0xa);\n    }\n    for (var i = 0x0; i < q; i++) {\n        t[i] = parseInt(input[0x3][i], 0xa);\n    }\n    var count = 0x0;\n    for (var i = 0x0; i < q; i++) {\n        var j;\n        for (j = 0x0; j < n; j++) {\n            if (s[j] == t[i])\n                break;\n        }\n        if (j < n)\n            count++;\n    }\n    console[_0x47984c(0x1)](count);\n}\nfunction a0_0x2b06() {\n    var _0x3d4d18 = [\n        'split',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x2b06 = function () {\n        return _0x3d4d18;\n    };\n    return a0_0x2b06();\n}\nMain(require('fs')[a0_0x3c060d(0x2)]('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 2 3 4 5\n3\n3 4 1", "3"], ["3\n3 1 2\n1\n5", "0"], ["5\n1 1 2 2 3\n2\n1 2", "2"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0],10);\n    var q = parseInt(input[2],10);\n    input[1] = input[1].split(\" \");\n    input[3] = input[3].split(\" \");\n    var s = Array(n),t = Array(q);\n    for(var i = 0;i < n;i++){\n        s[i] = parseInt(input[1][i],10);\n    }\n    for(var i = 0;i < q;i++){\n        t[i] = parseInt(input[3][i],10);\n    }\n    var count = 0;\n\n    for(var i = 0;i < q;i++){\n        var j;\n        for(j = 0;j < n;j++){\n           if(s[j] == t[i])\n                break;\n        }\n        if(j < n)\n            count++;\n    }\n    console.log(count);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p02410_1", "type": "JavaScript", "obfuscated": "function a0_0x3074(HuiGHi, key) {\n    var stringArray = a0_0x35be();\n    a0_0x3074 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3074(HuiGHi, key);\n}\nvar a0_0x3aedfc = a0_0x3074;\nvar input = require('fs')[a0_0x3aedfc(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x35be() {\n    var _0x4c19a2 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'slice',\n        'log'\n    ];\n    a0_0x35be = function () {\n        return _0x4c19a2;\n    };\n    return a0_0x35be();\n}\nvar lines = input[a0_0x3aedfc(0x1)]()[a0_0x3aedfc(0x2)](/\\n/g);\nvar n = +lines[0x0][a0_0x3aedfc(0x2)]('\\x20')[0x0];\nvar m = +lines[0x0][a0_0x3aedfc(0x2)]('\\x20')[0x1];\nvar A = lines[a0_0x3aedfc(0x3)](0x1, m);\nvar b = lines[a0_0x3aedfc(0x3)](m, m + m);\nvar ans;\nfor (var i = 0x0; i < n; i++) {\n    ans = 0x0;\n    for (var j = 0x0; j < m; j++) {\n        ans += A[i][a0_0x3aedfc(0x2)]('\\x20')[j] * b[j];\n    }\n    console[a0_0x3aedfc(0x4)](ans);\n}", "test_cases": [["3 4\n1 2 0 1\n0 3 0 1\n4 1 1 0\n1\n2\n3\n0", "5\n6\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar lines = (input.trim()).split(/\\n/g);\nvar n = +lines[0].split(' ')[0];\nvar m = +lines[0].split(' ')[1];\n\nvar A = lines.slice(1, m);\nvar b = lines.slice(m, m + m);\n\nvar ans;\nfor (var i = 0; i < n; i++) {\n    ans = 0;\n    for (var j = 0; j < m; j++) {\n        ans += A[i].split(' ')[j] * b[j];\n    }\n    console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p02412_1", "type": "JavaScript", "obfuscated": "function a0_0x3ab9(VkWCoh, key) {\n    const stringArray = a0_0x1335();\n    a0_0x3ab9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ab9(VkWCoh, key);\n}\nconst a0_0x56bf49 = a0_0x3ab9;\nfunction a0_0x1335() {\n    const _0x10af99 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'length',\n        'map'\n    ];\n    a0_0x1335 = function () {\n        return _0x10af99;\n    };\n    return a0_0x1335();\n}\nconst input = require('fs')[a0_0x56bf49(0x0)](a0_0x56bf49(0x1), a0_0x56bf49(0x2))[a0_0x56bf49(0x3)](/\\n/);\nfor (let i = 0x0; i < input[a0_0x56bf49(0x4)]; i++) {\n    let [n, x] = input[i][a0_0x56bf49(0x3)]('\\x20')[a0_0x56bf49(0x5)](Number);\n    if (n === 0x0 && x === 0x0) {\n        break;\n    }\n    let count = 0x0;\n    for (let j = 0x1; j <= n; j++) {\n        for (let k = 0x1; k <= n; k++) {\n            if (j === k) {\n                break;\n            }\n            for (let l = 0x1; l <= n; l++) {\n                if (j === l || k === l || j === k) {\n                    break;\n                }\n                if (j + k + l === x) {\n                    count++;\n                }\n            }\n        }\n    }\n    console['log'](count);\n}", "test_cases": [["5 9\n0 0", "2"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/);\nfor (let i = 0; i < input.length; i++) {\n    let [n, x] = input[i].split(' ').map(Number);\n    if (n === 0 && x === 0) {\n        break;\n    }\n    let count = 0;\n    for (let j = 1; j <= n; j++) {\n        for (let k = 1; k <= n; k++) {\n             if (j === k) {\n                 break;\n             }\n            for (let l = 1; l <= n; l++)  {\n               if (j === l || k === l || j === k) {\n                   break;\n               }\n               if (j + k + l === x) {\n                  count++;\n               }\n           }\n        }\n    }\n    console.log(count)\n}\n\n", "language": "JavaScript"}
{"filename": "p02748_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1c0003 = a0_0x59a5;\nfunction a0_0x59a5(fjCZSd, key) {\n    const stringArray = a0_0x19f8();\n    a0_0x59a5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x59a5(fjCZSd, key);\n}\nconst main = arg => {\n    const _0x3ca89e = a0_0x59a5;\n    arg = arg[_0x3ca89e(0x0)]()[_0x3ca89e(0x1)]('\\x0a');\n    const A = parseInt(arg[0x0][_0x3ca89e(0x1)]('\\x20')[0x0]);\n    const B = parseInt(arg[0x0][_0x3ca89e(0x1)]('\\x20')[0x0]);\n    const M = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    const freezer = arg[0x1]['split']('\\x20')[_0x3ca89e(0x2)](n => parseInt(n));\n    const renzi = arg[0x2]['split']('\\x20')[_0x3ca89e(0x2)](n => parseInt(n));\n    const xyc = arg['slice'](0x3, M + 0x4);\n    const minFreeze = Math['min'](...freezer);\n    const minRenzi = Math['min'](...renzi);\n    let temp = minFreeze + minRenzi;\n    for (let i in xyc) {\n        let x = parseInt(xyc[i][_0x3ca89e(0x1)]('\\x20')[0x0]);\n        let y = parseInt(xyc[i]['split']('\\x20')[0x1]);\n        let c = parseInt(xyc[i][_0x3ca89e(0x1)]('\\x20')[0x2]);\n        let cost = freezer[x - 0x1] + renzi[y - 0x1] - c;\n        if (cost <= temp) {\n            temp = cost;\n        }\n    }\n    console[_0x3ca89e(0x3)](temp);\n};\nmain(require('fs')[a0_0x1c0003(0x4)](a0_0x1c0003(0x5), a0_0x1c0003(0x6)));\nfunction a0_0x19f8() {\n    const _0x92b386 = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x19f8 = function () {\n        return _0x92b386;\n    };\n    return a0_0x19f8();\n}", "test_cases": [["2 3 1\n3 3\n3 3 3\n1 2 1", "5"], ["1 1 2\n10\n10\n1 1 5\n1 1 10", "10"], ["2 2 1\n3 5\n3 5\n2 2 2", "6"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const A = parseInt(arg[0].split(\" \")[0]);\n    const B = parseInt(arg[0].split(\" \")[0]);\n    const M = parseInt(arg[0].split(\" \")[0]);\n    \n    const freezer = arg[1].split(\" \").map(n=>parseInt(n));\n    const renzi   = arg[2].split(\" \").map(n=>parseInt(n));\n    \n    const xyc = arg.slice(3, M + 4);\n    \n    const minFreeze = Math.min(...freezer);\n    const minRenzi = Math.min(...renzi);\n    \n    let temp = minFreeze + minRenzi;\n    \n    for(let i in xyc) {\n        let x = parseInt(xyc[i].split(\" \")[0]);\n        let y = parseInt(xyc[i].split(\" \")[1]);\n        let c = parseInt(xyc[i].split(\" \")[2]);\n        \n        let cost = freezer[x-1] + renzi[y-1] - c;\n        \n        if(cost <= temp) {\n            temp = cost;\n        }\n    }\n    \n    console.log(temp);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02813_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x283928 = a0_0xe561;\nconst permutation = ({\n    result: result = [],\n    pre: pre = [],\n    post: post,\n    n: n = post[a0_0x283928(0x0)]\n}) => {\n    const _0x28dfd2 = a0_0xe561;\n    if (n > 0x0) {\n        post[_0x28dfd2(0x1)]((_, i) => {\n            const _0x3ea016 = a0_0xe561;\n            const rest = [...post];\n            const elem = rest[_0x3ea016(0x2)](i, 0x1);\n            permutation({\n                'result': result,\n                'pre': [\n                    ...pre,\n                    ...elem\n                ],\n                'post': rest,\n                'n': n - 0x1\n            });\n        });\n    } else {\n        if (_0x28dfd2(0x3) === _0x28dfd2(0x3)) {\n            result[_0x28dfd2(0x4)](pre);\n        } else {\n            const input = inputs[_0x28dfd2(0x5)]('\\x0a');\n            const n = Number(input[0x0]);\n            const p = input[0x1];\n            const q = input[0x2];\n            const perm = permutation({ 'post': new Array(n)['fill'](0x0)[_0x28dfd2(0x6)]((_, i) => i + 0x1) })['map'](v => v[_0x28dfd2(0x7)]('\\x20'));\n            const a = perm[_0x28dfd2(0x8)](p);\n            const b = perm['indexOf'](q);\n            console['log'](Math[_0x28dfd2(0x9)](a - b));\n        }\n    }\n    return result;\n};\nfunction a0_0xe561(uHxtzm, key) {\n    const stringArray = a0_0x3f69();\n    a0_0xe561 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe561(uHxtzm, key);\n}\nfunction Main(inputs) {\n    const _0x33d0d6 = a0_0xe561;\n    const input = inputs[_0x33d0d6(0x5)]('\\x0a');\n    const n = Number(input[0x0]);\n    const p = input[0x1];\n    const q = input[0x2];\n    const perm = permutation({ 'post': new Array(n)[_0x33d0d6(0xa)](0x0)[_0x33d0d6(0x6)]((_, i) => i + 0x1) })['map'](v => v['join']('\\x20'));\n    const a = perm['indexOf'](p);\n    const b = perm[_0x33d0d6(0x8)](q);\n    console[_0x33d0d6(0xb)](Math[_0x33d0d6(0x9)](a - b));\n}\nfunction a0_0x3f69() {\n    const _0x5e2e57 = [\n        'length',\n        'forEach',\n        'splice',\n        'UzYIL',\n        'push',\n        'split',\n        'map',\n        'join',\n        'indexOf',\n        'abs',\n        'fill',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3f69 = function () {\n        return _0x5e2e57;\n    };\n    return a0_0x3f69();\n}\nMain(require('fs')[a0_0x283928(0xc)](a0_0x283928(0xd), a0_0x283928(0xe)));", "test_cases": [["3\n1 3 2\n3 1 2", "3"], ["8\n7 3 5 4 2 1 6 8\n3 8 2 5 4 6 7 1", "17517"], ["3\n1 2 3\n1 2 3", "0"]], "original": "'use strict';\n\nconst permutation = ({ result = [], pre = [], post, n = post.length }) => {\n  if (n > 0) {\n    post.forEach((_, i) => {\n      const rest = [...post];\n      const elem = rest.splice(i, 1);\n      permutation({ result, pre: [...pre, ...elem], post: rest, n: n - 1});\n    });\n  } else {\n    result.push(pre);\n  }\n  return result;\n};\n\nfunction Main(inputs) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  const input = inputs.split(\"\\n\");\n  const n = Number(input[0]);\n  const p = input[1];\n  const q = input[2];\n\n  const perm = permutation({ post: (new Array(n)).fill(0).map((_, i) => (i + 1)) }).map((v) => (v.join(' ')));\n  const a = perm.indexOf(p);\n  const b = perm.indexOf(q);\n\n  console.log(Math.abs(a - b));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02841_1", "type": "JavaScript", "obfuscated": "var a0_0xe2fa98 = a0_0xe933;\nfunction a0_0xe933(KLqzds, key) {\n    var stringArray = a0_0x2af9();\n    a0_0xe933 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe933(KLqzds, key);\n}\nfunction a0_0x2af9() {\n    var _0x168903 = [\n        'split',\n        '2019/',\n        'getMonth',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2af9 = function () {\n        return _0x168903;\n    };\n    return a0_0x2af9();\n}\nfunction Main(input) {\n    var _0x207ad8 = a0_0xe933;\n    var input = input[_0x207ad8(0x0)]('\\x0a');\n    var i1 = input[0x0]['split']('\\x20');\n    var i2 = input[0x1][_0x207ad8(0x0)]('\\x20');\n    var d1 = new Date(_0x207ad8(0x1) + i1[0x0] + '/' + i1[0x1]);\n    var d2 = new Date(_0x207ad8(0x1) + i2[0x0] + '/' + i2[0x1]);\n    if (d1[_0x207ad8(0x2)]() == d2[_0x207ad8(0x2)]()) {\n        console[_0x207ad8(0x3)](0x0);\n    } else {\n        console['log'](0x1);\n    }\n}\nMain(require('fs')[a0_0xe2fa98(0x4)](a0_0xe2fa98(0x5), a0_0xe2fa98(0x6)));", "test_cases": [["11 16\n11 17", "0"], ["11 30\n12 1", "1"]], "original": "function Main(input) {\n\tvar input = input.split(\"\\n\");\n\tvar i1 = input[0].split(\" \");\n\tvar i2 = input[1].split(\" \");\n\n    var d1 = new Date(\"2019/\" + i1[0] + \"/\" + i1[1]);\n    var d2 = new Date(\"2019/\" + i2[0] + \"/\" + i2[1]);\n\n    if (d1.getMonth() == d2.getMonth()) {\n\t    console.log(0);\n    } else {\n\t    console.log(1);\n    }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02910_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xe5e44f = a0_0x1506;\nconst main = input => {\n    const _0x2766e7 = a0_0x1506;\n    const args = input['split']('\\x0a')[_0x2766e7(0x0)](arg => arg['split']('\\x20'));\n    const S = args[0x0][0x0];\n    const N = S[_0x2766e7(0x1)];\n    let odd = !![];\n    let even = !![];\n    for (let i = 0x0; i < N; i++) {\n        if (i % 0x2 === 0x0) {\n            if (![\n                    'R',\n                    'U',\n                    'D'\n                ][_0x2766e7(0x2)](S[i]))\n                odd = ![];\n        } else {\n            if (![\n                    'L',\n                    'U',\n                    'D'\n                ]['includes'](S[i]))\n                even = ![];\n        }\n    }\n    if (odd && even)\n        console[_0x2766e7(0x3)](_0x2766e7(0x4));\n    else\n        console['log']('No');\n};\nfunction a0_0x1506(iruGBK, key) {\n    const stringArray = a0_0x4b77();\n    a0_0x1506 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1506(iruGBK, key);\n}\nfunction a0_0x4b77() {\n    const _0x25013 = [\n        'map',\n        'length',\n        'includes',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4b77 = function () {\n        return _0x25013;\n    };\n    return a0_0x4b77();\n}\nmain(require('fs')[a0_0xe5e44f(0x5)](a0_0xe5e44f(0x6), 'utf8'));", "test_cases": [["RUDLUDR", "Yes"], ["DULL", "No"], ["UUUUUUUUUUUUUUU", "Yes"], ["ULURU", "No"], ["RDULULDURURLRDULRLR", "Yes"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst S = args[0][0]\n\tconst N = S.length\n\tlet odd = true\n\tlet even = true\n\n\tfor (let i = 0; i < N; i++) {\n\t\tif (i % 2 === 0) {\n\t\t\tif (!['R', 'U', 'D'].includes(S[i])) odd = false\n\t\t} else {\n\t\t\tif (!['L', 'U', 'D'].includes(S[i])) even = false\n\t\t}\n\t}\n\n\tif (odd && even) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03266_1", "type": "JavaScript", "obfuscated": "function a0_0x4f18(pgdxHZ, key) {\n    var stringArray = a0_0x29e6();\n    a0_0x4f18 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f18(pgdxHZ, key);\n}\nvar a0_0x74c3e1 = a0_0x4f18;\nvar lines = [];\nvar readline = require(a0_0x74c3e1(0x0));\nfunction a0_0x29e6() {\n    var _0x456b49 = [\n        'readline',\n        'stdin',\n        'line',\n        'push',\n        'split',\n        'pow',\n        'floor',\n        'pMPOL',\n        'log'\n    ];\n    a0_0x29e6 = function () {\n        return _0x456b49;\n    };\n    return a0_0x29e6();\n}\nvar rl = readline['createInterface']({\n    'input': process[a0_0x74c3e1(0x1)],\n    'output': process['stdout']\n});\nrl['on'](a0_0x74c3e1(0x2), function (x) {\n    var _0x5c9a7a = a0_0x4f18;\n    lines[_0x5c9a7a(0x3)](x);\n});\nrl['on']('close', function () {\n    var _0x594209 = a0_0x4f18;\n    var N = Number(lines[0x0][_0x594209(0x4)]('\\x20')[0x0]);\n    var K = Number(lines[0x0][_0x594209(0x4)]('\\x20')[0x1]);\n    var ans = 0x0;\n    for (var i = 0x1; i <= K; i++) {\n        if (i * 0x2 % K === 0x0) {\n            if (0x1 <= Math['floor']((N - i) / K)) {\n                ans += Math[_0x594209(0x5)](Math[_0x594209(0x6)]((N - i) / K) + 0x1, 0x3);\n            } else {\n                if (_0x594209(0x7) === 'yimML') {\n                    lines[_0x594209(0x3)](x);\n                } else {\n                    ans++;\n                }\n            }\n        }\n    }\n    console[_0x594209(0x8)](ans);\n});", "test_cases": [["3 2", "9"], ["5 3", "1"], ["31415 9265", "27"], ["35897 932", "114191"]], "original": "var lines = [];\n\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var K = Number(lines[0].split(\" \")[1]);\n\n    // a + b = K * m\n    // b + c = K * n\n    // c + a = K * l\n\n    // 2b = K(m + n - l)\n    // よって,2a, 2b, 2cはKの倍数である必要がある\n\n    var ans = 0;\n    for (var i = 1; i <= K; i++) {\n        if (i * 2 % K === 0) {\n            // i + K * m <= (N - i) / K\n            if (1 <= Math.floor((N - i) / K)) { ans += Math.pow(Math.floor(((N - i) / K)) + 1, 3) }\n            else { ans++; }\n\n        }\n    }\n\n    console.log(ans);\n\n});", "language": "JavaScript"}
{"filename": "p03323_1", "type": "JavaScript", "obfuscated": "var a0_0x138545 = a0_0x178f;\nfunction a0_0x550b() {\n    var _0xf0b707 = [\n        'split',\n        'log',\n        'Yay!',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x550b = function () {\n        return _0xf0b707;\n    };\n    return a0_0x550b();\n}\nfunction Main(input) {\n    var _0x51371f = a0_0x178f;\n    var ab = input[0x0][_0x51371f(0x0)]('\\x20');\n    console[_0x51371f(0x1)](ab[0x0] <= 0x8 && ab[0x1] <= 0x8 ? _0x51371f(0x2) : ':(');\n}\nfunction a0_0x178f(VzAdya, key) {\n    var stringArray = a0_0x550b();\n    a0_0x178f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x178f(VzAdya, key);\n}\nMain(require('fs')[a0_0x138545(0x3)]('/dev/stdin', a0_0x138545(0x4))['split']('\\x0a'));", "test_cases": [["5 4", "Yay!"], ["8 8", "Yay!"], ["11 4", ":("]], "original": "function Main(input) {\n  var ab = input[0].split(\" \");\n  console.log((ab[0]<=8 && ab[1] <= 8) ? 'Yay!' : ':(')\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03345_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1eb598 = a0_0xc30e;\nconst DELIMITER = '\\x20';\nconst A_INDEX = 0x0;\nconst B_INDEX = 0x1;\nconst K_INDEX = 0x3;\nfunction a0_0xc30e(yZyGBZ, key) {\n    const stringArray = a0_0x56c7();\n    a0_0xc30e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xc30e(yZyGBZ, key);\n}\nconst LIMIT = Math[a0_0x1eb598(0x0)](0xa, 0x12);\nconst process = input => {\n    const _0xbc6cd9 = a0_0xc30e;\n    const indexArr = input[_0xbc6cd9(0x1)](DELIMITER);\n    const ans = parseInt(indexArr[A_INDEX]) - parseInt(indexArr[B_INDEX]);\n    const KString = indexArr[K_INDEX];\n    const K = parseInt(KString[_0xbc6cd9(0x2)](KString['length'] - 0x1));\n    if (Math[_0xbc6cd9(0x3)](ans) > LIMIT) {\n        console[_0xbc6cd9(0x4)](_0xbc6cd9(0x5));\n    } else {\n        console['log'](K % 0x2 === 0x0 || ans === 0x0 ? ans : -ans);\n    }\n};\nprocess(require('fs')[a0_0x1eb598(0x6)]('/dev/stdin', 'utf8')[a0_0x1eb598(0x7)]());\nfunction a0_0x56c7() {\n    const _0x1f3b38 = [\n        'pow',\n        'split',\n        'charAt',\n        'abs',\n        'log',\n        'Unfair',\n        'readFileSync',\n        'trim'\n    ];\n    a0_0x56c7 = function () {\n        return _0x1f3b38;\n    };\n    return a0_0x56c7();\n}", "test_cases": [["1 2 3 1", "1"], ["2 3 2 0", "-1"], ["1000000000 1000000000 1000000000 1000000000000000000", "0"]], "original": "'use strict';\n\nconst DELIMITER = \" \";\nconst A_INDEX = 0;\nconst B_INDEX = 1;\nconst K_INDEX = 3;\nconst LIMIT = Math.pow(10, 18);\n\nconst process = input => {\n    const indexArr = input.split(DELIMITER);\n    const ans = parseInt(indexArr[A_INDEX]) - parseInt(indexArr[B_INDEX]);\n    const KString = indexArr[K_INDEX];\n    // JS rounds up large numbers; simply get last digit for modulo\n    const K = parseInt(KString.charAt(KString.length-1));\n\n    if (Math.abs(ans) > LIMIT) {\n        console.log('Unfair')\n    } else {\n        console.log(K % 2 === 0 || ans === 0 ? ans : -ans);\n    }\n}\n\nprocess(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03738_1", "type": "JavaScript", "obfuscated": "function a0_0x5761(INrwCx, key) {\n    var stringArray = a0_0x51f3();\n    a0_0x5761 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5761(INrwCx, key);\n}\nvar a0_0x3f4728 = a0_0x5761;\nfunction a0_0x51f3() {\n    var _0x1ed9cf = [\n        'GREATER',\n        'BGfDn',\n        'split',\n        'length',\n        'log',\n        'slice',\n        'aboxP',\n        'zKjbM',\n        'LESS',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x51f3 = function () {\n        return _0x1ed9cf;\n    };\n    return a0_0x51f3();\n}\nfunction rec(a, b) {\n    var _0x162671 = a0_0x5761;\n    if (a[0x0] > b[0x0]) {\n        return _0x162671(0x0);\n    } else if (a[0x0] < b[0x0]) {\n        if (_0x162671(0x1) !== 'BGfDn') {\n            s = s[_0x162671(0x2)]('\\x0a');\n            if (s[0x0][_0x162671(0x3)] > s[0x1][_0x162671(0x3)]) {\n                console[_0x162671(0x4)](_0x162671(0x0));\n            } else if (s[0x0][_0x162671(0x3)] < s[0x1][_0x162671(0x3)]) {\n                console[_0x162671(0x4)]('LESS');\n            } else {\n                console['log']('%s', rec(s[0x0][_0x162671(0x5)](0x1), s[0x1]['slice'](0x1)));\n            }\n        } else {\n            return 'LESS';\n        }\n    } else if (a[_0x162671(0x3)] == 0x1) {\n        if (_0x162671(0x6) !== _0x162671(0x7)) {\n            return 'EQUAL';\n        } else {\n            console[_0x162671(0x4)]('%s', rec(s[0x0]['slice'](0x1), s[0x1]['slice'](0x1)));\n        }\n    } else {\n        return rec(a[_0x162671(0x5)](0x1), b[_0x162671(0x5)](0x1));\n    }\n}\nfunction main(s) {\n    var _0x44a894 = a0_0x5761;\n    s = s[_0x44a894(0x2)]('\\x0a');\n    if (s[0x0][_0x44a894(0x3)] > s[0x1][_0x44a894(0x3)]) {\n        console['log'](_0x44a894(0x0));\n    } else if (s[0x0][_0x44a894(0x3)] < s[0x1]['length']) {\n        console[_0x44a894(0x4)](_0x44a894(0x8));\n    } else {\n        console[_0x44a894(0x4)]('%s', rec(s[0x0]['slice'](0x1), s[0x1][_0x44a894(0x5)](0x1)));\n    }\n}\nmain(require('fs')[a0_0x3f4728(0x9)](a0_0x3f4728(0xa), 'utf8'));", "test_cases": [["36\n24", "GREATER"], ["850\n3777", "LESS"], ["9720246\n22516266", "LESS"], ["123456789012345678901234567890\n234567890123456789012345678901", "LESS"]], "original": "function rec(a, b) {\n\tif (a[0] > b[0]) {return 'GREATER';}\n\telse if (a[0] < b[0]) {return 'LESS';}\n\telse if (a.length == 1) {return 'EQUAL'}\n\telse {return rec(a.slice(1), b.slice(1));}\n}\n\nfunction main(s) {\n\ts = s.split('\\n');\n\tif (s[0].length > s[1].length) {console.log('GREATER');}\n\telse if (s[0].length < s[1].length) {console.log('LESS');}\n\telse {console.log('%s', rec(s[0].slice(1), s[1].slice(1)));}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03805_1", "type": "JavaScript", "obfuscated": "function a0_0x2c60() {\n    const _0x5bd1f4 = [\n        'fill',\n        'map',\n        'add',\n        'includes',\n        'concat',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x2c60 = function () {\n        return _0x5bd1f4;\n    };\n    return a0_0x2c60();\n}\nfunction a0_0x3bd3(PfhBUH, key) {\n    const stringArray = a0_0x2c60();\n    a0_0x3bd3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3bd3(PfhBUH, key);\n}\nconst a0_0x5d63ac = a0_0x3bd3;\nfunction main(lines) {\n    const _0x48b0cf = a0_0x3bd3;\n    const [N, M] = na();\n    const nodes = Array(N + 0x1)[_0x48b0cf(0x0)](0x0)[_0x48b0cf(0x1)](() => new Set());\n    for (let i = 0x1; i <= M; i++) {\n        const [a, b] = na();\n        nodes[a][_0x48b0cf(0x2)](b);\n        nodes[b][_0x48b0cf(0x2)](a);\n    }\n    let ans = 0x0;\n    searchRoute(nodes[0x1], [0x1]);\n    function searchRoute(node, passed) {\n        const _0x184705 = a0_0x3bd3;\n        if (passed['length'] == N)\n            return ++ans;\n        for (let n of node) {\n            if (passed[_0x184705(0x3)](n))\n                continue;\n            searchRoute(nodes[n], passed[_0x184705(0x4)](n));\n        }\n    }\n    return ans;\n}\nconst lines = require('fs')[a0_0x5d63ac(0x5)]('/dev/stdin', a0_0x5d63ac(0x6))[a0_0x5d63ac(0x7)]()[a0_0x5d63ac(0x8)]('\\x0a');\nlet lineCount = 0x0;\nconst s = () => lines[lineCount++];\nconst n = () => Number(s());\nconst b = () => BigInt(s());\nconst sa = () => s()[a0_0x5d63ac(0x8)]('\\x20');\nconst na = () => sa()[a0_0x5d63ac(0x1)](Number);\nconst ba = () => sa()['map'](BigInt);\nconst ans = main(lines);\nconsole[a0_0x5d63ac(0x9)](ans);", "test_cases": [["3 3\n1 2\n1 3\n2 3", "2"], ["7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7", "1"]], "original": "function main(lines) {\n  const [N, M] = na();\n  \n  // 頂点情報構築\n  const nodes = Array(N+1).fill(0).map(() => new Set());\n  for (let i = 1; i <= M; i++) {\n    const [a, b] = na();\n    nodes[a].add(b);\n    nodes[b].add(a);\n  }\n\n  // ルート探索\n  let ans = 0;\n  searchRoute(nodes[1], [1]);\n\n  // 探索再帰関数\n  function searchRoute(node, passed) {\n    if (passed.length == N) return ++ans;\n    for (let n of node) {\n      if (passed.includes(n)) continue;\n      searchRoute(nodes[n], passed.concat(n));\n    }\n  }\n  \n  return ans;\n}\n\n\nconst lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\");\n\nlet lineCount = 0;\nconst s = () => lines[lineCount++];\nconst n = () => Number(s());\nconst b = () => BigInt(s());\nconst sa = () => s().split(' ');\nconst na = () => sa().map(Number);\nconst ba = () => sa().map(BigInt);\n\nconst ans = main(lines);\nconsole.log( ans );", "language": "JavaScript"}
{"filename": "p03827_1", "type": "JavaScript", "obfuscated": "function a0_0xd727(EfltUF, key) {\n    var stringArray = a0_0x4ce8();\n    a0_0xd727 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd727(EfltUF, key);\n}\nfunction a0_0x4ce8() {\n    var _0x2688ad = [\n        'split',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4ce8 = function () {\n        return _0x2688ad;\n    };\n    return a0_0x4ce8();\n}\nvar a0_0x12998a = a0_0xd727;\nfunction Main(input) {\n    var _0x236fce = a0_0xd727;\n    input = input[_0x236fce(0x0)]('\\x0a');\n    var num = input[0x0];\n    var character = input[0x1];\n    var max = 0x0;\n    var x = 0x0;\n    for (var i = 0x0; i < character[_0x236fce(0x1)]; i++) {\n        if (character[i] === 'I') {\n            x++;\n        } else {\n            x--;\n        }\n        if (max < x) {\n            max = x;\n        }\n    }\n    console['log'](max);\n}\nMain(require('fs')[a0_0x12998a(0x2)](a0_0x12998a(0x3), a0_0x12998a(0x4)));", "test_cases": [["5\nIIDID", "2"], ["7\nDDIDDII", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split('\\n');\n\tvar num = input[0];\n\tvar character = input[1];\n\tvar max = 0;\n\tvar x = 0;\n\tfor(var i = 0; i < character.length; i++){\n\t    if(character[i] === 'I'){\n\t        x++;\n\t    } else {\n\t        x--;\n\t    }\n\t    if(max < x){\n\t        max = x;\n\t    }\n\t}\n\tconsole.log(max);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04001_1", "type": "JavaScript", "obfuscated": "function a0_0x4a6e() {\n    const _0x22126d = [\n        'log',\n        'length',\n        'toString',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x4a6e = function () {\n        return _0x22126d;\n    };\n    return a0_0x4a6e();\n}\nconst a0_0x156837 = a0_0x2072;\nfunction a0_0x2072(LaoEnM, key) {\n    const stringArray = a0_0x4a6e();\n    a0_0x2072 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2072(LaoEnM, key);\n}\nconsole[a0_0x156837(0x0)]((args => {\n    const _0x4fa095 = a0_0x2072;\n    const S = args['trim']();\n    const L = S[_0x4fa095(0x1)];\n    let total = 0x0;\n    for (let bit = 0x0; bit < 0x1 << L - 0x1; bit++) {\n        let st = S[0x0] | 0x0, t = 0x0;\n        for (let i = 0x0; i < L - 0x1; i++) {\n            if (0x1 << i & bit) {\n                t += st;\n                st = S[i + 0x1] | 0x0;\n            } else {\n                st = st * 0xa + (S[i + 0x1] | 0x0);\n            }\n        }\n        total += t + st;\n    }\n    return total[_0x4fa095(0x2)]();\n})(require('fs')[a0_0x156837(0x3)]('/dev/stdin', a0_0x156837(0x4))));", "test_cases": [["125", "176"], ["9999999999", "12656242944"]], "original": "console.log((args=>{\n  const S = args.trim();\n  const L = S.length;\n  let total = 0;\n  for ( let bit = 0; bit < 1<<(L-1); bit++ ) {\n    let st = S[0]|0, t = 0;\n    for ( let i = 0; i < L-1; i++ ) {\n      if ( (1<<i) & bit ) {\n        t += st; st = (S[i+1]|0);\n      } else {\n        st = st * 10 + (S[i+1]|0);\n      }\n    }\n    total += t + st;\n  }\n  return total.toString();\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04043_1", "type": "JavaScript", "obfuscated": "const a0_0x4beee2 = a0_0x4b36;\nfunction a0_0x4b36(yEWGKT, key) {\n    const stringArray = a0_0x3383();\n    a0_0x4b36 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b36(yEWGKT, key);\n}\nfunction a0_0x3383() {\n    const _0x4d5d60 = [\n        'indexOf',\n        'splice',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3383 = function () {\n        return _0x4d5d60;\n    };\n    return a0_0x3383();\n}\nfunction main(input) {\n    const _0x27c5a0 = a0_0x4b36;\n    const nums = input['split']('\\x20');\n    if (nums[_0x27c5a0(0x0)]('5') != -0x1) {\n        nums[_0x27c5a0(0x1)](nums[_0x27c5a0(0x0)]('5'), 0x1);\n    }\n    if (nums[_0x27c5a0(0x0)]('5') != -0x1) {\n        nums['splice'](nums[_0x27c5a0(0x0)]('5'), 0x1);\n    }\n    if (nums[_0x27c5a0(0x0)]('7') != -0x1) {\n        nums['splice'](nums[_0x27c5a0(0x0)]('7'), 0x1);\n    }\n    console['log'](nums[0x0] == null ? _0x27c5a0(0x2) : 'NO');\n}\nmain(require('fs')[a0_0x4beee2(0x3)](a0_0x4beee2(0x4), 'utf8'));", "test_cases": [["5 5 7", "YES"], ["7 7 5", "NO"]], "original": "function main(input) {\n    const nums = input.split(\" \");\n    \n    if(nums.indexOf('5') != -1) {\n         nums.splice(nums.indexOf('5'),1);\n    }\n    if(nums.indexOf('5') != -1) {\n         nums.splice(nums.indexOf('5'),1);\n    }\n    if(nums.indexOf('7') != -1) {\n         nums.splice(nums.indexOf('7'),1);\n    }\n    console.log(nums[0] == null ? \"YES\" : \"NO\");\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00005_1", "type": "JavaScript", "obfuscated": "function a0_0x2fa3() {\n    var _0x36c35c = [\n        'readFileSync',\n        'stdin',\n        'split',\n        'newline',\n        'forEach',\n        'log',\n        'IVfRr'\n    ];\n    a0_0x2fa3 = function () {\n        return _0x36c35c;\n    };\n    return a0_0x2fa3();\n}\nvar a0_0x54511d = a0_0x5f4c;\nconfig = {\n    'stdin': '/dev/stdin',\n    'newline': '\\x0a'\n};\nfunction a0_0x5f4c(eDcumr, key) {\n    var stringArray = a0_0x2fa3();\n    a0_0x5f4c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f4c(eDcumr, key);\n}\nrequire('fs')[a0_0x54511d(0x0)](config[a0_0x54511d(0x1)], 'ascii')['trim']()[a0_0x54511d(0x2)](config[a0_0x54511d(0x3)])[a0_0x54511d(0x4)](function (line) {\n    var _0x1486bc = a0_0x5f4c;\n    var ary = line[_0x1486bc(0x2)]('\\x20');\n    var a = ary[0x0], b = ary[0x1];\n    console[_0x1486bc(0x5)]('%d\\x20%d', gcd(a, b), lcm(a, b));\n});\nfunction gcd(a, b) {\n    var _0x1537c7 = a0_0x5f4c;\n    while (a !== b) {\n        if ('IVfRr' !== _0x1537c7(0x6)) {\n            while (a !== b) {\n                if (a < b) {\n                    var tmp = a;\n                    a = b;\n                    b = tmp;\n                }\n                if (a % b === 0x0)\n                    return b;\n                a -= b;\n            }\n            return a;\n        } else {\n            if (a < b) {\n                var tmp = a;\n                a = b;\n                b = tmp;\n            }\n            if (a % b === 0x0)\n                return b;\n            a -= b;\n        }\n    }\n    return a;\n}\nfunction lcm(a, b) {\n    var g = gcd(a, b);\n    return g * (a / g) * (b / g);\n}", "test_cases": [["8 6\n50000000 30000000", "2 24\n10000000 150000000"]], "original": "//config = {stdin: 'tmp', newline: '\\r\\n'}; // win\nconfig = {stdin: '/dev/stdin', newline: '\\n'}; // linux\n\nrequire('fs').readFileSync(config.stdin, 'ascii')\n\t.trim()\n\t.split(config.newline)\n\t.forEach(function (line) {\n\t\tvar ary = line.split(' ');\n\t\tvar a = ary[0], b = ary[1];\n\t\tconsole.log('%d %d', gcd(a, b), lcm(a, b));\n\t});\n\nfunction gcd(a, b) {\n\twhile (a !== b) {\n\t\tif (a < b) {\n\t\t\tvar tmp = a;\n\t\t\ta = b;\n\t\t\tb = tmp;\n\t\t}\n\t\tif (a % b === 0) return b;\n\t\ta -= b;\n\t}\n\treturn a;\n}\n\nfunction lcm(a, b) {\n\tvar g = gcd(a, b);\n\treturn g * (a / g) * (b / g);\n}", "language": "JavaScript"}
{"filename": "p00100_1", "type": "JavaScript", "obfuscated": "var a0_0x4c55d7 = a0_0x58a5;\nfunction a0_0x58a5(ZmDheG, key) {\n    var stringArray = a0_0x1f61();\n    a0_0x58a5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58a5(ZmDheG, key);\n}\nfunction a0_0x1f61() {\n    var _0x8ab808 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'map',\n        'push',\n        'log',\n        'hasOwnProperty'\n    ];\n    a0_0x1f61 = function () {\n        return _0x8ab808;\n    };\n    return a0_0x1f61();\n}\nvar input = require('fs')[a0_0x4c55d7(0x0)](a0_0x4c55d7(0x1), 'utf8');\nvar Arr = input[a0_0x4c55d7(0x2)]()[a0_0x4c55d7(0x3)]('\\x0a');\nvar obj = {};\nfor (var i = 0x0; i < Arr[a0_0x4c55d7(0x4)]; i++) {\n    var arr = Arr[i][a0_0x4c55d7(0x3)]('\\x20')[a0_0x4c55d7(0x5)](Number);\n    if (i != 0x0 && arr[a0_0x4c55d7(0x4)] == 0x1) {\n        var keys = [];\n        for (var k in obj)\n            keys[a0_0x4c55d7(0x6)](k - 0x0);\n        var cnt = 0x0;\n        for (var j = 0x0; j < keys[a0_0x4c55d7(0x4)]; j++) {\n            if (obj[keys[j + '']] >= 0xf4240) {\n                console[a0_0x4c55d7(0x7)](keys[j + '']);\n                cnt++;\n            }\n        }\n        if (cnt == 0x0)\n            console[a0_0x4c55d7(0x7)]('NA');\n        if (arr[0x0] == 0x0)\n            break;\n        obj = {};\n    } else if (arr['length'] == 0x3) {\n        if (!obj[a0_0x4c55d7(0x8)](arr[0x0]))\n            obj[arr[0x0]] = arr[0x1] * arr[0x2];\n        else\n            obj[arr[0x0]] += arr[0x1] * arr[0x2];\n    }\n}", "test_cases": [["4\n1001 2000 520\n1002 1800 450\n1003 1600 625\n1001 200 1220\n2\n1001 100 3\n1005 1000 100\n2\n2013 5000 100\n2013 5000 100\n0", "1001\n1003\nNA\n2013"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar obj={};\nfor(var i=0;i<Arr.length;i++){\nvar arr=Arr[i].split(\" \").map(Number);\n   if(i!=0 && arr.length==1){\n      var keys=[];\n      for(var k in obj)keys.push(k-0);\n      var cnt=0;\n      for(var j=0;j<keys.length;j++){\n         if(obj[keys[j+\"\"]]>=1000000){console.log(keys[j+\"\"]);cnt++;}\n      }\n      if(cnt==0)console.log(\"NA\");\n      if(arr[0]==0)break;\n      obj={};\n   }else if(arr.length==3){\n       if(!obj.hasOwnProperty(arr[0]))obj[arr[0]]=arr[1]*arr[2];\n       else obj[arr[0]]+=arr[1]*arr[2];\n   }\n}", "language": "JavaScript"}
{"filename": "p00109_1", "type": "JavaScript", "obfuscated": "var a0_0x295827 = a0_0x5da2;\nfunction a0_0x5da2(MEdTUh, key) {\n    var stringArray = a0_0x3c4b();\n    a0_0x5da2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5da2(MEdTUh, key);\n}\nfunction a0_0x3c4b() {\n    var _0x18cbd3 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'slice'\n    ];\n    a0_0x3c4b = function () {\n        return _0x18cbd3;\n    };\n    return a0_0x3c4b();\n}\nvar input = require('fs')[a0_0x295827(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x295827(0x1)]()[a0_0x295827(0x2)]('\\x0a');\nvar L = Arr[a0_0x295827(0x3)]() - 0x0;\nfor (var i = 0x0; i < L; i++) {\n    var str = Arr[i];\n    str = str[a0_0x295827(0x4)](0x0, -0x1);\n    var num = eval(str);\n    console['log'](parseInt(num, 0xa));\n}", "test_cases": [["2\n4-2*3=\n4*(8+4+3)=", "-2\n60"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar L=Arr.shift()-0;\nfor(var i=0;i<L;i++){\n   var str=Arr[i];\n   str=str.slice(0,-1);\n   var num=eval(str);\n   console.log(parseInt(num,10));\n}", "language": "JavaScript"}
{"filename": "p02388_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x281e9b = a0_0x3e7f;\nfunction a0_0x3e7f(fFVTrZ, key) {\n    var stringArray = a0_0x5b7d();\n    a0_0x3e7f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e7f(fFVTrZ, key);\n}\n(function (stdin) {\n    var _0x1af8aa = a0_0x3e7f;\n    var inputs = stdin[_0x1af8aa(0x0)]()['trim']()[_0x1af8aa(0x1)]('\\x0a');\n    (function (x) {\n        console['log'](x * x * x);\n    }(parseInt(inputs[0x0], 0xa)));\n}(require('fs')['readFileSync']('/dev/stdin', a0_0x281e9b(0x2))));\nfunction a0_0x5b7d() {\n    var _0x14cca1 = [\n        'toString',\n        'split',\n        'utf8'\n    ];\n    a0_0x5b7d = function () {\n        return _0x14cca1;\n    };\n    return a0_0x5b7d();\n}", "test_cases": [["2", "8"], ["3", "27"]], "original": "'use strict';\n(function(stdin) {\n  var inputs = stdin.toString().trim().split('\\n');\n\n  (function(x) {\n    // ????????????????????????\nconsole.log(x*x*x);\n\n  })(parseInt(inputs[0], 10)); // ??°?????????\n\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02403_1", "type": "JavaScript", "obfuscated": "const a0_0x5cd345 = a0_0x3a78;\nfunction a0_0x3a78(nUieye, key) {\n    const stringArray = a0_0x4b9c();\n    a0_0x3a78 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a78(nUieye, key);\n}\nlet fs = require('fs');\nconst fuga = data => {\n    const _0x58c074 = a0_0x3a78;\n    lines = data[_0x58c074(0x0)]('\\x0a');\n    lines = lines['map'](line => line['split']('\\x20'));\n    lines = lines[_0x58c074(0x1)](line => line[_0x58c074(0x1)](elem => parseInt(elem)));\n    for (let i = 0x0; i < lines[_0x58c074(0x2)]; i++) {\n        if ('peYqb' !== _0x58c074(0x3)) {\n            fs[_0x58c074(0x4)](route, _0x58c074(0x5), (err, data) => {\n                fuga(data);\n            });\n        } else {\n            let str = '';\n            if (!lines[i][0x0])\n                return;\n            for (let j = 0x0; j < lines[i][0x0]; j++) {\n                if (_0x58c074(0x6) !== _0x58c074(0x6)) {\n                    lines = data[_0x58c074(0x0)]('\\x0a');\n                    lines = lines[_0x58c074(0x1)](line => line[_0x58c074(0x0)]('\\x20'));\n                    lines = lines[_0x58c074(0x1)](line => line[_0x58c074(0x1)](elem => parseInt(elem)));\n                    for (let i = 0x0; i < lines['length']; i++) {\n                        let str = '';\n                        if (!lines[i][0x0])\n                            return;\n                        for (let j = 0x0; j < lines[i][0x0]; j++) {\n                            for (let k = 0x0; k < lines[i][0x1]; k++) {\n                                str += '#';\n                            }\n                            console[_0x58c074(0x7)](str);\n                            str = '';\n                        }\n                        console[_0x58c074(0x7)]('');\n                    }\n                } else {\n                    for (let k = 0x0; k < lines[i][0x1]; k++) {\n                        str += '#';\n                    }\n                    console[_0x58c074(0x7)](str);\n                    str = '';\n                }\n            }\n            console[_0x58c074(0x7)]('');\n        }\n    }\n};\nconst readFile = route => {\n    const _0x2a07d5 = a0_0x3a78;\n    fs[_0x2a07d5(0x4)](route, _0x2a07d5(0x5), (err, data) => {\n        fuga(data);\n    });\n};\nconst readFileWithoutArg = () => {\n    const _0x2c5018 = a0_0x3a78;\n    const data = require('fs')[_0x2c5018(0x8)](_0x2c5018(0x9), _0x2c5018(0x5));\n    fuga(data);\n};\nfunction a0_0x4b9c() {\n    const _0x7b6fea = [\n        'split',\n        'map',\n        'length',\n        'peYqb',\n        'readFile',\n        'utf8',\n        'IHUfy',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'argv'\n    ];\n    a0_0x4b9c = function () {\n        return _0x7b6fea;\n    };\n    return a0_0x4b9c();\n}\nlet sampleInputPath = '';\nif (process[a0_0x5cd345(0xa)]['length'] > 0x2) {\n    sampleInputPath = process[a0_0x5cd345(0xa)][0x2];\n    readFile(sampleInputPath);\n} else {\n    readFileWithoutArg();\n}", "test_cases": [["3 4\n5 6\n2 2\n0 0", "####\n####\n####\n\n######\n######\n######\n######\n######\n\n##\n##"]], "original": "let fs = require('fs');\n\nconst fuga = data => {\n  lines = data.split(\"\\n\");\n  lines = lines.map(line => line.split(\" \"));\n  lines = lines.map(line => line.map(elem => parseInt(elem)));\n\n  for(let i = 0; i < lines.length; i++) {\n    let str = \"\";\n    if(!lines[i][0]) return;\n    for(let j = 0; j < lines[i][0]; j++) {\n      for(let k = 0; k < lines[i][1]; k++) {\n        str += \"#\";\n      }\n      console.log(str);\n      str = \"\";\n    }\n    console.log(\"\");\n  }\n}\n\nconst readFile = route => {\n  fs.readFile(route, 'utf8', (err, data) => {\n    fuga(data);\n  });\n}\n\nconst readFileWithoutArg = () => {\n  const data = require('fs').readFileSync('/dev/stdin', 'utf8');\n  fuga(data)\n}\n\nlet sampleInputPath = \"\";\n\nif(process.argv.length > 2) {\n  sampleInputPath = process.argv[2];\n  readFile(sampleInputPath);\n} else {\n  readFileWithoutArg();\n}\n\n", "language": "JavaScript"}
{"filename": "p02416_1", "type": "JavaScript", "obfuscated": "const a0_0x44bd87 = a0_0x3a82;\nlet content = '';\nprocess[a0_0x44bd87(0x0)][a0_0x44bd87(0x1)]();\nprocess['stdin']['setEncoding'](a0_0x44bd87(0x2));\nfunction a0_0x3a6e() {\n    const _0xae34d1 = [\n        'stdin',\n        'resume',\n        'utf8',\n        'data',\n        'end',\n        'trim',\n        'split',\n        'slice',\n        'map',\n        'reduce',\n        'log'\n    ];\n    a0_0x3a6e = function () {\n        return _0xae34d1;\n    };\n    return a0_0x3a6e();\n}\nprocess['stdin']['on'](a0_0x44bd87(0x3), buf => {\n    content += buf;\n});\nfunction a0_0x3a82(HRHYZj, key) {\n    const stringArray = a0_0x3a6e();\n    a0_0x3a82 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a82(HRHYZj, key);\n}\nprocess[a0_0x44bd87(0x0)]['on'](a0_0x44bd87(0x4), () => {\n    const _0x5e903f = a0_0x3a82;\n    const lines = content[_0x5e903f(0x5)]()[_0x5e903f(0x6)]('\\x0a')[_0x5e903f(0x7)](0x0, -0x1);\n    const result = lines[_0x5e903f(0x8)](num => num[_0x5e903f(0x6)]('')['map'](n => parseInt(n, 0xa))[_0x5e903f(0x9)]((prev, cur) => prev + cur));\n    console[_0x5e903f(0xa)](result['join']('\\x0a'));\n});", "test_cases": [["123\n55\n1000\n0", "6\n10\n1"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\n\nprocess.stdin.on('end', () => {\n  const lines = content\n    .trim()\n    .split('\\n')\n    .slice(0, -1);\n\n  const result = lines.map(num =>\n    num\n      .split('')\n      .map(n => parseInt(n, 10))\n      .reduce((prev, cur) => prev + cur)\n  );\n\n  console.log(result.join('\\n'));\n});\n", "language": "JavaScript"}
{"filename": "p02418_1", "type": "JavaScript", "obfuscated": "function a0_0x35be(Pqiksa, key) {\n    const stringArray = a0_0x34d5();\n    a0_0x35be = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x35be(Pqiksa, key);\n}\nconst a0_0x1c4cad = a0_0x35be;\nconst input = require('fs')[a0_0x1c4cad(0x0)]('/dev/stdin', 'utf8');\nconst arr = input['split']('\\x0a');\nconst regExp = new RegExp(arr[0x1]);\nconsole['log'](regExp[a0_0x1c4cad(0x1)](arr[0x0] + arr[0x0]) ? a0_0x1c4cad(0x2) : 'No');\nfunction a0_0x34d5() {\n    const _0x4b6670 = [\n        'readFileSync',\n        'test',\n        'Yes'\n    ];\n    a0_0x34d5 = function () {\n        return _0x4b6670;\n    };\n    return a0_0x34d5();\n}", "test_cases": [["vanceknowledgetoad\nadvance", "Yes"], ["vanceknowledgetoad\nadvanced", "No"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst arr = input.split('\\n');\nconst regExp = new RegExp(arr[1]);\nconsole.log(regExp.test(arr[0] + arr[0])?'Yes':'No');\n", "language": "JavaScript"}
{"filename": "p02811_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2a28ab = a0_0x4805;\nconst main = arg => {\n    const _0x544870 = a0_0x4805;\n    arg = arg[_0x544870(0x0)]()[_0x544870(0x1)]('\\x0a');\n    const K = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    const X = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    console[_0x544870(0x2)](0x1f4 * K >= X ? _0x544870(0x3) : 'No');\n};\nfunction a0_0x4805(tAvSsd, key) {\n    const stringArray = a0_0x52bf();\n    a0_0x4805 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4805(tAvSsd, key);\n}\nfunction a0_0x52bf() {\n    const _0x5d3140 = [\n        'trim',\n        'split',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x52bf = function () {\n        return _0x5d3140;\n    };\n    return a0_0x52bf();\n}\nmain(require('fs')[a0_0x2a28ab(0x4)](a0_0x2a28ab(0x5), a0_0x2a28ab(0x6)));", "test_cases": [["2 900", "Yes"], ["1 501", "No"], ["4 2000", "Yes"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const K = parseInt(arg[0].split(\" \")[0]);\n    const X = parseInt(arg[0].split(\" \")[1]);\n    \n    console.log(500 * K >= X ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03023_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x164e62 = a0_0x4578;\nfunction a0_0x4578(vLvBIV, key) {\n    var stringArray = a0_0x43db();\n    a0_0x4578 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4578(vLvBIV, key);\n}\nfunction a0_0x43db() {\n    var _0x4b316b = [\n        'trim',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x43db = function () {\n        return _0x4b316b;\n    };\n    return a0_0x43db();\n}\n(function (input) {\n    var _0x4b0a55 = a0_0x4578;\n    input = input[_0x4b0a55(0x0)]() - 0x0;\n    console[_0x4b0a55(0x1)](0xb4 * (input - 0x2));\n}(require('fs')[a0_0x164e62(0x2)](a0_0x164e62(0x3), a0_0x164e62(0x4))));", "test_cases": [["3", "180"], ["100", "17640"]], "original": "'use strict';\n(function(input){\n  input=input.trim()-0;\n  console.log(180*(input-2));\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03130_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x4c9da9 = a0_0xd960;\nfunction I(s, f) {\n    this['_s'] = s;\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = f || Number;\n}\nI[a0_0x4c9da9(0x0)]['a'] = function () {\n    var _0x2d14ab = a0_0xd960;\n    var l = this['_s']['split']('\\x0a')[this['_l']];\n    if (!l)\n        return;\n    var t = l[_0x2d14ab(0x1)]()[_0x2d14ab(0x2)]('\\x20');\n    var a = t[this['_c']];\n    this['_c']++;\n    if (t['length'] === this['_c']) {\n        this['_c'] = 0x0;\n        this['_l']++;\n    }\n    return this['_f'](a);\n};\nI['prototype']['l'] = function () {\n    var _0x1f8e9b = a0_0xd960;\n    var l = this['_s']['split']('\\x0a')[this['_l']];\n    this['_c'] = 0x0;\n    this['_l']++;\n    return l['split']('\\x20')[_0x1f8e9b(0x3)](this['_f']);\n};\nfunction main(input) {\n    var _0x3dc956 = a0_0xd960;\n    const o = new I(input);\n    const arr = Array(0x4)[_0x3dc956(0x4)](0x0);\n    for (let i = 0x0; i < 0x3; i++) {\n        let a = o['a']();\n        let b = o['a']();\n        arr[a - 0x1]++;\n        arr[b - 0x1]++;\n    }\n    if (arr[_0x3dc956(0x5)]((a, b) => a - b)[_0x3dc956(0x6)]('\\x20') === _0x3dc956(0x7)) {\n        console['log'](_0x3dc956(0x8));\n    } else {\n        console[_0x3dc956(0x9)]('NO');\n    }\n}\nmain(require('fs')['readFileSync'](a0_0x4c9da9(0xa), a0_0x4c9da9(0xb)));\nfunction a0_0xd960(ruIHow, key) {\n    var stringArray = a0_0x2461();\n    a0_0xd960 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd960(ruIHow, key);\n}\nfunction a0_0x2461() {\n    var _0x15a9e1 = [\n        'prototype',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'sort',\n        'join',\n        '1\\x201\\x202\\x202',\n        'YES',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2461 = function () {\n        return _0x15a9e1;\n    };\n    return a0_0x2461();\n}", "test_cases": [["4 2\n1 3\n2 3", "YES"], ["3 2\n2 4\n1 2", "NO"], ["2 1\n3 2\n4 3", "YES"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s;this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s.split(\"\\n\")[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s.split(\"\\n\")[this._l];this._c=0;this._l++;return l.split(\" \").map(this._f)};\n\n// TODO test and remove comment\nfunction main(input) {\n  const o = new I(input);\n\n  const arr = Array(4).fill(0);\n  for (let i=0;i<3;i++) {\n    let a = o.a();\n    let b = o.a();\n    arr[a-1]++;\n    arr[b-1]++;\n  }\n\n  if (arr.sort((a,b) => a-b).join(\" \") === \"1 1 2 2\") {\n    console.log(\"YES\")\n  } else {\n    console.log(\"NO\")\n  }\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03241_1", "type": "JavaScript", "obfuscated": "var a0_0x123573 = a0_0x524c;\nfunction Main(input) {\n    var _0x2ffbb5 = a0_0x524c;\n    input = input[_0x2ffbb5(0x0)]('\\x0a');\n    tmp = input[0x0]['split']('\\x20');\n    var N = parseInt(tmp[0x0], 0xa);\n    var M = parseInt(tmp[0x1], 0xa);\n    var divisors = divisor(M);\n    var max = 0x0;\n    for (var i = 0x0; i < divisors[_0x2ffbb5(0x1)]; i++) {\n        var d = divisors[i];\n        if (M / d >= N) {\n            if (_0x2ffbb5(0x2) === _0x2ffbb5(0x2)) {\n                max = Math['max'](max, d);\n            } else {\n                input = input['split']('\\x0a');\n                tmp = input[0x0][_0x2ffbb5(0x0)]('\\x20');\n                var N = parseInt(tmp[0x0], 0xa);\n                var M = parseInt(tmp[0x1], 0xa);\n                var divisors = divisor(M);\n                var max = 0x0;\n                for (var i = 0x0; i < divisors[_0x2ffbb5(0x1)]; i++) {\n                    var d = divisors[i];\n                    if (M / d >= N) {\n                        max = Math[_0x2ffbb5(0x3)](max, d);\n                    }\n                }\n                console[_0x2ffbb5(0x4)]('%d', max);\n            }\n        }\n    }\n    console[_0x2ffbb5(0x4)]('%d', max);\n}\nfunction a0_0x3e14() {\n    var _0x4b281f = [\n        'split',\n        'length',\n        'kMWDv',\n        'max',\n        'log',\n        'CThXJ',\n        'push',\n        'AYlIR',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3e14 = function () {\n        return _0x4b281f;\n    };\n    return a0_0x3e14();\n}\nfunction a0_0x524c(JsrIFu, key) {\n    var stringArray = a0_0x3e14();\n    a0_0x524c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x524c(JsrIFu, key);\n}\nfunction divisor(n) {\n    var _0x5bc6e7 = a0_0x524c;\n    var res = [];\n    for (var i = 0x1; i * i <= n; i++) {\n        if (n % i == 0x0) {\n            if (_0x5bc6e7(0x5) !== 'CThXJ') {\n                if (n % i == 0x0) {\n                    res[_0x5bc6e7(0x6)](i);\n                    if (n / i != i) {\n                        res['push'](n / i);\n                    }\n                }\n            } else {\n                res[_0x5bc6e7(0x6)](i);\n                if (n / i != i) {\n                    if (_0x5bc6e7(0x7) !== _0x5bc6e7(0x7)) {\n                        res[_0x5bc6e7(0x6)](n / i);\n                    } else {\n                        res['push'](n / i);\n                    }\n                }\n            }\n        }\n    }\n    return res;\n}\nMain(require('fs')[a0_0x123573(0x8)](a0_0x123573(0x9), 'utf8'));", "test_cases": [["3 14", "2"], ["10 123", "3"], ["100000 1000000000", "10000"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\ttmp = input[0].split(\" \");\n\t//文字列から10進数に変換するときはparseIntを使います\n\tvar N = parseInt(tmp[0], 10);\n\tvar M = parseInt(tmp[1], 10);\n\n    var divisors = divisor(M);\n    var max = 0;\n            for (var i =0;i < divisors.length;i++) {\n                var d = divisors[i];\n                if (M / d >= N) {\n                    max = Math.max(max, d);\n                }\n            }\n\n\t//出力\n\tconsole.log('%d',max);\n}\nfunction divisor(n) {\n        var res = [];\n        for (var i = 1; i * i <= n; i++) {\n            if (n % i == 0) {\n                res.push(i);\n                if (n / i != i) {\n                    res.push(n / i);\n                }\n            }\n        }\n        return res;\n    }\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03378_1", "type": "JavaScript", "obfuscated": "var a0_0x8bbe3b = a0_0x16d5;\nconst BKRT = '\\x0a';\nfunction a0_0x16d5(aCUUta, key) {\n    var stringArray = a0_0xabff();\n    a0_0x16d5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16d5(aCUUta, key);\n}\nconst SPAC = '\\x20';\nfunction a0_0xabff() {\n    var _0x138767 = [\n        'split',\n        'map',\n        'shift',\n        'sHFtO',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'join',\n        'QimFo',\n        'stack',\n        'message',\n        'string',\n        'stringify',\n        'append',\n        '<textarea>',\n        '<br>',\n        'appendTo',\n        'body',\n        '\\x0a5\\x203\\x203\\x0a1\\x202\\x204\\x0a'\n    ];\n    a0_0xabff = function () {\n        return _0x138767;\n    };\n    return a0_0xabff();\n}\nconst NOSP = '';\nfunction Main(input) {\n    var _0x27bee8 = a0_0x16d5;\n    input = []['concat'](...input[_0x27bee8(0x0)](BKRT)[_0x27bee8(0x1)](a => a['split'](SPAC)));\n    const strShift = () => input[_0x27bee8(0x2)]();\n    const intShift = () => ~~input[_0x27bee8(0x2)]();\n    var N = intShift();\n    var M = intShift();\n    var X = intShift();\n    var right = 0x0;\n    var left = 0x0;\n    for (var i = 0x0; i < M; i++) {\n        var a = intShift();\n        if (a < X) {\n            if (_0x27bee8(0x3) !== _0x27bee8(0x3)) {\n                right++;\n            } else {\n                left++;\n            }\n        } else {\n            right++;\n        }\n    }\n    return ~~Math[_0x27bee8(0x4)](left, right);\n}\n((b, c, d) => 'undefined' != typeof require ? console[a0_0x8bbe3b(0x5)](Main(require('fs')[a0_0x8bbe3b(0x6)](a0_0x8bbe3b(0x7), a0_0x8bbe3b(0x8)))) : [\n    b = b[a0_0x8bbe3b(0x0)]('\\x0a')['slice'](0x1, -0x1)[a0_0x8bbe3b(0x9)]('\\x0a'),\n    c = (function () {\n        var _0x29bd7e = a0_0x16d5;\n        try {\n            return Main(b);\n        } catch (f) {\n            if ('QimFo' !== _0x29bd7e(0xa)) {\n                var a = intShift();\n                if (a < X) {\n                    left++;\n                } else {\n                    right++;\n                }\n            } else {\n                return f[_0x29bd7e(0xb)] || f[_0x29bd7e(0xc)];\n            }\n        }\n    }()),\n    d = typeof c,\n    a0_0x8bbe3b(0xd) == d || (c = JSON[a0_0x8bbe3b(0xe)](c)),\n    $('<form>')[a0_0x8bbe3b(0xf)]([\n        [\n            0xa,\n            b\n        ],\n        0x0,\n        [\n            0x1,\n            d\n        ],\n        0x0,\n        [\n            0xa,\n            c\n        ]\n    ]['map'](f => $(f ? a0_0x8bbe3b(0x10) : a0_0x8bbe3b(0x11), f && {\n        'rows': f[0x0],\n        'cols': 0x28,\n        'text': f[0x1]\n    })))[a0_0x8bbe3b(0x12)](a0_0x8bbe3b(0x13))\n])(a0_0x8bbe3b(0x14));", "test_cases": [["5 3 3\n1 2 4", "1"], ["7 3 2\n4 5 6", "0"], ["10 7 5\n1 2 3 4 6 8 9", "3"]], "original": "const BKRT = \"\\n\";\nconst SPAC = \" \";\nconst NOSP = \"\";\n\nfunction Main(input){\n\tinput = [].concat(...input.split(BKRT).map(a=>a.split(SPAC)));\n  const strShift = ()=>input.shift();\n  const intShift = ()=>~~input.shift();\n  \n  var N = intShift();\n  var M = intShift();\n  var X = intShift();\n  \n  var right = 0;\n  var left = 0;\n  for(var i = 0; i < M; i++){\n  \tvar a = intShift();\n    if(a < X){\n    \tleft++;\n    }else{\n    \tright++;\n    }\n  }\n  return ~~Math.min(left,right);\n}\n\n// If you are interested in the algorithms I used, \n// there is no need to read down from this line.\n\n((b,c,d)=>\"undefined\"!=typeof require?console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"))):[b=b.split(\"\\n\").slice(1,-1).join(\"\\n\"),c=function(){try{return Main(b)}catch(f){return f.stack||f.message}}(),d=typeof c,\"string\"==d||(c=JSON.stringify(c)),$(\"<form>\").append([[10,b],0,[1,d],0,[10,c]].map(f=>$(f?\"<textarea>\":\"<br>\",f&&{rows:f[0],cols:40,text:f[1]}))).appendTo(\"body\")])(`\n5 3 3\n1 2 4\n`);", "language": "JavaScript"}
{"filename": "p03424_1", "type": "JavaScript", "obfuscated": "const a0_0x4743b8 = a0_0x1500;\nfunction main(s) {\n    const _0x13bd75 = a0_0x1500;\n    const set = new Set(s[_0x13bd75(0x0)]('\\x0a')[0x1][_0x13bd75(0x0)]('\\x20'));\n    const ans = [...set][_0x13bd75(0x1)] === 0x4 ? _0x13bd75(0x2) : _0x13bd75(0x3);\n    console[_0x13bd75(0x4)](ans);\n}\nfunction a0_0x1500(EZEVHD, key) {\n    const stringArray = a0_0x36cc();\n    a0_0x1500 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1500(EZEVHD, key);\n}\nfunction a0_0x36cc() {\n    const _0x114418 = [\n        'split',\n        'length',\n        'Four',\n        'Three',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x36cc = function () {\n        return _0x114418;\n    };\n    return a0_0x36cc();\n}\nmain(require('fs')[a0_0x4743b8(0x5)](a0_0x4743b8(0x6), a0_0x4743b8(0x7)));", "test_cases": [["6\nG W Y P Y W", "Four"], ["9\nG W W G P W P G G", "Three"], ["8\nP Y W G Y W Y Y", "Four"]], "original": "function main(s) {\n  \n  const set = new Set(s.split('\\n')[1].split(' '));\n  const ans = ([...set].length === 4) ? 'Four' : 'Three';\n  \n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03659_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xad2be4 = a0_0x1444;\nconst main = arg => {\n    const _0x310d2d = a0_0x1444;\n    arg = arg[_0x310d2d(0x0)]()['split']('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const A = arg[0x1]['split']('\\x20')[_0x310d2d(0x1)](n => parseInt(n));\n    const totalSum = A[_0x310d2d(0x2)]((m, n) => m + n);\n    let left = A[0x0];\n    let right = totalSum - A[0x0];\n    let answer = Infinity;\n    for (let i = 0x0; i < N - 0x1; i++) {\n        let diff = Math[_0x310d2d(0x3)](right - left);\n        answer = Math[_0x310d2d(0x4)](answer, diff);\n        right -= A[parseInt(i) + 0x1];\n        left += A[parseInt(i) + 0x1];\n    }\n    console[_0x310d2d(0x5)](answer);\n};\nmain(require('fs')[a0_0xad2be4(0x6)](a0_0xad2be4(0x7), a0_0xad2be4(0x8)));\nfunction a0_0x1444(uZnccE, key) {\n    const stringArray = a0_0xd22a();\n    a0_0x1444 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1444(uZnccE, key);\n}\nfunction a0_0xd22a() {\n    const _0x76db4f = [\n        'trim',\n        'map',\n        'reduce',\n        'abs',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xd22a = function () {\n        return _0x76db4f;\n    };\n    return a0_0xd22a();\n}", "test_cases": [["6\n1 2 3 4 5 6", "1"], ["2\n10 -10", "20"]], "original": "\"use strict\";\n\nconst main = arg => {\n  arg = arg.trim().split(\"\\n\");\n  const N = parseInt(arg[0]);\n  const A = arg[1].split(\" \").map(n=>parseInt(n));\n\n  const totalSum = A.reduce((m,n)=>m+n);\n  \n  let left  = A[0];\n  let right = totalSum - A[0];\n  \n  let answer = Infinity;\n  \n  for(let i=0; i<N - 1; i++) {\n    let diff = Math.abs(right - left);\n    answer = Math.min(answer, diff);\n    \n    right -= A[parseInt(i) + 1];\n    left  += A[parseInt(i) + 1];\n  }\n  \n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03672_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1c0041 = a0_0x12a9;\nconst main = arg => {\n    const _0x42ee8b = a0_0x12a9;\n    arg = arg[_0x42ee8b(0x0)]()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    if (S[_0x42ee8b(0x1)] === 0x2) {\n        console[_0x42ee8b(0x2)](0x1);\n        return;\n    }\n    for (let i = 0x0; i < S['length']; i++) {\n        S[_0x42ee8b(0x3)]();\n        let mid = Math[_0x42ee8b(0x4)](S[_0x42ee8b(0x1)] / 0x2);\n        if (S[_0x42ee8b(0x5)](0x0, mid)[_0x42ee8b(0x6)]('') === S['slice'](mid, S[_0x42ee8b(0x1)] + 0x1)[_0x42ee8b(0x6)]('')) {\n            console[_0x42ee8b(0x2)](S[_0x42ee8b(0x1)]);\n            return;\n        }\n    }\n};\nfunction a0_0x12a9(UNXnqu, key) {\n    const stringArray = a0_0x5771();\n    a0_0x12a9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x12a9(UNXnqu, key);\n}\nfunction a0_0x5771() {\n    const _0x4f474b = [\n        'trim',\n        'length',\n        'log',\n        'pop',\n        'floor',\n        'slice',\n        'join',\n        'utf8'\n    ];\n    a0_0x5771 = function () {\n        return _0x4f474b;\n    };\n    return a0_0x5771();\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x1c0041(0x7)));", "test_cases": [["abaababaab", "6"], ["xxxx", "2"], ["abcabcabcabc", "6"], ["akasakaakasakasakaakas", "14"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    if(S.length === 2) {\n        console.log(1);\n        return;\n    }\n    \n    for(let i=0; i<S.length; i++) {\n        S.pop();\n        \n        let mid = Math.floor(S.length / 2);\n        \n        if(S.slice(0, mid).join(\"\") === S.slice(mid, S.length + 1).join(\"\")) {\n            console.log(S.length);\n            return;\n        }\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03720_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2d55e9 = a0_0x40fe;\nlet lines = require('fs')['readFileSync']('/dev/stdin', a0_0x2d55e9(0x0))[a0_0x2d55e9(0x1)]('\\x0a');\nlet N = +lines[0x0][a0_0x2d55e9(0x1)]('\\x20')[0x0];\nlet ABs = lines['slice'](0x1)['map'](line => line[a0_0x2d55e9(0x1)]('\\x20')[a0_0x2d55e9(0x2)](Number));\nfunction a0_0x576d() {\n    const _0x38eca9 = [\n        'utf8',\n        'split',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x576d = function () {\n        return _0x38eca9;\n    };\n    return a0_0x576d();\n}\nlet res = [];\nfunction a0_0x40fe(NdIGwB, key) {\n    const stringArray = a0_0x576d();\n    a0_0x40fe = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x40fe(NdIGwB, key);\n}\nfor (let i = 0x0; i < N; i++)\n    res[i] = 0x0;\nABs[a0_0x2d55e9(0x3)](ab => {\n    res[ab[0x0] - 0x1]++;\n    res[ab[0x1] - 0x1]++;\n});\nres['forEach'](n => console[a0_0x2d55e9(0x4)](n));", "test_cases": [["4 3\n1 2\n2 3\n1 4", "2\n2\n1\n1"], ["2 5\n1 2\n2 1\n1 2\n2 1\n1 2", "5\n5"], ["8 8\n1 2\n3 4\n1 5\n2 8\n3 7\n5 2\n4 1\n6 8", "3\n3\n2\n2\n2\n1\n1\n2"]], "original": "'use strict';\n\nlet lines = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n');\n\nlet N = +(lines[0].split(' ')[0]);\nlet ABs = lines.slice(1).map(line => line.split(' ').map(Number));\n\nlet res = [];\nfor (let i = 0; i < N; i++) res[i] = 0;\n\nABs.forEach(ab => {\n    res[ab[0]-1]++;\n    res[ab[1]-1]++;\n});\n\nres.forEach(n => console.log(n));", "language": "JavaScript"}
{"filename": "p03862_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x57b21c = a0_0x45e1;\nfunction a0_0x45e1(AaTJxl, key) {\n    const stringArray = a0_0x2e94();\n    a0_0x45e1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x45e1(AaTJxl, key);\n}\nfunction a0_0x2e94() {\n    const _0x130c17 = [\n        'trim',\n        'split',\n        'map',\n        'tVEiy',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2e94 = function () {\n        return _0x130c17;\n    };\n    return a0_0x2e94();\n}\nconst main = arg => {\n    const _0x343bc0 = a0_0x45e1;\n    const input = arg[_0x343bc0(0x0)]()[_0x343bc0(0x1)]('\\x0a');\n    let N = Number(input[0x0][_0x343bc0(0x1)]('\\x20')[0x0]);\n    let x = Number(input[0x0][_0x343bc0(0x1)]('\\x20')[0x1]);\n    let As = input[0x1]['split']('\\x20')[_0x343bc0(0x2)](n => Number(n));\n    let manip = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        let exceed = As[i] - x;\n        if (exceed > 0x0) {\n            As[i] = x;\n            manip += exceed;\n        }\n    }\n    for (let i = 0x1; i < N - 0x1; i++) {\n        let left = As[i - 0x1];\n        let current = As[i];\n        let right = As[i + 0x1];\n        if (left + current > x && current + right > x) {\n            if (_0x343bc0(0x3) !== _0x343bc0(0x3)) {\n                As[i] = x - left;\n                manip += current - (x - left);\n            } else {\n                As[i] = x - left;\n                manip += current - (x - left);\n            }\n        }\n    }\n    for (let i = 0x0; i < N - 0x1; i++) {\n        let current = As[i];\n        let right = As[i + 0x1];\n        if (current + right > x) {\n            As[i] = x - right;\n            manip += current - (x - right);\n        }\n    }\n    console[_0x343bc0(0x4)](manip);\n};\nmain(require('fs')[a0_0x57b21c(0x5)](a0_0x57b21c(0x6), a0_0x57b21c(0x7)));", "test_cases": [["3 3\n2 2 2", "1"], ["6 1\n1 6 1 2 0 4", "11"], ["5 9\n3 1 4 1 5", "0"], ["2 0\n5 5", "10"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet N = Number(input[0].split(' ')[0])\n\tlet x = Number(input[0].split(' ')[1])\n\tlet As = input[1].split(' ').map(n => Number(n))\n\tlet manip = 0\n\t\n\t// 単体でxを超えていたら減らす O(n)\n\tfor(let i = 0; i < N ; i++) {\n\t\tlet exceed = As[i] - x\n\t\tif(exceed > 0) {\n\t\t\tAs[i] = x\n\t\t\tmanip += exceed\n\t\t}\n\t}\n\n\t// 左と足しても右と足してもxを超えていたら、左と足しても超えないように減らす O(n)\n\tfor(let i = 1; i < N - 1 ; i++) {\n\t\tlet left = As[i - 1]\n\t\tlet current = As[i]\n\t\tlet right = As[i + 1]\n\t\tif(left + current > x && current + right > x) {\n\t\t\tAs[i] = x - left\n\t\t\tmanip += current - (x - left)\n\t\t}\n\t}\n\t// 右と足して超えていたら減らす O(n)\n\tfor(let i = 0; i < N - 1 ; i++) {\n\t\tlet current = As[i]\n\t\tlet right = As[i + 1]\n\t\tif(current + right > x) {\n\t\t\tAs[i] = x - right\n\t\t\tmanip += current - (x - right)\n\t\t}\n\t}\n\tconsole.log(manip)\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02235_1", "type": "JavaScript", "obfuscated": "var a0_0x356546 = a0_0x39d0;\nfunction a0_0x18a2() {\n    var _0x15445c = [\n        'length',\n        'PqqOg',\n        'RGciJ',\n        'iRJze',\n        'xEFIU',\n        'KGpbR',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'log'\n    ];\n    a0_0x18a2 = function () {\n        return _0x15445c;\n    };\n    return a0_0x18a2();\n}\nfunction lcs(x, y) {\n    var _0xab737c = a0_0x39d0;\n    var m = x[_0xab737c(0x0)];\n    var n = y['length'];\n    for (var i = 0x1; i <= m; i++) {\n        if ('GVidO' === _0xab737c(0x1)) {\n            c[i][j] = c[i - 0x1][j];\n        } else {\n            c[i][0x0] = 0x0;\n        }\n    }\n    for (var j = 0x1; j <= n; j++) {\n        c[0x0][j] = 0x0;\n    }\n    for (var i = 0x1; i <= m; i++) {\n        if (_0xab737c(0x2) !== 'YYKOv') {\n            for (var j = 0x1; j <= n; j++) {\n                if ('hZeht' === _0xab737c(0x3)) {\n                    var arr = [-0x1];\n                    c['push'](arr);\n                } else {\n                    if (x[i] == y[j]) {\n                        c[i][j] = c[i - 0x1][j - 0x1] + 0x1;\n                    } else if (c[i - 0x1][j] >= c[i][j - 0x1]) {\n                        c[i][j] = c[i - 0x1][j];\n                    } else {\n                        if (_0xab737c(0x4) !== _0xab737c(0x5)) {\n                            c[i][j] = c[i][j - 0x1];\n                        } else {\n                            c[i][0x0] = 0x0;\n                        }\n                    }\n                }\n            }\n        } else {\n            c[0x0][j] = 0x0;\n        }\n    }\n}\nvar input = require('fs')[a0_0x356546(0x6)](a0_0x356546(0x7), a0_0x356546(0x8))[a0_0x356546(0x9)]();\nvar lines = input['split']('\\x0a');\nfunction a0_0x39d0(dosWdO, key) {\n    var stringArray = a0_0x18a2();\n    a0_0x39d0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x39d0(dosWdO, key);\n}\nvar n = +lines[a0_0x356546(0xa)]() - 0x0;\nfor (var idx = 0x0; idx < n; idx++) {\n    var a = lines['shift']();\n    var b = lines['shift']();\n    var c = [[0x0]];\n    for (var i = 0x1; i <= a['length']; i++) {\n        var arr = [-0x1];\n        c['push'](arr);\n    }\n    lcs(a, b);\n    console[a0_0x356546(0xb)](c[a[a0_0x356546(0x0)]][b[a0_0x356546(0x0)]]);\n}", "test_cases": [["3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc", "4\n3\n2"]], "original": "function lcs(x, y) {\n    var m = x.length;\n    var n = y.length;\n\n    for (var i = 1; i <= m; i++) {\n        c[i][0] = 0;\n    }\n    for (var j = 1; j <= n; j++) {\n        c[0][j] = 0;\n    }\n\n    for (var i = 1; i <= m; i++) {\n        for (var j = 1; j <=n; j++) {\n            if (x[i] == y[j]) {\n                c[i][j] = c[i - 1][j - 1] + 1;\n            } else if (c[i - 1][j] >= c[i][j - 1]) {\n                c[i][j] = c[i - 1][j];\n            } else {\n                c[i][j] = c[i][j - 1];\n            }\n        }\n    }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar n = +lines.shift() - 0;\n\nfor (var idx = 0; idx < n; idx++) {\n    var a = lines.shift();\n    var b = lines.shift();\n\n    var c = [[0]];\n    for (var i = 1; i <= a.length; i++) {\n        var arr = [-1];\n        c.push(arr);\n    }\n    lcs(a, b);\n    console.log(c[a.length][b.length]);\n}", "language": "JavaScript"}
{"filename": "p02261_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x35e945 = a0_0x3b07;\nfunction a0_0x3336() {\n    const _0x1819e7 = [\n        'split',\n        'concat',\n        'join',\n        'log',\n        'Stable',\n        'Nqghx',\n        'NqNXF',\n        'EAvvH',\n        'aZQZk',\n        'nZaAt',\n        'dcrBw',\n        'dFwvy',\n        'jIXIS',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3336 = function () {\n        return _0x1819e7;\n    };\n    return a0_0x3336();\n}\nfunction a0_0x3b07(GMtyEm, key) {\n    const stringArray = a0_0x3336();\n    a0_0x3b07 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b07(GMtyEm, key);\n}\nconst main = input => {\n    const _0x14594d = a0_0x3b07;\n    input = input[_0x14594d(0x0)]('\\x0a');\n    const N = Number(input[0x0]);\n    const A1 = input[0x1][_0x14594d(0x0)]('\\x20');\n    const A2 = A1[_0x14594d(0x1)]();\n    bubbleSort(A1, N);\n    console['log'](A1[_0x14594d(0x2)]('\\x20'));\n    console[_0x14594d(0x3)]('Stable');\n    selectionSort(A2, N);\n    console[_0x14594d(0x3)](A2[_0x14594d(0x2)]('\\x20'));\n    console['log'](A2['every']((v, i) => v === A1[i]) ? _0x14594d(0x4) : 'Not\\x20stable');\n};\nfunction bubbleSort(A, N) {\n    const _0x4a46b5 = a0_0x3b07;\n    for (let i = 0x0; i < N - 0x1; ++i) {\n        if (_0x4a46b5(0x5) !== _0x4a46b5(0x6)) {\n            for (let j = N - 0x1; j >= i + 0x1; --j) {\n                if (_0x4a46b5(0x7) === _0x4a46b5(0x7)) {\n                    if (Number(A[j - 0x1][0x1]) > Number(A[j][0x1])) {\n                        const tmp = A[j];\n                        A[j] = A[j - 0x1];\n                        A[j - 0x1] = tmp;\n                    }\n                } else {\n                    for (let j = N - 0x1; j >= i + 0x1; --j) {\n                        if (Number(A[j - 0x1][0x1]) > Number(A[j][0x1])) {\n                            const tmp = A[j];\n                            A[j] = A[j - 0x1];\n                            A[j - 0x1] = tmp;\n                        }\n                    }\n                }\n            }\n        } else {\n            const tmp = A[i];\n            A[i] = A[minj];\n            A[minj] = tmp;\n        }\n    }\n}\nfunction selectionSort(A, N) {\n    const _0x17565f = a0_0x3b07;\n    for (let i = 0x0; i < N - 0x1; ++i) {\n        if ('aZQZk' !== _0x17565f(0x8)) {\n            if (Number(A[j - 0x1][0x1]) > Number(A[j][0x1])) {\n                const tmp = A[j];\n                A[j] = A[j - 0x1];\n                A[j - 0x1] = tmp;\n            }\n        } else {\n            let minj = i;\n            for (let j = i; j < N; ++j) {\n                if (_0x17565f(0x9) === _0x17565f(0x9)) {\n                    if (Number(A[j][0x1]) < Number(A[minj][0x1])) {\n                        if (_0x17565f(0xa) === _0x17565f(0xb)) {\n                            for (let i = 0x0; i < N - 0x1; ++i) {\n                                for (let j = N - 0x1; j >= i + 0x1; --j) {\n                                    if (Number(A[j - 0x1][0x1]) > Number(A[j][0x1])) {\n                                        const tmp = A[j];\n                                        A[j] = A[j - 0x1];\n                                        A[j - 0x1] = tmp;\n                                    }\n                                }\n                            }\n                        } else {\n                            minj = j;\n                        }\n                    }\n                } else {\n                    let minj = i;\n                    for (let j = i; j < N; ++j) {\n                        if (Number(A[j][0x1]) < Number(A[minj][0x1])) {\n                            minj = j;\n                        }\n                    }\n                    if (i !== minj) {\n                        const tmp = A[i];\n                        A[i] = A[minj];\n                        A[minj] = tmp;\n                    }\n                }\n            }\n            if (i !== minj) {\n                if (_0x17565f(0xc) === _0x17565f(0xc)) {\n                    const tmp = A[i];\n                    A[i] = A[minj];\n                    A[minj] = tmp;\n                } else {\n                    minj = j;\n                }\n            }\n        }\n    }\n}\nmain(require('fs')[a0_0x35e945(0xd)](a0_0x35e945(0xe), a0_0x35e945(0xf)));", "test_cases": [["5\nH4 C9 S4 D2 C3", "D2 C3 H4 S4 C9\nStable\nD2 C3 S4 H4 C9\nNot stable"], ["2\nS1 H1", "S1 H1\nStable\nS1 H1\nStable"]], "original": "'use strict';\n\nconst main = input => {\n  input = input.split('\\n');\n  const N = Number(input[0]);\n  const A1 = input[1].split(' ');\n  const A2 = A1.concat();\n  bubbleSort(A1, N);\n  console.log(A1.join(' '));\n  console.log('Stable');\n  selectionSort(A2, N);\n  console.log(A2.join(' '));\n  console.log(A2.every((v, i) => v === A1[i]) ? 'Stable' : 'Not stable');\n};\n\nfunction bubbleSort(A, N) {\n  for (let i = 0; i < N - 1; ++i) {\n    for (let j = N - 1; j >= i + 1; --j) {\n      if (Number(A[j - 1][1]) > Number(A[j][1])) {\n        const tmp = A[j];\n        A[j] = A[j - 1];\n        A[j - 1] = tmp;\n      }\n    }\n  }\n}\n\nfunction selectionSort(A, N) {\n  for (let i = 0; i < N - 1; ++i) {\n    let minj = i;\n    for (let j = i; j < N; ++j) {\n      if (Number(A[j][1]) < Number(A[minj][1])) {\n        minj = j;\n      }\n    }\n    if (i !== minj) {\n      const tmp = A[i];\n      A[i] = A[minj];\n      A[minj] = tmp;\n    }\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02275_1", "type": "JavaScript", "obfuscated": "function a0_0x385e() {\n    const _0x4c6c57 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x385e = function () {\n        return _0x4c6c57;\n    };\n    return a0_0x385e();\n}\nfunction a0_0x4e7d(jJrONh, key) {\n    const stringArray = a0_0x385e();\n    a0_0x4e7d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e7d(jJrONh, key);\n}\n(function main() {\n    const _0x4d9335 = a0_0x4e7d;\n    const lines = require('fs')[_0x4d9335(0x0)](_0x4d9335(0x1), _0x4d9335(0x2))[_0x4d9335(0x3)]()[_0x4d9335(0x4)]('\\x0a');\n    const n = Number(lines['shift']());\n    const arr = lines[_0x4d9335(0x5)]()[_0x4d9335(0x4)]('\\x20')[_0x4d9335(0x6)](Number);\n    const k = 0x2710;\n    let cnt_arr = [];\n    for (let i = 0x0; i <= k; i++)\n        cnt_arr[i] = 0x0;\n    for (let i = 0x0; i < n; i++)\n        cnt_arr[arr[i]]++;\n    for (let i = 0x1; i <= k; i++)\n        cnt_arr[i] += cnt_arr[i - 0x1];\n    let out_arr = [];\n    for (let i = n - 0x1; i >= 0x0; i--)\n        out_arr[--cnt_arr[arr[i]]] = arr[i];\n    console[_0x4d9335(0x7)](out_arr['join']('\\x20'));\n}());", "test_cases": [["7\n2 5 1 3 2 3 0", "0 1 2 2 3 3 5"]], "original": "(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n  const arr = lines.shift().split(' ').map(Number);\n  const k = 10000;\n  let cnt_arr = [];\n  for (let i = 0; i <= k; i++) cnt_arr[i] = 0;\n  for (let i = 0; i < n; i++) cnt_arr[arr[i]]++;\n  for (let i = 1; i <= k; i++) cnt_arr[i] += cnt_arr[i - 1];\n  let out_arr = [];\n  for (let i = n - 1; i >= 0; i--) out_arr[--cnt_arr[arr[i]]] = arr[i];\n  console.log(out_arr.join(' '));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02467_1", "type": "JavaScript", "obfuscated": "function a0_0x9fab(PcZFLy, key) {\n    var stringArray = a0_0x57a7();\n    a0_0x9fab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9fab(PcZFLy, key);\n}\nvar a0_0x2f04ab = a0_0x9fab;\nfunction Main(input) {\n    var _0x11429a = a0_0x9fab;\n    input = input[_0x11429a(0x0)]()['split']('\\x0a')['map'](function (x) {\n        var _0x54f47d = a0_0x9fab;\n        return x[_0x54f47d(0x1)]('\\x20');\n    });\n    var n = parseInt(input[0x0][0x0], 0xa);\n    var originalN = n;\n    var v_ans = [];\n    var start = 0x2;\n    whole_loop:\n        while (!![]) {\n            for (var i = start; i <= Math['sqrt'](n); i++) {\n                if (n % i === 0x0) {\n                    v_ans['push'](i);\n                    n /= i;\n                    start = i;\n                    continue whole_loop;\n                }\n            }\n            v_ans[_0x11429a(0x2)](n);\n            break;\n        }\n    console[_0x11429a(0x3)](originalN[_0x11429a(0x4)]() + ':\\x20' + v_ans[_0x11429a(0x5)]('\\x20'));\n}\nMain(require('fs')['readFileSync'](a0_0x2f04ab(0x6), 'utf8'));\nfunction a0_0x57a7() {\n    var _0x1fb972 = [\n        'trim',\n        'split',\n        'push',\n        'log',\n        'toString',\n        'join',\n        '/dev/stdin'\n    ];\n    a0_0x57a7 = function () {\n        return _0x1fb972;\n    };\n    return a0_0x57a7();\n}", "test_cases": [["12", "12: 2 2 3"], ["126", "126: 2 3 3 7"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n    var n = parseInt(input[0][0], 10);\n    var originalN = n;\n    var v_ans = [];\n    var start = 2;\n    whole_loop:\n    while (true){\n        for (var i = start; i <= Math.sqrt(n); i++){\n            if (n % i === 0) {\n                v_ans.push(i);\n                n /= i;\n                start = i;\n                continue whole_loop;\n            }\n        }\n        v_ans.push(n);\n        break;\n    }\n    console.log(originalN.toString() + \": \" + v_ans.join(\" \"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02548_1", "type": "JavaScript", "obfuscated": "function a0_0x5773() {\n    var _0x3105f7 = [\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5773 = function () {\n        return _0x3105f7;\n    };\n    return a0_0x5773();\n}\nfunction a0_0x4367(YVFLEa, key) {\n    var stringArray = a0_0x5773();\n    a0_0x4367 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4367(YVFLEa, key);\n}\nvar a0_0x1968af = a0_0x4367;\nfunction Main(input) {\n    var _0x28a347 = a0_0x4367;\n    input = input[_0x28a347(0x0)]('\\x0a');\n    N = parseInt(input[0x0][_0x28a347(0x0)]('\\x20'));\n    var result = 0x0;\n    for (var i = 0x1; i < N; i++) {\n        result += Math[_0x28a347(0x1)]((N - 0x1) / i);\n    }\n    console[_0x28a347(0x2)]('%d', result);\n}\nMain(require('fs')[a0_0x1968af(0x3)](a0_0x1968af(0x4), a0_0x1968af(0x5)));", "test_cases": [["3", "3"], ["100", "473"], ["1000000", "13969985"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  N = parseInt(input[0].split(\" \"));\n  var result = 0;\n  for(var i=1; i<N; i++) {\n    result += Math.floor((N-1)/i);\n  }\n  //出力\n  console.log(\"%d\", result);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02616_1", "type": "JavaScript", "obfuscated": "const a0_0x4d4382 = a0_0x4ef8;\nfunction a0_0x30b7() {\n    const _0x1103de = [\n        'log',\n        'split',\n        'map',\n        'XGnfZ',\n        'FGwPb',\n        'push',\n        'sort',\n        'slice',\n        'reduce',\n        'eaEja',\n        'UvfcL',\n        'pop',\n        'length',\n        'ezWZu',\n        'uUysQ',\n        'rqXig',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x30b7 = function () {\n        return _0x1103de;\n    };\n    return a0_0x30b7();\n}\nfunction a0_0x4ef8(WbLNix, key) {\n    const stringArray = a0_0x30b7();\n    a0_0x4ef8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ef8(WbLNix, key);\n}\nconsole[a0_0x4d4382(0x0)]((args => {\n    const _0xafc52d = a0_0x4ef8;\n    const [[N, K], A] = args['trim']()[_0xafc52d(0x1)]('\\x0a')['map'](r => r[_0xafc52d(0x1)]('\\x20')[_0xafc52d(0x2)](v => v | 0x0));\n    let Am = [], Ap = [];\n    for (let i = 0x0; i < N; i++) {\n        if (_0xafc52d(0x3) === _0xafc52d(0x4)) {\n            ap[_0xafc52d(0x5)](Ap[op]);\n            op++;\n        } else {\n            if (A[i] > 0x0)\n                Ap[_0xafc52d(0x5)](A[i]);\n            if (A[i] < 0x0)\n                Am[_0xafc52d(0x5)](A[i]);\n        }\n    }\n    const MOD = BigInt(0x3b9aca00 + 0x7), mul = (a, b) => (BigInt(a) * BigInt(b) % MOD + MOD) % MOD;\n    Am[_0xafc52d(0x6)]((a, b) => a - b);\n    Ap['sort']((a, b) => b - a);\n    if (Ap['length'] === 0x0 && K & 0x1)\n        return '' + Am[_0xafc52d(0x7)](-K)[_0xafc52d(0x8)](mul, 0x1);\n    let om = 0x0, op = 0x0, ap = [], am = [];\n    for (let i = 0x0; i < K; i++) {\n        if (_0xafc52d(0x9) === _0xafc52d(0x9)) {\n            if ((Ap[op] | 0x0) > -(Am[om] | 0x0)) {\n                ap[_0xafc52d(0x5)](Ap[op]);\n                op++;\n            } else {\n                if ('OAVHz' !== _0xafc52d(0xa)) {\n                    am[_0xafc52d(0x5)](Am[om]);\n                    om++;\n                } else {\n                    if ((Ap[op] | 0x0) > -(Am[om] | 0x0)) {\n                        ap[_0xafc52d(0x5)](Ap[op]);\n                        am[_0xafc52d(0xb)]();\n                    } else {\n                        am[_0xafc52d(0x5)](Am[om]);\n                        ap[_0xafc52d(0xb)]();\n                    }\n                }\n            }\n        } else {\n            am[_0xafc52d(0x5)](Am[om]);\n            om++;\n        }\n    }\n    if (am[_0xafc52d(0xc)] & 0x1) {\n        if (_0xafc52d(0xd) === _0xafc52d(0xe)) {\n            am[_0xafc52d(0x5)](Am[om]);\n            ap[_0xafc52d(0xb)]();\n        } else {\n            if ((Ap[op] | 0x0) > -(Am[om] | 0x0)) {\n                if ('qPABJ' === _0xafc52d(0xf)) {\n                    ap[_0xafc52d(0x5)](Ap[op]);\n                    am['pop']();\n                } else {\n                    ap[_0xafc52d(0x5)](Ap[op]);\n                    am[_0xafc52d(0xb)]();\n                }\n            } else {\n                am['push'](Am[om]);\n                ap[_0xafc52d(0xb)]();\n            }\n        }\n    }\n    return '' + mul(ap[_0xafc52d(0x8)](mul, 0x1), am[_0xafc52d(0x8)](mul, 0x1));\n})(require('fs')['readFileSync'](a0_0x4d4382(0x10), a0_0x4d4382(0x11))));", "test_cases": [["4 2\n1 2 -3 -4", "12"], ["4 3\n-1 -2 -3 -4", "1000000001"], ["2 1\n-1 1000000000", "1000000000"], ["10 10\n1000000000 100000000 10000000 1000000 100000 10000 1000 100 10 1", "999983200"]], "original": "console.log((args=>{\n  const [[N,K],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  let Am = [], Ap = [];\n  for ( let i = 0; i < N; i++ ) {\n    if ( A[i] > 0 ) Ap.push(A[i]);\n    if ( A[i] < 0 ) Am.push(A[i]);\n  }\n  const MOD = BigInt(1e9+7), mul = (a,b) => (BigInt(a)*BigInt(b)%MOD+MOD)%MOD;\n  Am.sort((a,b)=>a-b);\n  Ap.sort((a,b)=>b-a);\n  if ( Ap.length === 0 && K&1 ) return `${ Am.slice(-K).reduce(mul,1) }`;\n  let om = 0, op = 0, ap = [], am = [];\n  for ( let i = 0; i < K; i++ ) {\n    if ( (Ap[op]|0) > -(Am[om]|0) ) {\n      ap.push(Ap[op]); op++;\n    } else {\n      am.push(Am[om]); om++;\n    }\n  }\n  if ( am.length&1 ) {\n    if ( (Ap[op]|0) > -(Am[om]|0) ) {\n      ap.push(Ap[op]); am.pop();\n    } else {\n      am.push(Am[om]); ap.pop();\n    }\n  }\n  return `${mul(ap.reduce(mul,1),am.reduce(mul,1))}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02817_1", "type": "JavaScript", "obfuscated": "var a0_0x1455ef = a0_0x3007;\nfunction a0_0x3007(SBIzHx, key) {\n    var stringArray = a0_0x540f();\n    a0_0x3007 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3007(SBIzHx, key);\n}\nfunction a0_0x540f() {\n    var _0x520bd8 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x540f = function () {\n        return _0x520bd8;\n    };\n    return a0_0x540f();\n}\nfunction Main(input) {\n    var _0x141f66 = a0_0x3007;\n    input = input[_0x141f66(0x0)]('\\x0a');\n    st = input[0x0][_0x141f66(0x0)]('\\x20');\n    console[_0x141f66(0x1)](st[0x1] + st[0x0]);\n}\nMain(require('fs')[a0_0x1455ef(0x2)](a0_0x1455ef(0x3), a0_0x1455ef(0x4)));", "test_cases": [["oder atc", "atcoder"], ["humu humu", "humuhumu"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    // 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    st = input[0].split(\" \");\n  \n\n  //  s = st[1].trim();   //Sうけとり\n  //  t = st[0].trim();   //Tうけとり\n    \n  //  var ts='';\n   // ts =s+t;    //T+S  連結\n    \n    console.log(st[1]+st[0]);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02838_1", "type": "JavaScript", "obfuscated": "function a0_0xf4f7(XcdqzK, key) {\n    var stringArray = a0_0x3993();\n    a0_0xf4f7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf4f7(XcdqzK, key);\n}\nvar a0_0x14cb66 = a0_0xf4f7;\nfunction a0_0x3993() {\n    var _0x3ba995 = [\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3993 = function () {\n        return _0x3ba995;\n    };\n    return a0_0x3993();\n}\nfunction Main(input) {\n    var _0x179763 = a0_0xf4f7;\n    input = input[_0x179763(0x0)]('\\x0a');\n    var n = parseInt(input[0x0], 0xa);\n    var x = input[0x1][_0x179763(0x0)]('\\x20');\n    var y = new Array(n);\n    var count = 0x0;\n    var count2 = 0x0;\n    var a = 0x3b9aca07;\n    for (var i = 0x0; i < n; i++) {\n        x[i] = parseInt(x[i], 0xa);\n        y[i] = Math[_0x179763(0x1)](x[i] / 0x100000000);\n        x[i] = x[i] % 0x100000000;\n    }\n    for (var i = 0x0; i < n - 0x1; i++) {\n        for (var j = i + 0x1; j < n; j++) {\n            count += x[i] ^ x[j];\n            if (count > 0x100000000 / 0x2) {\n                count = count % (0x100000000 / 0x2);\n                count2 += 0.5;\n            }\n            count2 += y[i] ^ y[j];\n        }\n    }\n    count = count + count2 * 0x100000000;\n    console[_0x179763(0x2)](count % a);\n}\nMain(require('fs')[a0_0x14cb66(0x3)](a0_0x14cb66(0x4), a0_0x14cb66(0x5)));", "test_cases": [["3\n1 2 3", "6"], ["10\n3 1 4 1 5 9 2 6 5 3", "237"], ["10\n3 14 159 2653 58979 323846 2643383 27950288 419716939 9375105820", "103715602"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n  　var n = parseInt(input[0], 10);\n  　var x = input[1].split(\" \");\n  \tvar y = new Array(n);\n  \tvar count = 0;\n  \tvar count2 = 0;\n    var a = 1000000007;\n    for(var i=0; i<n; i++){\n\t    x[i] = parseInt(x[i], 10);\n      \ty[i] = Math.floor(x[i]/4294967296);\n      \tx[i] = x[i]%4294967296;\n    }\n  for(var i=0; i<n-1; i++){\n  \tfor(var j=i+1; j<n; j++){\n      \tcount += x[i] ^ x[j];\n      if(count > 4294967296/2){\n        count = count%(4294967296/2);\n        count2 += 0.5;\n      }\n      count2 += y[i] ^ y[j];\n    }\n  }\n  count = count + count2 * 4294967296;\n\tconsole.log(count%a);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03417_1", "type": "JavaScript", "obfuscated": "function a0_0x116c() {\n    var _0x1154aa = [\n        'split',\n        'map',\n        'floor',\n        '0000',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x116c = function () {\n        return _0x1154aa;\n    };\n    return a0_0x116c();\n}\nvar a0_0xda5293 = a0_0x3760;\nfunction a0_0x3760(WEMBOg, key) {\n    var stringArray = a0_0x116c();\n    a0_0x3760 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3760(WEMBOg, key);\n}\nfunction Main(input) {\n    var _0x2d6425 = a0_0x3760;\n    input = input[_0x2d6425(0x0)]('\\x20')[_0x2d6425(0x1)](a => parseInt(a));\n    var N = input[0x0];\n    var M = input[0x1];\n    var ans = 0x0;\n    if (N === 0x1 && M === 0x1)\n        ans = 0x1;\n    else if (N === 0x1 || M === 0x1)\n        ans = N + M - 0x3;\n    else\n        ans = (N - 0x2) * (M - 0x2);\n    if (ans > 0x1ff973cafa8000) {\n        ans = Math[_0x2d6425(0x2)]((N - 0x2) / 0x2710) * (M - 0x2);\n        tmp = (N - 0x2) % 0x2710 * (M - 0x2);\n        ans += Math[_0x2d6425(0x2)](tmp / 0x2710);\n        tmp = (_0x2d6425(0x3) + tmp % 0x2710)['slice'](-0x4);\n        ans += tmp;\n    }\n    console['log'](ans);\n}\nMain(require('fs')[a0_0xda5293(0x4)](a0_0xda5293(0x5), a0_0xda5293(0x6)));", "test_cases": [["2 2", "0"], ["1 7", "5"], ["314 1592", "496080"]], "original": "function Main(input) {\n\tinput = input.split(\" \").map(a => parseInt(a));\n\tvar N = input[0];\n\tvar M = input[1];\n\tvar ans = 0;\n\tif(N === 1 && M === 1) ans = 1;\n\telse if(N === 1 || M === 1) ans = N + M - 3;\n\telse ans = (N - 2) * (M - 2);\n\t\n\tif(ans > 9e15){\n\t\tans = Math.floor((N - 2) / 10000) * (M - 2);\n\t\ttmp = (N - 2) % 10000 * (M - 2);\n\t\tans += Math.floor(tmp / 10000);\n\t\ttmp = (\"0000\" + tmp % 10000).slice(-4);\n\t\tans += tmp;\n\t}\n\t\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03607_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x178640 = a0_0x4957;\nfunction a0_0x5e5c() {\n    const _0x1f5025 = [\n        'split',\n        'map',\n        'length',\n        'has',\n        'delete',\n        'add',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x5e5c = function () {\n        return _0x1f5025;\n    };\n    return a0_0x5e5c();\n}\nfunction a0_0x4957(BQiLVy, key) {\n    const stringArray = a0_0x5e5c();\n    a0_0x4957 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4957(BQiLVy, key);\n}\nfunction main(input) {\n    const _0x4bc489 = a0_0x4957;\n    input = input[_0x4bc489(0x0)](/\\n/)[_0x4bc489(0x1)](v => ~~v);\n    let set = new Set();\n    for (let i = 0x1; i < input[_0x4bc489(0x2)]; i++) {\n        if (set[_0x4bc489(0x3)](input[i])) {\n            set[_0x4bc489(0x4)](input[i]);\n        } else {\n            set[_0x4bc489(0x5)](input[i]);\n        }\n    }\n    console[_0x4bc489(0x6)](set['size']);\n}\nmain(require('fs')[a0_0x178640(0x7)]('/dev/stdin', a0_0x178640(0x8)));", "test_cases": [["3\n6\n2\n6", "1"], ["4\n2\n5\n5\n2", "0"], ["6\n12\n22\n16\n22\n18\n12", "2"]], "original": "\"use strict\"\n\nfunction main(input) {\n  input = input.split(/\\n/).map(v => ~~v)\n  let set = new Set()\n  for (let i = 1; i < input.length; i++) {\n    //\n    if (set.has(input[i])) {\n      set.delete(input[i])\n    } else {\n      set.add(input[i])\n    }\n  }\n  console.log(set.size)\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03986_1", "type": "JavaScript", "obfuscated": "const a0_0x1854b4 = a0_0x4b6d;\nfunction a0_0x4b6d(gIHhQK, key) {\n    const stringArray = a0_0x13b5();\n    a0_0x4b6d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b6d(gIHhQK, key);\n}\nfunction a0_0x13b5() {\n    const _0x12edaf = [\n        'indexOf',\n        'replace',\n        'log',\n        'length',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x13b5 = function () {\n        return _0x12edaf;\n    };\n    return a0_0x13b5();\n}\nconst Main = input => {\n    const _0x346244 = a0_0x4b6d;\n    while (input[_0x346244(0x0)]('ST') > -0x1) {\n        input = input[_0x346244(0x1)](/ST/g, '');\n    }\n    console[_0x346244(0x2)](input[_0x346244(0x3)]);\n};\nMain(require('fs')[a0_0x1854b4(0x4)]('/dev/stdin', a0_0x1854b4(0x5)));", "test_cases": [["TSTTSS", "4"], ["SSTTST", "0"], ["TSSTTTSS", "4"]], "original": "const Main = (input) => {\n    while(input.indexOf(\"ST\") > -1) {\n        input = input.replace(/ST/g, \"\");\n    }\n    console.log(input.length);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00027_1", "type": "JavaScript", "obfuscated": "var a0_0x398e1f = a0_0x273d;\nfunction a0_0x1698() {\n    var _0x15a485 = [\n        'replace',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ];\n    a0_0x1698 = function () {\n        return _0x15a485;\n    };\n    return a0_0x1698();\n}\n(function (input) {\n    var _0x13fc71 = a0_0x273d;\n    var p = input[_0x13fc71(0x0)](/\\n$/, '')[_0x13fc71(0x1)]('\\x0a');\n    while (!![]) {\n        var a = p[_0x13fc71(0x2)]()[_0x13fc71(0x1)]('\\x20')[_0x13fc71(0x3)](Number);\n        var m = a[_0x13fc71(0x2)]();\n        var d = a[_0x13fc71(0x2)]();\n        if (m === 0x0 && d === 0x0) {\n            return;\n        }\n        var date = new Date(0x7d4, m - 0x1, d);\n        console[_0x13fc71(0x4)](getWeekDay(date['getDay']()));\n    }\n}(require('fs')[a0_0x398e1f(0x5)](a0_0x398e1f(0x6), 'utf8')));\nfunction a0_0x273d(vKqbyM, key) {\n    var stringArray = a0_0x1698();\n    a0_0x273d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x273d(vKqbyM, key);\n}\nfunction getWeekDay(d) {\n    var _0x117d64 = a0_0x273d;\n    var week = [\n        'Sunday',\n        _0x117d64(0x7),\n        _0x117d64(0x8),\n        _0x117d64(0x9),\n        _0x117d64(0xa),\n        _0x117d64(0xb),\n        _0x117d64(0xc)\n    ];\n    return week[d];\n}", "test_cases": [["1 1\n2 29\n0 0", "Thursday\nSunday"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  while (true) {\n    var a = p.shift().split(' ').map(Number);\n    var m = a.shift();\n    var d = a.shift();\n    if (m === 0 && d === 0) {\n      return;\n    }\n    var date = new Date(2004, m - 1, d);\n    //console.log(date);\n    console.log(getWeekDay(date.getDay()) );\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction getWeekDay(d) {\n  var week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  return week[d];\n}", "language": "JavaScript"}
{"filename": "p00586_1", "type": "JavaScript", "obfuscated": "function a0_0x476b() {\n    var _0x2b9dae = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'forEach',\n        'log'\n    ];\n    a0_0x476b = function () {\n        return _0x2b9dae;\n    };\n    return a0_0x476b();\n}\nvar a0_0x35464c = a0_0x4b04;\nvar input = require('fs')['readFileSync'](a0_0x35464c(0x0), a0_0x35464c(0x1));\nvar Arr = input[a0_0x35464c(0x2)]()[a0_0x35464c(0x3)]('\\x0a');\nfunction a0_0x4b04(XfWqCE, key) {\n    var stringArray = a0_0x476b();\n    a0_0x4b04 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b04(XfWqCE, key);\n}\nArr[a0_0x35464c(0x4)](function (v) {\n    var _0x18e812 = a0_0x4b04;\n    var a = v[_0x18e812(0x3)]('\\x20')[0x0] - 0x0;\n    var b = v[_0x18e812(0x3)]('\\x20')[0x1] - 0x0;\n    console[_0x18e812(0x5)](a + b);\n});", "test_cases": [["1 2\n10 5\n100 20", "3\n15\n120"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\nvar a=(v.split(\" \"))[0]-0;\nvar b=(v.split(\" \"))[1]-0;\nconsole.log(a+b);\n});", "language": "JavaScript"}
{"filename": "p02238_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const _0x189481 = a0_0x3ee3;\n    const lines = require('fs')[_0x189481(0x0)]('/dev/stdin', 'utf8')[_0x189481(0x1)]()[_0x189481(0x2)]('\\x0a');\n    const n = Number(lines[_0x189481(0x3)]());\n    const adjLists = Array['from'](Array(n), () => []);\n    lines[_0x189481(0x4)]((l, i) => l[_0x189481(0x2)]('\\x20')[_0x189481(0x5)](0x2)[_0x189481(0x4)](e => adjLists[i][_0x189481(0x6)](e - 0x1)));\n    const d = [], f = [];\n    dfs(adjLists, d, f);\n    for (let i = 0x0; i < n; i++) {\n        if (_0x189481(0x7) !== _0x189481(0x7)) {\n            visit(v);\n        } else {\n            console[_0x189481(0x8)](i + 0x1 + '\\x20' + d[i] + '\\x20' + f[i]);\n        }\n    }\n}());\nfunction a0_0x3ee3(JjJcOW, key) {\n    const stringArray = a0_0x4d9e();\n    a0_0x3ee3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ee3(JjJcOW, key);\n}\nfunction a0_0x4d9e() {\n    const _0x4b2315 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'forEach',\n        'splice',\n        'push',\n        'isvuX',\n        'log',\n        'length',\n        'SLaue',\n        'QuLwe',\n        'ibqbM',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4d9e = function () {\n        return _0x4b2315;\n    };\n    return a0_0x4d9e();\n}\nfunction dfs(adjLists, d, f) {\n    const _0xe52b4b = a0_0x3ee3;\n    const WHITE = 0x0, GRAY = 0x1, BLACK = 0x2;\n    const size = adjLists[_0xe52b4b(0x9)];\n    const color = Array['from'](adjLists, () => WHITE);\n    let time = 0x0;\n    function visit(u) {\n        const _0x55931e = a0_0x3ee3;\n        if (_0x55931e(0xa) === 'SLaue') {\n            color[u] = GRAY;\n            d[u] = ++time;\n            adjLists[u][_0x55931e(0x4)](v => {\n                const _0x333058 = a0_0x3ee3;\n                if (_0x333058(0xb) !== _0x333058(0xb)) {\n                    color[u] = GRAY;\n                    d[u] = ++time;\n                    adjLists[u][_0x333058(0x4)](v => {\n                        if (color[v] === WHITE) {\n                            visit(v);\n                        }\n                    });\n                    color[u] = BLACK;\n                    f[u] = ++time;\n                } else {\n                    if (color[v] === WHITE) {\n                        if (_0x333058(0xc) === _0x333058(0xc)) {\n                            visit(v);\n                        } else {\n                            const lines = require('fs')[_0x333058(0x0)](_0x333058(0xd), _0x333058(0xe))[_0x333058(0x1)]()['split']('\\x0a');\n                            const n = Number(lines[_0x333058(0x3)]());\n                            const adjLists = Array['from'](Array(n), () => []);\n                            lines[_0x333058(0x4)]((l, i) => l[_0x333058(0x2)]('\\x20')[_0x333058(0x5)](0x2)['forEach'](e => adjLists[i][_0x333058(0x6)](e - 0x1)));\n                            const d = [], f = [];\n                            dfs(adjLists, d, f);\n                            for (let i = 0x0; i < n; i++) {\n                                console['log'](i + 0x1 + '\\x20' + d[i] + '\\x20' + f[i]);\n                            }\n                        }\n                    }\n                }\n            });\n            color[u] = BLACK;\n            f[u] = ++time;\n        } else {\n            console[_0x55931e(0x8)](i + 0x1 + '\\x20' + d[i] + '\\x20' + f[i]);\n        }\n    }\n    adjLists[_0xe52b4b(0x4)]((e, u) => {\n        if (color[u] === WHITE)\n            visit(u);\n    });\n}", "test_cases": [["4\n1 1 2\n2 1 4\n3 0\n4 1 3", "1 1 8\n2 2 7\n3 4 5\n4 3 6"], ["6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0", "1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6"]], "original": "(function main() {\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n\n  const adjLists = Array.from(Array(n), () => []);\n  lines.forEach((l, i) => l.split(' ').splice(2).forEach(e => adjLists[i].push(e-1)));\n\n  const d = [], f = [];\n  dfs(adjLists, d, f);\n  for (let i = 0; i < n; i++) {\n    console.log(`${i + 1} ${d[i]} ${f[i]}`);\n  }\n})();\n\nfunction dfs(adjLists, d, f) {\n  const WHITE = 0, GRAY = 1, BLACK = 2;\n  const size = adjLists.length;\n  const color = Array.from(adjLists, () => WHITE);\n\n  let time = 0;\n  function visit(u) {\n    color[u] = GRAY;\n    d[u] = ++time;\n    adjLists[u].forEach(v => {\n      if (color[v] === WHITE) {\n        visit(v);\n      }\n    });\n    color[u] = BLACK;\n    f[u] = ++time;\n  }\n  adjLists.forEach((e, u) => {\n    if (color[u] === WHITE) visit(u);\n  });\n}\n\n", "language": "JavaScript"}
{"filename": "p02274_1", "type": "JavaScript", "obfuscated": "var cnt = 0x0;\n(function main() {\n    const _0x5a8225 = a0_0x120b;\n    const lines = require('fs')[_0x5a8225(0x0)](_0x5a8225(0x1), _0x5a8225(0x2))[_0x5a8225(0x3)]()[_0x5a8225(0x4)]('\\x0a');\n    const n = Number(lines['shift']());\n    let arr = lines[_0x5a8225(0x5)]()[_0x5a8225(0x4)]('\\x20')['map'](Number);\n    mergeSort(arr, 0x0, n);\n    console['log'](cnt);\n}());\nfunction a0_0x186c() {\n    const _0x475b38 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'slice',\n        'push',\n        'vympX',\n        'lLSgh',\n        'QNnem',\n        'floor'\n    ];\n    a0_0x186c = function () {\n        return _0x475b38;\n    };\n    return a0_0x186c();\n}\nfunction a0_0x120b(VRDsNz, key) {\n    const stringArray = a0_0x186c();\n    a0_0x120b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x120b(VRDsNz, key);\n}\nfunction merge(arr, left, mid, right) {\n    const _0x277da1 = a0_0x120b;\n    let L = arr[_0x277da1(0x6)](left, mid);\n    let R = arr['slice'](mid, right);\n    L[_0x277da1(0x7)](Infinity);\n    R[_0x277da1(0x7)](Infinity);\n    let i = 0x0;\n    let j = 0x0;\n    let t = 0x0;\n    for (let k = left; k < right; k++) {\n        if (_0x277da1(0x8) !== _0x277da1(0x8)) {\n            if (L[i] < R[j]) {\n                arr[k] = L[i++];\n                cnt += t;\n            } else {\n                arr[k] = R[j++];\n                t += 0x1;\n            }\n        } else {\n            if (L[i] < R[j]) {\n                arr[k] = L[i++];\n                cnt += t;\n            } else {\n                arr[k] = R[j++];\n                t += 0x1;\n            }\n        }\n    }\n}\nfunction mergeSort(arr, left, right) {\n    const _0x29da06 = a0_0x120b;\n    if (left + 0x1 < right) {\n        if (_0x29da06(0x9) !== _0x29da06(0xa)) {\n            let mid = Math['floor']((left + right) / 0x2);\n            mergeSort(arr, left, mid);\n            mergeSort(arr, mid, right);\n            merge(arr, left, mid, right);\n        } else {\n            let mid = Math[_0x29da06(0xb)]((left + right) / 0x2);\n            mergeSort(arr, left, mid);\n            mergeSort(arr, mid, right);\n            merge(arr, left, mid, right);\n        }\n    }\n}", "test_cases": [["5\n3 5 2 1 4", "6"], ["3\n3 1 2", "2"]], "original": "var cnt = 0;\n(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n  let arr = lines.shift().split(' ').map(Number);\n  mergeSort(arr, 0, n);\n  console.log(cnt);\n})();\n\nfunction merge(arr, left, mid, right) {\n  let L = arr.slice(left, mid);\n  let R = arr.slice(mid, right);\n  L.push(Infinity);\n  R.push(Infinity);\n  let i = 0;\n  let j = 0;\n  let t = 0;\n  for (let k = left; k < right; k++) {\n    if (L[i] < R[j]) {\n      arr[k] = L[i++];\n      cnt += t;\n    } else {\n      arr[k] = R[j++];\n      t += 1;\n    }\n  }\n}\n\nfunction mergeSort(arr, left, right) {\n  if (left + 1 < right) {\n    let mid = Math.floor((left + right) / 2);\n    mergeSort(arr, left, mid);\n    mergeSort(arr, mid, right);\n    merge(arr, left, mid, right);\n  }\n}\n\n", "language": "JavaScript"}
{"filename": "p02276_1", "type": "JavaScript", "obfuscated": "function a0_0x347f(iosAEY, key) {\n    const stringArray = a0_0x3190();\n    a0_0x347f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x347f(iosAEY, key);\n}\nconst a0_0x4afe26 = a0_0x347f;\nconst config = {\n    'input': a0_0x4afe26(0x0),\n    'newline': '\\x0a'\n};\nfunction a0_0x3190() {\n    const _0x52abe7 = [\n        '/dev/stdin',\n        'readFileSync',\n        'input',\n        'utf-8',\n        'split',\n        'map',\n        'length',\n        'toString',\n        'join'\n    ];\n    a0_0x3190 = function () {\n        return _0x52abe7;\n    };\n    return a0_0x3190();\n}\nconst line = require('fs')[a0_0x4afe26(0x1)](config[a0_0x4afe26(0x2)], a0_0x4afe26(0x3))[a0_0x4afe26(0x4)](config['newline']);\nconst list = line[0x1][a0_0x4afe26(0x4)]('\\x20')[a0_0x4afe26(0x5)](x => parseInt(x));\nconst partition = arr => {\n    const _0x119683 = a0_0x347f;\n    const x = arr[arr[_0x119683(0x6)] - 0x1];\n    const result = [...arr];\n    let i = -0x1;\n    for (let j = 0x0; j < arr[_0x119683(0x6)] - 0x1; j++) {\n        if (result[j] <= x) {\n            i++;\n            const tmp = result[i];\n            result[i] = result[j];\n            result[j] = tmp;\n        }\n    }\n    const tmp = result[i + 0x1];\n    result[i + 0x1] = result[arr[_0x119683(0x6)] - 0x1];\n    result[arr[_0x119683(0x6)] - 0x1] = tmp;\n    return [\n        i + 0x1,\n        result\n    ];\n};\nconst res = partition(list);\nconsole['log'](res[0x1][a0_0x4afe26(0x5)]((x, i) => i === res[0x0] ? '[' + x + ']' : x[a0_0x4afe26(0x7)]())[a0_0x4afe26(0x8)]('\\x20'));", "test_cases": [["12\n13 19 9 5 12 8 7 4 21 2 6 11", "9 5 8 7 4 2 6 [11] 21 13 19 12"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nconst list = line[1].split(' ').map(x => parseInt(x));\n\nconst partition = arr => {\n    const x = arr[arr.length-1];\n    const result = [...arr];\n    let i = -1;\n    for (let j = 0; j < arr.length - 1; j++) {\n        if (result[j] <= x) {\n            i++;\n            const tmp = result[i];\n            result[i] = result[j];\n            result[j] = tmp;\n        }\n    }\n    const tmp = result[i+1];\n    result[i+1] = result[arr.length-1];\n    result[arr.length-1] = tmp;\n\n    return [i+1, result];\n}\n\nconst res = partition(list);\n\nconsole.log(res[1].map((x, i) => i === res[0] ? `[${x}]` : x.toString()).join(' '));\n\n", "language": "JavaScript"}
{"filename": "p02287_1", "type": "JavaScript", "obfuscated": "var a0_0x5d6461 = a0_0xe51b;\nfunction a0_0xe51b(XXuDhe, key) {\n    var stringArray = a0_0xb7cf();\n    a0_0xe51b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe51b(XXuDhe, key);\n}\nconsole[a0_0x5d6461(0x0)](require('fs')[a0_0x5d6461(0x1)](a0_0x5d6461(0x2), a0_0x5d6461(0x3))[a0_0x5d6461(0x4)]()[a0_0x5d6461(0x5)](/[ |\\n]/)[a0_0x5d6461(0x6)](0x1)[a0_0x5d6461(0x7)]((k, i, a) => a0_0x5d6461(0x8) + ++i + ':\\x20key\\x20=\\x20' + k + ',\\x20' + (i - 0x1 ? 'parent\\x20key\\x20=\\x20' + a[Math[a0_0x5d6461(0x9)](i / 0x2) - 0x1] + ',\\x20' : '') + (0x2 * i - 0x1 < a[a0_0x5d6461(0xa)] ? a0_0x5d6461(0xb) + a[0x2 * i - 0x1] + ',\\x20' : '') + (0x2 * i < a['length'] ? a0_0x5d6461(0xc) + a[0x2 * i] + ',\\x20' : ''))[a0_0x5d6461(0xd)]('\\x0a'));\nfunction a0_0xb7cf() {\n    var _0x5c5f6d = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'slice',\n        'map',\n        'node\\x20',\n        'floor',\n        'length',\n        'left\\x20key\\x20=\\x20',\n        'right\\x20key\\x20=\\x20',\n        'join'\n    ];\n    a0_0xb7cf = function () {\n        return _0x5c5f6d;\n    };\n    return a0_0xb7cf();\n}", "test_cases": [["5\n7 8 1 2 3", "node 1: key = 7, left key = 8, right key = 1, \nnode 2: key = 8, parent key = 7, left key = 2, right key = 3, \nnode 3: key = 1, parent key = 7, \nnode 4: key = 2, parent key = 8, \nnode 5: key = 3, parent key = 8,"]], "original": "console.log(require('fs').readFileSync('/dev/stdin','utf8').trim().split(/[ |\\n]/).slice(1).map((k,i,a)=>`node ${++i}: key = ${k}, `+((i-1)?`parent key = ${a[Math.floor(i/2)-1]}, `:'')+(2*i-1<a.length?`left key = ${a[2*i-1]}, `:'')+(2*i<a.length?`right key = ${a[2*i]}, `:'')).join('\\n'));\n", "language": "JavaScript"}
{"filename": "p02417_1", "type": "JavaScript", "obfuscated": "var a0_0x3de27d = a0_0x1a23;\nvar input = require('fs')['readFileSync'](a0_0x3de27d(0x0), a0_0x3de27d(0x1));\nfunction a0_0x1a23(TtGhvz, key) {\n    var stringArray = a0_0x344b();\n    a0_0x1a23 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a23(TtGhvz, key);\n}\ninput = input['trim']();\ninput = input[a0_0x3de27d(0x2)]();\nvar abc = 'abcdefghijklmnopqrstuvwxyz'['split']('');\nvar obj = {};\nfor (var i = 0x0; i < abc[a0_0x3de27d(0x3)]; i++)\n    obj[abc[i]] = 0x0;\ninput = input['replace'](/[a-z]/g, function (str) {\n    obj[str]++;\n    return str;\n});\nabc['forEach'](function (v, i) {\n    var _0x50f6c5 = a0_0x1a23;\n    console[_0x50f6c5(0x4)](v + _0x50f6c5(0x5) + obj[v]);\n});\nfunction a0_0x344b() {\n    var _0x23aae6 = [\n        '/dev/stdin',\n        'utf8',\n        'toLowerCase',\n        'length',\n        'log',\n        '\\x20:\\x20'\n    ];\n    a0_0x344b = function () {\n        return _0x23aae6;\n    };\n    return a0_0x344b();\n}", "test_cases": [["This is a pen.", "a : 1\nb : 0\nc : 0\nd : 0\ne : 1\nf : 0\ng : 0\nh : 1\ni : 2\nj : 0\nk : 0\nl : 0\nm : 0\nn : 1\no : 0\np : 1\nq : 0\nr : 0\ns : 2\nt : 1\nu : 0\nv : 0\nw : 0\nx : 0\ny : 0\nz : 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.trim();\ninput=input.toLowerCase();\nvar abc='abcdefghijklmnopqrstuvwxyz'.split(\"\");\nvar obj={};\nfor(var i=0;i<abc.length;i++)obj[abc[i]]=0;\n\ninput=input.replace(/[a-z]/g,function(str){\nobj[str]++;\nreturn str;\n});\n\nabc.forEach(function(v,i){\nconsole.log(v+\" : \"+obj[v]);\n});", "language": "JavaScript"}
{"filename": "p02422_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x37f918 = a0_0x509c;\nmain(require('fs')[a0_0x37f918(0x0)](a0_0x37f918(0x1), a0_0x37f918(0x2))[a0_0x37f918(0x3)](/\\r?\\n$/, '')['split'](/\\r?\\n/));\nfunction a0_0x509c(RQpRIk, key) {\n    var stringArray = a0_0x4420();\n    a0_0x509c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x509c(RQpRIk, key);\n}\nfunction a0_0x4420() {\n    var _0x2a6340 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'shift',\n        'split',\n        'print',\n        'slice',\n        'reverse'\n    ];\n    a0_0x4420 = function () {\n        return _0x2a6340;\n    };\n    return a0_0x4420();\n}\nfunction main(lines) {\n    var _0x3a2a8b = a0_0x509c;\n    var str = lines[_0x3a2a8b(0x4)]();\n    lines['shift']();\n    var code;\n    while (code = lines['shift']()) {\n        code = code[_0x3a2a8b(0x5)]('\\x20');\n        var from = +code[0x1], to = +code[0x2];\n        switch (code[0x0]) {\n        case _0x3a2a8b(0x6):\n            console['log'](str[_0x3a2a8b(0x7)](from, to + 0x1));\n            break;\n        case _0x3a2a8b(0x3):\n            str = str[_0x3a2a8b(0x7)](0x0, from) + code[0x3] + str['slice'](to + 0x1);\n            break;\n        case _0x3a2a8b(0x8):\n            str = str[_0x3a2a8b(0x7)](0x0, from) + str['slice'](from, to + 0x1)[_0x3a2a8b(0x5)]('')[_0x3a2a8b(0x8)]()['join']('') + str['slice'](to + 0x1);\n            break;\n        }\n    }\n}", "test_cases": [["abcde\n3\nreplace 1 3 xyz\nreverse 0 2\nprint 1 4", "xaze"], ["xyz\n3\nprint 0 2\nreplace 0 2 abc\nprint 0 2", "xyz\nabc"]], "original": "\"use strict\";\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").replace(/\\r?\\n$/, \"\").split(/\\r?\\n/));\n\nfunction main(lines){\n\tvar str = lines.shift();\n\tlines.shift();\n\tvar code;\n\twhile(code = lines.shift()){\n\t\tcode = code.split(\" \");\n\t\tvar from = +code[1], to = +code[2];\n\t\tswitch(code[0]){\n\t\t\tcase \"print\":\n\t\t\t\tconsole.log(str.slice(from, to+1));\n\t\t\t\tbreak;\n\t\t\tcase \"replace\":\n\t\t\t\tstr = str.slice(0, from) + code[3] + str.slice(to+1);\n\t\t\t\tbreak;\n\t\t\tcase \"reverse\":\n\t\t\t\tstr = str.slice(0, from) + str.slice(from, to+1).split(\"\").reverse().join(\"\") + str.slice(to+1);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}", "language": "JavaScript"}
{"filename": "p02536_1", "type": "JavaScript", "obfuscated": "const a0_0xf756e6 = a0_0xd7a5;\nfunction a0_0xd7a5(tMRSXP, key) {\n    const stringArray = a0_0x46b6();\n    a0_0xd7a5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xd7a5(tMRSXP, key);\n}\nlet lines = [];\nfunction a0_0x46b6() {\n    const _0x5d4b93 = [\n        'createInterface',\n        'stdin',\n        'stdout',\n        'push',\n        'close',\n        'split',\n        'includes',\n        'log'\n    ];\n    a0_0x46b6 = function () {\n        return _0x5d4b93;\n    };\n    return a0_0x46b6();\n}\nlet reader = require('readline')[a0_0xf756e6(0x0)]({\n    'input': process[a0_0xf756e6(0x1)],\n    'output': process[a0_0xf756e6(0x2)]\n});\nreader['on']('line', function (line) {\n    const _0x35fe78 = a0_0xd7a5;\n    lines[_0x35fe78(0x3)](line);\n});\nreader['on'](a0_0xf756e6(0x4), function () {\n    const _0x917bd9 = a0_0xd7a5;\n    const [n, m] = lines[0x0][_0x917bd9(0x5)]('\\x20');\n    const a = [];\n    const b = [];\n    for (let i = 0x0; i < m; i++) {\n        [a[i], b[i]] = lines[i + 0x1][_0x917bd9(0x5)]('\\x20');\n    }\n    const connected = [];\n    connected[_0x917bd9(0x3)](a[0x0]);\n    connected[_0x917bd9(0x3)](b[0x0]);\n    ans = n - 0x2;\n    for (let i = 0x1; i < m; i++) {\n        if (!connected[_0x917bd9(0x6)](a[i]) && !connected['includes'](b[i])) {\n            ans--;\n        } else if (!connected[_0x917bd9(0x6)](a[i])) {\n            ans--;\n            connected[_0x917bd9(0x3)](a[i]);\n        } else if (!connected['includes'](b[i])) {\n            ans--;\n            connected[_0x917bd9(0x3)](b[i]);\n        }\n    }\n    console[_0x917bd9(0x7)](ans);\n});", "test_cases": [["3 1\n1 2", "1"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n// 標準入力の読み込み\nreader.on('line', function(line) {\n    lines.push(line);\n});\n\nreader.on('close', function() {\n    // 処理の記述\n    const [n, m] = lines[0].split(' ');\n    const a = [];\n    const b = [];\n    for (let i = 0; i < m; i++) {\n        [a[i], b[i]] = lines[i+1].split(' ');\n    }\n    const connected = [];\n    connected.push(a[0]);\n    connected.push(b[0]);\n    ans = n-2;\n    for (let i = 1; i < m; i++) {\n        if ((!connected.includes(a[i])) && (!connected.includes(b[i]))) {\n            ans--;\n        } else if (!connected.includes(a[i])) {\n            ans--;\n            connected.push(a[i]);\n        } else if (!connected.includes(b[i])) {\n            ans--;\n            connected.push(b[i]);\n        }\n\n    }\n\n    // 表示\n    console.log(ans);\n});", "language": "JavaScript"}
{"filename": "p02624_1", "type": "JavaScript", "obfuscated": "const a0_0x58ccef = a0_0x1060;\nfunction* main() {\n    const _0x3a0646 = a0_0x1060;\n    const N = +(yield);\n    let sum = 0x0;\n    for (let k = 0x1; k <= N; k++)\n        sum += Math[_0x3a0646(0x0)](k * Math['floor'](0x1 + N / k) * Math['floor'](N / k) / 0x2);\n    console[_0x3a0646(0x1)](sum);\n}\nfunction a0_0x383a() {\n    const _0x52395c = [\n        'floor',\n        'log',\n        'next',\n        'createInterface',\n        'stdin'\n    ];\n    a0_0x383a = function () {\n        return _0x52395c;\n    };\n    return a0_0x383a();\n}\nconst iter = main();\nfunction a0_0x1060(ShKOSB, key) {\n    const stringArray = a0_0x383a();\n    a0_0x1060 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1060(ShKOSB, key);\n}\niter[a0_0x58ccef(0x2)]();\nrequire('readline')[a0_0x58ccef(0x3)]({ 'input': process[a0_0x58ccef(0x4)] })['on']('line', line => iter[a0_0x58ccef(0x2)](line));", "test_cases": [["4", "23"], ["100", "26879"], ["10000000", "838627288460105"]], "original": "function *main() {\n  const N = +(yield);\n  \n  let sum = 0;\n  for (let k = 1; k <= N; k++)\n    sum += Math.floor(k * Math.floor(1+N/k) * Math.floor(N/k) / 2);\n  \n  console.log(sum);\n}\nconst iter = main();\niter.next();\nrequire(\"readline\").createInterface({input: process.stdin}).on(\"line\", line => iter.next(line));\n", "language": "JavaScript"}
{"filename": "p02658_1", "type": "JavaScript", "obfuscated": "const a0_0x956c8f = a0_0xfa82;\nfunction a0_0xfa82(cFBKEv, key) {\n    const stringArray = a0_0x5757();\n    a0_0xfa82 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xfa82(cFBKEv, key);\n}\nfunction a0_0x5757() {\n    const _0x31a1c3 = [\n        'split',\n        'trim',\n        'log',\n        'GfMIH',\n        'ZCcKq',\n        'MmIAx',\n        'ytczh',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5757 = function () {\n        return _0x31a1c3;\n    };\n    return a0_0x5757();\n}\nfunction Main(input) {\n    const _0x4cb048 = a0_0xfa82;\n    input = input[_0x4cb048(0x0)]('\\x0a');\n    const N = input[0x0][_0x4cb048(0x1)]();\n    const values = input[0x1]['split']('\\x20');\n    for (let i = 0x0; i < N; i++) {\n        if (values[i] == 0x0) {\n            console[_0x4cb048(0x2)]('0');\n            return;\n        }\n    }\n    let result = BigInt(0x1);\n    for (let i = 0x0; i < N; i++) {\n        if (_0x4cb048(0x3) !== 'GfMIH') {\n            if (values[i] == 0x0) {\n                console['log']('0');\n                return;\n            }\n        } else {\n            const nextVal = BigInt(values[i]);\n            if (nextVal > BigInt(0xde0b6b3a7640000)) {\n                if (_0x4cb048(0x4) !== _0x4cb048(0x5)) {\n                    console[_0x4cb048(0x2)]('-1');\n                    return;\n                } else {\n                    const nextVal = BigInt(values[i]);\n                    if (nextVal > BigInt(0xde0b6b3a7640000)) {\n                        console[_0x4cb048(0x2)]('-1');\n                        return;\n                    }\n                    result = result * nextVal;\n                    if (result > BigInt(0xde0b6b3a7640000)) {\n                        console[_0x4cb048(0x2)]('-1');\n                        return;\n                    }\n                }\n            }\n            result = result * nextVal;\n            if (result > BigInt(0xde0b6b3a7640000)) {\n                if (_0x4cb048(0x6) === 'ytczh') {\n                    console['log']('-1');\n                    return;\n                } else {\n                    console[_0x4cb048(0x2)]('0');\n                    return;\n                }\n            }\n        }\n    }\n    console[_0x4cb048(0x2)](Number(result)['toString']());\n}\nMain(require('fs')[a0_0x956c8f(0x7)](a0_0x956c8f(0x8), a0_0x956c8f(0x9)));", "test_cases": [["2\n1000000000 1000000000", "1000000000000000000"], ["3\n101 9901 999999000001", "-1"], ["31\n4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0", "0"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  const N = input[0].trim();\n  const values = input[1].split(\" \");\n\n  for (let i=0;i<N;i++) {\n    if (values[i] == 0) {\n    \tconsole.log(\"0\")\n\t    return\n    }\n  }\n  \n  let result = BigInt(1);\n  for (let i=0;i<N;i++) {\n    const nextVal = BigInt(values[i]);\n    \n    if (nextVal > BigInt(1000000000000000000)) {\n      console.log(\"-1\");\n      return\n    }\n    \n    result = result * nextVal;\n    \n    if (result > BigInt(1000000000000000000)) {\n    \tconsole.log(\"-1\");\n        return\n    }\n  }\n\n  console.log(Number(result).toString());\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02854_1", "type": "JavaScript", "obfuscated": "function a0_0x5ca3() {\n    var _0x4e2721 = [\n        'split',\n        'log',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5ca3 = function () {\n        return _0x4e2721;\n    };\n    return a0_0x5ca3();\n}\nfunction a0_0x1a40(yoLvmQ, key) {\n    var stringArray = a0_0x5ca3();\n    a0_0x1a40 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a40(yoLvmQ, key);\n}\nvar a0_0x1a9390 = a0_0x1a40;\nfunction Main(input) {\n    var _0x467587 = a0_0x1a40;\n    var N = parseInt(input[0x0], 0xa);\n    var A = input[0x1][_0x467587(0x0)]('\\x20');\n    var total = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        A[i] = parseInt(A[i], 0xa);\n        total += A[i];\n    }\n    var result = 0x0;\n    var mae = 0x0;\n    var ato = 0x0;\n    var target = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        if (mae + A[i] < total / 0x2) {\n            mae += A[i];\n        } else if (mae + A[i] == total / 0x2) {\n            console[_0x467587(0x1)]('%s', 0x0);\n            return;\n        } else {\n            target = i;\n            ato = total - mae - A[i];\n            break;\n        }\n    }\n    var diff = Math['abs'](ato - mae);\n    var result = Math[_0x467587(0x2)](A[i] - diff);\n    console[_0x467587(0x1)]('%s', result);\n}\nMain(require('fs')[a0_0x1a9390(0x3)](a0_0x1a9390(0x4), a0_0x1a9390(0x5))[a0_0x1a9390(0x0)]('\\x0a'));", "test_cases": [["3\n2 4 3", "3"], ["12\n100 104 102 105 103 103 101 105 104 102 104 101", "0"]], "original": "function Main(input) {\n  var N = parseInt(input[0], 10);\n  var A = input[1].split(\" \");\n\n  var total = 0;\n  for (var i = 0; i < N; i++) {\n    A[i] = parseInt(A[i], 10);\n    total += A[i];\n  }\n//   console.log(\"total:%s\", total);\n\n  var result = 0;\n  var mae = 0;\n  var ato = 0;\n  var target = 0;\n  for (var i = 0; i < N; i++) {\n    if (mae + A[i] < total / 2) {\n      mae += A[i];\n    } else if (mae + A[i] == total / 2) {\n      console.log(\"%s\", 0);\n      return;\n    } else {\n      target = i;\n      ato = total - mae - A[i];\n      break;\n    }\n  }\n//   console.log(\"mae:%s\", mae);\n//   console.log(\"ato:%s\", ato);\n//   console.log(\"target:%s\", i);\n//   console.log(\"Ai:%s\", A[i]);\n\n  var diff = Math.abs(ato - mae);\n//   console.log(\"diff:%s\", diff);\n  var result = Math.abs(A[i] - diff);\n  console.log(\"%s\", result);\n}\n\nMain(\n  require(\"fs\")\n    .readFileSync(\"/dev/stdin\", \"utf8\")\n    .split(\"\\n\")\n);\n", "language": "JavaScript"}
{"filename": "p02927_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x39fdd2 = a0_0x665e;\nconst main = input => {\n    const _0x5aabef = a0_0x665e;\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const M = parseInt(args[0x0][0x0], 0xa);\n    const D = parseInt(args[0x0][0x1], 0xa);\n    let cnt = 0x0;\n    for (let m = 0x1; m <= M; m++) {\n        for (let j = 0x1; j <= D; j++) {\n            const d1 = j % 0xa;\n            const d10 = Math[_0x5aabef(0x0)](j / 0xa);\n            if (d1 >= 0x2 && d10 >= 0x2 && d1 * d10 === m) {\n                cnt++;\n            }\n        }\n    }\n    console[_0x5aabef(0x1)](cnt);\n};\nfunction a0_0x3d09() {\n    const _0x4c5a2e = [\n        'floor',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3d09 = function () {\n        return _0x4c5a2e;\n    };\n    return a0_0x3d09();\n}\nfunction a0_0x665e(jZhpEG, key) {\n    const stringArray = a0_0x3d09();\n    a0_0x665e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x665e(jZhpEG, key);\n}\nmain(require('fs')['readFileSync'](a0_0x39fdd2(0x2), a0_0x39fdd2(0x3)));", "test_cases": [["15 40", "10"], ["12 31", "5"], ["1 1", "0"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst M = parseInt(args[0][0], 10)\n\tconst D = parseInt(args[0][1], 10)\n\tlet cnt = 0\n\n\tfor (let m = 1; m <= M; m++) {\n\t\tfor (let j = 1; j <= D; j++) {\n\t\t\tconst d1 = j % 10\n\t\t\tconst d10 = Math.floor(j / 10)\n\n\t\t\tif (d1 >= 2 && d10 >= 2 && (d1 * d10 === m)) {\n\t\t\t\tcnt++\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log(cnt)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02937_1", "type": "JavaScript", "obfuscated": "const a0_0x3ffcb2 = a0_0x4c56;\nfunction a0_0x1931() {\n    const _0x359dcb = [\n        'log',\n        'trim',\n        'split',\n        'length',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1931 = function () {\n        return _0x359dcb;\n    };\n    return a0_0x1931();\n}\nfunction a0_0x4c56(yCmRgT, key) {\n    const stringArray = a0_0x1931();\n    a0_0x4c56 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c56(yCmRgT, key);\n}\nconsole[a0_0x3ffcb2(0x0)]((args => {\n    const _0x444873 = a0_0x4c56;\n    const [s, t] = args[_0x444873(0x1)]()[_0x444873(0x2)]`\\n`;\n    const sl = s[_0x444873(0x3)], tl = t[_0x444873(0x3)];\n    let i = -0x1, cyc = 0x0;\n    T:\n        for (let j = 0x0; j < tl; j++) {\n            for (let k = i + 0x1; k < sl; k++) {\n                if (s[k] === t[j]) {\n                    i = k;\n                    continue T;\n                }\n            }\n            if (i === -0x1)\n                return '-1';\n            cyc++;\n            i = -0x1;\n            j--;\n        }\n    return '' + (cyc * sl + i + 0x1);\n})(require('fs')['readFileSync'](a0_0x3ffcb2(0x4), a0_0x3ffcb2(0x5))));", "test_cases": [["contest\nson", "10"], ["contest\nprogramming", "-1"], ["contest\nsentence", "33"]], "original": "console.log((args=>{\n  const [s,t] = args.trim().split`\\n`;\n  const sl = s.length, tl = t.length;\n  let i = -1, cyc = 0;\n  T: for ( let j = 0; j < tl; j++ ) {\n    for ( let k = i+1; k < sl; k++ ) {\n      if ( s[k] === t[j] ) {\n        i = k;\n        continue T;\n      }\n    }\n    if ( i === -1 ) return '-1';\n    cyc++;\n    i = -1;\n    j--;\n  }\n  return `${cyc*sl+i+1}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03201_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2f9431 = a0_0x119c;\nfunction a0_0x119c(vySJBL, key) {\n    const stringArray = a0_0x170a();\n    a0_0x119c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x119c(vySJBL, key);\n}\nfunction getPair(num) {\n    const _0xbefb17 = a0_0x119c;\n    return parseInt(num[_0xbefb17(0x0)](0x2)[_0xbefb17(0x1)]('')['map'](x => x === '1' ? '0' : '1')[_0xbefb17(0x2)]((acc, cur) => acc + cur, ''), 0x2) + 0x1;\n}\nfunction main(input) {\n    const _0x1c67b1 = a0_0x119c;\n    const inputs = input[_0x1c67b1(0x1)]('\\x0a')['filter'](x => x !== '');\n    const A = inputs[0x1][_0x1c67b1(0x1)]('\\x20')[_0x1c67b1(0x3)](Number);\n    let sortedA = A[_0x1c67b1(0x4)]((a, b) => b - a);\n    let count = 0x0;\n    while (sortedA[_0x1c67b1(0x5)] > 0x0) {\n        let i = sortedA[0x0];\n        sortedA[_0x1c67b1(0x6)](0x0, 0x1);\n        let j = getPair(i);\n        let indexJ = sortedA['findIndex'](x => x === j);\n        if (indexJ >= 0x0) {\n            sortedA['splice'](indexJ, 0x1);\n            count++;\n        }\n    }\n    console['log'](count);\n}\nfunction a0_0x170a() {\n    const _0x33b074 = [\n        'toString',\n        'split',\n        'reduce',\n        'map',\n        'sort',\n        'length',\n        'splice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x170a = function () {\n        return _0x33b074;\n    };\n    return a0_0x170a();\n}\nmain(require('fs')[a0_0x2f9431(0x7)](a0_0x2f9431(0x8), a0_0x2f9431(0x9)));", "test_cases": [["3\n1 2 3", "1"], ["5\n3 11 14 5 13", "2"]], "original": "\"use strict\";\n\nfunction getPair(num) {\n  return (\n    parseInt(\n      num\n        .toString(2)\n        .split(\"\")\n        .map(x => (x === \"1\" ? \"0\" : \"1\"))\n        .reduce((acc, cur) => acc + cur, \"\"),\n      2\n    ) + 1\n  );\n}\n\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n\n  const A = inputs[1].split(\" \").map(Number);\n\n  let sortedA = A.sort((a, b) => b - a);\n  let count = 0;\n  while (sortedA.length > 0) {\n    let i = sortedA[0];\n    sortedA.splice(0, 1);\n\n    let j = getPair(i);\n\n    let indexJ = sortedA.findIndex(x => x === j);\n\n    if (indexJ >= 0) {\n      sortedA.splice(indexJ, 1);\n      count++;\n    }\n  }\n\n  console.log(count);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03214_1", "type": "JavaScript", "obfuscated": "var a0_0x26ad6c = a0_0x30fa;\nvar toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr[a0_0x26ad6c(0x0)](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction a0_0x30fa(qNClco, key) {\n    var stringArray = a0_0x4056();\n    a0_0x30fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x30fa(qNClco, key);\n}\nfunction max() {\n    var _0xc54beb = a0_0x30fa;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0xc54beb(0x1)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync'](a0_0x26ad6c(0x2), a0_0x26ad6c(0x3)));\nfunction a0_0x4056() {\n    var _0x34c00e = [\n        'map',\n        'length',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'VikJm',\n        'XagVT',\n        'log'\n    ];\n    a0_0x4056 = function () {\n        return _0x34c00e;\n    };\n    return a0_0x4056();\n}\nfunction Main(input) {\n    var _0x59ca54 = a0_0x30fa;\n    var input = input[_0x59ca54(0x4)]('\\x0a');\n    var n = toInt(input[0x0]);\n    var as = toIntArr(input[0x1][_0x59ca54(0x4)]('\\x20'));\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        if (_0x59ca54(0x5) !== _0x59ca54(0x5)) {\n            if (bs[i] < min) {\n                min = bs[i];\n                ans = i;\n            }\n        } else {\n            sum += as[i];\n        }\n    }\n    var bs = as[_0x59ca54(0x0)]((el, ind, arr) => abs(sum - n * el));\n    var ans = 0x0;\n    var min = bs[0x0];\n    for (var i = 0x1; i < n; i++) {\n        if (bs[i] < min) {\n            if ('cwDpF' === _0x59ca54(0x6)) {\n                sum += as[i];\n            } else {\n                min = bs[i];\n                ans = i;\n            }\n        }\n    }\n    console[_0x59ca54(0x7)](ans);\n}", "test_cases": [["3\n1 2 3", "1"], ["4\n2 5 2 5", "0"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar as = toIntArr(input[1].split(' '));\n\tvar sum = 0;\n\tfor(var i = 0; i < n; i++){\n\t\tsum += as[i];\n\t}\n\tvar bs = as.map((el,ind,arr)=>abs(sum - n*el));\n\tvar ans = 0;\n\tvar min = bs[0];\n\tfor(var i = 1; i < n; i++){\n\t\tif(bs[i] < min){\n\t\t\tmin = bs[i];\n\t\t\tans = i;\n\t\t}\n\t}\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03229_1", "type": "JavaScript", "obfuscated": "function a0_0x4cb1(kaFZPI, key) {\n    var stringArray = a0_0x17c1();\n    a0_0x4cb1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cb1(kaFZPI, key);\n}\nvar a0_0x4ae790 = a0_0x4cb1;\nfunction a0_0x17c1() {\n    var _0x5d8806 = [\n        'map',\n        'shift',\n        'sort',\n        'kSdAu',\n        'abs',\n        'QKBQp',\n        'log',\n        'max',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x17c1 = function () {\n        return _0x5d8806;\n    };\n    return a0_0x17c1();\n}\nfunction Main(input) {\n    var _0x7d466c = a0_0x4cb1;\n    var nums = input['split']('\\x0a')[_0x7d466c(0x0)](function (value) {\n        return value - 0x0;\n    });\n    var N = nums[_0x7d466c(0x1)]();\n    nums[_0x7d466c(0x2)](function (a, b) {\n        var _0x3402cf = a0_0x4cb1;\n        if (_0x3402cf(0x3) === 'kSdAu') {\n            return b - a;\n        } else {\n            r = Math[_0x3402cf(0x4)](ary[n] - ary[n + 0x1]);\n            s1 += r;\n        }\n    });\n    var ary = new Array(N);\n    var m = 0x0;\n    var r = N - 0x1;\n    for (var l = 0x0; l < N / 0x2; l++, r--) {\n        ary[m++] = nums[l];\n        ary[m++] = nums[r];\n    }\n    var s = 0x0, s1 = 0x0;\n    m = N - 0x1;\n    for (var n = 0x0; n < N - 0x1; n++) {\n        if (_0x7d466c(0x5) === _0x7d466c(0x5)) {\n            r = Math[_0x7d466c(0x4)](ary[m] - ary[n]);\n            s += r;\n            m = n;\n        } else {\n            return value - 0x0;\n        }\n    }\n    for (var n = 0x0; n < N - 0x1; n++) {\n        r = Math['abs'](ary[n] - ary[n + 0x1]);\n        s1 += r;\n    }\n    console[_0x7d466c(0x6)](Math[_0x7d466c(0x7)](s, s1));\n}\nMain(require('fs')[a0_0x4ae790(0x8)](a0_0x4ae790(0x9), 'utf8'));", "test_cases": [["5\n6\n8\n1\n2\n3", "21"], ["6\n3\n1\n4\n1\n5\n9", "25"], ["3\n5\n5\n1", "8"]], "original": "function Main(input) {\n    var nums = input.split(\"\\n\").map(function(value) { return value - 0; });\n    var N = nums.shift();\n    nums.sort(function(a,b) { return b - a; });\n    var ary = new Array(N);\n    var m = 0;\n    var r = N - 1;\n    for (var l = 0; l < N / 2; l++, r--) {\n      ary[m++] = nums[l];\n      ary[m++] = nums[r];\n    }\n    var s = 0, s1 = 0;\n    m = N - 1;\n    for (var n = 0; n < N - 1; n++) {\n      r = (Math.abs(ary[m] - ary[n]));\n      s += r;\n      m = n;\n    }\n    for (var n = 0; n < N - 1; n++) {\n      r = (Math.abs(ary[n] - ary[n+1]));\n      s1 += r;\n    }\n    console.log(Math.max(s, s1));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03386_1", "type": "JavaScript", "obfuscated": "var a0_0x5c4e97 = a0_0x2c02;\nvar lines = [];\nfunction a0_0x5ed6() {\n    var _0x23351f = [\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'split',\n        'uSRuK',\n        'inAJC',\n        'AJMHQ',\n        'toString',\n        'log',\n        'length'\n    ];\n    a0_0x5ed6 = function () {\n        return _0x23351f;\n    };\n    return a0_0x5ed6();\n}\nvar readline = require(a0_0x5c4e97(0x0));\nvar rl = readline[a0_0x5c4e97(0x1)]({\n    'input': process[a0_0x5c4e97(0x2)],\n    'output': process[a0_0x5c4e97(0x3)]\n});\nrl['on'](a0_0x5c4e97(0x4), function (x) {\n    var _0xc06e92 = a0_0x2c02;\n    lines[_0xc06e92(0x5)](x);\n});\nfunction a0_0x2c02(QmJKhA, key) {\n    var stringArray = a0_0x5ed6();\n    a0_0x2c02 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c02(QmJKhA, key);\n}\nrl['on'](a0_0x5c4e97(0x6), function () {\n    var _0x128e8c = a0_0x2c02;\n    var A = Number(lines[0x0][_0x128e8c(0x7)]('\\x20')[0x0]);\n    var B = Number(lines[0x0]['split']('\\x20')[0x1]);\n    var K = Number(lines[0x0]['split']('\\x20')[0x2]);\n    var ans = '';\n    for (var i = A; i <= B; i++) {\n        if (_0x128e8c(0x8) === _0x128e8c(0x8)) {\n            if (i < A + K) {\n                if (_0x128e8c(0x9) !== _0x128e8c(0xa)) {\n                    ans += i[_0x128e8c(0xb)]();\n                } else {\n                    console[_0x128e8c(0xc)](ans[i]);\n                }\n            } else if (i > B - K) {\n                ans += i['toString']();\n            }\n        } else {\n            ans += i[_0x128e8c(0xb)]();\n        }\n    }\n    for (var i = 0x0; i < ans[_0x128e8c(0xd)]; i++) {\n        console[_0x128e8c(0xc)](ans[i]);\n    }\n});", "test_cases": [["3 8 2", "3\n4\n7\n8"], ["4 8 3", "4\n5\n6\n7\n8"], ["2 9 100", "2\n3\n4\n5\n6\n7\n8\n9"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var A = Number(lines[0].split(\" \")[0])\n    var B = Number(lines[0].split(\" \")[1])\n    var K = Number(lines[0].split(\" \")[2])\n\n    var ans = \"\";\n    for (var i = A; i <= B; i++) {\n        if (i < A + K) { ans += i.toString() }\n        else if (i > B - K) { ans += i.toString() }\n    }\n    for (var i = 0; i < ans.length; i++) {\n        console.log(ans[i])\n    }\n});", "language": "JavaScript"}
{"filename": "p03548_1", "type": "JavaScript", "obfuscated": "function a0_0x13c7(FLFgIg, key) {\n    var stringArray = a0_0x6733();\n    a0_0x13c7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x13c7(FLFgIg, key);\n}\nvar a0_0x1ea803 = a0_0x13c7;\nfunction Main(input) {\n    var _0x20c980 = a0_0x13c7;\n    var X = parseInt(input[_0x20c980(0x0)]('\\x20')[0x0]);\n    var Y = parseInt(input[_0x20c980(0x0)]('\\x20')[0x1]);\n    var Z = parseInt(input['split']('\\x20')[0x2]);\n    var N = 0x1;\n    var x = 0x0;\n    while (!![]) {\n        x = N * Y + (N + 0x1) * Z;\n        if (x > X)\n            break;\n        N++;\n    }\n    console[_0x20c980(0x1)](--N);\n}\nfunction a0_0x6733() {\n    var _0xcbd35b = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x6733 = function () {\n        return _0xcbd35b;\n    };\n    return a0_0x6733();\n}\nMain(require('fs')[a0_0x1ea803(0x2)](a0_0x1ea803(0x3), 'utf8'));", "test_cases": [["13 3 1", "3"], ["12 3 1", "2"], ["100000 1 1", "49999"], ["64146 123 456", "110"], ["64145 123 456", "109"]], "original": "function Main(input){\n  var X = parseInt(input.split(' ')[0]);  // total\n  var Y = parseInt(input.split(' ')[1]);  // human space\n  var Z = parseInt(input.split(' ')[2]);  // void space\n\n  var N = 1; // human count\n  var x = 0; // space\n  while(true){\n    x = (N * Y) + (N + 1) * Z;\n    if(x > X) break;\n    N++;\n  }\n  console.log(--N);\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03673_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x15ec37 = a0_0x4dfd;\nfunction a0_0x4dfd(WddLGB, key) {\n    const stringArray = a0_0x1064();\n    a0_0x4dfd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4dfd(WddLGB, key);\n}\nconst main = arg => {\n    const _0x249f4e = a0_0x4dfd;\n    arg = arg['trim']()[_0x249f4e(0x0)]('\\x0a');\n    const N = ~~arg[0x0];\n    const b = arg[0x1][_0x249f4e(0x0)]('\\x20')[_0x249f4e(0x1)](n => ~~n);\n    let answer = [];\n    for (let i = 0x0; i < N; i++) {\n        if (i % 0x2 === 0x0) {\n            answer[_0x249f4e(0x2)](b[i]);\n        } else {\n            answer[_0x249f4e(0x3)](b[i]);\n        }\n    }\n    if (N % 0x2 !== 0x0)\n        answer = answer[_0x249f4e(0x4)]();\n    console[_0x249f4e(0x5)](answer['join']('\\x20'));\n};\nfunction a0_0x1064() {\n    const _0x494196 = [\n        'split',\n        'map',\n        'push',\n        'unshift',\n        'reverse',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1064 = function () {\n        return _0x494196;\n    };\n    return a0_0x1064();\n}\nmain(require('fs')[a0_0x15ec37(0x6)](a0_0x15ec37(0x7), a0_0x15ec37(0x8)));", "test_cases": [["4\n1 2 3 4", "4 2 1 3"], ["3\n1 2 3", "3 1 2"], ["1\n1000000000", "1000000000"], ["6\n0 6 7 6 7 0", "0 6 6 0 7 7"]], "original": "\n\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = ~~arg[0];\n    const b = arg[1].split(\" \").map(n=>~~n);\n    \n    let answer = [];\n    \n    for(let i=0; i<N; i++) {\n        if(i % 2 === 0) {\n            answer.push(b[i]);\n        } else {\n            answer.unshift(b[i]);\n        }\n    }\n    \n    if(N % 2 !== 0) answer = answer.reverse();\n    \n    console.log(answer.join(\" \"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03992_1", "type": "JavaScript", "obfuscated": "var a0_0x58ebbb = a0_0x40da;\nfunction a0_0x40da(CJXPHr, key) {\n    var stringArray = a0_0x1717();\n    a0_0x40da = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x40da(CJXPHr, key);\n}\nfunction a0_0x1717() {\n    var _0x5cb962 = [\n        'splice',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x1717 = function () {\n        return _0x5cb962;\n    };\n    return a0_0x1717();\n}\nfunction Main(input) {\n    var _0x573f85 = a0_0x40da;\n    input = input['split']('');\n    input[_0x573f85(0x0)](0x4, 0x0, '\\x20');\n    console[_0x573f85(0x1)](input[_0x573f85(0x2)](''));\n}\nMain(require('fs')[a0_0x58ebbb(0x3)](a0_0x58ebbb(0x4), a0_0x58ebbb(0x5))[a0_0x58ebbb(0x6)]());", "test_cases": [["CODEFESTIVAL", "CODE FESTIVAL"], ["POSTGRADUATE", "POST GRADUATE"], ["ABCDEFGHIJKL", "ABCD EFGHIJKL"]], "original": "function Main(input) {\n\tinput = input.split(\"\");\n\tinput.splice(4,0,\" \");\n\tconsole.log(input.join(\"\"))\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p00170_1", "type": "JavaScript", "obfuscated": "var a0_0x24f68b = a0_0x13ab;\nvar input = require('fs')['readFileSync'](a0_0x24f68b(0x0), a0_0x24f68b(0x1));\nfunction a0_0x13ab(lTbEcV, key) {\n    var stringArray = a0_0x4274();\n    a0_0x13ab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x13ab(lTbEcV, key);\n}\nfunction a0_0x4274() {\n    var _0x5931f9 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'concat',\n        'slice',\n        'filter',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x4274 = function () {\n        return _0x5931f9;\n    };\n    return a0_0x4274();\n}\nvar arr = input[a0_0x24f68b(0x2)]()[a0_0x24f68b(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var nww = [];\n    for (var i = 0x0; i < n; i++)\n        nww[i] = arr['shift']()[a0_0x24f68b(0x3)]('\\x20');\n    nww = nww[a0_0x24f68b(0x4)](v => [\n        v[0x0],\n        v[0x1] - 0x0,\n        v[0x2] - 0x0\n    ]);\n    var max = 0x0;\n    var ans = [];\n    var bomb = function (arrA, arrB, sum, g) {\n        var _0x1c0e19 = a0_0x13ab;\n        if (arrB[_0x1c0e19(0x5)] == 0x0) {\n            if (max < g / sum) {\n                ans = arrA;\n                max = g / sum;\n            }\n            return;\n        }\n        arrB['forEach'](v => {\n            var _0x15a30d = a0_0x13ab;\n            if (sum <= nww[v][0x2]) {\n                var a = arrA[_0x15a30d(0x6)](v);\n                var b = arrB[_0x15a30d(0x7)]()[_0x15a30d(0x8)](n => v != n);\n                var c = sum + nww[v][0x1];\n                var d = g + nww[v][0x1] * (arrA[_0x15a30d(0x5)] + 0x1);\n                bomb(a, b, c, d);\n            }\n        });\n    };\n    var bombArr = [];\n    for (var i = 0x0; i < n; i++)\n        bombArr[a0_0x24f68b(0x9)](i);\n    bomb([], bombArr, 0x0, 0x0);\n    console[a0_0x24f68b(0xa)](ans[a0_0x24f68b(0x4)](v => nww[v][0x0])['reverse']()[a0_0x24f68b(0xb)]('\\x0a'));\n}", "test_cases": [["4\nsandwich 80 120\napple 50 200\ncheese 20 40\ncake 100 100\n9\nonigiri 80 300\nonigiri 80 300\nanpan 70 280\nmikan 50 80\nkanzume 100 500\nchocolate 50 350\ncookie 30 80\npurin 40 400\ncracker 40 160\n0", "apple\ncake\nsandwich\ncheese\nkanzume\npurin\nchocolate\nonigiri\nonigiri\nanpan\nmikan\ncracker\ncookie"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var nww = [];\n   for (var i = 0; i < n; i++) nww[i] = arr.shift().split(\" \");\n   nww = nww.map(v => [v[0], v[1] - 0, v[2] - 0]);\n   var max = 0;\n   var ans = [];\n   var bomb = function (arrA, arrB, sum, g) {\n      if (arrB.length == 0) {\n         if (max < g / sum) {\n            ans = arrA;\n            max = g / sum;\n         }\n         return;\n      }\n      arrB.forEach(v => {\n         if (sum <= nww[v][2]) {\n            var a = arrA.concat(v);\n            var b = arrB.slice().filter(n => v != n);\n            var c = sum + nww[v][1];\n            var d = g + nww[v][1] * (arrA.length + 1);\n            bomb(a, b, c, d);\n         }\n      });\n   };\n   var bombArr = [];\n   for (var i = 0; i < n; i++) bombArr.push(i);\n   bomb([], bombArr, 0, 0);\n   console.log(ans.map(v => nww[v][0]).reverse().join(\"\\n\"));\n}\n\n", "language": "JavaScript"}
{"filename": "p02396_1", "type": "JavaScript", "obfuscated": "var a0_0x19c4c6 = a0_0x1d85;\nvar input = '';\nprocess['stdin']['resume']();\nprocess[a0_0x19c4c6(0x0)][a0_0x19c4c6(0x1)](a0_0x19c4c6(0x2));\nprocess[a0_0x19c4c6(0x0)]['on']('data', function (chunk) {\n    input += chunk;\n});\nfunction a0_0x1d85(wkqPEF, key) {\n    var stringArray = a0_0x4816();\n    a0_0x1d85 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d85(wkqPEF, key);\n}\nprocess[a0_0x19c4c6(0x0)]['on']('end', function () {\n    var _0x2c58ef = a0_0x1d85;\n    var nums = input[_0x2c58ef(0x3)]('\\x0a');\n    var output = '';\n    for (var i = 0x0; i < nums[_0x2c58ef(0x4)]; i++) {\n        nums[i] = Number(nums[i]);\n        if (nums[i] == 0x0) {\n            break;\n        }\n        output += 'Case\\x20' + (i + 0x1) + ':\\x20' + nums[i] + '\\x0a';\n    }\n    console[_0x2c58ef(0x5)](output);\n});\nfunction a0_0x4816() {\n    var _0x5376ae = [\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x4816 = function () {\n        return _0x5376ae;\n    };\n    return a0_0x4816();\n}", "test_cases": [["3\n5\n11\n7\n8\n19\n0", "Case 1: 3\nCase 2: 5\nCase 3: 11\nCase 4: 7\nCase 5: 8\nCase 6: 19"]], "original": "var input = \"\";\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (chunk) {\n    input += chunk;\n});\nprocess.stdin.on('end', function (){\n    var nums = input.split(\"\\n\");\n    var output = \"\";\n    \n    for(var i = 0; i < nums.length; i ++){\n        nums[i] = Number(nums[i]);\n        if(nums[i] == 0){\n            break;\n        }\n        output += \"Case \" + (i + 1) + \": \" + nums[i] + \"\\n\"; \n    }\n    console.log(output);\n});", "language": "JavaScript"}
{"filename": "p02420_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x8fa2() {\n    var _0x15e6f0 = [\n        'toString',\n        'map',\n        'slice',\n        'reduce',\n        'join',\n        'match',\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x8fa2 = function () {\n        return _0x15e6f0;\n    };\n    return a0_0x8fa2();\n}\nfunction a0_0x1a0b(vlHYNn, key) {\n    var stringArray = a0_0x8fa2();\n    a0_0x1a0b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a0b(vlHYNn, key);\n}\nvar a0_0x255e14 = a0_0x1a0b;\n(function (stdin) {\n    var _0x58c910 = a0_0x1a0b;\n    var lines = stdin[_0x58c910(0x0)]();\n    var re = /[A-Za-z]+\\n([1-9][0-9]*\\n)+/g;\n    var result = function (data) {\n        var _0x21b803 = a0_0x1a0b;\n        return data[_0x21b803(0x1)](function (v) {\n            var _0x3ea3a5 = a0_0x1a0b;\n            return v[_0x3ea3a5(0x2)](-v[0x1])[_0x3ea3a5(0x1)](Number)[_0x3ea3a5(0x3)](function (str, num) {\n                var _0x4036c8 = a0_0x1a0b;\n                return str[_0x4036c8(0x2)](num) + str['slice'](0x0, num);\n            }, v[0x0]);\n        })[_0x21b803(0x4)]('\\x0a');\n    }(lines[_0x58c910(0x5)](re)[_0x58c910(0x1)](function (v) {\n        var _0x49aac4 = a0_0x1a0b;\n        return v['trim']()[_0x49aac4(0x6)]('\\x0a');\n    }));\n    console[_0x58c910(0x7)](result);\n}(require('fs')['readFileSync'](a0_0x255e14(0x8), a0_0x255e14(0x9))));", "test_cases": [["aabc\n3\n1\n2\n1\nvwxyz\n2\n3\n4\n-", "aabc\nxyzvw"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString();\n  var re = /[A-Za-z]+\\n([1-9][0-9]*\\n)+/g;\n  var result = (function(data) {\n    return data\n      .map(function(v) {\n        return v.slice(- v[1])\n          .map(Number)\n          .reduce(function(str,num) {\n            return str.slice(num) + str.slice(0,num);\n          },v[0]);\n      }).join('\\n');\n  }(lines.match(re).map(function(v){return v.trim().split('\\n');})\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02554_1", "type": "JavaScript", "obfuscated": "var a0_0x595b53 = a0_0x44ad;\nconst mod = 0xa ** 0x9 + 0x7;\nfunction a0_0xaa82() {\n    var _0x5c22ac = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xaa82 = function () {\n        return _0x5c22ac;\n    };\n    return a0_0xaa82();\n}\nfunction pow(x, y) {\n    var r = 0x1;\n    for (var i = 0x1; i <= y; i++) {\n        r = r * x % mod;\n    }\n    return r;\n}\n;\nfunction Main(input) {\n    var _0x402171 = a0_0x44ad;\n    const [N] = input['trim']()[_0x402171(0x0)]('\\x20')[_0x402171(0x1)](x => parseInt(x));\n    var count = pow(0xa, N) - pow(0x9, N) * 0x2 + pow(0x8, N);\n    count = count % mod;\n    count = (count + mod) % mod;\n    console[_0x402171(0x2)](count);\n}\n;\nfunction a0_0x44ad(CnYylJ, key) {\n    var stringArray = a0_0xaa82();\n    a0_0x44ad = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x44ad(CnYylJ, key);\n}\nMain(require('fs')[a0_0x595b53(0x3)](a0_0x595b53(0x4), a0_0x595b53(0x5)));", "test_cases": [["2", "2"], ["1", "0"], ["869121", "2511445"]], "original": "const mod = 10**9 +7;\n\nfunction pow (x,y){\n    var r = 1;\n    for (var i=1; i<=y; i++){\n        r = (r * x) % mod;\n    }\n    return r;\n};\n\n\nfunction Main (input){\n    const [N] = input.trim().split(' ').map(x => parseInt(x));\n    var count = pow(10,N)-(pow(9,N)*2)+pow(8,N);\n    count = count % mod;\n    count = (count + mod) % mod;\n    console.log(count)\n};\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02664_1", "type": "JavaScript", "obfuscated": "const a0_0x1e29ca = a0_0x28fa;\nfunction Main(str) {\n    const _0x493a09 = a0_0x28fa;\n    let newString = '';\n    for (let i = 0x0; i < str['length']; i++) {\n        if (str[i] === '?' && (str[i - 0x1] && str[i - 0x1] === 'P' || str[i + 0x1] && str[i + 0x1] === 'P')) {\n            newString = newString + 'D';\n        } else if (str[i] == '?') {\n            newString = newString + 'P';\n        } else {\n            newString = newString + str[i];\n        }\n    }\n    console[_0x493a09(0x0)](newString);\n}\nlet input = require('fs')['readFileSync'](a0_0x1e29ca(0x1), a0_0x1e29ca(0x2));\nMain(input);\nfunction a0_0x28fa(baKfTN, key) {\n    const stringArray = a0_0x147a();\n    a0_0x28fa = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x28fa(baKfTN, key);\n}\nfunction a0_0x147a() {\n    const _0x2b0a17 = [\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x147a = function () {\n        return _0x2b0a17;\n    };\n    return a0_0x147a();\n}", "test_cases": [["PD?D??P", "PDPDPDP"], ["P?P?", "PDPD"]], "original": "function Main(str) {\n  \tlet newString = '';\n\tfor(let i=0;i<str.length;i++) {\n    \tif(str[i] === '?' && (str[i-1] && str[i-1] === 'P' || str[i+1] && str[i+1] === 'P')) {\n        \tnewString = newString + 'D';\n        } else if(str[i] == '?') {\n        \tnewString = newString + 'P';\n        } else {\n        \tnewString = newString + str[i];\n        }\n    }\n  \n  \tconsole.log(newString);\n  \t\n}\n\nlet input = require('fs').readFileSync('/dev/stdin', 'utf8');\nMain(input);\n", "language": "JavaScript"}
{"filename": "p02726_1", "type": "JavaScript", "obfuscated": "function a0_0x22cb() {\n    const _0x4f8f70 = [\n        'abs',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x22cb = function () {\n        return _0x4f8f70;\n    };\n    return a0_0x22cb();\n}\nfunction a0_0x35ea(BeRTFY, key) {\n    const stringArray = a0_0x22cb();\n    a0_0x35ea = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x35ea(BeRTFY, key);\n}\nconst a0_0xc7cba0 = a0_0x35ea;\nfunction main(input) {\n    function dist(a, b) {\n        const _0x22433e = a0_0x35ea;\n        return Math['min'](b - a, Math[_0x22433e(0x0)](x - a) + Math['abs'](y - b) + 0x1);\n    }\n    const inp = input['split']('\\x20');\n    const n = inp[0x0];\n    const x = inp[0x1];\n    const y = inp[0x2];\n    for (var i = 0x1; i < n; i++) {\n        var cnt = 0x0;\n        for (var a = 0x1; a < n; a++)\n            for (var b = a + 0x1; b <= n; b++)\n                if (dist(a, b) == i)\n                    cnt++;\n        console['log'](cnt);\n    }\n}\nmain(require('fs')['readFileSync'](a0_0xc7cba0(0x1), a0_0xc7cba0(0x2)));", "test_cases": [["5 2 4", "5\n4\n1\n0"], ["3 1 3", "3\n0"], ["7 3 7", "7\n8\n4\n2\n0\n0"], ["10 4 8", "10\n12\n10\n8\n4\n1\n0\n0\n0"]], "original": "function main(input) {\n  function dist(a, b) {\n\t\treturn Math.min(b-a, Math.abs(x-a)+Math.abs(y-b)+1);\n\t}\n\t\n  const inp = input.split(' ');\n\tconst n = inp[0];\n\tconst x = inp[1];\n\tconst y = inp[2];\n  \n  for(var i=1;i<n; i++) {\n    var cnt = 0;\n    \n    for(var a=1; a<n; a++)\n      for(var b=a+1; b<=n; b++)\n        if(dist(a,b) == i)\n          cnt++;\n    \n    console.log(cnt);\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03209_1", "type": "JavaScript", "obfuscated": "var a0_0x12d91a = a0_0x3301;\nfunction Main(input) {\n    var _0x3d6d47 = a0_0x3301;\n    input = input[_0x3d6d47(0x0)]('\\x0a');\n    var N = parseInt(input[0x0][_0x3d6d47(0x0)]('\\x20')[0x0]);\n    var X = parseInt(input[0x0][_0x3d6d47(0x0)]('\\x20')[0x1]);\n    bans = new Array(0x32);\n    all = new Array(0x32);\n    bans[0x0] = 0x1;\n    all[0x0] = 0x1;\n    var ans = 0x0;\n    for (i = 0x1; i <= 0x32; i++) {\n        bans[i] = bans[i - 0x1] * 0x2 + 0x1;\n        all[i] = all[i - 0x1] * 0x2 + 0x3;\n    }\n    var full = all[N];\n    var bs = bans[N];\n    var flag = 0x0;\n    if (X % 0x2 == 0x0) {\n        if ('TymWX' === _0x3d6d47(0x1)) {\n            X = all[N] - X;\n            flag = 0x1;\n        } else {\n            bans[i] = bans[i - 0x1] * 0x2 + 0x1;\n            all[i] = all[i - 0x1] * 0x2 + 0x3;\n        }\n    }\n    while (X > 0x0) {\n        if (X > (full - 0x1) / 0x2) {\n            X = X - (full - 0x1) / 0x2 - 0x1;\n            ans = ans + (bs - 0x1) / 0x2 + 0x1;\n            full = (full - 0x1) / 0x2 - 0x1;\n            bs = (bs - 0x1) / 0x2;\n        } else {\n            X = X - 0x1;\n            full = (full - 0x1) / 0x2 - 0x1;\n            bs = (bs - 0x1) / 0x2;\n        }\n    }\n    if (flag == 0x1) {\n        if ('TXHCD' !== _0x3d6d47(0x2)) {\n            ans = bans[N] - ans;\n        } else {\n            X = X - (full - 0x1) / 0x2 - 0x1;\n            ans = ans + (bs - 0x1) / 0x2 + 0x1;\n            full = (full - 0x1) / 0x2 - 0x1;\n            bs = (bs - 0x1) / 0x2;\n        }\n    }\n    console['log']('%s', ans);\n}\nfunction debug() {\n    var _0x699e69 = a0_0x3301;\n    var input = document[_0x699e69(0x3)](_0x699e69(0x4))[_0x699e69(0x5)];\n    Main(input);\n}\nfunction a0_0x3301(qDMIJR, key) {\n    var stringArray = a0_0xdc65();\n    a0_0x3301 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3301(qDMIJR, key);\n}\nfunction a0_0xdc65() {\n    var _0x3f46fe = [\n        'split',\n        'TymWX',\n        'PFHDn',\n        'getElementById',\n        'input',\n        'value',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0xdc65 = function () {\n        return _0x3f46fe;\n    };\n    return a0_0xdc65();\n}\nMain(require('fs')[a0_0x12d91a(0x6)](a0_0x12d91a(0x7), 'utf8'));", "test_cases": [["2 7", "4"], ["1 1", "0"], ["50 4321098765432109", "2160549382716056"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0].split(\" \")[0]);\n  var X = parseInt(input[0].split(\" \")[1]);\n  bans=new Array(50);\n  all=new Array(50);\n  bans[0]=1;\n  all[0]=1;\n  var ans = 0;\n  for(i=1;i<=50;i++){\n    bans[i]=bans[i-1]*2+1;\n    all[i]=all[i-1]*2+3;\n  }\n  var full=all[N];\n  var bs=bans[N];\n  var flag=0;\n  if(X%2==0){\n    X=all[N]-X;\n    flag=1;\n  }\n  while(X>0){\n\n    if(X>(full-1)/2){\n      X=X-(full-1)/2-1;\n      ans=ans+(bs-1)/2+1;\n      full=(full-1)/2-1;\n      bs=(bs-1)/2\n    }else{\n      X=X-1;\n      full=(full-1)/2-1;\n      bs=(bs-1)/2\n    }\n  }\n  if(flag==1){\n    ans=bans[N]-ans;\n  }\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03227_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4c1fe7 = a0_0x2780;\nfunction a0_0x2780(zCYsIl, key) {\n    const stringArray = a0_0x31ad();\n    a0_0x2780 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2780(zCYsIl, key);\n}\nfunction Main(input) {\n    const _0x536146 = a0_0x2780;\n    const S = input[_0x536146(0x0)]('\\x0a')[0x0];\n    if (S['length'] <= 0x2) {\n        console['log'](S);\n    } else {\n        console[_0x536146(0x1)](S['split']('')[_0x536146(0x2)]()[_0x536146(0x3)](''));\n    }\n}\nfunction a0_0x31ad() {\n    const _0x28836c = [\n        'split',\n        'log',\n        'reverse',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x31ad = function () {\n        return _0x28836c;\n    };\n    return a0_0x31ad();\n}\nMain(require('fs')[a0_0x4c1fe7(0x4)](a0_0x4c1fe7(0x5), a0_0x4c1fe7(0x6)));", "test_cases": [["abc", "cba"], ["ac", "ac"]], "original": "'use strict';\n\nfunction Main(input) {\n    const S = input.split('\\n')[0];\n    if (S.length <= 2) {\n        console.log(S);\n    } else {\n        console.log(S.split(\"\").reverse().join(\"\"));\n    }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03435_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x49bb9d = a0_0x125b;\nconst main = arg => {\n    const _0x25826c = a0_0x125b;\n    arg = arg[_0x25826c(0x0)]()['split']('\\x0a');\n    const c = arg['map'](n => n['split']('\\x20')['map'](l => parseInt(l)));\n    for (let a1 = 0x0; a1 <= 0x64; a1++) {\n        const b1 = c[0x0][0x0] - a1;\n        const b2 = c[0x1][0x0] - a1;\n        const b3 = c[0x2][0x0] - a1;\n        for (let a2 = 0x0; a2 <= 0x64; a2++) {\n            if (a2 + b1 !== c[0x0][0x1])\n                continue;\n            if (a2 + b2 !== c[0x1][0x1])\n                continue;\n            if (a2 + b3 !== c[0x2][0x1])\n                continue;\n            for (let a3 = 0x0; a3 <= 0x64; a3++) {\n                if (a3 + b1 !== c[0x0][0x2])\n                    continue;\n                if (a3 + b2 !== c[0x1][0x2])\n                    continue;\n                if (a3 + b3 !== c[0x2][0x2])\n                    continue;\n                console[_0x25826c(0x1)](_0x25826c(0x2));\n                return;\n            }\n        }\n    }\n    console[_0x25826c(0x1)]('No');\n};\nmain(require('fs')[a0_0x49bb9d(0x3)](a0_0x49bb9d(0x4), a0_0x49bb9d(0x5)));\nfunction a0_0x125b(nFylcm, key) {\n    const stringArray = a0_0x32aa();\n    a0_0x125b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x125b(nFylcm, key);\n}\nfunction a0_0x32aa() {\n    const _0x13af88 = [\n        'trim',\n        'log',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x32aa = function () {\n        return _0x13af88;\n    };\n    return a0_0x32aa();\n}", "test_cases": [["1 0 1\n2 1 2\n1 0 1", "Yes"], ["2 2 2\n2 1 2\n2 2 2", "No"], ["0 8 8\n0 8 8\n0 8 8", "Yes"], ["1 8 6\n2 9 7\n0 7 7", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const c = arg.map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    // a1の仮定100通りを試す\n    for(let a1=0; a1<=100; a1++) {\n        // a1が決まればb1,b2,b3も決まる\n        const b1 = c[0][0] - a1;\n        const b2 = c[1][0] - a1;\n        const b3 = c[2][0] - a1;\n        \n        // そうすると、他のaの値も全て確定するので正しいか検証する\n        for(let a2=0; a2<=100; a2++) {\n            if(a2 + b1 !== c[0][1]) continue;\n            if(a2 + b2 !== c[1][1]) continue;\n            if(a2 + b3 !== c[2][1]) continue;\n\n            for(let a3=0; a3<=100; a3++) {\n                if(a3 + b1 !== c[0][2]) continue;\n                if(a3 + b2 !== c[1][2]) continue;\n                if(a3 + b3 !== c[2][2]) continue;\n                \n                console.log(\"Yes\");\n                return;\n            }\n        }\n    }\n    \n    console.log(\"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03487_1", "type": "JavaScript", "obfuscated": "var a0_0x59cccc = a0_0x366f;\nvar lines = [];\nvar result = 0x0;\nvar readline = require(a0_0x59cccc(0x0));\nfunction a0_0x1622() {\n    var _0x5c8cd6 = [\n        'readline',\n        'stdout',\n        'push',\n        'close',\n        'split',\n        'sort',\n        'MTyyC',\n        'length',\n        'GwkIx',\n        'min',\n        'abs',\n        'LIsgt',\n        'log'\n    ];\n    a0_0x1622 = function () {\n        return _0x5c8cd6;\n    };\n    return a0_0x1622();\n}\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process[a0_0x59cccc(0x1)]\n});\nfunction a0_0x366f(sUgFON, key) {\n    var stringArray = a0_0x1622();\n    a0_0x366f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x366f(sUgFON, key);\n}\nrl['on']('line', function (x) {\n    var _0x1ea536 = a0_0x366f;\n    lines[_0x1ea536(0x2)](x);\n});\nrl['on'](a0_0x59cccc(0x3), function () {\n    var _0x153dc2 = a0_0x366f;\n    var N = Number(lines[0x0]);\n    var a = lines[0x1][_0x153dc2(0x4)]('\\x20')['map'](value => Number(value));\n    a[_0x153dc2(0x5)]((a, b) => a - b);\n    var counter = Array(N)['fill'](0x0);\n    var j = 0x0;\n    counter[0x0] = [\n        a[0x0],\n        0x1\n    ];\n    for (var i = 0x1; i < N; i++) {\n        if (a[i] !== a[i - 0x1]) {\n            j++;\n            counter[j] = [\n                a[i],\n                0x1\n            ];\n        } else {\n            if (_0x153dc2(0x6) !== 'bGhhW') {\n                var cnt = counter[j][0x1] + 0x1;\n                counter[j] = [\n                    a[i],\n                    cnt\n                ];\n            } else {\n                j++;\n                counter[j] = [\n                    a[i],\n                    0x1\n                ];\n            }\n        }\n    }\n    for (var i = 0x0; i < counter[_0x153dc2(0x7)]; i++) {\n        if (counter[i][0x0] === counter[i][0x1]) {\n            continue;\n        } else {\n            if (_0x153dc2(0x8) !== _0x153dc2(0x8)) {\n                result += Math[_0x153dc2(0x9)](counter[i][0x1], Math[_0x153dc2(0xa)](counter[i][0x0] - counter[i][0x1]));\n            } else {\n                if (counter[i] === 0x0) {\n                    if (_0x153dc2(0xb) !== 'UGMXi') {\n                        continue;\n                    } else {\n                        if (a[i] !== a[i - 0x1]) {\n                            j++;\n                            counter[j] = [\n                                a[i],\n                                0x1\n                            ];\n                        } else {\n                            var cnt = counter[j][0x1] + 0x1;\n                            counter[j] = [\n                                a[i],\n                                cnt\n                            ];\n                        }\n                    }\n                } else {\n                    result += Math[_0x153dc2(0x9)](counter[i][0x1], Math['abs'](counter[i][0x0] - counter[i][0x1]));\n                }\n            }\n        }\n    }\n    console[_0x153dc2(0xc)](result);\n});", "test_cases": [["4\n3 3 3 3", "1"], ["5\n2 4 1 4 2", "2"], ["6\n1 2 2 3 3 3", "0"], ["1\n1000000000", "1"], ["8\n2 7 1 8 2 8 1 8", "5"]], "original": "var lines = [];\nvar result = 0;\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var a = lines[1].split(\" \").map(value => Number(value));\n\n    a.sort((a, b) => a - b);\n\n    var counter = Array(N).fill(0);\n    var j = 0;\n\n    counter[0] = [a[0], 1];\n    for (var i = 1; i < N; i++) {\n        if (a[i] !== a[i - 1]) { j++; counter[j] = [a[i], 1] }\n        else { var cnt = counter[j][1] + 1; counter[j] = [a[i], cnt]; }\n    }\n\n    for (var i = 0; i < counter.length; i++) {\n\n        if (counter[i][0] === counter[i][1]) { continue; }\n        else {\n            if (counter[i] === 0) { continue; }\n            else {\n                result += Math.min(counter[i][1], Math.abs((counter[i][0] - counter[i][1])));\n            }\n        }\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p04031_1", "type": "JavaScript", "obfuscated": "var a0_0x199302 = a0_0x30e6;\nfunction a0_0x30e6(gjaxbB, key) {\n    var stringArray = a0_0x3af9();\n    a0_0x30e6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x30e6(gjaxbB, key);\n}\nfunction a0_0x3af9() {\n    var _0x167a19 = [\n        'log',\n        'trim',\n        'split',\n        'length',\n        'round',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3af9 = function () {\n        return _0x167a19;\n    };\n    return a0_0x3af9();\n}\nfunction myout(text) {\n    var _0x2049a9 = a0_0x30e6;\n    console[_0x2049a9(0x0)](text);\n}\nfunction Main(input) {\n    var _0x38a45f = a0_0x30e6;\n    input = input[_0x38a45f(0x1)]()['split']('\\x0a');\n    var N = parseInt(input[0x0]);\n    var list = input[0x1][_0x38a45f(0x2)]('\\x20')['map'](a => Number(a));\n    var ave;\n    var sum = 0x0;\n    var output = 0x0;\n    for (var i = 0x0; i < list[_0x38a45f(0x3)]; i++) {\n        sum += list[i];\n    }\n    ave = Math[_0x38a45f(0x4)](sum / N);\n    for (var i = 0x0; i < list[_0x38a45f(0x3)]; i++) {\n        output += Math['pow'](list[i] - ave, 0x2);\n    }\n    myout(output);\n}\nMain(require('fs')['readFileSync'](a0_0x199302(0x5), a0_0x199302(0x6))[a0_0x199302(0x1)]());", "test_cases": [["2\n4 8", "8"], ["3\n1 1 3", "3"], ["3\n4 2 5", "5"], ["4\n-100 -100 -100 -100", "0"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\tinput = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var N = parseInt(input[0]);\n  var list = input[1].split(\" \").map((a)=>Number(a));\n  var ave;\n  var sum = 0;\n  var output = 0;\n  for(var i = 0; i < list.length; i++){\n    sum += list[i];\n  }\n  ave = Math.round(sum / N);\n  for(var i = 0; i < list.length; i++){\n    output += Math.pow((list[i] - ave),2);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00728_1", "type": "JavaScript", "obfuscated": "var a0_0x426326 = a0_0x2a55;\nprocess[a0_0x426326(0x0)][a0_0x426326(0x1)]();\nprocess[a0_0x426326(0x0)][a0_0x426326(0x2)](a0_0x426326(0x3));\nfunction a0_0x2a55(QXlbHu, key) {\n    var stringArray = a0_0x5f09();\n    a0_0x2a55 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a55(QXlbHu, key);\n}\nprocess[a0_0x426326(0x0)]['on'](a0_0x426326(0x4), function (line) {\n    before(line);\n});\nvar log = console['log'];\nfunction before(line) {\n    var _0x1a92fe = a0_0x2a55;\n    var lines = line[_0x1a92fe(0x5)]('\\x0a');\n    lines = lines[_0x1a92fe(0x6)](function (e) {\n        return e !== '';\n    });\n    main(lines);\n}\nfunction main(lines) {\n    var _0x3dd874 = a0_0x2a55;\n    var ls = lines['map'](function (e) {\n        var _0x33a6e1 = a0_0x2a55;\n        if (_0x33a6e1(0x7) !== _0x33a6e1(0x7)) {\n            var ls = lines[_0x33a6e1(0x8)](function (e) {\n                return Number(e);\n            });\n            while (ls[_0x33a6e1(0x9)] > 0x1) {\n                var tpl = ls['shift']();\n                var arr = ls['slice'](0x0, tpl);\n                ls = ls[_0x33a6e1(0xa)](tpl);\n                var mid = arr[_0x33a6e1(0xb)](Math['min'][_0x33a6e1(0xc)](this, arr));\n                arr[_0x33a6e1(0xd)](mid, 0x1);\n                var Mid = arr[_0x33a6e1(0xb)](Math['max'][_0x33a6e1(0xc)](this, arr));\n                arr[_0x33a6e1(0xd)](Mid, 0x1);\n                var sum = arr[_0x33a6e1(0xe)](function (p, c, i, a) {\n                    return p + c;\n                });\n                log(Math[_0x33a6e1(0xf)](sum / arr[_0x33a6e1(0x9)]));\n            }\n        } else {\n            return Number(e);\n        }\n    });\n    while (ls['length'] > 0x1) {\n        var tpl = ls[_0x3dd874(0x10)]();\n        var arr = ls['slice'](0x0, tpl);\n        ls = ls[_0x3dd874(0xa)](tpl);\n        var mid = arr[_0x3dd874(0xb)](Math[_0x3dd874(0x11)]['apply'](this, arr));\n        arr[_0x3dd874(0xd)](mid, 0x1);\n        var Mid = arr[_0x3dd874(0xb)](Math[_0x3dd874(0x12)][_0x3dd874(0xc)](this, arr));\n        arr['splice'](Mid, 0x1);\n        var sum = arr['reduce'](function (p, c, i, a) {\n            var _0x4a3a5d = a0_0x2a55;\n            if (_0x4a3a5d(0x13) !== 'GYsav') {\n                return p + c;\n            } else {\n                return p + c;\n            }\n        });\n        log(Math[_0x3dd874(0xf)](sum / arr['length']));\n    }\n}\nfunction a0_0x5f09() {\n    var _0x5e4e62 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'split',\n        'filter',\n        'JDuJD',\n        'map',\n        'length',\n        'slice',\n        'indexOf',\n        'apply',\n        'splice',\n        'reduce',\n        'round',\n        'shift',\n        'min',\n        'max',\n        'GYsav'\n    ];\n    a0_0x5f09 = function () {\n        return _0x5e4e62;\n    };\n    return a0_0x5f09();\n}", "test_cases": [["3\n1000\n342\n0\n5\n2\n2\n9\n11\n932\n5\n300\n1000\n0\n200\n400\n8\n353\n242\n402\n274\n283\n132\n402\n523\n0", "342\n7\n300\n326"]], "original": "\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data',function(line){\n\tbefore(line);\n});\n\nvar log = console.log;\nfunction before(line){\n\tvar lines = line.split(\"\\n\");\n\tlines = lines.filter(function(e){\n\t\treturn (e !== \"\");\n\t});\n\tmain(lines);\n}\n\n//-----------\nfunction main(lines){\n\tvar ls = lines.map(function(e){return Number(e);});\n\twhile(ls.length > 1){\n\t\tvar tpl = ls.shift();\n\t\tvar arr = ls.slice(0,tpl);\n\t\tls = ls.slice(tpl);\n\t\tvar mid = arr.indexOf(Math.min.apply(this,arr));\n\t\tarr.splice(mid,1);\n\t\tvar Mid = arr.indexOf(Math.max.apply(this,arr));\n\t\tarr.splice(Mid,1);\n\t\tvar sum = arr.reduce(function(p,c,i,a){return p+c;});\n\t\tlog(Math.round(sum/arr.length));\n\t}\n}", "language": "JavaScript"}
{"filename": "p02237_1", "type": "JavaScript", "obfuscated": "var a0_0x4d8317 = a0_0x2dc5;\nconfig = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')[a0_0x4d8317(0x0)](config[a0_0x4d8317(0x1)], a0_0x4d8317(0x2))[a0_0x4d8317(0x3)]()[a0_0x4d8317(0x4)](config[a0_0x4d8317(0x5)]);\nfunction a0_0x2dc5(OFYfUJ, key) {\n    var stringArray = a0_0x44e7();\n    a0_0x2dc5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2dc5(OFYfUJ, key);\n}\nn = Number(line[a0_0x4d8317(0x6)]());\nadj = {};\nfor (i in line) {\n    ary = line[i]['split']('\\x20');\n    j = ary['shift']();\n    ary[a0_0x4d8317(0x6)]();\n    adj[j] = ary;\n}\nfor (i = 0x1; i <= n; i++) {\n    ary = [];\n    for (j = 0x1; j <= n; j++) {\n        if (adj[i]['indexOf'](String(j)) !== -0x1)\n            ary[a0_0x4d8317(0x7)](0x1);\n        else\n            ary[a0_0x4d8317(0x7)](0x0);\n    }\n    console[a0_0x4d8317(0x8)](ary[a0_0x4d8317(0x9)]('\\x20'));\n}\nfunction a0_0x44e7() {\n    var _0x56532a = [\n        'readFileSync',\n        'input',\n        'ascii',\n        'trim',\n        'split',\n        'newline',\n        'shift',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x44e7 = function () {\n        return _0x56532a;\n    };\n    return a0_0x44e7();\n}", "test_cases": [["4\n1 2 2 4\n2 1 4\n3 0\n4 1 3", "0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline);\nn = Number(line.shift());\nadj = {};\nfor (i in line) {\n  ary = line[i].split(' ');\n  j = ary.shift();\n  ary.shift();\n  adj[j] = ary;\n}\n\nfor (i = 1; i <= n; i++) {\n  ary = [];\n  for (j = 1; j <= n; j++) {\n    if (adj[i].indexOf(String(j)) !== -1) ary.push(1);\n    else ary.push(0);\n  }\n  console.log(ary.join(' '));\n}", "language": "JavaScript"}
{"filename": "p02239_1", "type": "JavaScript", "obfuscated": "function a0_0x1739(TktbPL, key) {\n    const stringArray = a0_0x4fe2();\n    a0_0x1739 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1739(TktbPL, key);\n}\nconst a0_0x274f13 = a0_0x1739;\nfunction main(_stdin) {\n    const _0x55d98b = a0_0x1739;\n    const stdin = _stdin[_0x55d98b(0x0)]('\\x0a');\n    const len = parseInt(stdin[_0x55d98b(0x1)](), 0xa);\n    const data = stdin[_0x55d98b(0x2)]((e, i) => i < len)['map'](e => e[_0x55d98b(0x0)]('\\x20')['map'](e => parseInt(e, 0xa)));\n    const dists = [\n        null,\n        0x0\n    ];\n    bfs(data[0x0], dists, data);\n    for (const node of data) {\n        if (_0x55d98b(0x3) !== 'LEQNt') {\n            if (dists[node[0x0]] === undefined)\n                dists[node[0x0]] = -0x1;\n        } else {\n            if (dists[node[0x0]] === undefined)\n                dists[node[0x0]] = -0x1;\n        }\n    }\n    dists['shift']();\n    dists[_0x55d98b(0x4)]((e, i) => {\n        const _0x5a0233 = a0_0x1739;\n        console[_0x5a0233(0x5)](i + 0x1, e);\n    });\n}\nfunction bfs(node, dists, data) {\n    const _0x342e7d = a0_0x1739;\n    const key = node[0x0];\n    const next = dists[key] + 0x1;\n    const children = node[_0x342e7d(0x6)](0x2);\n    for (const child of children) {\n        if (dists[child] === undefined || dists[child] > next) {\n            const nextNode = data[_0x342e7d(0x7)](e => e[0x0] === child);\n            dists[child] = next;\n            bfs(nextNode, dists, data);\n        }\n    }\n}\nfunction a0_0x4fe2() {\n    const _0x47d932 = [\n        'split',\n        'shift',\n        'filter',\n        'LEQNt',\n        'forEach',\n        'log',\n        'slice',\n        'find',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4fe2 = function () {\n        return _0x47d932;\n    };\n    return a0_0x4fe2();\n}\nmain(require('fs')[a0_0x274f13(0x8)](a0_0x274f13(0x9), a0_0x274f13(0xa)));", "test_cases": [["4\n1 2 2 4\n2 1 4\n3 0\n4 1 3", "1 0\n2 1\n3 2\n4 1"]], "original": "function main(_stdin){\n    const stdin = _stdin.split('\\n');\n    const len = parseInt(stdin.shift(), 10);\n\n    const data = stdin.filter((e, i) => i < len).map(e => e.split(' ').map(e => parseInt(e, 10)));\n\n    const dists = [null, 0];\n\n    bfs(data[0], dists, data);\n\n    for(const node of data){\n        if(dists[node[0]] === undefined) dists[node[0]] = -1;\n    }\n    dists.shift();\n    dists.forEach((e, i) => {\n        console.log(i + 1,  e);\n    });\n}\n\nfunction bfs(node, dists, data){\n    const key = node[0];\n    const next = dists[key] + 1;\n    const children = node.slice(2);\n\n    for(const child of children){\n        if(dists[child] === undefined || dists[child] > next){\n            const nextNode = data.find(e => e[0] === child);\n            dists[child] = next;\n            bfs(nextNode, dists, data);\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n\n", "language": "JavaScript"}
{"filename": "p02314_1", "type": "JavaScript", "obfuscated": "const a0_0xe24062 = a0_0x5a01;\nconst input = require('fs')['readFileSync'](a0_0xe24062(0x0), 'utf8');\nconst list = input[a0_0xe24062(0x1)]()[a0_0xe24062(0x2)]('\\x0a');\nlet [n, m] = list[0x0][a0_0xe24062(0x2)]('\\x20');\nn = Number(n);\nm = Number(m);\nfunction a0_0x5a01(QMOYuN, key) {\n    const stringArray = a0_0x41de();\n    a0_0x5a01 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a01(QMOYuN, key);\n}\nfunction a0_0x41de() {\n    const _0x4ddfb7 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'set',\n        'has',\n        'get',\n        'min',\n        'log'\n    ];\n    a0_0x41de = function () {\n        return _0x4ddfb7;\n    };\n    return a0_0x41de();\n}\nlet cm = list[0x1]['trim']()[a0_0xe24062(0x2)]('\\x20');\ncm = cm['map'](c => Number(c));\nconst dp = new Map();\nfor (let i = 0x0; i < m; i++) {\n    dp[a0_0xe24062(0x3)](cm[i], 0x1);\n}\nconst max = n + 0x1;\nfor (let i = 0x0; i <= n; i++) {\n    if (dp[a0_0xe24062(0x4)](i)) {\n        continue;\n    }\n    let min = max;\n    for (let j = 0x0; j < m; j++) {\n        const target = i - cm[j];\n        if (target < 0x0 || !dp['has'](target)) {\n            continue;\n        }\n        const count = dp[a0_0xe24062(0x5)](target);\n        min = Math[a0_0xe24062(0x6)](count, min);\n    }\n    if (min < max) {\n        dp['set'](i, min + 0x1);\n    }\n}\nconsole[a0_0xe24062(0x7)](dp[a0_0xe24062(0x5)](n));", "test_cases": [["55 4\n1 5 10 50", "2"], ["15 6\n1 2 7 8 12 50", "2"], ["65 6\n1 2 7 8 12 50", "3"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst list = input.trim().split('\\n');\nlet [ n, m ] = list[0].split(' ');\nn = Number(n);\nm = Number(m);\nlet cm = list[1].trim().split(' ');\ncm = cm.map(c => Number(c));\n\nconst dp = new Map();\nfor (let i = 0; i < m; i++) {\n  dp.set(cm[i], 1);\n}\nconst max = n + 1;\nfor (let i = 0; i <= n; i++) {\n  if (dp.has(i)) {\n    continue;\n  }\n\n  let min = max;\n  for (let j = 0; j < m; j++) {\n    const target = i - cm[j];\n    if (target < 0 || !dp.has(target)) {\n      continue;\n    }\n    const count = dp.get(target);\n    min = Math.min(count, min);\n  }\n  if (min < max) {\n    dp.set(i, min + 1);\n  }\n}\n\nconsole.log(dp.get(n));\n\n", "language": "JavaScript"}
{"filename": "p02409_1", "type": "JavaScript", "obfuscated": "var a0_0x12e155 = a0_0x4360;\nfunction initOfficialHouse(bMax, fMax, rMax) {\n    var o = Array(bMax);\n    for (var b = 0x0; b < bMax; b++) {\n        o[b] = Array(fMax);\n        for (var f = 0x0; f < fMax; f++) {\n            o[b][f] = Array(rMax);\n            for (var r = 0x0; r < rMax; r++) {\n                o[b][f][r] = 0x0;\n            }\n        }\n    }\n    return o;\n}\nfunction toString(o) {\n    var _0x38a9f9 = a0_0x4360;\n    return o[_0x38a9f9(0x0)](function (b) {\n        var _0x583a51 = a0_0x4360;\n        return b['map'](function (f) {\n            var _0x972d6b = a0_0x4360;\n            return '\\x20' + f[_0x972d6b(0x1)]('\\x20');\n        })[_0x583a51(0x1)]('\\x0a');\n    })[_0x38a9f9(0x1)]('\\x0a####################\\x0a');\n}\nconst chunk = require('fs')['readFileSync'](a0_0x12e155(0x2), a0_0x12e155(0x3));\nvar lines = chunk[a0_0x12e155(0x4)]()[a0_0x12e155(0x5)]('\\x0a');\nlines[a0_0x12e155(0x6)]();\nvar o = initOfficialHouse(0x4, 0x3, 0xa);\nfunction a0_0x4360(OQcOoJ, key) {\n    var stringArray = a0_0x4b88();\n    a0_0x4360 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4360(OQcOoJ, key);\n}\nfunction a0_0x4b88() {\n    var _0x5a8300 = [\n        'map',\n        'join',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'forEach',\n        'log'\n    ];\n    a0_0x4b88 = function () {\n        return _0x5a8300;\n    };\n    return a0_0x4b88();\n}\nlines[a0_0x12e155(0x7)](function (line) {\n    var _0x309ee0 = a0_0x4360;\n    var bfrv = line[_0x309ee0(0x5)]('\\x20')[_0x309ee0(0x0)](Number);\n    var b = bfrv[0x0], f = bfrv[0x1], r = bfrv[0x2], v = bfrv[0x3];\n    o[b - 0x1][f - 0x1][r - 0x1] += v;\n});\nconsole[a0_0x12e155(0x8)](toString(o));", "test_cases": [["3\n1 1 3 8\n3 2 2 7\n4 3 8 1", "0 0 8 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 7 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 1 0 0"]], "original": "function initOfficialHouse(bMax, fMax, rMax) {\n    var o = Array(bMax);\n    for(var b = 0; b < bMax; b++) {\n        o[b] = Array(fMax);\n        for(var f = 0; f < fMax; f++) {\n            o[b][f] = Array(rMax);\n            for(var r = 0; r < rMax; r++) {\n                o[b][f][r] = 0;\n            }\n        }\n    }\n    return o;\n}\nfunction toString(o){\n    return o.map(function(b){\n        return b.map(function(f){\n            return ' ' + f.join(' ');\n        }).join('\\n');\n    }).join('\\n####################\\n');\n}\n\nconst chunk = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = chunk.trim().split('\\n');\nlines.shift(); // n\nvar o = initOfficialHouse(4, 3, 10);\nlines.forEach(function (line) {\n    var bfrv = line.split(' ').map(Number);\n    var b = bfrv[0], f = bfrv[1], r = bfrv[2], v = bfrv[3];\n    o[b - 1][f - 1][r - 1] += v;\n});\n\nconsole.log(toString(o));", "language": "JavaScript"}
{"filename": "p02596_1", "type": "JavaScript", "obfuscated": "var a0_0x4548f2 = a0_0x221d;\nprocess['stdin'][a0_0x4548f2(0x0)]();\nprocess['stdin']['setEncoding'](a0_0x4548f2(0x1));\nvar lines = [];\nfunction a0_0x221d(bQIqbZ, key) {\n    var stringArray = a0_0x259a();\n    a0_0x221d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x221d(bQIqbZ, key);\n}\nvar reader = require(a0_0x4548f2(0x2))[a0_0x4548f2(0x3)]({\n    'input': process[a0_0x4548f2(0x4)],\n    'output': process[a0_0x4548f2(0x5)]\n});\nfunction a0_0x259a() {\n    var _0x4abe84 = [\n        'resume',\n        'utf8',\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'push',\n        'close',\n        'AJxLA',\n        'IQtLN',\n        'log'\n    ];\n    a0_0x259a = function () {\n        return _0x4abe84;\n    };\n    return a0_0x259a();\n}\nreader['on'](a0_0x4548f2(0x6), line => {\n    var _0x6dbfc6 = a0_0x221d;\n    lines[_0x6dbfc6(0x7)](line);\n});\nreader['on'](a0_0x4548f2(0x8), () => {\n    var _0x239d45 = a0_0x221d;\n    const N = lines[0x0] - 0x0;\n    let tmp = 0x0;\n    for (let i = 0x1; i <= 0xf4240; i++) {\n        tmp *= 0xa;\n        tmp += 0x7;\n        tmp %= N;\n        if (tmp === 0x0) {\n            if (_0x239d45(0x9) !== _0x239d45(0xa)) {\n                console[_0x239d45(0xb)](i);\n                return;\n            } else {\n                return !![];\n            }\n        }\n    }\n    console[_0x239d45(0xb)](-0x1);\n});\nfunction check(ans) {\n    return !![];\n}", "test_cases": [["101", "4"], ["2", "-1"], ["999983", "999982"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const N = lines[0]-0;\n    let tmp = 0;\n    for(let i=1;i<=1000000;i++){\n        tmp *= 10;\n        tmp += 7;\n        tmp %= N;\n        if(tmp === 0){\n            console.log(i);\n            return;\n        }\n    }\n    console.log(-1);\n});\n\nfunction check(ans){\n    \n    return true;\n}\n", "language": "JavaScript"}
{"filename": "p02661_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x47b4c2 = a0_0x1edb;\nfunction a0_0x1edb(sMNvta, key) {\n    const stringArray = a0_0x8e29();\n    a0_0x1edb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1edb(sMNvta, key);\n}\nfunction a0_0x8e29() {\n    const _0x2f9edb = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'toString',\n        'shift',\n        'sort'\n    ];\n    a0_0x8e29 = function () {\n        return _0x2f9edb;\n    };\n    return a0_0x8e29();\n}\nvar input = require('fs')[a0_0x47b4c2(0x0)](a0_0x47b4c2(0x1), a0_0x47b4c2(0x2));\nvar cin = input[a0_0x47b4c2(0x3)]()['split'](/ |\\n/), cid = 0x0;\nconsole['log'](main()[a0_0x47b4c2(0x4)]());\nfunction main() {\n    const _0x3fe71d = a0_0x1edb;\n    let n = +cin[_0x3fe71d(0x5)]();\n    let a = Array(n);\n    let b = Array(n);\n    for (let i = 0x0; i < n; i++) {\n        a[i] = +cin['shift']();\n        b[i] = +cin[_0x3fe71d(0x5)]();\n    }\n    a = a[_0x3fe71d(0x6)]((x, y) => x - y);\n    b = b[_0x3fe71d(0x6)]((x, y) => x - y);\n    let min, max;\n    if (n % 0x2 == 0x0) {\n        if (a[n / 0x2 - 0x1] != a[n / 0x2])\n            min = a[n / 0x2] - 0x1 / 0x2;\n        else\n            min = a[0x2 / n];\n        if (b[n / 0x2 - 0x1] != b[n / 0x2])\n            max = b[n / 0x2 - 0x1] + 0x1 / 0x2;\n        else\n            max = b[n / 0x2 - 0x1];\n        return (max - min) * 0x2 + 0x1;\n    } else {\n        min = a[(n - 0x1) / 0x2];\n        max = b[(n - 0x1) / 0x2];\n        return max - min + 0x1;\n    }\n}", "test_cases": [["2\n1 2\n2 3", "3"], ["3\n100 100\n10 10000\n1 1000000000", "9991"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar cin = input.trim().split(/ |\\n/), cid = 0;\n\nconsole.log(main().toString());\n\n\nfunction main() {\n    let n = +cin.shift();\n    let a = Array(n);\n    let b = Array(n);\n    for (let i = 0; i < n; i++) {\n        a[i] = +cin.shift();\n        b[i] = +cin.shift();\n    }\n    a = a.sort((x, y) => x - y);\n    b = b.sort((x, y) => x - y);\n    let min, max;\n    if (n % 2 == 0) {\n        // 偶数の時 中央値は X(2/n-1)とX(2/n)の平均値\n        // 最小値は、それぞれの値が異なるとき、A(2/n)-1/2、同じならA(2/n)\n        if (a[n / 2 - 1] != a[n / 2]) min = a[n / 2] - 1 / 2;\n        else min = a[2 / n];\n        if (b[n / 2 - 1] != b[n / 2]) max = b[n / 2 - 1] + 1 / 2;\n        else max = b[n / 2 - 1];\n        return (max - min) * 2 + 1;\n    } else {\n        min = a[(n - 1) / 2];\n        max = b[(n - 1) / 2];\n        return (max - min) + 1;\n    }\n\n\n}\n", "language": "JavaScript"}
{"filename": "p02685_1", "type": "JavaScript", "obfuscated": "const a0_0x1c48da = a0_0x3c7e;\nconst input = require('fs')[a0_0x1c48da(0x0)](a0_0x1c48da(0x1), 'utf8');\nfunction a0_0x5def() {\n    const _0x7dce00 = [\n        'readFileSync',\n        '/dev/stdin',\n        'eYSzR',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x5def = function () {\n        return _0x7dce00;\n    };\n    return a0_0x5def();\n}\nfunction pow(x, n) {\n    const _0x1dec1f = a0_0x3c7e;\n    let res = 0x1;\n    while (n > 0x0) {\n        if (_0x1dec1f(0x2) === _0x1dec1f(0x2)) {\n            if (n & 0x1)\n                res = mul(res, x);\n            x = mul(x, x);\n            n >>= 0x1;\n        } else {\n            if (x == 0x1)\n                return 0x1;\n            return pow(x, mod - 0x2);\n        }\n    }\n    return res;\n}\nfunction inv(x) {\n    if (x == 0x1)\n        return 0x1;\n    return pow(x, mod - 0x2);\n}\nfunction a0_0x3c7e(HgjqRp, key) {\n    const stringArray = a0_0x5def();\n    a0_0x3c7e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c7e(HgjqRp, key);\n}\nfunction mul(a, b) {\n    return ((a >> 0x10) * b % mod * 0x10000 + (a & 0xffff) * b) % mod;\n}\nconst mod = 0x3b800001;\n(input => {\n    const _0x3a9f2c = a0_0x3c7e;\n    const lines = input[_0x3a9f2c(0x3)]('\\x0a');\n    let [N, M, K] = lines[0x0][_0x3a9f2c(0x3)]('\\x20')[_0x3a9f2c(0x4)](Number);\n    let ans = 0x0;\n    let fa = 0x1;\n    let fa2 = 0x1;\n    for (let k = 0x0; k <= K; k++) {\n        fa = fa * (k || 0x1) % mod;\n        fa2 = fa2 * (k ? N - k : 0x1) % mod;\n        let left = mul(fa2, inv(fa)) % mod;\n        ans += mul(left, pow(M - 0x1, N - (k + 0x1))) * M % mod;\n    }\n    console[_0x3a9f2c(0x5)](ans % mod);\n})(input);", "test_cases": [["3 2 1", "6"], ["100 100 0", "73074801"], ["60522 114575 7559", "479519525"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nfunction pow (x ,n) {\n    let res = 1\n    while (n > 0) {\n        if (n & 1) res = mul(res, x)\n        x = mul(x, x)\n        n >>= 1\n    }\n    return res\n}\n\nfunction inv (x) {\n    if (x == 1) return 1;\n    return pow(x, mod - 2);\n}\n\nfunction mul (a, b) {\n    return ((a >> 16) * b % mod * 65536 + (a & 65535) * b) % mod\n}\n\nconst mod = 998244353\n\n;(input => {\n    const lines = input.split('\\n')\n    let [N, M, K] = lines[0].split(' ').map(Number)\n\n    let ans = 0\n    let fa = 1\n    let fa2 = 1\n    for (let k = 0; k <= K; k++) {\n        fa = fa * (k || 1) % mod\n        fa2 = fa2 * (k ? (N - k) : 1) % mod\n        let left = mul(fa2, inv(fa)) % mod\n        ans += mul(left, pow((M - 1), (N - (k + 1)))) * M % mod\n    }\n\n    console.log(ans % mod)\n \n})(input)\n", "language": "JavaScript"}
{"filename": "p02735_1", "type": "JavaScript", "obfuscated": "function a0_0x546c(yUkeid, key) {\n    var stringArray = a0_0x3d33();\n    a0_0x546c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x546c(yUkeid, key);\n}\nvar a0_0x3aafed = a0_0x546c;\ninp = require('fs')[a0_0x3aafed(0x0)](a0_0x3aafed(0x1), a0_0x3aafed(0x2))[a0_0x3aafed(0x3)]()[a0_0x3aafed(0x4)]('\\x0a');\nl = inp[a0_0x3aafed(0x5)]()['split']('\\x20');\nH = l[a0_0x3aafed(0x5)]() * 0x1;\nW = l[a0_0x3aafed(0x5)]() * 0x1;\nl = [];\nm = [];\nfor (i = 0x0; i < H; i++) {\n    l[a0_0x3aafed(0x6)](inp[a0_0x3aafed(0x5)]()[a0_0x3aafed(0x4)](''));\n    m[i] = [];\n    for (j = 0x0; j < W; j++) {\n        m[i][j] = 0x0;\n    }\n}\nif (l[0x0][0x0] == '#') {\n    m[0x0][0x0] = 0x1;\n}\nr = 0x0;\nfunction a0_0x3d33() {\n    var _0x3c438e = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'min',\n        'log',\n        'ceil'\n    ];\n    a0_0x3d33 = function () {\n        return _0x3c438e;\n    };\n    return a0_0x3d33();\n}\nfor (c = 0x1; c < W; c++) {\n    m[r][c] = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n}\nc = 0x0;\nfor (r = 0x1; r < H; r++) {\n    m[r][c] = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n}\nfor (i = 0x1; i < H; i++) {\n    r = i;\n    for (c = i; c < W; c++) {\n        s = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n        t = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n        m[r][c] = Math[a0_0x3aafed(0x7)](s, t);\n    }\n    c = i;\n    for (r = i; r < H; r++) {\n        s = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n        t = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n        m[r][c] = Math[a0_0x3aafed(0x7)](s, t);\n    }\n}\nconsole[a0_0x3aafed(0x8)](Math[a0_0x3aafed(0x9)](m[H - 0x1][W - 0x1] / 0x2));", "test_cases": [["3 3\n.##\n.#.\n##.", "1"], ["2 2\n#.\n.#", "2"], ["4 4\n..##\n#...\n###.\n###.", "0"], ["5 5\n.#.#.\n#.#.#\n.#.#.\n#.#.#\n.#.#.", "4"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\nH = l.shift() * 1\nW = l.shift() * 1 \nl = []\nm = []\nfor (i=0; i<H; i++) {\n  l.push(inp.shift().split(''))\n  m[i] = []\n  for (j=0; j<W; j++) {\n      m[i][j] = 0 \n  }\n}\nif (l[0][0] == \"#\") {\n    m[0][0] = 1\n}\nr = 0\nfor (c=1; c<W; c++) {\n  m[r][c] = l[r][c-1] == l[r][c] ? m[r][c - 1] : m[r][c - 1] + 1 \n}\nc = 0\nfor (r=1; r<H; r++) {\n  m[r][c] = l[r-1][c] == l[r][c] ? m[r - 1][c] : m[r - 1][c] + 1 \n}\nfor (i=1; i<H; i++) {\n    r = i\n    for (c=i; c<W; c++) {\n      s = l[r][c-1] == l[r][c] ? m[r][c - 1] : m[r][c - 1] + 1\n      t = l[r-1][c] == l[r][c] ? m[r-1][c] : m[r-1][c] + 1\n      m[r][c] = Math.min(s, t)\n    }\n    c = i\n    for (r=i; r<H; r++) {\n      s = l[r-1][c] == l[r][c] ? m[r - 1][c] : m[r - 1][c] + 1\n      t = l[r][c-1] == l[r][c] ? m[r][c- 1] : m[r][c-1] + 1\n      m[r][c] = Math.min(s, t)\n    }\n}\nconsole.log(Math.ceil(m[H-1][W-1] / 2))", "language": "JavaScript"}
{"filename": "p02795_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x469f07 = a0_0xe718;\nfunction a0_0x362e() {\n    const _0x5aa422 = [\n        'trim',\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x362e = function () {\n        return _0x5aa422;\n    };\n    return a0_0x362e();\n}\nfunction a0_0xe718(BuzbqB, key) {\n    const stringArray = a0_0x362e();\n    a0_0xe718 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe718(BuzbqB, key);\n}\nconst main = arg => {\n    const _0x5f3662 = a0_0xe718;\n    const input = arg[_0x5f3662(0x0)]()[_0x5f3662(0x1)]('\\x0a');\n    let H = Number(input[0x0][_0x5f3662(0x1)]('\\x20'));\n    let W = Number(input[0x1][_0x5f3662(0x1)]('\\x20'));\n    let N = Number(input[0x2][_0x5f3662(0x1)]('\\x20'));\n    let paintedRow = 0x0;\n    let paintedColumn = 0x0;\n    let paintedCell = 0x0;\n    while (0x1) {\n        if (W >= H) {\n            paintedCell += W - paintedColumn;\n            paintedRow++;\n        } else {\n            paintedCell += H - paintedRow;\n            paintedColumn++;\n        }\n        if (paintedCell >= N)\n            break;\n    }\n    console[_0x5f3662(0x2)](paintedColumn + paintedRow);\n};\nmain(require('fs')['readFileSync'](a0_0x469f07(0x3), a0_0x469f07(0x4)));", "test_cases": [["3\n7\n10", "2"], ["14\n12\n112", "8"], ["2\n100\n200", "2"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet H = Number(input[0].split(' '))\n\tlet W = Number(input[1].split(' '))\n\tlet N = Number(input[2].split(' '))\n\tlet paintedRow = 0\n\tlet paintedColumn = 0\n\tlet paintedCell = 0\n\twhile(1) {\n\t\tif(W >= H) {\n\t\t\tpaintedCell += W - paintedColumn\n\t\t\tpaintedRow++\n\t\t} else {\n\t\t\tpaintedCell += H - paintedRow\n\t\t\tpaintedColumn++\n\t\t}\n\t\tif(paintedCell >= N) break\n\t}\n\tconsole.log(paintedColumn + paintedRow)\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03005_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x44ae9b = a0_0x329e;\nfunction a0_0x329e(tjmuBc, key) {\n    const stringArray = a0_0x1d51();\n    a0_0x329e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x329e(tjmuBc, key);\n}\nconst main = arg => {\n    const _0x3c8db1 = a0_0x329e;\n    arg = arg[_0x3c8db1(0x0)]()[_0x3c8db1(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0][_0x3c8db1(0x1)]('\\x20')[0x0]);\n    const K = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    console[_0x3c8db1(0x2)](K === 0x1 ? 0x0 : N - K);\n};\nfunction a0_0x1d51() {\n    const _0x140017 = [\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1d51 = function () {\n        return _0x140017;\n    };\n    return a0_0x1d51();\n}\nmain(require('fs')[a0_0x44ae9b(0x3)]('/dev/stdin', a0_0x44ae9b(0x4)));", "test_cases": [["3 2", "1"], ["3 1", "0"], ["8 5", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n\n    console.log(K === 1 ? 0 : N - K);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03082_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1fcff7 = a0_0x1e80;\nfunction a0_0x2f61() {\n    const _0x450aaf = [\n        'shift',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'sort',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2f61 = function () {\n        return _0x450aaf;\n    };\n    return a0_0x2f61();\n}\nfunction a0_0x1e80(OEyJTb, key) {\n    const stringArray = a0_0x2f61();\n    a0_0x1e80 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e80(OEyJTb, key);\n}\nfunction Main(input) {\n    const _0x1a4c5e = a0_0x1e80;\n    let lines = input['split']('\\x0a');\n    let NX = lines[_0x1a4c5e(0x0)]()[_0x1a4c5e(0x1)]()['split'](/\\s/)['map'](v => v - 0x0);\n    let n = NX[0x0], x = NX[0x1];\n    let S = lines[_0x1a4c5e(0x0)]()[_0x1a4c5e(0x1)]()[_0x1a4c5e(0x2)](/\\s/)[_0x1a4c5e(0x3)](v => v - 0x0);\n    const MOD = 0x3b9aca00 + 0x7, MAX_N = 0xd2, MAX_VAL = 0x186a0 + 0xa;\n    const add = (a, b) => (a + b) % MOD;\n    const mul = (a, b) => a * b % MOD;\n    let dp = new Array(MAX_N)[_0x1a4c5e(0x4)](0x0)[_0x1a4c5e(0x3)](() => new Array(MAX_VAL)['fill'](-0x1));\n    const rec = (pos, rem) => {\n        if (pos == n)\n            return rem;\n        let ret = dp[pos][rem];\n        if (ret != -0x1)\n            return ret;\n        ret = 0x0;\n        dp[pos][rem] = add(ret, rec(pos + 0x1, rem % S[pos]));\n        dp[pos][rem] = add(dp[pos][rem], mul(n - pos - 0x1, rec(pos + 0x1, rem)));\n        return dp[pos][rem];\n    };\n    S[_0x1a4c5e(0x5)]((a, b) => b - a);\n    console[_0x1a4c5e(0x6)](rec(0x0, x));\n}\nMain(require('fs')['readFileSync'](a0_0x1fcff7(0x7), a0_0x1fcff7(0x8)));", "test_cases": [["2 19\n3 7", "3"], ["5 82\n22 11 6 5 13", "288"], ["10 100000\n50000 50001 50002 50003 50004 50005 50006 50007 50008 50009", "279669259"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let NX = lines.shift().trim().split(/\\s/).map((v) => v - 0);\n    let n = NX[0], x = NX[1];\n    let S = lines.shift().trim().split(/\\s/).map((v) => v - 0);\n    const MOD = 1e9 + 7, MAX_N = 210, MAX_VAL = 1e5 + 10;\n    const add = (a, b) => (a + b) % MOD;\n    const mul = (a, b) => (a * b) % MOD;\n    let dp = new Array(MAX_N).fill(0).map(() => new Array(MAX_VAL).fill(-1));\n    const rec = (pos, rem) => {\n        if (pos == n) return rem;\n        let ret = dp[pos][rem]\n        if (ret != -1) return ret;\n        ret = 0;\n        dp[pos][rem] = add(ret, rec(pos + 1, rem % S[pos]));\n        dp[pos][rem] = add(dp[pos][rem], mul(n - pos - 1, rec(pos + 1, rem)));\n        return dp[pos][rem];\n    }\n    S.sort((a, b) => b - a);\n    console.log(rec(0, x));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03192_1", "type": "JavaScript", "obfuscated": "var a0_0x18bc00 = a0_0x58c0;\nfunction Main(input) {\n    var _0x43d40c = a0_0x58c0;\n    input = input['split']('\\x0a');\n    S = input[0x0]['split']('');\n    var ans = 0x0;\n    for (i = 0x0; i < S[_0x43d40c(0x0)]; i++) {\n        if (S[i] == '2') {\n            ans++;\n        }\n    }\n    console['log']('%s', ans);\n}\nfunction a0_0x508d() {\n    var _0x51ca66 = [\n        'length',\n        'getElementById',\n        'input',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x508d = function () {\n        return _0x51ca66;\n    };\n    return a0_0x508d();\n}\nfunction a0_0x58c0(okQJtC, key) {\n    var stringArray = a0_0x508d();\n    a0_0x58c0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58c0(okQJtC, key);\n}\nfunction debug() {\n    var _0x2eda65 = a0_0x58c0;\n    var input = document[_0x2eda65(0x1)](_0x2eda65(0x2))['value'];\n    Main(input);\n}\nMain(require('fs')[a0_0x18bc00(0x3)](a0_0x18bc00(0x4), a0_0x18bc00(0x5)));", "test_cases": [["1222", "3"], ["3456", "0"], ["9592", "1"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  S= input[0].split(\"\");\n  var ans=0;\n  for(i=0;i<S.length;i++){\n    if(S[i]==\"2\"){\n      ans++;\n    }\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03387_1", "type": "JavaScript", "obfuscated": "function a0_0x26fc() {\n    var _0x784a65 = [\n        'split',\n        'map',\n        'sort',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x26fc = function () {\n        return _0x784a65;\n    };\n    return a0_0x26fc();\n}\nvar a0_0x3800b3 = a0_0x1035;\nfunction Main(s) {\n    var _0x1be15e = a0_0x1035;\n    var s = s['split']('\\x0a')[0x0][_0x1be15e(0x0)]('\\x20')[_0x1be15e(0x1)](e => parseInt(e, 0xa))[_0x1be15e(0x2)]((a, b) => b - a);\n    var cnt = 0x0;\n    if ((s[0x1] - s[0x2]) % 0x2 === 0x0) {\n        cnt += s[0x0] - s[0x1];\n        s[0x2] += cnt;\n        cnt += (s[0x0] - s[0x2]) / 0x2;\n    } else {\n        s[0x0]++;\n        s[0x1]++;\n        cnt++;\n        cnt += s[0x0] - s[0x1];\n        s[0x2] += s[0x0] - s[0x1];\n        cnt += (s[0x0] - s[0x2]) / 0x2;\n    }\n    console['log'](cnt);\n}\nfunction a0_0x1035(nWfsAv, key) {\n    var stringArray = a0_0x26fc();\n    a0_0x1035 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1035(nWfsAv, key);\n}\nMain(require('fs')[a0_0x3800b3(0x3)](a0_0x3800b3(0x4), 'utf8'));", "test_cases": [["2 5 4", "2"], ["2 6 3", "5"], ["31 41 5", "23"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\")[0].split(\" \").map(e => parseInt(e, 10)).sort((a, b) => b - a);\n  var cnt = 0;\n  if ((s[1] - s[2]) % 2 === 0) {\n    cnt += s[0] - s[1];\n    s[2] += cnt;\n    cnt += (s[0] - s[2]) / 2;\n  } else {\n    s[0]++;\n    s[1]++;\n    cnt++;\n    cnt += s[0] - s[1];\n    s[2] += s[0] - s[1];\n    cnt += (s[0] - s[2]) / 2;\n  }\n  console.log(cnt);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03739_1", "type": "JavaScript", "obfuscated": "var a0_0x57eaf6 = a0_0x2c12;\nfunction Main(s) {\n    var _0x5824bd = a0_0x2c12;\n    var s = s[_0x5824bd(0x0)]('\\x0a');\n    var n = parseInt(s[0x0], 0xa);\n    var a = s[0x1][_0x5824bd(0x0)]('\\x20')['map'](e => parseInt(e, 0xa));\n    var acc = 0x0, cnt = 0x0, arr = [];\n    for (var i = 0x0; i < n; i++) {\n        acc += a[i];\n        if (i === 0x0) {\n            if (_0x5824bd(0x1) === _0x5824bd(0x1)) {\n                if (acc === 0x0) {\n                    if (a[i + 0x1] >= 0x0) {\n                        if (_0x5824bd(0x2) !== _0x5824bd(0x2)) {\n                            cnt += Math[_0x5824bd(0x3)](acc) + 0x1;\n                            acc += Math[_0x5824bd(0x3)](acc) + 0x1;\n                        } else {\n                            acc -= a[i + 0x1] - 0x1;\n                            if (acc === 0x0)\n                                acc--;\n                            cnt += Math[_0x5824bd(0x3)](acc);\n                        }\n                    } else {\n                        if ('nvNca' !== 'nvNca') {\n                            if (a[i + 0x1] >= 0x0) {\n                                acc -= a[i + 0x1] - 0x1;\n                                if (acc === 0x0)\n                                    acc--;\n                                cnt += Math[_0x5824bd(0x3)](acc);\n                            } else {\n                                acc += Math['abs'](a[i + 0x1]) - 0x1;\n                                if (acc === 0x0)\n                                    acc++;\n                                cnt += acc;\n                            }\n                        } else {\n                            acc += Math[_0x5824bd(0x3)](a[i + 0x1]) - 0x1;\n                            if (acc === 0x0)\n                                acc++;\n                            cnt += acc;\n                        }\n                    }\n                }\n            } else {\n                acc += Math['abs'](a[i + 0x1]) - 0x1;\n                if (acc === 0x0)\n                    acc++;\n                cnt += acc;\n            }\n        } else {\n            if ('lZGfO' !== _0x5824bd(0x4)) {\n                if (acc >= 0x0) {\n                    cnt += acc + 0x1;\n                    acc -= acc + 0x1;\n                }\n            } else {\n                if (arr[i - 0x1] > 0x0) {\n                    if ('EjUIf' === _0x5824bd(0x5)) {\n                        if (acc <= 0x0) {\n                            cnt += Math['abs'](acc) + 0x1;\n                            acc += Math[_0x5824bd(0x3)](acc) + 0x1;\n                        }\n                    } else {\n                        if (acc >= 0x0) {\n                            cnt += acc + 0x1;\n                            acc -= acc + 0x1;\n                        }\n                    }\n                } else {\n                    if (acc <= 0x0) {\n                        if (_0x5824bd(0x6) === _0x5824bd(0x6)) {\n                            cnt += Math[_0x5824bd(0x3)](acc) + 0x1;\n                            acc += Math['abs'](acc) + 0x1;\n                        } else {\n                            cnt += acc + 0x1;\n                            acc -= acc + 0x1;\n                        }\n                    }\n                }\n            }\n        }\n        arr[_0x5824bd(0x7)](acc);\n    }\n    console[_0x5824bd(0x8)](cnt);\n}\nfunction a0_0x35b5() {\n    var _0xa8ecb1 = [\n        'split',\n        'OwfGw',\n        'HYCno',\n        'abs',\n        'lZGfO',\n        'Auqnz',\n        'OensP',\n        'push',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x35b5 = function () {\n        return _0xa8ecb1;\n    };\n    return a0_0x35b5();\n}\nfunction a0_0x2c12(jUwHGU, key) {\n    var stringArray = a0_0x35b5();\n    a0_0x2c12 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c12(jUwHGU, key);\n}\nMain(require('fs')[a0_0x57eaf6(0x9)](a0_0x57eaf6(0xa), a0_0x57eaf6(0xb)));", "test_cases": [["4\n1 -3 1 0", "4"], ["5\n3 -6 4 -5 7", "0"], ["6\n-1 4 3 2 -5 4", "8"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\");\n  var n = parseInt(s[0], 10);\n  var a = s[1].split(\" \").map(e => parseInt(e, 10));\n  var acc = 0, cnt = 0, arr = [];\n  for (var i = 0; i < n; i++) {\n    acc += a[i];\n    if (i === 0) {\n      if (acc === 0) {\n        if (a[i + 1] >= 0) {\n          acc -= (a[i + 1] - 1);\n          if (acc === 0) acc--;\n          cnt += Math.abs(acc);\n        } else {\n          acc += (Math.abs(a[i + 1]) - 1);\n          if (acc === 0) acc++;\n          cnt += acc;\n        }\n      }\n    } else {\n      if (arr[i - 1] > 0) {\n        if (acc >= 0) {\n          cnt += (acc + 1);\n          acc -= (acc + 1);\n        }\n      } else {\n        if (acc <= 0) {\n          cnt += (Math.abs(acc) + 1);\n          acc += (Math.abs(acc) + 1);\n        }\n      }\n    }\n    arr.push(acc);\n  }\n  console.log(cnt);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03964_1", "type": "JavaScript", "obfuscated": "var a0_0x2641bb = a0_0x51cc;\nfunction Main(input) {\n    var _0x22581a = a0_0x51cc;\n    input = input[_0x22581a(0x0)]('\\x0a');\n    var n = parseInt(input[0x0]);\n    t = new Array(n)[_0x22581a(0x1)](0x0);\n    a = new Array(n)['fill'](0x0);\n    for (i = 0x0; i < n; i++) {\n        t[i] = parseInt(input[i + 0x1]['split']('\\x20')[0x0]);\n        a[i] = parseInt(input[i + 0x1][_0x22581a(0x0)]('\\x20')[0x1]);\n    }\n    var tvote = t[0x0];\n    var avote = a[0x0];\n    for (i = 0x1; i < n; i++) {\n        if (Math[_0x22581a(0x2)](tvote / t[i]) * t[i] / t[i] * a[i] >= avote) {\n            tvote = Math[_0x22581a(0x2)](tvote / t[i]) * t[i];\n            avote = Math['ceil'](tvote / t[i]) * t[i] / t[i] * a[i];\n        } else {\n            tvote = Math[_0x22581a(0x2)](avote / a[i]) * a[i] / a[i] * t[i];\n            avote = Math[_0x22581a(0x2)](avote / a[i]) * a[i];\n        }\n    }\n    var ans = avote + tvote;\n    console[_0x22581a(0x3)]('%s', ans);\n}\nMain(require('fs')[a0_0x2641bb(0x4)](a0_0x2641bb(0x5), 'utf8'));\nfunction a0_0x51cc(pGrrLG, key) {\n    var stringArray = a0_0x52e1();\n    a0_0x51cc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x51cc(pGrrLG, key);\n}\nfunction a0_0x52e1() {\n    var _0xfd0357 = [\n        'split',\n        'fill',\n        'ceil',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x52e1 = function () {\n        return _0xfd0357;\n    };\n    return a0_0x52e1();\n}", "test_cases": [["3\n2 3\n1 1\n3 2", "10"], ["4\n1 1\n1 1\n1 5\n1 100", "101"], ["5\n3 10\n48 17\n31 199\n231 23\n3 2", "6930"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  t = new Array(n).fill(0);\n  a = new Array(n).fill(0);\n  for(i=0;i<n;i++){\n      t[i]=parseInt(input[i+1].split(\" \")[0]);\n      a[i]=parseInt(input[i+1].split(\" \")[1]);\n  }\n  var tvote=t[0];\n  var avote=a[0];\n  \n  for(i=1;i<n;i++){\n      if(((Math.ceil(tvote/t[i])*t[i])/t[i])*a[i]>=avote){\n          tvote=Math.ceil(tvote/t[i])*t[i];\n          avote=((Math.ceil(tvote/t[i])*t[i])/t[i])*a[i];\n      }else{\n          tvote=((Math.ceil(avote/a[i])*a[i])/a[i])*t[i];\n          avote=Math.ceil(avote/a[i])*a[i];\n      }\n  }\n  var ans=avote+tvote;\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02240_1", "type": "JavaScript", "obfuscated": "var a0_0x3859e2 = a0_0x8e90;\nconfig = {\n    'input': a0_0x3859e2(0x0),\n    'newline': '\\x0a'\n};\nfunction a0_0x8e90(CxccaP, key) {\n    var stringArray = a0_0x1a11();\n    a0_0x8e90 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x8e90(CxccaP, key);\n}\nline = require('fs')['readFileSync'](config['input'], 'ascii')[a0_0x3859e2(0x1)]()[a0_0x3859e2(0x2)](config[a0_0x3859e2(0x3)])[a0_0x3859e2(0x4)](function (line) {\n    var _0x1de156 = a0_0x8e90;\n    return line[_0x1de156(0x2)]('\\x20')['map'](Number);\n});\nn = line[0x0][0x0];\nm = line[0x0][0x1];\nq = line[m + 0x1][0x0];\nadj = new Array(n);\nfor (i = 0x0; i < n; i++)\n    adj[i] = null;\nfunction a0_0x1a11() {\n    var _0x28bf94 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'newline',\n        'map',\n        'slice',\n        'sort',\n        'yes'\n    ];\n    a0_0x1a11 = function () {\n        return _0x28bf94;\n    };\n    return a0_0x1a11();\n}\nconn = line[a0_0x3859e2(0x5)](0x1, m + 0x1);\nconn[a0_0x3859e2(0x6)](function (a, b) {\n    if (a[0x0] === b[0x0])\n        return a[0x1] - b[0x1];\n    return a[0x0] - b[0x0];\n});\nfor (i in conn) {\n    min0 = id0 = conn[i][0x0];\n    min1 = id1 = conn[i][0x1];\n    while (adj[min0] !== null)\n        min0 = adj[min0];\n    while (adj[min1] !== null)\n        min1 = adj[min1];\n    min = Math['min'](min0, min1);\n    if (id0 !== min)\n        adj[id0] = min;\n    if (id1 !== min)\n        adj[id1] = min;\n}\nq = line['slice'](m + 0x2, m + 0x2 + q);\nfor (i in q) {\n    min0 = q[i][0x0];\n    min1 = q[i][0x1];\n    while (adj[min0] !== null)\n        min0 = adj[min0];\n    while (adj[min1] !== null)\n        min1 = adj[min1];\n    console['log'](min0 === min1 ? a0_0x3859e2(0x7) : 'no');\n}", "test_cases": [["10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3", "yes\nyes\nno"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline)\n  .map(function (line) { return line.split(' ').map(Number); });\n\nn = line[0][0];\nm = line[0][1];\nq = line[m+1][0];\n\nadj = new Array(n);\nfor (i = 0; i < n; i++) adj[i] = null;\n\nconn = line.slice(1, m+1);\nconn.sort(function (a, b) {\n  if (a[0] === b[0]) return a[1] - b[1];\n  return a[0] - b[0];\n});\n\nfor (i in conn) {\n  min0 = id0 = conn[i][0];\n  min1 = id1 = conn[i][1];\n  while (adj[min0] !== null) min0 = adj[min0];\n  while (adj[min1] !== null) min1 = adj[min1];\n  min = Math.min(min0, min1);\n  if (id0 !== min) adj[id0] = min;\n  if (id1 !== min) adj[id1] = min;\n}\n\nq = line.slice(m+2, m+2+q);\nfor (i in q) {\n  min0 = q[i][0];\n  min1 = q[i][1];\n  while (adj[min0] !== null) min0 = adj[min0];\n  while (adj[min1] !== null) min1 = adj[min1];\n  console.log((min0 === min1) ? 'yes' : 'no');\n}", "language": "JavaScript"}
{"filename": "p02272_1", "type": "JavaScript", "obfuscated": "const a0_0x112dac = a0_0x2b98;\nprocess[a0_0x112dac(0x0)][a0_0x112dac(0x1)]();\nfunction a0_0x2b98(lLbGzf, key) {\n    const stringArray = a0_0x150f();\n    a0_0x2b98 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b98(lLbGzf, key);\n}\nprocess[a0_0x112dac(0x0)][a0_0x112dac(0x2)]('utf8');\nfunction a0_0x150f() {\n    const _0x2d24f4 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'split',\n        'push',\n        'MAX_SAFE_INTEGER',\n        'uIYIn',\n        'floor',\n        'log',\n        'join'\n    ];\n    a0_0x150f = function () {\n        return _0x2d24f4;\n    };\n    return a0_0x150f();\n}\nlet input = '';\nprocess[a0_0x112dac(0x0)]['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x112dac(0x0)]['on']('end', function () {\n    const _0x799ee = a0_0x2b98;\n    main(input[_0x799ee(0x3)]('\\x0a'));\n});\nlet count = 0x0;\nfunction merge(A, left, mid, right) {\n    const _0x57e3cb = a0_0x2b98;\n    let n1 = mid - left;\n    let n2 = right - mid;\n    let L = [];\n    let R = [];\n    for (let i = 0x0; i < n1; i++)\n        L['push'](A[left + i]);\n    for (let i = 0x0; i < n2; i++)\n        R[_0x57e3cb(0x4)](A[mid + i]);\n    L[_0x57e3cb(0x4)](Number[_0x57e3cb(0x5)]);\n    R[_0x57e3cb(0x4)](Number[_0x57e3cb(0x5)]);\n    let i = 0x0, j = 0x0;\n    for (let k = left; k < right; k++) {\n        if (_0x57e3cb(0x6) === _0x57e3cb(0x6)) {\n            if (L[i] < R[j])\n                A[k] = L[i++];\n            else\n                A[k] = R[j++];\n            count++;\n        } else {\n            if (left + 0x1 >= right)\n                return;\n            let mid = Math['floor']((left + right) / 0x2);\n            mergeSort(A, left, mid);\n            mergeSort(A, mid, right);\n            merge(A, left, mid, right);\n        }\n    }\n}\nfunction mergeSort(A, left, right, count) {\n    const _0x2925c3 = a0_0x2b98;\n    if (left + 0x1 >= right)\n        return;\n    let mid = Math[_0x2925c3(0x7)]((left + right) / 0x2);\n    mergeSort(A, left, mid);\n    mergeSort(A, mid, right);\n    merge(A, left, mid, right);\n}\nfunction main(lines) {\n    const _0x4f4cfe = a0_0x2b98;\n    let n = Number(lines[0x0]);\n    let A = lines[0x1]['split']('\\x20')['map'](Number);\n    mergeSort(A, 0x0, n);\n    console[_0x4f4cfe(0x8)](A[_0x4f4cfe(0x9)]('\\x20'));\n    console[_0x4f4cfe(0x8)](count);\n}", "test_cases": [["10\n8 5 9 2 6 3 7 1 10 4", "1 2 3 4 5 6 7 8 9 10\n34"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nlet input = '';\nprocess.stdin.on('data', function(chunk) {input += chunk;});\nprocess.stdin.on('end', function() {main(input.split(\"\\n\"));});\n\nlet count = 0;\n\nfunction merge(A,left,mid,right) {\n\tlet n1 = mid - left;\n\tlet n2 = right - mid;\n\tlet L = [];\n\tlet R = [];\n\tfor (let i = 0; i < n1; i++) L.push(A[left+i]);\n\tfor (let i = 0; i < n2; i++) R.push(A[mid+i]);\n\tL.push(Number.MAX_SAFE_INTEGER);\n\tR.push(Number.MAX_SAFE_INTEGER);\n\n\tlet i = 0,j = 0;\n\tfor (let k = left; k < right; k++) {\n\t\tif (L[i] < R[j]) A[k] = L[i++];\n\t\telse A[k] = R[j++];\n\t\tcount++;\n\t}\n}\n\nfunction mergeSort(A,left,right,count) {\n\tif (left + 1 >= right) return;\n\tlet mid = Math.floor((left + right) / 2);\n\tmergeSort(A,left,mid);\n\tmergeSort(A,mid,right);\n\tmerge(A,left,mid,right);\n}\n\nfunction main(lines) {\n\tlet n = Number(lines[0]);\n\tlet A = lines[1].split(\" \").map(Number);\n\tmergeSort(A,0,n);\n\n\tconsole.log(A.join(\" \"));\n\tconsole.log(count);\n}\n", "language": "JavaScript"}
{"filename": "p02386_1", "type": "JavaScript", "obfuscated": "var a0_0x4cb5e2 = a0_0x4bdb;\nfunction move(d1, d2, d3, d4, d5, d6) {\n    var _0x34df62 = a0_0x4bdb;\n    var x = this[_0x34df62(0x0)]();\n    if (x == 'N')\n        return [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    if (x == 'E')\n        return [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n}\nfunction roll(d1, d2, d3, d4, d5, d6) {\n    return [\n        d1,\n        d3,\n        d5,\n        d2,\n        d4,\n        d6\n    ];\n}\nfunction rolls(arr) {\n    var _0xf274b6 = a0_0x4bdb;\n    for (var i = 0x0; i < 0x4; i++) {\n        if (_0xf274b6(0x1) !== 'djcel') {\n            return [\n                d1,\n                d3,\n                d5,\n                d2,\n                d4,\n                d6\n            ];\n        } else {\n            obj[arr[_0xf274b6(0x2)](',')] = !![];\n            arr = roll['apply'](null, arr);\n        }\n    }\n}\nvar input = require('fs')[a0_0x4cb5e2(0x3)](a0_0x4cb5e2(0x4), a0_0x4cb5e2(0x5));\nfunction a0_0x2ff7() {\n    var _0x24d49c = [\n        'toString',\n        'djcel',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'Yes',\n        'map',\n        'apply',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0x2ff7 = function () {\n        return _0x24d49c;\n    };\n    return a0_0x2ff7();\n}\nvar Arr = input['trim']()[a0_0x4cb5e2(0x6)]('\\x0a');\nvar n = Arr[a0_0x4cb5e2(0x7)]() - 0x0;\nfunction a0_0x4bdb(fOZMuw, key) {\n    var stringArray = a0_0x2ff7();\n    a0_0x4bdb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4bdb(fOZMuw, key);\n}\nvar OBJ = {};\nvar result = a0_0x4cb5e2(0x8);\nfor (var i = 0x0; i < n; i++) {\n    var obj = {};\n    var dice = Arr[i][a0_0x4cb5e2(0x6)]('\\x20')[a0_0x4cb5e2(0x9)](Number);\n    for (var j = 0x0; j < 0x4; j++) {\n        rolls(dice);\n        dice = move[a0_0x4cb5e2(0xa)]('N', dice);\n    }\n    dice = move[a0_0x4cb5e2(0xa)]('E', dice);\n    rolls(dice);\n    dice = move['apply']('E', dice);\n    dice = move[a0_0x4cb5e2(0xa)]('E', dice);\n    rolls(dice);\n    for (var k in obj) {\n        if (OBJ[a0_0x4cb5e2(0xb)](k))\n            result = 'No';\n        else\n            OBJ[k] = !![];\n    }\n    if (result == 'No')\n        break;\n}\nconsole[a0_0x4cb5e2(0xc)](result);", "test_cases": [["3\n1 2 3 4 5 6\n6 2 4 3 5 1\n6 5 4 3 2 1", "No"], ["3\n1 2 3 4 5 6\n6 5 4 3 2 1\n5 4 3 2 1 6", "Yes"]], "original": "function move(d1,d2,d3,d4,d5,d6){\n   var x=this.toString();\n   if(x==\"N\")return [d2,d6,d3,d4,d1,d5];\n   if(x==\"E\")return [d4,d2,d1,d6,d5,d3];\n}\nfunction roll(d1,d2,d3,d4,d5,d6){\n   return [d1,d3,d5,d2,d4,d6];\n}\nfunction rolls(arr){\n   for(var i=0;i<4;i++){\n      obj[arr.join(\",\")]=true;\n      arr=roll.apply(null,arr);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nvar OBJ={};\nvar result=\"Yes\";\nfor(var i=0;i<n;i++){\n   var obj={};\n   var dice=Arr[i].split(\" \").map(Number);\n   for(var j=0;j<4;j++){\n      rolls(dice);\n      dice=move.apply(\"N\",dice);\n   }\n   dice=move.apply(\"E\",dice);\n   rolls(dice);\n   dice=move.apply(\"E\",dice);\n   dice=move.apply(\"E\",dice);\n   rolls(dice);\n   for(var k in obj){\n      if(OBJ.hasOwnProperty(k))result= \"No\";\n      else OBJ[k]=true;\n   }\n   if(result==\"No\")break;\n}\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02400_1", "type": "JavaScript", "obfuscated": "var a0_0x4e4b01 = a0_0x5c99;\nvar lines = [];\nvar reader = require('readline')[a0_0x4e4b01(0x0)]({\n    'input': process[a0_0x4e4b01(0x1)],\n    'output': process[a0_0x4e4b01(0x2)]\n});\nfunction a0_0x5c99(GQQQkD, key) {\n    var stringArray = a0_0x39ff();\n    a0_0x5c99 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c99(GQQQkD, key);\n}\nreader['on']('line', function (line) {\n    var _0x3e3602 = a0_0x5c99;\n    var a = line[_0x3e3602(0x3)]('\\x20');\n    var b = parseInt(a[0x0], 0xa);\n    var c = b * b * Math['PI'];\n    var d = b * 0x2 * Math['PI'];\n    console[_0x3e3602(0x4)](c[_0x3e3602(0x5)](0x6) + '\\x20' + d['toFixed'](0x6));\n    process['exit']();\n});\nfunction a0_0x39ff() {\n    var _0x5bc7e0 = [\n        'createInterface',\n        'stdin',\n        'stdout',\n        'split',\n        'log',\n        'toFixed',\n        'end'\n    ];\n    a0_0x39ff = function () {\n        return _0x5bc7e0;\n    };\n    return a0_0x39ff();\n}\nprocess[a0_0x4e4b01(0x1)]['on'](a0_0x4e4b01(0x6), function () {\n});", "test_cases": [["2", "12.566371 12.566371"], ["3", "28.274334 18.849556"]], "original": "var lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var b = parseInt(a[0],10);\n  var c = b*b*Math.PI;\n  var d = b*2*Math.PI;\n  console.log(c.toFixed(6)+\" \"+d.toFixed(6));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02617_1", "type": "JavaScript", "obfuscated": "function a0_0x419e(RrmFsf, key) {\n    const stringArray = a0_0x235a();\n    a0_0x419e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x419e(RrmFsf, key);\n}\nfunction a0_0x235a() {\n    const _0x2692b9 = [\n        'readFileSync',\n        'utf8',\n        'split'\n    ];\n    a0_0x235a = function () {\n        return _0x2692b9;\n    };\n    return a0_0x235a();\n}\nconst a0_0x5b47f2 = a0_0x419e;\nconst [_n, ..._edges] = require('fs')[a0_0x5b47f2(0x0)]('/dev/stdin', a0_0x5b47f2(0x1))[a0_0x5b47f2(0x2)](/\\n/);\nconst n = Number(_n);\nlet result = n * (n + 0x1) * (n + 0x2) / 0x6;\nfor (const _edge of _edges) {\n    let [u, v] = _edge[a0_0x5b47f2(0x2)](/\\s/)['map'](Number);\n    if (u > v) {\n        [u, v] = [\n            v,\n            u\n        ];\n    }\n    result -= u * (n - v + 0x1);\n}\nconsole['log'](result);", "test_cases": [["3\n1 3\n2 3", "7"], ["2\n1 2", "3"], ["10\n5 3\n5 7\n8 9\n1 9\n9 10\n8 4\n7 4\n6 10\n7 2", "113"]], "original": "const [_n, ..._edges] = require('fs')\n  .readFileSync('/dev/stdin', 'utf8')\n  .split(/\\n/)\nconst n = Number(_n)\n\nlet result = (n * (n + 1) * (n + 2)) / 6\n\nfor (const _edge of _edges) {\n  let [u, v] = _edge.split(/\\s/).map(Number)\n  if (u > v) {\n    [u, v] = [v, u]\n  }\n  result -= u * (n - v + 1)\n}\nconsole.log(result)", "language": "JavaScript"}
{"filename": "p02648_1", "type": "JavaScript", "obfuscated": "const a0_0x62c58 = a0_0x1071;\nconsole[a0_0x62c58(0x0)](function (args) {\n    const _0x4e8490 = a0_0x1071;\n    const tmp = args[_0x4e8490(0x1)]()[_0x4e8490(0x2)]('\\x0a')[_0x4e8490(0x3)](r => r[_0x4e8490(0x2)]('\\x20')['map'](v => v | 0x0));\n    const N = tmp[0x0][0x0], Q = tmp[N + 0x1][0x0];\n    const V = [0x0], W = [0x0], v = [], L = [];\n    for (let i = 0x1; i <= N; i++) {\n        V[_0x4e8490(0x4)](tmp[i][0x0]);\n        W[_0x4e8490(0x4)](tmp[i][0x1]);\n    }\n    let Lmax = 0x0;\n    for (let i = 0x1; i <= Q; i++) {\n        if (_0x4e8490(0x5) !== _0x4e8490(0x5)) {\n            V[_0x4e8490(0x4)](tmp[i][0x0]);\n            W[_0x4e8490(0x4)](tmp[i][0x1]);\n        } else {\n            v['push'](tmp[N + 0x1 + i][0x0]);\n            L[_0x4e8490(0x4)](tmp[N + 0x1 + i][0x1]);\n            if (L[i - 0x1] > Lmax)\n                Lmax = L[i - 0x1];\n        }\n    }\n    const dp = [Array(Lmax + 0x1)[_0x4e8490(0x6)](0x0)];\n    for (let i = 0x1; i <= N; i++) {\n        dp[i] = [];\n        for (let w = 0x0; w <= Lmax; w++) {\n            if (w >= W[i])\n                dp[i][w] = Math['max'](dp[i >> 0x1][w - W[i]] + V[i], dp[i >> 0x1][w]);\n            else\n                dp[i][w] = dp[i >> 0x1][w];\n        }\n    }\n    const max = [];\n    for (let i = 0x0; i < Q; i++) {\n        if (_0x4e8490(0x7) === _0x4e8490(0x7)) {\n            max[_0x4e8490(0x4)](dp[v[i]][L[i]]);\n        } else {\n            dp[i] = [];\n            for (let w = 0x0; w <= Lmax; w++) {\n                if (w >= W[i])\n                    dp[i][w] = Math[_0x4e8490(0x8)](dp[i >> 0x1][w - W[i]] + V[i], dp[i >> 0x1][w]);\n                else\n                    dp[i][w] = dp[i >> 0x1][w];\n            }\n        }\n    }\n    return max[_0x4e8490(0x9)]('\\x0a');\n}(require('fs')['readFileSync'](a0_0x62c58(0xa), a0_0x62c58(0xb))));\nfunction a0_0x1071(izEoRD, key) {\n    const stringArray = a0_0x2762();\n    a0_0x1071 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1071(izEoRD, key);\n}\nfunction a0_0x2762() {\n    const _0x1d5203 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'push',\n        'fNgrG',\n        'fill',\n        'pwFbk',\n        'max',\n        'join',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2762 = function () {\n        return _0x1d5203;\n    };\n    return a0_0x2762();\n}", "test_cases": [["3\n1 2\n2 3\n3 4\n3\n1 1\n2 5\n3 5", "0\n3\n3"], ["15\n123 119\n129 120\n132 112\n126 109\n118 103\n115 109\n102 100\n130 120\n105 105\n132 115\n104 102\n107 107\n127 116\n121 104\n121 115\n8\n8 234\n9 244\n10 226\n11 227\n12 240\n13 237\n14 206\n15 227", "256\n255\n250\n247\n255\n259\n223\n253"]], "original": "console.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const N = tmp[0][0], Q = tmp[N+1][0];\n  const V = [0], W = [0], v = [], L = [];\n  for ( let i = 1; i <= N; i++ ) {\n    V.push( tmp[i][0] );\n    W.push( tmp[i][1] );\n  }\n  let Lmax = 0;\n  for ( let i = 1; i <= Q; i++ ) {\n    v.push( tmp[N+1+i][0] );\n    L.push( tmp[N+1+i][1] );\n    if ( L[i-1] > Lmax ) Lmax = L[i-1];\n  }\n  const dp = [Array(Lmax+1).fill(0)];\n  for ( let i = 1; i <= N; i++ ) {\n    dp[i] = [];\n    for ( let w = 0; w <= Lmax; w++ ) {\n      if ( w >= W[i] ) dp[i][w] = Math.max( dp[i>>1][w-W[i]] + V[i], dp[i>>1][w] );\n      else dp[i][w] = dp[i>>1][w];\n    }\n  }\n  const max = [];\n  for ( let i = 0; i < Q; i++ ) {\n    max.push( dp[v[i]][L[i]] );\n  }\n  return max.join('\\n');\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02806_1", "type": "JavaScript", "obfuscated": "var a0_0x448ce2 = a0_0x2131;\nfunction a0_0x2131(MtHDxF, key) {\n    var stringArray = a0_0x164b();\n    a0_0x2131 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2131(MtHDxF, key);\n}\nfunction a0_0x164b() {\n    var _0x2fcfe8 = [\n        'split',\n        'map',\n        'length',\n        'indexOf',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x164b = function () {\n        return _0x2fcfe8;\n    };\n    return a0_0x164b();\n}\nfunction Main(input) {\n    var _0x44cb4e = a0_0x2131;\n    var lines = input[_0x44cb4e(0x0)]('\\x0a');\n    var titles = lines[_0x44cb4e(0x1)](l => l[_0x44cb4e(0x0)]('\\x20')[0x0])['splice'](0x1, lines[_0x44cb4e(0x2)] - 0x2);\n    var sleptAt = titles[_0x44cb4e(0x3)](lines[lines[_0x44cb4e(0x2)] - 0x1]);\n    var sum = 0x0;\n    for (var i = sleptAt + 0x2; i < lines[_0x44cb4e(0x2)] - 0x1; i++) {\n        sum += Number(lines[i][_0x44cb4e(0x0)]('\\x20')[0x1]);\n    }\n    console[_0x44cb4e(0x4)](sum);\n}\nMain(require('fs')[a0_0x448ce2(0x5)]('/dev/stdin', a0_0x448ce2(0x6)));", "test_cases": [["3\ndwango 2\nsixth 5\nprelims 25\ndwango", "30"], ["1\nabcde 1000\nabcde", "0"], ["15\nypnxn 279\nkgjgwx 464\nqquhuwq 327\nrxing 549\npmuduhznoaqu 832\ndagktgdarveusju 595\nwunfagppcoi 200\ndhavrncwfw 720\njpcmigg 658\nwrczqxycivdqn 639\nmcmkkbnjfeod 992\nhtqvkgkbhtytsz 130\ntwflegsjz 467\ndswxxrxuzzfhkp 989\nszfwtzfpnscgue 958\npmuduhznoaqu", "6348"]], "original": "function Main(input) {\n\tvar lines = input.split(\"\\n\");\n\tvar titles = lines.map(l => l.split(' ')[0]).splice(1, lines.length - 2)\n\tvar sleptAt = titles.indexOf(lines[lines.length - 1])\n\tvar sum = 0\n\tfor(var i = sleptAt + 2; i < lines.length - 1 ; i ++) {\n\t\tsum+= Number(lines[i].split(' ')[1])\n\t}\n\tconsole.log(sum)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02853_1", "type": "JavaScript", "obfuscated": "const a0_0x249400 = a0_0x88d0;\nfunction a0_0x3cab() {\n    const _0x4d5ea7 = [\n        'trim',\n        'floor',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3cab = function () {\n        return _0x4d5ea7;\n    };\n    return a0_0x3cab();\n}\nfunction a0_0x88d0(ZdJYEh, key) {\n    const stringArray = a0_0x3cab();\n    a0_0x88d0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x88d0(ZdJYEh, key);\n}\nfunction Main(input) {\n    const _0x22a5bf = a0_0x88d0;\n    const chars = input[_0x22a5bf(0x0)]()['split']('\\x20');\n    const x = Math['floor'](chars[0x0]);\n    const y = Math[_0x22a5bf(0x1)](chars[0x1]);\n    let ans = 0x0;\n    if (x === 0x1 && y === 0x1) {\n        ans += 0x61a80;\n    }\n    if (x === 0x1)\n        ans += 0x493e0;\n    if (y === 0x1)\n        ans += 0x493e0;\n    if (x === 0x2)\n        ans += 0x30d40;\n    if (y === 0x2)\n        ans += 0x30d40;\n    if (x === 0x3)\n        ans += 0x186a0;\n    if (y === 0x3)\n        ans += 0x186a0;\n    console[_0x22a5bf(0x2)](ans);\n}\nMain(require('fs')[a0_0x249400(0x3)]('/dev/stdin', a0_0x249400(0x4)));", "test_cases": [["1 1", "1000000"], ["3 101", "100000"], ["4 4", "0"]], "original": "function Main(input) {\n  const chars = input.trim().split(' ');\n\n  const x = Math.floor(chars[0]);\n  const y = Math.floor(chars[1]);\n  \n  let ans = 0;\n  \n  if (x === 1 && y === 1) {\n    ans += 400000;\n  }\n  \n  if (x === 1) ans += 300000;\n  if (y === 1) ans += 300000;\n  if (x === 2) ans += 200000;\n  if (y === 2) ans += 200000;\n  if (x === 3) ans += 100000;\n  if (y === 3) ans += 100000;\n  \n  console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02913_1", "type": "JavaScript", "obfuscated": "var a0_0x519375 = a0_0x881a;\nfunction a0_0x881a(qfDqDZ, key) {\n    var stringArray = a0_0x41e0();\n    a0_0x881a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x881a(qfDqDZ, key);\n}\nfunction a0_0x41e0() {\n    var _0x1d6fa2 = [\n        'substring',\n        'lastIndexOf',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'split'\n    ];\n    a0_0x41e0 = function () {\n        return _0x1d6fa2;\n    };\n    return a0_0x41e0();\n}\nconst main = input => {\n    var _0xb2cd0b = a0_0x881a;\n    var N = input[0x0] - 0x0;\n    var str = input[0x1];\n    var ans = 0x0;\n    var min = 0x0;\n    var max = ~~(N / 0x2);\n    start:\n        while (min <= max) {\n            var ave = ~~((min + max) / 0x2);\n            for (var i = 0x0; i < N - ave; i++) {\n                var base = str[_0xb2cd0b(0x0)](i, i + ave);\n                if (str[_0xb2cd0b(0x1)](base) >= i + ave) {\n                    min = ave + 0x1;\n                    ans = ave;\n                    continue start;\n                }\n            }\n            max = ave - 0x1;\n        }\n    console[_0xb2cd0b(0x2)](ans);\n};\nmain(require('fs')[a0_0x519375(0x3)](a0_0x519375(0x4), a0_0x519375(0x5))['trim']()[a0_0x519375(0x6)]('\\x0a'));", "test_cases": [["5\nababa", "2"], ["2\nxy", "0"], ["13\nstrangeorange", "5"]], "original": "const main = (input) => {\n  var N = input[0]-0;\n  var str = input[1];\n  var ans = 0;\n  var min = 0;\n  var max = ~~(N/2);\n  start:while(min<=max){\n    var ave = ~~((min+max)/2);\n    for(var i=0;i<N-ave;i++){\n      var base = str.substring(i,i+ave);\n      if(str.lastIndexOf(base) >= i+ave){\n        min = ave+1;\n        ans = ave;\n        continue start;\n      }\n    }\n    max = ave-1;\n  }\n  console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03045_1", "type": "JavaScript", "obfuscated": "function a0_0x3171() {\n    var _0x7c5207 = [\n        'length',\n        'pop',\n        'split',\n        'SGAyF',\n        'WpBYe',\n        'PiHvZ',\n        'forEach',\n        'log',\n        'reduce',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3171 = function () {\n        return _0x7c5207;\n    };\n    return a0_0x3171();\n}\nfunction a0_0x3c05(GihwXu, key) {\n    var stringArray = a0_0x3171();\n    a0_0x3c05 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c05(GihwXu, key);\n}\nvar a0_0x36b8bb = a0_0x3c05;\nfunction Main(input) {\n    var _0x189096 = a0_0x3c05;\n    input = input['split']('\\x0a');\n    if (input[input[_0x189096(0x0)] - 0x1] === '') {\n        input[_0x189096(0x1)]();\n    }\n    const N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    const M = input[0x0][_0x189096(0x2)]('\\x20')[0x1] - 0x0;\n    var parent = new Array(N + 0x1)['fill'](0x0);\n    for (var i = 0x1; i <= M; i++) {\n        if (_0x189096(0x3) === _0x189096(0x4)) {\n            if (root(input[i][_0x189096(0x2)]('\\x20')[0x0] - 0x0) !== root(input[i][_0x189096(0x2)]('\\x20')[0x1] - 0x0)) {\n                parent[root(input[i][_0x189096(0x2)]('\\x20')[0x1] - 0x0)] = root(input[i][_0x189096(0x2)]('\\x20')[0x0]) - 0x0;\n            }\n        } else {\n            if (root(input[i]['split']('\\x20')[0x0] - 0x0) !== root(input[i][_0x189096(0x2)]('\\x20')[0x1] - 0x0)) {\n                if ('aCFAV' !== _0x189096(0x5)) {\n                    parent[root(input[i][_0x189096(0x2)]('\\x20')[0x1] - 0x0)] = root(input[i]['split']('\\x20')[0x0]) - 0x0;\n                } else {\n                    var array = [];\n                    var point = node;\n                    while (parent[point] !== 0x0) {\n                        array['push'](point);\n                        point = parent[point];\n                    }\n                    array[_0x189096(0x6)](e => {\n                        parent[e] = point;\n                    });\n                    return point;\n                }\n            }\n        }\n    }\n    console[_0x189096(0x7)](parent[_0x189096(0x8)]((acc, cur) => {\n        return acc + (cur === 0x0 ? 0x1 : 0x0);\n    }, 0x0) - 0x1);\n    function root(node) {\n        var _0x445ca7 = a0_0x3c05;\n        var array = [];\n        var point = node;\n        while (parent[point] !== 0x0) {\n            array[_0x445ca7(0x9)](point);\n            point = parent[point];\n        }\n        array[_0x445ca7(0x6)](e => {\n            parent[e] = point;\n        });\n        return point;\n    }\n}\nMain(require('fs')[a0_0x36b8bb(0xa)](a0_0x36b8bb(0xb), a0_0x36b8bb(0xc)));", "test_cases": [["3 1\n1 2 1", "2"], ["6 5\n1 2 1\n2 3 2\n1 3 3\n4 5 4\n5 6 5", "2"], ["100000 1\n1 100000 100", "99999"]], "original": "\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  var parent=new Array(N+1).fill(0);\n  for(var i=1;i<=M;i++){\n    if(root(input[i].split(' ')[0]-0)!==root(input[i].split(' ')[1]-0)){\n       parent[root(input[i].split(' ')[1]-0)]=root(input[i].split(' ')[0])-0;\n    }\n  }\n  console.log(parent.reduce((acc,cur)=>{\n    return acc+(cur===0?1:0);\n  },0)-1);\n  \n  function root(node){\n    var array=[];\n    var point=node;\n    while(parent[point]!==0){\n      array.push(point);\n      point=parent[point];\n    }\n    array.forEach(e=>{\n      parent[e]=point;\n    });\n    return point;\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03096_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x5ef698 = a0_0x4407;\nfunction a0_0x2342() {\n    var _0x5bb725 = [\n        'trim',\n        'map',\n        'shift',\n        'not\\x20yet',\n        'pow',\n        'pop',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2342 = function () {\n        return _0x5bb725;\n    };\n    return a0_0x2342();\n}\nfunction Main(input) {\n    var _0x2f191a = a0_0x4407;\n    input = input[_0x2f191a(0x0)]()['split'](/\\s+/)[_0x2f191a(0x1)](x => x - 0x0);\n    var N = input[_0x2f191a(0x2)]();\n    var last = [];\n    for (let i = 0x0; i < 0x1e8480; i++)\n        last[i] = _0x2f191a(0x3);\n    last[input[0x0]] = 0x0;\n    var dp = [0x1];\n    var M = Math[_0x2f191a(0x4)](0xa, 0x9) + 0x7;\n    for (let i = 0x1; i < N; i++) {\n        let c = input[i];\n        if (last[c] === _0x2f191a(0x3) || last[c] === i - 0x1) {\n            last[c] = i;\n            dp[i] = dp[i - 0x1];\n            continue;\n        }\n        dp[i] = (dp[i - 0x1] + dp[last[c]]) % M;\n        last[c] = i;\n    }\n    console['log'](dp[_0x2f191a(0x5)]());\n}\nfunction a0_0x4407(XvwUjH, key) {\n    var stringArray = a0_0x2342();\n    a0_0x4407 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4407(XvwUjH, key);\n}\nMain(require('fs')['readFileSync'](a0_0x5ef698(0x6), a0_0x5ef698(0x7)));", "test_cases": [["5\n1\n2\n1\n2\n2", "3"], ["6\n4\n2\n5\n4\n2\n4", "5"], ["7\n1\n3\n1\n2\n3\n3\n2", "5"]], "original": "\"use strict\"\nfunction Main(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  var N=input.shift();\n  var last=[];//last[hoge]で色hogeの最後の位置\n  for(let i=0;i<2000000;i++)last[i]=\"not yet\";\n  last[input[0]]=0;\n  var dp=[1];//dp[i]で石0~iまでの色の塗られ方の場合の数\n  var M=Math.pow(10,9)+7;\n  for(let i=1;i<N;i++){\n    let c=input[i];\n    if(last[c]===\"not yet\"||last[c]===i-1){\n      last[c]=i;\n      dp[i]=dp[i-1];\n      continue;\n    }\n    dp[i]=(dp[i-1]+dp[last[c]])%M;\n    last[c]=i;\n  }\n  console.log(dp.pop());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03194_1", "type": "JavaScript", "obfuscated": "function a0_0x5328(juVUAS, key) {\n    var stringArray = a0_0x9ba0();\n    a0_0x5328 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5328(juVUAS, key);\n}\nvar a0_0x2dae99 = a0_0x5328;\nfunction Main(input) {\n    var _0x3cdb78 = a0_0x5328;\n    var input = input[_0x3cdb78(0x0)]('\\x20');\n    var n = parseInt(input[0x0], 0xa);\n    var p = parseInt(input[0x1], 0xa);\n    var arr = [];\n    var counts = [];\n    var ans = 0x1;\n    var i = 0x2;\n    while (i <= p) {\n        while (p % i === 0x0) {\n            arr[_0x3cdb78(0x1)](i);\n            p = Math[_0x3cdb78(0x2)](p / i);\n        }\n        i++;\n    }\n    for (var i = 0x0; i < arr[_0x3cdb78(0x3)]; i++) {\n        if (_0x3cdb78(0x4) !== 'ozZjz') {\n            ans *= b[i];\n        } else {\n            var key = arr[i];\n            counts[key] = counts[key] ? counts[key] + 0x1 : 0x1;\n        }\n    }\n    var b = arr['filter'](function (x, i, self) {\n        var _0x3746f4 = a0_0x5328;\n        return self[_0x3746f4(0x5)](x) === i;\n    });\n    for (var i = 0x0; i < b[_0x3cdb78(0x3)]; i++) {\n        if (_0x3cdb78(0x6) === _0x3cdb78(0x6)) {\n            if (counts[b[i]] >= n) {\n                ans *= b[i];\n            }\n        } else {\n            return self[_0x3cdb78(0x5)](x) === i;\n        }\n    }\n    console[_0x3cdb78(0x7)](ans);\n}\nMain(require('fs')['readFileSync'](a0_0x2dae99(0x8), 'utf8'));\nfunction a0_0x9ba0() {\n    var _0x4948dd = [\n        'split',\n        'push',\n        'floor',\n        'length',\n        'ozZjz',\n        'indexOf',\n        'nZVvV',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x9ba0 = function () {\n        return _0x4948dd;\n    };\n    return a0_0x9ba0();\n}", "test_cases": [["3 24", "2"], ["5 1", "1"], ["1 111", "111"], ["4 972439611840", "206"]], "original": "function Main(input) {\n  // 入力\n\tvar input = input.split(' ');\n\tvar n = parseInt(input[0], 10);\n  var p = parseInt(input[1], 10);\n  var arr = [];\n  var counts = [];\n  var ans = 1;\n\n  // 計算\n  var i =2;\n  while (i <= p) {\n    while (p % i === 0) {\n      arr.push(i);\n      p = Math.floor(p / i);\n    }\n    i++;\n  }\n\n  for(var i = 0; i < arr.length; i++) {\n    var key = arr[i];\n    counts[key] = (counts[key])? counts[key] + 1 : 1 ;\n  }\n\n  var b = arr.filter(function (x, i, self) {\n    return self.indexOf(x) === i;\n  });\n  for (var i = 0; i < b.length; i++) {\n    if (counts[b[i]] >= n) {\n      ans *= b[i];\n    }\n  }\n  console.log(ans);\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03286_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x12648e = a0_0x3e7c;\nfunction Main(input) {\n    const _0x306ecd = a0_0x3e7c;\n    input = input['split']('\\x0a');\n    let N = parseInt(input[0x0]);\n    let res = '';\n    if (N === 0x0) {\n        console[_0x306ecd(0x0)](0x0);\n        return;\n    }\n    while (N !== 0x0) {\n        res = String(Math['abs'](N % -0x2)) + res;\n        if (N % -0x2 < 0x0)\n            N += N < 0x0 ? -0x1 : 0x1;\n        N = parseInt(N / -0x2);\n    }\n    console[_0x306ecd(0x0)](res);\n}\nMain(require('fs')[a0_0x12648e(0x1)](a0_0x12648e(0x2), 'utf8'));\nfunction a0_0x3e7c(MKZpdE, key) {\n    const stringArray = a0_0x2261();\n    a0_0x3e7c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e7c(MKZpdE, key);\n}\nfunction a0_0x2261() {\n    const _0x5cdef2 = [\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2261 = function () {\n        return _0x5cdef2;\n    };\n    return a0_0x2261();\n}", "test_cases": [["-9", "1011"], ["123456789", "11000101011001101110100010101"], ["0", "0"]], "original": "'use strict'\nfunction Main(input) {\n  input = input.split(\"\\n\")\n  let N = parseInt(input[0])\n  let res = ''\n  if (N === 0) {\n    console.log(0)\n    return\n  }\n  while (N !== 0) {\n    res = String(Math.abs(N % -2)) + res\n    if (N % -2 < 0) N += N < 0 ? -1 : 1\n    N = parseInt(N / -2)\n  }\n  console.log(res)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03425_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x5d56(cIGobX, key) {\n    const stringArray = a0_0x13a8();\n    a0_0x5d56 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5d56(cIGobX, key);\n}\nconst a0_0x1e0313 = a0_0x5d56;\nconst main = arg => {\n    const _0x40025a = a0_0x5d56;\n    arg = arg[_0x40025a(0x0)]()[_0x40025a(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const names = arg[_0x40025a(0x2)](0x1, N + 0x1);\n    const p = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x2\n    ];\n    const q = [\n        0x1,\n        0x1,\n        0x1,\n        0x2,\n        0x2,\n        0x3,\n        0x2,\n        0x2,\n        0x3,\n        0x3\n    ];\n    const r = [\n        0x2,\n        0x3,\n        0x4,\n        0x3,\n        0x4,\n        0x4,\n        0x3,\n        0x4,\n        0x4,\n        0x4\n    ];\n    let march = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let i in names) {\n        if (names[i][0x0] === 'M') {\n            if ('tOYZk' !== 'pkXnQ') {\n                march[0x0]++;\n            } else {\n                march[0x1]++;\n            }\n        }\n        if (names[i][0x0] === 'A') {\n            march[0x1]++;\n        }\n        if (names[i][0x0] === 'R') {\n            if ('Mmcow' === _0x40025a(0x3)) {\n                march[0x2]++;\n            } else {\n                answer += march[p[i]] * march[q[i]] * march[r[i]];\n            }\n        }\n        if (names[i][0x0] === 'C') {\n            if ('ZSxKt' !== _0x40025a(0x4)) {\n                march[0x3]++;\n            } else {\n                march[0x2]++;\n            }\n        }\n        if (names[i][0x0] === 'H') {\n            march[0x4]++;\n        }\n    }\n    let answer = 0x0;\n    for (let i = 0x0; i < 0xa; i++) {\n        answer += march[p[i]] * march[q[i]] * march[r[i]];\n    }\n    console[_0x40025a(0x5)](answer);\n};\nfunction a0_0x13a8() {\n    const _0x584514 = [\n        'trim',\n        'split',\n        'slice',\n        'Mmcow',\n        'wbQFI',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x13a8 = function () {\n        return _0x584514;\n    };\n    return a0_0x13a8();\n}\nmain(require('fs')['readFileSync'](a0_0x1e0313(0x6), a0_0x1e0313(0x7)));", "test_cases": [["5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI", "2"], ["4\nZZ\nZZZ\nZ\nZZZZZZZZZZ", "0"], ["5\nCHOKUDAI\nRNG\nMAKOTO\nAOKI\nRINGO", "7"]], "original": "\"use strict\";\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const names = arg.slice(1, N + 1);\n    \n    const p = [0, 0, 0, 0, 0, 0, 1, 1, 1, 2];\n    const q = [1, 1, 1, 2, 2, 3, 2, 2, 3, 3];\n    const r = [2, 3, 4, 3, 4, 4, 3, 4, 4, 4];\n    \n    let march = [0, 0, 0, 0, 0];\n    \n    for(let i in names) {\n        if(names[i][0] === \"M\") {\n            march[0]++;\n        }\n        \n        if(names[i][0] === \"A\") {\n            march[1]++;\n        }\n        \n        if(names[i][0] === \"R\") {\n            march[2]++;\n        }\n        \n        if(names[i][0] === \"C\") {\n            march[3]++;\n        }\n        \n        if(names[i][0] === \"H\") {\n            march[4]++;\n        }\n    }\n    \n    let answer = 0;\n    \n    for(let i=0; i<10; i++) {\n        answer += march[p[i]] * march[q[i]] * march[r[i]];\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03458_1", "type": "JavaScript", "obfuscated": "function a0_0x48f1() {\n    var _0x508706 = [\n        'split',\n        'map',\n        'qhJop',\n        'CybFE',\n        'Fljig',\n        'fill',\n        'UMBfX',\n        'QOwBc',\n        'omkCx',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x48f1 = function () {\n        return _0x508706;\n    };\n    return a0_0x48f1();\n}\nfunction a0_0x5110(xZGxYW, key) {\n    var stringArray = a0_0x48f1();\n    a0_0x5110 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5110(xZGxYW, key);\n}\nvar a0_0x2c5727 = a0_0x5110;\nfunction Main(input) {\n    var _0x1e42bf = a0_0x5110;\n    input = input[_0x1e42bf(0x0)]('\\x0a');\n    var N = input[0x0][_0x1e42bf(0x0)]('\\x20')[_0x1e42bf(0x1)](a => parseInt(a));\n    var K = N[0x1];\n    N = N[0x0];\n    var x = [], y = [], c = [];\n    for (var i = 0x0; i < N; i++) {\n        if (_0x1e42bf(0x2) === _0x1e42bf(0x3)) {\n            x[i] = input[i + 0x1]['split']('\\x20');\n            y[i] = parseInt(x[i][0x1]) % (K * 0x2);\n            c[i] = x[i][0x2] === 'W' ? 0x0 : 0x1;\n            x[i] = parseInt(x[i][0x0]) % (K * 0x2);\n        } else {\n            x[i] = input[i + 0x1][_0x1e42bf(0x0)]('\\x20');\n            y[i] = parseInt(x[i][0x1]) % (K * 0x2);\n            c[i] = x[i][0x2] === 'W' ? 0x0 : 0x1;\n            x[i] = parseInt(x[i][0x0]) % (K * 0x2);\n        }\n    }\n    var ans = 0x0;\n    for (i = 0x0; i < K; i++) {\n        if (_0x1e42bf(0x4) === _0x1e42bf(0x4)) {\n            var now = 0x0;\n            var Y1 = new Array(K * 0x2)[_0x1e42bf(0x5)](0x0), Y2 = new Array(K * 0x2)['fill'](0x0);\n            for (var k = 0x0; k < N; k++) {\n                if (_0x1e42bf(0x6) !== _0x1e42bf(0x7)) {\n                    if ((((x[k] + i) / K ^ y[k] / K) & 0x1) === c[k]) {\n                        if (_0x1e42bf(0x8) === _0x1e42bf(0x8)) {\n                            now++;\n                            Y1[y[k]]++;\n                        } else {\n                            var now = 0x0;\n                            var Y1 = new Array(K * 0x2)[_0x1e42bf(0x5)](0x0), Y2 = new Array(K * 0x2)[_0x1e42bf(0x5)](0x0);\n                            for (var k = 0x0; k < N; k++) {\n                                if ((((x[k] + i) / K ^ y[k] / K) & 0x1) === c[k]) {\n                                    now++;\n                                    Y1[y[k]]++;\n                                } else\n                                    Y2[y[k]]++;\n                            }\n                            if (ans < now)\n                                ans = now;\n                            if (ans < N - now)\n                                ans = N - now;\n                            for (var j = 0x0; j < K - 0x1; j++) {\n                                now += Y2[j] - Y1[j] + Y2[j + K] - Y1[j + K];\n                                if (ans < now)\n                                    ans = now;\n                                if (ans < N - now)\n                                    ans = N - now;\n                            }\n                        }\n                    } else\n                        Y2[y[k]]++;\n                } else {\n                    now += Y2[j] - Y1[j] + Y2[j + K] - Y1[j + K];\n                    if (ans < now)\n                        ans = now;\n                    if (ans < N - now)\n                        ans = N - now;\n                }\n            }\n            if (ans < now)\n                ans = now;\n            if (ans < N - now)\n                ans = N - now;\n            for (var j = 0x0; j < K - 0x1; j++) {\n                now += Y2[j] - Y1[j] + Y2[j + K] - Y1[j + K];\n                if (ans < now)\n                    ans = now;\n                if (ans < N - now)\n                    ans = N - now;\n            }\n        } else {\n            now++;\n            Y1[y[k]]++;\n        }\n    }\n    console[_0x1e42bf(0x9)](ans);\n}\nMain(require('fs')[a0_0x2c5727(0xa)]('/dev/stdin', a0_0x2c5727(0xb)));", "test_cases": [["4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B", "4"], ["2 1000\n0 0 B\n0 1 W", "2"], ["6 2\n1 2 B\n2 1 W\n2 2 B\n1 0 B\n0 6 W\n4 5 W", "4"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar N = input[0].split(\" \").map(a => parseInt(a));\n\tvar K = N[1];\n\tN = N[0];\n\tvar x = [], y = [], c = [];\n\tfor(var i = 0; i < N; i++){\n\t\tx[i] = input[i+1].split(\" \");\n\t\ty[i] = parseInt(x[i][1]) % (K * 2);\n\t\tc[i] = (x[i][2] === \"W\" ? 0 : 1);\n\t\tx[i] = parseInt(x[i][0]) % (K * 2);\n\t}\n\tvar ans = 0;\n\tfor(i = 0; i < K; i++){\n\t\tvar now = 0;\n\t\tvar Y1 = new Array(K*2).fill(0), Y2 = new Array(K*2).fill(0);\n\t\tfor(var k = 0; k < N; k++){\n\t\t\tif((((x[k] + i) / K ^ y[k] / K) & 1) === c[k]){\n\t\t\t\tnow++;\n\t\t\t\tY1[y[k]]++;\n\t\t\t}else Y2[y[k]]++;\n\t\t}\n\t\tif(ans < now)ans = now;\n\t\tif(ans < N - now)ans = N - now;\n\t\tfor(var j = 0; j < K - 1; j++){\n\t\t\tnow += Y2[j] - Y1[j] + Y2[j+K] - Y1[j+K];\n\t\t\tif(ans < now)ans = now;\n\t\t\tif(ans < N - now)ans = N - now;\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03546_1", "type": "JavaScript", "obfuscated": "const a0_0x159506 = a0_0x5e2f;\nfunction a0_0x5e2f(CAjVNa, key) {\n    const stringArray = a0_0x4b68();\n    a0_0x5e2f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e2f(CAjVNa, key);\n}\nfunction a0_0x4b68() {\n    const _0x2205df = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'slice',\n        'min',\n        'readFileSync'\n    ];\n    a0_0x4b68 = function () {\n        return _0x2205df;\n    };\n    return a0_0x4b68();\n}\nconsole[a0_0x159506(0x0)]((args => {\n    const _0x289868 = a0_0x5e2f;\n    const [[H, W], ...tmp] = args[_0x289868(0x1)]()[_0x289868(0x2)]`\\n`[_0x289868(0x3)](r => r[_0x289868(0x2)]` `[_0x289868(0x3)](v => v | 0x0));\n    const A = tmp[_0x289868(0x4)](0xa);\n    const dp = tmp[_0x289868(0x4)](0x0, 0xa);\n    for (let k = 0x0; k < 0xa; k++) {\n        for (let i = 0x0; i < 0xa; i++) {\n            for (let j = 0x0; j < 0xa; j++) {\n                dp[i][j] = Math[_0x289868(0x5)](dp[i][j], dp[i][k] + dp[k][j]);\n            }\n        }\n    }\n    let cost = 0x0;\n    for (let i = 0x0; i < H; i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (A[i][j] === -0x1 || A[i][j] === 0x1)\n                continue;\n            cost += dp[A[i][j]][0x1];\n        }\n    }\n    return '' + cost;\n})(require('fs')[a0_0x159506(0x6)]('/dev/stdin', 'utf8')));", "test_cases": [["2 4\n0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 0 9 9 9\n9 9 9 9 9 9 9 0 9 9\n9 9 9 9 2 9 9 9 0 9\n9 2 9 9 9 9 9 9 9 0\n-1 -1 -1 -1\n8 1 1 8", "12"], ["5 5\n0 999 999 999 999 999 999 999 999 999\n999 0 999 999 999 999 999 999 999 999\n999 999 0 999 999 999 999 999 999 999\n999 999 999 0 999 999 999 999 999 999\n999 999 999 999 0 999 999 999 999 999\n999 999 999 999 999 0 999 999 999 999\n999 999 999 999 999 999 0 999 999 999\n999 999 999 999 999 999 999 0 999 999\n999 999 999 999 999 999 999 999 0 999\n999 999 999 999 999 999 999 999 999 0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1", "0"], ["3 5\n0 4 3 6 2 7 2 5 3 3\n4 0 5 3 7 5 3 7 2 7\n5 7 0 7 2 9 3 2 9 1\n3 6 2 0 2 4 6 4 2 3\n3 5 7 4 0 6 9 7 6 7\n9 8 5 2 2 0 4 7 6 5\n5 4 6 3 2 3 0 5 4 3\n3 6 2 3 4 2 4 0 8 9\n4 6 5 4 3 5 3 2 0 8\n2 1 3 4 5 7 8 6 4 0\n3 5 2 6 1\n2 5 3 2 1\n6 9 2 5 6", "47"]], "original": "console.log((args=>{\n  const [[H,W],...tmp] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  const A = tmp.slice(10);\n  const dp = tmp.slice(0,10);\n  for ( let k = 0; k < 10; k++ ) {\n    for ( let i = 0; i < 10; i++ ) {\n      for ( let j = 0; j < 10; j++ ) {\n        dp[i][j] = Math.min( dp[i][j], dp[i][k] + dp[k][j] );\n      }\n    }\n  }\n  let cost = 0;\n  for ( let i = 0; i < H; i++ ) {\n    for ( let j = 0; j < W; j++ ) {\n      if ( A[i][j] === -1 || A[i][j] === 1 ) continue;\n      cost += dp[A[i][j]][1];\n    }\n  }\n  return `${cost}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03549_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5d0f60 = a0_0x32fc;\nfunction main(input) {\n    const _0x28869c = a0_0x32fc;\n    const lines = input[_0x28869c(0x0)]('\\x0a');\n    const N = lines[0x0][_0x28869c(0x0)]('\\x20')[_0x28869c(0x1)](x => parseInt(x))[0x0];\n    const M = lines[0x0]['split']('\\x20')['map'](x => parseInt(x))[0x1];\n    let result = ((N - M) * 0x64 + M * 0x76c) * Math['pow'](0x2, M);\n    console['log'](result);\n}\nmain(require('fs')[a0_0x5d0f60(0x2)](a0_0x5d0f60(0x3), a0_0x5d0f60(0x4)));\nfunction a0_0x32fc(NiyQeh, key) {\n    const stringArray = a0_0x44c4();\n    a0_0x32fc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x32fc(NiyQeh, key);\n}\nfunction a0_0x44c4() {\n    const _0x3d1669 = [\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x44c4 = function () {\n        return _0x3d1669;\n    };\n    return a0_0x44c4();\n}", "test_cases": [["1 1", "3800"], ["10 2", "18400"], ["100 5", "608000"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = lines[0].split(' ').map(x => parseInt(x))[0];\n  const M = lines[0].split(' ').map(x => parseInt(x))[1];\n\n\n\n  let result = ((N-M)*100 + M*1900)*Math.pow(2,M);\n\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03712_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2d8c0b = a0_0x3466;\nfunction a0_0x3466(WCkuUE, key) {\n    const stringArray = a0_0x42bb();\n    a0_0x3466 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3466(WCkuUE, key);\n}\nfunction a0_0x42bb() {\n    const _0x24bf31 = [\n        'split',\n        'map',\n        'repeat',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x42bb = function () {\n        return _0x24bf31;\n    };\n    return a0_0x42bb();\n}\nfunction main(input) {\n    const _0x2d6dd5 = a0_0x3466;\n    input = input[_0x2d6dd5(0x0)]('\\x0a');\n    input[0x0] = input[0x0]['split']('\\x20')[_0x2d6dd5(0x1)](v => ~~v);\n    const h = input[0x0][0x0];\n    const w = input[0x0][0x1];\n    let tmp = '#'['repeat'](w + 0x2) + '\\x0a';\n    for (let i = 0x1; i <= h; i++) {\n        tmp += '#' + input[i] + '#\\x0a';\n    }\n    tmp += '#'[_0x2d6dd5(0x2)](w + 0x2);\n    console[_0x2d6dd5(0x3)](tmp);\n}\nmain(require('fs')[a0_0x2d8c0b(0x4)](a0_0x2d8c0b(0x5), a0_0x2d8c0b(0x6)));", "test_cases": [["2 3\nabc\narc", "#####\n#abc#\n#arc#\n#####"], ["1 1\nz", "###\n#z#\n###"]], "original": "'use strict'\n\nfunction main(input) {\n\n  input = input.split('\\n')\n  input[0] = input[0].split(' ').map(v => ~~v)\n  const h = input[0][0]\n  const w = input[0][1]\n\n  let tmp = '#'.repeat(w + 2) + '\\n'\n  for (let i = 1; i <= h; i++) {\n    tmp += '#' + input[i] + '#\\n'\n  }\n  tmp += '#'.repeat(w + 2)\n\n  console.log(tmp)\n\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00008_1", "type": "JavaScript", "obfuscated": "var a0_0x5176b2 = a0_0x1f1f;\nconfig = {\n    'input': a0_0x5176b2(0x0),\n    'newline': '\\x0a'\n};\nfunction a0_0x1f1f(VvulUk, key) {\n    var stringArray = a0_0x18f2();\n    a0_0x1f1f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f1f(VvulUk, key);\n}\nconst MAX = 0x32;\nfunction a0_0x18f2() {\n    var _0x3d68e8 = [\n        '/dev/stdin',\n        'concat',\n        'readFileSync',\n        'input',\n        'split',\n        'newline',\n        'log'\n    ];\n    a0_0x18f2 = function () {\n        return _0x3d68e8;\n    };\n    return a0_0x18f2();\n}\nmap0 = [];\nfor (i = 0x0; i <= MAX; i++)\n    map0['push'](0x0);\nmap1 = [][a0_0x5176b2(0x1)](map0);\nmap2 = [][a0_0x5176b2(0x1)](map1);\nmap3 = [][a0_0x5176b2(0x1)](map2);\nfor (i = 0x0; i <= 0x9; i++)\n    map0[i] = 0x1;\nfunction expand_map(map, smaller) {\n    for (var i = 0x0; i < MAX; i++) {\n        for (var j = Math['max'](0x0, i - 0x9); j <= i; j++) {\n            map[i] += smaller[j];\n        }\n    }\n}\nexpand_map(map1, map0);\nexpand_map(map2, map1);\nexpand_map(map3, map2);\nrequire('fs')[a0_0x5176b2(0x2)](config[a0_0x5176b2(0x3)], 'ascii')['trim']()[a0_0x5176b2(0x4)](config[a0_0x5176b2(0x5)])['forEach'](function (line) {\n    var _0x2fc1c7 = a0_0x1f1f;\n    console[_0x2fc1c7(0x6)](map3[parseInt(line)]);\n});", "test_cases": [["35\n1", "4\n4"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nconst MAX = 50;\n\nmap0 = [];\nfor (i = 0; i <= MAX; i++) map0.push(0);\nmap1 = [].concat(map0);\nmap2 = [].concat(map1);\nmap3 = [].concat(map2);\n\nfor (i = 0; i <= 9; i++) map0[i] = 1;\n\nfunction expand_map(map, smaller) {\n\tfor (var i = 0; i < MAX; i++) {\n\t\tfor (var j = Math.max(0, i - 9); j <= i; j++) {\n\t\t\tmap[i] += smaller[j];\n\t\t}\n\t}\n}\n\nexpand_map(map1, map0);\nexpand_map(map2, map1);\nexpand_map(map3, map2);\n\nrequire('fs').readFileSync(config.input, 'ascii')\n\t.trim()\n\t.split(config.newline)\n\t.forEach(function (line) { console.log(map3[parseInt(line)]); })\n\t;", "language": "JavaScript"}
{"filename": "p00009_1", "type": "JavaScript", "obfuscated": "var a0_0x5b27b0 = a0_0x381e;\nfunction a0_0x381e(OIItmE, key) {\n    var stringArray = a0_0x332a();\n    a0_0x381e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x381e(OIItmE, key);\n}\nvar count = 0x0;\nfunction isPrime(num) {\n    if (num < 0x2)\n        return ![];\n    for (var i = 0x2; i < num; i++) {\n        if (num % i == 0x0)\n            return ![];\n    }\n    count++;\n    return !![];\n}\nfunction a0_0x332a() {\n    var _0x25f120 = [\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x332a = function () {\n        return _0x25f120;\n    };\n    return a0_0x332a();\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar p = input[a0_0x5b27b0(0x0)]('\\x0a');\nfor (var i = 0x0; i < p[a0_0x5b27b0(0x1)]; i++) {\n    count = 0x0;\n    for (var j = 0x2; j <= p[i]; j++) {\n        isPrime(j);\n    }\n    console[a0_0x5b27b0(0x2)](count);\n}", "test_cases": [["10\n3\n11", "4\n2\n5"]], "original": "var count=0;\n function isPrime(num) {\n     if(num < 2) return false;\n     for (var i = 2; i < num; i++) {\n         if(num%i==0)\n             return false;\n     }\n     count++;\n     return true;\n }\n var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n var p = input.split('\\n');\n  for(var i=0;i<p.length;i++){\n   count=0;\n   for(var j=2;j<=p[i];j++){\n  isPrime(j);\n }\n  console.log(count);\n }", "language": "JavaScript"}
{"filename": "p00221_1", "type": "JavaScript", "obfuscated": "function a0_0x573b() {\n    var _0x2783cc = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'length',\n        'Fizz',\n        'Buzz',\n        'filter',\n        'log',\n        'join'\n    ];\n    a0_0x573b = function () {\n        return _0x2783cc;\n    };\n    return a0_0x573b();\n}\nvar a0_0x17febb = a0_0x4fff;\nvar input = require('fs')[a0_0x17febb(0x0)](a0_0x17febb(0x1), a0_0x17febb(0x2));\nfunction a0_0x4fff(lstzEm, key) {\n    var stringArray = a0_0x573b();\n    a0_0x4fff = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fff(lstzEm, key);\n}\nvar Arr = input[a0_0x17febb(0x3)]()[a0_0x17febb(0x4)]('\\x0a');\nwhile (!![]) {\n    var mn = Arr[a0_0x17febb(0x5)]()[a0_0x17febb(0x4)]('\\x20')['map'](Number);\n    if (mn[0x0] == 0x0 && mn[0x1] == 0x0)\n        break;\n    var player = [];\n    for (var i = 0x0; i < mn[0x0]; i++)\n        player[i] = i + 0x1;\n    var arr = [];\n    for (var i = 0x0; i < mn[0x1]; i++) {\n        var v = Arr[a0_0x17febb(0x5)]();\n        arr['push'](v);\n    }\n    var i = 0x1;\n    var k = 0x0;\n    var len = mn[0x0];\n    for (var I = 0x0; I < arr[a0_0x17febb(0x6)]; I++) {\n        var v = arr[I];\n        var str = '';\n        if (i % 0x3 == 0x0)\n            str += a0_0x17febb(0x7);\n        if (i % 0x5 == 0x0)\n            str += a0_0x17febb(0x8);\n        if (str == '')\n            str = i;\n        if (v != str) {\n            player[k] = ![];\n            len++;\n            if (len == 0x1)\n                break;\n        }\n        i++;\n        var H = 0x0;\n        do {\n            H++;\n            if (H > 0x3e8)\n                break;\n            k++;\n            if (k >= player[a0_0x17febb(0x6)]) {\n                player = player[a0_0x17febb(0x9)](function (v) {\n                    return v != ![];\n                });\n                k = 0x0;\n            }\n        } while (player[k] == ![]);\n    }\n    player = player[a0_0x17febb(0x9)](function (v) {\n        return v != ![];\n    });\n    console[a0_0x17febb(0xa)](player[a0_0x17febb(0xb)]('\\x20'));\n}", "test_cases": [["5 7\n1\n2\nFizz\n4\nBuzz\n6\n7\n3 5\n1\n2\n3\n4\n5\n0 0", "2 3 4 5\n1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var mn=(Arr.shift()).split(\" \").map(Number);\n   if(mn[0]==0 && mn[1]==0)break;\n   var player=[];\n   for(var i=0;i<mn[0];i++)player[i]=i+1;\n   var arr=[];\n   for(var i=0;i<mn[1];i++){\n      var v=Arr.shift();\n      arr.push(v);\n   }\n   var i=1;\n   var k=0;\n   var len=mn[0];\n   for(var I=0;I<arr.length;I++){\n      var v=arr[I];\n      var str=\"\";\n      if(i%3==0)str+=\"Fizz\";\n      if(i%5==0)str+=\"Buzz\";\n      if(str==\"\")str=i;\n      if(v!=str){\n         player[k]=false;\n         len++;\n         if(len==1)break;\n      }\n      i++;\n      var H=0;\n      do{\n      H++;\n      if(H>1000)break;\n      k++;\n      if(k>=player.length){\n         player=player.filter(function(v){return v!=false;});\n         k=0;\n      }\n      }while(player[k]==false);\n   }\n   player=player.filter(function(v){return v!=false;});\n   console.log(player.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00990_1", "type": "JavaScript", "obfuscated": "var a0_0x5150df = a0_0x4279;\nfunction over(x) {\n    if (x >= 0xa)\n        x = x - 0xa + 0x1;\n    return x;\n}\nvar input = require('fs')['readFileSync'](a0_0x5150df(0x0), a0_0x5150df(0x1));\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr[a0_0x5150df(0x2)]() - 0x0;\nvar id = arr[a0_0x5150df(0x2)]()[a0_0x5150df(0x3)]('');\nvar a = arr['shift']() - 0x0;\nvar ary = arr[a0_0x5150df(0x2)]()[a0_0x5150df(0x3)]('\\x20')[a0_0x5150df(0x4)](Number);\nvar k = [];\nvar sum = 0x0;\nid[a0_0x5150df(0x5)](function (v, i) {\n    var _0x535f67 = a0_0x4279;\n    if (v == '*') {\n        if (i % 0x2 == 0x0)\n            k['push'](0x1);\n        else\n            k[_0x535f67(0x6)](0x2);\n    } else {\n        if (_0x535f67(0x7) === 'BLmvf') {\n            if (i % 0x2 == 0x0)\n                sum += v - 0x0;\n            else\n                sum += over((v - 0x0) * 0x2);\n        } else {\n            for (var j = 0x0; j < ary[_0x535f67(0x8)]; j++) {\n                for (var s = 0x0; s < 0xf4240; s++) {\n                    dp[i + 0x1][s + over(ary[j] * k[i])] += dp[i][s];\n                }\n            }\n        }\n    }\n});\nvar dp = [];\nfor (var i = 0x0; i <= 0x7; i++) {\n    dp[i] = [];\n    for (var s = 0x0; s < 0xf4240; s++)\n        dp[i][s] = ![];\n}\nfunction a0_0x4279(eRsOLG, key) {\n    var stringArray = a0_0x1d43();\n    a0_0x4279 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4279(eRsOLG, key);\n}\nfunction a0_0x1d43() {\n    var _0x5156f2 = [\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'push',\n        'BLmvf',\n        'length',\n        'log'\n    ];\n    a0_0x1d43 = function () {\n        return _0x5156f2;\n    };\n    return a0_0x1d43();\n}\ndp[0x0][sum] = 0x1;\nfor (var i = 0x0; i < k[a0_0x5150df(0x8)]; i++) {\n    for (var j = 0x0; j < ary[a0_0x5150df(0x8)]; j++) {\n        for (var s = 0x0; s < 0xf4240; s++) {\n            dp[i + 0x1][s + over(ary[j] * k[i])] += dp[i][s];\n        }\n    }\n}\nvar ans = 0x0;\nfor (var s = 0x0; s < 0x186a0; s++)\n    ans += dp[k[a0_0x5150df(0x8)]][s * 0xa];\nconsole[a0_0x5150df(0x9)](ans);", "test_cases": [["5\n5*57*\n2\n3 9", "1"], ["15\n2***9*2*6*1199*\n9\n0 1 2 3 4 6 7 8 9", "478297"]], "original": "function over(x){\n   if(x>=10)x=x-10+1;\n   return x;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar id=arr.shift().split(\"\");\nvar a=arr.shift()-0;\nvar ary=arr.shift().split(\" \").map(Number);\nvar k=[];\nvar sum=0;\nid.forEach(function(v,i){\n   if(v==\"*\"){\n      if(i%2==0)k.push(1);\n      else k.push(2);\n   }else{\n      if(i%2==0)sum+=v-0;\n      else sum+=over((v-0)*2);\n   }\n});\nvar dp=[];\nfor(var i=0;i<=7;i++){\n   dp[i]=[];\n   for(var s=0;s<1000000;s++)dp[i][s]=false;\n}\n\ndp[0][sum]=1;\n\nfor(var i=0;i<k.length;i++){\n   for(var j=0;j<ary.length;j++){\n      for(var s=0;s<1000000;s++){\n         dp[i+1][s+over(ary[j]*k[i])]+=dp[i][s];\n      }\n   }\n\n}\nvar ans=0;\nfor(var s=0;s<100000;s++)ans+=dp[k.length][s*10];\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p02585_1", "type": "JavaScript", "obfuscated": "const a0_0x5d435f = a0_0x7732;\nfunction a0_0xd86b() {\n    const _0x27f37c = [\n        'trim',\n        'split',\n        'map',\n        'length',\n        'max',\n        'log',\n        'env',\n        'MYTEST',\n        'utf8'\n    ];\n    a0_0xd86b = function () {\n        return _0x27f37c;\n    };\n    return a0_0xd86b();\n}\nfunction a0_0x7732(zdAotb, key) {\n    const stringArray = a0_0xd86b();\n    a0_0x7732 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7732(zdAotb, key);\n}\nconst main = input => {\n    const _0xcccc88 = a0_0x7732;\n    input = input[_0xcccc88(0x0)]()[_0xcccc88(0x1)]('\\x0a');\n    const [n, k] = input[0x0][_0xcccc88(0x1)]('\\x20')[_0xcccc88(0x2)](Number);\n    const directions = input[0x1][_0xcccc88(0x1)]('\\x20')[_0xcccc88(0x2)](v => Number(v) - 0x1);\n    const scoreList = input[0x2][_0xcccc88(0x1)]('\\x20')[_0xcccc88(0x2)](Number);\n    const ans = [new Array(n)['fill'](0x0)];\n    for (let i = 0x0; i < k; i++)\n        ans['push']([]);\n    for (let i = 0x0; i < k; i++) {\n        for (let x = 0x0; x < n; x++) {\n            const score = ans[i][x];\n            ans[i + 0x1][directions[x]] = score + scoreList[directions[x]];\n        }\n    }\n    let max = -Infinity;\n    for (let i = 0x1; i < ans[_0xcccc88(0x3)]; i++)\n        max = Math[_0xcccc88(0x4)](max, Math[_0xcccc88(0x4)](...ans[i]));\n    return console[_0xcccc88(0x5)](max);\n};\nprocess[a0_0x5d435f(0x6)][a0_0x5d435f(0x7)] ? test() : main(require('fs')['readFileSync']('/dev/stdin', a0_0x5d435f(0x8)));", "test_cases": [["5 2\n2 4 5 1 3\n3 4 -10 -8 8", "8"], ["2 3\n2 1\n10 -7", "13"], ["3 3\n3 1 2\n-1000 -2000 -3000", "-1000"], ["10 58\n9 1 6 7 8 4 3 2 10 5\n695279662 988782657 -119067776 382975538 -151885171 -177220596 -169777795 37619092 389386780 980092719", "29507023469"]], "original": "const main = (input) => {\n  input = input.trim().split('\\n')\n  const [n, k] = input[0].split(' ').map(Number)\n  const directions = input[1].split(' ').map(v => Number(v)-1)\n  const scoreList = input[2].split(' ').map(Number)\n\n  const ans = [new Array(n).fill(0)]\n  for (let i=0; i<k; i++) ans.push([])\n\n  for (let i=0; i<k; i++) {\n    for (let x=0; x<n; x++) {\n      const score = ans[i][x]\n      ans[i+1][directions[x]] = score + scoreList[directions[x]]\n    }\n  }\n\n  let max = -Infinity\n  for (let i=1; i<ans.length; i++) max = Math.max(max, Math.max(...ans[i]))\n  return console.log(max)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02665_1", "type": "JavaScript", "obfuscated": "function a0_0x41ff() {\n    const _0x152586 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x41ff = function () {\n        return _0x152586;\n    };\n    return a0_0x41ff();\n}\nfunction a0_0x8baa(SBuwgS, key) {\n    const stringArray = a0_0x41ff();\n    a0_0x8baa = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x8baa(SBuwgS, key);\n}\nconst a0_0x3c467c = a0_0x8baa;\nconsole[a0_0x3c467c(0x0)]((args => {\n    const _0x500eb0 = a0_0x8baa;\n    const [[N], A] = args[_0x500eb0(0x1)]()[_0x500eb0(0x2)]('\\x0a')[_0x500eb0(0x3)](r => r['split']('\\x20')[_0x500eb0(0x3)](v => v | 0x0));\n    const a = [0x1 - A[0x0]];\n    for (let i = 0x1; i < N; i++)\n        a[_0x500eb0(0x4)](a[i - 0x1] * 0x2 - A[i]);\n    a['push'](0x0);\n    let n = BigInt(A[N]);\n    for (let i = N - 0x1; i >= 0x0; i--) {\n        const c = a[i + 0x1] + A[i + 0x1];\n        if (a[i] > c)\n            a[i] = c;\n        else if (a[i] * 0x2 < c)\n            return '-1';\n        n += BigInt(a[i] + A[i]);\n    }\n    return '' + n;\n})(require('fs')[a0_0x3c467c(0x5)](a0_0x3c467c(0x6), a0_0x3c467c(0x7))));", "test_cases": [["3\n0 1 1 2", "7"], ["4\n0 0 1 0 2", "10"], ["2\n0 3 1", "-1"], ["1\n1 1", "-1"], ["10\n0 0 1 1 2 3 5 8 13 21 34", "264"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0));\n  const a = [1-A[0]];\n  for ( let i = 1; i < N; i++ ) a.push(a[i-1] * 2 - A[i]);\n  a.push(0);\n  let n = BigInt(A[N]);\n  for ( let i = N-1; i >= 0; i-- ) {\n    const c = a[i+1] + A[i+1];\n    if ( a[i] > c ) a[i] = c;\n    else if ( a[i] * 2 < c ) return '-1';\n    n += BigInt(a[i] + A[i]);\n  }\n  return `${n}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02787_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1aea() {\n    const _0x4aafec = [\n        'trim',\n        'split',\n        'map',\n        'slice',\n        'length',\n        'sort',\n        'fill',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1aea = function () {\n        return _0x4aafec;\n    };\n    return a0_0x1aea();\n}\nconst a0_0x5f01f0 = a0_0x603d;\nfunction a0_0x603d(vbuJhR, key) {\n    const stringArray = a0_0x1aea();\n    a0_0x603d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x603d(vbuJhR, key);\n}\nfunction Main(input) {\n    const _0x376ba4 = a0_0x603d;\n    input = input[_0x376ba4(0x0)]()['split']('\\x0a');\n    const array = input[0x0][_0x376ba4(0x1)]('\\x20')[_0x376ba4(0x2)](s => parseInt(s));\n    const rest = input[_0x376ba4(0x3)](0x1);\n    const H = array[0x0];\n    const N = array[0x1];\n    const magic = [];\n    for (let i = 0x0; i < rest[_0x376ba4(0x4)]; ++i) {\n        const a = rest[i][_0x376ba4(0x1)]('\\x20')[_0x376ba4(0x2)](s => parseInt(s));\n        magic['push']([\n            a[0x0],\n            a[0x1]\n        ]);\n    }\n    magic[_0x376ba4(0x5)]((a, b) => a[0x0] - b[0x0]);\n    let dp = Array(H + 0x1)[_0x376ba4(0x6)](Infinity);\n    dp[0x0] = 0x0;\n    for (let i = 0x0; i < N; ++i) {\n        const w = magic[i][0x0];\n        const v = magic[i][0x1];\n        for (let j = 0x0; j <= H; ++j) {\n            const min = Math[_0x376ba4(0x7)](j + w, H);\n            dp[min] = Math[_0x376ba4(0x7)](dp[min], dp[j] + v);\n        }\n    }\n    console[_0x376ba4(0x8)](dp[H]);\n}\nMain(require('fs')[a0_0x5f01f0(0x9)](a0_0x5f01f0(0xa), a0_0x5f01f0(0xb)));", "test_cases": [["9 3\n8 3\n4 2\n2 1", "4"], ["100 6\n1 1\n2 3\n3 9\n4 27\n5 81\n6 243", "100"], ["9999 10\n540 7550\n691 9680\n700 9790\n510 7150\n415 5818\n551 7712\n587 8227\n619 8671\n588 8228\n176 2461", "139815"]], "original": "'use strict'\n\nfunction Main(input) {\n  input = input.trim().split('\\n')\n  const array = input[0].split(' ').map(s => parseInt(s))\n  const rest = input.slice(1)\n  const H = array[0]\n  const N = array[1]\n\n  const magic = []\n  for(let i = 0; i < rest.length; ++i) {\n    const a = rest[i].split(' ').map(s => parseInt(s))\n    magic.push([a[0], a[1]])\n  }\n  magic.sort((a, b) => a[0] - b[0])\n\n  let dp = Array(H+1).fill(Infinity)\n\n  dp[0] = 0\n  for(let i = 0; i < N; ++i) {\n    const w = magic[i][0]\n    const v = magic[i][1]\n    for(let j = 0; j <= H; ++j) {\n      \n      const min = Math.min(j + w, H)\n\n      dp[min] = Math.min(dp[min], dp[j] + v) \n    }\n\n    // console.log(`${i}までの魔法を利用`)\n    // console.log(dp)\n    // console.log('^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^')\n  }\n  \n  console.log(dp[H])\n  \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02984_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3883c0 = a0_0x3b97;\nfunction a0_0x3b97(pEaoVz, key) {\n    const stringArray = a0_0xe4bc();\n    a0_0x3b97 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b97(pEaoVz, key);\n}\nfunction a0_0xe4bc() {\n    const _0x4569e2 = [\n        'trim',\n        'split',\n        'push',\n        'log',\n        'join',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xe4bc = function () {\n        return _0x4569e2;\n    };\n    return a0_0xe4bc();\n}\nconst main = arg => {\n    const _0x30d55f = a0_0x3b97;\n    arg = arg[_0x30d55f(0x0)]()[_0x30d55f(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const A = arg[0x1][_0x30d55f(0x1)]('\\x20')['map'](n => parseInt(0x2 * n));\n    let offset = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        offset = A[i] - offset;\n    }\n    let x = offset / 0x2;\n    let cur = x;\n    let answer = [];\n    for (let i = 0x0; i < N; i++) {\n        answer[_0x30d55f(0x2)](cur);\n        cur = A[i] - cur;\n    }\n    console[_0x30d55f(0x3)](answer[_0x30d55f(0x4)]('\\x20'));\n};\nmain(require('fs')['readFileSync'](a0_0x3883c0(0x5), a0_0x3883c0(0x6)));", "test_cases": [["3\n2 2 4", "4 0 4"], ["5\n3 8 7 5 5", "2 4 12 2 8"], ["3\n1000000000 1000000000 0", "0 2000000000 0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const A = arg[1].split(\" \").map(n=>parseInt(2 * n));\n    \n    let offset = 0;\n    \n    for(let i=0; i<N; i++) {\n        offset = A[i] - offset;\n    }\n    \n    let x = offset / 2;\n    \n    let cur = x;\n    \n    let answer = [];\n    \n    for(let i=0; i<N; i++) {\n        answer.push(cur);\n        cur = A[i] - cur;\n    }\n    \n    console.log(answer.join(\" \"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03050_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x1324fa = a0_0x58b9;\nfunction a0_0x58b9(YvsSZD, key) {\n    const stringArray = a0_0x1d64();\n    a0_0x58b9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x58b9(YvsSZD, key);\n}\nfunction Main(input) {\n    const _0x19c7a8 = a0_0x58b9;\n    const N = parseInt(input);\n    let ret = 0x0;\n    for (let i = 0x1; i * i < N; i++) {\n        const ic = i - 0x1;\n        if (ic !== 0x0 && N % ic === Math[_0x19c7a8(0x0)](N / ic)) {\n            ret += ic;\n        }\n        const j = Math[_0x19c7a8(0x0)](N / i) - 0x1;\n        if (N % j === i) {\n            ret += j;\n        }\n    }\n    console[_0x19c7a8(0x1)](ret);\n}\nMain(require('fs')[a0_0x1324fa(0x2)](a0_0x1324fa(0x3), 'utf8'));\nfunction a0_0x1d64() {\n    const _0x12347b = [\n        'trunc',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1d64 = function () {\n        return _0x12347b;\n    };\n    return a0_0x1d64();\n}", "test_cases": [["8", "10"], ["1000000000000", "2499686339916"]], "original": "\"use strict\";\nfunction Main(input) {\n  const N = parseInt(input);\n  let ret = 0;\n  for (let i = 1; (i * i) < N; i++) {\n    const ic = i - 1;\n    if (ic !== 0 && (N % ic) === Math.trunc(N / ic)) {\n      ret += ic;\n    }\n    const j =Math.trunc(N / i) - 1;\n    if ((N % j) === i) {\n      ret += j;\n    }\n  }\n  console.log(ret);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03088_1", "type": "JavaScript", "obfuscated": "var a0_0x5d51fd = a0_0x4089;\nconst main = input => {\n    const N = Number(input);\n    console['log'](calc(N, '', 0x0));\n};\nfunction a0_0x4089(QtBOHV, key) {\n    var stringArray = a0_0x5a97();\n    a0_0x4089 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4089(QtBOHV, key);\n}\nvar map = {};\nvar w = [\n    'A',\n    'C',\n    'G',\n    'T'\n];\nfunction calc(N, lst4, cnt) {\n    var _0x3063cc = a0_0x4089;\n    var key = lst4 + '_' + cnt;\n    if (map[key])\n        return map[key];\n    if (cnt == N) {\n        return 0x1;\n    }\n    var ans = 0x0;\n    for (var i = 0x0; i < 0x4; i++) {\n        var next = lst4 + w[i];\n        var next3 = next[_0x3063cc(0x0)](-0x3);\n        var next4 = next[_0x3063cc(0x0)](-0x4);\n        if (next3[0x0] + next3[0x1] + next3[0x2] != _0x3063cc(0x1) && next3[0x0] + next3[0x2] + next3[0x1] != _0x3063cc(0x1) && next3[0x1] + next3[0x0] + next3[0x2] != _0x3063cc(0x1) && next4[0x0] + next4[0x1] + next4[0x3] != _0x3063cc(0x1) && next4[0x0] + next4[0x2] + next4[0x3] != _0x3063cc(0x1)) {\n            if (_0x3063cc(0x2) !== 'XaVjl') {\n                ans += calc(N, next['slice'](-0x4), cnt + 0x1);\n                ans %= 0x3b9aca07;\n            } else {\n                var key = lst4 + '_' + cnt;\n                if (map[key])\n                    return map[key];\n                if (cnt == N) {\n                    return 0x1;\n                }\n                var ans = 0x0;\n                for (var i = 0x0; i < 0x4; i++) {\n                    var next = lst4 + w[i];\n                    var next3 = next[_0x3063cc(0x0)](-0x3);\n                    var next4 = next['slice'](-0x4);\n                    if (next3[0x0] + next3[0x1] + next3[0x2] != _0x3063cc(0x1) && next3[0x0] + next3[0x2] + next3[0x1] != _0x3063cc(0x1) && next3[0x1] + next3[0x0] + next3[0x2] != 'AGC' && next4[0x0] + next4[0x1] + next4[0x3] != 'AGC' && next4[0x0] + next4[0x2] + next4[0x3] != _0x3063cc(0x1)) {\n                        ans += calc(N, next['slice'](-0x4), cnt + 0x1);\n                        ans %= 0x3b9aca07;\n                    }\n                }\n                map[key] = ans;\n                return ans;\n            }\n        }\n    }\n    map[key] = ans;\n    return ans;\n}\nmain(require('fs')[a0_0x5d51fd(0x3)](a0_0x5d51fd(0x4), a0_0x5d51fd(0x5)));\nfunction a0_0x5a97() {\n    var _0x37c927 = [\n        'slice',\n        'AGC',\n        'xpvRw',\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8'\n    ];\n    a0_0x5a97 = function () {\n        return _0x37c927;\n    };\n    return a0_0x5a97();\n}", "test_cases": [["3", "61"], ["4", "230"], ["100", "388130742"]], "original": "const main = (input) => {\n  const N = Number(input);\n\n  console.log(calc(N, \"\", 0));\n}\n\nvar map = {}; // 最後の4文字+文字数\nvar w = ['A','C','G','T'];\nfunction calc(N, lst4, cnt){\n  var key = lst4 + \"_\" + cnt;\n  if(map[key]) return map[key];\n  if(cnt == N) {\n//    console.log(lst4);\n    return 1;\n  }\n  var ans = 0;\n  for(var i=0;i<4;i++){\n    var next = lst4+w[i];\n    var next3 = (next).slice(-3);\n    var next4 = (next).slice(-4);\n    if(\n      next3[0]+next3[1]+next3[2] != 'AGC' &&\n      next3[0]+next3[2]+next3[1] != 'AGC' &&\n      next3[1]+next3[0]+next3[2] != 'AGC' &&\n\n      next4[0]+next4[1]+next4[3] != 'AGC' &&\n      next4[0]+next4[2]+next4[3] != 'AGC'\n    ){\n      ans += calc(N, next.slice(-4), cnt+1);\n      ans %= 1000000007;\n    }\n  }\n  map[key] = ans;\n  return ans;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));\n", "language": "JavaScript"}
{"filename": "p03157_1", "type": "JavaScript", "obfuscated": "const a0_0x29c95b = a0_0x1681;\nconsole[a0_0x29c95b(0x0)]((args => {\n    const _0x3314a8 = a0_0x1681;\n    const [HW, ...S] = args[_0x3314a8(0x1)]()[_0x3314a8(0x2)]('\\x0a');\n    const [H, W] = HW['split']('\\x20')[_0x3314a8(0x3)](v => parseInt(v));\n    const trail = Array['from']({ 'length': H }, _ => Array(W)[_0x3314a8(0x4)](![]));\n    const dir = [\n        [\n            -0x1,\n            0x0\n        ],\n        [\n            0x0,\n            -0x1\n        ],\n        [\n            0x1,\n            0x0\n        ],\n        [\n            0x0,\n            0x1\n        ]\n    ];\n    let p = 0x0;\n    for (let i = 0x0; i < H; i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (trail[i][j])\n                continue;\n            const stack = [[\n                    i,\n                    j\n                ]];\n            trail[i][j] = !![];\n            let w = S[i][j] === '.' | 0x0, b = w ^ 0x1;\n            while (stack[_0x3314a8(0x5)]) {\n                const [x, y] = stack[_0x3314a8(0x6)]();\n                for (const [dx, dy] of dir) {\n                    const nx = x + dx, ny = y + dy;\n                    if (nx < 0x0 || H <= nx || ny < 0x0 || W <= ny || trail[nx][ny] || S[x][y] === S[nx][ny])\n                        continue;\n                    trail[nx][ny] = !![];\n                    if (S[nx][ny] === '#')\n                        b++;\n                    else\n                        w++;\n                    stack[_0x3314a8(0x7)]([\n                        nx,\n                        ny\n                    ]);\n                }\n            }\n            p += w * b;\n        }\n    }\n    return '' + p;\n})(require('fs')[a0_0x29c95b(0x8)]('/dev/stdin', 'utf8')));\nfunction a0_0x1681(DadVus, key) {\n    const stringArray = a0_0x22c6();\n    a0_0x1681 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1681(DadVus, key);\n}\nfunction a0_0x22c6() {\n    const _0x56c6dd = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'length',\n        'pop',\n        'push',\n        'readFileSync'\n    ];\n    a0_0x22c6 = function () {\n        return _0x56c6dd;\n    };\n    return a0_0x22c6();\n}", "test_cases": [["3 3\n.#.\n..#\n#..", "10"], ["2 4\n....\n....", "0"], ["4 3\n###\n###\n...\n###", "6"]], "original": "console.log((args=>{\n  const [HW,...S] = args.trim().split('\\n');\n  const [H,W] = HW.split(' ').map(v=>parseInt(v));\n  const trail = Array.from({length:H},_=>Array(W).fill(false));\n  const dir = [[-1,0],[0,-1],[1,0],[0,1]];\n  let p = 0;\n  for ( let i = 0; i < H; i++ ) {\n    for ( let j = 0; j < W; j++ ) {\n      if ( trail[i][j] ) continue;\n      const stack = [[i,j]];\n      trail[i][j] = true;\n      let w = S[i][j]==='.'|0, b = w^1;\n      while ( stack.length ) {\n        const [x,y] = stack.pop();\n        for ( const [dx,dy] of dir ) {\n          const nx = x+dx, ny = y+dy;\n          if ( nx < 0 || H <= nx || ny < 0 || W <= ny\n            || trail[nx][ny] || S[x][y] === S[nx][ny] ) continue;\n          trail[nx][ny] = true;\n          if ( S[nx][ny] === '#' ) b++; else w++;\n          stack.push([nx,ny]);\n        }\n      }\n      p += w * b;\n    }\n  }\n  return `${p}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03186_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5c6ae7 = a0_0x16a1;\nfunction a0_0x16a1(qHVyVc, key) {\n    const stringArray = a0_0x5773();\n    a0_0x16a1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x16a1(qHVyVc, key);\n}\nfunction Main(input) {\n    const _0x1d1c01 = a0_0x16a1;\n    input = input[_0x1d1c01(0x0)]()[_0x1d1c01(0x1)]('\\x20')['map'](Number);\n    let badKusuri = input[0x0];\n    let goodKusuri = input[0x1];\n    let goodPoison = input[0x2];\n    for (; goodKusuri > 0x0 && goodPoison > 0x0;) {\n        if (_0x1d1c01(0x2) === _0x1d1c01(0x3)) {\n            goodKusuri = 0x0;\n        } else {\n            goodKusuri--;\n            goodPoison--;\n        }\n    }\n    if (goodPoison == 0x0) {\n        if ('GTNZC' !== _0x1d1c01(0x4)) {\n            goodKusuri = 0x0;\n        } else {\n            badKusuri--;\n            goodPoison--;\n        }\n    } else {\n        for (; badKusuri > 0x0 && goodPoison > 0x0;) {\n            if (_0x1d1c01(0x5) === 'PewPV') {\n                badKusuri--;\n                goodPoison--;\n            } else {\n                goodKusuri--;\n                goodPoison--;\n            }\n        }\n    }\n    if (goodPoison > 0x0) {\n        if ('favym' !== 'QvCTP') {\n            goodPoison--;\n        } else {\n            for (; badKusuri > 0x0 && goodPoison > 0x0;) {\n                badKusuri--;\n                goodPoison--;\n            }\n        }\n    }\n    console[_0x1d1c01(0x6)](input[0x1] + input[0x2] - (goodKusuri + goodPoison));\n}\nMain(require('fs')[a0_0x5c6ae7(0x7)](a0_0x5c6ae7(0x8), a0_0x5c6ae7(0x9)));\nfunction a0_0x5773() {\n    const _0x1f008e = [\n        'trim',\n        'split',\n        'JrPcK',\n        'MXgNB',\n        'FxVSv',\n        'PewPV',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5773 = function () {\n        return _0x1f008e;\n    };\n    return a0_0x5773();\n}", "test_cases": [["3 1 4", "5"], ["5 2 9", "10"], ["8 8 1", "9"]], "original": "'use strict';\n\nfunction Main(input) {\n\n  input = input.trim().split(\" \").map(Number);\n  let badKusuri = input[0];\n  let goodKusuri = input[1];\n  let goodPoison = input[2];\n  \n  for(;(goodKusuri>0)&&(goodPoison>0);){\n  \tgoodKusuri--;\n    goodPoison--;\n  }\n  \n  if(goodPoison == 0){\n  \tgoodKusuri = 0;\n  } else {\n  \tfor(;(badKusuri>0)&&(goodPoison>0);){\n  \t\tbadKusuri--;\n      \tgoodPoison--;\n  \t}\n  }\n  \n  if(goodPoison > 0){\n  \tgoodPoison--;\n  }\n  \n  console.log((input[1] + input[2]) - (goodKusuri + goodPoison));\n  \n  \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03319_1", "type": "JavaScript", "obfuscated": "var a0_0x1b6a54 = a0_0x226f;\nfunction Main(input) {\n    var _0x421f74 = a0_0x226f;\n    var NKA = input['split']('\\x0a');\n    var NK = NKA[0x0][_0x421f74(0x0)]('\\x20');\n    var N = parseInt(NK[0x0], 0xa);\n    var K = parseInt(NK[0x1], 0xa);\n    var A = NKA[0x1][_0x421f74(0x0)]('\\x20')[_0x421f74(0x1)](v => parseInt(v, 0xa));\n    var minPoint = A['indexOf'](0x1);\n    var left = Math[_0x421f74(0x2)](minPoint / (K - 0x1));\n    var right = Math[_0x421f74(0x2)]((N - minPoint - 0x1) / (K - 0x1));\n    console[_0x421f74(0x3)](left + right);\n}\nfunction a0_0x226f(IJbIQL, key) {\n    var stringArray = a0_0x3cf9();\n    a0_0x226f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x226f(IJbIQL, key);\n}\nfunction a0_0x3cf9() {\n    var _0x42d409 = [\n        'split',\n        'map',\n        'ceil',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3cf9 = function () {\n        return _0x42d409;\n    };\n    return a0_0x3cf9();\n}\nMain(require('fs')[a0_0x1b6a54(0x4)](a0_0x1b6a54(0x5), a0_0x1b6a54(0x6)));", "test_cases": [["4 3\n2 3 1 4", "2"], ["3 3\n1 2 3", "1"], ["8 3\n7 3 1 8 4 6 2 5", "4"]], "original": "function Main(input) {\n    var NKA = input.split('\\n')\n    var NK = NKA[0].split(' ')\n    var N = parseInt(NK[0], 10)\n    var K = parseInt(NK[1], 10)\n    var A = NKA[1].split(' ').map(v => parseInt(v, 10))\n\n    var minPoint = A.indexOf(1)\n    var left = Math.ceil(minPoint / (K - 1))\n    var right = Math.ceil((N - minPoint - 1) / (K - 1))\n    \n    console.log(left + right);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03427_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2b75(jeppRE, key) {\n    const stringArray = a0_0xaedb();\n    a0_0x2b75 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b75(jeppRE, key);\n}\nconst a0_0x641ffa = a0_0x2b75;\nconst main = input => {\n    const _0x1281cd = a0_0x2b75;\n    const lines = input[_0x1281cd(0x0)]('\\x0a');\n    if (lines[0x0][_0x1281cd(0x1)] === 0x1) {\n        console[_0x1281cd(0x2)](lines[0x0]);\n        return;\n    }\n    const len9 = lines[0x0][_0x1281cd(0x1)] - 0x1;\n    const head = parseInt(lines[0x0][0x0]) - 0x1;\n    console['log'](head + len9 * 0x9);\n};\nmain(require('fs')['readFileSync'](a0_0x641ffa(0x3), a0_0x641ffa(0x4)));\nfunction a0_0xaedb() {\n    const _0x5c9a17 = [\n        'split',\n        'length',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xaedb = function () {\n        return _0x5c9a17;\n    };\n    return a0_0xaedb();\n}", "test_cases": [["100", "18"], ["9995", "35"], ["3141592653589793", "137"]], "original": "\"use strict\"\n\nconst main = (input) => {\n  const lines = input.split(\"\\n\")\n  if (lines[0].length === 1) {\n    console.log(lines[0])\n    return\n  }\n  const len9 = lines[0].length - 1\n  const head = parseInt(lines[0][0]) - 1\n  console.log(head + len9 * 9)\n}\n\nmain (require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03545_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x23d83c = a0_0x5c4b;\nfunction a0_0x70d6() {\n    var _0x2b0c5a = [\n        'readFileSync',\n        'split',\n        'length'\n    ];\n    a0_0x70d6 = function () {\n        return _0x2b0c5a;\n    };\n    return a0_0x70d6();\n}\nvar lines = require('fs')[a0_0x23d83c(0x0)](0x0, 'utf8')[a0_0x23d83c(0x1)]('\\x0a');\nvar str = lines[0x0];\nvar n = str[a0_0x23d83c(0x2)] - 0x1;\nvar dfs = (i, sum, order) => {\n    if (i === n)\n        return eval(order + str[n]) == 0x7 ? order + str[n] : '';\n    var temp = dfs(i + 0x1, sum, order + str[i] + '+');\n    return temp ? temp : dfs(i + 0x1, sum, order + str[i] + '-');\n};\nfunction a0_0x5c4b(jGzrMa, key) {\n    var stringArray = a0_0x70d6();\n    a0_0x5c4b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c4b(jGzrMa, key);\n}\nvar ans = dfs(0x0, 0x0, '');\nconsole['log'](ans ? ans + '=7' : '');", "test_cases": [["1222", "1+2+2+2=7"], ["0290", "0-2+9+0=7"], ["3242", "3+2+4-2=7"]], "original": "'use strict'\nvar lines = require('fs').readFileSync(0, 'utf8').split('\\n')\nvar str = lines[0]\nvar n = str.length - 1;\nvar dfs = (i, sum, order) => {\n  if (i === n) return eval(order + str[n]) == 7 ? order + str[n] : '';\n  var temp = dfs(i + 1, sum, order + str[i] + '+')\n  return  temp ? temp : dfs(i + 1, sum, order + str[i] + '-');\n}\n\nvar ans = dfs(0, 0, '');\nconsole.log(ans ? ans + '=7' : '');", "language": "JavaScript"}
{"filename": "p03591_1", "type": "JavaScript", "obfuscated": "function a0_0x1c23(yHHvPH, key) {\n    var stringArray = a0_0x3874();\n    a0_0x1c23 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c23(yHHvPH, key);\n}\nfunction a0_0x3874() {\n    var _0x5b328c = [\n        'substr',\n        'YAKI',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3874 = function () {\n        return _0x5b328c;\n    };\n    return a0_0x3874();\n}\nvar a0_0x3aa11d = a0_0x1c23;\nfunction Main(input) {\n    var _0x46d555 = a0_0x1c23;\n    if (input[_0x46d555(0x0)](0x0, 0x4) == _0x46d555(0x1)) {\n        console[_0x46d555(0x2)]('Yes');\n    } else {\n        console[_0x46d555(0x2)]('No');\n    }\n}\nMain(require('fs')[a0_0x3aa11d(0x3)](a0_0x3aa11d(0x4), a0_0x3aa11d(0x5))['trim']());", "test_cases": [["YAKINIKU", "Yes"], ["TAKOYAKI", "No"], ["YAK", "No"]], "original": "function Main(input) {\n\tif(input.substr(0,4)==\"YAKI\"){\n\t\tconsole.log(\"Yes\")\n\t}else{\n\t\tconsole.log(\"No\")\n\t}\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03797_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x13f20 = a0_0x2206;\nconst create = () => {\n    const _0x4c399f = a0_0x2206;\n    const input = require('fs')[_0x4c399f(0x0)]('/dev/stdin', _0x4c399f(0x1))['trim']()['split']('\\x0a');\n    const res = {\n        'list': input,\n        'index': 0x0,\n        'max': input['length'],\n        'hasNext': function () {\n            const _0x3dcfa7 = a0_0x2206;\n            if (_0x3dcfa7(0x2) === _0x3dcfa7(0x3)) {\n                if (!this[_0x3dcfa7(0x4)]()) {\n                    throw _0x3dcfa7(0x5);\n                } else {\n                    return this[_0x3dcfa7(0x6)][this[_0x3dcfa7(0x7)]++];\n                }\n            } else {\n                return this[_0x3dcfa7(0x7)] < this['max'];\n            }\n        },\n        'next': function () {\n            const _0x5ee300 = a0_0x2206;\n            if (!this[_0x5ee300(0x4)]()) {\n                if (_0x5ee300(0x8) !== _0x5ee300(0x9)) {\n                    throw _0x5ee300(0x5);\n                } else {\n                    throw _0x5ee300(0x5);\n                }\n            } else {\n                if ('UZzkk' !== _0x5ee300(0xa)) {\n                    return this[_0x5ee300(0x7)] < this[_0x5ee300(0xb)];\n                } else {\n                    return this[_0x5ee300(0x6)][this[_0x5ee300(0x7)]++];\n                }\n            }\n        }\n    };\n    return res;\n};\nconst o = create();\nconst next = () => o[a0_0x13f20(0xc)]();\nconst nextInt = () => parseInt(o[a0_0x13f20(0xc)]());\nconst nextStrArray = () => o[a0_0x13f20(0xc)]()[a0_0x13f20(0xd)]('\\x20');\nconst nextIntArray = () => o[a0_0x13f20(0xc)]()[a0_0x13f20(0xd)]('\\x20')['map'](el => parseInt(el));\nconst nextCharArray = () => o[a0_0x13f20(0xc)]()[a0_0x13f20(0xd)]('');\nfunction a0_0x3efd() {\n    const _0x30f8d4 = [\n        'readFileSync',\n        'utf8',\n        'eOoKS',\n        'xSlEo',\n        'hasNext',\n        'ArrayIndexOutOfBoundsException',\n        'list',\n        'index',\n        'RrusB',\n        'LlOYH',\n        'UZzkk',\n        'max',\n        'next',\n        'split',\n        'log',\n        'floor'\n    ];\n    a0_0x3efd = function () {\n        return _0x30f8d4;\n    };\n    return a0_0x3efd();\n}\nfunction a0_0x2206(ZSGUGG, key) {\n    const stringArray = a0_0x3efd();\n    a0_0x2206 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2206(ZSGUGG, key);\n}\nconst hasNext = () => o[a0_0x13f20(0x4)]();\nconst myout = (...x) => console[a0_0x13f20(0xe)](...x);\nconst Main = () => {\n    const _0x5ba0d8 = a0_0x2206;\n    const [n, m] = nextIntArray();\n    let ans = m <= 0x2 * n ? Math[_0x5ba0d8(0xf)](M / 0x2) : Math[_0x5ba0d8(0xf)]((0x2 * n + m) / 0x4);\n    console['log'](ans);\n};\nMain();", "test_cases": [["1 6", "2"], ["12345 678901", "175897"]], "original": "\"use strict\"\nconst create = () => {\n    const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\");\n    const res = {\n        \"list\": input, \"index\": 0, \"max\": input.length,\n        \"hasNext\": function () { return this.index < this.max },\n        \"next\": function () { if (!this.hasNext()) { throw \"ArrayIndexOutOfBoundsException\"; } else { return this.list[this.index++]; } }\n    };\n    return res;\n}\nconst o = create();\nconst next = () => o.next()\nconst nextInt = () => parseInt(o.next())\nconst nextStrArray = () => o.next().split(\" \")\nconst nextIntArray = () => o.next().split(\" \").map(el => parseInt(el))\nconst nextCharArray = () => o.next().split(\"\")\nconst hasNext = () => o.hasNext()\nconst myout = (...x) => console.log(...x)\nconst Main = () => {\n    const [n, m] = nextIntArray()\n    let ans = m <= 2 * n ? Math.floor(M / 2) : Math.floor((2 * n + m) / 4)\n    console.log(ans)\n}\nMain()\n", "language": "JavaScript"}
{"filename": "p01093_1", "type": "JavaScript", "obfuscated": "function a0_0x2b2e(mmHogA, key) {\n    const stringArray = a0_0x5c40();\n    a0_0x2b2e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b2e(mmHogA, key);\n}\nfunction a0_0x5c40() {\n    const _0x6ca2de = [\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'length',\n        'abs',\n        'push',\n        'sort',\n        'log'\n    ];\n    a0_0x5c40 = function () {\n        return _0x6ca2de;\n    };\n    return a0_0x5c40();\n}\nconst a0_0x470f72 = a0_0x2b2e;\nconst input = require('fs')['readFileSync']('/dev/stdin', a0_0x470f72(0x0));\nconst lines = input['trim']()[a0_0x470f72(0x1)]('\\x0a');\nwhile (line = lines[a0_0x470f72(0x2)]()) {\n    const numbers = line['split']('\\x20')[a0_0x470f72(0x3)](Number);\n    if (numbers[a0_0x470f72(0x4)] > 0x1) {\n        const diffList = [];\n        numbers[a0_0x470f72(0x3)]((num1, ind1) => {\n            const _0x1d7b8d = a0_0x2b2e;\n            numbers[_0x1d7b8d(0x3)]((num2, ind2) => {\n                const _0x38e3b4 = a0_0x2b2e;\n                if (ind1 !== ind2) {\n                    const diff = Math[_0x38e3b4(0x5)](num1 - num2);\n                    const pair = num1 + '\\x20' + num2;\n                    diffList[_0x38e3b4(0x6)]([\n                        pair,\n                        diff\n                    ]);\n                }\n            });\n        });\n        const sorted = diffList[a0_0x470f72(0x7)]((p1, p2) => p1[0x1] - p2[0x1])[0x0];\n        console[a0_0x470f72(0x8)](sorted[0x1]);\n    }\n}", "test_cases": [["5\n10 10 10 10 10\n5\n1 5 8 9 11\n7\n11 34 83 47 59 29 70\n0", "0\n1\n5"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n \nconst lines = input.trim().split('\\n');\n \nwhile (line = lines.shift()) {\n \n    const numbers = line.split(' ').map(Number);\n\n    if(numbers.length > 1){\n        const diffList = [];\n \n        numbers.map((num1, ind1) => {\n            numbers.map((num2, ind2) => {\n                if (ind1 !== ind2) {\n                    const diff = Math.abs(num1 - num2);\n                    const pair = `${num1} ${num2}`;\n                    diffList.push([pair, diff]);\n                }\n            })\n        })\n \n        const sorted = diffList.sort((p1, p2) => p1[1] - p2[1])[0];\n        console.log(sorted[1]);\n    }\n}\n", "language": "JavaScript"}
{"filename": "p02242_1", "type": "JavaScript", "obfuscated": "var a0_0x559853 = a0_0x2ba8;\nconsole['log'](a0_0x559853(0x0));\nconsole['log'](a0_0x559853(0x1));\nconsole[a0_0x559853(0x2)](a0_0x559853(0x3));\nfunction a0_0x4019() {\n    var _0x4a8150 = [\n        '0\\x200',\n        '1\\x202',\n        'log',\n        '2\\x202',\n        '3\\x201',\n        '4\\x203'\n    ];\n    a0_0x4019 = function () {\n        return _0x4a8150;\n    };\n    return a0_0x4019();\n}\nfunction a0_0x2ba8(sBiKXn, key) {\n    var stringArray = a0_0x4019();\n    a0_0x2ba8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ba8(sBiKXn, key);\n}\nconsole[a0_0x559853(0x2)](a0_0x559853(0x4));\nconsole[a0_0x559853(0x2)](a0_0x559853(0x5));", "test_cases": [["5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3", "0 0\n1 2\n2 2\n3 1\n4 3"]], "original": "console.log(\"0 0\");\nconsole.log(\"1 2\");\nconsole.log(\"2 2\");\nconsole.log(\"3 1\");\nconsole.log(\"4 3\");", "language": "JavaScript"}
{"filename": "p02421_1", "type": "JavaScript", "obfuscated": "var a0_0x1aed43 = a0_0x3338;\nvar input = '';\nvar readable = process[a0_0x1aed43(0x0)];\nreadable['resume']();\nreadable['setEncoding'](a0_0x1aed43(0x1));\nfunction a0_0x3338(CkSHjv, key) {\n    var stringArray = a0_0x29d0();\n    a0_0x3338 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3338(CkSHjv, key);\n}\nfunction a0_0x29d0() {\n    var _0x3c0aac = [\n        'stdin',\n        'utf-8',\n        'data',\n        'end',\n        'split',\n        'TqmKf',\n        'EotEF',\n        'log'\n    ];\n    a0_0x29d0 = function () {\n        return _0x3c0aac;\n    };\n    return a0_0x29d0();\n}\nreadable['on'](a0_0x1aed43(0x2), function (chunk) {\n    input += chunk;\n});\nreadable['on'](a0_0x1aed43(0x3), function () {\n    var _0x5b66e0 = a0_0x3338;\n    var data = input[_0x5b66e0(0x4)]('\\x0a');\n    var n = data[0x0];\n    var tscore = 0x0;\n    var hscore = 0x0;\n    for (var i = 0x1; i < data['length']; i++) {\n        var taha = data[i][_0x5b66e0(0x4)]('\\x20');\n        if (taha[0x0] < taha[0x1]) {\n            hscore += 0x3;\n        } else if (taha[0x1] < taha[0x0]) {\n            tscore += 0x3;\n        } else {\n            if (_0x5b66e0(0x5) !== _0x5b66e0(0x6)) {\n                hscore += 0x1;\n                tscore += 0x1;\n            } else {\n                hscore += 0x3;\n            }\n        }\n    }\n    console[_0x5b66e0(0x7)](tscore + '\\x20' + hscore);\n});", "test_cases": [["3\ncat dog\nfish fish\nlion tiger", "1 7"]], "original": "var input = '';\nvar readable = process.stdin;\nreadable.resume();\nreadable.setEncoding( 'utf-8' );\nreadable.on( 'data', function( chunk ) {\n  input += chunk;\n});\n\nreadable.on( 'end', function() {\n  var data = input.split( \"\\n\" );\n  var n = data[0];\n  var tscore = 0;\n  var hscore = 0;\n  for( var i=1; i<data.length; i++ ) {\n    var taha = data[i].split( ' ' );\n    if( taha[0] < taha[1] ) {\n      hscore += 3;\n    } else if( taha[1] < taha[0] ) {\n      tscore += 3;\n    } else {\n      hscore += 1;\n      tscore += 1;\n    }\n  }\n  console.log( tscore+' '+hscore );  \n});", "language": "JavaScript"}
{"filename": "p02534_1", "type": "JavaScript", "obfuscated": "function a0_0x1754(KkpRWf, key) {\n    const stringArray = a0_0x1c2e();\n    a0_0x1754 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1754(KkpRWf, key);\n}\nconst a0_0x496b72 = a0_0x1754;\nconst input = require('fs')[a0_0x496b72(0x0)](a0_0x496b72(0x1), a0_0x496b72(0x2));\nfunction a0_0x1c2e() {\n    const _0x40d2bb = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'ACL',\n        'log'\n    ];\n    a0_0x1c2e = function () {\n        return _0x40d2bb;\n    };\n    return a0_0x1c2e();\n}\nconst lines = input[a0_0x496b72(0x3)]('\\x0a');\nlet K = lines[0x0]['trim']() - 0x0;\nlet ans = '';\nfor (let i = 0x0; i < K; i++) {\n    ans += a0_0x496b72(0x4);\n}\nconsole[a0_0x496b72(0x5)](ans);", "test_cases": [["3", "ACLACLACL"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nconst lines = input.split('\\n')\nlet K = lines[0].trim() - 0\n\nlet ans = ''\n\nfor (let i = 0; i < K; i++) {\n    ans += 'ACL'\n}\n\nconsole.log(ans)\n", "language": "JavaScript"}
{"filename": "p02631_1", "type": "JavaScript", "obfuscated": "const a0_0x1bd347 = a0_0x9034;\nconst [n, aStr] = require('fs')[a0_0x1bd347(0x0)](a0_0x1bd347(0x1), 'utf8')[a0_0x1bd347(0x2)](/\\n/);\nlet as = aStr[a0_0x1bd347(0x2)](/\\s/)[a0_0x1bd347(0x3)](Number);\nlet total = as[a0_0x1bd347(0x4)]((a, b) => a ^ b);\nfunction a0_0x9034(sQyGGg, key) {\n    const stringArray = a0_0x146f();\n    a0_0x9034 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x9034(sQyGGg, key);\n}\nfunction a0_0x146f() {\n    const _0x1060da = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'reduce',\n        'log',\n        'join'\n    ];\n    a0_0x146f = function () {\n        return _0x1060da;\n    };\n    return a0_0x146f();\n}\nconsole[a0_0x1bd347(0x5)](as[a0_0x1bd347(0x3)](n => n ^ total)[a0_0x1bd347(0x6)]('\\x20'));", "test_cases": [["4\n20 11 9 24", "26 5 7 22"]], "original": "const [n, aStr] = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/)\nlet as = aStr.split(/\\s/).map(Number)\nlet total = as.reduce((a, b) => a ^ b)\nconsole.log(as.map(n => n ^ total).join(' '))", "language": "JavaScript"}
{"filename": "p02793_1", "type": "JavaScript", "obfuscated": "function a0_0x41b4(DoNoLi, key) {\n    const stringArray = a0_0x2c5a();\n    a0_0x41b4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x41b4(DoNoLi, key);\n}\nconst a0_0x25ccfa = a0_0x41b4;\nconsole['log']((args => {\n    const _0x28827b = a0_0x41b4;\n    const [[N], A] = args['trim']()[_0x28827b(0x0)]`\\n`['map'](r => r[_0x28827b(0x0)]` `[_0x28827b(0x1)](v => 0x0 | v));\n    const MOD = 0x3b9aca00 + 0x7, MAX = Math[_0x28827b(0x2)](...A);\n    const mul = (a, b) => ((a >> 0x10) * b % MOD * 0x10000 + (a & 0xffff) * b) % MOD;\n    const isP = Array(0xf4240 + 0x1)[_0x28827b(0x3)](!![]);\n    const px = new Map();\n    for (let p = 0x2; p <= MAX; p++) {\n        if (!isP[p])\n            continue;\n        for (let i = p + p; i <= MAX; i = i + p)\n            isP[i] = ![];\n        px[_0x28827b(0x4)](p, 0x0);\n    }\n    const ap = [];\n    for (let i = 0x0; i < N; i++) {\n        let a = A[i];\n        ap['push'](new Map());\n        for (const [p, x] of px) {\n            if (a === 0x1)\n                break;\n            let s = 0x0;\n            while (a % p === 0x0) {\n                a /= p;\n                s++;\n            }\n            if (s)\n                ap[i][_0x28827b(0x4)](p, s);\n            if (s > x)\n                px[_0x28827b(0x4)](p, s);\n        }\n    }\n    let sum = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        let B = 0x1;\n        for (const [p, q] of px) {\n            if (!q)\n                continue;\n            B = mul(B, p ** (q - (ap[i][_0x28827b(0x5)](p) | 0x0)));\n        }\n        sum = (sum + B) % MOD;\n    }\n    return sum;\n})(require('fs')[a0_0x25ccfa(0x6)](a0_0x25ccfa(0x7), 'utf8')));\nfunction a0_0x2c5a() {\n    const _0x34a9f8 = [\n        'split',\n        'map',\n        'max',\n        'fill',\n        'set',\n        'get',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2c5a = function () {\n        return _0x34a9f8;\n    };\n    return a0_0x2c5a();\n}", "test_cases": [["3\n2 3 4", "13"], ["5\n12 12 12 12 12", "5"], ["3\n1000000 999999 999998", "996989508"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>0|v));\n  const MOD = 1e9+7, MAX = Math.max(...A);\n  const mul = (a,b) => ((a>>16)*b%MOD*65536+(a&65535)*b)%MOD;\n  const isP = Array(1e6+1).fill(true);\n  const px = new Map();\n  for ( let p = 2; p <= MAX; p++ ) {\n    if ( !isP[p] ) continue;\n    for ( let i = p+p; i <= MAX; i=i+p ) isP[i] = false;\n    px.set(p,0);\n  }\n  const ap = [];\n  for ( let i = 0; i < N; i++ ) {\n    let a = A[i];\n    ap.push(new Map());\n    for ( const [p,x] of px ) {\n      if ( a === 1 )break;\n      let s = 0;\n      while ( a % p === 0 ) {\n        a/=p;\n        s++;\n      }\n      if ( s ) ap[i].set(p,s);\n      if ( s > x ) px.set(p,s);\n    }\n  }\n  let sum = 0;\n  for ( let i = 0; i < N; i++ ) {\n    let B = 1;\n    for ( const [p,q] of px ) {\n      if ( !q ) continue;\n      B = mul( B, p ** (q-(ap[i].get(p)|0)) );\n    }\n    sum = ( sum + B ) % MOD;\n  }\n  return sum;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02928_1", "type": "JavaScript", "obfuscated": "function a0_0x382f() {\n    const _0x5f293b = [\n        'split',\n        'map',\n        'slice',\n        'filter',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x382f = function () {\n        return _0x5f293b;\n    };\n    return a0_0x382f();\n}\nconst a0_0x128e64 = a0_0x3b6e;\nfunction Main(input) {\n    const _0x4b73bb = a0_0x3b6e;\n    input = input[_0x4b73bb(0x0)]('\\x0a');\n    const input1 = input[0x0][_0x4b73bb(0x0)]('\\x20');\n    const N = parseInt(input1[0x0]);\n    const K = parseInt(input1[0x1]);\n    const As = input[0x1][_0x4b73bb(0x0)]('\\x20')[_0x4b73bb(0x1)](x => parseInt(x));\n    var count = 0x0;\n    for (i = 0x0; i < N; i++) {\n        var u = As[_0x4b73bb(0x2)](i + 0x1)[_0x4b73bb(0x3)](x => x < As[i])[_0x4b73bb(0x4)];\n        var v = As[_0x4b73bb(0x3)](x => x < As[i])[_0x4b73bb(0x4)];\n        count += u * K % (0x3b9aca00 + 0x7);\n        count += v * (K - 0x1) * K / 0x2 % (0x3b9aca00 + 0x7);\n        count = count % (0x3b9aca00 + 0x7);\n    }\n    console[_0x4b73bb(0x5)](count);\n}\nfunction a0_0x3b6e(pnYpKc, key) {\n    const stringArray = a0_0x382f();\n    a0_0x3b6e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b6e(pnYpKc, key);\n}\nMain(require('fs')[a0_0x128e64(0x6)](a0_0x128e64(0x7), a0_0x128e64(0x8)));", "test_cases": [["2 2\n2 1", "3"], ["3 5\n1 1 1", "0"], ["10 998244353\n10 9 8 7 5 6 3 4 2 1", "185297239"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst input1 = input[0].split(\" \")\n\tconst N = parseInt(input1[0])\n\tconst K = parseInt(input1[1])\n\tconst As = input[1].split(\" \").map(x => parseInt(x))\n\n\tvar count = 0\n\tfor(i=0; i < N; i++){\n\t\tvar u = As.slice(i+1).filter(x => x < As[i]).length\n\t\tvar v = As.filter(x => x < As[i]).length\n\t\tcount += (u * K) % (1000000000 + 7);\n\t\tcount += (v * (K-1)*K / 2) % (1000000000 + 7);\n\t\tcount = count % (1000000000 + 7);\n\t}\n\n\tconsole.log(count)\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03128_1", "type": "JavaScript", "obfuscated": "function a0_0x1bc2() {\n    var _0x4575d4 = [\n        'split',\n        'map',\n        'num',\n        'val',\n        'UWgjU',\n        'log',\n        'length',\n        'Nmdmo',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x1bc2 = function () {\n        return _0x4575d4;\n    };\n    return a0_0x1bc2();\n}\nvar a0_0x3abe45 = a0_0x3a69;\nfunction main(input) {\n    var _0x82f8e2 = a0_0x3a69;\n    var n = input[0x0][_0x82f8e2(0x0)]('\\x20')[0x0] - 0x0;\n    var m = input[0x0][_0x82f8e2(0x0)]('\\x20')[0x1] - 0x0;\n    var nummap = [\n        0x0,\n        0x2,\n        0x5,\n        0x5,\n        0x4,\n        0x5,\n        0x6,\n        0x3,\n        0x7,\n        0x6\n    ];\n    var mattis = input[0x1][_0x82f8e2(0x0)]('\\x20')[_0x82f8e2(0x1)](v => {\n        return {\n            'val': v,\n            'num': nummap[v - 0x0]\n        };\n    });\n    var ans = '';\n    var dp = [];\n    dp[0x0] = '';\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = 0x0; j < m; j++) {\n            var matti = mattis[j];\n            if (dp[i - matti[_0x82f8e2(0x2)]] !== undefined) {\n                var tv = (dp[i - matti[_0x82f8e2(0x2)]] ? dp[i - matti[_0x82f8e2(0x2)]] : '') + matti[_0x82f8e2(0x3)];\n                if (dp[i] === undefined || diff(tv, dp[i]) > 0x0) {\n                    if ('UWgjU' !== _0x82f8e2(0x4)) {\n                        return {\n                            'val': v,\n                            'num': nummap[v - 0x0]\n                        };\n                    } else {\n                        dp[i] = tv;\n                    }\n                }\n            }\n        }\n    }\n    console[_0x82f8e2(0x5)](dp[n]);\n}\nfunction diff(a, b) {\n    var _0x495d31 = a0_0x3a69;\n    if (a[_0x495d31(0x6)] != b[_0x495d31(0x6)])\n        return a[_0x495d31(0x6)] - b[_0x495d31(0x6)];\n    for (var i = 0x0; i < a['length']; i++) {\n        if ('Nmdmo' !== _0x495d31(0x7)) {\n            dp[i] = tv;\n        } else {\n            if (a[i] != b[i])\n                return a[i] - b[i];\n        }\n    }\n    return 0x0;\n}\nfunction a0_0x3a69(clsgKF, key) {\n    var stringArray = a0_0x1bc2();\n    a0_0x3a69 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a69(clsgKF, key);\n}\nmain(require('fs')[a0_0x3abe45(0x8)](a0_0x3abe45(0x9), a0_0x3abe45(0xa))[a0_0x3abe45(0xb)]()['split']('\\x0a'));", "test_cases": [["20 4\n3 7 8 4", "777773"], ["101 9\n9 8 7 6 5 4 3 2 1", "71111111111111111111111111111111111111111111111111"], ["15 3\n5 4 6", "654"]], "original": "function main(input) {\n  var n = input[0].split(\" \")[0]-0;\n  var m = input[0].split(\" \")[1]-0;\n  var nummap = [0,2,5,5,4,5,6,3,7,6];\n  var mattis = input[1].split(\" \").map(v=>{return {val:v, num:nummap[v-0]}});\n  var ans = \"\";\n  var dp = [];\n  dp[0] = \"\";\n  for(var i=1;i<=n;i++){\n    for(var j=0;j<m;j++){\n      var matti = mattis[j];\n      if(dp[i-matti.num] !== undefined){\n        var tv = (dp[i-matti.num]?dp[i-matti.num]:\"\") + matti.val;\n        if(dp[i] === undefined || diff(tv, dp[i]) > 0){\n          dp[i] = tv;\n        }\n      }\n    }\n  }\n  console.log(dp[n]);\n}\nfunction diff(a, b){\n  if(a.length != b.length) return a.length-b.length;\n  for(var i=0;i<a.length;i++){\n    if(a[i]!=b[i]) return a[i]-b[i];\n  }\n  return 0;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03155_1", "type": "JavaScript", "obfuscated": "var a0_0x55400c = a0_0x20d5;\nfunction a0_0x4f82() {\n    var _0x5e2691 = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        'utf8',\n        'trim'\n    ];\n    a0_0x4f82 = function () {\n        return _0x5e2691;\n    };\n    return a0_0x4f82();\n}\nfunction a0_0x20d5(kFxIVS, key) {\n    var stringArray = a0_0x4f82();\n    a0_0x20d5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x20d5(kFxIVS, key);\n}\nfunction Main(input) {\n    var _0x2a7a08 = a0_0x20d5;\n    input = input[_0x2a7a08(0x0)]('\\x0a')[_0x2a7a08(0x1)](Number);\n    console[_0x2a7a08(0x2)]((input[0x0] + 0x1 - input[0x1]) * (input[0x0] + 0x1 - input[0x2]));\n}\nMain(require('fs')[a0_0x55400c(0x3)]('/dev/stdin', a0_0x55400c(0x4))[a0_0x55400c(0x5)]());", "test_cases": [["3\n2\n3", "2"], ["100\n1\n1", "10000"], ["5\n4\n2", "8"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\").map(Number)\n\tconsole.log((input[0]+1-input[1])*(input[0]+1-input[2]));\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03167_1", "type": "JavaScript", "obfuscated": "function a0_0x2356() {\n    const _0x49aa6c = [\n        'trim',\n        'split',\n        'map',\n        'from',\n        'ZPyWg',\n        'HTArU',\n        'DcvFB',\n        'nuNbO',\n        'pop',\n        '/dev/stdin'\n    ];\n    a0_0x2356 = function () {\n        return _0x49aa6c;\n    };\n    return a0_0x2356();\n}\nfunction a0_0x30e7(eJwnzP, key) {\n    const stringArray = a0_0x2356();\n    a0_0x30e7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x30e7(eJwnzP, key);\n}\nconst a0_0x1a38a0 = a0_0x30e7;\nfunction Main(input) {\n    const _0x24c502 = a0_0x30e7;\n    input = input[_0x24c502(0x0)]()[_0x24c502(0x1)]('\\x0a')[_0x24c502(0x2)](function (x) {\n        return x['split']('\\x20');\n    });\n    let C = 0x3b9aca00 + 0x7;\n    let H = parseInt(input[0x0][0x0], 0xa);\n    let W = parseInt(input[0x0][0x1], 0xa);\n    let DP = [];\n    for (let i = 0x0; i < H; i++) {\n        DP['push'](Array[_0x24c502(0x3)]({ 'length': W }, () => 0x0));\n    }\n    DP[0x0][0x0] = 0x1;\n    for (let i = 0x1; i < H + W - 0x1; i++) {\n        for (let j = 0x0; j <= Math['min'](i, H - 0x1); j++) {\n            if (_0x24c502(0x4) === 'ZPyWg') {\n                if (input[j + 0x1][0x0][i - j] === '#' || i - j >= W)\n                    continue;\n                if (j > 0x0 && i - j > 0x0) {\n                    DP[j][i - j] = (DP[j - 0x1][i - j] + DP[j][i - j - 0x1]) % C;\n                } else if (j > 0x0) {\n                    if (_0x24c502(0x5) === _0x24c502(0x5)) {\n                        DP[j][i - j] = DP[j - 0x1][i - j];\n                    } else {\n                        DP[j][i - j] = DP[j - 0x1][i - j];\n                    }\n                } else {\n                    if (_0x24c502(0x6) === _0x24c502(0x7)) {\n                        return x[_0x24c502(0x1)]('\\x20');\n                    } else {\n                        DP[j][i - j] = DP[j][i - j - 0x1];\n                    }\n                }\n            } else {\n                DP[j][i - j] = (DP[j - 0x1][i - j] + DP[j][i - j - 0x1]) % C;\n            }\n        }\n    }\n    console['log'](DP['pop']()[_0x24c502(0x8)]());\n}\nMain(require('fs')['readFileSync'](a0_0x1a38a0(0x9), 'utf8'));", "test_cases": [["3 4\n...#\n.#..\n....", "3"], ["5 2\n..\n#.\n..\n.#\n..", "0"], ["5 5\n..#..\n.....\n#...#\n.....\n..#..", "24"], ["20 20\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................", "345263555"]], "original": "\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n\tlet C = 1e9 + 7;\n\tlet H = parseInt(input[0][0], 10);\n\tlet W = parseInt(input[0][1], 10);\n\tlet DP = [];\n\tfor (let i = 0; i < H; i++){\n\t\tDP.push(Array.from({length: W}, () => 0));\n\t}\n\tDP[0][0] = 1;\n\tfor (let i = 1; i < H + W - 1; i ++){\n\t\tfor (let j = 0; j <= Math.min(i, H - 1); j++){\n\t\t\t// console.log(i, j);\n\t\t\tif (input[j + 1][0][i - j] === '#' || i - j >= W) continue;\n\t\t\tif (j > 0 && i - j > 0) {\n\t\t\t\tDP[j][i - j] = (DP[j - 1][i - j] + DP[j][i - j - 1]) % C;\n\t\t\t} else if (j > 0){\n\t\t\t\tDP[j][i - j] = DP[j - 1][i - j];\n\t\t\t} else {\n\t\t\t\tDP[j][i - j] = DP[j][i - j - 1];\n\t\t\t}\n\t\t\t// console.log(DP);\n\t\t}\n\t}\n\t// console.log(DP);\n\tconsole.log(DP.pop().pop());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03193_1", "type": "JavaScript", "obfuscated": "var a0_0x4690f0 = a0_0x302f;\nfunction a0_0x302f(uahRbr, key) {\n    var stringArray = a0_0x3a40();\n    a0_0x302f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x302f(uahRbr, key);\n}\nfunction Main(input) {\n    var _0x424ab5 = a0_0x302f;\n    input = input[_0x424ab5(0x0)]('\\x0a');\n    var mem = input[0x0][_0x424ab5(0x0)]('\\x20')['map'](Number);\n    var sum = 0x0;\n    for (var i = 0x1; i < input[_0x424ab5(0x1)]; i++) {\n        var n = input[i]['split']('\\x20')[_0x424ab5(0x2)](Number);\n        if (n[0x0] >= mem[0x1] && n[0x1] >= mem[0x2])\n            sum++;\n    }\n    console['log'](sum);\n}\nMain(require('fs')['readFileSync'](a0_0x4690f0(0x3), a0_0x4690f0(0x4))[a0_0x4690f0(0x5)]());\nfunction a0_0x3a40() {\n    var _0xdd808f = [\n        'split',\n        'length',\n        'map',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3a40 = function () {\n        return _0xdd808f;\n    };\n    return a0_0x3a40();\n}", "test_cases": [["3 5 2\n10 3\n5 2\n2 5", "2"], ["10 587586158 185430194\n894597290 708587790\n680395892 306946994\n590262034 785368612\n922328576 106880540\n847058850 326169610\n936315062 193149191\n702035777 223363392\n11672949 146832978\n779291680 334178158\n615808191 701464268", "8"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar mem = input[0].split(\" \").map(Number);\n\tvar sum = 0;\n\tfor(var i=1;i<input.length;i++){\n\t\tvar n = input[i].split(\" \").map(Number);\n\t\tif(n[0]>=mem[1]&&n[1]>=mem[2]) sum++;\n\t}\n\tconsole.log(sum)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03504_1", "type": "JavaScript", "obfuscated": "function a0_0x1cbf(CNZdvN, key) {\n    const stringArray = a0_0x47ec();\n    a0_0x1cbf = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1cbf(CNZdvN, key);\n}\nconst a0_0x2522c0 = a0_0x1cbf;\nfunction max(array) {\n    var result = -0x1 * Infinity;\n    for (num of array) {\n        if (result < num) {\n            result = num;\n        }\n    }\n    return result;\n}\nfunction main(input) {\n    const _0x46d84d = a0_0x1cbf;\n    const lines = input[_0x46d84d(0x0)]('\\x0a');\n    const nums = lines[_0x46d84d(0x1)](line => line[_0x46d84d(0x0)]('\\x20')['map'](x => parseInt(x)));\n    var n_c = nums[_0x46d84d(0x2)]();\n    const N = n_c[0x0];\n    const C = n_c[0x1];\n    const t = Array(0x30d42);\n    const max_recorders = Array(0x30d42);\n    max_recorders['fill'](0x0);\n    for (var c = 0x1; c <= C; c++) {\n        t['fill'](0x0);\n        for (var n = 0x0; n < N; n++) {\n            if (nums[n][0x2] == c) {\n                if ('jaQuY' !== _0x46d84d(0x3)) {\n                    t[nums[n][0x0] * 0x2 - 0x1]++;\n                    t[nums[n][0x1] * 0x2]--;\n                } else {\n                    t[i] += t[i - 0x1];\n                }\n            }\n        }\n        for (var i = 0x1; i < 0x30d42; i++) {\n            if (_0x46d84d(0x4) !== 'BALFF') {\n                t[i] += t[i - 0x1];\n            } else {\n                var result = -0x1 * Infinity;\n                for (num of array) {\n                    if (result < num) {\n                        result = num;\n                    }\n                }\n                return result;\n            }\n        }\n        for (var i = 0x1; i < 0x30d42; i++) {\n            if (_0x46d84d(0x5) === 'mVCyd') {\n                result = num;\n            } else {\n                if (t[i] > 0x0) {\n                    max_recorders[i]++;\n                }\n            }\n        }\n    }\n    console[_0x46d84d(0x6)](max(max_recorders));\n}\nmain(require('fs')[a0_0x2522c0(0x7)](a0_0x2522c0(0x8), a0_0x2522c0(0x9)));\nfunction a0_0x47ec() {\n    const _0x569568 = [\n        'split',\n        'map',\n        'shift',\n        'VwKVY',\n        'oCYJa',\n        'TCvVK',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x47ec = function () {\n        return _0x569568;\n    };\n    return a0_0x47ec();\n}", "test_cases": [["3 2\n1 7 2\n7 8 1\n8 12 1", "2"], ["3 4\n1 3 2\n3 4 4\n1 4 3", "3"], ["9 4\n56 60 4\n33 37 2\n89 90 3\n32 43 1\n67 68 3\n49 51 3\n31 32 3\n70 71 1\n11 12 3", "2"]], "original": "function max(array){\n  var result = -1 * Infinity;\n  for(num of array){\n    if(result < num){result = num;}\n  }\n  return result;\n}\n\nfunction main(input){\n  const lines = input.split('\\n')\n  const nums = lines.map(line => line.split(' ').map(x => parseInt(x)));\n\n  var n_c= nums.shift();\n  const N = n_c[0];\n  const C = n_c[1];\n  const t = Array(200002);\n  const max_recorders = Array(200002);\n  max_recorders.fill(0);\n\n  for(var c=1;c<=C;c++){\n    t.fill(0)\n\n    for(var n=0;n<N;n++){\n      if(nums[n][2]==c){\n        t[nums[n][0]*2-1]++;\n        t[nums[n][1]*2]--;\n      }\n    }\n\n    for(var i=1;i<200002;i++){\n      t[i] += t[i-1];\n    }\n\n    for(var i=1;i<200002;i++){\n      if(t[i]>0){\n        max_recorders[i]++;\n      }\n    }\n\n\n  }\n\n//  console.log(nums);\n//  console.log(t);\n  console.log(max(max_recorders));\n//  console.log((max_recorders));\n}\n\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03575_1", "type": "JavaScript", "obfuscated": "var a0_0x4d91c7 = a0_0x48b4;\nfunction a0_0x2d6d() {\n    var _0x2aea3a = [\n        'split',\n        'length',\n        'splice',\n        'keys',\n        'forEach',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x2d6d = function () {\n        return _0x2aea3a;\n    };\n    return a0_0x2d6d();\n}\nfunction Main(input) {\n    var _0x416e6d = a0_0x48b4;\n    var N = input[0x0][_0x416e6d(0x0)]('\\x20')[0x0] - 0x0;\n    var M = input[0x0][_0x416e6d(0x0)]('\\x20')[0x1] - 0x0;\n    var list = {};\n    for (var i = 0x1; i <= M; i++) {\n        var a = input[i][_0x416e6d(0x0)]('\\x20')[0x0] - 0x0;\n        var b = input[i][_0x416e6d(0x0)]('\\x20')[0x1] - 0x0;\n        list[a] = list[a] || {};\n        list[b] = list[b] || {};\n        list[a][b] = i;\n        list[b][a] = i;\n    }\n    var ans = 0x0;\n    for (var i = 0x1; i <= M; i++) {\n        if (check(list, i) != N)\n            ans++;\n    }\n    console['log'](ans);\n}\nfunction check(list, i) {\n    var _0x4479be = a0_0x48b4;\n    var stack = [0x1];\n    var checked = {};\n    while (stack[_0x4479be(0x1)] > 0x0) {\n        var now = stack[_0x4479be(0x2)](0x0, 0x1)[0x0];\n        if (checked[now])\n            continue;\n        checked[now] = !![];\n        var next = Object[_0x4479be(0x3)](list[now]);\n        next[_0x4479be(0x4)](nxt => {\n            if (list[now][nxt] != i) {\n                stack['push'](nxt);\n            }\n        });\n    }\n    return Object[_0x4479be(0x3)](checked)['length'];\n}\nfunction a0_0x48b4(FvAsJv, key) {\n    var stringArray = a0_0x2d6d();\n    a0_0x48b4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x48b4(FvAsJv, key);\n}\nMain(require('fs')['readFileSync'](a0_0x4d91c7(0x5), a0_0x4d91c7(0x6))[a0_0x4d91c7(0x7)]()['split']('\\x0a'));", "test_cases": [["7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7", "4"], ["3 3\n1 2\n1 3\n2 3", "0"], ["6 5\n1 2\n2 3\n3 4\n4 5\n5 6", "5"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var N = input[0].split(\" \")[0]-0;\n    var M = input[0].split(\" \")[1]-0;\n    var list = {};\n    for(var i=1;i<=M;i++){\n        var a = input[i].split(\" \")[0]-0;\n        var b = input[i].split(\" \")[1]-0;\n        list[a] = list[a]||{};\n        list[b] = list[b]||{};\n        list[a][b] = i;\n        list[b][a] = i;\n    }\n    \n    var ans = 0;\n    for(var i=1;i<=M;i++){\n        if(check(list, i)!=N)ans++;\n    }\n    \n    console.log(ans);\n}\n\n\nfunction check(list, i){\n    var stack = [1];\n    var checked = {};\n    while(stack.length>0){\n        var now = stack.splice(0,1)[0];\n        if(checked[now]) continue;\n        checked[now] = true;\n        var next = Object.keys(list[now]);\n        next.forEach(nxt=>{\n            if(list[now][nxt]!=i){\n                stack.push(nxt);\n            }\n        });\n    }\n    return Object.keys(checked).length;\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));\n\n", "language": "JavaScript"}
{"filename": "p03592_1", "type": "JavaScript", "obfuscated": "const a0_0x9c2674 = a0_0xa260;\nfunction Main(input) {\n    const _0x199e39 = a0_0xa260;\n    const Param = input[_0x199e39(0x0)]('\\x20');\n    const N = i(Param[0x0]);\n    const M = i(Param[0x1]);\n    const K = i(Param[0x2]);\n    for (var n = 0x0; n < N; n++) {\n        for (var m = 0x0; m < M; m++) {\n            var b = calcBlack(n, m, N, M);\n            if (b == K)\n                return console['log'](_0x199e39(0x1));\n        }\n    }\n    console[_0x199e39(0x2)]('No');\n}\nfunction calcBlack(n, m, N, M) {\n    return N * n - m * n + (M * m - n * m);\n}\nfunction i(x) {\n    return parseInt(x, 0xa);\n}\nfunction a0_0xa260(trVTrn, key) {\n    const stringArray = a0_0x5b14();\n    a0_0xa260 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xa260(trVTrn, key);\n}\nMain(require('fs')[a0_0x9c2674(0x3)](a0_0x9c2674(0x4), a0_0x9c2674(0x5)));\nfunction a0_0x5b14() {\n    const _0x4cbe87 = [\n        'split',\n        'Yes',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5b14 = function () {\n        return _0x4cbe87;\n    };\n    return a0_0x5b14();\n}", "test_cases": [["2 2 2", "Yes"], ["2 2 1", "No"], ["3 5 8", "Yes"], ["7 9 20", "No"]], "original": "function Main(input) {\n    const Param = input.split(' ')\n    const N = i(Param[0])\n    const M = i(Param[1])\n    const K = i(Param[2])\n    for(var n = 0; n < N;n++){\n        for(var m = 0; m < M;m++){\n            var b = calcBlack(n, m, N, M)\n            if(b == K) return console.log('Yes')\n        }    \n    }\n    console.log('No')\n}\nfunction calcBlack(n, m, N, M){\n    return (N * n - m * n) + (M * m - n * m)\n}\nfunction i(x){ return parseInt(x, 10)}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03760_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0xc80f(wtNnsS, key) {\n    const stringArray = a0_0x3c60();\n    a0_0xc80f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xc80f(wtNnsS, key);\n}\nconst a0_0x207136 = a0_0xc80f;\nfunction main(s) {\n    const _0x46f944 = a0_0xc80f;\n    s = s['split']('\\x0a');\n    const o = s[0x0]['split']('');\n    const e = s[0x1][_0x46f944(0x0)]('');\n    let ans = '';\n    for (let i = 0x0; i < o[_0x46f944(0x1)] + e[_0x46f944(0x1)]; i++) {\n        if (o[i])\n            ans += o[i];\n        if (e[i])\n            ans += e[i];\n    }\n    console[_0x46f944(0x2)](ans);\n}\nfunction a0_0x3c60() {\n    const _0x1c2bef = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3c60 = function () {\n        return _0x1c2bef;\n    };\n    return a0_0x3c60();\n}\nmain(require('fs')[a0_0x207136(0x3)]('/dev/stdin', a0_0x207136(0x4)));", "test_cases": [["xyz\nabc", "xaybzc"], ["atcoderbeginnercontest\natcoderregularcontest", "aattccooddeerrbreeggiunlnaerrccoonntteesstt"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n\n  const o = s[0].split('');\n  const e = s[1].split('');\n\n  let ans = '';\n\n  for (let i = 0; i < o.length + e.length; i++) {\n    if (o[i]) ans += o[i];\n    if (e[i]) ans += e[i];\n  }\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03774_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x32cf7a = a0_0x4ebe;\nfunction a0_0x4ebe(XwKJGd, key) {\n    const stringArray = a0_0x3ac7();\n    a0_0x4ebe = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ebe(XwKJGd, key);\n}\nconst main = input => {\n    const _0x26b8d8 = a0_0x4ebe;\n    input = input[_0x26b8d8(0x0)]('\\x0a');\n    const N = parseInt(input[0x0][_0x26b8d8(0x0)]('\\x20')[0x0]);\n    const M = parseInt(input[0x0]['split']('\\x20')[0x1]);\n    let arr = input[_0x26b8d8(0x1)](0x1, N + 0x1);\n    let points = input[_0x26b8d8(0x1)](N + 0x1, M + N + 0x1);\n    const parse = v => {\n        const _0xc2832d = a0_0x4ebe;\n        let temp = v['split']('\\x20')[_0xc2832d(0x2)](vv => parseInt(vv));\n        return {\n            'x': temp[0x0],\n            'y': temp[0x1]\n        };\n    };\n    arr = arr[_0x26b8d8(0x2)](parse);\n    points = points[_0x26b8d8(0x2)](parse);\n    let indexArr = [];\n    arr['forEach']((v, i) => {\n        const _0x57cab1 = a0_0x4ebe;\n        let minDist = 0x3b9aca00;\n        let index = 0x0;\n        points[_0x57cab1(0x3)]((w, j) => {\n            const _0x3a1ed6 = a0_0x4ebe;\n            let dist = Math[_0x3a1ed6(0x4)](v['x'] - w['x']) + Math['abs'](v['y'] - w['y']);\n            if (dist < minDist) {\n                minDist = dist;\n                index = j;\n            }\n        });\n        indexArr[_0x57cab1(0x5)](index);\n    });\n    indexArr[_0x26b8d8(0x3)](v => console['log'](v + 0x1));\n};\nfunction a0_0x3ac7() {\n    const _0x434fe6 = [\n        'split',\n        'slice',\n        'map',\n        'forEach',\n        'abs',\n        'push',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0x3ac7 = function () {\n        return _0x434fe6;\n    };\n    return a0_0x3ac7();\n}\nmain(require('fs')['readFileSync'](a0_0x32cf7a(0x6), a0_0x32cf7a(0x7)));", "test_cases": [["2 2\n2 0\n0 0\n-1 0\n1 0", "2\n1"], ["3 4\n10 10\n-10 -10\n3 3\n1 2\n2 3\n3 5\n3 5", "3\n1\n2"], ["5 5\n-100000000 -100000000\n-100000000 100000000\n100000000 -100000000\n100000000 100000000\n0 0\n0 0\n100000000 100000000\n100000000 -100000000\n-100000000 100000000\n-100000000 -100000000", "5\n4\n3\n2\n1"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0].split(' ')[0])\n    const M = parseInt(input[0].split(' ')[1])\n    let arr = input.slice(1, N + 1)\n    let points = input.slice(N + 1, M + N + 1)\n\n    const parse = (v) => {\n        let temp = v.split(' ').map(vv => parseInt(vv))\n        return {\n            x: temp[0],\n            y: temp[1]\n        }\n    }\n    arr = arr.map(parse)\n    points = points.map(parse)\n\n\n    let indexArr = []\n    arr.forEach((v, i) => {\n        let minDist = 1000000000\n        let index = 0\n        points.forEach((w, j) => {\n            let dist = Math.abs(v.x - w.x) + Math.abs(v.y - w.y)\n            if(dist < minDist){\n                minDist = dist\n                index = j\n            }\n        })\n        indexArr.push(index)\n    })\n\n    indexArr.forEach(v => console.log(v + 1))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03807_1", "type": "JavaScript", "obfuscated": "var a0_0x226efd = a0_0x1c46;\nfunction Main(input) {\n    var _0x3b9385 = a0_0x1c46;\n    input = input[_0x3b9385(0x0)]('\\x0a');\n    var arr = input[0x1][_0x3b9385(0x0)]('\\x20')[_0x3b9385(0x1)](Number);\n    var m = 0x0;\n    var n = 0x0;\n    for (var i = 0x0; i < arr[_0x3b9385(0x2)]; i++) {\n        if (arr[i] % 0x2 == 0x0)\n            m++;\n        else\n            n++;\n    }\n    console[_0x3b9385(0x3)](n % 0x2 == 0x0 && (n / 0x2 + m) % 0x2 == 0x0 ? _0x3b9385(0x4) : 'NO');\n}\nMain(require('fs')[a0_0x226efd(0x5)](a0_0x226efd(0x6), a0_0x226efd(0x7))[a0_0x226efd(0x8)]());\nfunction a0_0x1c46(NvdPPB, key) {\n    var stringArray = a0_0x1350();\n    a0_0x1c46 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c46(NvdPPB, key);\n}\nfunction a0_0x1350() {\n    var _0x550e59 = [\n        'split',\n        'map',\n        'length',\n        'log',\n        'YES',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x1350 = function () {\n        return _0x550e59;\n    };\n    return a0_0x1350();\n}", "test_cases": [["3\n1 2 3", "YES"], ["5\n1 2 3 4 5", "NO"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar arr = input[1].split(\" \").map(Number);\n\tvar m=0;\n\tvar n=0;\n\tfor(var i=0;i<arr.length;i++){\n\t\tif(arr[i]%2==0) m++;\n\t\telse n++;\n\t}\n // console.log(n,m)\n\tconsole.log((n%2==0&&((n/2)+m)%2==0)?\"YES\":\"NO\")\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03853_1", "type": "JavaScript", "obfuscated": "var a0_0xaf11c4 = a0_0x5709;\nfunction Main(input) {\n    var _0x100a25 = a0_0x5709;\n    input = input['trim']();\n    var tate = parseInt(input[_0x100a25(0x0)]('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    for (var i = 0x1; i <= tate; i++) {\n        console[_0x100a25(0x1)](input[_0x100a25(0x0)]('\\x0a')[i]);\n        console[_0x100a25(0x1)](input[_0x100a25(0x0)]('\\x0a')[i]);\n    }\n}\nfunction a0_0x5709(cqnULA, key) {\n    var stringArray = a0_0x3829();\n    a0_0x5709 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5709(cqnULA, key);\n}\nfunction a0_0x3829() {\n    var _0xc593d6 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3829 = function () {\n        return _0xc593d6;\n    };\n    return a0_0x3829();\n}\nMain(require('fs')[a0_0xaf11c4(0x2)](a0_0xaf11c4(0x3), a0_0xaf11c4(0x4)));", "test_cases": [["2 2\n*.\n.*", "*.\n*.\n.*\n.*"], ["1 4\n***.", "***.\n***."], ["9 20\n.....***....***.....\n....*...*..*...*....\n...*.....**.....*...\n...*.....*......*...\n....*.....*....*....\n.....**..*...**.....\n.......*..*.*.......\n........**.*........\n.........**.........", ".....***....***.....\n.....***....***.....\n....*...*..*...*....\n....*...*..*...*....\n...*.....**.....*...\n...*.....**.....*...\n...*.....*......*...\n...*.....*......*...\n....*.....*....*....\n....*.....*....*....\n.....**..*...**.....\n.....**..*...**.....\n.......*..*.*.......\n.......*..*.*.......\n........**.*........\n........**.*........\n.........**.........\n.........**........."]], "original": "function Main(input) {\n\tinput = input.trim();\n  var tate = parseInt(input.split(\"\\n\")[0].split(\" \")[0]);\n  for(var i = 1; i <= tate; i++){\n    console.log(input.split(\"\\n\")[i]);\n    console.log(input.split(\"\\n\")[i]);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00010_1", "type": "JavaScript", "obfuscated": "var a0_0x55055e = a0_0x2c09;\nfunction a0_0x2c09(CNYLtI, key) {\n    var stringArray = a0_0x240c();\n    a0_0x2c09 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c09(CNYLtI, key);\n}\nrequire('fs')[a0_0x55055e(0x0)](a0_0x55055e(0x1), a0_0x55055e(0x2))[a0_0x55055e(0x3)]()[a0_0x55055e(0x4)]('\\x0a')[a0_0x55055e(0x5)](function (i) {\n    var _0x1291ce = a0_0x2c09;\n    j = i[_0x1291ce(0x4)]('\\x20');\n    if (j[_0x1291ce(0x6)] == 0x6)\n        a = j[0x0], b = j[0x1], c = j[0x2], d = j[0x3], e = j[0x4], f = j[0x5], g = a * a, h = b * b, k = c * c, l = d * d, m = e * e, n = f * f, p = ((b - f) * (h - l + g - k) - (b - d) * (h - n + g - m)) / (0x2 * (b - f) * (a - c) - 0x2 * (b - d) * (a - e)), q = ((a - e) * (g - k + h - l) - (a - c) * (g - m + h - n)) / (0x2 * (a - e) * (b - d) - 0x2 * (a - c) * (b - f)), console[_0x1291ce(0x7)](p[_0x1291ce(0x8)](0x3), q['toFixed'](0x3), Math['sqrt']((a - p) * (a - p) + (b - q) * (b - q))[_0x1291ce(0x8)](0x3));\n});\nfunction a0_0x240c() {\n    var _0x5ec62b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'some',\n        'length',\n        'log',\n        'toFixed'\n    ];\n    a0_0x240c = function () {\n        return _0x5ec62b;\n    };\n    return a0_0x240c();\n}", "test_cases": [["1\n0.0 0.0 2.0 0.0 2.0 2.0", "1.000 1.000 1.414"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){j=i.split(' ');if(j.length==6)a=j[0],b=j[1],c=j[2],d=j[3],e=j[4],f=j[5],g=a*a,h=b*b,k=c*c,l=d*d,m=e*e,n=f*f,p=((b-f)*(h-l+g-k)-(b-d)*(h-n+g-m))/(2*(b-f)*(a-c)-2*(b-d)*(a-e)),q=((a-e)*(g-k+h-l)-(a-c)*(g-m+h-n))/(2*(a-e)*(b-d)-2*(a-c)*(b-f)),console.log(p.toFixed(3),q.toFixed(3),Math.sqrt((a-p)*(a-p)+(b-q)*(b-q)).toFixed(3))})", "language": "JavaScript"}
{"filename": "p00029_1", "type": "JavaScript", "obfuscated": "function a0_0x4d78() {\n    var _0x4ef22b = [\n        'stdin',\n        'trim',\n        'split',\n        'some',\n        'length',\n        'log',\n        'resume'\n    ];\n    a0_0x4d78 = function () {\n        return _0x4ef22b;\n    };\n    return a0_0x4d78();\n}\nvar a0_0xddca4a = a0_0x6334;\nfunction a0_0x6334(CNrHuY, key) {\n    var stringArray = a0_0x4d78();\n    a0_0x6334 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6334(CNrHuY, key);\n}\nprocess[a0_0xddca4a(0x0)]['on']('data', function (c, o, m) {\n    var _0x1e5eff = a0_0x6334;\n    o = {}, n = 0x0, s = '';\n    (c + '')[_0x1e5eff(0x1)]()[_0x1e5eff(0x2)]('\\x20')[_0x1e5eff(0x3)](function (a) {\n        var _0x3bb50a = a0_0x6334;\n        n < (o[a = a['toLowerCase']()] ? ++o[a] : o[a] = 0x1) && (n = o[m = a]);\n        s[_0x3bb50a(0x4)] < a['length'] && (s = a);\n    });\n    console[_0x1e5eff(0x5)](m + '\\x20' + s);\n})[a0_0xddca4a(0x6)]();", "test_cases": [["Thank you for your mail and your lectures", "your lectures"]], "original": "process.stdin.on(\"data\",function(c,o,m){\n\to={},n=0,s=\"\";\n\t(c+\"\").trim().split(\" \").some(function(a){\n\t\tn<(o[a=a.toLowerCase()]?++o[a]:(o[a]=1))&&(n=o[m=a]);\n\t\ts.length<a.length&&(s=a);\n\t});\n\tconsole.log(m+\" \"+s);\n}).resume();", "language": "JavaScript"}
{"filename": "p02384_1", "type": "JavaScript", "obfuscated": "var a0_0x12079e = a0_0x4e36;\nptrn = [\n    [\n        0x0,\n        0x1,\n        0x2\n    ],\n    [\n        0x0,\n        0x2,\n        0x4\n    ],\n    [\n        0x0,\n        0x4,\n        0x3\n    ],\n    [\n        0x0,\n        0x3,\n        0x1\n    ],\n    [\n        0x1,\n        0x5,\n        0x2\n    ],\n    [\n        0x1,\n        0x2,\n        0x0\n    ],\n    [\n        0x1,\n        0x0,\n        0x3\n    ],\n    [\n        0x1,\n        0x3,\n        0x5\n    ],\n    [\n        0x2,\n        0x1,\n        0x5\n    ],\n    [\n        0x2,\n        0x5,\n        0x4\n    ],\n    [\n        0x2,\n        0x4,\n        0x0\n    ],\n    [\n        0x2,\n        0x0,\n        0x1\n    ]\n];\nfunction dice(num) {\n    var _0x394058 = a0_0x4e36;\n    this['n'] = num;\n    this[_0x394058(0x0)] = function (top, front) {\n        var _0x1fd0b0 = a0_0x4e36;\n        top = this['n']['indexOf'](top);\n        front = this['n'][_0x1fd0b0(0x1)](front);\n        var flag = !![];\n        if (top > 0x2) {\n            top = 0x5 - top;\n            flag = ![];\n        }\n        for (let i = 0x4 * top; i < 0xc; i++) {\n            if (flag && ptrn[i][0x1] === front) {\n                console[_0x1fd0b0(0x2)](this['n'][ptrn[i][0x2]]);\n                break;\n            } else if (!flag && ptrn[i][0x2] === front) {\n                console[_0x1fd0b0(0x2)](this['n'][ptrn[i][0x1]]);\n                break;\n            }\n        }\n    };\n}\nfunction Main(input) {\n    var _0x303f67 = a0_0x4e36;\n    input = input[_0x303f67(0x3)]('\\x0a');\n    var dice_a = new dice(input[0x0][_0x303f67(0x3)]('\\x20'));\n    input[_0x303f67(0x4)](0x2, 0x2 + Number(input[0x1]))[_0x303f67(0x5)](function (d) {\n        var _0x54e893 = a0_0x4e36;\n        t = d['split']('\\x20');\n        dice_a[_0x54e893(0x0)](t[0x0], t[0x1]);\n    });\n}\nMain(require('fs')[a0_0x12079e(0x6)](a0_0x12079e(0x7), a0_0x12079e(0x8)));\nfunction a0_0x4e36(kIXRNV, key) {\n    var stringArray = a0_0x5ad8();\n    a0_0x4e36 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e36(kIXRNV, key);\n}\nfunction a0_0x5ad8() {\n    var _0x4c098b = [\n        'check',\n        'indexOf',\n        'log',\n        'split',\n        'slice',\n        'forEach',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5ad8 = function () {\n        return _0x4c098b;\n    };\n    return a0_0x5ad8();\n}", "test_cases": [["1 2 3 4 5 6\n3\n6 5\n1 3\n3 2", "3\n5\n6"]], "original": "ptrn = [[0, 1, 2], [0, 2, 4], [0, 4, 3], [0, 3, 1],\n        [1, 5, 2], [1, 2, 0], [1, 0, 3], [1, 3, 5],\n        [2, 1, 5], [2, 5, 4], [2, 4, 0], [2, 0, 1]];\nfunction dice(num) {\n  this.n = num;  // array\n  this.check = function(top, front) {\n    top = this.n.indexOf(top);\n    front = this.n.indexOf(front);\n    var flag = true;\n    if(top > 2) {\n      top = 5 - top;\n      flag = false;\n    }\n    for(let i = 4 * top; i < 12; i++) {\n      if(flag && ptrn[i][1] === front) {\n        console.log(this.n[ptrn[i][2]]);\n        break;\n      }else if(!flag && ptrn[i][2] === front) {\n        console.log(this.n[ptrn[i][1]]);\n        break;\n      }\n    }\n  }\n}\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var dice_a = new dice(input[0].split(\" \"));\n  input.slice(2, 2+Number(input[1])).forEach(function(d){\n    t = d.split(\" \");\n    dice_a.check(t[0], t[1]);\n  });\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02385_1", "type": "JavaScript", "obfuscated": "var a0_0xf7be3e = a0_0x18c6;\nfunction move(x, arr) {\n    var d1 = arr[0x0];\n    var d2 = arr[0x1];\n    var d3 = arr[0x2];\n    var d4 = arr[0x3];\n    var d5 = arr[0x4];\n    var d6 = arr[0x5];\n    var after = [];\n    if (x == 'N')\n        after = [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    if (x == 'S')\n        after = [\n            d5,\n            d1,\n            d3,\n            d4,\n            d6,\n            d2\n        ];\n    if (x == 'E')\n        after = [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n    if (x == 'W')\n        after = [\n            d3,\n            d2,\n            d6,\n            d1,\n            d5,\n            d4\n        ];\n    return after;\n}\nvar input = require('fs')[a0_0xf7be3e(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0xf7be3e(0x1)]()[a0_0xf7be3e(0x2)]('\\x0a');\nvar diceA = Arr[0x0][a0_0xf7be3e(0x2)]('\\x20')['map'](Number);\nfunction a0_0xb0f5() {\n    var _0x3118b5 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'map',\n        'random',\n        'every',\n        'log',\n        'Yes'\n    ];\n    a0_0xb0f5 = function () {\n        return _0x3118b5;\n    };\n    return a0_0xb0f5();\n}\nvar diceB = Arr[0x1][a0_0xf7be3e(0x2)]('\\x20')[a0_0xf7be3e(0x3)](Number);\nfunction a0_0x18c6(NuFUIo, key) {\n    var stringArray = a0_0xb0f5();\n    a0_0x18c6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x18c6(NuFUIo, key);\n}\nvar NSEW = 'NSEW'['split']('');\nfor (var i = 0x0; i < 0x64; i++) {\n    var r = Math['floor'](Math[a0_0xf7be3e(0x4)]() * 0x4);\n    diceA = move(NSEW[r], diceA);\n    var flag = diceA[a0_0xf7be3e(0x5)](function (v, i) {\n        return v == diceB[i];\n    });\n    if (flag)\n        break;\n}\nconsole[a0_0xf7be3e(0x6)](flag ? a0_0xf7be3e(0x7) : 'No');", "test_cases": [["1 2 3 4 5 6\n6 2 4 3 5 1", "Yes"], ["1 2 3 4 5 6\n6 5 4 3 2 1", "No"]], "original": "function move(x,arr){\nvar d1=arr[0];\nvar d2=arr[1];\nvar d3=arr[2];\nvar d4=arr[3];\nvar d5=arr[4];\nvar d6=arr[5];\nvar after=[];\nif(x==\"N\")after=[d2,d6,d3,d4,d1,d5];\nif(x==\"S\")after=[d5,d1,d3,d4,d6,d2];\nif(x==\"E\")after=[d4,d2,d1,d6,d5,d3];\nif(x==\"W\")after=[d3,d2,d6,d1,d5,d4];\nreturn after;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar diceA=Arr[0].split(\" \").map(Number);\nvar diceB=Arr[1].split(\" \").map(Number);\nvar NSEW=\"NSEW\".split(\"\");\n\nfor(var i=0;i<100;i++){\n   var r = Math.floor(Math.random () * 4) ;\n   diceA=move(NSEW[r],diceA)\n   var flag=diceA.every(function(v,i){return (v==diceB[i]);});\n   if(flag)break;\n}\nconsole.log(flag?\"Yes\":\"No\");", "language": "JavaScript"}
{"filename": "p02695_1", "type": "JavaScript", "obfuscated": "function a0_0x4222(zfgcHL, key) {\n    const stringArray = a0_0x3e4b();\n    a0_0x4222 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4222(zfgcHL, key);\n}\nconst a0_0x19966f = a0_0x4222;\nconst input = require('fs')[a0_0x19966f(0x0)](a0_0x19966f(0x1), a0_0x19966f(0x2));\nfunction a0_0x3e4b() {\n    const _0x4cf1ad = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'GusIc',\n        'push',\n        'pop',\n        'yWHwO',\n        'xSsxy',\n        'xtbUH',\n        'forEach',\n        'qbnkM',\n        'max',\n        'log'\n    ];\n    a0_0x3e4b = function () {\n        return _0x4cf1ad;\n    };\n    return a0_0x3e4b();\n}\n(input => {\n    const _0x2fb529 = a0_0x4222;\n    const rows = input['split']('\\x0a');\n    const [N, M, Q] = rows[0x0][_0x2fb529(0x3)]('\\x20')[_0x2fb529(0x4)](Number);\n    const A = [];\n    for (let i = 0x0; i < Q; i++) {\n        A[i] = rows[i + 0x1][_0x2fb529(0x3)]('\\x20')['map'](Number);\n    }\n    const ss = [];\n    const s = [];\n    let d = 0x0;\n    let v = 0x0;\n    while (v !== undefined) {\n        if ('SGhvl' === _0x2fb529(0x5)) {\n            ss[_0x2fb529(0x6)]([...s]);\n            s[_0x2fb529(0x7)]();\n            v++;\n            d--;\n        } else {\n            if (d === N) {\n                if ('yWHwO' === _0x2fb529(0x8)) {\n                    ss[_0x2fb529(0x6)]([...s]);\n                    s[_0x2fb529(0x7)]();\n                    v++;\n                    d--;\n                } else {\n                    v = s['pop']();\n                    d--;\n                }\n            } else if (v >= M) {\n                if (_0x2fb529(0x9) !== _0x2fb529(0xa)) {\n                    v = s[_0x2fb529(0x7)]();\n                    d--;\n                } else {\n                    sum += a[0x3];\n                }\n            } else {\n                s[_0x2fb529(0x6)](v + 0x1);\n                d++;\n            }\n        }\n    }\n    let res = 0x0;\n    ss[_0x2fb529(0xb)](s => {\n        const _0x203ec4 = a0_0x4222;\n        let sum = 0x0;\n        A[_0x203ec4(0xb)](a => {\n            const _0x3b6ce2 = a0_0x4222;\n            if ('MVVBw' !== _0x3b6ce2(0xc)) {\n                if (s[a[0x1] - 0x1] - s[a[0x0] - 0x1] === a[0x2]) {\n                    sum += a[0x3];\n                }\n            } else {\n                A[i] = rows[i + 0x1][_0x3b6ce2(0x3)]('\\x20')[_0x3b6ce2(0x4)](Number);\n            }\n        });\n        res = Math[_0x203ec4(0xd)](res, sum);\n    });\n    console[_0x2fb529(0xe)](res);\n})(input);", "test_cases": [["3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10", "110"], ["4 6 10\n2 4 1 86568\n1 4 0 90629\n2 3 0 90310\n3 4 1 29211\n3 4 3 78537\n3 4 2 8580\n1 2 1 96263\n1 4 2 2156\n1 2 0 94325\n1 4 3 94328", "357500"], ["10 10 1\n1 10 9 1", "1"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n;(input => {\n    const rows = input.split('\\n')\n    const [N, M, Q] = rows[0].split(' ').map(Number)\n    const A = []\n    for (let i = 0; i < Q; i++) {\n        A[i] = rows[i + 1].split(' ').map(Number)\n    }\n\n    const ss = []\n    const s = []\n    let d = 0\n    let v = 0\n    while (v !== undefined) {\n        if (d === N) {\n            ss.push([...s])\n            s.pop()\n            v++\n            d--\n        } else if (v >= M) {\n            v = s.pop()\n            d--\n        } else {\n            s.push(v + 1)\n            d++\n        }\n    }\n\n    let res = 0\n    ss.forEach(s => {\n        let sum = 0\n        A.forEach(a => {\n            if (s[a[1] - 1] - s[a[0] - 1] === a[2]) {\n                sum += a[3]\n            }\n        })\n        res = Math.max(res, sum)\n    })\n\n    console.log(res)\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02873_1", "type": "JavaScript", "obfuscated": "var a0_0x3145f8 = a0_0x36ef;\nfunction Main(input) {\n    var _0x2a64e5 = a0_0x36ef;\n    var S = input[_0x2a64e5(0x0)]('');\n    var Slong = S[_0x2a64e5(0x1)];\n    var Muki = '>';\n    var Out = 0x1;\n    var V = [];\n    var Left = 0x0;\n    var Right = 0x0;\n    var Sum = 0x0;\n    for (var i = 0x0; i < Slong; i++) {\n        if (S[i] == Muki) {\n            if (Muki == '>') {\n                if ('toLxb' === _0x2a64e5(0x2)) {\n                    Left++;\n                } else {\n                    if (V[i - 0x1]['R'] < V[i]['L']) {\n                        V[i - 0x1]['R']--;\n                    } else {\n                        V[i]['L']--;\n                    }\n                }\n            } else {\n                Right++;\n            }\n            Out = 0x0;\n        } else {\n            if ('rBIeP' === _0x2a64e5(0x3)) {\n                V[_0x2a64e5(0x4)]({\n                    'L': Left,\n                    'R': Right\n                });\n            } else {\n                if (Muki == '<') {\n                    if (_0x2a64e5(0x5) === _0x2a64e5(0x5)) {\n                        V[_0x2a64e5(0x4)]({\n                            'L': Left,\n                            'R': Right\n                        });\n                        Muki = '>';\n                        Left = 0x0;\n                        Right = 0x0;\n                        Left++;\n                        Out = 0x1;\n                    } else {\n                        Left++;\n                    }\n                } else {\n                    Muki = '<';\n                    Right++;\n                    Out = 0x0;\n                }\n            }\n        }\n    }\n    if (Out == 0x0) {\n        V[_0x2a64e5(0x4)]({\n            'L': Left,\n            'R': Right\n        });\n    }\n    for (var i = 0x1; i < V['length']; i++) {\n        if (_0x2a64e5(0x6) === _0x2a64e5(0x6)) {\n            if (V[i - 0x1]['R'] < V[i]['L']) {\n                V[i - 0x1]['R']--;\n            } else {\n                if ('StdcM' === _0x2a64e5(0x7)) {\n                    V[i]['L']--;\n                } else {\n                    V[_0x2a64e5(0x4)]({\n                        'L': Left,\n                        'R': Right\n                    });\n                    Muki = '>';\n                    Left = 0x0;\n                    Right = 0x0;\n                    Left++;\n                    Out = 0x1;\n                }\n            }\n        } else {\n            V[i - 0x1]['R']--;\n        }\n    }\n    for (var i = 0x0; i < V[_0x2a64e5(0x1)]; i++) {\n        Sum += V[i]['L'] * (V[i]['L'] + 0x1) / 0x2;\n        Sum += V[i]['R'] * (V[i]['R'] + 0x1) / 0x2;\n    }\n    console[_0x2a64e5(0x8)](Sum);\n}\nMain(require('fs')[a0_0x3145f8(0x9)](a0_0x3145f8(0xa), a0_0x3145f8(0xb)));\nfunction a0_0x36ef(zPjYJm, key) {\n    var stringArray = a0_0x1432();\n    a0_0x36ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x36ef(zPjYJm, key);\n}\nfunction a0_0x1432() {\n    var _0x3aba81 = [\n        'split',\n        'length',\n        'toLxb',\n        'cuBYe',\n        'push',\n        'JtKsX',\n        'CFwKy',\n        'StdcM',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1432 = function () {\n        return _0x3aba81;\n    };\n    return a0_0x1432();\n}", "test_cases": [["<>>", "3"], ["<>>><<><<<<<>>><", "28"]], "original": "function Main(input) {\n  var S = input.split(\"\");\n  var Slong = S.length\n  var Muki = \">\";\n  var Out = 1;\n  var V = [];\n  var Left = 0;\n  var Right = 0;\n  var Sum = 0;\n  for(var i = 0;i<Slong;i++){\n\n    if(S[i] == Muki){\n      if(Muki == \">\"){\n        Left ++;\n    }else{\n      Right ++;\n    }\n    Out = 0;\n  }else{\n    if(Muki == \"<\"){\n      V.push({L:Left,R:Right})\n      Muki = \">\"\n      Left = 0;\n      Right = 0;\n      Left ++;\n      Out = 1;\n    }else{\n      Muki = \"<\"\n      Right ++;\n      Out = 0;\n    }\n  }\n  }\n  if(Out == 0){\n  V.push({L:Left,R:Right})\n  }\n  \n//console.log(V);\nfor(var i=1;i<V.length;i++){\n  if(V[i-1].R < V[i].L){\n    V[i-1].R --; \n  }else{\n    V[i].L --;\n  }\n}\n//  console.log(V);\nfor(var i=0;i<V.length;i++){\n    Sum += (V[i].L*(V[i].L+1))/2;\n//    console.log((V[i].L*(V[i].L+1))/2);\n    Sum += (V[i].R*(V[i].R+1))/2;\n//    console.log((V[i].R*(V[i].R+1))/2);\n  }\n  console.log(Sum);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03401_1", "type": "JavaScript", "obfuscated": "var a0_0x12f87a = a0_0x30a3;\nfunction a0_0x4b68() {\n    var _0x765c26 = [\n        'concat',\n        'split',\n        'map',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4b68 = function () {\n        return _0x765c26;\n    };\n    return a0_0x4b68();\n}\nfunction main(input) {\n    var _0x53dcfc = a0_0x30a3;\n    var n = input[0x0] - 0x0;\n    var list = [0x0][_0x53dcfc(0x0)](input[0x1][_0x53dcfc(0x1)]('\\x20')[_0x53dcfc(0x2)](v => v - 0x0), [0x0]);\n    var llist = [];\n    llist[0x0] = 0x0;\n    var rlist = [];\n    rlist[n] = 0x0;\n    for (var i = 0x1; i <= n; i++) {\n        llist[i] = llist[i - 0x1] + Math[_0x53dcfc(0x3)](list[i] - list[i - 0x1]);\n        rlist[n - i] = rlist[n - i + 0x1] + Math[_0x53dcfc(0x3)](list[n - i + 0x1] - list[n - i + 0x2]);\n    }\n    for (var i = 0x1; i <= n; i++) {\n        var ans = 0x0;\n        ans += llist[i - 0x1];\n        ans += rlist[i] || 0x0;\n        ans += Math[_0x53dcfc(0x3)](list[i - 0x1] - list[i + 0x1]);\n        console[_0x53dcfc(0x4)](ans);\n    }\n}\nfunction a0_0x30a3(rytvxF, key) {\n    var stringArray = a0_0x4b68();\n    a0_0x30a3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x30a3(rytvxF, key);\n}\nmain(require('fs')[a0_0x12f87a(0x5)](a0_0x12f87a(0x6), a0_0x12f87a(0x7))['trim']()[a0_0x12f87a(0x1)]('\\x0a'));", "test_cases": [["3\n3 5 -1", "12\n8\n10"], ["5\n1 1 1 2 0", "4\n4\n4\n2\n4"], ["6\n-679 -2409 -3258 3095 -3291 -4462", "21630\n21630\n19932\n8924\n21630\n19288"]], "original": "function main(input) {\n    var n = input[0]-0;\n    var list = [0].concat(input[1].split(\" \").map(v=>v-0), [0]);\n    var llist = []; llist[0] = 0;\n    var rlist = []; rlist[n] = 0;\n    for(var i=1;i<=n;i++){\n        llist[i] = llist[i-1] + Math.abs(list[i]-list[i-1]);\n        rlist[n-i] = rlist[n-i+1] + Math.abs(list[n-i+1]-list[n-i+2]);\n    }\n    for(var i=1;i<=n;i++){\n        var ans = 0;\n        ans += llist[i-1];\n        ans += rlist[i]||0;\n        ans += Math.abs(list[i-1]-list[i+1]);\n        console.log(ans);\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03463_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x25448f = a0_0x3d21;\nfunction a0_0x3d21(DGuQYd, key) {\n    const stringArray = a0_0x3d9a();\n    a0_0x3d21 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d21(DGuQYd, key);\n}\nlet input = require('fs')[a0_0x25448f(0x0)]('/dev/stdin', a0_0x25448f(0x1));\nlet N = input[a0_0x25448f(0x2)]('\\x20')[0x0] * 0x1;\nlet A = input[a0_0x25448f(0x2)]('\\x20')[0x1] * 0x1;\nlet B = input[a0_0x25448f(0x2)]('\\x20')[0x2] * 0x1;\nlet dist = Math[a0_0x25448f(0x3)](A - B) % 0x2;\nlet ans = dist == 0x0 ? a0_0x25448f(0x4) : a0_0x25448f(0x5);\nfunction a0_0x3d9a() {\n    const _0x21e48d = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'abs',\n        'Alice',\n        'Borys',\n        'log'\n    ];\n    a0_0x3d9a = function () {\n        return _0x21e48d;\n    };\n    return a0_0x3d9a();\n}\nconsole[a0_0x25448f(0x6)](ans);", "test_cases": [["5 2 4", "Alice"], ["2 1 2", "Borys"], ["58 23 42", "Borys"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nlet N = input.split(' ')[0]*1;\nlet A = input.split(' ')[1]*1;\nlet B = input.split(' ')[2]*1;\nlet dist = Math.abs(A - B)%2;\nlet ans = dist == 0? \"Alice\" : \"Borys\";\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03476_1", "type": "JavaScript", "obfuscated": "const a0_0x457db8 = a0_0x3af5;\nfunction a0_0x7065() {\n    const _0x396849 = [\n        'log',\n        'trim',\n        'map',\n        'split',\n        'fill',\n        'push',\n        'join',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x7065 = function () {\n        return _0x396849;\n    };\n    return a0_0x7065();\n}\nfunction a0_0x3af5(WURKfR, key) {\n    const stringArray = a0_0x7065();\n    a0_0x3af5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3af5(WURKfR, key);\n}\nconsole[a0_0x457db8(0x0)](function (args) {\n    const _0x6fb538 = a0_0x3af5;\n    const [[Q], ...tmp] = args[_0x6fb538(0x1)]()['split']('\\x0a')[_0x6fb538(0x2)](r => r[_0x6fb538(0x3)]('\\x20')[_0x6fb538(0x2)](v => v | 0x0));\n    const MAX = 0x186a0;\n    const a = Array(MAX)['fill'](!![]);\n    const s = Array(MAX + 0x2)[_0x6fb538(0x4)](0x0);\n    a[0x0] = ![];\n    s[0x2] = 0x1;\n    for (let i = 0x1; i < MAX; i++) {\n        if (a[i]) {\n            const n = 0x2 * i + 0x1;\n            if (~i & 0x1 && a[i / 0x2])\n                s[i + 0x1] += 0x1;\n            for (let j = i + n; j < MAX; j = j + n)\n                a[j] = ![];\n        }\n        s[i + 0x2] += s[i + 0x1];\n    }\n    const x = [];\n    for (let i = 0x0; i < Q; i++) {\n        const l = (tmp[i][0x0] - 0x1) / 0x2;\n        const r = (tmp[i][0x1] - 0x1) / 0x2 + 0x1;\n        x[_0x6fb538(0x5)](s[r] - s[l]);\n    }\n    return x[_0x6fb538(0x6)]('\\x0a');\n}(require('fs')[a0_0x457db8(0x7)](a0_0x457db8(0x8), 'utf8')));", "test_cases": [["1\n3 7", "2"], ["4\n13 13\n7 11\n7 11\n2017 2017", "1\n0\n0\n1"], ["6\n1 53\n13 91\n37 55\n19 51\n73 91\n13 49", "4\n4\n1\n1\n1\n2"]], "original": "console.log(function(args){\n  const [[Q],...tmp] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const MAX = 1e5;\n  const a = Array(MAX).fill(true);\n  const s = Array(MAX+2).fill(0);\n  a[0] = false; s[2] = 1;\n  for ( let i = 1; i < MAX; i++ ) {\n    if ( a[i] ) {\n      const n = 2*i+1;\n      if ( ~i&1 && a[i/2] ) s[i+1] += 1;\n      for ( let j = i+n; j < MAX; j=j+n ) a[j] = false;\n    }\n    s[i+2] += s[i+1];\n  }\n  const x = [];\n  for ( let i = 0; i < Q; i++ ) {\n    const l = ( tmp[i][0] - 1 ) / 2;\n    const r = ( tmp[i][1] - 1 ) / 2 + 1;\n    x.push( s[r] - s[l] );\n  }\n  return x.join('\\n');\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03550_1", "type": "JavaScript", "obfuscated": "function a0_0x2227() {\n    const _0x34d8ef = [\n        'split',\n        'shift',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2227 = function () {\n        return _0x34d8ef;\n    };\n    return a0_0x2227();\n}\nconst a0_0x27a06e = a0_0x136e;\nfunction a0_0x136e(VwvzjF, key) {\n    const stringArray = a0_0x2227();\n    a0_0x136e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x136e(VwvzjF, key);\n}\nfunction main(input) {\n    const _0x5d7b87 = a0_0x136e;\n    const lines = input[_0x5d7b87(0x0)]('\\x0a');\n    const NZW = lines['shift']()['split']('\\x20')['map'](x => parseInt(x));\n    const N = NZW[0x0];\n    const Z = NZW[0x1];\n    const W = NZW[0x2];\n    const A = lines[_0x5d7b87(0x1)]()[_0x5d7b87(0x0)]('\\x20')['map'](x => parseInt(x));\n    const initial = Math[_0x5d7b87(0x2)](Z - W);\n    var fetch_n_1 = Math[_0x5d7b87(0x2)](A[N - 0x1] - A[N - 0x2]);\n    if (N < 0x2) {\n        fetch_n_1 = 0x0;\n    }\n    const fetch_n = Math['abs'](A[N - 0x1] - W);\n    const result = Math['max'](initial, fetch_n_1, fetch_n);\n    console['log'](result);\n}\nmain(require('fs')[a0_0x27a06e(0x3)](a0_0x27a06e(0x4), a0_0x27a06e(0x5)));", "test_cases": [["3 100 100\n10 1000 100", "900"], ["3 100 1000\n10 100 100", "900"], ["5 1 1\n1 1 1 1 1", "0"], ["1 1 1\n1000000000", "999999999"]], "original": "function main(input){\n  const lines = input.split('\\n');\n  const NZW = lines.shift().split(' ').map(x => parseInt(x));\n  const N = NZW[0];\n  const Z = NZW[1];\n  const W = NZW[2];\n  const A = lines.shift().split(' ').map(x => parseInt(x));\n\n  // 初期を維持、n-1取る、n取る\n\n  const initial = Math.abs(Z-W);\n  var fetch_n_1 = Math.abs(A[N-1] - A[N-2]);\n  if(N<2){fetch_n_1=0}\n  const fetch_n = Math.abs(A[N-1]-W);\n\n  const result = Math.max(initial, fetch_n_1, fetch_n)\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03696_1", "type": "JavaScript", "obfuscated": "var a0_0x3cfcfd = a0_0x25be;\nfunction a0_0x25be(tJctlk, key) {\n    var stringArray = a0_0x3a06();\n    a0_0x25be = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x25be(tJctlk, key);\n}\nfunction myout(text) {\n    console['log'](text);\n}\nfunction a0_0x3a06() {\n    var _0x24ca22 = [\n        'trim',\n        'split',\n        'stringify',\n        'indexOf',\n        'iXrZr',\n        'replace',\n        'length',\n        'BBMPp',\n        'slice',\n        'APZZu',\n        'podwJ',\n        'log',\n        'XikBm',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3a06 = function () {\n        return _0x24ca22;\n    };\n    return a0_0x3a06();\n}\nfunction Main(input) {\n    var _0x539000 = a0_0x25be;\n    input = input[_0x539000(0x0)]()[_0x539000(0x1)]('\\x0a');\n    var tmpInput = JSON['parse'](JSON[_0x539000(0x2)](input[0x1]));\n    var left = 0x0;\n    var right = 0x0;\n    while (tmpInput[_0x539000(0x3)]('()') != -0x1) {\n        if (_0x539000(0x4) !== _0x539000(0x4)) {\n            tmpInput = tmpInput[_0x539000(0x5)]('()', '');\n        } else {\n            tmpInput = tmpInput['replace']('()', '');\n        }\n    }\n    for (var i = 0x0; i < tmpInput[_0x539000(0x6)]; i++) {\n        if (_0x539000(0x7) !== 'BBMPp') {\n            input[0x1] += ')';\n        } else {\n            var tmp = tmpInput[_0x539000(0x8)](i, i + 0x1);\n            if (tmp == '(') {\n                if (_0x539000(0x9) === _0x539000(0xa)) {\n                    console[_0x539000(0xb)](text);\n                } else {\n                    left++;\n                }\n            } else if (tmp == ')') {\n                if (_0x539000(0xc) === _0x539000(0xc)) {\n                    right++;\n                } else {\n                    input[0x1] = '(' + input[0x1];\n                }\n            }\n        }\n    }\n    for (var i = 0x0; i < right; i++) {\n        input[0x1] = '(' + input[0x1];\n    }\n    for (var i = 0x0; i < left; i++) {\n        input[0x1] += ')';\n    }\n    myout(input[0x1]);\n}\nMain(require('fs')[a0_0x3cfcfd(0xd)](a0_0x3cfcfd(0xe), a0_0x3cfcfd(0xf))[a0_0x3cfcfd(0x0)]());", "test_cases": [["3\n())", "(())"], ["6\n)))())", "(((()))())"], ["8\n))))((((", "(((())))(((())))"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\tinput = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var tmpInput = JSON.parse(JSON.stringify(input[1]));\n  var left = 0;\n  var right = 0;\n  while(tmpInput.indexOf(\"()\") != -1){\n  \ttmpInput = tmpInput.replace(\"()\",\"\");\n\t}\n  //myout(tmpInput);\n  for(var i = 0; i < tmpInput.length; i++){\n    var tmp = tmpInput.slice(i, i + 1);\n    if(tmp == \"(\"){\n       left++;\n    }else if(tmp == \")\"){\n       right++;\n    }\n  }\n  for(var i = 0; i < right; i++){\n    input[1] = \"(\" + input[1];\n  }\n  for(var i = 0; i < left; i++){\n    input[1] += \")\";\n  }\n  myout(input[1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03861_1", "type": "JavaScript", "obfuscated": "function a0_0x1511(IvGTLZ, key) {\n    const stringArray = a0_0x52b8();\n    a0_0x1511 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1511(IvGTLZ, key);\n}\nconst a0_0xf6747f = a0_0x1511;\nconst padLeft = (w, l, c) => ([...Array(l)][a0_0xf6747f(0x0)](_ => c)['join']('') + w)[a0_0xf6747f(0x1)](l * -0x1);\nconst split = (w, n) => (ws => ws[a0_0xf6747f(0x2)]((acc, _, i) => i % n ? acc : [\n    ...acc,\n    ws[a0_0xf6747f(0x1)](i, i + n)[a0_0xf6747f(0x3)]('')\n], []))([...w]);\nconst arrange = n => (x => x[0x0] ? [\n    x[0x0] - 0x1,\n    x[0x1] + 0x2540be400\n] : x)(split(padLeft(n, 0x14, '0'), 0xa)[a0_0xf6747f(0x0)](x => +x));\nconst solve0 = (a, b, x) => Math[a0_0xf6747f(0x4)](b / x) - Math[a0_0xf6747f(0x4)](a / x);\nconst solve1 = (a, b, x) => Math[a0_0xf6747f(0x4)](b / x) - (a == 0x0 ? -0x1 : Math[a0_0xf6747f(0x4)]((a - 0x1) / x));\nconst nullOrStr = n => n ? String(n) : '';\nfunction a0_0x52b8() {\n    const _0x3520d7 = [\n        'map',\n        'slice',\n        'reduce',\n        'join',\n        'floor',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x52b8 = function () {\n        return _0x3520d7;\n    };\n    return a0_0x52b8();\n}\nconst fn2 = (a2, b2, x) => '' + nullOrStr(solve0(+a2[0x0], b2[0x0], x)) + solve1(a2[0x1], b2[0x1], x);\nconst fn1 = (a, b, x) => fn2(arrange(a), arrange(b), x);\nconst main = input => fn1(...input[a0_0xf6747f(0x5)]('\\x20'));\nconsole[a0_0xf6747f(0x6)](main(require('fs')[a0_0xf6747f(0x7)](a0_0xf6747f(0x8), a0_0xf6747f(0x9))));", "test_cases": [["4 8 2", "3"], ["0 5 1", "6"], ["9 9 2", "0"], ["1 1000000000000000000 3", "333333333333333333"]], "original": "const padLeft = (w, l, c) => ([...Array(l)].map(_ => c).join('') + w).slice(l * -1);\nconst split = (w, n) => (ws => ws.reduce((acc, _, i) => i % n ? acc : [...acc, ws.slice(i, i + n).join('')], []))([...w]);\nconst arrange = n => (x => x[0] ? [x[0] - 1, x[1] + 10000000000] : x)(split(padLeft(n, 20, '0'), 10).map(x => +x));\n\nconst solve0 = (a, b, x) => Math.floor(b / x) -  Math.floor(a / x);\nconst solve1 = (a, b, x) => Math.floor(b / x) - (a == 0 ? -1 : Math.floor((a - 1) / x));\n\nconst nullOrStr = n => n ? String(n) : '';\n\nconst fn2 = (a2, b2, x) => `${nullOrStr(solve0(+a2[0], b2[0], x))}${solve1(a2[1], b2[1], x)}`;\nconst fn1 = (a, b, x) => fn2(arrange(a), arrange(b), x);\n\nconst main = input => (fn1)(...input.split(' '));\n\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03993_1", "type": "JavaScript", "obfuscated": "function a0_0x499b(UWMLYg, key) {\n    var stringArray = a0_0xe049();\n    a0_0x499b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x499b(UWMLYg, key);\n}\nvar a0_0x4ca206 = a0_0x499b;\nvar lines = [];\nvar result = 0x0;\nvar readline = require(a0_0x4ca206(0x0));\nvar rl = readline[a0_0x4ca206(0x1)]({\n    'input': process[a0_0x4ca206(0x2)],\n    'output': process[a0_0x4ca206(0x3)]\n});\nfunction a0_0xe049() {\n    var _0x5d88da = [\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'push',\n        'close',\n        'map'\n    ];\n    a0_0xe049 = function () {\n        return _0x5d88da;\n    };\n    return a0_0xe049();\n}\nrl['on']('line', function (x) {\n    var _0x3e2f60 = a0_0x499b;\n    lines[_0x3e2f60(0x4)](x);\n});\nrl['on'](a0_0x4ca206(0x5), function () {\n    var _0x4fd6aa = a0_0x499b;\n    var N = Number(lines[0x0]);\n    var a = lines[0x1]['split']('\\x20')[_0x4fd6aa(0x6)](value => Number(value));\n    for (var i = 0x0; i < N; i++) {\n        if (i < a[i]) {\n            if (a[a[i] - 0x1] === i + 0x1) {\n                result++;\n            }\n        }\n    }\n    console['log'](result);\n});", "test_cases": [["4\n2 1 4 3", "2"], ["3\n2 3 1", "0"], ["5\n5 5 5 5 1", "1"]], "original": "var lines = []; var result = 0;\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var a = lines[1].split(\" \").map(value => Number(value));\n\n    for (var i = 0; i < N; i++) {\n        if (i < a[i]) {\n            if (a[a[i] - 1] === i + 1) { result++; }\n        }\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p00020_1", "type": "JavaScript", "obfuscated": "var a0_0x5b8dac = a0_0x3e53;\nfunction a0_0x3e53(bRSmWM, key) {\n    var stringArray = a0_0x58e4();\n    a0_0x3e53 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e53(bRSmWM, key);\n}\nfunction a0_0x58e4() {\n    var _0x58215c = [\n        'readFileSync',\n        '/dev/stdin',\n        'log',\n        'trim',\n        'toUpperCase'\n    ];\n    a0_0x58e4 = function () {\n        return _0x58215c;\n    };\n    return a0_0x58e4();\n}\nvar input = require('fs')[a0_0x5b8dac(0x0)](a0_0x5b8dac(0x1), 'utf8');\nconsole[a0_0x5b8dac(0x2)](input[a0_0x5b8dac(0x3)]()[a0_0x5b8dac(0x4)]());", "test_cases": [["this is a pen.", "THIS IS A PEN."]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconsole.log(input.trim().toUpperCase());", "language": "JavaScript"}
{"filename": "p00046_1", "type": "JavaScript", "obfuscated": "var a0_0x2da426 = a0_0xc17d;\ni = require('fs')[a0_0x2da426(0x0)](a0_0x2da426(0x1), 'utf8')[a0_0x2da426(0x2)]()[a0_0x2da426(0x3)](/\\n/)[a0_0x2da426(0x4)](function (a, b) {\n    return a - b;\n}), console[a0_0x2da426(0x5)](i[i['length'] - 0x1] - i[0x0]);\nfunction a0_0xc17d(PtbBee, key) {\n    var stringArray = a0_0x4940();\n    a0_0xc17d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xc17d(PtbBee, key);\n}\nfunction a0_0x4940() {\n    var _0x1ff6ee = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'sort',\n        'log'\n    ];\n    a0_0x4940 = function () {\n        return _0x1ff6ee;\n    };\n    return a0_0x4940();\n}", "test_cases": [["3776.0\n1819.0\n645.2\n2004.1\n1208.6", "3130.8"]], "original": "i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split(/\\n/).sort(function(a,b){return a-b}),console.log(i[i.length-1]-i[0])", "language": "JavaScript"}
{"filename": "p02383_1", "type": "JavaScript", "obfuscated": "const a0_0xb0351f = a0_0x210c;\nprocess['stdin'][a0_0xb0351f(0x0)]();\nfunction a0_0x2225() {\n    const _0x4013e3 = [\n        'resume',\n        'setEncoding',\n        'utf8',\n        'createInterface',\n        'stdout',\n        'line',\n        'close',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x2225 = function () {\n        return _0x4013e3;\n    };\n    return a0_0x2225();\n}\nfunction a0_0x210c(vEdVVS, key) {\n    const stringArray = a0_0x2225();\n    a0_0x210c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x210c(vEdVVS, key);\n}\nprocess['stdin'][a0_0xb0351f(0x1)](a0_0xb0351f(0x2));\nconst reader = require('readline')[a0_0xb0351f(0x3)]({\n    'input': process['stdin'],\n    'output': process[a0_0xb0351f(0x4)]\n});\nconst lines = [];\nreader['on'](a0_0xb0351f(0x5), line => {\n    lines['push'](line);\n});\nreader['on'](a0_0xb0351f(0x6), () => {\n    const _0x386585 = a0_0x210c;\n    let [top, back, right, left, front, bottom] = lines[0x0]['split']('\\x20')[_0x386585(0x7)](Number);\n    const rs = lines[0x1];\n    for (let i = 0x0; i < rs[_0x386585(0x8)]; i++) {\n        switch (rs[i]) {\n        case 'N':\n            [top, front, bottom, back] = [\n                back,\n                top,\n                front,\n                bottom\n            ];\n            break;\n        case 'S':\n            [top, front, bottom, back] = [\n                front,\n                bottom,\n                back,\n                top\n            ];\n            break;\n        case 'W':\n            [top, left, bottom, right] = [\n                right,\n                top,\n                left,\n                bottom\n            ];\n            break;\n        case 'E':\n            [top, left, bottom, right] = [\n                left,\n                bottom,\n                right,\n                top\n            ];\n            break;\n        }\n    }\n    console[_0x386585(0x9)](top);\n});", "test_cases": [["1 2 4 8 16 32\nSE", "8"], ["1 2 4 8 16 32\nEESWN", "32"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\n\nconst reader = require(\"readline\").createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nconst lines = [];\n\nreader.on(\"line\", (line) => {\n  lines.push(line);\n});\n\nreader.on(\"close\", () => {\n  let [top, back, right, left, front, bottom] = lines[0].split(\" \").map(Number);\n  const rs = lines[1];\n  for (let i = 0; i < rs.length; i++) {\n    switch (rs[i]) {\n      case \"N\":\n        [top, front, bottom, back] = [back, top, front, bottom];\n        break;\n      case \"S\":\n        [top, front, bottom, back] = [front, bottom, back, top];\n        break;\n      case \"W\":\n        [top, left, bottom, right] = [right, top, left, bottom];\n        break;\n      case \"E\":\n        [top, left, bottom, right] = [left, bottom, right, top];\n        break;\n    }\n  }\n  console.log(top);\n});\n\n", "language": "JavaScript"}
{"filename": "p02651_1", "type": "JavaScript", "obfuscated": "function a0_0xfd16(rvlBZE, key) {\n    const stringArray = a0_0x5f5b();\n    a0_0xfd16 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xfd16(rvlBZE, key);\n}\nconst a0_0x2dd828 = a0_0xfd16;\nfunction a0_0x5f5b() {\n    const _0x1ba904 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5f5b = function () {\n        return _0x1ba904;\n    };\n    return a0_0x5f5b();\n}\nfunction Main(input) {\n    const _0x3fd822 = a0_0xfd16;\n    let t = input['split']('\\x0a')[0x0], n, a = new Array(n), s = new Array(n), x = 0x0;\n    for (let i = 0x0; i < t; i++) {\n        n = input[_0x3fd822(0x0)]('\\x0a')[i * 0x3 + 0x1];\n        a = input[_0x3fd822(0x0)]('\\x0a')[i * 0x3 + 0x2][_0x3fd822(0x0)]('\\x20');\n        s = input['split']('\\x0a')[i * 0x3 + 0x3]['split']('');\n        let tmp;\n        for (let j = 0x0; j < n; j++) {\n            tmp = x ^ a[j];\n            if (s[j] == 0x0) {\n                if (tmp == 0x0)\n                    x = tmp;\n            } else\n                x = tmp;\n        }\n        if (x == 0x0) {\n            console[_0x3fd822(0x1)](0x0);\n        } else\n            console['log'](0x1);\n        x = 0x0;\n    }\n}\nMain(require('fs')[a0_0x2dd828(0x2)](a0_0x2dd828(0x3), a0_0x2dd828(0x4)));", "test_cases": [["3\n2\n1 2\n10\n2\n1 1\n10\n6\n2 3 4 5 6 7\n111000", "1\n0\n0"]], "original": "function Main(input) {\n  let t = input.split(\"\\n\")[0], n , a = new Array(n), s = new Array(n), x = 0;\n  \n  for (let i = 0; i < t; i++) {\n    n = input.split(\"\\n\")[i*3+1];\n    a = input.split(\"\\n\")[i*3+2].split(\" \");\n    s = input.split(\"\\n\")[i*3+3].split(\"\");\n\n    let tmp;\n\n    for (let j = 0; j < n; j++) {\n      tmp = x ^ a[j];\n      \n      if (s[j] == 0) {\n        if (tmp == 0) x = tmp;\n      } else x = tmp;      \n    }\n    \n    if (x == 0) {\n      console.log(0)\n    } else console.log(1);\n    \n    x = 0;\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02865_1", "type": "JavaScript", "obfuscated": "function a0_0x2119(gfdrnZ, key) {\n    var stringArray = a0_0x2281();\n    a0_0x2119 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2119(gfdrnZ, key);\n}\nvar a0_0xf5fc5f = a0_0x2119;\nprocess[a0_0xf5fc5f(0x0)][a0_0xf5fc5f(0x1)]();\nprocess[a0_0xf5fc5f(0x0)]['setEncoding'](a0_0xf5fc5f(0x2));\nvar lines = [];\nvar reader = require(a0_0xf5fc5f(0x3))[a0_0xf5fc5f(0x4)]({\n    'input': process[a0_0xf5fc5f(0x0)],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nfunction a0_0x2281() {\n    var _0x59da23 = [\n        'stdin',\n        'resume',\n        'utf8',\n        'readline',\n        'createInterface',\n        'log'\n    ];\n    a0_0x2281 = function () {\n        return _0x59da23;\n    };\n    return a0_0x2281();\n}\nreader['on']('close', () => {\n    var _0x144dab = a0_0x2119;\n    const N = +lines[0x0];\n    console[_0x144dab(0x5)](N % 0x2 ? (N - 0x1) / 0x2 : N / 0x2 - 0x1);\n});", "test_cases": [["4", "1"], ["999999", "499999"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const N = +lines[0];\n\tconsole.log(N%2?(N-1)/2:N/2-1);\n});", "language": "JavaScript"}
{"filename": "p03246_1", "type": "JavaScript", "obfuscated": "var a0_0x326c6a = a0_0x3dcd;\nline = require('fs')[a0_0x326c6a(0x0)](a0_0x326c6a(0x1), 'utf8')[a0_0x326c6a(0x2)]('\\x0a');\nn = parseInt(line[0x0]);\nv = line[0x1][a0_0x326c6a(0x2)]('\\x20');\nvar odds = {};\nfunction a0_0x3dcd(WJsOKq, key) {\n    var stringArray = a0_0x5cbe();\n    a0_0x3dcd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3dcd(WJsOKq, key);\n}\nvar even = {};\nfor (var i = 0x0; i < v['length']; i++) {\n    di = i & 0x1 ? even : odds;\n    di[v[i]] = !di[v[i]] ? 0x1 : di[v[i]] + 0x1;\n}\nvar a = [];\nvar b = [];\nfor (var k in odds)\n    a['push']({\n        'v': k,\n        'n': odds[k]\n    });\nfor (var k in even)\n    b[a0_0x326c6a(0x3)]({\n        'v': k,\n        'n': even[k]\n    });\na[a0_0x326c6a(0x4)]((x, y) => y['n'] - x['n']);\nb[a0_0x326c6a(0x4)]((x, y) => y['n'] - x['n']);\nva = a[0x0];\nvb = b[0x0];\nif (va['v'] === vb['v']) {\n    if (va['n'] > vb['n'])\n        vb = !b[0x1] ? { 'n': 0x0 } : b[0x1];\n    else\n        va = !a[0x1] ? { 'n': 0x0 } : a[0x1];\n}\nlog = console[a0_0x326c6a(0x5)];\nlog(n / 0x2 - va['n'] + n / 0x2 - vb['n']);\nfunction a0_0x5cbe() {\n    var _0x2cd2a1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'push',\n        'sort',\n        'log'\n    ];\n    a0_0x5cbe = function () {\n        return _0x2cd2a1;\n    };\n    return a0_0x5cbe();\n}", "test_cases": [["4\n3 1 3 2", "1"], ["6\n105 119 105 119 105 119", "0"], ["4\n1 1 1 1", "2"]], "original": "line = require('fs')\n  .readFileSync('/dev/stdin', 'utf8')\n  .split('\\n')\n\nn = parseInt(line[0])\nv = line[1].split(' ')\n\nvar odds = {}\nvar even = {}\nfor (var i = 0; i < v.length; i++) {\n  di = i & 1 ? even : odds\n  di[v[i]] = !di[v[i]] ? 1 : di[v[i]] + 1\n}\n\nvar a = []\nvar b = []\nfor (var k in odds) a.push({ v: k, n: odds[k] })\nfor (var k in even) b.push({ v: k, n: even[k] })\n\na.sort((x, y) => y.n - x.n)\nb.sort((x, y) => y.n - x.n)\n\nva = a[0]\nvb = b[0]\nif (va.v === vb.v) {\n  if (va.n > vb.n) vb = !b[1] ? { n: 0 } : b[1]\n  else va = !a[1] ? { n: 0 } : a[1]\n}\n\nlog = console.log\n// log('n', n)\n// log('v', v)\n// log('sorted', a, b)\n// log('select', va, vb)\nlog(n / 2 - va.n + n / 2 - vb.n)\n", "language": "JavaScript"}
{"filename": "p03271_1", "type": "JavaScript", "obfuscated": "var a0_0xdefda0 = a0_0x2917;\nvar p = require('fs')[a0_0xdefda0(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x24cf() {\n    var _0x3a2245 = [\n        'readFileSync',\n        'map',\n        'log',\n        'Yes'\n    ];\n    a0_0x24cf = function () {\n        return _0x3a2245;\n    };\n    return a0_0x24cf();\n}\nfunction a0_0x2917(TwnNGz, key) {\n    var stringArray = a0_0x24cf();\n    a0_0x2917 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2917(TwnNGz, key);\n}\np = p['split']('\\x0a')[a0_0xdefda0(0x1)](a => +a);\nconsole[a0_0xdefda0(0x2)](main());\nfunction main() {\n    var _0x1e28f5 = a0_0x2917;\n    var N = 'No';\n    var n = p[0x0];\n    var t = 0x0;\n    for (i = 0x1; i <= n; i++) {\n        while (t > i) {\n            if (p[i] !== i)\n                return N;\n            i++;\n        }\n        var j = i;\n        while (p[j] !== i) {\n            j++;\n            if (p[j] !== j)\n                return N;\n            j++;\n        }\n        t = j;\n        while (j > i) {\n            if (p[j - 0x2] < p[j - 0x1])\n                return N;\n            p[j] = p[j - 0x2];\n            j -= 0x2;\n        }\n    }\n    return _0x1e28f5(0x3);\n}", "test_cases": [["5\n5\n2\n1\n4\n3", "Yes"], ["4\n3\n2\n4\n1", "No"], ["7\n3\n2\n1\n6\n5\n4\n7", "Yes"], ["6\n5\n3\n4\n1\n2\n6", "No"]], "original": "var p=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\np = p.split(\"\\n\").map(a=>+a);\nconsole.log(main());\nfunction main(){\n  var N = \"No\";\n  var n = p[0];\n  var t = 0;\n  for(i = 1; i <= n; i++){\n    while(t > i){if(p[i] !== i)return N;i++;}\n    var j = i;\n    while(p[j] !== i){\n      j++;\n      if(p[j] !== j)return N;\n      j++;\n    }\n    t = j;\n    while(j > i){\n      if(p[j-2] < p[j-1])return N;\n      p[j] = p[j-2]; j -= 2;\n    }\n  }\n  return \"Yes\";\n}", "language": "JavaScript"}
{"filename": "p03311_1", "type": "JavaScript", "obfuscated": "var a0_0xd01be8 = a0_0x32a3;\nfunction Main(input) {\n    var _0x115fc8 = a0_0x32a3;\n    input = input['split']('\\x0a');\n    if (input[input[_0x115fc8(0x0)] - 0x1] === '') {\n        if ('HjTrI' === 'HjTrI') {\n            input['pop']();\n        } else {\n            if (!e[_0x115fc8(0x1)](k)) {\n                next[_0x115fc8(0x2)](e[_0x115fc8(0x3)]([k]));\n            }\n        }\n    }\n    const N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    var array = input[0x1][_0x115fc8(0x4)]('\\x20')[_0x115fc8(0x5)]((e, i) => {\n        return e - i - 0x1;\n    })[_0x115fc8(0x6)]((a, b) => {\n        var _0x503df3 = a0_0x32a3;\n        if (_0x503df3(0x7) !== _0x503df3(0x7)) {\n            return a - b;\n        } else {\n            return a - b;\n        }\n    });\n    console[_0x115fc8(0x8)](array[_0x115fc8(0x9)]((acc, cur) => {\n        var _0xdc7928 = a0_0x32a3;\n        if ('PKWXr' !== _0xdc7928(0xa)) {\n            return acc + Math[_0xdc7928(0xb)](cur - array[Math[_0xdc7928(0xc)](array[_0xdc7928(0x0)] / 0x2)]);\n        } else {\n            return acc + Math[_0xdc7928(0xb)](cur - array[Math[_0xdc7928(0xc)](array[_0xdc7928(0x0)] / 0x2)]);\n        }\n    }, 0x0));\n}\nfunction a0_0x3986() {\n    var _0x297d0f = [\n        'length',\n        'includes',\n        'push',\n        'concat',\n        'split',\n        'map',\n        'sort',\n        'SHxuE',\n        'log',\n        'reduce',\n        'ONUif',\n        'abs',\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'forEach'\n    ];\n    a0_0x3986 = function () {\n        return _0x297d0f;\n    };\n    return a0_0x3986();\n}\nfunction a0_0x32a3(XFHNWT, key) {\n    var stringArray = a0_0x3986();\n    a0_0x32a3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x32a3(XFHNWT, key);\n}\nMain(require('fs')[a0_0xd01be8(0xd)](a0_0xd01be8(0xe), a0_0xd01be8(0xf)));\nfunction permutation(n, k) {\n    var _0x5705a1 = a0_0x32a3;\n    var ret = [[]];\n    var next;\n    for (var i = 0x0; i < k; i++) {\n        next = [];\n        ret[_0x5705a1(0x10)](e => {\n            var _0x11b3ae = a0_0x32a3;\n            for (var k = 0x1; k <= n; k++) {\n                if (!e[_0x11b3ae(0x1)](k)) {\n                    next[_0x11b3ae(0x2)](e[_0x11b3ae(0x3)]([k]));\n                }\n            }\n        });\n        ret = next[_0x5705a1(0x3)]([]);\n    }\n    return ret;\n}", "test_cases": [["5\n2 2 3 5 5", "2"], ["9\n1 2 3 4 5 6 7 8 9", "0"], ["6\n6 5 4 3 2 1", "18"], ["7\n1 1 1 1 2 3 4", "6"]], "original": "\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  var array=input[1].split(' ').map((e,i)=>{\n    return e-i-1;\n  }).sort((a,b)=>{\n    return a-b;\n  });\n  console.log(array.reduce((acc,cur)=>{\n    return acc+Math.abs(cur-array[Math.floor(array.length/2)]);\n  },0));\n\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction permutation(n,k){\n    var ret=[[]];\n    var next;\n    for(var i=0;i<k;i++){\n        next=[];\n        ret.forEach(e=>{\n            for(var k=1;k<=n;k++){\n                if(!e.includes(k)){\n                    next.push(e.concat([k]));\n                }\n            }\n        });\n        ret=next.concat([]);\n    }\n    return ret;\n}", "language": "JavaScript"}
{"filename": "p03380_1", "type": "JavaScript", "obfuscated": "function a0_0x55b2() {\n    var _0x5ee130 = [\n        'split',\n        'map',\n        'max',\n        'sort',\n        'abs',\n        'log',\n        '%d\\x20%d',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x55b2 = function () {\n        return _0x5ee130;\n    };\n    return a0_0x55b2();\n}\nfunction a0_0x5953(QUFTAQ, key) {\n    var stringArray = a0_0x55b2();\n    a0_0x5953 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5953(QUFTAQ, key);\n}\nvar a0_0x489e3d = a0_0x5953;\nfunction Main(s) {\n    var _0x44b363 = a0_0x5953;\n    s = s[_0x44b363(0x0)]('\\x0a');\n    var a = s[0x1]['split']('\\x20')[_0x44b363(0x1)](a => +a);\n    const n = +s[0x0];\n    var m = Math[_0x44b363(0x2)](...a);\n    var b = [...a][_0x44b363(0x3)]((a, b) => a - b);\n    var c = 0x218711a00;\n    for (var i = 0x0; i < n - 0x1; i++) {\n        if (Math['abs'](m / 0x2 - b[i]) < c)\n            c = Math[_0x44b363(0x4)](m / 0x2 - b[i]);\n        else\n            break;\n    }\n    console[_0x44b363(0x5)](_0x44b363(0x6), m, b[i - 0x1]);\n}\nMain(require('fs')[a0_0x489e3d(0x7)]('/dev/stdin', a0_0x489e3d(0x8)));", "test_cases": [["5\n6 9 4 2 11", "11 6"], ["2\n100 0", "100 0"]], "original": "function Main(s) {\n  s = s.split(\"\\n\");\n  var a = s[1].split(\" \").map(a => +a);\n  const n = +s[0];\n  var m = Math.max(...a);\n  var b = [...a].sort((a,b)=> a-b);\n  var c = 9e9;\n  for(var i = 0; i < n - 1; i++){\n    if(Math.abs(m / 2 - b[i]) < c)c = Math.abs(m / 2 - b[i]);\n    else break;\n  }\n  console.log(\"%d %d\", m, b[i-1]);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03438_1", "type": "JavaScript", "obfuscated": "function a0_0x1f17() {\n    var _0x52c8cb = [\n        'split',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1f17 = function () {\n        return _0x52c8cb;\n    };\n    return a0_0x1f17();\n}\nfunction a0_0x5095(kWWDFy, key) {\n    var stringArray = a0_0x1f17();\n    a0_0x5095 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5095(kWWDFy, key);\n}\nvar a0_0x2014b6 = a0_0x5095;\nfunction Main(input) {\n    var _0x2cf9b4 = a0_0x5095;\n    input = input[_0x2cf9b4(0x0)]('\\x0a');\n    var n = parseInt(input[0x0]);\n    a = new Array(n)['fill'](0x0);\n    b = new Array(n)['fill'](0x0);\n    tmpa = input[0x1]['split']('\\x20');\n    tmpb = input[0x2][_0x2cf9b4(0x0)]('\\x20');\n    var suma = 0x0;\n    var sumb = 0x0;\n    var dif = 0x0;\n    for (i = 0x0; i < n; i++) {\n        a[i] = parseInt(tmpa[i]);\n        suma += a[i];\n        b[i] = parseInt(tmpb[i]);\n        sumb += b[i];\n        dif += Math[_0x2cf9b4(0x1)](a[i] - b[i]);\n    }\n    var ans = 'No';\n    if (suma <= sumb && dif <= (sumb - suma) * 0x3) {\n        ans = 'Yes';\n    }\n    console[_0x2cf9b4(0x2)]('%s', ans);\n}\nMain(require('fs')[a0_0x2014b6(0x3)](a0_0x2014b6(0x4), a0_0x2014b6(0x5)));", "test_cases": [["3\n1 2 3\n5 2 2", "Yes"], ["5\n3 1 4 1 5\n2 7 1 8 2", "No"], ["5\n2 7 1 8 2\n3 1 4 1 5", "No"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  a = new Array(n).fill(0);\n  b = new Array(n).fill(0);\n  tmpa = input[1].split(\" \");\n  tmpb = input[2].split(\" \");\n  var suma=0;\n  var sumb=0;\n  var dif=0;\n\n  for(i=0;i<n;i++){\n    a[i]=parseInt(tmpa[i]);\n    suma += a[i];\n    b[i]=parseInt(tmpb[i]);\n    sumb += b[i];\n    dif+=Math.abs(a[i]-b[i]);\n  }\n  var ans =\"No\";\n  if(suma<=sumb&&dif<=(sumb-suma)*3){\n    ans=\"Yes\";\n  }\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03559_1", "type": "JavaScript", "obfuscated": "var a0_0x332026 = a0_0x4f00;\nfunction Main(input) {\n    var _0x10a8ae = a0_0x4f00;\n    input = input[_0x10a8ae(0x0)]()[_0x10a8ae(0x1)]('\\x0a')['map'](function (x) {\n        var _0x482f2f = a0_0x4f00;\n        if (_0x482f2f(0x2) !== _0x482f2f(0x3)) {\n            return x[_0x482f2f(0x1)]('\\x20');\n        } else {\n            return x[_0x482f2f(0x1)]('\\x20');\n        }\n    });\n    var N = parseInt(input[0x0][0x0], 0xa);\n    var vec_A = input[0x1][_0x10a8ae(0x4)](e => parseInt(e, 0xa));\n    var vec_B = input[0x2]['map'](e => parseInt(e, 0xa));\n    var vec_C = input[0x3][_0x10a8ae(0x4)](e => parseInt(e, 0xa));\n    function compareFunc(a, b) {\n        var _0x414cf4 = a0_0x4f00;\n        if ('BlgSL' === _0x414cf4(0x5)) {\n            while (s < N && vec_B[s] > vec_A[i]) {\n                while (t < N - 0x1 && vec_C[t + 0x1] > vec_B[s]) {\n                    t++;\n                }\n                if (s > 0x0)\n                    tmpAdj = vec_sumB[s - 0x1];\n                else\n                    tmpAdj = 0x0;\n                vec_sumB[s] = tmpAdj + t + 0x1;\n                s++;\n            }\n            s = Math[_0x414cf4(0x6)](0x0, s - 0x1);\n            ans += vec_sumB[s];\n        } else {\n            return b - a;\n        }\n    }\n    vec_A['sort'](compareFunc);\n    vec_B[_0x10a8ae(0x7)](compareFunc);\n    vec_C[_0x10a8ae(0x7)](compareFunc);\n    var s = 0x0;\n    var t = -0x1;\n    var vec_sumB = Array[_0x10a8ae(0x8)]({ 'length': N }, () => 0x0);\n    var tmpAdj = 0x0;\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        while (s < N && vec_B[s] > vec_A[i]) {\n            if (_0x10a8ae(0x9) === _0x10a8ae(0x9)) {\n                while (t < N - 0x1 && vec_C[t + 0x1] > vec_B[s]) {\n                    if (_0x10a8ae(0xa) !== _0x10a8ae(0xb)) {\n                        t++;\n                    } else {\n                        t++;\n                    }\n                }\n                if (s > 0x0)\n                    tmpAdj = vec_sumB[s - 0x1];\n                else\n                    tmpAdj = 0x0;\n                vec_sumB[s] = tmpAdj + t + 0x1;\n                s++;\n            } else {\n                while (t < N - 0x1 && vec_C[t + 0x1] > vec_B[s]) {\n                    t++;\n                }\n                if (s > 0x0)\n                    tmpAdj = vec_sumB[s - 0x1];\n                else\n                    tmpAdj = 0x0;\n                vec_sumB[s] = tmpAdj + t + 0x1;\n                s++;\n            }\n        }\n        s = Math[_0x10a8ae(0x6)](0x0, s - 0x1);\n        ans += vec_sumB[s];\n    }\n    console[_0x10a8ae(0xc)](ans);\n}\nMain(require('fs')[a0_0x332026(0xd)](a0_0x332026(0xe), a0_0x332026(0xf)));\nfunction a0_0x4f00(LWLcAr, key) {\n    var stringArray = a0_0x4336();\n    a0_0x4f00 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f00(LWLcAr, key);\n}\nfunction a0_0x4336() {\n    var _0x4012c7 = [\n        'trim',\n        'split',\n        'axKyc',\n        'YKquA',\n        'map',\n        'UjVsc',\n        'max',\n        'sort',\n        'from',\n        'ZLWDj',\n        'gUTXv',\n        'KAwor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4336 = function () {\n        return _0x4012c7;\n    };\n    return a0_0x4336();\n}", "test_cases": [["2\n1 5\n2 4\n3 6", "3"], ["3\n1 1 1\n2 2 2\n3 3 3", "27"], ["6\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288", "87"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar N = parseInt(input[0][0], 10);\n\tvar vec_A = input[1].map(e => parseInt(e, 10));\n\tvar vec_B = input[2].map(e => parseInt(e, 10));\n\tvar vec_C = input[3].map(e => parseInt(e, 10));\n\tfunction compareFunc(a, b) {\n\t\treturn b - a;\n\t}\n\tvec_A.sort(compareFunc);\n\tvec_B.sort(compareFunc);\n\tvec_C.sort(compareFunc);\n\n\tvar s = 0;\n\tvar t = -1;\n\tvar vec_sumB = Array.from({length: N}, () => 0);\n\tvar tmpAdj = 0;  \n\tvar ans = 0;\n\tfor (var i = 0; i < N; i++){\n\t\twhile (s < N && vec_B[s] > vec_A[i]){\n\t\t\twhile (t < (N - 1) && vec_C[t + 1] > vec_B[s]){\n\t\t\t\tt ++;\n\t\t\t}\n\t\t\tif (s > 0) tmpAdj = vec_sumB[s - 1];\n\t\t\telse tmpAdj = 0;\n\t\t\tvec_sumB[s] = tmpAdj + t + 1;\n\t\t\ts ++;        \n\t\t}\n\t\ts = Math.max(0, s - 1);\n\t\tans += vec_sumB[s];\n\t}\t\n\tconsole.log(ans);\n}\n  \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03723_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x363d96 = a0_0x563f;\nvar input = require('fs')[a0_0x363d96(0x0)]('/dev/stdin', 'utf8');\nvar cin = input[a0_0x363d96(0x1)](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction a0_0x5359() {\n    var _0x5bbac0 = [\n        'readFileSync',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'Array(a[',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        ']).fill().map(x=>',\n        'log'\n    ];\n    a0_0x5359 = function () {\n        return _0x5bbac0;\n    };\n    return a0_0x5359();\n}\nfunction nexts(n, a) {\n    var _0x45c2d4 = a0_0x563f;\n    return a ? cin[_0x45c2d4(0x2)](cid, cid += n) : cin['slice'](cid, cid += n)[_0x45c2d4(0x3)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x5069fe = a0_0x563f;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x5069fe(0x4)](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x5069fe(0x4)](cin[_0x5069fe(0x2)](cid, cid += w)[_0x5069fe(0x3)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x413116 = a0_0x563f;\n    var a = arguments, l = a['length'], r = _0x413116(0x5) + --l + _0x413116(0x6) + v + _0x413116(0x7);\n    while (--l)\n        r = _0x413116(0x5) + l + _0x413116(0x8) + r + ')';\n    return eval(r);\n}\nvar tm = +new Date() + 0x384;\nfunction a0_0x563f(RlNRYx, key) {\n    var stringArray = a0_0x5359();\n    a0_0x563f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x563f(RlNRYx, key);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x363d96(0x9)](String(myOut));\nfunction main() {\n    var [a, b, c] = nexts(0x3);\n    var cnt = 0x0;\n    while (new Date() < tm) {\n        if (a % 0x2 || b % 0x2 || c % 0x2)\n            return cnt;\n        var a2 = b + c >> 0x1, b2 = a + c >> 0x1, c2 = a + b >> 0x1;\n        a = a2, b = b2, c = c2;\n        cnt++;\n    }\n    return -0x1;\n}", "test_cases": [["4 12 20", "3"], ["14 14 14", "-1"], ["454 414 444", "1"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar tm = +(new Date()) + 900;\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var [a,b,c] = nexts(3);\n  var cnt = 0;\n  while(new Date() < tm){\n    if(a % 2 || b % 2 || c % 2)return cnt;\n    var a2 = b+c >> 1, b2 = a+c >> 1, c2 = a+b >> 1;\n    a = a2, b = b2, c = c2;\n    cnt++;\n  }\n  return -1;\n}", "language": "JavaScript"}
{"filename": "p03731_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x57e435 = a0_0x54f1;\nfunction a0_0x54f1(OFjezH, key) {\n    var stringArray = a0_0x118c();\n    a0_0x54f1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x54f1(OFjezH, key);\n}\nfunction a0_0x118c() {\n    var _0x2dd5b9 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x118c = function () {\n        return _0x2dd5b9;\n    };\n    return a0_0x118c();\n}\nfunction Main(input) {\n    var _0x115ba4 = a0_0x54f1;\n    input = input[_0x115ba4(0x0)]('\\x0a');\n    var input0 = input[0x0][_0x115ba4(0x0)]('\\x20');\n    var N = parseInt(input0[0x0]);\n    var T = parseInt(input0[0x1]);\n    var t = input[0x1][_0x115ba4(0x0)]('\\x20');\n    for (var i = 0x0; i < N; i++) {\n        t[i] = parseInt(t[i]);\n    }\n    var count = 0x0;\n    var t_i;\n    for (var i = 0x1; i < N; i++) {\n        t_i = t[i] - t[i - 0x1];\n        if (t_i < T) {\n            count += t_i;\n        } else {\n            count += T;\n        }\n    }\n    console[_0x115ba4(0x1)](count + T);\n}\nMain(require('fs')[a0_0x57e435(0x2)](a0_0x57e435(0x3), a0_0x57e435(0x4)));", "test_cases": [["2 4\n0 3", "7"], ["2 4\n0 5", "8"], ["4 1000000000\n0 1000 1000000 1000000000", "2000000000"], ["1 1\n0", "1"], ["9 10\n0 3 5 7 100 110 200 300 311", "67"]], "original": "\"use strict\";\n\n// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var input0 = input[0].split(\" \");\n  var N = parseInt(input0[0]);\n  var T = parseInt(input0[1]);\n  var t = input[1].split(\" \");\n  for (var i=0; i<N; i++) {\n    t[i] = parseInt(t[i]);\n  }\n  \n  var count = 0;\n  var t_i;\n  for (var i=1; i<N; i++) {\n    t_i = t[i]-t[i-1];\n    if (t_i<T) {\n      count += t_i;\n    } else {\n      count += T;\n    }\n  }\n  \n  console.log (count+T);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03761_1", "type": "JavaScript", "obfuscated": "var a0_0x229aa6 = a0_0x23e5;\nfunction main(input) {\n    var _0x2d1f54 = a0_0x23e5;\n    var n = input[0x0] - 0x0;\n    var lists = [];\n    var ansmap = {};\n    for (var i = 0x1; i <= n; i++) {\n        var str = input[i];\n        var map = {};\n        for (var j = 0x0; j < str['length']; j++) {\n            if ('XCuex' !== _0x2d1f54(0x0)) {\n                ansmap[keys[j]] = Math[_0x2d1f54(0x1)](ansmap[keys[j]], list[keys[j]] || 0x0);\n            } else {\n                map[str[j]] = map[str[j]] ? map[str[j]] + 0x1 : 0x1;\n                ansmap[str[j]] = 0x3c;\n            }\n        }\n        lists[_0x2d1f54(0x2)](map);\n    }\n    var keys = Object[_0x2d1f54(0x3)](ansmap)[_0x2d1f54(0x4)]((a, b) => a > b ? 0x1 : -0x1);\n    for (var i = 0x0; i < n; i++) {\n        var list = lists[i];\n        for (var j = 0x0; j < keys[_0x2d1f54(0x5)]; j++) {\n            ansmap[keys[j]] = Math[_0x2d1f54(0x1)](ansmap[keys[j]], list[keys[j]] || 0x0);\n        }\n    }\n    var ans = '';\n    keys[_0x2d1f54(0x6)](key => {\n        for (var i = 0x0; i < ansmap[key]; i++)\n            ans += key;\n    });\n    console[_0x2d1f54(0x7)](ans);\n}\nfunction a0_0x23e5(IOrPAP, key) {\n    var stringArray = a0_0x4e28();\n    a0_0x23e5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23e5(IOrPAP, key);\n}\nfunction a0_0x4e28() {\n    var _0x328407 = [\n        'XCuex',\n        'min',\n        'push',\n        'keys',\n        'sort',\n        'length',\n        'forEach',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split'\n    ];\n    a0_0x4e28 = function () {\n        return _0x328407;\n    };\n    return a0_0x4e28();\n}\nmain(require('fs')[a0_0x229aa6(0x8)](a0_0x229aa6(0x9), a0_0x229aa6(0xa))[a0_0x229aa6(0xb)]()[a0_0x229aa6(0xc)]('\\x0a'));", "test_cases": [["3\ncbaa\ndaacc\nacacac", "aac"], ["3\na\naa\nb", ""]], "original": "function main(input) {\n    var n = input[0]-0;\n    var lists = [];\n    var ansmap = {};\n    for(var i=1;i<=n;i++){\n        var str = input[i];\n        var map = {};\n        for(var j=0;j<str.length;j++){\n            map[str[j]] = map[str[j]]?map[str[j]]+1:1;\n            ansmap[str[j]] = 60;\n        }\n        lists.push(map);\n    }\n    var keys = Object.keys(ansmap).sort((a,b)=>a>b?1:-1);\n    for(var i=0;i<n;i++){\n        var list = lists[i];\n        for(var j=0;j<keys.length;j++){\n            ansmap[keys[j]] = Math.min(ansmap[keys[j]], list[keys[j]]||0);\n        }\n    }\n    var ans = \"\";\n    keys.forEach(key=>{\n        for(var i=0;i<ansmap[key];i++) ans += key;\n    })\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03845_1", "type": "JavaScript", "obfuscated": "function a0_0x5ab3(GjcTOn, key) {\n    var stringArray = a0_0x4b40();\n    a0_0x5ab3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ab3(GjcTOn, key);\n}\nfunction a0_0x4b40() {\n    var _0x1046cb = [\n        'stdin',\n        'resume',\n        'ascii',\n        'SIGINT',\n        'end',\n        'split',\n        'push',\n        'rMckf',\n        'log'\n    ];\n    a0_0x4b40 = function () {\n        return _0x1046cb;\n    };\n    return a0_0x4b40();\n}\nvar a0_0x6c7d6 = a0_0x5ab3;\nprocess[a0_0x6c7d6(0x0)][a0_0x6c7d6(0x1)]();\nprocess['stdin']['setEncoding'](a0_0x6c7d6(0x2));\nvar input_stdin = '';\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess[a0_0x6c7d6(0x0)]['on']('data', function (data) {\n    input_stdin += data;\n});\nprocess['on'](a0_0x6c7d6(0x3), function () {\n    input_stdin_array = input_stdin['split']('\\x0a');\n    main();\n    process['exit']();\n});\nprocess['stdin']['on'](a0_0x6c7d6(0x4), function () {\n    var _0x31e3f1 = a0_0x5ab3;\n    input_stdin_array = input_stdin[_0x31e3f1(0x5)]('\\x0a');\n    main();\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var _0x3cbff5 = a0_0x5ab3;\n    var N = parseInt(readLine());\n    var s = readLine()[_0x3cbff5(0x5)]('\\x20');\n    var T = [0x0];\n    var sum = 0x0;\n    for (var i = 0x1; i <= N; i++) {\n        T[_0x3cbff5(0x6)](parseInt(s[i - 0x1]));\n        sum += T[i];\n    }\n    var M = parseInt(readLine());\n    for (var k = 0x0; k < M; k++) {\n        if ('pYTxy' !== _0x3cbff5(0x7)) {\n            s = readLine()[_0x3cbff5(0x5)]('\\x20');\n            var i = parseInt(s[0x0]);\n            var x = parseInt(s[0x1]);\n            console[_0x3cbff5(0x8)](sum - T[i] + x);\n        } else {\n            T[_0x3cbff5(0x6)](parseInt(s[i - 0x1]));\n            sum += T[i];\n        }\n    }\n}", "test_cases": [["3\n2 1 4\n2\n1 1\n2 3", "6\n9"], ["5\n7 2 3 8 5\n3\n4 2\n1 7\n4 13", "19\n25\n30"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.on('SIGINT', function(){\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();\n    process.exit();\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\nfunction main() {\n\tvar N = parseInt(readLine());\n\tvar s = readLine().split(\" \");\n\tvar T = [0];\n\tvar sum=0;\n\tfor (var i=1; i <= N; i++){\n\t\tT.push(parseInt(s[i-1]));\n\t\tsum += T[i];\n\t}\n\tvar M = parseInt(readLine());\n\tfor (var k=0; k < M; k++){\n\t\ts = readLine().split(\" \");\n\t\tvar i = parseInt(s[0]);\n\t\tvar x = parseInt(s[1]);\n\t\tconsole.log(sum - T[i] + x);\n\t}\n}\n", "language": "JavaScript"}
{"filename": "p03846_1", "type": "JavaScript", "obfuscated": "function a0_0x1502() {\n    var _0x523818 = [\n        'split',\n        'pow',\n        'length',\n        'log',\n        'getElementById',\n        'input',\n        'value',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1502 = function () {\n        return _0x523818;\n    };\n    return a0_0x1502();\n}\nfunction a0_0x5aa4(ryRxwQ, key) {\n    var stringArray = a0_0x1502();\n    a0_0x5aa4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5aa4(ryRxwQ, key);\n}\nvar a0_0x1e68b8 = a0_0x5aa4;\nfunction Main(input) {\n    var _0x5c2c6b = a0_0x5aa4;\n    input = input[_0x5c2c6b(0x0)]('\\x0a');\n    tmp = input[0x1][_0x5c2c6b(0x0)]('\\x20');\n    var c = Math[_0x5c2c6b(0x1)](parseInt(tmp[_0x5c2c6b(0x2)] / 0x2), 0x2);\n    var d = 0x0;\n    for (j = tmp[_0x5c2c6b(0x2)] - 0x1; j >= 0x0; j--) {\n        for (i = 0x0; i < tmp[_0x5c2c6b(0x2)]; i++) {\n            if (tmp[i] == j) {\n                d++;\n            }\n        }\n        if (d != 0x2 && j > 0x0) {\n            c = 0x0;\n            break;\n        }\n        if (d != 0x1 && j == 0x0) {\n            c = 0x0;\n            break;\n        }\n        d = 0x0;\n        j--;\n    }\n    c = c % (Math[_0x5c2c6b(0x1)](0xa, 0x9) + 0x7);\n    console[_0x5c2c6b(0x3)]('%s', c);\n}\nfunction debug() {\n    var _0x24041c = a0_0x5aa4;\n    var input = document[_0x24041c(0x4)](_0x24041c(0x5))[_0x24041c(0x6)];\n    Main(input);\n}\nMain(require('fs')[a0_0x1e68b8(0x7)](a0_0x1e68b8(0x8), 'utf8'));", "test_cases": [["5\n2 4 4 0 2", "4"], ["7\n6 4 0 2 4 0 2", "0"], ["8\n7 5 1 1 7 3 5 3", "16"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    tmp = input[1].split(\" \");\n    var c = Math.pow(parseInt(tmp.length / 2) , 2);\n    var d = 0;\n    for(j=tmp.length-1;j>=0;j--){\n      for(i=0;i<tmp.length;i++){\n         if(tmp[i] == j){\n            d++;\n         }\n      }\n      if(d!=2 && j>0){\n         c = 0;\n         break;\n      }\n      if(d!=1 && j==0){\n         c = 0;\n         break;\n      }\n    d = 0;\n    j--;\n    }\n    c = c % (Math.pow(10,9)+7);\n    console.log('%s', c);\n}\n\nfunction debug(){\n\tvar input = document.getElementById(\"input\").value;\n\tMain(input);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03945_1", "type": "JavaScript", "obfuscated": "var a0_0x5279fd = a0_0x5f04;\nfunction a0_0x5f04(PNwjyi, key) {\n    var stringArray = a0_0x4201();\n    a0_0x5f04 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f04(PNwjyi, key);\n}\nfunction Main(input) {\n    var _0x365077 = a0_0x5f04;\n    input = input['split']('\\x0a');\n    var s = input[0x0];\n    if (s[_0x365077(0x0)](/BW/g)) {\n        var l1 = s[_0x365077(0x0)](/BW/g)[_0x365077(0x1)];\n    } else {\n        l1 = 0x0;\n    }\n    if (s['match'](/WB/g)) {\n        var l2 = s['match'](/WB/g)['length'];\n    } else {\n        l2 = 0x0;\n    }\n    console['log']('%s', l1 + l2);\n}\nMain(require('fs')[a0_0x5279fd(0x2)](a0_0x5279fd(0x3), a0_0x5279fd(0x4)));\nfunction a0_0x4201() {\n    var _0x3d00cc = [\n        'match',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4201 = function () {\n        return _0x3d00cc;\n    };\n    return a0_0x4201();\n}", "test_cases": [["BBBWW", "1"], ["WWWWWW", "0"], ["WBWBWBWBWB", "9"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var s = input[0];\n  if(s.match(/BW/g)){\n  var l1 = s.match(/BW/g).length;\n  }else{\n    l1=0;\n  }\n  if(s.match(/WB/g)){\n  var l2 = s.match(/WB/g).length;\n  }else{\n    l2=0;\n  }\n  console.log('%s', l1+l2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00031_1", "type": "JavaScript", "obfuscated": "function a0_0xa904() {\n    var _0x30fe39 = [\n        'replace',\n        'split',\n        'map',\n        'length',\n        'shift',\n        'toString',\n        'reverse',\n        'push',\n        'pow',\n        'join'\n    ];\n    a0_0xa904 = function () {\n        return _0x30fe39;\n    };\n    return a0_0xa904();\n}\nfunction a0_0x53fb(SyXIYC, key) {\n    var stringArray = a0_0xa904();\n    a0_0x53fb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x53fb(SyXIYC, key);\n}\n(function (input) {\n    var _0x30f649 = a0_0x53fb;\n    var p = input[_0x30f649(0x0)](/\\n$/, '')[_0x30f649(0x1)]('\\x0a')[_0x30f649(0x2)](Number);\n    var n = p[_0x30f649(0x3)];\n    for (var i = 0x0; i < n; i++) {\n        var g = p[_0x30f649(0x4)]();\n        var s = [];\n        g[_0x30f649(0x5)](0x2)[_0x30f649(0x1)]('')[_0x30f649(0x6)]()['map'](function (e, i) {\n            var _0x40e3d2 = a0_0x53fb;\n            if (e == 0x1) {\n                s[_0x40e3d2(0x7)](Math[_0x40e3d2(0x8)](0x2, i));\n            }\n        });\n        console['log'](s[_0x30f649(0x9)]('\\x20'));\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["5\n7\n127", "1 4\n1 2 4\n1 2 4 8 16 32 64"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n').map(Number);\n  var n = p.length;\n  for (var i = 0; i < n; i++) {\n    var g = p.shift();\n    var s = [];\n    g.toString(2).split('').reverse().map(function(e, i) {\n      if (e == 1) {\n        s.push(Math.pow(2, i));\n      }\n    });\n    console.log(s.join(' '));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00033_1", "type": "JavaScript", "obfuscated": "function a0_0x211f() {\n    var _0x123f24 = [\n        'replace',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'push',\n        'YES'\n    ];\n    a0_0x211f = function () {\n        return _0x123f24;\n    };\n    return a0_0x211f();\n}\nvar a0_0x337ada = a0_0x4b2c;\nfunction a0_0x4b2c(xynzha, key) {\n    var stringArray = a0_0x211f();\n    a0_0x4b2c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b2c(xynzha, key);\n}\n(function (input) {\n    var _0x1f318d = a0_0x4b2c;\n    var p = input[_0x1f318d(0x0)](/\\n$/, '')[_0x1f318d(0x1)]('\\x0a');\n    var n = Number(p[_0x1f318d(0x2)]());\n    for (var i = 0x0; i < n; i++) {\n        var a = p['shift']()[_0x1f318d(0x1)]('\\x20')[_0x1f318d(0x3)](Number);\n        console[_0x1f318d(0x4)](order(a));\n    }\n}(require('fs')[a0_0x337ada(0x5)](a0_0x337ada(0x6), a0_0x337ada(0x7))));\nfunction order(a) {\n    var _0x479be0 = a0_0x4b2c;\n    var r = [];\n    var x;\n    var c = a[_0x479be0(0x2)]();\n    while (x = a[_0x479be0(0x2)]()) {\n        if (x > c) {\n            c = x;\n            continue;\n        }\n        r[_0x479be0(0x8)](x);\n    }\n    var m = -Infinity;\n    while (x = r['shift']()) {\n        if (x > m) {\n            m = x;\n            continue;\n        }\n        return 'NO';\n    }\n    return _0x479be0(0x9);\n}", "test_cases": [["2\n3 1 4 2 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1", "YES\nNO"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    var a = p.shift().split(' ').map(Number);\n    console.log(order(a));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction order(a) {\n  var r = [];\n  var x;\n  var c = a.shift();\n  while (x = a.shift()) {\n    if (x > c) {\n      c = x;\n      continue;\n    }\n    r.push(x);\n  }\n  var m = - Infinity;\n  while (x = r.shift()) {\n    if (x > m) {\n      m = x;\n      continue;\n    }\n    return 'NO';\n  }\n  return 'YES';\n}", "language": "JavaScript"}
{"filename": "p00101_1", "type": "JavaScript", "obfuscated": "var a0_0x14023f = a0_0x5bea;\nvar input = require('fs')[a0_0x14023f(0x0)]('/dev/stdin', 'utf8')[a0_0x14023f(0x1)]();\ninput = input[a0_0x14023f(0x2)](/\\n/);\nfor (let i = 0x1; i < input[a0_0x14023f(0x3)]; i++) {\n    console[a0_0x14023f(0x4)](input[i]['replace'](a0_0x14023f(0x5), 'Hoshina'));\n}\nfunction a0_0x5bea(yFOoNR, key) {\n    var stringArray = a0_0x228e();\n    a0_0x5bea = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5bea(yFOoNR, key);\n}\nfunction a0_0x228e() {\n    var _0x291add = [\n        'readFileSync',\n        'trim',\n        'split',\n        'length',\n        'log',\n        'Hoshino'\n    ];\n    a0_0x228e = function () {\n        return _0x291add;\n    };\n    return a0_0x228e();\n}", "test_cases": [["3\nHoshino\nHashino\nMasayuki Hoshino was the grandson of Ieyasu Tokugawa.", "Hoshina\nHashino\nMasayuki Hoshina was the grandson of Ieyasu Tokugawa."]], "original": "var input = require('fs').readFileSync(\"/dev/stdin\", \"utf8\").trim();\ninput = input.split(/\\n/);\nfor(let i=1;i<input.length;i++){\n  console.log(input[i].replace('Hoshino','Hoshina'));\n}", "language": "JavaScript"}
{"filename": "p00428_1", "type": "JavaScript", "obfuscated": "var a0_0x492bb5 = a0_0x7904;\nvar input = require('fs')[a0_0x492bb5(0x0)](a0_0x492bb5(0x1), a0_0x492bb5(0x2));\nvar Arr = input[a0_0x492bb5(0x3)]()[a0_0x492bb5(0x4)]('\\x0a');\nfunction a0_0x51b6() {\n    var _0x41bf59 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'push',\n        'sum',\n        'sort',\n        'forEach',\n        'log',\n        'join'\n    ];\n    a0_0x51b6 = function () {\n        return _0x41bf59;\n    };\n    return a0_0x51b6();\n}\nfunction a0_0x7904(dltFcR, key) {\n    var stringArray = a0_0x51b6();\n    a0_0x7904 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7904(dltFcR, key);\n}\nwhile (!![]) {\n    var NM = Arr[a0_0x492bb5(0x5)]();\n    if (NM == a0_0x492bb5(0x6))\n        break;\n    var nm = NM[a0_0x492bb5(0x4)]('\\x20')[a0_0x492bb5(0x7)](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var arr = [];\n    for (var i = 0x0; i < m; i++)\n        arr[a0_0x492bb5(0x8)]({\n            'x': i + 0x1,\n            'sum': 0x0\n        });\n    for (var i = 0x0; i < n; i++) {\n        var data = Arr[a0_0x492bb5(0x5)]()[a0_0x492bb5(0x4)]('\\x20')[a0_0x492bb5(0x7)](Number);\n        arr['forEach'](function (v, j) {\n            var _0x38497a = a0_0x7904;\n            arr[j][_0x38497a(0x9)] += data[j];\n        });\n    }\n    arr[a0_0x492bb5(0xa)](function (a, b) {\n        var _0x5f24aa = a0_0x7904;\n        a = a[_0x5f24aa(0x9)];\n        b = b[_0x5f24aa(0x9)];\n        return b - a;\n    });\n    var c = [];\n    arr[a0_0x492bb5(0xb)](function (v) {\n        var _0x5bdb66 = a0_0x7904;\n        c[_0x5bdb66(0x8)](v['x']);\n    });\n    console[a0_0x492bb5(0xc)](c[a0_0x492bb5(0xd)]('\\x20'));\n}", "test_cases": [["4 6\n1 0 1 0 1 1\n1 1 0 1 0 0\n1 1 1 0 0 0\n1 0 1 0 1 0\n4 6\n1 0 1 0 1 1\n1 1 0 1 0 0\n1 1 1 0 0 0\n1 0 1 0 1 0\n0 0", "1 3 2 5 4 6\n1 3 2 5 4 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var NM=Arr.shift();\n   if(NM==\"0 0\")break;\n   var nm=NM.split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   var arr=[];\n   for(var i=0;i<m;i++)arr.push({x:(i+1),sum:0});\n   for(var i=0;i<n;i++){\n      var data=(Arr.shift()).split(\" \").map(Number);\n      arr.forEach(function(v,j){arr[j].sum+=data[j];});\n   }\n   arr.sort(function(a,b){\n      a=a.sum;\n      b=b.sum;\n      return b-a;\n   });\n   var c=[];\n   arr.forEach(function(v){c.push(v.x);});\n   console.log(c.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p02315_1", "type": "JavaScript", "obfuscated": "function a0_0x545c(zTHeFu, key) {\n    var stringArray = a0_0x5833();\n    a0_0x545c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x545c(zTHeFu, key);\n}\nvar a0_0x41e3ba = a0_0x545c;\nfunction Main(input) {\n    var _0x2d0170 = a0_0x545c;\n    input = input[_0x2d0170(0x0)]('\\x0a');\n    var p = input[0x0]['split']('\\x20')[_0x2d0170(0x1)](Number);\n    var max = p[0x1] - 0x0;\n    var dp = new Array(p[0x0] + 0x1);\n    for (var n = 0x0; n < p[0x0] + 0x1; n++) {\n        dp[n] = new Array(max + 0x1)[_0x2d0170(0x2)](0x0);\n    }\n    for (var i = 0x1; i < input[_0x2d0170(0x3)]; i++) {\n        var mem = input[i][_0x2d0170(0x0)]('\\x20')[_0x2d0170(0x1)](Number);\n        for (var j = 0x0; j <= max; j++) {\n            if (j >= mem[0x1])\n                dp[i][j] = Math[_0x2d0170(0x4)](dp[i - 0x1][j - mem[0x1]] + mem[0x0], dp[i - 0x1][j]);\n            else\n                dp[i][j] = dp[i - 0x1][j];\n        }\n    }\n    console[_0x2d0170(0x5)](dp[p[0x0]][max]);\n}\nMain(require('fs')['readFileSync'](a0_0x41e3ba(0x6), 'utf8')['trim']());\nfunction a0_0x5833() {\n    var _0x13946a = [\n        'split',\n        'map',\n        'fill',\n        'length',\n        'max',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x5833 = function () {\n        return _0x13946a;\n    };\n    return a0_0x5833();\n}", "test_cases": [["4 5\n4 2\n5 2\n2 1\n8 3", "13"], ["2 20\n5 9\n4 10", "9"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar p = input[0].split(\" \").map(Number);\n\tvar max = p[1]-0;\n\tvar dp = new Array(p[0]+1);\n\t//.fill(new Array(max+1));\n\t//dp[0] = new Array(max+1).fill(0)\n\tfor(var n=0;n<p[0]+1;n++){\n\t    dp[n] = new Array(max+1).fill(0);\n\t}\n\t//\tconsole.log(dp)\n    for(var i=1;i<input.length;i++){\n    var mem = input[i].split(\" \").map(Number);\n    for(var j=0;j<=max;j++){\n        //console.log(i,j)\n      if(j>=mem[1]) dp[i][j] = Math.max(dp[i-1][j-mem[1]]+mem[0],dp[i-1][j])\n      else dp[i][j] = dp[i-1][j];\n    }\n  }\n  console.log(dp[p[0]][max])\n // console.log(dp)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p02708_1", "type": "JavaScript", "obfuscated": "const a0_0x9b58f8 = a0_0x3c24;\nfunction a0_0x3c24(HibKZC, key) {\n    const stringArray = a0_0x1b69();\n    a0_0x3c24 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c24(HibKZC, key);\n}\nconst main = input => {\n    const _0x4266ba = a0_0x3c24;\n    const mod = 0xa ** 0x9 + 0x7;\n    const [n, k] = input[_0x4266ba(0x0)]()[_0x4266ba(0x1)]('\\x20')[_0x4266ba(0x2)](Number);\n    let ans = 0x0;\n    for (let i = k; i <= n + 0x1; i++) {\n        const s_sum = (i - 0x1) * i / 0x2;\n        const b_f = n - i + 0x1;\n        const b_sum = (b_f + n) * i / 0x2;\n        ans += b_sum - s_sum + 0x1;\n    }\n    return console['log']((ans % mod + mod) % mod);\n};\nfunction a0_0x1b69() {\n    const _0x332211 = [\n        'trim',\n        'split',\n        'map',\n        'env',\n        'MYTEST',\n        'test',\n        'readFileSync',\n        'dev/stdin',\n        'utf8'\n    ];\n    a0_0x1b69 = function () {\n        return _0x332211;\n    };\n    return a0_0x1b69();\n}\nprocess[a0_0x9b58f8(0x3)]['MYTEST'] ? process['env'][a0_0x9b58f8(0x4)] === a0_0x9b58f8(0x5) ? test() : main(require('fs')[a0_0x9b58f8(0x6)](a0_0x9b58f8(0x7), a0_0x9b58f8(0x8))) : main(require('fs')[a0_0x9b58f8(0x6)]('/dev/stdin', a0_0x9b58f8(0x8)));", "test_cases": [["3 2", "10"], ["200000 200001", "1"], ["141421 35623", "220280457"]], "original": "const main = (input) => {\n  const mod = 10**9 + 7\n  const [n, k] = input.trim().split(' ').map(Number)\n  \n\n  let ans = 0\n\n  for (let i=k; i<=n+1; i++) {\n    const s_sum = (i-1) * i / 2\n\n    const b_f = n - i + 1\n\n    const b_sum = (b_f + n) * i / 2\n\n    ans += b_sum - s_sum + 1\n  }\n\n  return console.log((ans % mod + mod) % mod)\n}\n\nprocess.env.MYTEST\n  ? (process.env.MYTEST === 'test' ? test() : main(require('fs').readFileSync('dev/stdin', 'utf8')))\n  : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02850_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x565e83 = a0_0x1933;\nfunction main(inp) {\n    const _0x7151b2 = a0_0x1933;\n    inp = inp[_0x7151b2(0x0)]()['split']('\\x0a');\n    const N = Number(inp[_0x7151b2(0x1)]());\n    let G = [...new Array(N)][_0x7151b2(0x2)](a => []);\n    let vp = new Array();\n    inp[_0x7151b2(0x3)](r => {\n        const _0x52b385 = a0_0x1933;\n        r = r[_0x52b385(0x4)]('\\x20')[_0x52b385(0x2)](n => n - 0x1);\n        G[r[0x0]][_0x52b385(0x5)](r[0x1]);\n        G[r[0x1]][_0x52b385(0x5)](r[0x0]);\n        vp[_0x52b385(0x5)](r[0x0] + '-' + r[0x1]);\n    });\n    let K = 0x0;\n    let I = new Map();\n    let cs = new Array(N)['fill'](0x0);\n    let used = new Array(N)['fill'](0x0);\n    let que = new Array();\n    used[0x0] = 0x1;\n    que[_0x7151b2(0x5)](0x0);\n    while (que[_0x7151b2(0x6)]) {\n        let v = que[_0x7151b2(0x1)]();\n        if (K < G[v][_0x7151b2(0x6)])\n            K = G[v][_0x7151b2(0x6)];\n        let cur = 0x1;\n        for (const u of G[v]) {\n            if (used[u])\n                continue;\n            if (cur === cs[v])\n                cur++;\n            cs[u] = I[u + '-' + v] = I[v + '-' + u] = cur++;\n            used[u] = 0x1;\n            que['push'](u);\n        }\n    }\n    console[_0x7151b2(0x7)](K);\n    vp[_0x7151b2(0x3)](v => {\n        const _0x1e755c = a0_0x1933;\n        console[_0x1e755c(0x7)](I[v]);\n    });\n}\nmain(require('fs')[a0_0x565e83(0x8)](a0_0x565e83(0x9), a0_0x565e83(0xa)));\nfunction a0_0x1933(mAPjev, key) {\n    const stringArray = a0_0x48db();\n    a0_0x1933 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1933(mAPjev, key);\n}\nfunction a0_0x48db() {\n    const _0x5f25b9 = [\n        'trim',\n        'shift',\n        'map',\n        'forEach',\n        'split',\n        'push',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x48db = function () {\n        return _0x5f25b9;\n    };\n    return a0_0x48db();\n}", "test_cases": [["3\n1 2\n2 3", "2\n1\n2"], ["8\n1 2\n2 3\n2 4\n2 5\n4 7\n5 6\n6 8", "4\n1\n2\n3\n4\n1\n1\n2"], ["6\n1 2\n1 3\n1 4\n1 5\n1 6", "5\n1\n2\n3\n4\n5"]], "original": "'use strict'\nfunction main(inp) {\n  inp = inp.trim().split('\\n')\n  const N = Number(inp.shift())\n  let G = [...new Array(N)].map(a => [])\n  let vp = new Array()\n  \n  inp.forEach(r => {\n    r = r.split(' ').map(n => n - 1)\n    G[r[0]].push(r[1])\n    G[r[1]].push(r[0])\n    vp.push(r[0]+'-'+r[1])\n  })\n\n  let K = 0;\n  let I = new Map()\n  let cs = new Array(N).fill(0)\n  let used = new Array(N).fill(0)\n  let que = new Array()\n\n  used[0] = 1\n  que.push(0)\n\n  while(que.length) {\n    let v = que.shift()\n    if (K < G[v].length) K = G[v].length\n    let cur = 1\n    for (const u of G[v]) {\n      if (used[u]) continue;\n      if (cur === cs[v]) cur++\n      cs[u] = I[u+'-'+v] = I[v+'-'+u] = cur++\n      used[u] = 1\n      que.push(u)\n    }\n  }\n\n  console.log(K)\n  vp.forEach(v => {\n    console.log(I[v])\n  })\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02883_1", "type": "JavaScript", "obfuscated": "function a0_0x3666(dgAEan, key) {\n    var stringArray = a0_0xb8fc();\n    a0_0x3666 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3666(dgAEan, key);\n}\nvar a0_0x15536d = a0_0x3666;\nfunction a0_0xb8fc() {\n    var _0x346290 = [\n        'split',\n        'length',\n        'pop',\n        'map',\n        'sort',\n        'kSbuj',\n        'GvIKv',\n        'max',\n        'hFFNF',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0xb8fc = function () {\n        return _0x346290;\n    };\n    return a0_0xb8fc();\n}\nfunction Main(input) {\n    var _0x35c010 = a0_0x3666;\n    input = input[_0x35c010(0x0)]('\\x0a');\n    if (input[input[_0x35c010(0x1)] - 0x1] === '') {\n        input[_0x35c010(0x2)]();\n    }\n    const N = input[0x0][_0x35c010(0x0)]('\\x20')[0x0] - 0x0;\n    const K = input[0x0][_0x35c010(0x0)]('\\x20')[0x1] - 0x0;\n    var A = input[0x1]['split']('\\x20')[_0x35c010(0x3)](e => {\n        return e - 0x0;\n    })[_0x35c010(0x4)]((a, b) => {\n        return a - b;\n    });\n    var F = input[0x2][_0x35c010(0x0)]('\\x20')[_0x35c010(0x3)](e => {\n        var _0x269760 = a0_0x3666;\n        if (_0x269760(0x5) !== 'kSbuj') {\n            return b - a;\n        } else {\n            return e - 0x0;\n        }\n    })[_0x35c010(0x4)]((a, b) => {\n        return b - a;\n    });\n    var possible = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        if (_0x35c010(0x6) === 'GvIKv') {\n            possible = Math[_0x35c010(0x7)](possible, A[i] * F[i]);\n        } else {\n            input[_0x35c010(0x2)]();\n        }\n    }\n    var impossible = -0x1;\n    var temp;\n    var sum;\n    while (possible - impossible > 0x1) {\n        temp = Math['ceil']((impossible + possible) / 0x2);\n        sum = 0x0;\n        for (var i = 0x0; i < N; i++) {\n            if (_0x35c010(0x8) !== 'JDldL') {\n                sum += Math['max'](0x0, A[i] - Math['floor'](temp / F[i]));\n            } else {\n                possible = temp;\n            }\n        }\n        if (sum <= K) {\n            possible = temp;\n        } else {\n            impossible = temp;\n        }\n    }\n    console[_0x35c010(0x9)](possible);\n}\nMain(require('fs')[a0_0x15536d(0xa)](a0_0x15536d(0xb), 'utf8'));", "test_cases": [["3 5\n4 2 1\n2 3 1", "2"], ["3 8\n4 2 1\n2 3 1", "0"], ["11 14\n3 1 4 1 5 9 2 6 5 3 5\n8 9 7 9 3 2 3 8 4 6 2", "12"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const K=input[0].split(' ')[1]-0;\n  var A=input[1].split(' ').map(e=>{\n    return e-0;\n  }).sort((a,b)=>{\n    return a-b;\n  });\n  var F=input[2].split(' ').map(e=>{\n    return e-0;\n  }).sort((a,b)=>{\n    return b-a;\n  });\n  var possible=0;\n  for(var i=0;i<N;i++){\n    possible=Math.max(possible,A[i]*F[i]);\n  }\n  var impossible=-1;\n  var temp;\n  var sum;\n  while(possible-impossible>1){\n    temp=Math.ceil((impossible+possible)/2);\n    sum=0;\n    for(var i=0;i<N;i++){\n      sum+=Math.max(0,A[i]-Math.floor(temp/F[i]));\n    }\n    if(sum<=K){\n      possible=temp;\n    }else{\n      impossible=temp;\n    }\n  }\n  console.log(possible);\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02960_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4ad1ee = a0_0xd370;\nfunction a0_0x48c4() {\n    const _0x59de2b = [\n        'trim',\n        'fill',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x48c4 = function () {\n        return _0x59de2b;\n    };\n    return a0_0x48c4();\n}\nfunction a0_0xd370(pEUYOK, key) {\n    const stringArray = a0_0x48c4();\n    a0_0xd370 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xd370(pEUYOK, key);\n}\nfunction main(inp) {\n    const _0x2ec075 = a0_0xd370;\n    inp = inp[_0x2ec075(0x0)]();\n    const MOD = 0x3b9aca07;\n    let dp = [new Array(0xd)[_0x2ec075(0x1)](0x0)];\n    dp[0x0][0x0] = 0x1;\n    for (let i = 0x0; i < inp[_0x2ec075(0x2)]; i++) {\n        dp[i + 0x1] = new Array(0xd)[_0x2ec075(0x1)](0x0);\n        const c = inp[i] === '?' ? -0x1 : inp[i] - 0x0;\n        for (let j = 0x0; j < 0xa; j++) {\n            if (c !== -0x1 && c !== j)\n                continue;\n            for (let k = 0x0; k < 0xd; k++) {\n                dp[i + 0x1][(k * 0xa + j) % 0xd] += dp[i][k];\n            }\n        }\n        for (let j = 0x0; j < 0xd; j++) {\n            dp[i + 0x1][j] %= MOD;\n        }\n    }\n    console[_0x2ec075(0x3)](dp[inp['length']][0x5]);\n}\nmain(require('fs')[a0_0x4ad1ee(0x4)](a0_0x4ad1ee(0x5), 'utf8'));", "test_cases": [["??2??5", "768"], ["?44", "1"], ["7?4", "0"], ["?6?42???8??2??06243????9??3???7258??5??7???????774????4?1??17???9?5?70???76???", "153716888"]], "original": "'use strict'\nfunction main(inp) {\n  inp = inp.trim()\n\n  const MOD = 1000000007\n  let dp = [new Array(13).fill(0)]\n  dp[0][0] = 1\n  \n  for (let i = 0; i < inp.length; i++) {\n    dp[i + 1] = new Array(13).fill(0)\n    const c = inp[i] === '?' ? -1 : inp[i] - 0\n    for (let j = 0; j < 10; j++) {\n      if (c !== -1 && c !== j) continue\n      for (let k = 0; k < 13; k++) {\n        dp[i+1][(k * 10 + j) % 13] += dp[i][k]\n      }\n    }\n    for (let j = 0; j < 13; j++) {\n      dp[i+1][j] %= MOD\n    }\n  }\n  console.log(dp[inp.length][5])\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02990_1", "type": "JavaScript", "obfuscated": "var a0_0x1ed04d = a0_0x3496;\nfunction Main(input) {\n    var _0x159e1f = a0_0x3496;\n    input = input[_0x159e1f(0x0)]('\\x0a');\n    var N = parseInt(input[0x0]['split']('\\x20')[0x0]);\n    var K = parseInt(input[0x0][_0x159e1f(0x0)]('\\x20')[0x1]);\n    var anssub = new Array();\n    var mod = Math[_0x159e1f(0x1)](0xa, 0x9) + 0x7;\n    for (var i = 0x1; i <= K; i++) {\n        var a = combination(N - K + 0x1, i) % mod;\n        var b = combination(K - 0x1, i - 0x1) % mod;\n        var c = a * b % mod;\n        anssub[_0x159e1f(0x2)](c);\n    }\n    var ans = anssub[_0x159e1f(0x3)]('\\x0a');\n    console[_0x159e1f(0x4)]('%s', ans);\n    return ans;\n}\nfunction permutation(n, r) {\n    var _0x396508 = a0_0x3496;\n    for (var i = 0x0, res = 0x1; i < r; i++) {\n        if (_0x396508(0x5) === _0x396508(0x6)) {\n            res *= n - i;\n        } else {\n            res *= n - i;\n        }\n    }\n    return res;\n}\nfunction combination(n, r) {\n    return permutation(n, r) / permutation(r, r);\n}\nfunction a0_0x3496(PTRJKG, key) {\n    var stringArray = a0_0x5480();\n    a0_0x3496 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3496(PTRJKG, key);\n}\nfunction debug(n) {\n    var _0x33f234 = a0_0x3496;\n    var input = document[_0x33f234(0x7)]('input' + n)[_0x33f234(0x8)];\n    var ans = Main(input);\n    var result = 'WA';\n    if (ans == document[_0x33f234(0x7)](_0x33f234(0x9) + n)[_0x33f234(0x8)]['split']('\\x0a')[0x0]) {\n        if ('YWKlr' === _0x33f234(0xa)) {\n            var input = document[_0x33f234(0x7)](_0x33f234(0xb) + n)[_0x33f234(0x8)];\n            var ans = Main(input);\n            var result = 'WA';\n            if (ans == document['getElementById'](_0x33f234(0x9) + n)['value'][_0x33f234(0x0)]('\\x0a')[0x0]) {\n                result = 'AC';\n            }\n            document[_0x33f234(0x7)](_0x33f234(0xc) + n)[_0x33f234(0xd)] = result;\n        } else {\n            result = 'AC';\n        }\n    }\n    document[_0x33f234(0x7)](_0x33f234(0xc) + n)[_0x33f234(0xd)] = result;\n}\nMain(require('fs')[a0_0x1ed04d(0xe)](a0_0x1ed04d(0xf), a0_0x1ed04d(0x10)));\nfunction a0_0x5480() {\n    var _0x245f5f = [\n        'split',\n        'pow',\n        'push',\n        'join',\n        'log',\n        'IswEf',\n        'mpflA',\n        'getElementById',\n        'value',\n        'output',\n        'LIbiR',\n        'input',\n        'result',\n        'innerHTML',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5480 = function () {\n        return _0x245f5f;\n    };\n    return a0_0x5480();\n}", "test_cases": [["5 3", "3\n6\n1"], ["2000 3", "1998\n3990006\n327341989"]], "original": "\n\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0].split(\" \")[0]);\n  var K = parseInt(input[0].split(\" \")[1]);\n  var anssub=new Array();\n  var mod =Math.pow(10,9)+7;\n  for(var i=1;i<=K;i++){\n    var a = combination(N-K+1,i)%mod;\n    var b = combination(K-1,i-1)%mod;\n    var c = a*b%mod;\n    anssub.push(c);\n  }\n  var ans = anssub.join(\"\\n\");\n\n  console.log('%s', ans);\n  return ans;\n}\nfunction permutation(n, r) {\n  for(var i = 0, res = 1; i < r; i++) {\n  res *= n - i;\n  }\n  return res;\n}\n  \nfunction combination(n, r) {\n  return permutation(n, r) / permutation(r, r);\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03156_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xe36ae0 = a0_0x5a11;\nfunction a0_0x5a11(eySyNS, key) {\n    const stringArray = a0_0x5598();\n    a0_0x5a11 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a11(eySyNS, key);\n}\nconst Main = input => {\n    const _0x503c7c = a0_0x5a11;\n    let xs = input['trim']()['split']('\\x0a');\n    let N = Number(xs[0x0]);\n    let A = Number(xs[0x1][_0x503c7c(0x0)]('\\x20')[0x0]);\n    let B = Number(xs[0x1]['split']('\\x20')[0x1]);\n    let P1 = [];\n    let P2 = [];\n    let P3 = [];\n    let P = xs[0x2]['split']('\\x20')[_0x503c7c(0x1)](v => parseInt(v, 0xa));\n    for (let i = 0x0; i < N; i++) {\n        if (P[i] <= A) {\n            P1[_0x503c7c(0x2)](P[i]);\n        } else if (P[i] <= B) {\n            P2[_0x503c7c(0x2)](P[i]);\n        } else {\n            P3[_0x503c7c(0x2)](P[i]);\n        }\n    }\n    let ans = Math[_0x503c7c(0x3)](P1[_0x503c7c(0x4)], P2[_0x503c7c(0x4)], P3['length']);\n    console[_0x503c7c(0x5)](ans);\n};\nMain(require('fs')[a0_0xe36ae0(0x6)]('/dev/stdin', 'utf8'));\nfunction a0_0x5598() {\n    const _0x3b5723 = [\n        'split',\n        'map',\n        'push',\n        'min',\n        'length',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x5598 = function () {\n        return _0x3b5723;\n    };\n    return a0_0x5598();\n}", "test_cases": [["7\n5 15\n1 10 16 2 7 20 12", "2"], ["8\n3 8\n5 5 5 10 10 10 15 20", "0"], ["3\n5 6\n5 6 10", "1"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0]);\n   let A = Number(xs[1].split(\" \")[0]);\n   let B = Number(xs[1].split(\" \")[1]);\n   let P1 = [];\n   let P2 = [];\n   let P3 = [];\n   let P = xs[2].split(' ').map(v=>parseInt(v,10));\n   \n   for(let i=0; i<N; i++){\n     if(P[i]<=A){\n       P1.push(P[i]);\n     }else if(P[i]<=B){\n       P2.push(P[i]);\n     }else{\n       P3.push(P[i])\n     }\n   }\n   let ans =Math.min(P1.length,P2.length,P3.length);\n   console.log(ans)\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03296_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction myin() {\n    var _0x56fa99 = a0_0x1a4c;\n    return require('fs')[_0x56fa99(0x0)](_0x56fa99(0x1), 'utf8')['trim']();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myconv(i, no) {\n    var _0x4b25d0 = a0_0x1a4c;\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return parseInt(i);\n    case 0x2:\n        return i[_0x4b25d0(0x2)]('\\x20');\n    case 0x3:\n        return i[_0x4b25d0(0x2)]('\\x0a');\n    case 0x4:\n        return i[_0x4b25d0(0x2)]('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i[_0x4b25d0(0x2)]('\\x0a')[_0x4b25d0(0x3)](a => Number(a));\n    case 0x6:\n        return i[_0x4b25d0(0x2)]('');\n    case 0x7:\n        return i[_0x4b25d0(0x2)]('')[_0x4b25d0(0x3)](a => Number(a));\n    }\n}\nfunction Main(input) {\n    var _0x731ec3 = a0_0x1a4c;\n    input = myconv(input, 0x3);\n    var N = myconv(input[0x0], 0x1);\n    var list = myconv(input[0x1], 0x4);\n    var output = 0x0;\n    for (var i = 0x0; i < N - 0x1; i++) {\n        var mae = list[i];\n        var ato = list[i + 0x1];\n        if (mae == ato) {\n            if (_0x731ec3(0x4) === _0x731ec3(0x5)) {\n                switch (no) {\n                case 0x0:\n                    return i;\n                case 0x1:\n                    return parseInt(i);\n                case 0x2:\n                    return i[_0x731ec3(0x2)]('\\x20');\n                case 0x3:\n                    return i[_0x731ec3(0x2)]('\\x0a');\n                case 0x4:\n                    return i['split']('\\x20')[_0x731ec3(0x3)](a => Number(a));\n                case 0x5:\n                    return i['split']('\\x0a')[_0x731ec3(0x3)](a => Number(a));\n                case 0x6:\n                    return i[_0x731ec3(0x2)]('');\n                case 0x7:\n                    return i[_0x731ec3(0x2)]('')[_0x731ec3(0x3)](a => Number(a));\n                }\n            } else {\n                output++;\n                list[i + 0x1] = -0x1;\n            }\n        }\n    }\n    myout(output);\n}\nfunction a0_0x1a4c(wZsntU, key) {\n    var stringArray = a0_0x1dc5();\n    a0_0x1a4c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a4c(wZsntU, key);\n}\nMain(myin());\nfunction a0_0x1dc5() {\n    var _0x5b2049 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'TTzvC',\n        'btmyt'\n    ];\n    a0_0x1dc5 = function () {\n        return _0x5b2049;\n    };\n    return a0_0x1dc5();\n}", "test_cases": [["5\n1 1 2 2 2", "2"], ["3\n1 2 1", "0"], ["5\n1 1 1 1 1", "2"], ["14\n1 2 2 3 3 3 4 4 4 4 1 2 3 4", "4"]], "original": "'use strict'\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  var N = myconv(input[0],1);\n  var list = myconv(input[1],4);\n  var output = 0;\n  for(var i = 0; i < N - 1; i++){\n    var mae = list[i];\n    var ato = list[i+1];\n    if(mae == ato){\n       output++;\n      list[i+1] = -1;\n       }\n  }\n  myout(output);\n}\n  \nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03341_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x21e80a = a0_0x61e7;\nfunction a0_0x17bb() {\n    const _0x249ba7 = [\n        'trim',\n        'split',\n        'filter',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x17bb = function () {\n        return _0x249ba7;\n    };\n    return a0_0x17bb();\n}\nconst main = arg => {\n    const _0x117472 = a0_0x61e7;\n    arg = arg[_0x117472(0x0)]()['split']('\\x0a');\n    const N = parseInt(arg[0x0][_0x117472(0x1)]('\\x20')[0x0]);\n    const A = arg[0x1][_0x117472(0x1)]('');\n    const Rsum = A[_0x117472(0x2)](n => n === 'E')[_0x117472(0x3)];\n    const Lsum = N - Rsum;\n    let Rcnt = 0x0;\n    let Lcnt = 0x0;\n    let answer = Infinity;\n    for (let i = 0x0; i < N; i++) {\n        const needMoveLeft = Lcnt;\n        let needMoveRight = Rsum - Rcnt;\n        if (A[i] === 'E') {\n            needMoveRight--;\n        }\n        answer = Math['min'](answer, needMoveLeft + needMoveRight);\n        if (A[i] === 'W') {\n            Lcnt++;\n        } else {\n            Rcnt++;\n        }\n    }\n    console['log'](answer);\n};\nfunction a0_0x61e7(dvKKtV, key) {\n    const stringArray = a0_0x17bb();\n    a0_0x61e7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x61e7(dvKKtV, key);\n}\nmain(require('fs')[a0_0x21e80a(0x4)](a0_0x21e80a(0x5), a0_0x21e80a(0x6)));", "test_cases": [["5\nWEEWW", "1"], ["12\nWEWEWEEEWWWE", "4"], ["8\nWWWWWEEE", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const A = arg[1].split(\"\");\n    \n    const Rsum = A.filter(n=>n===\"E\").length;\n    const Lsum = N - Rsum;\n    \n    let Rcnt = 0;\n    let Lcnt = 0;\n    \n    let answer = Infinity;\n    \n    for(let i=0; i<N; i++) {\n        // 左半分\n        const needMoveLeft = Lcnt;\n        \n        // 右半分\n        let needMoveRight = Rsum - Rcnt;\n        \n        if(A[i] === \"E\") {\n            needMoveRight--;\n        }\n    \n        answer = Math.min(answer, needMoveLeft + needMoveRight);\n        \n        \n        if(A[i] === \"W\") {\n            Lcnt++;\n        } else {\n            Rcnt++;\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03346_1", "type": "JavaScript", "obfuscated": "function a0_0xfb5c() {\n    const _0x3cfc4a = [\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'reduce',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0xfb5c = function () {\n        return _0x3cfc4a;\n    };\n    return a0_0xfb5c();\n}\nfunction a0_0x580a(BgwwGh, key) {\n    const stringArray = a0_0xfb5c();\n    a0_0x580a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x580a(BgwwGh, key);\n}\nconst a0_0x33191c = a0_0x580a;\nconsole['log']((args => {\n    const _0x42a357 = a0_0x580a;\n    const [N, ...P] = args[_0x42a357(0x0)]()[_0x42a357(0x1)]('\\x0a')[_0x42a357(0x2)](v => v | 0x0);\n    const dp = Array(N)[_0x42a357(0x3)](0x0);\n    for (let i = 0x0; i < N; i++)\n        dp[P[i] + 0x1] = dp[P[i]] + 0x1;\n    return '' + (N - dp[_0x42a357(0x4)]((a, b) => a > b ? a : b, 0x0));\n})(require('fs')[a0_0x33191c(0x5)]('/dev/stdin', a0_0x33191c(0x6))));", "test_cases": [["4\n1\n3\n2\n4", "2"], ["6\n3\n2\n5\n1\n4\n6", "4"], ["8\n6\n3\n1\n2\n7\n4\n8\n5", "5"]], "original": "console.log((args=>{\n  const [N,...P] = args.trim().split('\\n').map(v=>v|0);\n  const dp = Array(N).fill(0);\n  for ( let i = 0; i < N; i++ ) dp[P[i]+1] = dp[P[i]] + 1;\n  return `${N-dp.reduce((a,b)=>(a>b)?a:b,0)}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03524_1", "type": "JavaScript", "obfuscated": "function a0_0x1919() {\n    const _0x57bb4c = [\n        'trim',\n        'charCodeAt',\n        'max',\n        'min',\n        'log',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1919 = function () {\n        return _0x57bb4c;\n    };\n    return a0_0x1919();\n}\nfunction a0_0x2fb5(mvAPCu, key) {\n    const stringArray = a0_0x1919();\n    a0_0x2fb5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fb5(mvAPCu, key);\n}\nconst a0_0x4e67d7 = a0_0x2fb5;\nfunction main(input) {\n    const _0x3d8c2e = a0_0x2fb5;\n    const s = input[_0x3d8c2e(0x0)]();\n    let array = s['split']('')['reduce']((a, c) => {\n        const _0x5afbbf = a0_0x2fb5;\n        a[c[_0x5afbbf(0x1)]() - 'a'[_0x5afbbf(0x1)]()]++;\n        return a;\n    }, [\n        0x0,\n        0x0,\n        0x0\n    ]);\n    if (Math[_0x3d8c2e(0x2)](...array) - Math[_0x3d8c2e(0x3)](...array) >= 0x2) {\n        console[_0x3d8c2e(0x4)]('NO');\n    } else {\n        console[_0x3d8c2e(0x4)](_0x3d8c2e(0x5));\n    }\n}\nmain(require('fs')[a0_0x4e67d7(0x6)](a0_0x4e67d7(0x7), 'utf8'));", "test_cases": [["abac", "YES"], ["aba", "NO"], ["babacccabab", "YES"]], "original": "function main(input) {\n  const s = input.trim()\n\n  let array = s.split('').reduce((a, c) => {\n    a[c.charCodeAt() - 'a'.charCodeAt()]++\n    return a\n  }, [0, 0, 0])\n\n  if (Math.max(...array) - Math.min(...array) >= 2) {\n    console.log('NO')\n  } else {\n    console.log('YES')\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03660_1", "type": "JavaScript", "obfuscated": "function a0_0x5bcd() {\n    var _0x152be2 = [\n        'fill',\n        'split',\n        'QpPsI',\n        'DldfY',\n        'ShNSv',\n        'Fennec',\n        'Snuke',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x5bcd = function () {\n        return _0x152be2;\n    };\n    return a0_0x5bcd();\n}\nvar a0_0x3b99d8 = a0_0x5c8e;\nfunction a0_0x5c8e(jlXbBI, key) {\n    var stringArray = a0_0x5bcd();\n    a0_0x5c8e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c8e(jlXbBI, key);\n}\nfunction Main(input) {\n    var _0x1f13c4 = a0_0x5c8e;\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0]);\n    a = new Array(n - 0x1)[_0x1f13c4(0x0)](0x0);\n    b = new Array(n - 0x1)[_0x1f13c4(0x0)](0x0);\n    for (i = 0x0; i < n - 0x1; i++) {\n        tmp = input[i + 0x1][_0x1f13c4(0x1)]('\\x20');\n        a[i] = parseInt(tmp[0x0]) - 0x1;\n        b[i] = parseInt(tmp[0x1]) - 0x1;\n    }\n    d1 = new Array(n)[_0x1f13c4(0x0)](n);\n    d1[0x0] = 0x0;\n    d2 = new Array(n)[_0x1f13c4(0x0)](n);\n    d2[n - 0x1] = 0x0;\n    function f(x, d) {\n        var _0x20d663 = a0_0x5c8e;\n        for (i = 0x0; i < n - 0x1; i++) {\n            if (a[i] == x && d[b[i]] > d[a[i]]) {\n                if (_0x20d663(0x2) === _0x20d663(0x2)) {\n                    d[b[i]] = d[a[i]] + 0x1;\n                    var j = i;\n                    f(b[i], d);\n                    i = j;\n                } else {\n                    if (i != 0x0 && i != n - 0x1) {\n                        if (d1[i] <= d2[i]) {\n                            x++;\n                        }\n                    }\n                }\n            }\n            if (b[i] == x && d[a[i]] > d[b[i]]) {\n                d[a[i]] = d[b[i]] + 0x1;\n                var j = i;\n                f(a[i], d);\n                i = j;\n            }\n        }\n        return d;\n    }\n    d1 = f(0x0, d1);\n    d2 = f(n - 0x1, d2);\n    var x = 0x0;\n    for (i = 0x0; i < n; i++) {\n        if (i != 0x0 && i != n - 0x1) {\n            if (_0x1f13c4(0x3) === _0x1f13c4(0x4)) {\n                if (a[i] == x && d[b[i]] > d[a[i]]) {\n                    d[b[i]] = d[a[i]] + 0x1;\n                    var j = i;\n                    f(b[i], d);\n                    i = j;\n                }\n                if (b[i] == x && d[a[i]] > d[b[i]]) {\n                    d[a[i]] = d[b[i]] + 0x1;\n                    var j = i;\n                    f(a[i], d);\n                    i = j;\n                }\n            } else {\n                if (d1[i] <= d2[i]) {\n                    x++;\n                }\n            }\n        }\n    }\n    var ans = _0x1f13c4(0x5);\n    if (x <= n - 0x2 - x) {\n        ans = _0x1f13c4(0x6);\n    }\n    console[_0x1f13c4(0x7)]('%s', ans);\n}\nMain(require('fs')[a0_0x3b99d8(0x8)](a0_0x3b99d8(0x9), 'utf8'));", "test_cases": [["7\n3 6\n1 2\n3 1\n7 4\n5 7\n1 4", "Fennec"], ["4\n1 4\n4 2\n2 3", "Snuke"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  a = new Array(n-1).fill(0);\n  b = new Array(n-1).fill(0);\n  for(i=0;i<n-1;i++){\n    tmp = input[i+1].split(\" \");\n    a[i]=parseInt(tmp[0])-1;\n    b[i]=parseInt(tmp[1])-1;\n  }\n  d1 = new Array(n).fill(n);\n  d1[0]=0;\n  d2 = new Array(n).fill(n);\n  d2[n-1]=0;\n  function f(x,d){\n    for(i=0;i<n-1;i++){\n      if(a[i]==x&&d[b[i]]>d[a[i]]){\n        d[b[i]]=d[a[i]]+1;\n        var j =i;\n        f(b[i],d);\n        i=j;\n      }\n      if(b[i]==x&&d[a[i]]>d[b[i]]){\n        d[a[i]]=d[b[i]]+1;\n        var j =i;\n        f(a[i],d);\n        i=j;\n      }\n    }\n    return d;\n  }\n  d1=f(0,d1);\n  d2=f(n-1,d2);\n  var x=0;\n  for(i=0;i<n;i++){\n    if(i!=0&&i!=n-1){\n      if(d1[i]<=d2[i]){\n        x++;\n      }\n    }\n  }\n  var ans=\"Fennec\";\n  if(x<=n-2-x){\n    ans=\"Snuke\";\n  }\n\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03715_1", "type": "JavaScript", "obfuscated": "var a0_0x3d9cac = a0_0x2a60;\nfunction Main(input) {\n    var _0x18194c = a0_0x2a60;\n    input = input[_0x18194c(0x0)]()[_0x18194c(0x1)]('\\x0a')[_0x18194c(0x2)](function (x) {\n        var _0x21cb23 = a0_0x2a60;\n        return x[_0x21cb23(0x1)]('\\x20');\n    });\n    var H = parseInt(input[0x0][0x0], 0xa);\n    var W = parseInt(input[0x0][0x1], 0xa);\n    var ans = calc(H, W);\n    console[_0x18194c(0x3)](ans);\n}\nfunction a0_0x2973() {\n    var _0x2a371b = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'max',\n        'ceil',\n        'abs',\n        'floor',\n        'min',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2973 = function () {\n        return _0x2a371b;\n    };\n    return a0_0x2973();\n}\nfunction a0_0x2a60(xjEnjN, key) {\n    var stringArray = a0_0x2973();\n    a0_0x2a60 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a60(xjEnjN, key);\n}\nfunction calc(H, W) {\n    var _0x474696 = a0_0x2a60;\n    if (H % 0x3 === 0x0 || W % 0x3 === 0x0)\n        return 0x0;\n    var result = H * W;\n    var tmp;\n    var oldtmp = result;\n    for (var i = 0x0; i <= W; i++) {\n        tmp = Math[_0x474696(0x4)](Math['abs'](i * H - (W - i) * Math[_0x474696(0x5)](H / 0x2)), Math[_0x474696(0x6)](i * H - (W - i) * Math[_0x474696(0x7)](H / 0x2)), H % 0x2 * (W - i));\n        result = Math[_0x474696(0x8)](result, tmp);\n        if (tmp > oldtmp)\n            break;\n        oldtmp = tmp;\n    }\n    [W, H] = [\n        H,\n        W\n    ];\n    oldtmp = H * W;\n    for (var i = 0x0; i <= W; i++) {\n        tmp = Math['max'](Math['abs'](i * H - (W - i) * Math[_0x474696(0x5)](H / 0x2)), Math[_0x474696(0x6)](i * H - (W - i) * Math[_0x474696(0x7)](H / 0x2)), H % 0x2 * (W - i));\n        result = Math[_0x474696(0x8)](result, tmp);\n        if (tmp > oldtmp)\n            break;\n        oldtmp = tmp;\n    }\n    return Math[_0x474696(0x8)](result, H, W);\n}\nMain(require('fs')[a0_0x3d9cac(0x9)]('/dev/stdin', a0_0x3d9cac(0xa)));", "test_cases": [["3 5", "0"], ["4 5", "2"], ["5 5", "4"], ["100000 2", "1"], ["100000 100000", "50000"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar H = parseInt(input[0][0], 10);\n\tvar W = parseInt(input[0][1], 10);\n\tvar ans = calc(H, W);\n\tconsole.log(ans);\n}\n\nfunction calc(H, W){\n\tif (H % 3 === 0 || W % 3 === 0) return 0;\n\tvar result = H * W;\n\tvar tmp;\n\tvar oldtmp = result;\n\tfor (var i = 0; i <= W; i++){\n\t\ttmp = Math.max(Math.abs(i * H - (W - i) * Math.ceil(H / 2)), Math.abs(i * H - (W - i) * Math.floor(H / 2)), (H % 2) * (W - i));\n\t\tresult = Math.min(result, tmp);\n\t\tif (tmp > oldtmp) break;\n\t\toldtmp = tmp;\n\t}\n\t[W, H] = [H, W];\n\toldtmp =  H * W;\n\tfor (var i = 0; i <= W; i++){\n\t\ttmp = Math.max(Math.abs(i * H - (W - i) * Math.ceil(H / 2)), Math.abs(i * H - (W - i) * Math.floor(H / 2)), (H % 2) * (W - i));\n\t\tresult = Math.min(result, tmp);\n\t\tif (tmp > oldtmp) break;\n\t\toldtmp = tmp;\n\t}\n\treturn Math.min(result, H, W);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03987_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5643c1 = a0_0x31ff;\nconst lines = require('fs')[a0_0x5643c1(0x0)](a0_0x5643c1(0x1), 'utf8')[a0_0x5643c1(0x2)]()['split']('\\x0a');\nconst N = +lines[0x0];\nconst A = lines[0x1][a0_0x5643c1(0x3)]('\\x20');\nlet indices = [];\nfor (let i = 0x0; i < N; i++) {\n    A[i] = +A[i];\n    indices[indices['length']] = i;\n}\nindices = indices[a0_0x5643c1(0x4)]((a, b) => A[a] - A[b]);\nlet sum = 0x0, que = [[\n            0x0,\n            N - 0x1,\n            0x0\n        ]];\nwhile (que[a0_0x5643c1(0x5)] > 0x0) {\n    let lri = que[a0_0x5643c1(0x6)](), left = lri[0x0], right = lri[0x1], index = lri[0x2];\n    if (left > right)\n        continue;\n    let i = index;\n    while (indices[i] < left || indices[i] > right)\n        i++;\n    let ind = indices[i];\n    sum += A[ind] * (ind - left + 0x1) * (right - ind + 0x1);\n    if (left <= ind - 0x1)\n        que[que[a0_0x5643c1(0x5)]] = [\n            left,\n            ind - 0x1,\n            i + 0x1\n        ];\n    if (ind + 0x1 <= right)\n        que[que[a0_0x5643c1(0x5)]] = [\n            ind + 0x1,\n            right,\n            i + 0x1\n        ];\n}\nfunction a0_0x31ff(VegNqx, key) {\n    const stringArray = a0_0x298b();\n    a0_0x31ff = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x31ff(VegNqx, key);\n}\nconsole['log'](sum);\nfunction a0_0x298b() {\n    const _0x77c811 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'sort',\n        'length',\n        'shift'\n    ];\n    a0_0x298b = function () {\n        return _0x77c811;\n    };\n    return a0_0x298b();\n}", "test_cases": [["3\n2 1 3", "9"], ["4\n1 3 2 4", "19"], ["8\n5 4 8 1 2 6 7 3", "85"]], "original": "'use strict';\n\nconst lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nconst N = +lines[0];\nconst A = lines[1].split(' ');\n\nlet indices = [];\nfor (let i = 0; i < N; i++) {\n\tA[i] = +A[i];\n\tindices[indices.length] = i;\n}\n\nindices = indices.sort((a, b) => A[a] - A[b]);\n\nlet sum = 0,\n\tque = [[0, N - 1, 0]];\n\nwhile (que.length > 0) {\n\tlet lri = que.shift(),\n\t\tleft = lri[0],\n\t\tright = lri[1],\n\t\tindex = lri[2];\n\t\n\tif (left > right) continue;\n\t\n\tlet i = index;\n\twhile (indices[i] < left || indices[i] > right) i++;\n\tlet ind = indices[i];\n\t\n\tsum += A[ind] * (ind - left + 1) * (right - ind + 1);\n\tif (left <= ind - 1) que[que.length] = [left, ind - 1, i + 1];\n\tif (ind + 1 <= right) que[que.length] = [ind + 1, right, i + 1];\n}\n\nconsole.log(sum);", "language": "JavaScript"}
{"filename": "p04047_1", "type": "JavaScript", "obfuscated": "const a0_0x573e4e = a0_0x5047;\nfunction a0_0x1ff2() {\n    const _0x34e2f8 = [\n        'split',\n        'map',\n        'sort',\n        'log',\n        'utf8'\n    ];\n    a0_0x1ff2 = function () {\n        return _0x34e2f8;\n    };\n    return a0_0x1ff2();\n}\nfunction a0_0x5047(mELiZA, key) {\n    const stringArray = a0_0x1ff2();\n    a0_0x5047 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5047(mELiZA, key);\n}\nconst main = input => {\n    const _0x557a56 = a0_0x5047;\n    const data = input[_0x557a56(0x0)](/\\n/);\n    const num = data[0x0];\n    const hoge = data[0x1][_0x557a56(0x0)](/\\s/)[_0x557a56(0x1)](a => parseInt(a, 0xa))[_0x557a56(0x2)]((a, b) => {\n        if (a < b)\n            return 0x1;\n        if (a > b)\n            return -0x1;\n        return 0x0;\n    });\n    var res = 0x0;\n    for (i = 0x0; i < num; i++) {\n        res += hoge[i * 0x2 + 0x1];\n    }\n    console[_0x557a56(0x3)](res);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x573e4e(0x4)));", "test_cases": [["2\n1 3 1 2", "3"], ["5\n100 1 2 3 14 15 58 58 58 29", "135"]], "original": "const main = (input) =>  {\n  const data = input.split(/\\n/);\n  const num = data[0]\n  const hoge = data[1].split(/\\s/).map((a) => parseInt(a, 10)).sort((a, b) => {\n    if (a < b ) return 1;\n    if (a > b ) return -1;\n    return 0;\n  })\n  var res = 0;\n  for (i = 0; i < num; i ++ ) {\n    res += (hoge[i*2 + 1]);\n  }\n  console.log(res)\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p00013_1", "type": "JavaScript", "obfuscated": "function a0_0x30a2(zBShLG, key) {\n    var stringArray = a0_0x39be();\n    a0_0x30a2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x30a2(zBShLG, key);\n}\nvar a0_0x18b83e = a0_0x30a2;\nq = [];\nfunction a0_0x39be() {\n    var _0x58524a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'push',\n        'log',\n        'pop'\n    ];\n    a0_0x39be = function () {\n        return _0x58524a;\n    };\n    return a0_0x39be();\n}\nrequire('fs')[a0_0x18b83e(0x0)](a0_0x18b83e(0x1), a0_0x18b83e(0x2))[a0_0x18b83e(0x3)]()[a0_0x18b83e(0x4)]('\\x0a')['some'](function (i) {\n    var _0x17f3b9 = a0_0x30a2;\n    i != 0x0 ? q[_0x17f3b9(0x5)](i) : console[_0x17f3b9(0x6)](q[_0x17f3b9(0x7)]());\n});", "test_cases": [["1\n6\n0\n8\n10\n0\n0\n0", "6\n10\n8\n1"]], "original": "q=[];require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){i!=0?q.push(i):console.log(q.pop())})", "language": "JavaScript"}
{"filename": "p00050_1", "type": "JavaScript", "obfuscated": "var a0_0x5a5412 = a0_0x3d26;\nfunction a0_0x586b() {\n    var _0x4cc1ab = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'apple',\n        'peach'\n    ];\n    a0_0x586b = function () {\n        return _0x4cc1ab;\n    };\n    return a0_0x586b();\n}\nfunction a0_0x3d26(ugHadx, key) {\n    var stringArray = a0_0x586b();\n    a0_0x3d26 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d26(ugHadx, key);\n}\nconsole[a0_0x5a5412(0x0)](require('fs')[a0_0x5a5412(0x1)](a0_0x5a5412(0x2), a0_0x5a5412(0x3))[a0_0x5a5412(0x4)](/apple/, '\\x09')[a0_0x5a5412(0x4)](/peach/, a0_0x5a5412(0x5))['replace'](/\\t/, a0_0x5a5412(0x6))['trim']());", "test_cases": [["the cost of one peach is higher than that of one apple.", "the cost of one apple is higher than that of one peach."]], "original": "console.log(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").replace(/apple/,'\\t').replace(/peach/,'apple').replace(/\\t/,'peach').trim())", "language": "JavaScript"}
{"filename": "p00058_1", "type": "JavaScript", "obfuscated": "var a0_0x2fd75c = a0_0x5745;\nvar input = require('fs')[a0_0x2fd75c(0x0)](a0_0x2fd75c(0x1), a0_0x2fd75c(0x2));\nfunction a0_0x5745(lQQTgF, key) {\n    var stringArray = a0_0x4140();\n    a0_0x5745 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5745(lQQTgF, key);\n}\nfunction a0_0x4140() {\n    var _0x25b20f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'map',\n        'toFixed',\n        'YES',\n        'apply'\n    ];\n    a0_0x4140 = function () {\n        return _0x25b20f;\n    };\n    return a0_0x4140();\n}\nvar Arr = input[a0_0x2fd75c(0x3)]()[a0_0x2fd75c(0x4)]('\\x0a');\nfor (i = 0x0; i < Arr[a0_0x2fd75c(0x5)]; i++) {\n    var arr = Arr[i][a0_0x2fd75c(0x4)]('\\x20')[a0_0x2fd75c(0x6)](Number);\n    (function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        var _0x512cfc = a0_0x5745;\n        var k1;\n        var k2;\n        if (x2 - x1 !== 0x0)\n            k1 = ((y2 - y1) / (x2 - x1))[_0x512cfc(0x7)](0xb);\n        else\n            k1 = Infinity;\n        if (x4 - x3 !== 0x0)\n            k2 = (y4 - y3) / (x4 - x3)[_0x512cfc(0x7)](0xb);\n        else\n            k2 = Infinity;\n        var ans = 'NO';\n        if (k1 == 0x0 && k2 == Infinity)\n            ans = _0x512cfc(0x8);\n        if (k2 == 0x0 && k1 == Infinity)\n            ans = _0x512cfc(0x8);\n        if (k1 == -0x1 * k2 && (k1 != 0x0 && k2 != 0x0))\n            ans = _0x512cfc(0x8);\n        console['log'](ans);\n    }[a0_0x2fd75c(0x9)](null, arr));\n}", "test_cases": [["1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0\n0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0\n10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1\n2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3", "YES\nNO\nNO\nYES"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   (function(x1, y1, x2, y2, x3, y3, x4, y4){\n      var k1;\n      var k2;\n      if(x2-x1!==0)k1=((y2-y1)/(x2-x1)).toFixed(11);\n      else k1=Infinity;\n      if(x4-x3!==0)k2=(y4-y3)/(x4-x3).toFixed(11);\n      else k2=Infinity;\n      var ans=\"NO\";\n      if(k1==0 && k2==Infinity)ans=\"YES\";\n      if(k2==0 && k1==Infinity)ans=\"YES\";\n      if(k1==(-1*k2) && (k1!=0 && k2!=0))ans=\"YES\";\n      console.log(ans);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00070_1", "type": "JavaScript", "obfuscated": "var a0_0x52b961 = a0_0x3e70;\nfunction perm(xs, n, s, callback) {\n    var _0x2a27ac = a0_0x3e70;\n    var x, i, len = xs[_0x2a27ac(0x0)];\n    s = s || [];\n    if (n === 0x0) {\n        if (_0x2a27ac(0x1) === _0x2a27ac(0x1)) {\n            callback(s);\n        } else {\n            for (i = 0x0; i < len; i++) {\n                x = xs[_0x2a27ac(0x2)]();\n                s[_0x2a27ac(0x3)](x);\n                perm(xs, n - 0x1, s, callback);\n                s[_0x2a27ac(0x4)]();\n                xs[_0x2a27ac(0x3)](x);\n            }\n        }\n    } else {\n        if ('XZrNF' === _0x2a27ac(0x5)) {\n            for (i = 0x0; i < len; i++) {\n                x = xs['shift']();\n                s[_0x2a27ac(0x3)](x);\n                perm(xs, n - 0x1, s, callback);\n                s[_0x2a27ac(0x4)]();\n                xs[_0x2a27ac(0x3)](x);\n            }\n        } else {\n            input = input[_0x2a27ac(0x6)]('\\x0a');\n            main();\n        }\n    }\n}\nfunction a0_0x3e70(MdpjUI, key) {\n    var stringArray = a0_0x112b();\n    a0_0x3e70 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e70(MdpjUI, key);\n}\nfunction main() {\n    input['forEach'](function (line) {\n        var _0x22d824 = a0_0x3e70;\n        var n, s, r = 0x0;\n        if (line[_0x22d824(0x7)]() === '')\n            return;\n        line = line[_0x22d824(0x6)]('\\x20')[_0x22d824(0x8)](parseFloat);\n        n = line[0x0];\n        s = line[0x1];\n        perm([\n            0x0,\n            0x1,\n            0x2,\n            0x3,\n            0x4,\n            0x5,\n            0x6,\n            0x7,\n            0x8,\n            0x9\n        ], n, [], function (xs) {\n            var _0x16e8eb = a0_0x3e70;\n            r += xs[_0x16e8eb(0x9)](function (m, x, i) {\n                var _0xf2a70 = a0_0x3e70;\n                if (_0xf2a70(0xa) !== _0xf2a70(0xa)) {\n                    input += chunk;\n                } else {\n                    return m + x * (i + 0x1);\n                }\n            }, 0x0) === s ? 0x1 : 0x0;\n        });\n        console[_0x22d824(0xb)](r);\n    });\n}\nvar input = '';\nprocess[a0_0x52b961(0xc)][a0_0x52b961(0xd)]();\nfunction a0_0x112b() {\n    var _0x53a4c0 = [\n        'length',\n        'TyeWL',\n        'shift',\n        'push',\n        'pop',\n        'XZrNF',\n        'split',\n        'trim',\n        'map',\n        'reduce',\n        'HCUQr',\n        'log',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data'\n    ];\n    a0_0x112b = function () {\n        return _0x53a4c0;\n    };\n    return a0_0x112b();\n}\nprocess[a0_0x52b961(0xc)][a0_0x52b961(0xe)](a0_0x52b961(0xf));\nprocess['stdin']['on'](a0_0x52b961(0x10), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x52b961(0xc)]['on']('end', function () {\n    var _0x4b9b3b = a0_0x3e70;\n    input = input[_0x4b9b3b(0x6)]('\\x0a');\n    main();\n});", "test_cases": [["3 10\n3 1", "8\n0"]], "original": "function perm(xs, n, s, callback) {\n  var\n  x, i, len = xs.length;\n  s = s || [];\n  if(n === 0) {\n    callback(s);\n  }else{\n    for(i = 0; i < len; i++){\n      x = xs.shift();\n      s.push(x);\n      perm(xs, n - 1, s, callback);\n      s.pop();\n      xs.push(x);\n    }\n  }\n}\n\nfunction main() {\n  input.forEach(function(line) {\n    var\n    n, s,\n    r = 0;\n    if(line.trim() === '') return;\n    line = line.split(' ').map(parseFloat);\n    n = line[0]; s = line[1];\n    perm([0,1,2,3,4,5,6,7,8,9], n, [], function(xs) {\n      r += xs.reduce(function(m, x, i) {\n        return m + x * (i + 1);\n      }, 0) === s ? 1 : 0;\n    });\n    console.log(r);\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p02241_1", "type": "JavaScript", "obfuscated": "var a0_0x2f77a1 = a0_0x46b5;\nconfig = {\n    'input': a0_0x2f77a1(0x0),\n    'newline': '\\x0a'\n};\nfunction a0_0x46b5(dlxGpc, key) {\n    var stringArray = a0_0x34b8();\n    a0_0x46b5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x46b5(dlxGpc, key);\n}\nA = require('fs')[a0_0x2f77a1(0x1)](config[a0_0x2f77a1(0x2)], a0_0x2f77a1(0x3))[a0_0x2f77a1(0x4)]()[a0_0x2f77a1(0x5)](config['newline'])[a0_0x2f77a1(0x6)](function (line) {\n    var _0x143464 = a0_0x46b5;\n    return line[_0x143464(0x4)]()[_0x143464(0x5)]('\\x20')[_0x143464(0x6)](Number);\n});\nn = Number(A[a0_0x2f77a1(0x7)]()[0x0]);\ncnt = 0x1;\ncost = 0x0;\nconn = new Array(n);\nconn[0x0] = !![];\nfunction a0_0x34b8() {\n    var _0x5ad5dd = [\n        '/dev/stdin',\n        'readFileSync',\n        'input',\n        'ascii',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'log'\n    ];\n    a0_0x34b8 = function () {\n        return _0x5ad5dd;\n    };\n    return a0_0x34b8();\n}\nfor (i = 0x1; i < n; i++)\n    conn[i] = ![];\nwhile (cnt < n) {\n    min = Number['MAX_SAFE_INTEGER'];\n    for (i in conn) {\n        if (!conn[i])\n            continue;\n        Ai = A[i];\n        for (j in conn) {\n            if (conn[j])\n                continue;\n            if (Ai[j] !== -0x1 && Ai[j] < min) {\n                min = Ai[j];\n                min_j = j;\n            }\n        }\n    }\n    conn[min_j] = !![];\n    cost += min;\n    cnt++;\n}\nconsole[a0_0x2f77a1(0x8)](cost);", "test_cases": [["5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1", "5"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nA = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline)\n  .map(function (line) { return line.trim().split(' ').map(Number); });\nn = Number(A.shift()[0]);\n\ncnt = 1;\ncost = 0;\nconn = new Array(n);\nconn[0] = true;\nfor (i = 1; i < n; i++) conn[i] = false;\n\nwhile (cnt < n) {\n  min = Number.MAX_SAFE_INTEGER;\n  for (i in conn) {\n    if (!conn[i]) continue;\n    Ai = A[i];\n    for (j in conn) {\n      if (conn[j]) continue;\n      if (Ai[j] !== -1 && Ai[j] < min) {\n        min = Ai[j];\n        min_j = j;\n      }\n    }\n  }\n  conn[min_j] = true;\n  cost += min;\n  cnt++;\n}\n\nconsole.log(cost);", "language": "JavaScript"}
{"filename": "p02720_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x4130e8 = a0_0x3ac4;\nfunction a0_0x3ac4(trilnE, key) {\n    const stringArray = a0_0x3cdc();\n    a0_0x3ac4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ac4(trilnE, key);\n}\nfunction a0_0x3cdc() {\n    const _0x177060 = [\n        'split',\n        'map',\n        'abs',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3cdc = function () {\n        return _0x177060;\n    };\n    return a0_0x3cdc();\n}\nfunction main(input) {\n    const _0x6e94dc = a0_0x3ac4;\n    const k = parseInt(input[0x0]);\n    let i = 0x1;\n    let runruncounter = 0x0;\n    while (!![]) {\n        const j = (i + '')[_0x6e94dc(0x0)]('')[_0x6e94dc(0x1)](a => parseInt(a));\n        let judge = !![];\n        for (let l = 0x1; l < j['length']; l++) {\n            if (Math[_0x6e94dc(0x2)](j[l] - j[l - 0x1]) > 0x1) {\n                judge = ![];\n                if (j[l] === 0x9) {\n                    j[l - 0x1] += 0x1;\n                    j[l] = 0x0;\n                } else {\n                    j[l] += 0x1;\n                }\n                i = parseInt(j[_0x6e94dc(0x3)](''));\n                break;\n            }\n        }\n        if (judge) {\n            runruncounter++;\n            if (runruncounter === k) {\n                console['log'](i);\n                break;\n            }\n            i++;\n        }\n    }\n}\nmain(require('fs')[a0_0x4130e8(0x4)](a0_0x4130e8(0x5), a0_0x4130e8(0x6))[a0_0x4130e8(0x7)]()[a0_0x4130e8(0x0)]('\\x0a'));", "test_cases": [["15", "23"], ["1", "1"], ["13", "21"], ["100000", "3234566667"]], "original": "\"use strict\";\nfunction main(input) {\n  const k = parseInt(input[0]);\n  let i = 1;\n  let runruncounter = 0;\n  while(true){\n    const j =  (i+\"\").split(\"\").map(a => parseInt(a));\n    let judge = true;\n\n    for(let l=1;l<j.length;l++){\n      //console.log(i);\n      if(Math.abs(j[l]-j[l-1])>1){\n        judge = false;\n        if(j[l]===9){\n          j[l-1]+=1;\n          j[l]=0;\n        }else{\n          j[l]+=1;\n        }\n        //console.log(i +\" \" + j + \" \" + runruncounter  )\n        i = parseInt(j.join(\"\"));\n        break;\n      }\n    }\n\n    if(judge){\n      runruncounter++;\n      if(runruncounter===k){\n        console.log(i);\n        break;\n      }\n      i++;\n    }\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02845_1", "type": "JavaScript", "obfuscated": "function a0_0x2380(EkeoDS, key) {\n    var stringArray = a0_0x32e6();\n    a0_0x2380 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2380(EkeoDS, key);\n}\nvar a0_0x3c0f51 = a0_0x2380;\nfunction Main(input) {\n    var _0x2d020e = a0_0x2380;\n    input = input[_0x2d020e(0x0)]()[_0x2d020e(0x1)]('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    var N = parseInt(input[0x0][0x0], 0xa);\n    var RGBWithoutOrder = [\n        0x1,\n        0x0,\n        0x0\n    ];\n    var tmp1, tmp2, flag;\n    var ans = 0x3;\n    for (var i = 0x1; i < N; i++) {\n        tmp2 = 0x0;\n        tmp1 = parseInt(input[0x1][i], 0xa);\n        for (var x of RGBWithoutOrder) {\n            if (x === tmp1)\n                tmp2++;\n        }\n        ans *= tmp2;\n        ans %= 0x3b9aca00 + 0x7;\n        for (var j = 0x0; j < 0x3; j++) {\n            if (RGBWithoutOrder[j] === tmp1) {\n                RGBWithoutOrder[j]++;\n                break;\n            }\n        }\n    }\n    console[_0x2d020e(0x2)](ans);\n}\nMain(require('fs')[a0_0x3c0f51(0x3)]('/dev/stdin', a0_0x3c0f51(0x4)));\nfunction a0_0x32e6() {\n    var _0x4bd43f = [\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x32e6 = function () {\n        return _0x4bd43f;\n    };\n    return a0_0x32e6();\n}", "test_cases": [["6\n0 1 2 3 4 5", "3"], ["3\n0 0 0", "6"], ["54\n0 0 1 0 1 2 1 2 3 2 3 3 4 4 5 4 6 5 7 8 5 6 6 7 7 8 8 9 9 10 10 11 9 12 10 13 14 11 11 12 12 13 13 14 14 15 15 15 16 16 16 17 17 17", "115295190"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n    var N = parseInt(input[0][0], 10);\n    var RGBWithoutOrder = [1, 0, 0];\n    var tmp1, tmp2, flag;\n    var ans = 3;\n    for (var i = 1; i < N; i++){\n        tmp2 = 0;\n        tmp1 = parseInt(input[1][i], 10);\n        for (var x of RGBWithoutOrder){\n            if (x === tmp1) tmp2 ++;\n        }\n        ans *= tmp2;\n        ans %= (1e+9 + 7);\n\n        for (var j = 0; j < 3; j++){\n            if (RGBWithoutOrder[j] === tmp1){\n                RGBWithoutOrder[j] ++;\n                break;\n            }\n        }\n    }\n    console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03054_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x5f4781 = a0_0x1258;\nfunction Main(input) {\n    var _0x5af15f = a0_0x1258;\n    input = input[_0x5af15f(0x0)](/\\s+/);\n    var H = input[_0x5af15f(0x1)]() - 0x0;\n    var W = input[_0x5af15f(0x1)]() - 0x0;\n    var N = input[_0x5af15f(0x1)]() - 0x0;\n    var sr = input[_0x5af15f(0x1)]() - 0x0;\n    var sc = input[_0x5af15f(0x1)]() - 0x0;\n    var S = input[_0x5af15f(0x1)]();\n    var T = input['shift']();\n    var dp = [[\n            sc,\n            sc,\n            sr,\n            sr\n        ]];\n    for (let i = 0x0; i < N; i++) {\n        dp[i + 0x1] = [];\n        dp[i + 0x1][0x0] = dp[i][0x0] - (S[i] === 'L' ? 0x1 : 0x0);\n        dp[i + 0x1][0x1] = dp[i][0x1] + (S[i] === 'R' ? 0x1 : 0x0);\n        dp[i + 0x1][0x2] = dp[i][0x2] - (S[i] === 'U' ? 0x1 : 0x0);\n        dp[i + 0x1][0x3] = dp[i][0x3] + (S[i] === 'D' ? 0x1 : 0x0);\n        if (dp[i + 0x1][0x0] === 0x0 || dp[i + 0x1][0x1] === W + 0x1 || dp[i + 0x1][0x2] === 0x0 || dp[i + 0x1][0x3] === H + 0x1) {\n            console[_0x5af15f(0x2)]('NO');\n            return;\n        }\n        dp[i + 0x1][0x0] = Math['min'](dp[i + 0x1][0x0] + (T[i] === 'R' ? 0x1 : 0x0), W);\n        dp[i + 0x1][0x1] = Math[_0x5af15f(0x3)](dp[i + 0x1][0x1] - (T[i] === 'L' ? 0x1 : 0x0), 0x1);\n        dp[i + 0x1][0x2] = Math[_0x5af15f(0x4)](dp[i + 0x1][0x2] + (T[i] === 'D' ? 0x1 : 0x0), H);\n        dp[i + 0x1][0x3] = Math[_0x5af15f(0x3)](dp[i + 0x1][0x3] - (T[i] === 'U' ? 0x1 : 0x0), 0x1);\n    }\n    console[_0x5af15f(0x2)](_0x5af15f(0x5));\n}\nfunction a0_0x55af() {\n    var _0x121322 = [\n        'split',\n        'shift',\n        'log',\n        'max',\n        'min',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x55af = function () {\n        return _0x121322;\n    };\n    return a0_0x55af();\n}\nfunction a0_0x1258(VmAqqA, key) {\n    var stringArray = a0_0x55af();\n    a0_0x1258 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1258(VmAqqA, key);\n}\nMain(require('fs')[a0_0x5f4781(0x6)](a0_0x5f4781(0x7), 'utf8'));", "test_cases": [["2 3 3\n2 2\nRRL\nLUD", "YES"], ["4 3 5\n2 2\nUDRRR\nLLDUD", "NO"], ["5 6 11\n2 1\nRLDRRUDDLRL\nURRDRLLDLRD", "NO"]], "original": "'use strict'\nfunction Main(input){\n  input=input.split(/\\s+/);\n  var H=input.shift()-0;\n  var W=input.shift()-0;\n  var N=input.shift()-0;\n  var sr=input.shift()-0;\n  var sc=input.shift()-0;\n  var S=input.shift();\n  var T=input.shift();\n  var dp=[[sc,sc,sr,sr]];\n  for(let i=0;i<N;i++){\n    dp[i+1]=[];\n    dp[i+1][0]=dp[i][0]-(S[i]==='L'?1:0);\n    dp[i+1][1]=dp[i][1]+(S[i]==='R'?1:0);\n    dp[i+1][2]=dp[i][2]-(S[i]==='U'?1:0);\n    dp[i+1][3]=dp[i][3]+(S[i]==='D'?1:0);\n    if(dp[i+1][0]===0||dp[i+1][1]===W+1||dp[i+1][2]===0||dp[i+1][3]===H+1){\n      console.log('NO');\n      return;\n    }\n    dp[i+1][0]=Math.min(dp[i+1][0]+(T[i]==='R'?1:0), W)\n    dp[i+1][1]=Math.max(dp[i+1][1]-(T[i]==='L'?1:0), 1)\n    dp[i+1][2]=Math.min(dp[i+1][2]+(T[i]==='D'?1:0), H)\n    dp[i+1][3]=Math.max(dp[i+1][3]-(T[i]==='U'?1:0), 1)\n  }\n  console.log('YES');\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03168_1", "type": "JavaScript", "obfuscated": "function a0_0x5965(qeVnQr, key) {\n    const stringArray = a0_0x3539();\n    a0_0x5965 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5965(qeVnQr, key);\n}\nfunction a0_0x3539() {\n    const _0x17b379 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'fill',\n        'slice',\n        'reduce',\n        'toString',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3539 = function () {\n        return _0x17b379;\n    };\n    return a0_0x3539();\n}\nconst a0_0xac9029 = a0_0x5965;\nconsole[a0_0xac9029(0x0)](function (args) {\n    const _0x47f940 = a0_0x5965;\n    const tmp = args[_0x47f940(0x1)]()[_0x47f940(0x2)]('\\x0a')[_0x47f940(0x3)](r => r['split']('\\x20'));\n    const N = tmp[_0x47f940(0x4)]()[0x0] | 0x0;\n    const p = tmp[0x0][_0x47f940(0x3)](parseFloat);\n    const dp = Array(N)[_0x47f940(0x5)](0x0)['map'](r => Array(N + 0x1)[_0x47f940(0x5)](0x0));\n    dp[0x0][0x0] = 0x1 - p[0x0];\n    dp[0x0][0x1] = p[0x0];\n    for (let i = 0x0; i < N - 0x1; i++) {\n        for (let j = 0x0; j <= i + 0x1; j++) {\n            dp[i + 0x1][j + 0x1] += dp[i][j] * p[i + 0x1];\n            dp[i + 0x1][j] += dp[i][j] * (0x1 - p[i + 0x1]);\n        }\n    }\n    return dp[N - 0x1][_0x47f940(0x6)]((N + 0x1) / 0x2)[_0x47f940(0x7)]((a, b) => a + b)[_0x47f940(0x8)]();\n}(require('fs')[a0_0xac9029(0x9)](a0_0xac9029(0xa), 'utf8')));", "test_cases": [["3\n0.30 0.60 0.80", "0.612"], ["1\n0.50", "0.5"], ["5\n0.42 0.01 0.42 0.99 0.42", "0.3821815872"]], "original": "console.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ') );\n  const N = tmp.shift()[0]|0;\n  const p = tmp[0].map(parseFloat);\n  const dp = Array(N).fill(0).map(r=>Array(N+1).fill(.0));\n  dp[0][0] = 1.0 - p[0];\n  dp[0][1] = p[0];\n  for ( let i = 0; i < N-1; i++ ) {\n    for ( let j = 0; j <= i + 1; j++ ) {\n      dp[i+1][j+1] += dp[i][j] * p[i+1];\n      dp[i+1][j] += dp[i][j] * (1.0-p[i+1]);\n    }\n  }\n  return dp[N-1].slice((N+1)/2).reduce((a,b)=>a+b).toString();\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03173_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2e5e(NPnZuu, key) {\n    const stringArray = a0_0xd9e8();\n    a0_0x2e5e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e5e(NPnZuu, key);\n}\nconst a0_0x2a9a6b = a0_0x2e5e;\nfunction a0_0xd9e8() {\n    const _0x5d09ee = [\n        'map',\n        'shift',\n        'splice',\n        'indexOf',\n        'apply',\n        'push',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xd9e8 = function () {\n        return _0x5d09ee;\n    };\n    return a0_0xd9e8();\n}\n(function (input) {\n    const _0xcdeb20 = a0_0x2e5e;\n    input = input['trim']()['split'](/\\s+/)[_0xcdeb20(0x0)](x => x - 0x0);\n    const N = input[_0xcdeb20(0x1)]();\n    const a = input;\n    var ans = 0x0;\n    while (a['length'] > 0x1) {\n        let x = a[_0xcdeb20(0x2)](a[_0xcdeb20(0x3)](Math['min'][_0xcdeb20(0x4)](null, a)), 0x1)[0x0];\n        let y = a[_0xcdeb20(0x2)](a[_0xcdeb20(0x3)](Math['min'][_0xcdeb20(0x4)](null, a)), 0x1)[0x0];\n        a[_0xcdeb20(0x5)](x + y);\n        ans += x + y;\n    }\n    console[_0xcdeb20(0x6)](ans);\n}(require('fs')['readFileSync'](a0_0x2a9a6b(0x7), a0_0x2a9a6b(0x8))));", "test_cases": [["4\n10 20 30 40", "190"], ["5\n10 10 10 10 10", "120"], ["3\n1000000000 1000000000 1000000000", "5000000000"], ["6\n7 6 8 6 1 1", "68"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const N=input.shift();\n  const a=input;\n  \n  var ans=0;\n  while(a.length>1){\n    let x=a.splice(a.indexOf(Math.min.apply(null,a)),1)[0];\n    let y=a.splice(a.indexOf(Math.min.apply(null,a)),1)[0];\n    a.push(x+y);\n    ans+=x+y;\n  }\n  \n  console.log(ans);\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03268_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x48c373 = a0_0x3b7f;\nfunction a0_0x4109() {\n    const _0x219598 = [\n        'split',\n        'log',\n        'floor',\n        '/dev/stdin'\n    ];\n    a0_0x4109 = function () {\n        return _0x219598;\n    };\n    return a0_0x4109();\n}\nfunction a0_0x3b7f(nWzvxo, key) {\n    const stringArray = a0_0x4109();\n    a0_0x3b7f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b7f(nWzvxo, key);\n}\nfunction Main(input) {\n    const _0x597148 = a0_0x3b7f;\n    input = input[_0x597148(0x0)]('\\x0a');\n    const line0 = input[0x0]['split']('\\x20');\n    let N = parseInt(line0[0x0]);\n    let K = parseInt(line0[0x1]);\n    if (K % 0x2 === 0x0) {\n        console[_0x597148(0x1)](Math['floor'](N / K) ** 0x3 + Math[_0x597148(0x2)]((N + K / 0x2) / K) ** 0x3);\n    } else {\n        console['log'](Math[_0x597148(0x2)](N / K) ** 0x3);\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x48c373(0x3), 'utf8'));", "test_cases": [["3 2", "9"], ["5 3", "1"], ["31415 9265", "27"], ["35897 932", "114191"]], "original": "\"use strict\";\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  const line0 = input[0].split(\" \");\n  let N = parseInt(line0[0]);\n  let K = parseInt(line0[1]);\n  if (K % 2 === 0) {\n    console.log(Math.floor(N / K) ** 3 + Math.floor((N + K / 2) / K) ** 3);\n  } else {\n    console.log(Math.floor(N / K) ** 3);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03347_1", "type": "JavaScript", "obfuscated": "const a0_0x3f267b = a0_0x2512;\nfunction a0_0x2512(gTMNPl, key) {\n    const stringArray = a0_0x4b04();\n    a0_0x2512 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2512(gTMNPl, key);\n}\nfunction a0_0x4b04() {\n    const _0x17b3fd = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4b04 = function () {\n        return _0x17b3fd;\n    };\n    return a0_0x4b04();\n}\nconsole[a0_0x3f267b(0x0)]((args => {\n    const _0x1794aa = a0_0x2512;\n    const [N, ...A] = args[_0x1794aa(0x1)]()[_0x1794aa(0x2)]('\\x0a')[_0x1794aa(0x3)](v => v | 0x0);\n    if (A[0x0] > 0x0)\n        return '-1';\n    let m = 0x0;\n    for (let i = 0x1; i < N; i++) {\n        if (A[i] > i || A[i] > A[i - 0x1] + 0x1)\n            return '-1';\n        if (A[i] === A[i - 0x1] + 0x1)\n            m++;\n        else if (A[i] <= A[i - 0x1])\n            m += A[i];\n    }\n    return '' + m;\n})(require('fs')[a0_0x3f267b(0x4)](a0_0x3f267b(0x5), a0_0x3f267b(0x6))));", "test_cases": [["4\n0\n1\n1\n2", "3"], ["3\n1\n2\n1", "-1"], ["9\n0\n1\n1\n0\n1\n2\n2\n1\n2", "8"]], "original": "console.log((args=>{\n  const [N,...A] = args.trim().split('\\n').map(v=>v|0);\n  if ( A[0] > 0 ) return '-1';\n  let m = 0;\n  for ( let i = 1; i < N; i++ ) {\n    if ( A[i] > i || A[i] > A[i-1]+1) return '-1'\n    if ( A[i] === A[i-1]+1 ) m++;\n    else if ( A[i] <= A[i-1] ) m += A[i];\n  }\n  return `${m}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03464_1", "type": "JavaScript", "obfuscated": "const a0_0x5ec34b = a0_0x13f5;\nfunction a0_0x13f5(gkisuU, key) {\n    const stringArray = a0_0x472f();\n    a0_0x13f5 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x13f5(gkisuU, key);\n}\nconsole['log']((args => {\n    const _0x12a2c8 = a0_0x13f5;\n    const [[K], A] = args[_0x12a2c8(0x0)]()[_0x12a2c8(0x1)]`\\n`['map'](r => r[_0x12a2c8(0x1)]` `[_0x12a2c8(0x2)](v => v | 0x0));\n    let min = 0x2, max = 0x3;\n    for (let i = K - 0x2; i >= 0x0; i--) {\n        if (max + A[i + 0x1] - 0x1 < A[i])\n            return '-1';\n        min = Math['ceil'](min / A[i]) * A[i];\n        max = Math[_0x12a2c8(0x3)](max / A[i]) * A[i] + A[i] - 0x1;\n    }\n    return min + '\\x20' + max;\n})(require('fs')[a0_0x5ec34b(0x4)]('/dev/stdin', a0_0x5ec34b(0x5))));\nfunction a0_0x472f() {\n    const _0x19be1f = [\n        'trim',\n        'split',\n        'map',\n        'floor',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x472f = function () {\n        return _0x19be1f;\n    };\n    return a0_0x472f();\n}", "test_cases": [["4\n3 4 3 2", "6 8"], ["5\n3 4 100 3 2", "-1"], ["10\n2 2 2 2 2 2 2 2 2 2", "2 3"]], "original": "console.log((args=>{\n  const [[K],A] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let min = 2, max = 3;\n  for ( let i = K-2; i >= 0; i-- ) {\n    if ( max + A[i+1] - 1 < A[i] ) return '-1';\n    min = Math.ceil(min/A[i])*A[i];\n    max = Math.floor(max/A[i])*A[i] + A[i] - 1;\n  }\n  return `${min} ${max}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03617_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x8947e4 = a0_0x186e;\nvar input = require('fs')['readFileSync'](a0_0x8947e4(0x0), a0_0x8947e4(0x1));\nvar cin = input[a0_0x8947e4(0x2)](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction a0_0x575d() {\n    var _0x3a2323 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        'Array(a[',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        'log'\n    ];\n    a0_0x575d = function () {\n        return _0x3a2323;\n    };\n    return a0_0x575d();\n}\nfunction a0_0x186e(qCeSWw, key) {\n    var stringArray = a0_0x575d();\n    a0_0x186e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x186e(qCeSWw, key);\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0xb166be = a0_0x186e;\n    return a ? cin[_0xb166be(0x3)](cid, cid += n) : cin[_0xb166be(0x3)](cid, cid += n)[_0xb166be(0x4)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x1d5791 = a0_0x186e;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x1d5791(0x5)](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin[_0x1d5791(0x3)](cid, cid += w)[_0x1d5791(0x4)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0xa36570 = a0_0x186e;\n    var a = arguments, l = a[_0xa36570(0x6)], r = _0xa36570(0x7) + --l + _0xa36570(0x8) + v + _0xa36570(0x9);\n    while (--l)\n        r = _0xa36570(0x7) + l + ']).fill().map(x=>' + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x8947e4(0xa)](String(myOut));\nfunction main() {\n    var [q, h, s, d] = nexts(0x4);\n    var n = next();\n    if (q * 0x2 < h)\n        h = q * 0x2;\n    if (h * 0x2 < s)\n        s = h * 0x2;\n    if (s * 0x2 < d)\n        d = s * 0x2;\n    return BigInt(n / 0x2 | 0x0) * BigInt(d) + BigInt((n & 0x1) * s);\n}", "test_cases": [["20 30 70 90\n3", "150"], ["10000 1000 100 10\n1", "100"], ["10 100 1000 10000\n1", "40"], ["12345678 87654321 12345678 87654321\n123456789", "1524157763907942"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var [q,h,s,d] = nexts(4);\n  var n = next();\n  if(q*2 < h)h = q*2;\n  if(h*2 < s)s = h*2;\n  if(s*2 < d)d = s*2;\n  return BigInt(n/2|0)*BigInt(d) + BigInt((n&1)*s);\n}", "language": "JavaScript"}
{"filename": "p03637_1", "type": "JavaScript", "obfuscated": "var a0_0x32c494 = a0_0x5c37;\nfunction a0_0x5c37(FFMNxj, key) {\n    var stringArray = a0_0x2d75();\n    a0_0x5c37 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c37(FFMNxj, key);\n}\nfunction Main(input) {\n    var _0x1720ce = a0_0x5c37;\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0]);\n    tmp = input[0x1][_0x1720ce(0x0)]('\\x20');\n    a = new Array(n);\n    var odd = 0x0;\n    var even = 0x0;\n    var four = 0x0;\n    for (i = 0x0; i < n; i++) {\n        if ('WpVwI' === _0x1720ce(0x1)) {\n            even++;\n        } else {\n            a[i] = parseInt(tmp[i]);\n            if (a[i] % 0x4 == 0x0) {\n                four++;\n            } else if (a[i] % 0x2 == 0x0) {\n                even++;\n            } else {\n                if (_0x1720ce(0x2) !== _0x1720ce(0x2)) {\n                    ans = _0x1720ce(0x3);\n                } else {\n                    odd++;\n                }\n            }\n        }\n    }\n    var ans = 'No';\n    if (odd <= four) {\n        ans = _0x1720ce(0x3);\n    } else if (four + 0x1 == odd && even == 0x0) {\n        ans = _0x1720ce(0x3);\n    }\n    console[_0x1720ce(0x4)]('%s', ans);\n}\nfunction a0_0x2d75() {\n    var _0x47ed56 = [\n        'split',\n        'NkXzR',\n        'wxYAW',\n        'Yes',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2d75 = function () {\n        return _0x47ed56;\n    };\n    return a0_0x2d75();\n}\nMain(require('fs')[a0_0x32c494(0x5)](a0_0x32c494(0x6), 'utf8'));", "test_cases": [["3\n1 10 100", "Yes"], ["4\n1 2 3 4", "No"], ["3\n1 4 1", "Yes"], ["2\n1 1", "No"], ["6\n2 7 1 8 2 8", "Yes"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  tmp = input[1].split(\" \");\n  a = new Array(n);\n  var odd=0;\n  var even=0;\n  var four=0;\n  for(i=0;i<n;i++){\n    a[i]=parseInt(tmp[i]);\n    if(a[i]%4==0){\n      four++;\n    }else if(a[i]%2==0){\n      even++;\n    }else{\n      odd++;\n    }\n  }\n  var ans =\"No\";\n  if(odd<=four){\n    ans=\"Yes\";\n  }else if(four+1==odd&&even==0){\n    ans=\"Yes\";\n  }\n\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03778_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3d04e9 = a0_0x5ba4;\nfunction a0_0xf432() {\n    const _0x42616e = [\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf-8'\n    ];\n    a0_0xf432 = function () {\n        return _0x42616e;\n    };\n    return a0_0xf432();\n}\nfunction a0_0x5ba4(FuwRsz, key) {\n    const stringArray = a0_0xf432();\n    a0_0x5ba4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ba4(FuwRsz, key);\n}\nconst main = input => {\n    const _0x3f226a = a0_0x5ba4;\n    input = input[_0x3f226a(0x0)]('\\x20')['map'](v => parseInt(v));\n    const W = input[0x0];\n    const a = input[0x1];\n    const b = input[0x2];\n    const aw = a + W;\n    const bw = b + W;\n    let arr = [];\n    if (a <= b) {\n        arr = [\n            a,\n            aw,\n            b,\n            bw\n        ];\n    } else {\n        arr = [\n            b,\n            bw,\n            a,\n            aw\n        ];\n    }\n    if (arr[0x1] < arr[0x2]) {\n        console['log'](arr[0x2] - arr[0x1]);\n    } else {\n        console[_0x3f226a(0x1)](0x0);\n    }\n};\nmain(require('fs')['readFileSync'](a0_0x3d04e9(0x2), a0_0x3d04e9(0x3)));", "test_cases": [["3 2 6", "1"], ["3 1 3", "0"], ["5 10 1", "4"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split(' ').map(v => parseInt(v))\n    const W = input[0]\n    const a = input[1]\n    const b = input[2]\n    const aw = a + W\n    const bw = b + W\n\n    let arr = []\n    if(a <= b){\n        arr = [a, aw, b, bw]\n    }else{\n        arr = [b, bw, a, aw]\n    }\n    if(arr[1] < arr[2]){\n        console.log(arr[2] - arr[1])\n    }else{\n        console.log(0)\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03815_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x224c() {\n    const _0x8bf76b = [\n        'trim',\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x224c = function () {\n        return _0x8bf76b;\n    };\n    return a0_0x224c();\n}\nconst a0_0x3b78aa = a0_0x4c54;\nfunction a0_0x4c54(Batxmz, key) {\n    const stringArray = a0_0x224c();\n    a0_0x4c54 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c54(Batxmz, key);\n}\nconst main = arg => {\n    const _0x21f6fe = a0_0x4c54;\n    const input = arg[_0x21f6fe(0x0)]()['split']('\\x0a');\n    let x = Number(input[0x0][_0x21f6fe(0x1)]('\\x20')[0x0]);\n    if (x % 0xb > 0x6) {\n        console['log'](Math[_0x21f6fe(0x2)](x / 0xb) * 0x2 + 0x2);\n    } else if (x % 0xb > 0x0) {\n        console[_0x21f6fe(0x3)](Math[_0x21f6fe(0x2)](x / 0xb) * 0x2 + 0x1);\n    } else {\n        console[_0x21f6fe(0x3)](Math[_0x21f6fe(0x2)](x / 0xb) * 0x2);\n    }\n};\nmain(require('fs')[a0_0x3b78aa(0x4)](a0_0x3b78aa(0x5), a0_0x3b78aa(0x6)));", "test_cases": [["7", "2"], ["149696127901", "27217477801"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet x = Number(input[0].split(' ')[0])\n\tif(x % 11 > 6) {\n\t\tconsole.log(Math.floor(x / 11) * 2 + 2)\n\t} else if(x % 11 > 0) {\n\t\tconsole.log(Math.floor(x / 11) * 2 + 1)\n\t} else {\n\t\tconsole.log(Math.floor(x / 11) * 2)\n\t}\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03946_1", "type": "JavaScript", "obfuscated": "function a0_0x14cc() {\n    var _0x3d24fd = [\n        'split',\n        'fill',\n        'pow',\n        'max',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x14cc = function () {\n        return _0x3d24fd;\n    };\n    return a0_0x14cc();\n}\nvar a0_0x4b893e = a0_0x11c2;\nfunction a0_0x11c2(qsTjGA, key) {\n    var stringArray = a0_0x14cc();\n    a0_0x11c2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x11c2(qsTjGA, key);\n}\nfunction Main(input) {\n    var _0xd8e3bd = a0_0x11c2;\n    input = input['split']('\\x0a');\n    tmp = input[0x0][_0xd8e3bd(0x0)]('\\x20');\n    var n = parseInt(tmp[0x0]);\n    a = new Array(n)['fill'](0x0);\n    for (i = 0x0; i < n; i++) {\n        a[i] = parseInt(input[0x1]['split']('\\x20')[i]);\n    }\n    b = new Array(n)[_0xd8e3bd(0x1)](0x0);\n    var min = Math[_0xd8e3bd(0x2)](0xa, 0x9);\n    var max = -0x1;\n    for (i = 0x0; i < n; i++) {\n        min = Math['min'](min, a[i]);\n        if (max < a[i] - min) {\n            ans = 0x1;\n        }\n        if (max == a[i] - min) {\n            ans++;\n        }\n        max = Math[_0xd8e3bd(0x3)](max, a[i] - min);\n    }\n    console[_0xd8e3bd(0x4)]('%s', ans);\n}\nMain(require('fs')[a0_0x4b893e(0x5)](a0_0x4b893e(0x6), 'utf8'));", "test_cases": [["3 2\n100 50 200", "1"], ["5 8\n50 30 40 10 20", "2"], ["10 100\n7 10 4 5 9 3 6 8 2 1", "2"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  tmp = input[0].split(\" \");\n  var n = parseInt(tmp[0]);\n  a = new Array(n).fill(0);\n  for(i=0;i<n;i++){\n    a[i]=parseInt(input[1].split(\" \")[i]);\n  }\n  b = new Array(n).fill(0);\n  var min=Math.pow(10,9);\n  var max=-1;\n  for(i=0;i<n;i++){\n    min=Math.min(min,a[i]);\n    if(max<a[i]-min){\n      ans=1;\n    }\n    if(max==a[i]-min){\n      ans++;\n    }\n    max=Math.max(max,a[i]-min);\n  }\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04015_1", "type": "JavaScript", "obfuscated": "function a0_0x59a2(pFCmrR, key) {\n    var stringArray = a0_0x47b3();\n    a0_0x59a2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59a2(pFCmrR, key);\n}\nvar a0_0x1549d8 = a0_0x59a2;\nfunction main(input) {\n    var _0x1f438a = a0_0x59a2;\n    input = input[_0x1f438a(0x0)]('\\x0a');\n    var tmp = input[0x0][_0x1f438a(0x0)]('\\x20');\n    var N = Number(tmp[0x0]);\n    var A = Number(tmp[0x1]);\n    var x = [0x0];\n    x = x[_0x1f438a(0x1)](input[0x1][_0x1f438a(0x0)]('\\x20')[_0x1f438a(0x2)](Number));\n    var dp = new Array(N + 0x1);\n    for (var i = 0x0; i <= N; ++i) {\n        if (_0x1f438a(0x3) !== 'IjlOD') {\n            dp[i] = new Array(N + 0x1);\n            for (var j = 0x0; j <= N; ++j) {\n                dp[i][j] = new Array(A * N + 0x1)[_0x1f438a(0x4)](0x0);\n            }\n        } else {\n            dp[i][j][k] = dp[i - 0x1][j][k] + dp[i - 0x1][j - 0x1][k - x[i]];\n        }\n    }\n    for (var i = 0x0; i < N; ++i)\n        dp[i][0x0][0x0] = 0x1;\n    for (var i = 0x1; i <= N; ++i) {\n        for (var j = 0x1; j <= i; ++j) {\n            for (var k = 0x1; k <= A * N; ++k) {\n                if (k < x[i]) {\n                    dp[i][j][k] = dp[i - 0x1][j][k];\n                } else {\n                    dp[i][j][k] = dp[i - 0x1][j][k] + dp[i - 0x1][j - 0x1][k - x[i]];\n                }\n            }\n        }\n    }\n    var ans = 0x0;\n    for (var j = 0x1; j <= N; ++j) {\n        if ('MnwNT' === _0x1f438a(0x5)) {\n            dp[i] = new Array(N + 0x1);\n            for (var j = 0x0; j <= N; ++j) {\n                dp[i][j] = new Array(A * N + 0x1)['fill'](0x0);\n            }\n        } else {\n            ans += dp[N][j][j * A];\n        }\n    }\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x1549d8(0x6)](a0_0x1549d8(0x7), a0_0x1549d8(0x8)));\nfunction a0_0x47b3() {\n    var _0x92a334 = [\n        'split',\n        'concat',\n        'map',\n        'mTIwG',\n        'fill',\n        'dFbUe',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x47b3 = function () {\n        return _0x92a334;\n    };\n    return a0_0x47b3();\n}", "test_cases": [["4 8\n7 9 8 9", "5"], ["3 8\n6 6 9", "0"], ["8 5\n3 6 2 8 7 6 5 9", "19"], ["33 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3", "8589934591"]], "original": "function main(input) {\n  input = input.split('\\n');\n  var tmp = input[0].split(' ');\n\n  var N = Number(tmp[0]);\n  var A = Number(tmp[1]);\n\n  var x = [0];\n  x = x.concat(input[1].split(' ').map(Number));\n\n  var dp = new Array(N + 1);\n  for (var i = 0; i <= N; ++i) {\n    dp[i] = new Array(N + 1);\n    for (var j = 0; j <= N; ++j) {\n      dp[i][j] = new Array(A * N + 1).fill(0);\n    }\n  }\n\n  for (var i = 0; i < N; ++i) dp[i][0][0] = 1;\n\n  for (var i = 1; i <= N; ++i) {\n    for (var j = 1; j <= i; ++j) {\n      for (var k = 1; k <= A * N; ++k) {\n        if (k < x[i]) {\n          dp[i][j][k] = dp[i - 1][j][k];\n        } else {\n          dp[i][j][k] = dp[i - 1][j][k] + dp[i - 1][j - 1][k - x[i]];\n        }\n      }\n    }\n  }\n\n  var ans = 0;\n  for (var j = 1; j <= N; ++j) {\n    ans += dp[N][j][j * A];\n  }\n\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p00047_1", "type": "JavaScript", "obfuscated": "var a0_0x196bc8 = a0_0x2ac6;\nvar a = 'A';\nprocess['stdin'][a0_0x196bc8(0x0)]();\nprocess[a0_0x196bc8(0x1)][a0_0x196bc8(0x2)](a0_0x196bc8(0x3));\nprocess['stdin']['on'](a0_0x196bc8(0x4), function (chunk) {\n    var _0x131667 = a0_0x2ac6;\n    input = chunk['trim']()[_0x131667(0x5)](',');\n    if (input[0x0] == a)\n        a = input[0x1];\n    else if (input[0x1] == a)\n        a = input[0x0];\n});\nfunction a0_0x2ac6(vJriIZ, key) {\n    var stringArray = a0_0x5ebc();\n    a0_0x2ac6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ac6(vJriIZ, key);\n}\nprocess['stdin']['on']('end', function () {\n    var _0xb11bca = a0_0x2ac6;\n    console[_0xb11bca(0x6)](a);\n});\nfunction a0_0x5ebc() {\n    var _0x1b3109 = [\n        'resume',\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'data',\n        'split',\n        'log'\n    ];\n    a0_0x5ebc = function () {\n        return _0x1b3109;\n    };\n    return a0_0x5ebc();\n}", "test_cases": [["B,C\nA,C\nC,B\nA,B\nC,B", "A"]], "original": "var a = 'A';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk)\n{\n  input = chunk.trim().split(',');\n  if(input[0] == a)\n    a = input[1];\n  else if(input[1] == a)\n    a = input[0];\n});\nprocess.stdin.on('end', function(){console.log(a);});", "language": "JavaScript"}
{"filename": "p00056_1", "type": "JavaScript", "obfuscated": "function a0_0x37f4(HRCjqv, key) {\n    var stringArray = a0_0x1170();\n    a0_0x37f4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x37f4(HRCjqv, key);\n}\nfunction a0_0x1170() {\n    var _0x121333 = [\n        'log',\n        'indexOf',\n        'push',\n        'resume',\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end',\n        'split'\n    ];\n    a0_0x1170 = function () {\n        return _0x121333;\n    };\n    return a0_0x1170();\n}\nvar a0_0x6ebe59 = a0_0x37f4;\nfunction main() {\n    var _0xe706f6 = a0_0x37f4;\n    var i, j, n, m, x, len = input['length'];\n    for (i = 0x0; i < len; i++) {\n        n = parseInt(input[i], 0xa);\n        if (n === 0x0)\n            break;\n        if (n % 0x2 === 0x1) {\n            console[_0xe706f6(0x0)](0x0);\n            continue;\n        }\n        m = ~~(n / 0x2);\n        for (x = 0x0, j = 0x0; primes[j] <= m; j++) {\n            if (primes[_0xe706f6(0x1)](n - primes[j]) !== -0x1)\n                x++;\n        }\n        console[_0xe706f6(0x0)](x);\n    }\n}\nvar primes = function (n) {\n    var _0x4f8225 = a0_0x37f4;\n    var i, j, flag, primes = [0x2];\n    if (n < 0x2)\n        return [];\n    for (i = 0x3; i <= n; i += 0x2) {\n        flag = !![];\n        for (j = 0x0; primes[j] < i * i; j++) {\n            if (i % primes[j] == 0x0) {\n                flag = ![];\n                break;\n            }\n        }\n        if (flag) {\n            primes[_0x4f8225(0x2)](i);\n        }\n    }\n    return primes;\n}(0xc350);\nvar input = '';\nprocess['stdin'][a0_0x6ebe59(0x3)]();\nprocess[a0_0x6ebe59(0x4)][a0_0x6ebe59(0x5)](a0_0x6ebe59(0x6));\nprocess[a0_0x6ebe59(0x4)]['on'](a0_0x6ebe59(0x7), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x6ebe59(0x4)]['on'](a0_0x6ebe59(0x8), function () {\n    var _0x564d95 = a0_0x37f4;\n    input = input[_0x564d95(0x9)]('\\x0a');\n    main();\n});", "test_cases": [["10\n11\n0", "2\n0"]], "original": "function main() {\n  var\n  i, j, n, m, x,\n  len = input.length;\n  for(i = 0; i < len; i++) {\n    n = parseInt(input[i], 10);\n    if(n === 0) break;\n    if(n % 2 === 1){\n      console.log(0);\n      continue;\n    }\n    m = ~~(n / 2);\n    for(x = 0, j = 0; primes[j] <= m; j++) {\n      if(primes.indexOf(n - primes[j]) !== -1) x++;\n    }\n    console.log(x);\n  }\n}\n\nvar\nprimes = (function(n){\n  var\n  i, j, flag,\n  primes = [2];\n  if(n < 2) return [];\n  for(i = 3;i <= n; i += 2) {\n    flag = true;\n    for(j = 0; primes[j] < i*i; j++) {\n      if(i % primes[j] == 0) {\n        flag = false;\n        break;\n      }\n    }\n    if(flag) {\n      primes.push(i);\n    }\n  }\n  return primes;\n})(50000);\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00086_1", "type": "JavaScript", "obfuscated": "function a0_0x434c() {\n    var _0x48e302 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        '0\\x200',\n        'filter',\n        'length',\n        'log'\n    ];\n    a0_0x434c = function () {\n        return _0x48e302;\n    };\n    return a0_0x434c();\n}\nfunction a0_0x2e51(eeskoU, key) {\n    var stringArray = a0_0x434c();\n    a0_0x2e51 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e51(eeskoU, key);\n}\nvar a0_0x13fe48 = a0_0x2e51;\nvar input = require('fs')['readFileSync'](a0_0x13fe48(0x0), a0_0x13fe48(0x1))['trim']();\nvar lines = input[a0_0x13fe48(0x2)]('\\x0a');\nwhile (lines['length'] > 0x0) {\n    var path = [];\n    var line;\n    while ((line = lines[a0_0x13fe48(0x3)]()) != a0_0x13fe48(0x4)) {\n        var nums = line[a0_0x13fe48(0x2)]('\\x20');\n        var from = +nums[0x0];\n        var to = +nums[0x1];\n        path[from] = (path[from] || 0x0) + 0x1;\n        path[to] = (path[to] || 0x0) + 0x1;\n    }\n    var odds = path[a0_0x13fe48(0x5)](function (n) {\n        return n % 0x2 == 0x1;\n    });\n    if (path[0x1] % 0x2 == 0x1 && path[0x2] % 0x2 == 0x1 && odds[a0_0x13fe48(0x6)] > 0x2)\n        console[a0_0x13fe48(0x7)]('NG');\n    else\n        console['log']('OK');\n}", "test_cases": [["1 3\n3 4\n3 5\n3 6\n4 6\n4 7\n4 7\n5 6\n6 7\n5 8\n5 8\n6 8\n6 9\n7 9\n8 9\n9 2\n0 0\n1 3\n3 4\n3 4\n4 2\n0 0", "OK\nNG"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nwhile (lines.length > 0) {\n    var path = [];\n    var line;\n    while ((line = lines.shift()) != '0 0') {\n        var nums = line.split(' ');\n        var from = +nums[0];\n        var to = +nums[1];\n\n        path[from] = (path[from] || 0) +1;\n        path[to] = (path[to] || 0) +1;\n    }\n    var odds = path.filter(function(n){return n % 2 == 1});\n    if (path[1] % 2 == 1 && path[2] % 2 == 1 && odds.length > 2)\n        console.log('NG');\n    else\n        console.log('OK');\n}", "language": "JavaScript"}
{"filename": "p00102_1", "type": "JavaScript", "obfuscated": "function a0_0x37ff() {\n    var _0x31c23e = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'push',\n        'slice',\n        'log',\n        'join',\n        'reduce'\n    ];\n    a0_0x37ff = function () {\n        return _0x31c23e;\n    };\n    return a0_0x37ff();\n}\nvar a0_0x5a4f85 = a0_0xf482;\nvar input = require('fs')[a0_0x5a4f85(0x0)]('/dev/stdin', a0_0x5a4f85(0x1));\nfunction a0_0xf482(ZcblUq, key) {\n    var stringArray = a0_0x37ff();\n    a0_0xf482 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf482(ZcblUq, key);\n}\nvar Arr = input[a0_0x5a4f85(0x2)]()[a0_0x5a4f85(0x3)]('\\x0a');\nvar data = [];\nvar N;\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i][a0_0x5a4f85(0x3)]('\\x20')[a0_0x5a4f85(0x4)](Number);\n    if (arr[a0_0x5a4f85(0x5)] == 0x1) {\n        if (i == 0x0) {\n            N = arr[0x0];\n            continue;\n        }\n        var DATA = [];\n        for (var j = 0x0; j < N + 0x1; j++) {\n            DATA[a0_0x5a4f85(0x6)](0x0);\n        }\n        for (var k = 0x0; k < N; k++) {\n            var v = data[k];\n            for (var l = 0x0; l < N + 0x1; l++) {\n                DATA[l] += v[l];\n            }\n            v = v['map'](function (val) {\n                var _0x5a9383 = a0_0xf482;\n                return ('\\x20\\x20\\x20\\x20\\x20' + val)[_0x5a9383(0x7)](-0x5);\n            });\n            console[a0_0x5a4f85(0x8)](v[a0_0x5a4f85(0x9)](''));\n        }\n        DATA = DATA[a0_0x5a4f85(0x4)](function (val) {\n            return ('\\x20\\x20\\x20\\x20\\x20' + val)['slice'](-0x5);\n        });\n        console[a0_0x5a4f85(0x8)](DATA[a0_0x5a4f85(0x9)](''));\n        if (arr[0x0] == 0x0)\n            break;\n        data = [];\n        N = arr[0x0];\n    } else {\n        var sum = arr[a0_0x5a4f85(0xa)](function (a, b) {\n            return a + b;\n        });\n        arr['push'](sum);\n        data[a0_0x5a4f85(0x6)](arr);\n    }\n}", "test_cases": [["4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n0", "52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815\n   52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar data=[];\nvar N;\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   if(arr.length==1){\n      if(i==0){N=arr[0];continue;}\n      var DATA=[];\n      for(var j=0;j<N+1;j++){DATA.push(0);}\n      for(var k=0;k<N;k++){\n         var v=data[k];\n         for(var l=0;l<N+1;l++){DATA[l]+=v[l];}\n         v=v.map(function(val){return (\"     \"+val).slice(-5);});\n         console.log(v.join(\"\"));\n      }\n      DATA=DATA.map(function(val){return (\"     \"+val).slice(-5);});\n      console.log(DATA.join(\"\"));\n      if(arr[0]==0)break;\n      data=[];\n      N=arr[0];\n   }else{\n      var sum=arr.reduce(function(a,b){return a+b;});\n      arr.push(sum);\n      data.push(arr);\n   }\n}", "language": "JavaScript"}
{"filename": "p00741_1", "type": "JavaScript", "obfuscated": "var a0_0x288db8 = a0_0x2dd2;\nfunction bomb(y, x) {\n    var dy = [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    for (var i = 0x0; i < 0x8; i++) {\n        var yy = y + dy[i];\n        var xx = x + dx[i];\n        if (yy < 0x0 || yy >= H || xx < 0x0 || xx >= W)\n            continue;\n        if (yx[yy][xx] == 'a') {\n            yx[yy][xx] = cnt;\n            bomb(yy, xx);\n        }\n    }\n}\nvar input = require('fs')['readFileSync'](a0_0x288db8(0x0), a0_0x288db8(0x1));\nvar Arr = input[a0_0x288db8(0x2)]()[a0_0x288db8(0x3)]('\\x0a');\nfunction a0_0x2dd2(quBkKx, key) {\n    var stringArray = a0_0x45a9();\n    a0_0x2dd2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2dd2(quBkKx, key);\n}\nfunction a0_0x45a9() {\n    var _0x438e72 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'push'\n    ];\n    a0_0x45a9 = function () {\n        return _0x438e72;\n    };\n    return a0_0x45a9();\n}\nwhile (!![]) {\n    var WH = Arr['shift']()[a0_0x288db8(0x3)]('\\x20')[a0_0x288db8(0x4)](Number);\n    var W = WH[0x0];\n    var H = WH[0x1];\n    if (W == 0x0 && H == 0x0)\n        break;\n    var yx = [];\n    var Y, X;\n    for (var i = 0x0; i < H; i++) {\n        var str = Arr[a0_0x288db8(0x5)]();\n        str = str['replace'](/1/g, 'a');\n        var arr = str[a0_0x288db8(0x3)]('\\x20');\n        yx[a0_0x288db8(0x6)](arr);\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < H; i++) {\n        for (var j = 0x0; j < W; j++) {\n            if (yx[i][j] == 'a') {\n                cnt++;\n                yx[i][j] = cnt;\n                bomb(i, j);\n            }\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["1 1\n0\n2 2\n0 1\n1 0\n3 2\n1 1 1\n1 1 1\n5 4\n1 0 1 0 0\n1 0 0 0 0\n1 0 1 0 1\n1 0 0 1 0\n5 4\n1 1 1 0 1\n1 0 1 0 1\n1 0 1 0 1\n1 0 1 1 1\n5 5\n1 0 1 0 1\n0 0 0 0 0\n1 0 1 0 1\n0 0 0 0 0\n1 0 1 0 1\n0 0", "0\n1\n1\n3\n1\n9"]], "original": "function bomb(y,x){\n   var dy=[-1,-1,-1,0,0,1,1,1];\n   var dx=[-1,0,1,-1,1,-1,0,1];\n   for(var i=0;i<8;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=H || xx<0 || xx>=W)continue;\n      if(yx[yy][xx]==\"a\"){yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var WH=(Arr.shift()).split(\" \").map(Number);\n   var W=WH[0];\n   var H=WH[1];\n   if(W==0 && H==0)break;\n      var yx=[];\n      var Y,X;\n      for(var i=0;i<H;i++){\n         var str=Arr.shift();\n         str=str.replace(/1/g,\"a\");\n         var arr=str.split(\" \");\n         yx.push(arr);\n      }\n     var cnt=0;\n     for(var i=0;i<H;i++){\n        for(var j=0;j<W;j++){\n           if(yx[i][j]==\"a\"){cnt++;yx[i][j]=cnt;bomb(i,j);}\n        }\n     }\n      console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p02262_1", "type": "JavaScript", "obfuscated": "const a0_0x7b22c7 = a0_0x5927;\nconst config = {\n    'input': a0_0x7b22c7(0x0),\n    'newline': '\\x0a'\n};\nconst line = require('fs')[a0_0x7b22c7(0x1)](config[a0_0x7b22c7(0x2)], a0_0x7b22c7(0x3))[a0_0x7b22c7(0x4)](config['newline']);\nfunction a0_0x9ee3() {\n    const _0x260be7 = [\n        '/dev/stdin',\n        'readFileSync',\n        'input',\n        'utf-8',\n        'split',\n        'length',\n        'filter',\n        'reverse',\n        'log',\n        'join',\n        'jQWXQ',\n        'slice',\n        'map',\n        'toString'\n    ];\n    a0_0x9ee3 = function () {\n        return _0x260be7;\n    };\n    return a0_0x9ee3();\n}\nlet cnt = 0x0;\nconst isort = (arr, g) => {\n    const _0x2749ed = a0_0x5927;\n    for (let i = g; i < arr[_0x2749ed(0x5)]; i++) {\n        let v = arr[i];\n        let j = i - g;\n        while (j >= 0x0 && arr[j] > v) {\n            arr[j + g] = arr[j];\n            j = j - g;\n            cnt++;\n        }\n        arr[j + g] = v;\n    }\n    return arr;\n};\nconst shellSort = arr => {\n    const _0x5aa3e3 = a0_0x5927;\n    const g = arr['map']((_, i) => 0x3 * i + 0x1)[_0x5aa3e3(0x6)](x => x <= arr['length'])[_0x5aa3e3(0x7)]();\n    console[_0x5aa3e3(0x8)](g[_0x5aa3e3(0x5)]);\n    console[_0x5aa3e3(0x8)](g['map'](x => x['toString']())[_0x5aa3e3(0x9)]('\\x20'));\n    for (i = 0x0; i < arr['length']; i++) {\n        if (_0x5aa3e3(0xa) !== 'ZazDY') {\n            arr = isort(arr, g[i]);\n        } else {\n            for (let i = g; i < arr[_0x5aa3e3(0x5)]; i++) {\n                let v = arr[i];\n                let j = i - g;\n                while (j >= 0x0 && arr[j] > v) {\n                    arr[j + g] = arr[j];\n                    j = j - g;\n                    cnt++;\n                }\n                arr[j + g] = v;\n            }\n            return arr;\n        }\n    }\n    return arr;\n};\nconst n = parseInt(line[0x0]);\nconst data = line[a0_0x7b22c7(0xb)](0x1, n + 0x1)['map'](x => parseInt(x));\nconst sorted = shellSort(data);\nfunction a0_0x5927(pPpLBQ, key) {\n    const stringArray = a0_0x9ee3();\n    a0_0x5927 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5927(pPpLBQ, key);\n}\nconsole[a0_0x7b22c7(0x8)](cnt);\nconsole[a0_0x7b22c7(0x8)](sorted[a0_0x7b22c7(0xc)](x => x[a0_0x7b22c7(0xd)]())[a0_0x7b22c7(0x9)]('\\x0a'));", "test_cases": [["5\n5\n1\n4\n3\n2", "2\n4 1\n3\n1\n2\n3\n4\n5"], ["3\n3\n2\n1", "1\n1\n3\n1\n2\n3"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nlet cnt = 0;\n\nconst isort = (arr, g) => {\n    for (let i = g; i < arr.length; i++) {\n        let v = arr[i];\n        let j = i - g;\n        while (j >= 0 && arr[j] > v) {\n            arr[j+g] = arr[j];\n            j = j - g;\n            cnt++;\n        }\n        arr[j+g] = v;\n    }\n\n    return arr;\n};\n\nconst shellSort = (arr) => {\n    const g = arr.map((_, i) => 3 * i + 1).filter(x => x <= arr.length).reverse();\n\n    console.log(g.length);\n    console.log(g.map(x => x.toString()).join(' '));\n\n    for (i = 0; i < arr.length; i++) {\n        arr = isort(arr, g[i]);\n    }\n\n    return arr;\n};\n\nconst n = parseInt(line[0]);\nconst data = line.slice(1, n+1).map(x => parseInt(x));\nconst sorted = shellSort(data);\n\nconsole.log(cnt);\nconsole.log(sorted.map(x => x.toString()).join('\\n'));\n\n", "language": "JavaScript"}
{"filename": "p02317_1", "type": "JavaScript", "obfuscated": "var a0_0x62ee5d = a0_0x2a02;\nfunction a0_0x52f3() {\n    var _0x2b2b0d = [\n        'slice',\n        'map',\n        'UZkgF',\n        'log',\n        'length',\n        'EnPyq',\n        'gqIQt',\n        'input',\n        'RrUvF',\n        'split',\n        'qEzCH',\n        'OztFF',\n        'undefined',\n        'value',\n        '/dev/stdin',\n        'toString'\n    ];\n    a0_0x52f3 = function () {\n        return _0x2b2b0d;\n    };\n    return a0_0x52f3();\n}\nfunction main() {\n    var _0x4cd750 = a0_0x2a02;\n    var input = getInput();\n    var ls = input['split']('\\x0a');\n    var n = parseInt(ls[0x0]);\n    var nums = ls[_0x4cd750(0x0)](0x1, n + 0x1)[_0x4cd750(0x1)](function (s) {\n        var _0x1483d9 = a0_0x2a02;\n        if (_0x1483d9(0x2) !== _0x1483d9(0x2)) {\n            var x = xs[i];\n            table[search(table, x) + 0x1] = x;\n        } else {\n            return parseInt(s);\n        }\n    });\n    console[_0x4cd750(0x3)](lis(nums));\n}\nfunction a0_0x2a02(BmSpCr, key) {\n    var stringArray = a0_0x52f3();\n    a0_0x2a02 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a02(BmSpCr, key);\n}\nfunction lis(xs) {\n    var _0x5344e7 = a0_0x2a02;\n    var table = [xs[0x0]];\n    for (var i = 0x1; i < xs[_0x5344e7(0x4)]; i++) {\n        if (_0x5344e7(0x5) !== _0x5344e7(0x6)) {\n            var x = xs[i];\n            table[search(table, x) + 0x1] = x;\n        } else {\n            return document['getElementById'](_0x5344e7(0x7))['value'];\n        }\n    }\n    return table[_0x5344e7(0x4)];\n}\nfunction search(table, x) {\n    var _0x38d696 = a0_0x2a02;\n    var l = 0x0, h = table['length'];\n    if (table['length'] == 0x0 || x <= table[0x0]) {\n        if ('uZSVo' === _0x38d696(0x8)) {\n            var input = getInput();\n            var ls = input[_0x38d696(0x9)]('\\x0a');\n            var n = parseInt(ls[0x0]);\n            var nums = ls[_0x38d696(0x0)](0x1, n + 0x1)[_0x38d696(0x1)](function (s) {\n                return parseInt(s);\n            });\n            console['log'](lis(nums));\n        } else {\n            return -0x1;\n        }\n    }\n    while (l + 0x1 < h) {\n        var pivot = (l + h + 0x1) / 0x2;\n        if (table[pivot] < x) {\n            if (_0x38d696(0xa) === _0x38d696(0xb)) {\n                l = pivot;\n            } else {\n                l = pivot;\n            }\n        } else {\n            h = pivot;\n        }\n    }\n    return l;\n}\nnodeJS = typeof require != a0_0x62ee5d(0xc);\nfunction getInput() {\n    var _0x19c6e4 = a0_0x2a02;\n    if (!nodeJS) {\n        return document['getElementById'](_0x19c6e4(0x7))[_0x19c6e4(0xd)];\n    }\n    return require('fs')['readFileSync'](_0x19c6e4(0xe))[_0x19c6e4(0xf)]();\n}\nif (nodeJS) {\n    main();\n}", "test_cases": [["5\n5\n1\n3\n2\n4", "3"], ["3\n1\n1\n1", "1"]], "original": "function main() {\n  var input = getInput();\n  var ls = input.split('\\n');\n\n  var n = parseInt(ls[0])\n  var nums = ls.slice(1, n+1).map(function(s) {\n    return parseInt(s);\n  })\n  \n  console.log(lis(nums))\n}\n\nfunction lis(xs) {\n  var table = [xs[0]];\n  for (var i = 1; i < xs.length; i++) {\n    var x = xs[i];\n    table[search(table, x) + 1] = x;\n  }\n  return table.length;\n}\n \n\n/**\n * Returns i s.t. table[i] < x && x <= table[i+1]\n */\nfunction search(table, x) {\n  var l = 0, h = table.length;\n  \n  if (table.length == 0 || x <= table[0]) {\n    return -1;\n  }\n  \n  while (l + 1 < h) {\n    var pivot = (l + h + 1) / 2;\n    if (table[pivot] < x) {\n      l = pivot;\n    } else {\n      h = pivot;\n    }\n  }\n  return l;\n}\n\nnodeJS = typeof require != 'undefined';\n\nfunction getInput() {\n  if (!nodeJS) {\n    return document.getElementById('input').value\n  }\n  return require('fs').readFileSync('/dev/stdin').toString();\n}\n\nif (nodeJS) {\n  main()\n}", "language": "JavaScript"}
{"filename": "p02633_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x507d() {\n    const _0x16b33c = [\n        'replace',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x507d = function () {\n        return _0x16b33c;\n    };\n    return a0_0x507d();\n}\nconst a0_0x57bf39 = a0_0x4f97;\nconst main = arg => {\n    const _0x3477aa = a0_0x4f97;\n    let X = parseInt(arg);\n    let result = 0x168 / X;\n    result = String(result);\n    var answer = result[_0x3477aa(0x0)]('.', '');\n    console['log'](answer);\n};\nfunction a0_0x4f97(qaVsGB, key) {\n    const stringArray = a0_0x507d();\n    a0_0x4f97 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f97(qaVsGB, key);\n}\nmain(require('fs')[a0_0x57bf39(0x1)](a0_0x57bf39(0x2), a0_0x57bf39(0x3)));", "test_cases": [["90", "4"], ["1", "360"]], "original": "\"use strict\";\n\nconst main = (arg) => {\n  let X = parseInt(arg);\n  let result = 360 / X;\n  result = String(result);\n  var answer = result.replace(\".\", \"\");\n  console.log(answer);\n};\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02744_1", "type": "JavaScript", "obfuscated": "var a0_0x442e61 = a0_0x4c36;\nfunction Main(input) {\n    var _0x479c49 = a0_0x4c36;\n    var N = input[0x0] - 0x0;\n    var list = [\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n        'j',\n        'k'\n    ];\n    var ans = {\n        0x0: [],\n        0x1: ['a']\n    };\n    for (var i = 0x2; i <= N; i++) {\n        ans[i] = [];\n        var preAns = ans[i - 0x1];\n        var nowAns = ans[i];\n        preAns[_0x479c49(0x0)](preans => {\n            var _0x45ec67 = a0_0x4c36;\n            var max = 'a';\n            preans[_0x45ec67(0x1)]('')[_0x45ec67(0x0)](v => {\n                max = max < v ? v : max;\n            });\n            var endflg = ![];\n            for (var i = 0x0; i < list[_0x45ec67(0x2)] - 0x1; i++) {\n                nowAns[_0x45ec67(0x3)](preans + list[i]);\n                if (endflg)\n                    break;\n                if (max == list[i])\n                    endflg = !![];\n            }\n        });\n    }\n    console['log'](ans[N][_0x479c49(0x4)]('\\x0a'));\n}\nfunction a0_0x1261() {\n    var _0x1c9591 = [\n        'forEach',\n        'split',\n        'length',\n        'push',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x1261 = function () {\n        return _0x1c9591;\n    };\n    return a0_0x1261();\n}\nfunction a0_0x4c36(Psgyco, key) {\n    var stringArray = a0_0x1261();\n    a0_0x4c36 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c36(Psgyco, key);\n}\nMain(require('fs')[a0_0x442e61(0x5)](a0_0x442e61(0x6), a0_0x442e61(0x7))[a0_0x442e61(0x8)]()[a0_0x442e61(0x1)]('\\x0a'));", "test_cases": [["1", "a"], ["2", "aa\nab"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var N = input[0]-0;\n    var list = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\", \"k\"];\n    var ans = {0:[], 1:[\"a\"]};\n    for(var i=2;i<=N;i++){\n        ans[i] = [];\n        var preAns = ans[i-1];\n        var nowAns = ans[i];\n        preAns.forEach(preans=>{\n            var max = \"a\";\n            preans.split(\"\").forEach(v=>{\n                max = max<v?v:max;\n            });\n            var endflg = false;\n            for(var i=0;i<list.length-1;i++){\n                nowAns.push(preans + list[i]);\n                \n                if(endflg) break;\n                if(max == list[i])endflg=true;\n            }\n        });\n        \n    }\n    console.log(ans[N].join(\"\\n\"));\n}\n\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));\n\n", "language": "JavaScript"}
{"filename": "p02792_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x6341() {\n    const _0x470d40 = [\n        'trim',\n        'split',\n        'push',\n        'fill',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x6341 = function () {\n        return _0x470d40;\n    };\n    return a0_0x6341();\n}\nfunction a0_0x3fb1(aZJZAW, key) {\n    const stringArray = a0_0x6341();\n    a0_0x3fb1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fb1(aZJZAW, key);\n}\nconst a0_0x1af3fe = a0_0x3fb1;\nconst main = arg => {\n    const _0x6909a7 = a0_0x3fb1;\n    arg = arg[_0x6909a7(0x0)]()[_0x6909a7(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const cnt = [];\n    for (let i = 0x0; i < 0xa; i++) {\n        cnt[_0x6909a7(0x2)](new Array(0xa)[_0x6909a7(0x3)](0x0));\n    }\n    for (let i = 0x1; i <= N; i++) {\n        const S = String(i);\n        const head = parseInt(S[0x0]);\n        const tail = parseInt(S[S[_0x6909a7(0x4)] - 0x1]);\n        cnt[head][tail]++;\n    }\n    let answer = 0x0;\n    for (let i = 0x0; i < 0xa; i++) {\n        for (let j = 0x0; j < 0xa; j++) {\n            answer += cnt[i][j] * cnt[j][i];\n        }\n    }\n    console[_0x6909a7(0x5)](answer);\n};\nmain(require('fs')[a0_0x1af3fe(0x6)]('/dev/stdin', a0_0x1af3fe(0x7)));", "test_cases": [["25", "17"], ["1", "1"], ["100", "108"], ["2020", "40812"], ["200000", "400000008"]], "original": "\"use strict\";\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    \n    const cnt = [];\n    \n    for(let i=0; i<10; i++) {\n        cnt.push(new Array(10).fill(0));\n    }\n    \n    for(let i=1; i<=N; i++) {\n        const S = String(i);\n        const head = parseInt(S[0]);\n        const tail = parseInt(S[S.length-1]);\n        \n        cnt[head][tail]++;\n    }\n    \n    // console.log(cnt.join(\"\\n\"));\n    \n    let answer = 0;\n    \n    for(let i=0; i<10; i++) {\n        for(let j=0; j<10; j++) {\n            answer += cnt[i][j] * cnt[j][i];\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02846_1", "type": "JavaScript", "obfuscated": "function a0_0x4625(CYTgks, key) {\n    var stringArray = a0_0x38b9();\n    a0_0x4625 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4625(CYTgks, key);\n}\nvar a0_0x2c894b = a0_0x4625;\nfunction Main(input) {\n    var _0x256cab = a0_0x4625;\n    input = input[_0x256cab(0x0)]('\\x0a');\n    var T = input[0x0][_0x256cab(0x0)]('\\x20');\n    var A = input[0x1]['split']('\\x20');\n    var B = input[0x2]['split']('\\x20');\n    for (var i = 0x0; i < 0x2; i++) {\n        T[i] = Number(T[i]);\n        A[i] = Number(A[i]);\n        B[i] = Number(B[i]);\n    }\n    var sa = new Array(0x2);\n    sa[0x0] = T[0x0] * A[0x0] - T[0x0] * B[0x0];\n    sa[0x1] = T[0x1] * A[0x1] - T[0x1] * B[0x1];\n    var x = 0x0;\n    var xmae = 0x1;\n    var pm = 0x0;\n    var count = -0x1;\n    if (sa[0x0] == sa[0x1] * -0x1) {\n        console[_0x256cab(0x1)](_0x256cab(0x2));\n    } else {\n        if (_0x256cab(0x3) === _0x256cab(0x4)) {\n            console['log'](_0x256cab(0x2));\n        } else {\n            for (var i = 0x0; i < 0x1; i) {\n                count++;\n                xmae = x;\n                x += sa[count % 0x2];\n                if (x * xmae > 0x0) {\n                    i = 0x1;\n                } else if (x == 0x0) {\n                    i = 0x1;\n                    count++;\n                }\n            }\n            console[_0x256cab(0x1)](count - 0x1);\n        }\n    }\n}\nfunction a0_0x38b9() {\n    var _0x265aa7 = [\n        'split',\n        'log',\n        'infinity',\n        'nnNQi',\n        'gQpsB',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x38b9 = function () {\n        return _0x265aa7;\n    };\n    return a0_0x38b9();\n}\nMain(require('fs')['readFileSync'](a0_0x2c894b(0x5), a0_0x2c894b(0x6)));", "test_cases": [["1 2\n10 10\n12 4", "1"], ["100 1\n101 101\n102 1", "infinity"], ["12000 15700\n3390000000 3810000000\n5550000000 2130000000", "113"]], "original": "function Main(input) {\n  input = input.split('\\n');\n  var T = input[0].split(' ');\n  var A = input[1].split(' ');\n  var B = input[2].split(' ');\n  for(var i=0; i<2; i++){\n  T[i] = Number(T[i]);\n  A[i] = Number(A[i]);\n  B[i] = Number(B[i]);\n  }\n  var sa = new Array(2);\n  sa[0] = T[0]*A[0]-T[0]*B[0];\n  sa[1] = T[1]*A[1]-T[1]*B[1];\n  var x = 0;\n  var xmae = 1;\n  var pm = 0;\n  var count = -1;\n  if(sa[0] == sa[1]*-1){\n     console.log('infinity');\n  }else{\n     for(var i=0; i<1; i){\n       count++;\n       xmae = x;\n       x += sa[count%2];\n       if(x*xmae > 0){\n          i = 1;\n          }else if(x == 0){\n                   i = 1;\n            count++;\n                   }\n     }\n    console.log(count-1);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03091_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3a179e = a0_0x2dbc;\nfunction a0_0x59bd() {\n    const _0x1b103f = [\n        'prototype',\n        'trim',\n        'split',\n        'length',\n        'exports',\n        'push',\n        'aaNtf',\n        'log',\n        'Yes',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x59bd = function () {\n        return _0x1b103f;\n    };\n    return a0_0x59bd();\n}\nfunction I(s, f) {\n    this['_s'] = s['split']('\\x0a');\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = f || Number;\n}\nI[a0_0x3a179e(0x0)]['a'] = function () {\n    const _0x4f664f = a0_0x2dbc;\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    var t = l[_0x4f664f(0x1)]()[_0x4f664f(0x2)]('\\x20');\n    var a = t[this['_c']];\n    this['_c']++;\n    if (t[_0x4f664f(0x3)] === this['_c']) {\n        this['_c'] = 0x0;\n        this['_l']++;\n    }\n    return this['_f'](a);\n};\nfunction a0_0x2dbc(kHToil, key) {\n    const stringArray = a0_0x59bd();\n    a0_0x2dbc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2dbc(kHToil, key);\n}\nI['prototype']['l'] = function () {\n    const _0x127b6f = a0_0x2dbc;\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    this['_c'] = 0x0;\n    this['_l']++;\n    return l[_0x127b6f(0x2)]('\\x20')['map'](this['_f']);\n};\nmodule[a0_0x3a179e(0x4)] = I;\nfunction main(input) {\n    const _0x225d6d = a0_0x2dbc;\n    const o = new I(input);\n    const N = o['a']();\n    const M = o['a']();\n    const adj = [];\n    for (let i = 0x1; i <= N; i++) {\n        adj[i] = [];\n    }\n    for (let i = 0x0; i < M; i++) {\n        let ai = o['a']();\n        let bi = o['a']();\n        adj[ai][_0x225d6d(0x5)](bi);\n        adj[bi][_0x225d6d(0x5)](ai);\n    }\n    let flag1 = ![];\n    let flag2 = !![];\n    for (let i = 0x1; i <= N; i++) {\n        if (_0x225d6d(0x6) === 'aaNtf') {\n            if (adj[i][_0x225d6d(0x3)] === 0x6) {\n                flag1 = !![];\n            }\n            if (adj[i][_0x225d6d(0x3)] % 0x2 !== 0x0) {\n                flag2 = ![];\n            }\n        } else {\n            if (adj[i][_0x225d6d(0x3)] === 0x6) {\n                flag1 = !![];\n            }\n            if (adj[i][_0x225d6d(0x3)] % 0x2 !== 0x0) {\n                flag2 = ![];\n            }\n        }\n    }\n    console[_0x225d6d(0x7)](flag1 && flag2 ? _0x225d6d(0x8) : 'No');\n}\nmain(require('fs')[a0_0x3a179e(0x9)]('/dev/stdin', a0_0x3a179e(0xa)));", "test_cases": [["7 9\n1 2\n1 3\n2 3\n1 4\n1 5\n4 5\n1 6\n1 7\n6 7", "Yes"], ["3 3\n1 2\n2 3\n3 1", "No"], ["18 27\n17 7\n12 15\n18 17\n13 18\n13 6\n5 7\n7 1\n14 5\n15 11\n7 6\n1 9\n5 4\n18 16\n4 6\n7 2\n7 11\n6 3\n12 14\n5 2\n10 5\n7 8\n10 15\n3 15\n9 8\n7 15\n5 16\n18 15", "Yes"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s.split(\"\\n\");this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s[this._l];if(!l)return;this._c=0;this._l++;return l.split(\" \").map(this._f)};module.exports=I;\n\nfunction main(input) {\n  const o = new I(input);\n\n  const N = o.a();\n  const M = o.a();\n\n  const adj = [];\n  for (let i = 1; i <= N; i++) {\n    adj[i] = [];\n  }\n\n  for (let i = 0; i < M; i++) {\n    let ai = o.a();\n    let bi = o.a();\n    adj[ai].push(bi);\n    adj[bi].push(ai);\n  }\n\n  let flag1 = false;\n  let flag2 = true;\n  for (let i = 1; i <= N; i++) {\n    if (adj[i].length === 6) {\n      flag1 = true;\n    }\n\n    if (adj[i].length % 2 !== 0) {\n      flag2 = false;\n    }\n  }\n\n  console.log((flag1 && flag2) ? \"Yes\" : \"No\");\n\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03165_1", "type": "JavaScript", "obfuscated": "var a0_0x5dbc66 = a0_0x1af0;\nfunction a0_0x1af0(UZMSlw, key) {\n    var stringArray = a0_0x1de1();\n    a0_0x1af0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1af0(UZMSlw, key);\n}\nfunction main(input) {\n    var _0x57bc2b = a0_0x1af0;\n    const lines = input[_0x57bc2b(0x0)]('\\x0a');\n    const S = lines[_0x57bc2b(0x1)]()['split']('');\n    const T = lines[_0x57bc2b(0x1)]()[_0x57bc2b(0x0)]('');\n    dp = [];\n    for (var i = 0x0; i <= S[_0x57bc2b(0x2)]; i++) {\n        dp[_0x57bc2b(0x3)](Array(T[_0x57bc2b(0x2)] + 0x1)[_0x57bc2b(0x4)](0x0));\n    }\n    for (var i = 0x1; i <= S['length']; i++) {\n        for (var j = 0x1; j <= T['length']; j++) {\n            if (_0x57bc2b(0x5) !== _0x57bc2b(0x5)) {\n                dp[_0x57bc2b(0x3)](Array(T[_0x57bc2b(0x2)] + 0x1)[_0x57bc2b(0x4)](0x0));\n            } else {\n                if (S[i - 0x1] == T[j - 0x1]) {\n                    dp[i][j] = Math[_0x57bc2b(0x6)](dp[i][j], dp[i - 0x1][j - 0x1] + 0x1);\n                } else {\n                    dp[i][j] = Math[_0x57bc2b(0x6)](dp[i - 0x1][j], dp[i][j - 0x1]);\n                }\n            }\n        }\n    }\n    var i = S[_0x57bc2b(0x2)];\n    var j = T['length'];\n    var result = [];\n    while (i != 0x0 && j != 0x0) {\n        if ('KLSaM' !== _0x57bc2b(0x7)) {\n            if (S[i - 0x1] == T[j - 0x1]) {\n                result['unshift'](S[i - 0x1]);\n                i--;\n                j--;\n            } else {\n                if (_0x57bc2b(0x8) === _0x57bc2b(0x8)) {\n                    if (dp[i - 0x1][j] < dp[i][j - 0x1]) {\n                        if (_0x57bc2b(0x9) === 'TZrnH') {\n                            j--;\n                        } else {\n                            for (var j = 0x1; j <= T[_0x57bc2b(0x2)]; j++) {\n                                if (S[i - 0x1] == T[j - 0x1]) {\n                                    dp[i][j] = Math['max'](dp[i][j], dp[i - 0x1][j - 0x1] + 0x1);\n                                } else {\n                                    dp[i][j] = Math['max'](dp[i - 0x1][j], dp[i][j - 0x1]);\n                                }\n                            }\n                        }\n                    } else {\n                        if (_0x57bc2b(0xa) !== _0x57bc2b(0xb)) {\n                            i--;\n                        } else {\n                            j--;\n                        }\n                    }\n                } else {\n                    i--;\n                }\n            }\n        } else {\n            if (S[i - 0x1] == T[j - 0x1]) {\n                dp[i][j] = Math[_0x57bc2b(0x6)](dp[i][j], dp[i - 0x1][j - 0x1] + 0x1);\n            } else {\n                dp[i][j] = Math[_0x57bc2b(0x6)](dp[i - 0x1][j], dp[i][j - 0x1]);\n            }\n        }\n    }\n    console[_0x57bc2b(0xc)](result[_0x57bc2b(0xd)](''));\n}\nfunction a0_0x1de1() {\n    var _0x4536e5 = [\n        'split',\n        'shift',\n        'length',\n        'push',\n        'fill',\n        'wsITZ',\n        'max',\n        'PuIRQ',\n        'ecrvO',\n        'TZrnH',\n        'tnNYy',\n        'eRjOG',\n        'log',\n        'join',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1de1 = function () {\n        return _0x4536e5;\n    };\n    return a0_0x1de1();\n}\nmain(require('fs')['readFileSync'](a0_0x5dbc66(0xe), a0_0x5dbc66(0xf)));", "test_cases": [["axyb\nabyxb", "axb"], ["aa\nxayaz", "aa"], ["a\nz", ""], ["abracadabra\navadakedavra", "aaadara"]], "original": "function main(input){\n  const lines = input.split('\\n');\n  const S = lines.shift().split('');\n  const T = lines.shift().split('');\n\n//  console.log(S);\n//  console.log(T);\n\n  dp = []\n  for(var i=0;i<=S.length;i++){\n    dp.push( Array(T.length+1).fill(0) );\n  }\n\n  for(var i=1;i<=S.length;i++){\n    for(var j=1;j<=T.length;j++){\n      if(S[i-1]==T[j-1]){\n        dp[i][j]=Math.max(dp[i][j], dp[i-1][j-1]+1);\n      }else{\n        dp[i][j]=Math.max(dp[i-1][j], dp[i][j-1]);\n      }\n    }\n  }\n\n  var i = S.length;\n  var j = T.length;\n  var result = [];\n  while(i!=0 &&  j!=0){\n//  console.log([i,j]);\n//  console.log([S[i-1],T[j-1]]);\n    if(S[i-1]==T[j-1]){\n      result.unshift(S[i-1]);\n      i--;\n      j--;\n    }else{\n      if(dp[i-1][j] < dp[i][j-1]){\n        j--;\n      }else{\n        i--;\n      }\n    }\n  }\n\n//  console.log(dp);\n  console.log(result.join(''));\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03170_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x32c7a0 = a0_0xa750;\nfunction a0_0x485b() {\n    const _0x475b5e = [\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'fill',\n        'tbd',\n        'log',\n        'First',\n        'Second',\n        'utf8'\n    ];\n    a0_0x485b = function () {\n        return _0x475b5e;\n    };\n    return a0_0x485b();\n}\nfunction a0_0xa750(SbvHir, key) {\n    const stringArray = a0_0x485b();\n    a0_0xa750 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xa750(SbvHir, key);\n}\n(function (input) {\n    const _0x5ed3e6 = a0_0xa750;\n    input = input[_0x5ed3e6(0x0)]()[_0x5ed3e6(0x1)](/\\s+/)[_0x5ed3e6(0x2)](x => x - 0x0);\n    const N = input[_0x5ed3e6(0x3)]();\n    const K = input['shift']();\n    const A = input;\n    const dp = new Array(K + 0x2)[_0x5ed3e6(0x4)]('tbd');\n    dp[K + 0x1] = !![];\n    for (let i = K + 0x1; i >= 0x0; i--) {\n        if (dp[i])\n            if (dp[i - 0x1] === !![]) {\n                i--;\n                continue;\n            }\n        for (let j = 0x1; j <= A[0x0]; j++)\n            if (i - j >= 0x0)\n                if (dp[i - j] === _0x5ed3e6(0x5))\n                    dp[i - j] = ![];\n        if (!dp[i])\n            for (let a = 0x0; a < N; a++)\n                if (i - A[a] >= 0x0)\n                    dp[i - A[a]] = !![];\n    }\n    if (dp[0x0])\n        console[_0x5ed3e6(0x6)](_0x5ed3e6(0x7));\n    else\n        console[_0x5ed3e6(0x6)](_0x5ed3e6(0x8));\n}(require('fs')['readFileSync']('/dev/stdin', a0_0x32c7a0(0x9))));", "test_cases": [["2 4\n2 3", "First"], ["2 5\n2 3", "Second"], ["2 7\n2 3", "First"], ["3 20\n1 2 3", "Second"], ["3 21\n1 2 3", "First"], ["1 100000\n1", "Second"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const N=input.shift();\n  const K=input.shift();\n  const A=input;\n  const dp=new Array(K+2).fill('tbd');\n  \n  dp[K+1]=true;\n  for(let i=K+1;i>=0;i--){\n    if(dp[i])\n      if(dp[i-1]===true){\n        i--;\n        continue;\n      }\n      for(let j=1;j<=A[0];j++)\n        if(i-j>=0)\n          if(dp[i-j]==='tbd')\n            dp[i-j]=false;\n    if(!dp[i])\n      for(let a=0;a<N;a++)\n        if(i-A[a]>=0)\n          dp[i-A[a]]=true;\n  }\n  \n  if(dp[0])console.log('First');\n  else console.log('Second');\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03197_1", "type": "JavaScript", "obfuscated": "var a0_0x45dbe5 = a0_0x1741;\nfunction Main(input) {\n    var _0x213a83 = a0_0x1741;\n    input = input[_0x213a83(0x0)]('\\x0a')[_0x213a83(0x1)](Number);\n    input[_0x213a83(0x2)]();\n    var n = arrsum(input);\n    if (n == input[_0x213a83(0x3)]) {\n        n = 0x1;\n    }\n    if (n % 0x2 == 0x1) {\n        console['log'](_0x213a83(0x4));\n    } else {\n        if (_0x213a83(0x5) !== 'TbHYg') {\n            console[_0x213a83(0x6)](_0x213a83(0x7));\n        } else {\n            n = 0x1;\n        }\n    }\n}\nfunction a0_0x1741(hqibQM, key) {\n    var stringArray = a0_0x47a2();\n    a0_0x1741 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1741(hqibQM, key);\n}\nMain(require('fs')[a0_0x45dbe5(0x8)](a0_0x45dbe5(0x9), a0_0x45dbe5(0xa))[a0_0x45dbe5(0xb)]());\nfunction arrsum(arr) {\n    var sum = 0x0;\n    for (var i = 0x0, len = arr['length']; i < len; ++i) {\n        sum += arr[i];\n    }\n    ;\n    return sum;\n}\nfunction a0_0x47a2() {\n    var _0x1beb41 = [\n        'split',\n        'map',\n        'shift',\n        'length',\n        'first',\n        'yyirb',\n        'log',\n        'second',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x47a2 = function () {\n        return _0x1beb41;\n    };\n    return a0_0x47a2();\n}", "test_cases": [["2\n1\n2", "first"], ["3\n100000\n30000\n20000", "second"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\").map(Number);\n  input.shift();\n  var n = arrsum(input);\n  if(n==input.length){\n  n = 1;\n  }\n  if(n%2==1){\n  console.log(\"first\");\n  }else{\n  console.log(\"second\");\n  }\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\nfunction arrsum(arr){\n    var sum = 0;\n    for (var i=0,len=arr.length; i<len; ++i) {\n        sum += arr[i];\n    };\n    return sum;\n}\n", "language": "JavaScript"}
{"filename": "p03228_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x2159cc = a0_0x1c6d;\nfunction a0_0x1c6d(ABiIHO, key) {\n    const stringArray = a0_0x3033();\n    a0_0x1c6d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c6d(ABiIHO, key);\n}\nfunction Main(input) {\n    const _0x11aac5 = a0_0x1c6d;\n    const tmp = input[_0x11aac5(0x0)]('\\x20');\n    let A = parseInt(tmp[0x0], 0xa);\n    let B = parseInt(tmp[0x1], 0xa);\n    const K = tmp[0x2];\n    for (let i = 0x0; i < K; i++) {\n        if (i % 0x2 == 0x0) {\n            if (A % 0x2 == 0x1) {\n                A--;\n            }\n            B += A / 0x2;\n            A /= 0x2;\n        } else {\n            if (B % 0x2 == 0x1) {\n                B--;\n            }\n            A += B / 0x2;\n            B /= 0x2;\n        }\n    }\n    console[_0x11aac5(0x1)](A, B);\n}\nMain(require('fs')[a0_0x2159cc(0x2)](a0_0x2159cc(0x3), a0_0x2159cc(0x4)));\nfunction a0_0x3033() {\n    const _0x46f5ea = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3033 = function () {\n        return _0x46f5ea;\n    };\n    return a0_0x3033();\n}", "test_cases": [["5 4 2", "5 3"], ["3 3 3", "1 3"], ["314159265 358979323 84", "448759046 224379523"]], "original": "'use strict';\n\nfunction Main(input) {\n    const tmp = input.split(' ');\n    let A = parseInt(tmp[0], 10);\n    let B = parseInt(tmp[1], 10);\n    const K = tmp[2];\n\n    for (let i = 0; i < K; i++) {\n        if (i % 2 == 0) {\n            if (A % 2 == 1) {\n                A--;\n            }\n            B += A / 2;\n            A /= 2;\n        } else {\n            if (B % 2 == 1) {\n                B--;\n            }\n            A += B / 2;\n            B /= 2;\n        }\n    }\n    console.log(A, B);\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03318_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1abd() {\n    const _0xf001f1 = [\n        'split',\n        '199',\n        'length',\n        'push',\n        'join',\n        'log',\n        'utf8'\n    ];\n    a0_0x1abd = function () {\n        return _0xf001f1;\n    };\n    return a0_0x1abd();\n}\nconst a0_0x1907ca = a0_0x38a9;\nfunction a0_0x38a9(nTtcUc, key) {\n    const stringArray = a0_0x1abd();\n    a0_0x38a9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x38a9(nTtcUc, key);\n}\nfunction main(s) {\n    const _0x40b069 = a0_0x38a9;\n    const K = Number(s[_0x40b069(0x0)]('\\x0a')[0x0]);\n    const list = [\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '19',\n        '29',\n        '39',\n        '49',\n        '59',\n        '69',\n        '79',\n        '89',\n        '99',\n        _0x40b069(0x1)\n    ];\n    const head = [\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n        '13',\n        '14',\n        '15',\n        '16',\n        '17',\n        '18',\n        '19'\n    ];\n    let rest = '99';\n    for (let i = 0x0; i <= 0x14; i++) {\n        for (let j = 0x0; j < head[_0x40b069(0x2)]; j++) {\n            list[_0x40b069(0x3)](head[j] + rest);\n        }\n        rest += '9';\n    }\n    const ans = list['slice'](0x0, K)[_0x40b069(0x4)]('\\x0a');\n    console[_0x40b069(0x5)](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x1907ca(0x6)));", "test_cases": [["10", "1\n2\n3\n4\n5\n6\n7\n8\n9\n19"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const K = Number(s.split('\\n')[0]);\n\n  const list = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '19', '29', '39', '49', '59', '69', '79', '89', '99', '199'];\n\n  const head = ['2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'];\n\n  let rest = '99';\n\n  for (let i = 0; i <= 20; i++) {\n    for (let j = 0; j < head.length; j++) {\n      list.push(head[j] + rest);\n    }\n    rest += '9';\n  }\n\n  const ans = list.slice(0, K).join('\\n');\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03354_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x25aa32 = a0_0x99fb;\nfunction a0_0x5091() {\n    var _0x4fb599 = [\n        'map',\n        'shift',\n        'splice',\n        'merge',\n        'top',\n        'log',\n        'value',\n        'parent',\n        'prototype',\n        'adopt',\n        'weight',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5091 = function () {\n        return _0x4fb599;\n    };\n    return a0_0x5091();\n}\nfunction Main(input) {\n    var _0x322f0c = a0_0x99fb;\n    input = input['trim']()['split'](/\\s+/)[_0x322f0c(0x0)](x => x - 0x0);\n    var N = input[_0x322f0c(0x1)](), M = input['shift']();\n    var p = input[_0x322f0c(0x2)](0x0, N);\n    var nodes = [];\n    for (let k = 0x0; k < N; k++)\n        nodes[k] = new Node(k);\n    for (let k = 0x0; k < M; k++)\n        nodes[input[0x2 * k] - 0x1][_0x322f0c(0x3)](nodes[input[0x2 * k + 0x1] - 0x1]);\n    var counter = 0x0;\n    for (let k = 0x0; k < N; k++)\n        if (nodes[k][_0x322f0c(0x4)]() === nodes[p[k] - 0x1][_0x322f0c(0x4)]())\n            counter++;\n    console[_0x322f0c(0x5)](counter);\n}\nfunction Node(v) {\n    var _0x55329a = a0_0x99fb;\n    var t = this;\n    t[_0x55329a(0x6)] = v;\n    t[_0x55329a(0x7)] = null;\n    t['weight'] = 0x1;\n}\nNode[a0_0x25aa32(0x8)][a0_0x25aa32(0x4)] = function () {\n    var _0x455603 = a0_0x99fb;\n    var t = this;\n    var p = t[_0x455603(0x7)];\n    if (!p)\n        return t;\n    else\n        return p[_0x455603(0x4)]();\n};\nNode[a0_0x25aa32(0x8)][a0_0x25aa32(0x9)] = function (progeny) {\n    var _0x57009b = a0_0x99fb;\n    var t = this[_0x57009b(0x4)]();\n    var c = progeny['top']();\n    c['parent'] = t;\n    t[_0x57009b(0xa)] += c[_0x57009b(0xa)];\n};\nfunction a0_0x99fb(ztapWl, key) {\n    var stringArray = a0_0x5091();\n    a0_0x99fb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x99fb(ztapWl, key);\n}\nNode['prototype'][a0_0x25aa32(0x3)] = function (b) {\n    var _0x216513 = a0_0x99fb;\n    var a = this[_0x216513(0x4)]();\n    b = b['top']();\n    if (a === b)\n        return;\n    if (a['weight'] < b['weight'])\n        b[_0x216513(0x9)](a);\n    else\n        a[_0x216513(0x9)](b);\n};\nMain(require('fs')[a0_0x25aa32(0xb)](a0_0x25aa32(0xc), a0_0x25aa32(0xd)));", "test_cases": [["5 2\n5 3 1 4 2\n1 3\n5 4", "2"], ["3 2\n3 2 1\n1 2\n2 3", "3"], ["10 8\n5 3 6 8 7 10 9 1 2 4\n3 1\n4 1\n5 9\n2 5\n6 5\n3 5\n8 9\n7 9", "8"], ["5 1\n1 2 3 4 5\n1 5", "5"]], "original": "'use strict'\nfunction Main(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  var N=input.shift(), M=input.shift();\n  var p=input.splice(0,N);\n  var nodes=[];\n  for(let k=0;k<N;k++)\n    nodes[k]=new Node(k);\n  for(let k=0;k<M;k++)\n    nodes[input[2*k]-1].merge(nodes[input[2*k+1]-1]);\n  var counter=0;\n  for(let k=0;k<N;k++)\n    if(nodes[k].top()===nodes[p[k]-1].top())\n      counter++;\n  console.log(counter);\n}\n\nfunction Node(v){\n  var t=this;\n  t.value=v;\n  t.parent=null;\n  t.weight=1;\n}\n\nNode.prototype.top=function(){\n  var t=this;\n  var p=t.parent;\n  if(!p)return t;\n  else return p.top();  \n}\n\nNode.prototype.adopt=function(progeny){\n  var t=this.top();\n  var c=progeny.top();\n  c.parent=t;\n  t.weight+=c.weight;\n}\n\nNode.prototype.merge=function(b){\n  var a=this.top();\n  b=b.top();\n  if(a===b)return;\n  if(a.weight<b.weight)b.adopt(a);\n  else a.adopt(b);\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03355_1", "type": "JavaScript", "obfuscated": "var a0_0x3f22fc = a0_0xb8e5;\nvar toInt = x => parseInt(x, 0xa);\nfunction a0_0xb8e5(YvHsLd, key) {\n    var stringArray = a0_0xbebf();\n    a0_0xb8e5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xb8e5(YvHsLd, key);\n}\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var _0x2dcef1 = a0_0xb8e5;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x2dcef1(0x0)]; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var _0x48f836 = a0_0xb8e5;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x48f836(0x0)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')[a0_0x3f22fc(0x1)](a0_0x3f22fc(0x2), a0_0x3f22fc(0x3)));\nfunction a0_0xbebf() {\n    var _0x2799d1 = [\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'indexOf',\n        'sort',\n        'log'\n    ];\n    a0_0xbebf = function () {\n        return _0x2799d1;\n    };\n    return a0_0xbebf();\n}\nfunction Main(input) {\n    var _0x5ad9db = a0_0xb8e5;\n    var input = input[_0x5ad9db(0x4)]('\\x0a');\n    var s = input[0x0];\n    var k = toInt(input[0x1]);\n    var l = s[_0x5ad9db(0x0)];\n    var arr = [];\n    var x;\n    for (var i = 0x0; i < l; i++) {\n        for (var j = i; j < i + 0x5; j++) {\n            x = s[_0x5ad9db(0x5)](i, j + 0x1);\n            if (arr[_0x5ad9db(0x6)](x) === -0x1)\n                arr['push'](x);\n        }\n    }\n    arr[_0x5ad9db(0x7)]((a, b) => a < b ? -0x1 : 0x1);\n    ans = arr[k - 0x1];\n    console[_0x5ad9db(0x8)](ans);\n}", "test_cases": [["aba\n4", "b"], ["atcoderandatcodeer\n5", "andat"], ["z\n1", "z"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\t//input = input.map(e => toIntArr(e.split(' ')));\n\tvar s = input[0];\n\tvar k = toInt(input[1]);\n\tvar l = s.length;\n\tvar arr = [];\n\tvar x;\n \n\tfor(var i = 0; i < l; i++){\n\t\tfor(var j = i ; j < i+5; j++){\n\t\t\tx = s.slice(i,j+1);\n\t\t\tif(arr.indexOf(x)===-1) arr.push(x);\n\t\t}\n\t}\n \n\tarr.sort((a,b)=>a<b? -1: 1);\n\tans = arr[k-1];\n \n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03419_1", "type": "JavaScript", "obfuscated": "function a0_0x4add() {\n    const _0x21a405 = [\n        'trim',\n        'split',\n        'map',\n        'abs',\n        '/dev/stdin'\n    ];\n    a0_0x4add = function () {\n        return _0x21a405;\n    };\n    return a0_0x4add();\n}\nconst a0_0x4e80a2 = a0_0x30de;\nfunction a0_0x30de(IrNQPI, key) {\n    const stringArray = a0_0x4add();\n    a0_0x30de = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x30de(IrNQPI, key);\n}\nconsole['log']((args => {\n    const _0x2a8ccc = a0_0x30de;\n    const [N, M] = args[_0x2a8ccc(0x0)]()[_0x2a8ccc(0x1)]('\\x20')[_0x2a8ccc(0x2)](v => v - 0x2);\n    return '' + Math[_0x2a8ccc(0x3)](N * M);\n})(require('fs')['readFileSync'](a0_0x4e80a2(0x4), 'utf8')));", "test_cases": [["2 2", "0"], ["1 7", "5"], ["314 1592", "496080"]], "original": "console.log((args=>{\n  const [N,M] = args.trim().split(' ').map(v=>v-2);\n  return `${Math.abs(N*M)}`\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03437_1", "type": "JavaScript", "obfuscated": "var a0_0x39ca82 = a0_0x56c7;\nfunction Main(input) {\n    var _0x38da7b = a0_0x56c7;\n    input = input[_0x38da7b(0x0)]('\\x20');\n    ans = input[0x0] / input[0x1];\n    num = 0x0;\n    var a = Number[_0x38da7b(0x1)](ans);\n    if (a === !![]) {\n        ans = -0x1;\n    } else {\n        while (!![]) {\n            num++;\n            cal = input[0x0] * num / input[0x1];\n            var b = Number['isInteger'](cal);\n            if (b === !![]) {\n                ans = input[0x0] * (num - 0x1);\n                break;\n            }\n            if (input[0x0] > Math['pow'](0xa, 0x9) | input[0x1] > Math[_0x38da7b(0x2)](0xa, 0x9) | input[0x0] * (num - 0x1) > Math[_0x38da7b(0x2)](0xa, 0x12)) {\n                ans = -0x1;\n                break;\n            }\n        }\n    }\n    console['log'](ans);\n}\nfunction a0_0x56c7(RKoElx, key) {\n    var stringArray = a0_0xa0e0();\n    a0_0x56c7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x56c7(RKoElx, key);\n}\nfunction a0_0xa0e0() {\n    var _0x5ce9dc = [\n        'split',\n        'isInteger',\n        'pow',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xa0e0 = function () {\n        return _0x5ce9dc;\n    };\n    return a0_0xa0e0();\n}\nMain(require('fs')[a0_0x39ca82(0x3)](a0_0x39ca82(0x4), a0_0x39ca82(0x5)));", "test_cases": [["8 6", "16"], ["3 3", "-1"]], "original": "function Main(input) {\n\tinput = input.split(\" \");\n\tans = (input[0]/input[1]);\n  num =0;\nvar a = Number.isInteger(ans);\nif(a===true){ans=-1;}else{\nwhile(true){\nnum++;\ncal = ((input[0]*num)/input[1])\nvar b = Number.isInteger(cal)\n  if(b===true){ans=(input[0]*(num-1));break;}\n  if(input[0]>Math.pow(10,9)|input[1]>Math.pow(10,9)|(input[0]*(num-1))>Math.pow(10,18)){\n  ans=-1;break;\n  }\n}\n}\n  console.log(ans)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03544_1", "type": "JavaScript", "obfuscated": "function a0_0x35a6() {\n    var _0x2f3d8e = [\n        'split',\n        'ayLoC',\n        'log',\n        '12360848946698171',\n        'hreZg',\n        '20000273725560978',\n        'bqPVu',\n        '32361122672259149',\n        '52361396397820127',\n        '84722519070079276',\n        'jGcVv',\n        '137083915467899403',\n        '221806434537978679',\n        '358890350005878082',\n        '580696784543856761',\n        '939587134549734843',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x35a6 = function () {\n        return _0x2f3d8e;\n    };\n    return a0_0x35a6();\n}\nvar a0_0x45a70d = a0_0x15b4;\nfunction a0_0x15b4(FEfmqE, key) {\n    var stringArray = a0_0x35a6();\n    a0_0x15b4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15b4(FEfmqE, key);\n}\nfunction main(s) {\n    var _0x4bc122 = a0_0x15b4;\n    var n = Number(s[_0x4bc122(0x0)]('\\x0a')[0x0]);\n    if (n === 0x0) {\n        if (_0x4bc122(0x1) === 'ayLoC') {\n            console['log'](0x2);\n            return;\n        } else {\n            console[_0x4bc122(0x2)](_0x4bc122(0x3));\n            return;\n        }\n    }\n    if (n === 0x1) {\n        console[_0x4bc122(0x2)](0x1);\n        return;\n    }\n    if (n === 0x4d) {\n        if ('hreZg' !== _0x4bc122(0x4)) {\n            console[_0x4bc122(0x2)](0x2);\n            return;\n        } else {\n            console[_0x4bc122(0x2)](_0x4bc122(0x3));\n            return;\n        }\n    }\n    if (n === 0x4e) {\n        console[_0x4bc122(0x2)](_0x4bc122(0x5));\n        return;\n    }\n    if (n === 0x4f) {\n        if (_0x4bc122(0x6) === _0x4bc122(0x6)) {\n            console[_0x4bc122(0x2)](_0x4bc122(0x7));\n            return;\n        } else {\n            console['log']('939587134549734843');\n            return;\n        }\n    }\n    if (n === 0x50) {\n        console[_0x4bc122(0x2)](_0x4bc122(0x8));\n        return;\n    }\n    if (n === 0x51) {\n        console[_0x4bc122(0x2)](_0x4bc122(0x9));\n        return;\n    }\n    if (n === 0x52) {\n        if (_0x4bc122(0xa) !== _0x4bc122(0xa)) {\n            console['log'](_0x4bc122(0x9));\n            return;\n        } else {\n            console[_0x4bc122(0x2)](_0x4bc122(0xb));\n            return;\n        }\n    }\n    if (n === 0x53) {\n        console[_0x4bc122(0x2)](_0x4bc122(0xc));\n        return;\n    }\n    if (n === 0x54) {\n        console[_0x4bc122(0x2)](_0x4bc122(0xd));\n        return;\n    }\n    if (n === 0x55) {\n        console[_0x4bc122(0x2)](_0x4bc122(0xe));\n        return;\n    }\n    if (n === 0x56) {\n        console[_0x4bc122(0x2)](_0x4bc122(0xf));\n        return;\n    }\n    var x = 0x2;\n    var y = 0x1;\n    var z = 0x0;\n    for (var i = 0x2; i <= n; i++) {\n        z = x + y;\n        x = y;\n        y = z;\n    }\n    console[_0x4bc122(0x2)](z);\n}\nmain(require('fs')[a0_0x45a70d(0x10)](a0_0x45a70d(0x11), 'utf8'));", "test_cases": [["5", "11"], ["86", "939587134549734843"]], "original": "function main(s) {\n\tvar n = Number(s.split(\"\\n\")[0]);\n\tif (n === 0) {console.log(2); return;}\n\tif (n === 1) {console.log(1); return;}\n\tif (n === 77) {console.log(\"12360848946698171\"); return;}\n\tif (n === 78) {console.log(\"20000273725560978\"); return;}\n\tif (n === 79) {console.log(\"32361122672259149\"); return;}\n\tif (n === 80) {console.log(\"52361396397820127\"); return;}\n\tif (n === 81) {console.log(\"84722519070079276\"); return;}\n\tif (n === 82) {console.log(\"137083915467899403\"); return;}\n\tif (n === 83) {console.log(\"221806434537978679\"); return;}\n\tif (n === 84) {console.log(\"358890350005878082\"); return;}\n\tif (n === 85) {console.log(\"580696784543856761\"); return;}\n\tif (n === 86) {console.log(\"939587134549734843\"); return;}\n\tvar x = 2;\n\tvar y = 1;\n\tvar z = 0;\n\tfor (var i = 2; i <= n; i++) {\n\t\tz = x + y;\n\t\tx = y;\n\t\ty = z;\n\t}\n\tconsole.log(z);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03588_1", "type": "JavaScript", "obfuscated": "var a0_0x210372 = a0_0x4deb;\nfunction Main(input) {\n    var _0x1ee3b9 = a0_0x4deb;\n    var max = 0x0;\n    var ans = 0x0;\n    input = input[_0x1ee3b9(0x0)]('\\x0a');\n    for (var i = 0x1; i < input['length']; i++) {\n        var mem = input[i][_0x1ee3b9(0x0)]('\\x20')[_0x1ee3b9(0x1)](Number);\n        if (max < mem[0x0]) {\n            max = mem[0x0];\n            ans = mem[0x0] + mem[0x1];\n        }\n    }\n    console[_0x1ee3b9(0x2)](ans);\n}\nMain(require('fs')[a0_0x210372(0x3)](a0_0x210372(0x4), 'utf8')[a0_0x210372(0x5)]());\nfunction a0_0x4deb(uWXUcZ, key) {\n    var stringArray = a0_0x2988();\n    a0_0x4deb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4deb(uWXUcZ, key);\n}\nfunction a0_0x2988() {\n    var _0x17803f = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'trim'\n    ];\n    a0_0x2988 = function () {\n        return _0x17803f;\n    };\n    return a0_0x2988();\n}", "test_cases": [["3\n4 7\n2 9\n6 2", "8"], ["5\n1 10\n3 6\n5 2\n4 4\n2 8", "7"], ["2\n1 1000000000\n1000000000 1", "1000000001"]], "original": "function Main(input){\n\tvar max = 0;\n\tvar ans = 0;\n\tinput = input.split(\"\\n\");\n\tfor(var i=1;i<input.length;i++){\n\t\tvar mem = input[i].split(\" \").map(Number);\n\t\tif(max<mem[0]){\n\t\t\tmax = mem[0];\n\t\t\tans = mem[0]+mem[1];\n\t\t}\n\t}\n\tconsole.log(ans)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03687_1", "type": "JavaScript", "obfuscated": "function a0_0x32ce(Gmhstr, key) {\n    const stringArray = a0_0x1bee();\n    a0_0x32ce = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x32ce(Gmhstr, key);\n}\nconst a0_0x3622f4 = a0_0x32ce;\nconsole['log']((args => {\n    const _0x3f3135 = a0_0x32ce;\n    const S = args[_0x3f3135(0x0)]()[_0x3f3135(0x1)]``[_0x3f3135(0x2)](c => c[_0x3f3135(0x3)]() - 0x61);\n    const N = S[_0x3f3135(0x4)];\n    const a = Array(0x1a)[_0x3f3135(0x5)](-0x1);\n    for (let i = 0x0; i < 0x1a; i++) {\n        let d = 0x0;\n        for (let j = 0x0; j < N; j++) {\n            d = S[j] === i ? 0x0 : d + 0x1;\n            if (a[i] < d)\n                a[i] = d;\n        }\n    }\n    return Math[_0x3f3135(0x6)](...a[_0x3f3135(0x7)](v => v >= 0x0));\n})(require('fs')['readFileSync'](a0_0x3622f4(0x8), a0_0x3622f4(0x9))));\nfunction a0_0x1bee() {\n    const _0x11d30b = [\n        'trim',\n        'split',\n        'map',\n        'charCodeAt',\n        'length',\n        'fill',\n        'min',\n        'filter',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1bee = function () {\n        return _0x11d30b;\n    };\n    return a0_0x1bee();\n}", "test_cases": [["serval", "3"], ["jackal", "2"], ["zzz", "0"], ["whbrjpjyhsrywlqjxdbrbaomnw", "8"]], "original": "console.log((args=>{\n  const S = args.trim().split``.map(c=>c.charCodeAt()-97);\n  const N = S.length;\n  const a = Array(26).fill(-1);\n  for ( let i = 0; i < 26; i++ ) {\n    let d = 0;\n    for ( let j = 0; j < N; j++ ) {\n      d = S[j] === i ? 0 : d + 1;\n      if ( a[i] < d ) a[i] = d;\n    }\n  }\n  return Math.min(...a.filter(v=>v>=0));\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04005_1", "type": "JavaScript", "obfuscated": "var a0_0x2e1ce7 = a0_0x27b7;\nfunction a0_0x27b7(KJqJWO, key) {\n    var stringArray = a0_0x1c08();\n    a0_0x27b7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x27b7(KJqJWO, key);\n}\nfunction Main(input) {\n    var _0x377e1e = a0_0x27b7;\n    input = input[_0x377e1e(0x0)]('\\x20')[_0x377e1e(0x1)](Number);\n    if (input[0x0] % 0x2 == 0x0 && input[0x1] % 0x2 == 0x0 && input[0x2] % 0x2 == 0x0) {\n        console[_0x377e1e(0x2)](0x0);\n    } else {\n        input = input['sort'](function (a, b) {\n            return a - b;\n        });\n        console['log'](input[0x1] * input[0x0]);\n    }\n}\nMain(require('fs')[a0_0x2e1ce7(0x3)](a0_0x2e1ce7(0x4), a0_0x2e1ce7(0x5))['trim']());\nfunction a0_0x1c08() {\n    var _0xb5f859 = [\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1c08 = function () {\n        return _0xb5f859;\n    };\n    return a0_0x1c08();\n}", "test_cases": [["3 3 3", "9"], ["2 2 4", "0"], ["5 3 5", "15"]], "original": "function Main(input){\n  input = input.split(\" \").map(Number);\n  if(input[0]%2==0&&input[1]%2==0&&input[2]%2==0){\n    console.log(0);\n  }else{\n    input = input.sort(function(a,b){return a-b;});\n    console.log(input[1]*input[0]);\n  }\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00016_1", "type": "JavaScript", "obfuscated": "var a0_0x4dbe89 = a0_0x5f13;\nfunction a0_0x5f13(RzLyXT, key) {\n    var stringArray = a0_0x4dab();\n    a0_0x5f13 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f13(RzLyXT, key);\n}\nm = '+=+j[0]*Math.', n = a0_0x4dbe89(0x0), x = y = s = 0x0;\nrequire('fs')[a0_0x4dbe89(0x1)]('/dev/stdin', 'utf8')[a0_0x4dbe89(0x2)]()[a0_0x4dbe89(0x3)]('\\x0a')[a0_0x4dbe89(0x4)](function (i) {\n    var _0x45f9e7 = a0_0x5f13;\n    j = i[_0x45f9e7(0x3)](','), eval('x' + m + 'sin' + n + ',y' + m + _0x45f9e7(0x5) + n), s += +j[0x1];\n});\nconsole['log'](~~x), console[a0_0x4dbe89(0x6)](~~y);\nfunction a0_0x4dab() {\n    var _0x16288a = [\n        '(s*Math.PI/180)',\n        'readFileSync',\n        'trim',\n        'split',\n        'some',\n        'cos',\n        'log'\n    ];\n    a0_0x4dab = function () {\n        return _0x16288a;\n    };\n    return a0_0x4dab();\n}", "test_cases": [["56,65\n97,54\n64,-4\n55,76\n42,-27\n43,80\n87,-86\n55,-6\n89,34\n95,5\n0,0", "171\n-302"]], "original": "m='+=+j[0]*Math.',n='(s*Math.PI/180)',x=y=s=0;require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){j=i.split(','),eval('x'+m+'sin'+n+',y'+m+'cos'+n),s+=+j[1]});console.log(~~x),console.log(~~y)", "language": "JavaScript"}
{"filename": "p00028_1", "type": "JavaScript", "obfuscated": "var a0_0x541aa3 = a0_0x3ad8;\nfor (a = [], b = 0x64; b--;)\n    c = a[b] = 0x0;\nrequire('fs')[a0_0x541aa3(0x0)](a0_0x541aa3(0x1), 'utf8')[a0_0x541aa3(0x2)]('\\x0a')[a0_0x541aa3(0x3)](function (i) {\n    if (+i)\n        a[+i]++, c = a[+i] > c ? a[+i] : c;\n});\nfunction a0_0x3ad8(YmylRm, key) {\n    var stringArray = a0_0x4c38();\n    a0_0x3ad8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ad8(YmylRm, key);\n}\na[a0_0x541aa3(0x3)](function (i, j) {\n    var _0x477988 = a0_0x3ad8;\n    if (i == c)\n        console[_0x477988(0x4)](j);\n});\nfunction a0_0x4c38() {\n    var _0x3ec896 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'some',\n        'log'\n    ];\n    a0_0x4c38 = function () {\n        return _0x3ec896;\n    };\n    return a0_0x4c38();\n}", "test_cases": [["5\n6\n3\n5\n8\n7\n5\n3\n9\n7\n3\n4", "3\n5"]], "original": "for(a=[],b=100;b--;)c=a[b]=0;require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').some(function(i){if(+i)a[+i]++,c=a[+i]>c?a[+i]:c});a.some(function(i,j){if(i==c)console.log(j)})", "language": "JavaScript"}
{"filename": "p00030_1", "type": "JavaScript", "obfuscated": "var a0_0xf789f2 = a0_0x38c9;\nfunction comb(r) {\n    var _0x53f859 = a0_0x38c9;\n    var c = [];\n    c[0x0] = -0x1;\n    var k = 0x1;\n    c[0x1] = 0x0;\n    var ret = [];\n    while (k != 0x0) {\n        if ('jyeKP' !== _0x53f859(0x0)) {\n            c[i] = c[i - 0x1] + 0x1;\n        } else {\n            for (var i = k + 0x1; i <= r; i++) {\n                if ('BcIjm' === _0x53f859(0x1)) {\n                    c[i] = c[i - 0x1] + 0x1;\n                } else {\n                    arr[_0x53f859(0x2)](c[i]);\n                }\n            }\n            var arr = [];\n            for (var i = 0x1; i <= r; i++) {\n                arr['push'](c[i]);\n            }\n            ret['push'](arr);\n            k = r;\n            while (c[k] == 0x9 - r + k)\n                k = k - 0x1;\n            c[k] = c[k] + 0x1;\n        }\n    }\n    return ret;\n}\nvar input = require('fs')[a0_0xf789f2(0x3)](a0_0xf789f2(0x4), 'utf8');\nvar lines = input['trim']()[a0_0xf789f2(0x5)]('\\x0a');\nfunction a0_0x2fd1() {\n    var _0x51839c = [\n        'jyeKP',\n        'BcIjm',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x2fd1 = function () {\n        return _0x51839c;\n    };\n    return a0_0x2fd1();\n}\nfunction a0_0x38c9(KmAVPM, key) {\n    var stringArray = a0_0x2fd1();\n    a0_0x38c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x38c9(KmAVPM, key);\n}\nvar line;\nwhile (line = lines['shift']()) {\n    var nums = line[a0_0xf789f2(0x5)]('\\x20');\n    var n = +nums[0x0];\n    var s = +nums[0x1];\n    if (n + s == 0x0)\n        break;\n    var c = comb(n);\n    var cnt = 0x0;\n    for (var i = 0x0; i < c[a0_0xf789f2(0x6)]; i++) {\n        var arr = c[i];\n        if (s == arr['reduce'](function (prev, now) {\n                return prev + now;\n            })) {\n            cnt++;\n        }\n    }\n    console[a0_0xf789f2(0x7)](cnt);\n}", "test_cases": [["3 6\n3 1\n0 0", "3\n0"]], "original": "function comb(r) {\n\tvar c = [];\n\tc[0] = -1;\n\tvar k = 1;\n\tc[1] = 0;\n\tvar ret = [];\n\n\twhile (k != 0) {\n\t\tfor (var i = k + 1; i <= r; i++) {\n\t\t\tc[i] = c[i - 1] + 1;\n\t\t}\n\n\t\tvar arr = []\n\t\tfor (var i = 1; i <= r; i++) {\n\t\t\tarr.push(c[i]);\n\t\t}\n\t\tret.push(arr);\n\n\t\tk = r;\n\t\twhile (c[k] == 9 - r + k)\n\t\t\tk = k - 1;\n\n\t\tc[k] = c[k] + 1;\n\t}\n\n\treturn ret;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n\tvar nums = line.split(' ');\n\tvar n = +nums[0];\n\tvar s = +nums[1];\n\tif (n + s == 0)\n\t\tbreak;\n\n\tvar c = comb(n);\n\n\tvar cnt = 0;\n\tfor (var i = 0; i < c.length; i++) {\n\t\tvar arr = c[i];\n\t\tif (s == arr.reduce(function(prev, now){return prev + now;})) {\n\t\t\tcnt++;\n\t\t}\n\t}\n\n\tconsole.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00040_1", "type": "JavaScript", "obfuscated": "var a0_0x5ab693 = a0_0x12cd;\nfunction a0_0x12cd(wuGmoz, key) {\n    var stringArray = a0_0x4973();\n    a0_0x12cd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x12cd(wuGmoz, key);\n}\nfunction a0_0x4973() {\n    var _0x12906f = [\n        'replace',\n        'split',\n        'shift',\n        'pIflh',\n        'this',\n        'that',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'dlntv',\n        'map',\n        'fromCharCode',\n        'charCodeAt',\n        'join',\n        'eovFr',\n        'length',\n        'BpnSR',\n        'OKqGM'\n    ];\n    a0_0x4973 = function () {\n        return _0x12906f;\n    };\n    return a0_0x4973();\n}\n(function (input) {\n    var _0x420a53 = a0_0x12cd;\n    var p = input[_0x420a53(0x0)](/\\n$/, '')[_0x420a53(0x1)]('\\x0a');\n    var n = Number(p[_0x420a53(0x2)]());\n    for (var i = 0x0; i < n; i++) {\n        if ('PbYjn' === _0x420a53(0x3)) {\n            var s = conv_(str, [\n                i,\n                j\n            ]);\n            if (s === _0x420a53(0x4) || s === _0x420a53(0x5)) {\n                return [\n                    i,\n                    j\n                ];\n            }\n        } else {\n            console[_0x420a53(0x6)](conv(p[_0x420a53(0x2)]()));\n        }\n    }\n}(require('fs')[a0_0x5ab693(0x7)](a0_0x5ab693(0x8), a0_0x5ab693(0x9))));\nfunction conv(s) {\n    var _0x50223f = a0_0x12cd;\n    a = s['split']('\\x20');\n    for (var i = 0x0; i < a['length']; i++) {\n        var r = check(a[i]);\n        if (r) {\n            if (_0x50223f(0xa) !== _0x50223f(0xa)) {\n                var a = r[0x0];\n                var b = r[0x1];\n                var s = s[_0x50223f(0x1)]('')[_0x50223f(0xb)](function (e) {\n                    var _0x5e6b29 = a0_0x12cd;\n                    if (e === '\\x20') {\n                        return e;\n                    }\n                    return String[_0x5e6b29(0xc)]((a * e['charCodeAt'](0x0) + b) % 0x1a + 'a'[_0x5e6b29(0xd)](0x0));\n                })[_0x50223f(0xe)]('');\n                return s;\n            } else {\n                return conv_(s, r);\n            }\n        }\n    }\n    return s;\n}\nfunction conv_(s, r) {\n    var _0x512f06 = a0_0x12cd;\n    var a = r[0x0];\n    var b = r[0x1];\n    var s = s['split']('')[_0x512f06(0xb)](function (e) {\n        var _0x19cccc = a0_0x12cd;\n        if (_0x19cccc(0xf) === 'ZfkAy') {\n            var r = check(a[i]);\n            if (r) {\n                return conv_(s, r);\n            }\n        } else {\n            if (e === '\\x20') {\n                return e;\n            }\n            return String[_0x19cccc(0xc)]((a * e['charCodeAt'](0x0) + b) % 0x1a + 'a'[_0x19cccc(0xd)](0x0));\n        }\n    })['join']('');\n    return s;\n}\nfunction check(str) {\n    var _0x59dba5 = a0_0x12cd;\n    if (str[_0x59dba5(0x10)] !== 0x4) {\n        return ![];\n    }\n    for (var i = 0x0; i < 0x1a; i++) {\n        for (var j = 0x0; j < 0x1a; j++) {\n            if (_0x59dba5(0x11) !== _0x59dba5(0x12)) {\n                var s = conv_(str, [\n                    i,\n                    j\n                ]);\n                if (s === _0x59dba5(0x4) || s === 'that') {\n                    return [\n                        i,\n                        j\n                    ];\n                }\n            } else {\n                a = s[_0x59dba5(0x1)]('\\x20');\n                for (var i = 0x0; i < a['length']; i++) {\n                    var r = check(a[i]);\n                    if (r) {\n                        return conv_(s, r);\n                    }\n                }\n                return s;\n            }\n        }\n    }\n    return ![];\n}", "test_cases": [["1\ny eazqyp pnop pngtg ye obmpngt xmybp mr lygw", "i submit that there is another point of view"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    console.log(conv(p.shift()));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction conv(s) {\n  a = s.split(' ');\n  for (var i = 0; i < a.length; i++) {\n    var r = check(a[i]);\n    if (r) {\n      return conv_(s, r);\n    }\n  }\n  return s;\n}\n\nfunction conv_(s, r) {\n  var a = r[0];\n  var b = r[1];\n  var s = s.split('').map(function(e) {\n    if (e === ' ') {\n      return e;\n    }\n    return String.fromCharCode((a * e.charCodeAt(0) + b) % 26 + 'a'.charCodeAt(0));\n  }).join('');\n  return s;\n}\n\nfunction check(str) {\n  if (str.length !== 4) {\n    return false;\n  }\n  for (var i = 0; i < 26; i++) {\n    for (var j = 0; j < 26; j++) {\n      var s = conv_(str, [i, j]);\n      if (s === 'this' || s === 'that') {\n        return [i, j];\n      }\n    }\n  }\n  return false;\n}", "language": "JavaScript"}
{"filename": "p00054_1", "type": "JavaScript", "obfuscated": "var a0_0xbe36aa = a0_0xbffa;\nfunction a0_0x3fd7() {\n    var _0x57215d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'length',\n        'map',\n        'toFixed',\n        'slice',\n        'log'\n    ];\n    a0_0x3fd7 = function () {\n        return _0x57215d;\n    };\n    return a0_0x3fd7();\n}\nvar input = require('fs')[a0_0xbe36aa(0x0)](a0_0xbe36aa(0x1), a0_0xbe36aa(0x2));\nfunction a0_0xbffa(ayoYlb, key) {\n    var stringArray = a0_0x3fd7();\n    a0_0xbffa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xbffa(ayoYlb, key);\n}\nvar Arr = input['trim']()[a0_0xbe36aa(0x3)]('\\x0a');\nfor (var i = 0x0; i < Arr[a0_0xbe36aa(0x4)]; i++) {\n    var arr = Arr[i][a0_0xbe36aa(0x3)]('\\x20')[a0_0xbe36aa(0x5)](Number);\n    var n = arr[0x2];\n    var sum = 0x0;\n    while (n--) {\n        var str = (arr[0x0] / arr[0x1])[a0_0xbe36aa(0x6)](n + 0x2)[a0_0xbe36aa(0x7)](-0x2);\n        sum += str[0x0] - 0x0;\n    }\n    console[a0_0xbe36aa(0x8)](sum);\n}", "test_cases": [["1 2 3\n2 3 4\n5 4 3\n4 3 2", "5\n24\n7\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   var n=arr[2];\n   var sum=0;\n   while(n--){\n      var str=((arr[0]/arr[1]).toFixed(n+2)).slice(-2);\n      sum+=(str[0]-0);\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00110_1", "type": "JavaScript", "obfuscated": "var a0_0x37a7f5 = a0_0xfa6d;\nfunction main() {\n    var _0x2c280e = a0_0xfa6d;\n    input[_0x2c280e(0x0)](function (line) {\n        var _0x230176 = a0_0xfa6d;\n        var a, b, c, p, x, y, z, i;\n        if (line['trim']() === '')\n            return;\n        p = line[_0x230176(0x1)](/([0-9X]+)\\+([0-9X]+)\\=([0-9X]+)/);\n        a = p[0x1];\n        b = p[0x2];\n        c = p[0x3];\n        for (i = 0x0; i <= 0x9; i++) {\n            if (i === 0x0 && (a[_0x230176(0x2)](0x0) === 'X' || b[_0x230176(0x2)](0x0) === 'X' || c['charAt'](0x0) === 'X'))\n                continue;\n            x = parseInt(a[_0x230176(0x3)](/X/g, i), 0xa);\n            y = parseInt(b[_0x230176(0x3)](/X/g, i), 0xa);\n            z = parseInt(c['replace'](/X/g, i), 0xa);\n            if (x + y === z)\n                break;\n        }\n        console['log'](i === 0xa ? 'NA' : i);\n    });\n}\nvar input = '';\nprocess[a0_0x37a7f5(0x4)]['resume']();\nfunction a0_0xfa6d(wmBrzV, key) {\n    var stringArray = a0_0x27a2();\n    a0_0xfa6d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xfa6d(wmBrzV, key);\n}\nprocess[a0_0x37a7f5(0x4)]['setEncoding'](a0_0x37a7f5(0x5));\nprocess['stdin']['on'](a0_0x37a7f5(0x6), function (chunk) {\n    input += chunk;\n});\nfunction a0_0x27a2() {\n    var _0x1d34ca = [\n        'forEach',\n        'match',\n        'charAt',\n        'replace',\n        'stdin',\n        'utf8',\n        'data',\n        'end',\n        'split'\n    ];\n    a0_0x27a2 = function () {\n        return _0x1d34ca;\n    };\n    return a0_0x27a2();\n}\nprocess[a0_0x37a7f5(0x4)]['on'](a0_0x37a7f5(0x7), function () {\n    var _0x7def31 = a0_0xfa6d;\n    input = input[_0x7def31(0x8)]('\\x0a');\n    main();\n});", "test_cases": [["123+4X6=X79\n12X+4X6=X79\nXX22+89=X2XX", "5\nNA\n1"]], "original": "function main() {\n  input.forEach(function(line) {\n    var\n    a, b, c, p,\n    x, y, z,\n    i;\n    if(line.trim() === '') return;\n    p = line.match(/([0-9X]+)\\+([0-9X]+)\\=([0-9X]+)/);\n    a = p[1]; b = p[2]; c = p[3];\n    for(i = 0; i <= 9; i++) {\n      if(i === 0 && (a.charAt(0) === 'X' || b.charAt(0) === 'X' || c.charAt(0) === 'X')) continue;\n      x = parseInt(a.replace(/X/g, i), 10);\n      y = parseInt(b.replace(/X/g, i), 10);\n      z = parseInt(c.replace(/X/g, i), 10);\n      if(x + y === z) break;\n    }\n    console.log(i === 10 ? 'NA' : i);\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00140_1", "type": "JavaScript", "obfuscated": "var a0_0x5ea936 = a0_0x16ef;\nfunction a0_0x454b() {\n    var _0x567ad0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'replace',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x454b = function () {\n        return _0x567ad0;\n    };\n    return a0_0x454b();\n}\nvar input = require('fs')[a0_0x5ea936(0x0)](a0_0x5ea936(0x1), 'utf8');\nvar Arr = input[a0_0x5ea936(0x2)](/\\n$/, '')[a0_0x5ea936(0x3)]('\\x0a');\nvar n = Arr[a0_0x5ea936(0x4)]() - 0x0;\nfunction a0_0x16ef(tMlSQy, key) {\n    var stringArray = a0_0x454b();\n    a0_0x16ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16ef(tMlSQy, key);\n}\nfor (var i = 0x0; i < n; i++) {\n    var arr = Arr[i]['split']('\\x20')[a0_0x5ea936(0x5)](Number);\n    var s = arr[0x0];\n    var g = arr[0x1];\n    var ans = [s];\n    var plus = 0x1;\n    if (s < g) {\n        do {\n            s++;\n            ans[a0_0x5ea936(0x6)](s);\n        } while (s != g);\n    } else if (s > g && s <= 0x5) {\n        do {\n            s--;\n            ans[a0_0x5ea936(0x6)](s);\n        } while (s != g);\n    } else if (s > g && s >= 0x6 && g >= 0x6) {\n        do {\n            s++;\n            if (s == 0xa) {\n                s = 0x5;\n            }\n            ans[a0_0x5ea936(0x6)](s);\n        } while (s != g);\n    } else if (s > g && s >= 0x6 && g <= 0x5) {\n        do {\n            s += plus;\n            if (s == 0xa) {\n                s = 0x5;\n                plus = -0x1;\n            }\n            ;\n            ans['push'](s);\n        } while (s != g);\n    }\n    console[a0_0x5ea936(0x7)](ans[a0_0x5ea936(0x8)]('\\x20'));\n}", "test_cases": [["2\n2 4\n4 2", "2 3 4\n4 3 2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var i=0;i<n;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   var s=arr[0];\n   var g=arr[1];\n   var ans=[s];\n   var plus=1;\n   if(s<g){do{s++;ans.push(s);}while(s!=g);}\n   else if(s>g && s<=5){do{s--;ans.push(s);}while(s!=g);}\n   else if(s>g && s>=6 && g>=6){do{s++;if(s==10){s=5;}ans.push(s);}while(s!=g);}\n   else if(s>g && s>=6 && g<=5){do{s+=plus;if(s==10){s=5;plus=-1;};ans.push(s);}while(s!=g);}\n   console.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p02249_1", "type": "JavaScript", "obfuscated": "function a0_0x2168() {\n    var _0x477411 = [\n        'readFileSync',\n        'input',\n        'ascii',\n        'split',\n        'map',\n        'slice',\n        'indexOf',\n        'hasOwnProperty',\n        'log',\n        '%d\\x20%d'\n    ];\n    a0_0x2168 = function () {\n        return _0x477411;\n    };\n    return a0_0x2168();\n}\nvar a0_0xe84782 = a0_0x1a21;\nfunction a0_0x1a21(LGYGPk, key) {\n    var stringArray = a0_0x2168();\n    a0_0x1a21 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a21(LGYGPk, key);\n}\nconfig = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')[a0_0xe84782(0x0)](config[a0_0xe84782(0x1)], a0_0xe84782(0x2))['split'](config['newline']);\nline[0x0] = line[0x0][a0_0xe84782(0x3)]('\\x20')[a0_0xe84782(0x4)](Number);\nH = line[0x0][0x0];\nW = line[0x0][0x1];\nfield = line['slice'](0x1, 0x1 + H);\nline[0x1 + H] = line[0x1 + H][a0_0xe84782(0x3)]('\\x20')[a0_0xe84782(0x4)](Number);\nR = line[0x1 + H][0x0];\nC = line[0x1 + H][0x1];\npat = line[a0_0xe84782(0x5)](0x1 + H + 0x1, 0x1 + H + 0x1 + R);\nmem = new Array(H);\nfor (i = 0x0; i < H; i++) {\n    mem[i] = new Array(R);\n    for (j = 0x0; j < R; j++) {\n        mem[i][j] = {};\n        k = field[i][a0_0xe84782(0x6)](pat[j]);\n        while (k !== -0x1) {\n            mem[i][j][k] = !![];\n            k = field[i]['indexOf'](pat[j], k + 0x1);\n        }\n    }\n}\nfor (i = 0x0; i <= H - R; i++) {\n    for (j = 0x0; j <= W - C; j++) {\n        flag = !![];\n        for (k = 0x0; k < R; k++) {\n            if (!mem[i + k][k][a0_0xe84782(0x7)](j)) {\n                flag = ![];\n                break;\n            }\n        }\n        if (flag)\n            console[a0_0xe84782(0x8)](a0_0xe84782(0x9), i, j);\n    }\n}", "test_cases": [["4 5\n00010\n00101\n00010\n00100\n3 2\n10\n01\n10", "0 3\n1 2"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline);\nline[0] = line[0].split(' ').map(Number);\nH = line[0][0];\nW = line[0][1];\nfield = line.slice(1, 1+H);\nline[1+H] = line[1+H].split(' ').map(Number);\nR = line[1+H][0];\nC = line[1+H][1];\npat = line.slice(1+H+1, 1+H+1+R);\n\nmem = new Array(H);\nfor (i = 0; i < H; i++) {\n  mem[i] = new Array(R);\n  for (j = 0; j < R; j++) {\n    mem[i][j] = {};\n    k = field[i].indexOf(pat[j])\n    while (k !== -1) {\n      mem[i][j][k] = true;\n      k = field[i].indexOf(pat[j], k + 1);\n    }\n  }\n}\n\nfor (i = 0; i <= H - R; i++) {\n  for (j = 0; j <= W - C; j++) {\n    flag = true;\n    for (k = 0; k < R; k++) {\n      if (!mem[i+k][k].hasOwnProperty(j)) {\n        flag = false;\n        break;\n      }\n    }\n    if (flag) console.log('%d %d', i, j);\n  }\n}", "language": "JavaScript"}
{"filename": "p02273_1", "type": "JavaScript", "obfuscated": "class Point {\n    constructor(x, y) {\n        this['x'] = x;\n        this['y'] = y;\n    }\n    ['print']() {\n        const _0x1cf884 = a0_0x7c53;\n        console[_0x1cf884(0x0)](this['x'][_0x1cf884(0x1)](0x8) + '\\x20' + this['y']['toFixed'](0x8));\n    }\n}\nfunction a0_0xb643() {\n    const _0x3266a4 = [\n        'log',\n        'toFixed',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'print',\n        'sin',\n        'cos'\n    ];\n    a0_0xb643 = function () {\n        return _0x3266a4;\n    };\n    return a0_0xb643();\n}\n(function main() {\n    const _0x257360 = a0_0x7c53;\n    const n = Number(require('fs')['readFileSync'](_0x257360(0x2), _0x257360(0x3))[_0x257360(0x4)]());\n    let p1 = new Point(0x0, 0x0);\n    let p2 = new Point(0x64, 0x0);\n    p1['print']();\n    kock(n, p1, p2);\n    p2[_0x257360(0x5)]();\n}());\nfunction a0_0x7c53(aIKdUi, key) {\n    const stringArray = a0_0xb643();\n    a0_0x7c53 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x7c53(aIKdUi, key);\n}\nfunction kock(n, p1, p2) {\n    const _0x57c3aa = a0_0x7c53;\n    const sin60 = Math[_0x57c3aa(0x6)](0x3c * Math['PI'] / 0xb4);\n    const cos60 = Math[_0x57c3aa(0x7)](0x3c * Math['PI'] / 0xb4);\n    function innerFunc(n, p1, p2) {\n        const _0x59aa18 = a0_0x7c53;\n        if (!n)\n            return;\n        xDiff = p2['x'] - p1['x'];\n        yDiff = p2['y'] - p1['y'];\n        let s = new Point(p1['x'] + xDiff / 0x3, p1['y'] + yDiff / 0x3);\n        let t = new Point(s['x'] + xDiff / 0x3, s['y'] + yDiff / 0x3);\n        let u = new Point((t['x'] - s['x']) * cos60 - (t['y'] - s['y']) * sin60 + s['x'], (t['x'] - s['x']) * sin60 + (t['y'] - s['y']) * cos60 + s['y']);\n        kock(n - 0x1, p1, s);\n        s[_0x59aa18(0x5)]();\n        kock(n - 0x1, s, u);\n        u[_0x59aa18(0x5)]();\n        kock(n - 0x1, u, t);\n        t[_0x59aa18(0x5)]();\n        kock(n - 0x1, t, p2);\n    }\n    kock = innerFunc;\n    innerFunc(n, p1, p2);\n}", "test_cases": [["1", "0.00000000 0.00000000\n33.33333333 0.00000000\n50.00000000 28.86751346\n66.66666667 0.00000000\n100.00000000 0.00000000"], ["2", "0.00000000 0.00000000\n11.11111111 0.00000000\n16.66666667 9.62250449\n22.22222222 0.00000000\n33.33333333 0.00000000\n38.88888889 9.62250449\n33.33333333 19.24500897\n44.44444444 19.24500897\n50.00000000 28.86751346\n55.55555556 19.24500897\n66.66666667 19.24500897\n61.11111111 9.62250449\n66.66666667 0.00000000\n77.77777778 0.00000000\n83.33333333 9.62250449\n88.88888889 0.00000000\n100.00000000 0.00000000"]], "original": "class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  print() {\n    console.log(this.x.toFixed(8) + ' ' + this.y.toFixed(8));\n  }\n}\n\n(function main(){\n  const n = Number(require('fs').readFileSync('/dev/stdin', 'utf8').trim());\n  let p1 = new Point(0, 0);\n  let p2 = new Point(100, 0);\n  p1.print();\n  kock(n, p1, p2);\n  p2.print();\n})();\n\nfunction kock(n, p1, p2) {\n  const sin60 = Math.sin(60 * Math.PI / 180);\n  const cos60 = Math.cos(60 * Math.PI / 180);\n  function innerFunc(n, p1, p2) {\n    if (!n) return;\n    xDiff = p2.x - p1.x;\n    yDiff = p2.y - p1.y;\n    let s = new Point(p1.x + xDiff / 3, p1.y + yDiff / 3);\n    let t = new Point(s.x + xDiff / 3, s.y + yDiff / 3);\n    let u = new Point((t.x - s.x) * cos60 - (t.y - s.y) * sin60 + s.x, (t.x - s.x) * sin60 + (t.y - s.y) * cos60 + s.y);\n    kock(n-1, p1, s); s.print();\n    kock(n-1, s, u);  u.print();\n    kock(n-1, u, t);  t.print();\n    kock(n-1, t, p2);\n  }\n  kock = innerFunc;\n  innerFunc(n, p1, p2);\n}\n\n", "language": "JavaScript"}
{"filename": "p02278_1", "type": "JavaScript", "obfuscated": "var a0_0x589e21 = a0_0x5171;\nconfig = {\n    'input': a0_0x589e21(0x0),\n    'newline': '\\x0a'\n};\nline = require('fs')[a0_0x589e21(0x1)](config[a0_0x589e21(0x2)], a0_0x589e21(0x3))[a0_0x589e21(0x4)](config['newline'], 0x2);\nfunction a0_0x20eb() {\n    var _0x168cef = [\n        '/dev/stdin',\n        'readFileSync',\n        'input',\n        'ascii',\n        'split',\n        'map',\n        'concat',\n        'sort',\n        'length',\n        'log'\n    ];\n    a0_0x20eb = function () {\n        return _0x168cef;\n    };\n    return a0_0x20eb();\n}\nw = line[0x1][a0_0x589e21(0x4)]('\\x20')[a0_0x589e21(0x5)](Number);\nfunction a0_0x5171(GPHdsb, key) {\n    var stringArray = a0_0x20eb();\n    a0_0x5171 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5171(GPHdsb, key);\n}\nsorted = [][a0_0x589e21(0x6)](w);\nsorted[a0_0x589e21(0x7)](function (a, b) {\n    return a - b;\n});\ncost = 0x0;\nfor (i = w[a0_0x589e21(0x8)] - 0x1; i >= 0x0; i--) {\n    idx = w['indexOf'](sorted[i]);\n    if (idx === i)\n        continue;\n    cost += w[i] + w[idx];\n    tmp = w[i];\n    w[i] = w[idx];\n    w[idx] = tmp;\n}\nconsole[a0_0x589e21(0x9)](cost);", "test_cases": [["5\n1 5 3 4 2", "7"], ["4\n4 3 2 1", "10"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline, 2);\n\nw = line[1].split(' ').map(Number);\n\nsorted = [].concat(w);\nsorted.sort(function (a, b) { return a - b; });\n\ncost = 0;\nfor (i = w.length - 1; i >= 0; i--) {\n  idx = w.indexOf(sorted[i]);\n  if (idx === i) continue;\n  cost += w[i] + w[idx];\n  tmp = w[i];\n  w[i] = w[idx];\n  w[idx] = tmp;\n}\n\nconsole.log(cost);", "language": "JavaScript"}
{"filename": "p02549_1", "type": "JavaScript", "obfuscated": "function a0_0x808d(jAhNMA, key) {\n    const stringArray = a0_0x59e2();\n    a0_0x808d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x808d(jAhNMA, key);\n}\nconst a0_0x5be05f = a0_0x808d;\nconst input = require('fs')[a0_0x5be05f(0x0)](a0_0x5be05f(0x1), a0_0x5be05f(0x2));\nconst lines = input[a0_0x5be05f(0x3)]('\\x0a');\nconst [N, K] = lines[0x0][a0_0x5be05f(0x3)]('\\x20')[a0_0x5be05f(0x4)](Number);\nconst k = [];\nfunction a0_0x59e2() {\n    const _0x176454 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'push',\n        'fill',\n        'length',\n        'log',\n        'pop'\n    ];\n    a0_0x59e2 = function () {\n        return _0x176454;\n    };\n    return a0_0x59e2();\n}\nfor (let i = 0x1; i <= K; i++) {\n    const [L, R] = lines[i][a0_0x5be05f(0x3)]('\\x20')[a0_0x5be05f(0x4)](Number);\n    k[a0_0x5be05f(0x5)]([\n        L,\n        R\n    ]);\n}\nconst ksum = Array(K)[a0_0x5be05f(0x6)](0x0);\nconst mod = 0x3b800001;\nconst map = Array(N)[a0_0x5be05f(0x6)](0x0);\nmap[0x0] = 0x1;\nfor (let i = 0x1; i < map[a0_0x5be05f(0x7)]; i++) {\n    let c = 0x0;\n    for (let j = 0x0; j < k[a0_0x5be05f(0x7)]; j++) {\n        ksum[j] = ksum[j] + (map[i - k[j][0x0]] || 0x0) - (map[i - k[j][0x1] - 0x1] || 0x0);\n    }\n    map[i] = ksum['reduce']((a, b) => a + b) % mod;\n}\nconsole[a0_0x5be05f(0x8)](map[a0_0x5be05f(0x9)]());", "test_cases": [["5 2\n1 1\n3 4", "4"], ["5 2\n3 3\n5 5", "0"], ["5 1\n1 2", "5"], ["60 3\n5 8\n1 3\n10 15", "221823067"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nconst lines = input.split('\\n')\nconst [N, K] = lines[0].split(' ').map(Number)\nconst k = []\n\nfor (let i = 1; i <= K; i++) {\n    const [L, R] = lines[i].split(' ').map(Number)\n    k.push([L, R])\n}\nconst ksum = Array(K).fill(0)\n\nconst mod = 998244353\nconst map = Array(N).fill(0)\nmap[0] = 1\n\nfor (let i = 1; i < map.length; i++) {\n    let c = 0\n    for (let j = 0; j < k.length; j++) {\n        ksum[j] = ksum[j] + (map[i - k[j][0]] || 0) - (map[i - k[j][1] -1 ] || 0)\n    }\n    map[i] = ksum.reduce((a, b) => a + b) % mod\n}\n\nconsole.log(map.pop())\n", "language": "JavaScript"}
{"filename": "p02588_1", "type": "JavaScript", "obfuscated": "const a0_0x2a4f5f = a0_0x5db2;\nfunction a0_0x5db2(tcTVNO, key) {\n    const stringArray = a0_0x4ce6();\n    a0_0x5db2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5db2(tcTVNO, key);\n}\nfunction Main(input) {\n    const _0x271773 = a0_0x5db2;\n    let [l, ...valArr] = input[_0x271773(0x0)]('\\x0a');\n    valArr = valArr[_0x271773(0x1)](e => parseFloat(e));\n    let result = [];\n    for (let ele of valArr) {\n        let temp = valArr['map'](e => {\n            if (e !== ele && e * ele % 0x1 === 0x0 && ele < e) {\n                return [\n                    ele,\n                    e\n                ];\n            }\n        });\n        temp = temp['filter'](e => e !== undefined);\n        if (temp[_0x271773(0x2)]) {\n            result = [\n                ...result,\n                ...temp\n            ];\n        }\n    }\n    console[_0x271773(0x3)](result['length']);\n}\nfunction a0_0x4ce6() {\n    const _0x45def8 = [\n        'split',\n        'map',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4ce6 = function () {\n        return _0x45def8;\n    };\n    return a0_0x4ce6();\n}\nMain(require('fs')[a0_0x2a4f5f(0x4)](a0_0x2a4f5f(0x5), a0_0x2a4f5f(0x6)));", "test_cases": [["5\n7.5\n2.4\n17.000000001\n17\n16.000000000", "3"], ["11\n0.9\n1\n1\n1.25\n2.30000\n5\n70\n0.000000001\n9999.999999999\n0.999999999\n1.000000001", "8"]], "original": "function Main(input) {\n  let [l, ...valArr] = input.split('\\n')\n  valArr = valArr.map(e=>parseFloat(e))\n  let result = []\n  for(let ele of valArr){\n    let temp = valArr.map(e=>{\n    \tif((e !== ele && (e*ele)%1===0)&&ele<e){\n        \treturn [ele, e]\n        }\n    })\n    temp =temp.filter(e=>e!==undefined)\n    if(temp.length){result = [...result, ...temp]}\n  }\n  console.log(result.length)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02863_1", "type": "JavaScript", "obfuscated": "function a0_0x1a59() {\n    var _0x1a7dc7 = [\n        'trim',\n        'split',\n        'map',\n        'push',\n        'mmYQy',\n        'LPRJn',\n        'max',\n        'log'\n    ];\n    a0_0x1a59 = function () {\n        return _0x1a7dc7;\n    };\n    return a0_0x1a59();\n}\nfunction Main(input) {\n    var _0x59820c = a0_0x6fea;\n    input = input[_0x59820c(0x0)]()[_0x59820c(0x1)]('\\x0a')[_0x59820c(0x2)](function (x) {\n        var _0x2e203a = a0_0x6fea;\n        return x[_0x2e203a(0x1)]('\\x20');\n    });\n    var N = parseInt(input[0x0][0x0], 0xa);\n    var T = parseInt(input[0x0][0x1], 0xa);\n    var arr_AB = [];\n    for (var i = 0x0; i < N; i++) {\n        arr_AB[_0x59820c(0x3)](input[i + 0x1]['map'](e => parseInt(e, 0xa)));\n    }\n    arr_AB['sort']((a, b) => a[0x0] - b[0x0]);\n    var dp = [];\n    var Ai, Bi;\n    dp[_0x59820c(0x3)](Array['from']({ 'length': T }, () => [\n        0x0,\n        0x0\n    ]));\n    for (var i = 0x0; i < N; i++) {\n        dp[_0x59820c(0x3)]([]);\n        Ai = arr_AB[i][0x0];\n        Bi = arr_AB[i][0x1];\n        for (var j = 0x0; j < T; j++) {\n            dp[i + 0x1][_0x59820c(0x3)]([\n                0x0,\n                0x0\n            ]);\n            if (Ai <= j) {\n                if (_0x59820c(0x4) !== 'mmYQy') {\n                    dp[i + 0x1][j][0x0] = dp[i][j][0x0];\n                } else {\n                    dp[i + 0x1][j][0x0] = Math['max'](dp[i][j][0x0], dp[i][j - Ai][0x0] + Bi);\n                }\n            } else {\n                if (_0x59820c(0x5) === _0x59820c(0x5)) {\n                    dp[i + 0x1][j][0x0] = dp[i][j][0x0];\n                } else {\n                    return x[_0x59820c(0x1)]('\\x20');\n                }\n            }\n            dp[i + 0x1][j][0x1] = Math[_0x59820c(0x6)](dp[i][j][0x1], dp[i][j][0x0] + Bi);\n        }\n    }\n    console[_0x59820c(0x7)](dp[N][T - 0x1][0x1]);\n}\nfunction a0_0x6fea(NHETxy, key) {\n    var stringArray = a0_0x1a59();\n    a0_0x6fea = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6fea(NHETxy, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 60\n10 10\n100 100", "110"], ["3 60\n10 10\n10 20\n10 30", "60"], ["3 60\n30 10\n30 20\n30 30", "50"], ["10 100\n15 23\n20 18\n13 17\n24 12\n18 29\n19 27\n23 21\n18 20\n27 15\n22 25", "145"]], "original": "//TLEか？\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n\tvar N = parseInt(input[0][0], 10);\n\tvar T = parseInt(input[0][1], 10);\n\tvar arr_AB = [];\n\tfor (var i = 0; i < N; i++){\n\t\tarr_AB.push(input[i + 1].map(e => parseInt(e, 10)));\n\t}\n\tarr_AB.sort((a, b) => a[0] - b[0]);\n\tvar dp = [];\n\tvar Ai, Bi;\n\tdp.push(Array.from({length: T}, () => [0, 0]));\n\tfor (var i = 0; i < N; i++){\n\t\tdp.push([]);\n\t\tAi = arr_AB[i][0];\n\t\tBi = arr_AB[i][1];\n\t\tfor (var j = 0; j < T; j++){\n\t\t\tdp[i + 1].push([0, 0])\n\t\t\t// console.log(i, j, dp);\n\t\t\tif (Ai <= j){\n\t\t\t\tdp[i + 1][j][0] = Math.max(dp[i][j][0], dp[i][j - Ai][0] + Bi);\n\t\t\t} else {\n\t\t\t\tdp[i + 1][j][0] = dp[i][j][0];\n\t\t\t}\n\t\t\tdp[i + 1][j][1] = Math.max(dp[i][j][1], dp[i][j][0] + Bi);\n\t\t}\n\t\t\n\t}\n\tconsole.log(dp[N][T - 1][1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03151_1", "type": "JavaScript", "obfuscated": "var a0_0x3c0e29 = a0_0x4741;\ninp = require('fs')[a0_0x3c0e29(0x0)](a0_0x3c0e29(0x1), a0_0x3c0e29(0x2))['split']('\\x0a');\nN = inp[a0_0x3c0e29(0x3)]() * 0x1;\nfunction a0_0x46d5() {\n    var _0x21a5e4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'split',\n        'push',\n        'sort',\n        'log'\n    ];\n    a0_0x46d5 = function () {\n        return _0x21a5e4;\n    };\n    return a0_0x46d5();\n}\nfunction a0_0x4741(iMxOgF, key) {\n    var stringArray = a0_0x46d5();\n    a0_0x4741 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4741(iMxOgF, key);\n}\nA = inp['shift']()[a0_0x3c0e29(0x4)]('\\x20');\nB = inp[a0_0x3c0e29(0x3)]()[a0_0x3c0e29(0x4)]('\\x20');\nsumA = 0x0;\nsumB = 0x0;\ns = 0x0;\nt = [];\ncnt = 0x0;\nfor (i = 0x0; i < N; i++) {\n    a = A[i] * 0x1;\n    b = B[i] * 0x1;\n    d = a - b;\n    if (d < 0x0) {\n        cnt++;\n        s += d;\n    } else {\n        t[a0_0x3c0e29(0x5)](d);\n    }\n    sumA += a;\n    sumB += b;\n}\nif (sumA >= sumB) {\n    t[a0_0x3c0e29(0x6)]((a, b) => b - a);\n    j = 0x0;\n    while (s < 0x0) {\n        s += t[j];\n        j++;\n    }\n    console[a0_0x3c0e29(0x7)](cnt + j);\n} else {\n    console['log'](-0x1);\n}", "test_cases": [["3\n2 3 5\n3 4 1", "3"], ["3\n2 3 3\n2 2 1", "0"], ["3\n17 7 1\n25 6 14", "-1"], ["12\n757232153 372327760 440075441 195848680 354974235 458054863 463477172 740174259 615762794 632963102 529866931 64991604\n74164189 98239366 465611891 362739947 147060907 118867039 63189252 78303147 501410831 110823640 122948912 572905212", "5"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nN = inp.shift() * 1\nA = inp.shift().split(' ')\nB = inp.shift().split(' ')\nsumA = 0\nsumB = 0\ns = 0\nt = []\ncnt = 0\nfor (i=0; i<N; i++) {\n  a = A[i] * 1\n  b = B[i] * 1\n  d = a - b\n  if (d < 0) {\n      cnt++\n      s += d \n  } else {\n      t.push(d)\n  }\n  sumA += a\n  sumB += b\n}\n\nif (sumA >= sumB) {\n  t.sort((a, b) => b - a)\n  j = 0\n  while (s < 0) {\n      s += t[j]\n      j++\n  }\n  console.log(cnt+j)\n} else {\n  console.log(-1)\n}\n", "language": "JavaScript"}
{"filename": "p03287_1", "type": "JavaScript", "obfuscated": "var a0_0x4d8d2f = a0_0x19e0;\nfunction Main(s) {\n    var _0x3130ca = a0_0x19e0;\n    s = s[_0x3130ca(0x0)]('\\x0a');\n    var n = s[0x0]['split']('\\x20')[_0x3130ca(0x1)](a => +a);\n    var m = n[0x1];\n    n = n[0x0];\n    var a = s[0x1][_0x3130ca(0x0)]('\\x20')[_0x3130ca(0x1)](a => +a);\n    var ans = 0x0;\n    var b = {};\n    var t = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        t = (t + a[i]) % m;\n        if (b[t])\n            b[t]++;\n        else\n            b[t] = 0x1;\n    }\n    for (i in b) {\n        i = +i;\n        if (i === 0x0)\n            ans += b[i] * (b[i] + 0x1) / 0x2;\n        else if (b[i] > 0x1)\n            ans += b[i] * (b[i] - 0x1) / 0x2;\n    }\n    console['log'](ans);\n}\nfunction a0_0x19e0(gCBdGf, key) {\n    var stringArray = a0_0x38f9();\n    a0_0x19e0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19e0(gCBdGf, key);\n}\nMain(require('fs')[a0_0x4d8d2f(0x2)](a0_0x4d8d2f(0x3), a0_0x4d8d2f(0x4)));\nfunction a0_0x38f9() {\n    var _0x2a7155 = [\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x38f9 = function () {\n        return _0x2a7155;\n    };\n    return a0_0x38f9();\n}", "test_cases": [["3 2\n4 1 5", "3"], ["13 17\n29 7 5 7 9 51 7 13 8 55 42 9 81", "6"], ["10 400000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "25"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1]; n = n[0];\n  var a = s[1].split(\" \").map(a=>+a);\n  var ans = 0;\n  var b = {};\n  var t = 0;\n  for(var i = 0; i < n; i++){\n    t = (t + a[i]) % m;\n    if(b[t])b[t]++; else b[t] = 1;\n  }\n  for(i in b){\n    i = +i;\n    if(i === 0)ans += b[i] * (b[i]+1) / 2;\n    else if(b[i] > 1)ans += b[i] * (b[i]-1) / 2;\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03426_1", "type": "JavaScript", "obfuscated": "function a0_0x107f(qeAlid, key) {\n    var stringArray = a0_0x3550();\n    a0_0x107f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x107f(qeAlid, key);\n}\nvar a0_0x114839 = a0_0x107f;\nfunction Main(input) {\n    var _0x421df0 = a0_0x107f;\n    input = input['split']('\\x0a');\n    var H = input[0x0][_0x421df0(0x0)]('\\x20')[_0x421df0(0x1)](a => parseInt(a));\n    var W = H[0x1];\n    var D = H[0x2];\n    H = H[0x0];\n    var A;\n    var x = new Array(H * W + 0x1)[_0x421df0(0x2)](0x0)[_0x421df0(0x1)](a => new Array(0x2));\n    for (var i = 0x0; i < H; i++) {\n        A = input[i + 0x1][_0x421df0(0x0)]('\\x20')[_0x421df0(0x1)](a => parseInt(a));\n        for (var j = 0x0; j < W; j++) {\n            x[A[j]][0x0] = i;\n            x[A[j]][0x1] = j;\n        }\n    }\n    var y = new Array(H * W + 0x1)['fill'](0x0);\n    for (i = D + 0x1; i <= H * W; i++) {\n        y[i] = y[i - D] + Math[_0x421df0(0x3)](x[i - D][0x0] - x[i][0x0]) + Math[_0x421df0(0x3)](x[i - D][0x1] - x[i][0x1]);\n    }\n    var Q = parseInt(input[H + 0x1]);\n    var ans = new Array(Q)['fill'](0x0);\n    for (i = 0x0; i < Q; i++) {\n        var L = input[H + 0x2 + i]['split']('\\x20')[_0x421df0(0x1)](a => parseInt(a));\n        var R = L[0x1];\n        L = L[0x0];\n        ans[i] = y[R] - y[L];\n    }\n    console[_0x421df0(0x4)](ans['join']('\\x0a'));\n}\nMain(require('fs')[a0_0x114839(0x5)](a0_0x114839(0x6), a0_0x114839(0x7)));\nfunction a0_0x3550() {\n    var _0x29d6d2 = [\n        'split',\n        'map',\n        'fill',\n        'abs',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3550 = function () {\n        return _0x29d6d2;\n    };\n    return a0_0x3550();\n}", "test_cases": [["3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8", "5"], ["4 2 3\n3 7\n1 4\n5 2\n6 8\n2\n2 2\n2 2", "0\n0"], ["5 5 4\n13 25 7 15 17\n16 22 20 2 9\n14 11 12 1 19\n10 6 23 8 18\n3 21 5 24 4\n3\n13 13\n2 10\n13 13", "0\n5\n0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar H = input[0].split(\" \").map(a => parseInt(a));\n\tvar W = H[1];\n\tvar D = H[2];\n\tH = H[0];\n\tvar A;\n\tvar x = new Array(H*W+1).fill(0).map(a => new Array(2));\n\tfor(var i = 0; i < H; i++){\n\t\tA = input[i+1].split(\" \").map(a => parseInt(a));\n\t\tfor(var j = 0; j < W; j++){\n\t\t\tx[A[j]][0] = i;\n\t\t\tx[A[j]][1] = j;\n\t\t}\n\t}\n\tvar y = new Array(H*W+1).fill(0);\n\tfor(i = D+1; i <= H*W; i++){\n\t\ty[i] = y [i-D] + Math.abs(x[i-D][0] - x[i][0]) + Math.abs(x[i-D][1] - x[i][1]);\n\t}\n\t\n\tvar Q = parseInt(input[H+1]);\n\tvar ans = new Array(Q).fill(0);\n\tfor(i = 0; i < Q; i++){\n\t\tvar L = input[H+2+i].split(\" \").map(a => parseInt(a));\n\t\tvar R = L[1];\n\t\tL = L[0];\n\t\tans[i] = y[R] - y[L];\n\t}\n\t\n\tconsole.log(ans.join(\"\\n\"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03450_1", "type": "JavaScript", "obfuscated": "var a0_0x2bdf22 = a0_0x3dcd;\nfunction Main(input) {\n    var _0x68c09 = a0_0x3dcd;\n    var line = input[_0x68c09(0x0)]('\\x0a');\n    var tmp = line[0x0][_0x68c09(0x0)]('\\x20');\n    var N = Number(tmp[0x0]);\n    var M = Number(tmp[0x1]);\n    var L = [];\n    var R = [];\n    var D = [];\n    for (var i = 0x1; i <= M; i++) {\n        var tmp = line[i][_0x68c09(0x0)]('\\x20');\n        L[_0x68c09(0x1)](Number(tmp[0x0]));\n        R[_0x68c09(0x1)](Number(tmp[0x1]));\n        D[_0x68c09(0x1)](Number(tmp[0x2]));\n    }\n    var pos = [];\n    var ans;\n    loopj:\n        for (var j = 0x0; j < M; j++) {\n            if (j === 0x0)\n                pos[L[j] - 0x1] = 0x1;\n            var rightpos = pos[L[j] - 0x1] + D[j];\n            if (!pos[R[j] - 0x1]) {\n                pos[R[j] - 0x1] = rightpos;\n            } else {\n                if (pos[R[j] - 0x1] !== rightpos) {\n                    ans = 'No';\n                    break loopj;\n                }\n            }\n        }\n    if (!ans)\n        ans = _0x68c09(0x2);\n    console[_0x68c09(0x3)](ans);\n}\nfunction a0_0x3dcd(rlpgxp, key) {\n    var stringArray = a0_0x41e6();\n    a0_0x3dcd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3dcd(rlpgxp, key);\n}\nMain(require('fs')[a0_0x2bdf22(0x4)](a0_0x2bdf22(0x5), a0_0x2bdf22(0x6)));\nfunction a0_0x41e6() {\n    var _0x5b887f = [\n        'split',\n        'push',\n        'Yes',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x41e6 = function () {\n        return _0x5b887f;\n    };\n    return a0_0x41e6();\n}", "test_cases": [["3 3\n1 2 1\n2 3 1\n1 3 2", "Yes"], ["3 3\n1 2 1\n2 3 1\n1 3 5", "No"], ["4 3\n2 1 1\n2 3 5\n3 4 2", "Yes"], ["10 3\n8 7 100\n7 9 100\n9 8 100", "No"], ["100 0", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar line = input.split(\"\\n\");\n\tvar tmp = line[0].split(\" \");\n\tvar N = Number(tmp[0]);\n\tvar M = Number(tmp[1]);\n\tvar L = [];\n\tvar R = [];\n\tvar D = [];\n\tfor(var i = 1; i <= M; i++){\n\t\tvar tmp = line[i].split(\" \");\n\t\tL.push(Number(tmp[0]));\n\t\tR.push(Number(tmp[1]));\n\t\tD.push(Number(tmp[2]));\n\t}\n\tvar pos = [];\n\tvar ans;\n\tloopj : for(var j = 0; j < M; j++){\n\t\tif(j === 0) pos[L[j]-1] = 1;\n\t\tvar rightpos = pos[L[j]-1] + D[j];\n\t\tif(!pos[R[j]-1]){\n\t\t\tpos[R[j]-1] = rightpos;\n\t\t} else{\n\t\t\tif(pos[R[j]-1] !== rightpos){\n\t\t\t\tans = 'No';\n\t\t\t\tbreak loopj;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(!ans) ans = 'Yes';\n\n\tconsole.log(ans);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03497_1", "type": "JavaScript", "obfuscated": "var a0_0x21e716 = a0_0x3613;\nfunction a0_0x3613(QtYDSd, key) {\n    var stringArray = a0_0x5c0e();\n    a0_0x3613 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3613(QtYDSd, key);\n}\ninp = require('fs')[a0_0x21e716(0x0)]('/dev/stdin', a0_0x21e716(0x1))[a0_0x21e716(0x2)]('\\x0a');\nl = inp[a0_0x21e716(0x3)]()['split']('\\x20');\nN = l[0x0];\nK = l[0x1];\nA = inp[a0_0x21e716(0x3)]()[a0_0x21e716(0x2)]('\\x20');\no = {};\na = [];\nfor (i = 0x0; i < N; i++) {\n    a[A[i]] = (a[A[i]] || 0x0) + 0x1;\n    o[A[i]] = 0x1;\n}\nkeys = Object['keys'](o);\nfunction a0_0x5c0e() {\n    var _0x199a25 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'length',\n        'sort',\n        'log'\n    ];\n    a0_0x5c0e = function () {\n        return _0x199a25;\n    };\n    return a0_0x5c0e();\n}\nc = keys[a0_0x21e716(0x4)] - K;\nif (c > 0x0) {\n    a[a0_0x21e716(0x5)]();\n    cnt = 0x0;\n    for (k of a) {\n        cnt += k;\n        c--;\n        if (c === 0x0) {\n            break;\n        }\n    }\n    console[a0_0x21e716(0x6)](cnt);\n} else {\n    console['log'](0x0);\n}", "test_cases": [["5 2\n1 1 2 2 5", "1"], ["4 4\n1 1 2 2", "0"], ["10 3\n5 1 3 2 4 1 1 2 3 4", "3"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nN = l[0]\nK = l[1]\nA = inp.shift().split(' ')\no = {}\na = []\nfor (i=0; i<N; i++) {\n    a[A[i]] = (a[A[i]] || 0) + 1\n    o[A[i]] = 1\n}\nkeys = Object.keys(o)\nc = keys.length - K\nif (c > 0) {\n    a.sort()\n    cnt = 0\n    for (k of a) {\n        cnt += k\n        c--\n        if (c===0) {\n            break;\n        }\n    }\n    console.log(cnt)    \n} else {\n    console.log(0)\n}\n", "language": "JavaScript"}
{"filename": "p03577_1", "type": "JavaScript", "obfuscated": "var a0_0x43faf1 = a0_0x9da5;\nprocess[a0_0x43faf1(0x0)][a0_0x43faf1(0x1)]();\nprocess[a0_0x43faf1(0x0)][a0_0x43faf1(0x2)](a0_0x43faf1(0x3));\nvar g_input = '';\nfunction a0_0x9da5(pXfVjD, key) {\n    var stringArray = a0_0x57bd();\n    a0_0x9da5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9da5(pXfVjD, key);\n}\nprocess[a0_0x43faf1(0x0)]['on'](a0_0x43faf1(0x4), function (chunk) {\n    g_input += chunk;\n});\nfunction a0_0x57bd() {\n    var _0x64ad3d = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end',\n        'split',\n        'log',\n        'slice',\n        'length',\n        'FESTIVAL'\n    ];\n    a0_0x57bd = function () {\n        return _0x64ad3d;\n    };\n    return a0_0x57bd();\n}\nprocess[a0_0x43faf1(0x0)]['on'](a0_0x43faf1(0x5), function () {\n    var _0x423ffa = a0_0x9da5;\n    Main(g_input[_0x423ffa(0x6)](/\\r?\\n/));\n});\nfunction Main(input) {\n    var _0x357e9a = a0_0x9da5;\n    console[_0x357e9a(0x7)](input[0x0][_0x357e9a(0x8)](0x0, input[0x0][_0x357e9a(0x9)] - _0x357e9a(0xa)[_0x357e9a(0x9)]));\n    return 0x0;\n}", "test_cases": [["CODEFESTIVAL", "CODE"], ["CODEFESTIVALFESTIVAL", "CODEFESTIVAL"], ["YAKINIKUFESTIVAL", "YAKINIKU"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\n\nprocess.stdin.on('end', function() {\n    Main(g_input.split(/\\r?\\n/));\n});\n\nfunction Main(input) {\n\n    console.log(input[0].slice(0, input[0].length - 'FESTIVAL'.length));\n\n    return 0;\n}\n", "language": "JavaScript"}
{"filename": "p03599_1", "type": "JavaScript", "obfuscated": "const a0_0x1afc80 = a0_0x94a7;\nconst input = require('fs')[a0_0x1afc80(0x0)](a0_0x1afc80(0x1), a0_0x1afc80(0x2));\n(input => {\n    const _0x8fd5cf = a0_0x94a7;\n    const [A, B, C, D, E, F] = input[_0x8fd5cf(0x3)]()[_0x8fd5cf(0x4)]('\\x20')[_0x8fd5cf(0x5)](Number);\n    let W = {};\n    let S = {};\n    for (let i = 0x1; i < F; i++) {\n        for (let j = 0x0; j < F; j++) {\n            const s = A * i * 0x64 + j * B * 0x64;\n            if (s > F)\n                break;\n            W[s] = 0x1;\n        }\n    }\n    const p = F * E / 0x64;\n    for (let i = 0x0; i < F; i++) {\n        for (let j = 0x0; j < F; j++) {\n            const s = C * i + D * j;\n            if (s > p)\n                break;\n            S[s] = 0x1;\n        }\n    }\n    let ans = [\n        A * 0x64,\n        0x0\n    ];\n    let max = 0x0;\n    let r = E / 0x64;\n    for (let i in W) {\n        for (let j in S) {\n            const t = i - 0x0 + (j - 0x0);\n            const sw = j / i;\n            if (sw > r || t > F)\n                continue;\n            if (sw > max) {\n                max = sw;\n                ans = [\n                    t,\n                    j\n                ];\n            }\n        }\n    }\n    console[_0x8fd5cf(0x6)](ans[0x0], ans[0x1]);\n})(input);\nfunction a0_0x94a7(bbRnPg, key) {\n    const stringArray = a0_0x2341();\n    a0_0x94a7 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x94a7(bbRnPg, key);\n}\nfunction a0_0x2341() {\n    const _0x2c2790 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x2341 = function () {\n        return _0x2c2790;\n    };\n    return a0_0x2341();\n}", "test_cases": [["1 2 10 20 15 200", "110 10"], ["1 2 1 2 100 1000", "200 100"], ["17 19 22 26 55 2802", "2634 934"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n  \n  const [A, B, C, D, E, F] = input.trim().split(' ').map(Number)\n\n  let W = {}\n  let S = {}\n  \n  for (let i = 1; i < F; i ++) {\n    for (let j = 0; j < F; j++) {\n      const s = A * i * 100 + j * B * 100\n      if (s > F) break\n\t  W[s] = 1\n    }\n  }\n  \n  const p = F * E / 100\n  for (let i = 0; i < F; i ++) {\n    for (let j = 0; j < F; j++) {\n      const s = C * i + D * j\n      if (s > p) break\n\t  S[s] = 1\n    }\n  }\n\n  let ans = [A * 100, 0]\n  let max = 0\n  let r = E / 100\n  for (let i in W) {\n    for (let j in S) {\n      const t = (i - 0) + (j - 0)\n      const sw = j / i\n      if (sw > r || t > F) continue\n      if (sw > max) {\n        max = sw\n\t    ans = [t, j]\n      }\n    }\n  }\n  \n  console.log(ans[0], ans[1])\n  \n    \n})(input)\n", "language": "JavaScript"}
{"filename": "p03612_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x4242(nLgVzS, key) {\n    const stringArray = a0_0xdcee();\n    a0_0x4242 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4242(nLgVzS, key);\n}\nconst a0_0x410b2b = a0_0x4242;\nfunction a0_0xdcee() {\n    const _0x2d9c68 = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0xdcee = function () {\n        return _0x2d9c68;\n    };\n    return a0_0xdcee();\n}\nconst main = arg => {\n    const _0x4a675e = a0_0x4242;\n    arg = arg[_0x4a675e(0x0)]()[_0x4a675e(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const P = arg[0x1][_0x4a675e(0x1)]('\\x20')[_0x4a675e(0x2)](n => parseInt(n));\n    let answer = 0x0;\n    for (let i in P) {\n        if (parseInt(i) + 0x1 === P[i]) {\n            let temp = P[i];\n            P[i] = P[parseInt(i) + 0x1];\n            P[parseInt(i) + 0x1] = temp;\n            answer++;\n        }\n    }\n    console[_0x4a675e(0x3)](answer);\n};\nmain(require('fs')[a0_0x410b2b(0x4)](a0_0x410b2b(0x5), 'utf8'));", "test_cases": [["5\n1 4 3 5 2", "2"], ["2\n1 2", "1"], ["2\n2 1", "0"], ["9\n1 2 4 9 5 8 7 3 6", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const P = arg[1].split(\" \").map(n=>parseInt(n));\n    \n    let answer = 0;\n    \n    for(let i in P) {\n        if(parseInt(i) + 1 === P[i]) {\n            let temp = P[i];\n            P[i] = P[parseInt(i) + 1];\n            P[parseInt(i) + 1] = temp;\n            answer++;\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03681_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x65eb() {\n    const _0x19fe21 = [\n        'abs',\n        'log',\n        'UYIhG',\n        'LeHSq',\n        'bIJCH',\n        'IvfNd',\n        'mTeqJ',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x65eb = function () {\n        return _0x19fe21;\n    };\n    return a0_0x65eb();\n}\nconst a0_0x3ecee9 = a0_0x2b8d;\nfunction a0_0x2b8d(HVRbMf, key) {\n    const stringArray = a0_0x65eb();\n    a0_0x2b8d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b8d(HVRbMf, key);\n}\nfunction main(input) {\n    const _0x5a9139 = a0_0x2b8d;\n    input = input['split']('\\x20')['map'](v => ~~v);\n    const n = input[0x0];\n    const m = input[0x1];\n    const limit = 0x3b9aca00 + 0x7;\n    if (Math[_0x5a9139(0x0)](n - m) >= 0x2) {\n        console[_0x5a9139(0x1)](0x0);\n        return;\n    }\n    let nn = 0x1;\n    for (let i = 0x2; i <= n; i++) {\n        nn *= i;\n        if (nn >= limit) {\n            if (_0x5a9139(0x2) !== _0x5a9139(0x2)) {\n                nn = nn % limit;\n            } else {\n                nn = nn % limit;\n            }\n        }\n    }\n    for (let i = 0x2; i <= m; i++) {\n        nn *= i;\n        if (nn >= limit) {\n            if (_0x5a9139(0x3) === _0x5a9139(0x4)) {\n                nn *= i;\n                if (nn >= limit) {\n                    nn = nn % limit;\n                }\n            } else {\n                nn = nn % limit;\n            }\n        }\n    }\n    let tmp = nn % limit;\n    if (n == m) {\n        if (_0x5a9139(0x5) !== _0x5a9139(0x6)) {\n            tmp = 0x2 * tmp;\n        } else {\n            console[_0x5a9139(0x1)](0x0);\n            return;\n        }\n    }\n    const ans = tmp % limit;\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync'](a0_0x3ecee9(0x7), a0_0x3ecee9(0x8)));", "test_cases": [["2 2", "8"], ["3 2", "12"], ["1 8", "0"], ["100000 100000", "530123477"]], "original": "'use strict'\n\nfunction main(input) {\n  input = input.split(' ').map(v => ~~v)\n  const n = input[0]\n  const m = input[1]\n\n  const limit = 1e9 + 7 //(Math.pow(10, 9) + 7)\n\n  //交互に並べられない\n  if (Math.abs(n - m) >= 2) {\n    console.log(0)\n    return\n  }\n\n  let nn = 1\n  for (let i = 2; i <= n; i++) {\n    nn *= i\n    if (nn >= limit) {\n      nn = nn % limit\n    }\n  }\n  // let mm = 1\n  for (let i = 2; i <= m; i++) {\n    nn *= i\n    if (nn >= limit) {\n      nn = nn % limit\n    }\n  }\n  // console.log(nn,mm)\n\n  let tmp = nn % limit\n  // console.log(tmp)\n  if (n == m) {\n    tmp = 2 * tmp\n  }\n  const ans = tmp % limit\n\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03732_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x21cf6e = a0_0x2401;\nfunction a0_0x2401(oHAtBi, key) {\n    const stringArray = a0_0x2e33();\n    a0_0x2401 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2401(oHAtBi, key);\n}\nconst main = arg => {\n    const _0x2090d4 = a0_0x2401;\n    arg = arg[_0x2090d4(0x0)]()[_0x2090d4(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0][_0x2090d4(0x1)]('\\x20')[0x0]);\n    const W = parseInt(arg[0x0][_0x2090d4(0x1)]('\\x20')[0x1]);\n    const wv = arg['slice'](0x1, N + 0x1)[_0x2090d4(0x2)](n => n[_0x2090d4(0x1)]('\\x20')[_0x2090d4(0x2)](l => parseInt(l)));\n    let dp = [...Array(N + 0x1)][_0x2090d4(0x2)](n => [...Array(W + 0x1)]['fill'](0x0));\n    let answer = 0x0;\n    for (let i = 0x1; i < N + 0x1; i++) {\n        const w = wv[i - 0x1][0x0];\n        const v = wv[i - 0x1][0x1];\n        for (let j = 0x0; j < W + 0x1; j++) {\n            if (w > j) {\n                dp[i][j] = dp[i - 0x1][j];\n            } else {\n                dp[i][j] = Math[_0x2090d4(0x3)](dp[i - 0x1][j], v + dp[i - 0x1][j - w]);\n            }\n            if (dp[i][j] > answer) {\n                answer = dp[i][j];\n            }\n        }\n    }\n    console[_0x2090d4(0x4)](answer);\n};\nfunction a0_0x2e33() {\n    const _0x57b7a2 = [\n        'trim',\n        'split',\n        'map',\n        'max',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2e33 = function () {\n        return _0x57b7a2;\n    };\n    return a0_0x2e33();\n}\nmain(require('fs')['readFileSync'](a0_0x21cf6e(0x5), a0_0x21cf6e(0x6)));", "test_cases": [["4 6\n2 1\n3 4\n4 10\n3 4", "11"], ["4 6\n2 1\n3 7\n4 10\n3 6", "13"], ["4 10\n1 100\n1 100\n1 100\n1 100", "400"], ["4 1\n10 100\n10 100\n10 100\n10 100", "0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const W = parseInt(arg[0].split(\" \")[1]);\n    \n    const wv = arg.slice(1, N + 1).map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    let dp = [...Array(N+1)].map(n=>[...Array(W+1)].fill(0));\n    let answer = 0;\n    \n    for(let i=1; i<N+1; i++) {\n        const w = wv[i-1][0];\n        const v = wv[i-1][1];\n        \n        for(let j=0; j<W+1; j++) {\n            if(w > j) {\n                // 単体で重さオーバーなら前回のを引き継ぐ\n                dp[i][j] = dp[i-1][j];\n            } else {\n                dp[i][j] = Math.max(dp[i-1][j], v + dp[i-1][j - w]);\n            }\n            \n            if(dp[i][j] > answer) {\n                answer = dp[i][j];\n            }\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03779_1", "type": "JavaScript", "obfuscated": "var a0_0x56437b = a0_0x9a8b;\nfunction main(input) {\n    var _0xf977d4 = a0_0x9a8b;\n    var n = input[0x0] - 0x0;\n    var cnt = 0x1;\n    var ans = 0x0;\n    for (cnt = 0x1; ans < n; cnt++) {\n        ans += cnt;\n    }\n    console[_0xf977d4(0x0)](cnt - 0x1);\n}\nfunction a0_0x4874() {\n    var _0x42dcbc = [\n        'log',\n        'utf8',\n        'split'\n    ];\n    a0_0x4874 = function () {\n        return _0x42dcbc;\n    };\n    return a0_0x4874();\n}\nfunction a0_0x9a8b(kzAHty, key) {\n    var stringArray = a0_0x4874();\n    a0_0x9a8b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9a8b(kzAHty, key);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x56437b(0x1))['trim']()[a0_0x56437b(0x2)]('\\x0a'));", "test_cases": [["6", "3"], ["2", "2"], ["11", "5"]], "original": "function main(input) {\n    var n = input[0]-0;\n    var cnt = 1;\n    var ans = 0;\n    for(cnt=1;ans<n;cnt++){\n        ans += cnt;\n    }\n    console.log(cnt-1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03957_1", "type": "JavaScript", "obfuscated": "function a0_0x4faf() {\n    var _0x5580fc = [\n        'split',\n        'length',\n        'Yes',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4faf = function () {\n        return _0x5580fc;\n    };\n    return a0_0x4faf();\n}\nfunction a0_0x9280(iZZFEn, key) {\n    var stringArray = a0_0x4faf();\n    a0_0x9280 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9280(iZZFEn, key);\n}\nvar a0_0x2c4091 = a0_0x9280;\nfunction Main(input) {\n    var _0x1a73bb = a0_0x9280;\n    var input = input[_0x1a73bb(0x0)]('\\x0a');\n    var string = input[0x0];\n    var c, f, Cfound = 0x0;\n    for (var i = 0x0; i < string[_0x1a73bb(0x1)]; i++) {\n        if (string[i] == 'C' && !Cfound) {\n            c = i;\n            Cfound++;\n        }\n        ;\n        if (Cfound && string[i] == 'F') {\n            f = i;\n            return console['log'](_0x1a73bb(0x2));\n        }\n    }\n    ;\n    return console[_0x1a73bb(0x3)]('No');\n}\nMain(require('fs')['readFileSync'](a0_0x2c4091(0x4), a0_0x2c4091(0x5)));", "test_cases": [["CODEFESTIVAL", "Yes"], ["FESTIVALCODE", "No"], ["CF", "Yes"], ["FCF", "Yes"]], "original": "function Main(input) {\n  var input = input.split(\"\\n\");\n  var string = input[0];\n  var c,f,Cfound = 0;\n  for(var i = 0;i < string.length;i++){\n    if(string[i] == \"C\" && !Cfound){\n      c = i;\n      Cfound++;\n    };\n    if(Cfound && string[i] == \"F\"){\n      f = i;\n      return console.log(\"Yes\");\n    }\n  };\n  return console.log(\"No\");\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04034_1", "type": "JavaScript", "obfuscated": "var a0_0x20b301 = a0_0x1564;\ninput = require('fs')[a0_0x20b301(0x0)](a0_0x20b301(0x1), a0_0x20b301(0x2));\nfunction a0_0x5c9a() {\n    var _0x73d3f9 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x5c9a = function () {\n        return _0x73d3f9;\n    };\n    return a0_0x5c9a();\n}\nfunction a0_0x1564(BxgbzS, key) {\n    var stringArray = a0_0x5c9a();\n    a0_0x1564 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1564(BxgbzS, key);\n}\nlines = input[a0_0x20b301(0x3)]('\\x0a');\nline = lines[a0_0x20b301(0x4)]()[a0_0x20b301(0x3)]('\\x20');\nN = line[0x0] * 0x1;\nM = line[0x1] * 0x1;\nb = [];\nr = [];\nfor (i = 0x1; i <= N; i++) {\n    b[i] = 0x1;\n    r[i] = 0x0;\n}\nr[0x1] = 0x1;\nfor (i = 0x0; i < M; i++) {\n    l = lines[i][a0_0x20b301(0x3)]('\\x20');\n    x = l[0x0] * 0x1;\n    y = l[0x1] * 0x1;\n    if (r[x]) {\n        r[y] += 0x1;\n    }\n    if (r[x] && b[x] == 0x1) {\n        r[x] = 0x0;\n    }\n    b[x] -= 0x1;\n    b[y] += 0x1;\n}\ncnt = 0x0;\nfor (i = 0x1; i <= N; i++) {\n    if (r[i] > 0x0) {\n        cnt++;\n    }\n}\nconsole[a0_0x20b301(0x5)](cnt);", "test_cases": [["3 2\n1 2\n2 3", "2"], ["3 3\n1 2\n2 3\n2 3", "1"], ["4 4\n1 2\n2 3\n4 1\n3 4", "3"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nline = lines.shift().split(' ')\nN = line[0] * 1\nM = line[1] * 1\nb = []\nr = []\nfor (i=1; i<=N; i++) {\n    b[i] = 1\n    r[i] = 0\n}\nr[1] = 1\nfor (i=0; i<M; i++) {\n  l = lines[i].split(' ')\n  x = l[0] * 1\n  y = l[1] * 1\n  if (r[x]) {\n      r[y] += 1\n  }\n  if (r[x] && b[x] == 1) {\n      r[x] = 0\n  }\n  b[x] -= 1\n  b[y] += 1\n}\ncnt = 0\nfor (i=1; i<=N; i++) {\n    if (r[i] > 0) {\n        cnt++\n    }\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p00011_1", "type": "JavaScript", "obfuscated": "var a0_0x3b9bf9 = a0_0x2129;\nfunction swap(A, a, b) {\n    var tmp = A[a - 0x1];\n    A[a - 0x1] = A[b - 0x1];\n    A[b - 0x1] = tmp;\n}\nvar input = require('fs')[a0_0x3b9bf9(0x0)](a0_0x3b9bf9(0x1), a0_0x3b9bf9(0x2));\nvar lines = input['split']('\\x0a');\nfunction a0_0x3044() {\n    var _0x4bd405 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x3044 = function () {\n        return _0x4bd405;\n    };\n    return a0_0x3044();\n}\nvar w = lines[a0_0x3b9bf9(0x3)]();\nfunction a0_0x2129(YYEfUd, key) {\n    var stringArray = a0_0x3044();\n    a0_0x2129 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2129(YYEfUd, key);\n}\nvar arr = [];\nfor (var i = 0x0; i < w; i++) {\n    arr['push'](i + 0x1);\n}\nvar n = lines[a0_0x3b9bf9(0x3)]();\nfor (var i = 0x0; i < n; i++) {\n    var nums = lines[a0_0x3b9bf9(0x3)]()[a0_0x3b9bf9(0x4)](',')[a0_0x3b9bf9(0x5)](function (i) {\n        return +i;\n    });\n    swap(arr, nums[0x0], nums[0x1]);\n}\narr['forEach'](function (num) {\n    var _0x4590a5 = a0_0x2129;\n    console[_0x4590a5(0x6)](num);\n});", "test_cases": [["5\n4\n2,4\n3,5\n1,2\n3,4", "4\n1\n2\n5\n3"]], "original": "function swap(A, a, b) {\n\tvar tmp = A[a-1];\n\tA[a-1] = A[b-1];\n\tA[b-1] = tmp;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nvar w = lines.shift();\nvar arr = [];\nfor (var i = 0; i < w; i++) {\n\tarr.push(i + 1);\n}\n\nvar n = lines.shift();\nfor (var i = 0; i < n; i++) {\n\tvar nums = lines.shift().split(',').map(function(i){return +i;});\n\tswap(arr, nums[0], nums[1]);\n}\n\narr.forEach(function(num) {\n\tconsole.log(num);\n});", "language": "JavaScript"}
{"filename": "p00025_1", "type": "JavaScript", "obfuscated": "var a0_0xdc128c = a0_0x47f2;\nvar input = require('fs')[a0_0xdc128c(0x0)]('/dev/stdin', a0_0xdc128c(0x1));\nvar lines = input[a0_0xdc128c(0x2)]('\\x0a');\nfunction a0_0xe3d1() {\n    var _0x2b0573 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'indexOf',\n        'log'\n    ];\n    a0_0xe3d1 = function () {\n        return _0x2b0573;\n    };\n    return a0_0xe3d1();\n}\nfunction a0_0x47f2(sGESmm, key) {\n    var stringArray = a0_0xe3d1();\n    a0_0x47f2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x47f2(sGESmm, key);\n}\nvar imagine;\nwhile (imagine = lines[a0_0xdc128c(0x3)]()) {\n    var guess = lines[a0_0xdc128c(0x3)]();\n    var a = imagine[a0_0xdc128c(0x2)]('\\x20')[a0_0xdc128c(0x4)](function (n) {\n        return +n;\n    });\n    var b = guess[a0_0xdc128c(0x2)]('\\x20')['map'](function (n) {\n        return +n;\n    });\n    var hit = 0x0;\n    for (var i = 0x0; i < 0x4; i++) {\n        if (a[i] == b[i]) {\n            hit++;\n        }\n    }\n    var blow = 0x0;\n    for (var i = 0x0; i < 0x4; i++) {\n        if (a[a0_0xdc128c(0x5)](b[i]) >= 0x0) {\n            blow++;\n        }\n    }\n    blow -= hit;\n    console[a0_0xdc128c(0x6)](hit + '\\x20' + blow);\n}", "test_cases": [["9 1 8 2\n4 1 5 9\n4 6 8 2\n4 6 3 2", "1 1\n3 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nvar imagine;\nwhile (imagine = lines.shift()) {\n\tvar guess = lines.shift();\n\n\tvar a = imagine.split(' ').map(function(n){return +n;});\n\tvar b = guess.split(' ').map(function(n){return +n;});\n\n\tvar hit = 0;\n\tfor (var i = 0; i < 4; i++) {\n\t\tif (a[i] == b[i]) {\n\t\t\thit++;\n\t\t}\n\t}\n\n\tvar blow = 0;\n\tfor (var i = 0; i < 4; i++) {\n\t\tif (a.indexOf(b[i]) >= 0) {\n\t\t\tblow++;\n\t\t}\n\t}\n\tblow -= hit;\n\n\tconsole.log(hit + ' ' + blow);\n}", "language": "JavaScript"}
{"filename": "p00048_1", "type": "JavaScript", "obfuscated": "function a0_0x1f2b(YzQiub, key) {\n    var stringArray = a0_0x478f();\n    a0_0x1f2b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f2b(YzQiub, key);\n}\nvar a0_0x5442f3 = a0_0x1f2b;\nrequire('fs')[a0_0x5442f3(0x0)]('/dev/stdin', a0_0x5442f3(0x1))[a0_0x5442f3(0x2)](/\\s/)['map'](function (i) {\n    var _0x3e0975 = a0_0x1f2b;\n    (j = +i) ? console[_0x3e0975(0x3)](j <= 0x30 ? _0x3e0975(0x4) : j <= 0x33 ? _0x3e0975(0x5) : j <= 0x36 ? 'bantam' : j <= 0x39 ? _0x3e0975(0x6) : j <= 0x3c ? _0x3e0975(0x7) : j <= 0x40 ? _0x3e0975(0x8) : j <= 0x45 ? _0x3e0975(0x9) : j <= 0x4b ? _0x3e0975(0xa) : j <= 0x51 ? _0x3e0975(0xb) : j <= 0x5b ? _0x3e0975(0xc) : _0x3e0975(0xd)) : 0x0;\n});\nfunction a0_0x478f() {\n    var _0x189a09 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'log',\n        'light\\x20fly',\n        'fly',\n        'feather',\n        'light',\n        'light\\x20welter',\n        'welter',\n        'light\\x20middle',\n        'middle',\n        'light\\x20heavy',\n        'heavy'\n    ];\n    a0_0x478f = function () {\n        return _0x189a09;\n    };\n    return a0_0x478f();\n}", "test_cases": [["60.2\n70.2\n48.0\n80.2", "light welter\nlight middle\nlight fly\nmiddle"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s/).map(function(i){(j=+i)?console.log(j<=48?'light fly':j<=51?'fly':j<=54?'bantam':j<=57?'feather':j<=60?'light':j<=64?'light welter':j<=69?'welter':j<=75?'light middle':j<=81?'middle':j<=91?'light heavy':'heavy'):0})", "language": "JavaScript"}
{"filename": "p00104_1", "type": "JavaScript", "obfuscated": "var a0_0x418a41 = a0_0x5b9b;\nprocess[a0_0x418a41(0x0)][a0_0x418a41(0x1)]();\nfunction a0_0x5b9b(XJsNPc, key) {\n    var stringArray = a0_0xe3ae();\n    a0_0x5b9b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b9b(XJsNPc, key);\n}\nfunction a0_0xe3ae() {\n    var _0x59a2b6 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'data',\n        'trim',\n        'length',\n        'split',\n        'qxHIs',\n        'log',\n        'wQBtC',\n        'LOOP'\n    ];\n    a0_0xe3ae = function () {\n        return _0x59a2b6;\n    };\n    return a0_0xe3ae();\n}\nprocess[a0_0x418a41(0x0)][a0_0x418a41(0x2)]('utf8');\nprocess['stdin']['on'](a0_0x418a41(0x3), function (chunk) {\n    var _0x3765bc = a0_0x5b9b;\n    main(chunk[_0x3765bc(0x4)]());\n});\nfunction main(chunk) {\n    var _0x4d772d = a0_0x5b9b;\n    var lines = chunk['split']('\\x0a');\n    for (var n = 0x0; n < lines[_0x4d772d(0x5)] - 0x1;) {\n        var H = Number(lines[n][_0x4d772d(0x6)]('\\x20')[0x0]);\n        var W = Number(lines[n][_0x4d772d(0x6)]('\\x20')[0x1]);\n        var map = [];\n        n++;\n        for (var i = 0x0; i < H; i++) {\n            if ('dZmsj' !== _0x4d772d(0x7)) {\n                map[i] = lines[n][_0x4d772d(0x6)]('');\n                n++;\n            } else {\n                map[i] = lines[n][_0x4d772d(0x6)]('');\n                n++;\n            }\n        }\n        console[_0x4d772d(0x8)](calc(map, 0x0, 0x0));\n    }\n}\nfunction calc(map, h, w) {\n    var _0x4bbafb = a0_0x5b9b;\n    if (map[h][w] == '.') {\n        if (_0x4bbafb(0x9) === 'faZGf') {\n            var H = Number(lines[n]['split']('\\x20')[0x0]);\n            var W = Number(lines[n]['split']('\\x20')[0x1]);\n            var map = [];\n            n++;\n            for (var i = 0x0; i < H; i++) {\n                map[i] = lines[n][_0x4bbafb(0x6)]('');\n                n++;\n            }\n            console[_0x4bbafb(0x8)](calc(map, 0x0, 0x0));\n        } else {\n            return w + '\\x20' + h;\n        }\n    }\n    if (map[h][w] == '1') {\n        return _0x4bbafb(0xa);\n    }\n    switch (map[h][w]) {\n    case '>':\n        map[h][w] = '1';\n        return calc(map, h, w + 0x1);\n    case '<':\n        map[h][w] = '1';\n        return calc(map, h, w - 0x1);\n    case 'v':\n        map[h][w] = '1';\n        return calc(map, h + 0x1, w);\n    case '^':\n        map[h][w] = '1';\n        return calc(map, h - 0x1, w);\n    }\n}", "test_cases": [["10 10\n>>>v..>>>v\n...v..^..v\n>>>>>>^..v\n.........v\n.v<<<<...v\n.v.v.^...v\n.v.v.^<<<<\n.v.v.....v\n.v...^...v\n.>>>>^....\n6 10\n>>>>>>>>>v\n.........v\n.........v\n>>>>v....v\n^...v....v\n^<<<<<<<<<\n0 0", "5 7\nLOOP"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n    main(chunk.trim());\n});\n\nfunction main(chunk){\n    var lines = chunk.split(\"\\n\");\n    for(var n=0;n<lines.length-1;){\n        var H = Number(lines[n].split(\" \")[0]);\n        var W = Number(lines[n].split(\" \")[1]);\n        var map = [];\n        n++;\n        for(var i=0;i<H;i++){\n            map[i] = lines[n].split(\"\");\n            n++;\n        }\n        console.log(calc(map,0,0));\n    }\n}\nfunction calc(map,h,w){\n    if(map[h][w] == \".\"){\n        return w + \" \"+ h;\n    }\n    if(map[h][w] == \"1\"){\n        return \"LOOP\";\n    }\n    switch(map[h][w]){\n    case '>':\n        map[h][w] = \"1\";\n        return calc(map,h,w+1);\n    case '<':\n        map[h][w] = \"1\";\n        return calc(map,h,w-1);\n    case 'v':\n        map[h][w] = \"1\";\n        return calc(map,h+1,w);\n    case '^':\n        map[h][w] = \"1\";\n        return calc(map,h-1,w);\n    }\n}", "language": "JavaScript"}
{"filename": "p00122_1", "type": "JavaScript", "obfuscated": "function a0_0x7ac4(WCapMD, key) {\n    var stringArray = a0_0x409f();\n    a0_0x7ac4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7ac4(WCapMD, key);\n}\nvar a0_0x5b4243 = a0_0x7ac4;\nfunction bomb(x, y, z) {\n    var _0xa24cf8 = a0_0x7ac4;\n    max = Math['max'](max, z);\n    if (max == n)\n        return;\n    var dx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x2,\n        0x2,\n        -0x2,\n        0x2,\n        -0x2,\n        0x2,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    var dy = [\n        -0x2,\n        -0x2,\n        -0x2,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x2,\n        0x2,\n        0x2\n    ];\n    var Safe = {};\n    for (var i = -0x1; i <= 0x1; i++) {\n        for (var j = -0x1; j <= 0x1; j++) {\n            Safe[water[z * 0x2] + i + '\\x20' + (water[z * 0x2 + 0x1] + j)] = !![];\n        }\n    }\n    for (var i = 0x0; i < 0xc; i++) {\n        var xx = x + dx[i];\n        var yy = y + dy[i];\n        if (xx < 0x0 || yy < 0x0 || xx >= 0xa || yy >= 0xa)\n            continue;\n        if (Safe[_0xa24cf8(0x0)](xx + '\\x20' + yy))\n            bomb(xx, yy, z + 0x1);\n    }\n}\nvar input = require('fs')[a0_0x5b4243(0x1)](a0_0x5b4243(0x2), 'utf8');\nfunction a0_0x409f() {\n    var _0x11a977 = [\n        'hasOwnProperty',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x409f = function () {\n        return _0x11a977;\n    };\n    return a0_0x409f();\n}\nvar Arr = input[a0_0x5b4243(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var xy = Arr[a0_0x5b4243(0x4)]()[a0_0x5b4243(0x5)]('\\x20')[a0_0x5b4243(0x6)](Number);\n    if (xy[0x0] == 0x0 && xy[0x1] == 0x0)\n        break;\n    var map = [\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        []\n    ];\n    var n = Arr[a0_0x5b4243(0x4)]() - 0x0;\n    var water = Arr['shift']()[a0_0x5b4243(0x5)]('\\x20')['map'](Number);\n    var max = 0x0;\n    bomb(xy[0x0], xy[0x1], 0x0);\n    console[a0_0x5b4243(0x7)](max == n ? 'OK' : 'NA');\n}", "test_cases": [["6 1\n10\n6 4 3 3 1 2 0 5 4 6 1 8 5 9 7 7 8 6 8 3\n6 1\n10\n6 4 3 3 1 2 0 5 4 6 1 8 5 9 7 7 8 6 9 0\n0 0", "OK\nNA"]], "original": "function bomb(x,y,z){\n   max=Math.max(max,z);\n   if(max==n)return;\n   var dx=[-1,0,1,-2,2,-2,2,-2,2,-1,0,1];\n   var dy=[-2,-2,-2,-1,-1,0,0,1,1,2,2,2];\n   var Safe={};\n   for(var i=-1;i<=1;i++){\n      for(var j=-1;j<=1;j++){\n         Safe[(water[z*2]+i)+\" \"+(water[z*2+1]+j)]=true;\n      }\n   }\n   for(var i=0;i<12;i++){\n      var xx=x+dx[i];\n      var yy=y+dy[i];\n      if(xx<0 || yy<0 || xx>=10 || yy>=10)continue;\n      if(Safe.hasOwnProperty(xx+\" \"+yy))bomb(xx,yy,z+1);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var xy=(Arr.shift()).split(\" \").map(Number);\n   if(xy[0]==0 && xy[1]==0)break;\n   var map=[[],[],[],[],[],[],[],[],[],[]];\n   var n=Arr.shift()-0;\n   var water=(Arr.shift()).split(\" \").map(Number);\n   var max=0;\n   bomb(xy[0],xy[1],0);\n   console.log((max==n)?\"OK\":\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00201_1", "type": "JavaScript", "obfuscated": "var a0_0x443bcf = a0_0xf19b;\nfunction bomb(name) {\n    var _0x6df2e9 = a0_0xf19b;\n    var min = obj[name];\n    M[_0x6df2e9(0x0)](function (v) {\n        var _0x5df13e = a0_0xf19b;\n        if (name == v[0x0]) {\n            var sum = 0x0;\n            v[0x1][_0x5df13e(0x0)](function (value) {\n                sum += bomb(value);\n            });\n            min = Math['min'](min, sum);\n        }\n    });\n    return min;\n}\nvar input = require('fs')['readFileSync'](a0_0x443bcf(0x1), a0_0x443bcf(0x2));\nfunction a0_0x4854() {\n    var _0x28f43a = [\n        'forEach',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push'\n    ];\n    a0_0x4854 = function () {\n        return _0x28f43a;\n    };\n    return a0_0x4854();\n}\nvar arr = input[a0_0x443bcf(0x3)]()[a0_0x443bcf(0x4)]('\\x0a');\nfunction a0_0xf19b(adYcNN, key) {\n    var stringArray = a0_0x4854();\n    a0_0xf19b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf19b(adYcNN, key);\n}\nwhile (!![]) {\n    var n = arr[a0_0x443bcf(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var obj = {};\n    for (var i = 0x0; i < n; i++) {\n        var data = arr['shift']()[a0_0x443bcf(0x4)]('\\x20');\n        obj[data[0x0]] = data[0x1] - 0x0;\n    }\n    var m = arr[a0_0x443bcf(0x5)]() - 0x0;\n    var M = [];\n    for (var i = 0x0; i < m; i++) {\n        var data = arr[a0_0x443bcf(0x5)]()[a0_0x443bcf(0x4)]('\\x20');\n        var name = data[a0_0x443bcf(0x5)]();\n        data[a0_0x443bcf(0x5)]();\n        M[a0_0x443bcf(0x6)]([\n            name,\n            data\n        ]);\n    }\n    var item = arr[a0_0x443bcf(0x5)]();\n    console['log'](bomb(item));\n}", "test_cases": [["8\nwood 3000\nstring 800\nrice 36\nwater 0\nracket 5000\nmicrophone 9800\nonigiri 140\nguitar 98000\n3\nracket 2 wood string\nonigiri 2 rice water\nguitar 3 racket microphone onigiri\nguitar\n1\ncomputer 300000\n0\ncomputer\n0", "13636\n300000"]], "original": "function bomb(name){\n   var min=obj[name];\n   M.forEach(function(v){\n      if(name==v[0]){\n         var sum=0;\n         v[1].forEach(function(value){\n            sum+=bomb(value);\n         });\n         min=Math.min(min,sum);\n      }\n   });\n   return min;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var obj={};\n   for(var i=0;i<n;i++){\n      var data=arr.shift().split(\" \");\n      obj[data[0]]=data[1]-0;\n   }\n   var m=arr.shift()-0;\n   var M=[];\n   for(var i=0;i<m;i++){\n      var data=arr.shift().split(\" \");\n      var name=data.shift();\n      data.shift();\n      M.push([name,data]);\n   }\n   var item=arr.shift();\n   console.log(bomb(item));\n}", "language": "JavaScript"}
{"filename": "p00203_1", "type": "JavaScript", "obfuscated": "var a0_0x4f5cdf = a0_0x450f;\nfunction bomb(y, x) {\n    var _0x4c10e9 = a0_0x450f;\n    if (yx[y][x] == 0x1)\n        return;\n    else if (yx[y][x] == 0x2) {\n        var Y = y + 0x2;\n        var X = x;\n        if (Y >= h) {\n            cnt++;\n            return;\n        }\n        bomb(Y, X);\n    } else if (yx[y][x] == 0x0) {\n        var dx = [\n            -0x1,\n            0x0,\n            0x1\n        ];\n        for (var i = 0x0; i < dx[_0x4c10e9(0x0)]; i++) {\n            var Y = y + 0x1;\n            var X = x + dx[i];\n            if (X < 0x0 || X >= w)\n                continue;\n            if (Y >= h) {\n                cnt++;\n                return;\n            }\n            if (yx[Y][X] == 0x2 && dx[i] != 0x0)\n                continue;\n            bomb(Y, X);\n        }\n    }\n}\nfunction a0_0x310f() {\n    var _0x514521 = [\n        'length',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'push'\n    ];\n    a0_0x310f = function () {\n        return _0x514521;\n    };\n    return a0_0x310f();\n}\nvar input = require('fs')['readFileSync'](a0_0x4f5cdf(0x1), a0_0x4f5cdf(0x2));\nfunction a0_0x450f(RsMkvq, key) {\n    var stringArray = a0_0x310f();\n    a0_0x450f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x450f(RsMkvq, key);\n}\nvar arr = input[a0_0x4f5cdf(0x3)]()[a0_0x4f5cdf(0x4)]('\\x0a');\nwhile (!![]) {\n    var wh = arr[a0_0x4f5cdf(0x5)]()[a0_0x4f5cdf(0x4)]('\\x20')[a0_0x4f5cdf(0x6)](Number);\n    var w = wh[0x0];\n    var h = wh[0x1];\n    if (w == 0x0 && h == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < h; i++)\n        yx[a0_0x4f5cdf(0x7)](arr[a0_0x4f5cdf(0x5)]()['split']('\\x20')[a0_0x4f5cdf(0x6)](Number));\n    var cnt = 0x0;\n    for (var i = 0x0; i < w; i++) {\n        bomb(0x0, i);\n    }\n    console['log'](cnt);\n}", "test_cases": [["5 5\n0 0 0 0 1\n2 1 0 2 0\n1 0 0 1 1\n0 2 1 2 0\n0 1 0 0 0\n5 5\n0 0 1 0 0\n2 1 0 2 0\n1 0 0 1 1\n0 2 1 2 0\n0 1 0 0 0\n15 15\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0", "8\n6\n52694573"]], "original": "function bomb(y,x){\n   if(yx[y][x]==1)return;\n   else if(yx[y][x]==2){\n      var Y=y+2;\n      var X=x;\n      if(Y>=h){cnt++;return;}\n      bomb(Y,X);\n   }\n   else if(yx[y][x]==0){\n      var dx=[-1,0,1];\n      for(var i=0;i<dx.length;i++){\n         var Y=y+1;\n         var X=x+dx[i];\n         if(X<0 || X>=w)continue;\n         if(Y>=h){cnt++;return;}\n         if(yx[Y][X]==2 && dx[i]!=0)continue;\n         bomb(Y,X);\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift().split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   if(w==0 && h==0)break;\n   var yx=[];\n   for(var i=0;i<h;i++)yx.push(arr.shift().split(\" \").map(Number));\n   var cnt=0;\n   for(var i=0;i<w;i++){\n      bomb(0,i);\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00380_1", "type": "JavaScript", "obfuscated": "var a0_0x4b590d = a0_0xef1d;\nfunction a0_0x1800() {\n    var _0x5a98c5 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'sort',\n        'length',\n        'keys',\n        'log'\n    ];\n    a0_0x1800 = function () {\n        return _0x5a98c5;\n    };\n    return a0_0x1800();\n}\nvar input = require('fs')[a0_0x4b590d(0x0)]('/dev/stdin', a0_0x4b590d(0x1));\nvar arr = input[a0_0x4b590d(0x2)]()[a0_0x4b590d(0x3)]('\\x0a');\nvar n = arr[a0_0x4b590d(0x4)]() - 0x0;\nvar a = arr[a0_0x4b590d(0x4)]()[a0_0x4b590d(0x3)]('\\x20')[a0_0x4b590d(0x5)](Number);\nvar b = a['slice']()[a0_0x4b590d(0x6)]((x, y) => x - y);\nvar q = arr[a0_0x4b590d(0x4)]() - 0x0;\nvar xy = arr['map'](v => v[a0_0x4b590d(0x3)]('\\x20')[a0_0x4b590d(0x5)](Number)[a0_0x4b590d(0x5)](v => v - 0x1));\nxy['unshift']([\n    0x0,\n    0x0\n]);\nvar A = {};\nfunction a0_0xef1d(zUNczv, key) {\n    var stringArray = a0_0x1800();\n    a0_0xef1d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xef1d(zUNczv, key);\n}\nvar B = {};\nfor (var i = 0x0; i < a[a0_0x4b590d(0x7)]; i++) {\n    if (a[i] != b[i]) {\n        A[i] = a[i];\n        B[i] = b[i];\n    }\n}\nvar BB = '';\nfor (var k in B)\n    BB += B[k];\nvar flag = ![];\nfor (var i = 0x0; i <= q; i++) {\n    [A[xy[i][0x0]], A[xy[i][0x1]]] = [\n        A[xy[i][0x1]],\n        A[xy[i][0x0]]\n    ];\n    var AA = '';\n    for (var k in A)\n        AA += A[k];\n    if (AA == BB) {\n        flag = !![];\n        break;\n    }\n}\nif (Object[a0_0x4b590d(0x8)](A)[a0_0x4b590d(0x7)] == 0x0)\n    console['log'](0x0);\nelse if (flag)\n    console[a0_0x4b590d(0x9)](i);\nelse\n    console[a0_0x4b590d(0x9)](-0x1);", "test_cases": [["6\n9 7 5 6 3 1\n3\n1 6\n2 5\n3 4", "2"], ["4\n4 3 2 1\n2\n1 2\n3 4", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar b=a.slice().sort((x,y)=> x-y);\nvar q=arr.shift()-0;\nvar xy=arr.map(v=> v.split(\" \").map(Number).map(v=>v-1));\nxy.unshift([0,0]);\nvar A={};\nvar B={};\nfor(var i=0;i<a.length;i++){\n   if(a[i]!=b[i]){\n      A[i]=a[i];\n      B[i]=b[i];\n   }\n}\nvar BB=\"\";\nfor(var k in B)BB+=B[k];\nvar flag=false;\nfor(var i=0;i<=q;i++){\n   [A[xy[i][0]],A[xy[i][1]] ]= [A[xy[i][1]],A[xy[i][0]]];\n   var AA=\"\";\n   for(var k in A)AA+=A[k];\n   if(AA==BB){\n      flag=true;\n      break;\n   }\n}\nif(Object.keys(A).length==0)console.log(0);\nelse if(flag)console.log(i);\nelse console.log(-1);\n", "language": "JavaScript"}
{"filename": "p00669_1", "type": "JavaScript", "obfuscated": "var a0_0x511813 = a0_0x7116;\nfunction maxCards(arr, max) {\n    var _0x25dbbb = a0_0x7116;\n    for (var i = 0x0; i < n - (k - 0x1); i++) {\n        var x = 0x1;\n        var j = 0x0;\n        while (j < k) {\n            if (_0x25dbbb(0x0) === 'pbSzz') {\n                x *= arr[i + j];\n                j++;\n            } else {\n                c[_0x25dbbb(0x1)](Arr[I]);\n                I++;\n            }\n        }\n        max = Math[_0x25dbbb(0x2)](max, x);\n    }\n    return max;\n}\nfunction a0_0xb183() {\n    var _0x37a55c = [\n        'pbSzz',\n        'push',\n        'max',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'log',\n        'NO\\x20GAME'\n    ];\n    a0_0xb183 = function () {\n        return _0x37a55c;\n    };\n    return a0_0xb183();\n}\nvar input = require('fs')['readFileSync'](a0_0x511813(0x3), a0_0x511813(0x4));\nvar Arr = input['trim']()[a0_0x511813(0x5)]('\\x0a');\nvar I = 0x0;\nfunction a0_0x7116(BVAuZV, key) {\n    var stringArray = a0_0xb183();\n    a0_0x7116 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7116(BVAuZV, key);\n}\nwhile (!![]) {\n    var nk = Arr[I][a0_0x511813(0x5)]('\\x20')['map'](Number);\n    I++;\n    var n = nk[0x0];\n    var k = nk[0x1];\n    if (n == 0x0 && k == 0x0)\n        break;\n    var c = [];\n    for (var i = 0x0; i < n; i++) {\n        c[a0_0x511813(0x1)](Arr[I]);\n        I++;\n    }\n    var maxA = 0x1;\n    maxA = maxCards(c, maxA);\n    var maxB = 0x1;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = i + 0x1; j < n; j++) {\n            var memo = c[i];\n            c[i] = c[j];\n            c[j] = memo;\n            maxB = maxCards(c, maxB);\n            c[j] = c[i];\n            c[i] = memo;\n        }\n    }\n    console[a0_0x511813(0x6)](maxA > maxB ? a0_0x511813(0x7) : maxB - maxA);\n}", "test_cases": [["4 2\n2\n3\n7\n5\n0 0", "0"]], "original": "function maxCards(arr,max){\n   for(var i=0;i<n-(k-1);i++){\n      var x=1;\n      var j=0;\n      while(j<k){\n         x*=arr[i+j];\n         j++;\n      }\n      max=Math.max(max,x);\n   }\n   return max;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=0;\nwhile(true){\n   var nk=Arr[I].split(\" \").map(Number);\n   I++;\n   var n=nk[0];\n   var k=nk[1];\n   if(n==0 && k==0)break;\n   var c=[];\n   for(var i=0;i<n;i++){\n      c.push(Arr[I]);\n      I++;\n   }\n   var maxA=1;\n   maxA=maxCards(c,maxA);\n   var maxB=1;\n   for(var i=0;i<n;i++){\n      for(var j=i+1;j<n;j++){\n         var memo=c[i];\n         c[i]=c[j];\n         c[j]=memo;\n         maxB=maxCards(c,maxB);\n         c[j]=c[i];\n         c[i]=memo;\n      }\n   }\n   console.log((maxA>maxB)?\"NO GAME\":maxB-maxA);\n}", "language": "JavaScript"}
{"filename": "p02399_1", "type": "JavaScript", "obfuscated": "var a0_0x4255c1 = a0_0xf0a2;\nvar x = require('fs')['readFileSync'](a0_0x4255c1(0x0), a0_0x4255c1(0x1));\nvar array = x[a0_0x4255c1(0x2)]('\\x20')[a0_0x4255c1(0x3)](Number);\nvar a = array[0x0];\nvar b = array[0x1];\nvar d = Math['floor'](a / b);\nfunction a0_0x4ecc() {\n    var _0x363daa = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'toFixed',\n        'log'\n    ];\n    a0_0x4ecc = function () {\n        return _0x363daa;\n    };\n    return a0_0x4ecc();\n}\nvar r = a % b;\nvar f = (a / b)[a0_0x4255c1(0x4)](0x5);\nfunction a0_0xf0a2(TywILx, key) {\n    var stringArray = a0_0x4ecc();\n    a0_0xf0a2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf0a2(TywILx, key);\n}\nconsole[a0_0x4255c1(0x5)](d + '\\x20' + r + '\\x20' + f);", "test_cases": [["3 2", "1 1 1.50000"]], "original": "var x = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar array = x.split(\" \").map(Number);\n\nvar a = array[0];\nvar b = array[1];\nvar d = Math.floor( a / b);\nvar r = a % b;\nvar f = ( a / b ).toFixed(5);\n\nconsole.log(d + \" \" + r + \" \" + f);\n\n", "language": "JavaScript"}
{"filename": "p02731_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x64b7a1 = a0_0x5bfc;\nfunction a0_0x5bfc(EShGcP, key) {\n    var stringArray = a0_0x2e43();\n    a0_0x5bfc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5bfc(EShGcP, key);\n}\nfunction a0_0x2e43() {\n    var _0x3c477 = [\n        'log',\n        'toFixed',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2e43 = function () {\n        return _0x3c477;\n    };\n    return a0_0x2e43();\n}\nfunction Main(input) {\n    var _0x2d8da6 = a0_0x5bfc;\n    input = input['split']('\\x0a');\n    var volume = input / 0x3 * input / 0x3 * input / 0x3;\n    console[_0x2d8da6(0x0)](volume[_0x2d8da6(0x1)](0xc));\n}\nMain(require('fs')['readFileSync'](a0_0x64b7a1(0x2), a0_0x64b7a1(0x3)));", "test_cases": [["3", "1.000000000000"], ["999", "36926037.000000000000"]], "original": "\"use strict\";\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var volume=input/3*input/3*input/3;\n  console.log(volume.toFixed(12));\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03132_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x15c8() {\n    const _0xacf5f5 = [\n        'split',\n        'map',\n        'fill',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x15c8 = function () {\n        return _0xacf5f5;\n    };\n    return a0_0x15c8();\n}\nconst a0_0x1db9ef = a0_0x562f;\nfunction a0_0x562f(IYgGkf, key) {\n    const stringArray = a0_0x15c8();\n    a0_0x562f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x562f(IYgGkf, key);\n}\nfunction main(input) {\n    const _0xf142f3 = a0_0x562f;\n    const inputs = input[_0xf142f3(0x0)]('\\x0a');\n    const L = Number(inputs[0x0]);\n    const A = [];\n    for (let i = 0x0; i < L; i++) {\n        A['push'](Number(inputs[i + 0x1]));\n    }\n    const dp = Array(L + 0x1)['fill']()[_0xf142f3(0x1)](() => Array(0x5)[_0xf142f3(0x2)]());\n    dp[0x0] = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let i = 0x1; i <= L; i++) {\n        let cur = A[i - 0x1];\n        let curEven = A[i - 0x1] === 0x0 ? 0x2 : cur % 0x2;\n        let curOdd = (cur + 0x1) % 0x2;\n        dp[i][0x0] = dp[i - 0x1][0x0] + cur;\n        dp[i][0x1] = Math[_0xf142f3(0x3)](dp[i - 0x1][0x0], dp[i - 0x1][0x1]) + curEven;\n        dp[i][0x2] = Math[_0xf142f3(0x3)](dp[i - 0x1][0x0], dp[i - 0x1][0x1], dp[i - 0x1][0x2]) + curOdd;\n        dp[i][0x3] = Math[_0xf142f3(0x3)](dp[i - 0x1][0x2], dp[i - 0x1][0x3]) + curEven;\n        dp[i][0x4] = Math[_0xf142f3(0x3)](dp[i - 0x1][0x2], dp[i - 0x1][0x3], dp[i - 0x1][0x4]) + cur;\n    }\n    console[_0xf142f3(0x4)](Math[_0xf142f3(0x3)](...dp[L]));\n}\nmain(require('fs')[a0_0x1db9ef(0x5)](a0_0x1db9ef(0x6), a0_0x1db9ef(0x7)));", "test_cases": [["4\n1\n0\n2\n3", "1"], ["8\n2\n0\n0\n2\n1\n3\n4\n1", "3"], ["7\n314159265\n358979323\n846264338\n327950288\n419716939\n937510582\n0", "1"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\");\n  const L = Number(inputs[0]);\n\n  const A = [];\n  for (let i = 0; i < L ; i++) {\n    A.push( Number(inputs[i+1]));\n  }\n  \n  const dp = Array(L + 1).fill().map(() => Array(5).fill());\n  dp[0] = [0, 0, 0, 0, 0];\n\n  for (let i = 1; i <= L; i++) {\n    let cur = A[i-1];\n    let curEven = A[i-1] === 0 ? 2 : cur % 2;\n    let curOdd = (cur + 1) % 2;\n\n    dp[i][0] = dp[i-1][0] + cur;\n    dp[i][1] = Math.min(dp[i-1][0], dp[i-1][1]) + curEven;\n    dp[i][2] = Math.min(dp[i-1][0], dp[i-1][1], dp[i-1][2]) + curOdd;\n    dp[i][3] = Math.min(dp[i-1][2], dp[i-1][3]) + curEven;\n    dp[i][4] = Math.min(dp[i-1][2], dp[i-1][3], dp[i-1][4]) + cur;\n  }\n\n  console.log(Math.min(...dp[L]));\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03213_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x384626 = a0_0x366d;\nfunction a0_0x366d(cCpCjM, key) {\n    const stringArray = a0_0x19e7();\n    a0_0x366d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x366d(cCpCjM, key);\n}\nfunction a0_0x19e7() {\n    const _0x442f07 = [\n        'split',\n        'fill',\n        'reduce',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x19e7 = function () {\n        return _0x442f07;\n    };\n    return a0_0x19e7();\n}\nfunction Main(input) {\n    const _0x388f37 = a0_0x366d;\n    const N = input[_0x388f37(0x0)]('\\x0a')[0x0] - 0x0;\n    let e = new Array(N + 0x1)[_0x388f37(0x1)](0x0);\n    for (let i = 0x2; i <= N; i++) {\n        let cur = i;\n        for (let j = 0x2; j <= i; j++) {\n            while (cur % j == 0x0) {\n                e[j] += 0x1;\n                cur /= j;\n            }\n        }\n    }\n    const num = m => e[_0x388f37(0x2)]((ac, x) => ac + (x >= m - 0x1 ? 0x1 : 0x0), 0x0);\n    let l75 = num(0x4b);\n    let l25 = num(0x19);\n    let l15 = num(0xf);\n    let l5 = num(0x5);\n    let l3 = num(0x3);\n    let r5x5x3 = l5 * (l5 - 0x1) * (l3 - 0x2) / 0x2;\n    let r15x5 = l15 * (l5 - 0x1);\n    let r25x3 = l25 * (l3 - 0x1);\n    let r75 = l75;\n    console['log'](r75 + r25x3 + r15x5 + r5x5x3);\n}\nMain(require('fs')['readFileSync'](a0_0x384626(0x3), a0_0x384626(0x4)));", "test_cases": [["9", "0"], ["10", "1"], ["100", "543"]], "original": "\"use strict\";\nfunction Main(input) {\n    const N = input.split(\"\\n\")[0] - 0;\n    let e = new Array(N + 1).fill(0);\n    for (let i = 2; i <= N; i++) {\n        let cur = i;\n        for (let j = 2; j <= i; j++) {\n            while (cur % j == 0) {\n                e[j] += 1;\n                cur /= j;\n            }\n        }\n    }\n    const num = (m) => e.reduce((ac, x) => ac + ((x >= m - 1) ? 1 : 0), 0);\n    let l75 = num(75);\n    let l25 = num(25);\n    let l15 = num(15);\n    let l5 = num(5);\n    let l3 = num(3);\n    let r5x5x3 = (l5 * (l5 - 1) * (l3 - 2)) / 2;\n    let r15x5 = l15 * (l5 - 1);\n    let r25x3 = l25 * (l3 - 1);\n    let r75 = l75;\n    console.log(r75 + r25x3 + r15x5 + r5x5x3);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03291_1", "type": "JavaScript", "obfuscated": "var a0_0x443662 = a0_0x2d2b;\nvar line;\nvar S;\nvar MOD = Math[a0_0x443662(0x0)](0xa, 0x9) + 0x7;\nvar readline = require(a0_0x443662(0x1));\nvar rl = readline[a0_0x443662(0x2)]({\n    'input': process[a0_0x443662(0x3)],\n    'output': process['stdout']\n});\nrl['on'](a0_0x443662(0x4), function (x) {\n    line = x;\n});\nfunction a0_0x2d2b(NZBHaL, key) {\n    var stringArray = a0_0x2124();\n    a0_0x2d2b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d2b(NZBHaL, key);\n}\nfunction a0_0x2124() {\n    var _0x291b67 = [\n        'pow',\n        'readline',\n        'createInterface',\n        'stdin',\n        'line',\n        'close',\n        'split',\n        'length',\n        'fill',\n        'xaxfy',\n        'rQnlj',\n        'ABC',\n        'log'\n    ];\n    a0_0x2124 = function () {\n        return _0x291b67;\n    };\n    return a0_0x2124();\n}\nrl['on'](a0_0x443662(0x5), function () {\n    var _0x258306 = a0_0x2d2b;\n    S = line[_0x258306(0x6)]('');\n    dp = Array(S[_0x258306(0x7)] + 0x1);\n    for (var i = 0x0; i <= S['length']; i++) {\n        dp[i] = Array(0x3 + 0x1)[_0x258306(0x8)](0x0);\n    }\n    for (var i = S[_0x258306(0x7)]; i >= 0x0; i--) {\n        for (var j = 0x3; j >= 0x0; j--) {\n            if (i === S['length']) {\n                dp[i][j] = j === 0x3 ? 0x1 : 0x0;\n            } else {\n                if (_0x258306(0x9) === _0x258306(0xa)) {\n                    dp[i][j] = j === 0x3 ? 0x1 : 0x0;\n                } else {\n                    dp[i][j] = dp[i + 0x1][j] * (S[i] === '?' ? 0x3 : 0x1);\n                    if (j < 0x3 && (S[i] === '?' || S[i] === _0x258306(0xb)[j])) {\n                        dp[i][j] += dp[i + 0x1][j + 0x1];\n                    }\n                    dp[i][j] %= MOD;\n                }\n            }\n        }\n    }\n    console[_0x258306(0xc)](dp[0x0][0x0]);\n});", "test_cases": [["A??C", "8"], ["ABCBC", "3"], ["????C?????B??????A???????", "979596887"]], "original": "var line; var S;\nvar MOD = Math.pow(10, 9) + 7;\n\nvar readline = require('readline');\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    line = x;\n});\n\nrl.on('close', function () {\n    S = line.split(\"\");\n    dp = Array(S.length + 1);\n    \n    for (var i = 0; i <= S.length; i++) {\n        dp[i] = Array(3 + 1).fill(0);\n    }\n\n    for (var i = S.length; i >= 0; i--) {\n        for (var j = 3; j >= 0; j--) {\n            if (i === S.length) { dp[i][j] = (j === 3 ? 1 : 0); }\n            else {\n                dp[i][j] = dp[i + 1][j] * (S[i] === '?' ? 3 : 1);\n                if (j < 3 && (S[i] === '?' || S[i] === \"ABC\"[j])) {\n                    dp[i][j] += dp[i + 1][j + 1];\n                }\n                dp[i][j] %= MOD;\n            }\n        }\n    }\n    console.log(dp[0][0]);\n});\n", "language": "JavaScript"}
{"filename": "p03302_1", "type": "JavaScript", "obfuscated": "var a0_0xe3581c = a0_0x3862;\nfunction Main(s) {\n    var _0x2fdf05 = a0_0x3862;\n    s = s[_0x2fdf05(0x0)]('\\x20')[_0x2fdf05(0x1)](a => +a);\n    var ans = 'x';\n    if (s[0x0] + s[0x1] === 0xf)\n        ans = '+';\n    if (s[0x0] * s[0x1] === 0xf)\n        ans = '*';\n    console['log'](ans);\n}\nfunction a0_0x2586() {\n    var _0x4bcfb1 = [\n        'split',\n        'map',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2586 = function () {\n        return _0x4bcfb1;\n    };\n    return a0_0x2586();\n}\nfunction a0_0x3862(QRlYRk, key) {\n    var stringArray = a0_0x2586();\n    a0_0x3862 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3862(QRlYRk, key);\n}\nMain(require('fs')['readFileSync'](a0_0xe3581c(0x2), a0_0xe3581c(0x3)));", "test_cases": [["4 11", "+"], ["3 5", "*"], ["1 1", "x"]], "original": "function Main(s){\n  s = s.split(\" \").map(a=>+a);\n  var ans = \"x\";\n  if(s[0] + s[1] === 15)ans = \"+\";\n  if(s[0] * s[1] === 15)ans = \"*\";\n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03303_1", "type": "JavaScript", "obfuscated": "function a0_0x5316() {\n    var _0x996d02 = [\n        'log',\n        'split',\n        'yvexu',\n        'slice',\n        'length',\n        'Yiglt',\n        'push',\n        'shift',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x5316 = function () {\n        return _0x996d02;\n    };\n    return a0_0x5316();\n}\nfunction a0_0x1958(BhAnnz, key) {\n    var stringArray = a0_0x5316();\n    a0_0x1958 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1958(BhAnnz, key);\n}\nvar a0_0x30e7c6 = a0_0x1958;\nfunction myout(text) {\n    var _0x5e85ff = a0_0x1958;\n    console[_0x5e85ff(0x0)](text);\n}\nfunction Main(input) {\n    var _0xa44253 = a0_0x1958;\n    input = input[_0xa44253(0x1)]('\\x0a');\n    var S = input[0x0];\n    var w = parseInt(input[0x1]);\n    if (w == 0x1) {\n        if (_0xa44253(0x2) !== _0xa44253(0x2)) {\n            output += list[i][_0xa44253(0x3)](0x0, 0x1);\n        } else {\n            myout(S);\n            return;\n        }\n    }\n    S = S[_0xa44253(0x1)]('');\n    var list = [];\n    while (S[_0xa44253(0x4)] != 0x0) {\n        if (_0xa44253(0x5) === 'Yiglt') {\n            var tmp = '';\n            for (var i = 0x0; i < w; i++) {\n                if (S[_0xa44253(0x4)] != 0x0) {\n                    tmp += S['shift']();\n                }\n            }\n            list[_0xa44253(0x6)](tmp);\n        } else {\n            var tmp = '';\n            for (var i = 0x0; i < w; i++) {\n                if (S[_0xa44253(0x4)] != 0x0) {\n                    tmp += S[_0xa44253(0x7)]();\n                }\n            }\n            list[_0xa44253(0x6)](tmp);\n        }\n    }\n    var output = '';\n    for (var i = 0x0; i < list[_0xa44253(0x4)]; i++) {\n        output += list[i]['slice'](0x0, 0x1);\n    }\n    myout(output);\n}\nMain(require('fs')[a0_0x30e7c6(0x8)](a0_0x30e7c6(0x9), a0_0x30e7c6(0xa))[a0_0x30e7c6(0xb)]());", "test_cases": [["abcdefgh\n3", "adg"], ["lllll\n1", "lllll"], ["souuundhound\n2", "suudon"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.split(\" \");\n\tinput = input.split(\"\\n\");\n\t//input = input.split(\" \").map((a)=>Number(a));\n\t//input = input.split(\"\\n\").map((a)=>Number(a));\n  var S = input[0];\n  var w = parseInt(input[1]);\n  if(w == 1){\n     myout(S);\n    return;\n     }\n  S = S.split(\"\");\n  var list = [];\n  while(S.length != 0){\n    \tvar tmp = \"\";\n        for(var i = 0; i < w; i++){\n          if(S.length != 0){\n          \ttmp += S.shift();\n          }\n        }\n    list.push(tmp);\n  }\n  var output = \"\";\n  for(var i = 0; i < list.length; i++){\n    output += list[i].slice(0,1);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03452_1", "type": "JavaScript", "obfuscated": "var a0_0x27148e = a0_0x110e;\nfunction Main(input) {\n    var _0x130e3b = a0_0x110e;\n    input = input['split']('\\x0a');\n    var M = input[0x0][_0x130e3b(0x0)]('\\x20')[_0x130e3b(0x1)](a => parseInt(a));\n    var N = M[0x0];\n    M = M[0x1];\n    var L = [];\n    for (var i = 0x0; i < M; i++) {\n        L[i] = input[i + 0x1][_0x130e3b(0x0)]('\\x20')[_0x130e3b(0x1)](a => parseInt(a));\n    }\n    var anc = new Array(N + 0x1)[_0x130e3b(0x2)](0x0);\n    var x = new Array(N + 0x1)['fill'](0x0);\n    anc[0x0] = anc[0x1] = 0x1;\n    var i, j, low = 0x1;\n    var ans = 'Yes';\n    top:\n        while (L[_0x130e3b(0x3)]) {\n            i = j = L[_0x130e3b(0x3)];\n            while (i--) {\n                if (anc[L[i][0x0]] && anc[L[i][0x1]]) {\n                    if (x[L[i][0x1]] - x[L[i][0x0]] !== L[i][0x2]) {\n                        ans = 'No';\n                        break top;\n                    } else {\n                        L[_0x130e3b(0x4)](i, 0x1);\n                        continue;\n                    }\n                }\n                if (anc[L[i][0x0]]) {\n                    anc[L[i][0x1]] = 0x1;\n                    x[L[i][0x1]] = x[L[i][0x0]] + L[i][0x2];\n                    L[_0x130e3b(0x4)](i, 0x1);\n                } else if (anc[L[i][0x1]]) {\n                    anc[L[i][0x0]] = 0x1;\n                    x[L[i][0x0]] = x[L[i][0x1]] - L[i][0x2];\n                    L[_0x130e3b(0x4)](i, 0x1);\n                }\n            }\n            if (j === L[_0x130e3b(0x3)]) {\n                i = anc[_0x130e3b(0x5)](a => a === 0x0);\n                anc[i] = 0x1;\n            }\n        }\n    console['log'](ans);\n}\nfunction a0_0x8cfc() {\n    var _0x552aa7 = [\n        'split',\n        'map',\n        'fill',\n        'length',\n        'splice',\n        'findIndex',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x8cfc = function () {\n        return _0x552aa7;\n    };\n    return a0_0x8cfc();\n}\nfunction a0_0x110e(dPcGSp, key) {\n    var stringArray = a0_0x8cfc();\n    a0_0x110e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x110e(dPcGSp, key);\n}\nMain(require('fs')[a0_0x27148e(0x6)](a0_0x27148e(0x7), a0_0x27148e(0x8)));", "test_cases": [["3 3\n1 2 1\n2 3 1\n1 3 2", "Yes"], ["3 3\n1 2 1\n2 3 1\n1 3 5", "No"], ["4 3\n2 1 1\n2 3 5\n3 4 2", "Yes"], ["10 3\n8 7 100\n7 9 100\n9 8 100", "No"], ["100 0", "Yes"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar M = input[0].split(\" \").map(a => parseInt(a));\n\tvar N = M[0];\n\tM = M[1];\n\tvar L = [];\n\tfor(var i = 0; i < M; i++){\n\t\tL[i] = input[i+1].split(\" \").map(a => parseInt(a));\n\t}\n\tvar anc = new Array(N+1).fill(0);\n\tvar x = new Array(N+1).fill(0);\n\tanc[0] = anc[1] = 1;\n\tvar i, j, low = 1;\n\tvar ans = \"Yes\";\n\t\n\ttop:\n\twhile(L.length){\n\t\ti = j = L.length;\n\t\twhile(i--){\n\t\t\tif(anc[L[i][0]] && anc[L[i][1]]){\n\t\t\t\tif(x[L[i][1]] - x[L[i][0]] !== L[i][2]){\n\t\t\t\t\tans = \"No\";\n\t\t\t\t\tbreak top;\n\t\t\t\t}else{\n\t\t\t\t\tL.splice(i, 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(anc[L[i][0]]){\n\t\t\t\tanc[L[i][1]] = 1;\n\t\t\t\tx[L[i][1]] = x[L[i][0]] + L[i][2];\n\t\t\t\tL.splice(i, 1);\n\t\t\t}else if(anc[L[i][1]]){\n\t\t\t\tanc[L[i][0]] = 1;\n\t\t\t\tx[L[i][0]] = x[L[i][1]] - L[i][2];\n\t\t\t\tL.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif(j === L.length){\n\t\t\ti = anc.findIndex(a => a === 0);\n\t\t\tanc[i] = 1;\n\t\t}\n\t}\n\t\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03587_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x39a5db = a0_0x1a61;\nconst main = arg => {\n    const _0x54ca63 = a0_0x1a61;\n    arg = arg[_0x54ca63(0x0)]()['split']('\\x0a');\n    const S = arg[0x0][_0x54ca63(0x1)]('');\n    console[_0x54ca63(0x2)](S[_0x54ca63(0x3)](n => n === '1')[_0x54ca63(0x4)]);\n};\nfunction a0_0x1a61(aOnPAh, key) {\n    const stringArray = a0_0x5bae();\n    a0_0x1a61 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a61(aOnPAh, key);\n}\nmain(require('fs')[a0_0x39a5db(0x5)](a0_0x39a5db(0x6), a0_0x39a5db(0x7)));\nfunction a0_0x5bae() {\n    const _0x3d8c85 = [\n        'trim',\n        'split',\n        'log',\n        'filter',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5bae = function () {\n        return _0x3d8c85;\n    };\n    return a0_0x5bae();\n}", "test_cases": [["111100", "4"], ["001001", "2"], ["000000", "0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    console.log(S.filter(n=>n===\"1\").length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03627_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x44a5f5 = a0_0x5c73;\nfunction a0_0x5c73(jQpaDb, key) {\n    const stringArray = a0_0x2922();\n    a0_0x5c73 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c73(jQpaDb, key);\n}\nfunction a0_0x2922() {\n    const _0x33b5cd = [\n        'trim',\n        'split',\n        'sort',\n        'push',\n        'log',\n        'length',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2922 = function () {\n        return _0x33b5cd;\n    };\n    return a0_0x2922();\n}\nconst main = arg => {\n    const _0x568798 = a0_0x5c73;\n    arg = arg[_0x568798(0x0)]()[_0x568798(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const A = arg[0x1]['split']('\\x20')['map'](n => parseInt(n))[_0x568798(0x2)]((a, b) => a - b);\n    let pairNums = [];\n    for (let i in A) {\n        if (A[i] === A[parseInt(i) + 0x1]) {\n            pairNums[_0x568798(0x3)](A[i]);\n        }\n    }\n    pairNums[_0x568798(0x2)]((a, b) => b - a);\n    const set = new Set(pairNums);\n    console[_0x568798(0x4)](pairNums[_0x568798(0x5)] ? [...set][0x0] * [...set][0x1] : 0x0);\n};\nmain(require('fs')[a0_0x44a5f5(0x6)](a0_0x44a5f5(0x7), 'utf8'));", "test_cases": [["6\n3 1 2 4 2 1", "2"], ["4\n1 2 3 4", "0"], ["10\n3 3 3 3 4 4 4 5 5 5", "20"]], "original": "\"use strict\"\n\nconst main = arg => {\n  arg = arg.trim().split(\"\\n\");\n  const N = parseInt(arg[0]);\n  const A = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>a-b);\n  \n  let pairNums = [];\n  \n  for(let i in A) {\n      if(A[i] === A[parseInt(i) + 1]) {\n        pairNums.push(A[i]);\n      }\n  }\n  \n  pairNums.sort((a,b)=>b-a);\n  const set = new Set(pairNums);\n\n  console.log(pairNums.length ? [...set][0] * [...set][1] : 0);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03818_1", "type": "JavaScript", "obfuscated": "function a0_0x37e9(gqofpT, key) {\n    var stringArray = a0_0x27a4();\n    a0_0x37e9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x37e9(gqofpT, key);\n}\nvar a0_0x1e6ce8 = a0_0x37e9;\nfunction Main(input) {\n    var _0x2e65e1 = a0_0x37e9;\n    var len = input[_0x2e65e1(0x0)]('\\x0a')[0x0];\n    var list = input['split']('\\x0a')[0x1][_0x2e65e1(0x0)]('\\x20');\n    list['sort'](function (a, b) {\n        return parseInt(a) - parseInt(b);\n    });\n    var b = list[_0x2e65e1(0x1)](function (x, i, self) {\n        var _0xe51641 = a0_0x37e9;\n        return self[_0xe51641(0x2)](x) === i;\n    });\n    if (b[_0x2e65e1(0x3)] % 0x2 == 0x1) {\n        console[_0x2e65e1(0x4)](b['length']);\n    } else {\n        console[_0x2e65e1(0x4)](b[_0x2e65e1(0x3)] - 0x1);\n    }\n}\nMain(require('fs')[a0_0x1e6ce8(0x5)](a0_0x1e6ce8(0x6), a0_0x1e6ce8(0x7)));\nfunction a0_0x27a4() {\n    var _0x364c62 = [\n        'split',\n        'filter',\n        'indexOf',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x27a4 = function () {\n        return _0x364c62;\n    };\n    return a0_0x27a4();\n}", "test_cases": [["5\n1 2 1 3 7", "3"], ["15\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1", "7"]], "original": "function Main(input) {\n  var len = input.split(\"\\n\")[0];\n  var list = input.split(\"\\n\")[1].split(\" \");\n  list.sort(function(a,b){\n  \treturn parseInt(a) - parseInt(b);\n  });\n  \n  var b = list.filter(function (x, i, self) {\n            return self.indexOf(x) === i;\n        });\n  if(b.length % 2 == 1){\n     console.log(b.length);\n     }else{\n     console.log(b.length - 1);\n     }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03951_1", "type": "JavaScript", "obfuscated": "function a0_0x3ff8() {\n    var _0x2a2c18 = [\n        'split',\n        'min',\n        'length',\n        'substr',\n        'log',\n        'utf8',\n        'trim'\n    ];\n    a0_0x3ff8 = function () {\n        return _0x2a2c18;\n    };\n    return a0_0x3ff8();\n}\nvar a0_0x5c8485 = a0_0x4b89;\nfunction Main(input) {\n    var _0x4c96c6 = a0_0x4b89;\n    input = input[_0x4c96c6(0x0)]('\\x0a');\n    var n = Number(input[0x0]);\n    var ans = 0x0;\n    for (var i = Math[_0x4c96c6(0x1)](input[0x1][_0x4c96c6(0x2)], input[0x2][_0x4c96c6(0x2)]); i != 0x0; i--) {\n        if (input[0x1]['substr'](-0x1 * i) == input[0x2][_0x4c96c6(0x3)](0x0, i) && input[0x1][_0x4c96c6(0x2)] + input[0x2][_0x4c96c6(0x2)] - i >= n) {\n            ans = i;\n            break;\n        }\n    }\n    console[_0x4c96c6(0x4)]((input[0x1][_0x4c96c6(0x3)](0x0, input[0x1][_0x4c96c6(0x2)] - ans) + input[0x2])['length']);\n}\nfunction a0_0x4b89(pDicjQ, key) {\n    var stringArray = a0_0x3ff8();\n    a0_0x4b89 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b89(pDicjQ, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x5c8485(0x5))[a0_0x5c8485(0x6)]());", "test_cases": [["3\nabc\ncde", "5"], ["1\na\nz", "2"], ["4\nexpr\nexpr", "4"]], "original": "function Main(input){\n\tinput = input.split(\"\\n\");\n\tvar n = Number(input[0]);\n\tvar ans = 0;\n\tfor(var i=Math.min(input[1].length,input[2].length);i!=0;i--){\n\t\tif(input[1].substr(-1*i)==input[2].substr(0,i)&&input[1].length+input[2].length-i>=n){\n\t\t\tans = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tconsole.log((input[1].substr(0,input[1].length-ans)+input[2]).length);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03966_1", "type": "JavaScript", "obfuscated": "var a0_0x5c04ec = a0_0xdd9d;\nfunction a0_0x472d() {\n    var _0x5ea186 = [\n        'split',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x472d = function () {\n        return _0x5ea186;\n    };\n    return a0_0x472d();\n}\nfunction a0_0xdd9d(exdCTR, key) {\n    var stringArray = a0_0x472d();\n    a0_0xdd9d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdd9d(exdCTR, key);\n}\nfunction Main(input) {\n    var _0x428728 = a0_0xdd9d;\n    TT = 0x0;\n    AA = 0x0;\n    input = input[_0x428728(0x0)]('\\x0a');\n    N = input[0x0];\n    for (i = 0x1; i <= N; i++) {\n        tmp = input[i][_0x428728(0x0)]('\\x20');\n        T = tmp[0x0] * 0x1;\n        A = tmp[0x1] * 0x1;\n        if (TT <= T && AA <= A) {\n            TT = T;\n            AA = A;\n        } else {\n            ratioT = TT / T;\n            ratioA = AA / A;\n            ratio = Math['ceil'](Math['max'](ratioT, ratioA));\n            TT = T * ratio;\n            AA = A * ratio;\n        }\n    }\n    console[_0x428728(0x1)](TT + AA);\n}\nMain(require('fs')[a0_0x5c04ec(0x2)]('/dev/stdin', a0_0x5c04ec(0x3)));", "test_cases": [["3\n2 3\n1 1\n3 2", "10"], ["4\n1 1\n1 1\n1 5\n1 100", "101"], ["5\n3 10\n48 17\n31 199\n231 23\n3 2", "6930"]], "original": "function Main(input) {\n    TT = 0;\n    AA = 0;\n \n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\tN = input[0];\n//    console.log(N);\t\n    for (i = 1; i <= N; i++) {\n    \ttmp = input[i].split(\" \");\n    \tT = tmp[0] * 1;\n    \tA = tmp[1] * 1;\n        // console.log(\"T:\" + T + \" A:\" + A);\n \n        if ((TT <= T) && (AA <= A)) {\n            TT = T;\n            AA = A;\n        } else {\n            ratioT = TT / T;\n            ratioA = AA / A;\n            // console.log(\"ratioT:\" + ratioT + \" ratioA:\" + ratioA);\n            ratio = Math.ceil(Math.max(ratioT, ratioA));\n            TT = T * ratio;\n            AA = A * ratio;\n        }\n        // console.log(\"TT:\" + TT + \" AA:\" + AA);\n    }\n\t//出力\n    console.log(TT + AA);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04020_1", "type": "JavaScript", "obfuscated": "function a0_0x3744(QElsAp, key) {\n    var stringArray = a0_0x15a3();\n    a0_0x3744 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3744(QElsAp, key);\n}\nvar a0_0x3eb832 = a0_0x3744;\nfunction a0_0x15a3() {\n    var _0x57ca4c = [\n        'log',\n        'trim',\n        'map',\n        'shift',\n        'iqQJe',\n        'floor',\n        'JzUmz',\n        'AiuUr',\n        'min',\n        'czDPd',\n        'NasOk',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x15a3 = function () {\n        return _0x57ca4c;\n    };\n    return a0_0x15a3();\n}\nfunction myout(text) {\n    var _0x4812c4 = a0_0x3744;\n    console[_0x4812c4(0x0)](text);\n}\nfunction Main(input) {\n    var _0x3d91e0 = a0_0x3744;\n    input = input[_0x3d91e0(0x1)]()['split']('\\x0a')[_0x3d91e0(0x2)](a => Number(a));\n    var len = input[0x0];\n    var output = 0x0;\n    input[_0x3d91e0(0x3)]();\n    for (var i = 0x0; i < len; i++) {\n        if (i == len - 0x1) {\n            if ('iqQJe' !== _0x3d91e0(0x4)) {\n                output += Math[_0x3d91e0(0x5)](input[i] / 0x2);\n            } else {\n                output += Math['floor'](input[i] / 0x2);\n            }\n        } else {\n            if (input[i] != 0x0) {\n                if (_0x3d91e0(0x6) === _0x3d91e0(0x7)) {\n                    if (input[i + 0x1] != 0x0) {\n                        var tmp = Math[_0x3d91e0(0x8)](input[i], input[i + 0x1]);\n                        output += tmp;\n                        input[i] -= tmp;\n                        input[i + 0x1] -= tmp;\n                        if (input[i] >= 0x2) {\n                            output += Math[_0x3d91e0(0x5)](input[i] / 0x2);\n                        }\n                    } else {\n                        output += Math[_0x3d91e0(0x5)](input[i] / 0x2);\n                    }\n                } else {\n                    if (input[i + 0x1] != 0x0) {\n                        if (_0x3d91e0(0x9) === _0x3d91e0(0x9)) {\n                            var tmp = Math['min'](input[i], input[i + 0x1]);\n                            output += tmp;\n                            input[i] -= tmp;\n                            input[i + 0x1] -= tmp;\n                            if (input[i] >= 0x2) {\n                                output += Math[_0x3d91e0(0x5)](input[i] / 0x2);\n                            }\n                        } else {\n                            console[_0x3d91e0(0x0)](text);\n                        }\n                    } else {\n                        if ('NasOk' === _0x3d91e0(0xa)) {\n                            output += Math[_0x3d91e0(0x5)](input[i] / 0x2);\n                        } else {\n                            output += Math['floor'](input[i] / 0x2);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    myout(output);\n}\nMain(require('fs')[a0_0x3eb832(0xb)](a0_0x3eb832(0xc), a0_0x3eb832(0xd))[a0_0x3eb832(0x1)]());", "test_cases": [["4\n4\n0\n3\n2", "4"], ["8\n2\n0\n1\n6\n0\n8\n2\n1", "9"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\tinput = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var len = input[0];\n  var output = 0;\n  input.shift();\n  for(var i = 0; i < len; i++){\n    if(i == len - 1){\n       output += Math.floor(input[i] / 2);\n    }else{\n      if(input[i] != 0){\n         if(input[i+1] != 0){\n         \tvar tmp = Math.min(input[i],input[i+1]); \n           output += tmp;\n           input[i] -= tmp;\n           input[i+1] -= tmp;\n           if(input[i] >= 2){\n              output += Math.floor(input[i] / 2);\n              }\n         }else{\n            output += Math.floor(input[i] / 2);\n         }\n      }\n    }\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00012_1", "type": "JavaScript", "obfuscated": "var a0_0x5899f6 = a0_0x2113;\nfunction area(x1, y1, x2, y2, x3, y3) {\n    var _0x33a20a = a0_0x2113;\n    var ab = Math[_0x33a20a(0x0)]((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)), bc = Math[_0x33a20a(0x0)]((x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3)), ca = Math[_0x33a20a(0x0)]((x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1)), s = 0.5 * (ab + bc + ca), S = Math['sqrt'](s * (s - ab) * (s - bc) * (s - ca));\n    return S;\n}\nfunction inTriangle(x1, y1, x2, y2, x3, y3, xp, yp) {\n    var _0x5cd7a5 = a0_0x2113;\n    var abc = area(x1, y1, x2, y2, x3, y3), abp = area(x1, y1, x2, y2, xp, yp), bcp = area(x2, y2, x3, y3, xp, yp), cap = area(x3, y3, x1, y1, xp, yp), sub = abc - (abp + bcp + cap);\n    return Math[_0x5cd7a5(0x1)](sub) <= 0.01;\n}\nfunction a0_0x3a8e() {\n    var _0x4acdba = [\n        'sqrt',\n        'abs',\n        'trim',\n        'log',\n        'apply',\n        'split',\n        'map',\n        'YES',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end'\n    ];\n    a0_0x3a8e = function () {\n        return _0x4acdba;\n    };\n    return a0_0x3a8e();\n}\nfunction a0_0x2113(OqrxjG, key) {\n    var stringArray = a0_0x3a8e();\n    a0_0x2113 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2113(OqrxjG, key);\n}\nfunction main() {\n    input['forEach'](function (line) {\n        var _0x55e2fe = a0_0x2113;\n        if (line[_0x55e2fe(0x2)]() === '')\n            return;\n        console[_0x55e2fe(0x3)](inTriangle[_0x55e2fe(0x4)](null, line[_0x55e2fe(0x5)]('\\x20')[_0x55e2fe(0x6)](parseFloat)) ? _0x55e2fe(0x7) : 'NO');\n    });\n}\nvar input = '';\nprocess[a0_0x5899f6(0x8)][a0_0x5899f6(0x9)]();\nprocess[a0_0x5899f6(0x8)][a0_0x5899f6(0xa)](a0_0x5899f6(0xb));\nprocess[a0_0x5899f6(0x8)]['on'](a0_0x5899f6(0xc), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x5899f6(0x8)]['on'](a0_0x5899f6(0xd), function () {\n    var _0x593426 = a0_0x2113;\n    input = input[_0x593426(0x5)]('\\x0a');\n    main();\n});", "test_cases": [["0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5\n0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0", "YES\nNO"]], "original": "function area(x1, y1, x2, y2, x3, y3) {\n    var\n    ab = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)),\n    bc = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3)),\n    ca = Math.sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1)),\n    s = 0.5*(ab+bc+ca),\n    S= Math.sqrt(s*(s-ab)*(s-bc)*(s-ca));\n    return S;\n}\n\nfunction inTriangle(x1, y1, x2, y2, x3, y3, xp, yp) {\n  var\n  abc = area(x1, y1, x2, y2, x3, y3),\n  abp = area(x1, y1, x2, y2, xp, yp),\n  bcp = area(x2, y2, x3, y3, xp, yp),\n  cap = area(x3, y3, x1, y1, xp, yp),\n  sub = abc-(abp+bcp+cap);\n  return Math.abs(sub) <= 0.01;\n}\n\nfunction main() {\n  input.forEach(function(line) {\n    if(line.trim() === '') return;\n    console.log(inTriangle.apply(null, line.split(' ').map(parseFloat)) ? 'YES' : 'NO');\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00014_1", "type": "JavaScript", "obfuscated": "function a0_0x5706(ESvBtm, key) {\n    var stringArray = a0_0x5122();\n    a0_0x5706 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5706(ESvBtm, key);\n}\nfunction a0_0x5122() {\n    var _0x3413a0 = [\n        'data',\n        'trim',\n        'split',\n        'log',\n        'resume'\n    ];\n    a0_0x5122 = function () {\n        return _0x3413a0;\n    };\n    return a0_0x5122();\n}\nvar a0_0x5b6274 = a0_0x5706;\nprocess['stdin']['on'](a0_0x5b6274(0x0), function (c) {\n    var _0x225abe = a0_0x5706;\n    (c + '')[_0x225abe(0x1)]()[_0x225abe(0x2)]('\\x0a')['some'](function (n) {\n        var _0x1da911 = a0_0x5706;\n        for (var d = +n, i = 0x1, a = 0x0, t; t = i++ * d, t < 0x258 ? a += t * t * d : 0x0;);\n        console[_0x1da911(0x3)](a);\n    });\n})[a0_0x5b6274(0x4)]();", "test_cases": [["20\n10", "68440000\n70210000"]], "original": "process.stdin.on(\"data\",function(c){\n  (c+\"\").trim().split(\"\\n\").some(function(n){\n    for(var d=+n,i=1,a=0,t;t=i++*d,t<600?a+=t*t*d:0;);\n    console.log(a);\n  });\n}).resume();", "language": "JavaScript"}
{"filename": "p00022_1", "type": "JavaScript", "obfuscated": "var a0_0xb5d1a0 = a0_0x52c1;\nfunction main() {\n    while (0x1) {\n        if ('KaERF' !== 'fZMxl') {\n            var n = scan();\n            if (n == 0x0) {\n                break;\n            }\n            var x = Array(n);\n            rep(n, function (i) {\n                x[i] = scan();\n            });\n            x[-0x1] = 0x0;\n            rep(n, function (i) {\n                x[i] += x[i - 0x1];\n            });\n            var a = -Infinity;\n            rep(n, function (i) {\n                var _0x389ea6 = a0_0x52c1;\n                if (_0x389ea6(0x0) === 'kjfLD') {\n                    x[i] += x[i - 0x1];\n                } else {\n                    for (var j = i; j < n; ++j) {\n                        a = Math[_0x389ea6(0x1)](x[j] - x[i - 0x1], a);\n                    }\n                }\n            });\n            print(a);\n        } else {\n            func(i);\n        }\n    }\n}\nfunction a0_0x52c1(wXlTpr, key) {\n    var stringArray = a0_0xf7ac();\n    a0_0x52c1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x52c1(wXlTpr, key);\n}\nfunction rep(n, func) {\n    var _0x28f613 = a0_0x52c1;\n    for (var i = 0x0; i < n; ++i) {\n        if (_0x28f613(0x2) !== _0x28f613(0x2)) {\n            return input[input_index++];\n        } else {\n            func(i);\n        }\n    }\n}\nfunction a0_0xf7ac() {\n    var _0xb5a6d2 = [\n        'GmSCv',\n        'max',\n        'WziaH',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'string',\n        'ogZyp',\n        'log',\n        'data',\n        'split'\n    ];\n    a0_0xf7ac = function () {\n        return _0xb5a6d2;\n    };\n    return a0_0xf7ac();\n}\nprocess[a0_0xb5d1a0(0x3)][a0_0xb5d1a0(0x4)]();\nprocess[a0_0xb5d1a0(0x3)][a0_0xb5d1a0(0x5)](a0_0xb5d1a0(0x6));\nvar input = '';\nvar input_index = 0x0;\nfunction scan(type) {\n    var _0x244588 = a0_0x52c1;\n    if (type === _0x244588(0x7)) {\n        if ('ogZyp' !== _0x244588(0x8)) {\n            for (var j = i; j < n; ++j) {\n                a = Math['max'](x[j] - x[i - 0x1], a);\n            }\n        } else {\n            return input[input_index++];\n        }\n    } else {\n        return +input[input_index++];\n    }\n}\nfunction print(val) {\n    var _0x48b1eb = a0_0x52c1;\n    console[_0x48b1eb(0x9)](val);\n}\nprocess['stdin']['on'](a0_0xb5d1a0(0xa), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0xb5d1a0(0x3)]['on']('end', function () {\n    var _0x588579 = a0_0x52c1;\n    input = input[_0x588579(0xb)](/\\s+/);\n    main();\n});", "test_cases": [["7\n-5\n-1\n6\n4\n9\n-6\n-7\n13\n1\n2\n3\n2\n-2\n-1\n1\n2\n3\n2\n1\n-2\n1\n3\n1000\n-200\n201\n0", "19\n14\n1001"]], "original": "function main(){\n\twhile(1){\n\t\tvar n = scan();\n\t\tif(n == 0){\n\t\t\tbreak;\n\t\t}\n\t\tvar x = Array(n);\n\t\trep(n, function(i){\n\t\t\tx[i] = scan();\n\t\t});\n\t\tx[-1] = 0;\n\t\trep(n, function(i){\n\t\t\tx[i] += x[i - 1];\n\t\t});\n\t\tvar a = -Infinity;\n\t\trep(n, function(i){\n\t\t\tfor(var j = i; j < n; ++j){\n\t\t\t\ta = Math.max(x[j] - x[i - 1], a);\n\t\t\t}\n\t\t});\n\t\tprint(a);\n\t}\n}\n\nfunction rep(n, func){\n\tfor(var i = 0; i < n; ++i){\n\t\tfunc(i);\n\t}\n}\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar input = '';\nvar input_index = 0;\n\nfunction scan(type){\n\tif(type === 'string'){\n\t\treturn input[input_index++];\n\t}\n\telse{\n\t\treturn +input[input_index++];\n\t}\n}\n\nfunction print(val){\n\tconsole.log(val);\n}\n\nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.split(/\\s+/);\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00042_1", "type": "JavaScript", "obfuscated": "function a0_0x49cc() {\n    var _0x5d1f5c = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'log'\n    ];\n    a0_0x49cc = function () {\n        return _0x5d1f5c;\n    };\n    return a0_0x49cc();\n}\nvar a0_0x8c5f0e = a0_0x163d;\nfunction a0_0x163d(uZSApT, key) {\n    var stringArray = a0_0x49cc();\n    a0_0x163d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x163d(uZSApT, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x8c5f0e(0x0), 'utf8');\nvar Arr = input[a0_0x8c5f0e(0x1)]()[a0_0x8c5f0e(0x2)]('\\x0a');\nvar cnt = 0x1;\nwhile (!![]) {\n    var W = Arr[a0_0x8c5f0e(0x3)]() - 0x0;\n    if (W == 0x0)\n        break;\n    var N = Arr['shift']() - 0x0;\n    var dp = [];\n    for (var y = 0x0; y < N + 0x1; y++) {\n        dp[y] = [];\n        for (var x = 0x0; x <= W; x++) {\n            dp[y][x] = 0x0;\n        }\n    }\n    var v = [];\n    var w = [];\n    for (var i = 0x0; i < N; i++) {\n        var arr = Arr['shift']()['split'](',')['map'](Number);\n        v[a0_0x8c5f0e(0x4)](arr[0x0]);\n        w[a0_0x8c5f0e(0x4)](arr[0x1]);\n    }\n    for (var y = 0x0; y < N; y++) {\n        for (var x = 0x0; x <= W; x++) {\n            if (x - w[y] >= 0x0)\n                dp[y + 0x1][x] = Math['max'](dp[y][x], dp[y][x - w[y]] + v[y]);\n            else\n                dp[y + 0x1][x] = dp[y][x];\n        }\n    }\n    console[a0_0x8c5f0e(0x5)]('Case\\x20' + cnt + ':');\n    cnt++;\n    console['log'](dp[N][W]);\n    var maxValue = dp[N][W];\n    while (maxValue == dp[N][W - 0x1])\n        W--;\n    console[a0_0x8c5f0e(0x5)](W);\n}", "test_cases": [["50\n5\n60,10\n100,20\n120,30\n210,45\n10,4\n50\n5\n60,10\n100,20\n120,30\n210,45\n10,4\n0", "Case 1:\n220\n49\nCase 2:\n220\n49"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar cnt=1;\nwhile(true){\n   var W=Arr.shift()-0;\n   if(W==0)break;\n   var N=Arr.shift()-0;\n   var dp=[];\n   for(var y=0;y<N+1;y++){\n      dp[y]=[];\n      for(var x=0;x<=W;x++){\n         dp[y][x]=0;\n      }\n   }\n   var v=[];\n   var w=[];\n   for(var i=0;i<N;i++){\n      var arr=(Arr.shift()).split(\",\").map(Number);\n      v.push(arr[0]);\n      w.push(arr[1]);\n   }\n   for(var y=0;y<N;y++){\n      for(var x=0;x<=W;x++){\n         if(x-w[y]>=0)dp[y+1][x]=Math.max(dp[y][x],dp[y][x-w[y]]+v[y]);\n         else dp[y+1][x]=dp[y][x];\n      }\n   }\n   console.log(\"Case \"+cnt+\":\");\n   cnt++;\n   console.log(dp[N][W]);\n   var maxValue=dp[N][W];\n   while(maxValue==dp[N][W-1])W--;\n   console.log(W);\n}", "language": "JavaScript"}
{"filename": "p00051_1", "type": "JavaScript", "obfuscated": "var a0_0x213768 = a0_0x3d3d;\nvar input = require('fs')[a0_0x213768(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x3d3d(QvjZiM, key) {\n    var stringArray = a0_0x4f66();\n    a0_0x3d3d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d3d(QvjZiM, key);\n}\nvar Arr = input[a0_0x213768(0x1)]()[a0_0x213768(0x2)]('\\x0a');\nfunction a0_0x4f66() {\n    var _0xb6d06f = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'join',\n        'sort'\n    ];\n    a0_0x4f66 = function () {\n        return _0xb6d06f;\n    };\n    return a0_0x4f66();\n}\nvar AL = Arr[a0_0x213768(0x3)]();\nfor (var i = 0x0; i < AL; i++) {\n    var arr = Arr[i][a0_0x213768(0x2)]('')[a0_0x213768(0x4)](Number);\n    arr['sort'](function (a, b) {\n        return b - a;\n    });\n    var a = arr[a0_0x213768(0x5)]('');\n    arr[a0_0x213768(0x6)](function (a, b) {\n        return a - b;\n    });\n    var b = arr[a0_0x213768(0x5)]('');\n    console['log'](parseInt(a) - parseInt(b));\n}", "test_cases": [["2\n65539010\n65539010", "96417531\n96417531"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nfor(var i=0;i<AL;i++){\n   var arr=Arr[i].split(\"\").map(Number);\n   arr.sort(function(a,b){return b-a;});\n   var a=arr.join(\"\");\n   arr.sort(function(a,b){return a-b;});\n   var b=arr.join(\"\");\n   console.log(parseInt(a)-parseInt(b));\n}", "language": "JavaScript"}
{"filename": "p00065_1", "type": "JavaScript", "obfuscated": "var a0_0x4ad7bb = a0_0x5868;\nvar input = require('fs')[a0_0x4ad7bb(0x0)](a0_0x4ad7bb(0x1), 'utf8');\nvar lines = input[a0_0x4ad7bb(0x2)]()[a0_0x4ad7bb(0x3)]('\\x0a');\nvar lm = [];\nfunction a0_0x5868(YRwxQR, key) {\n    var stringArray = a0_0x5d3c();\n    a0_0x5868 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5868(YRwxQR, key);\n}\nvar line;\nwhile (line = lines[a0_0x4ad7bb(0x4)]()) {\n    lm[a0_0x4ad7bb(0x5)](line[a0_0x4ad7bb(0x3)](',')[0x0]);\n}\nvar tm = [];\nwhile (line = lines[a0_0x4ad7bb(0x4)]()) {\n    tm[a0_0x4ad7bb(0x5)](line[a0_0x4ad7bb(0x3)](',')[0x0]);\n}\nlm['sort'](function (a, b) {\n    return a - b;\n});\nfunction a0_0x5d3c() {\n    var _0x411f54 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'filter',\n        'length'\n    ];\n    a0_0x5d3c = function () {\n        return _0x411f54;\n    };\n    return a0_0x5d3c();\n}\nlm['forEach'](function (c) {\n    var _0x161703 = a0_0x5868;\n    var cnt = tm[_0x161703(0x6)](function (n) {\n        return n == c;\n    })['length'];\n    if (cnt > 0x0) {\n        var tcnt = lm['filter'](function (n) {\n            return n == c;\n        })[_0x161703(0x7)];\n        console['log'](c, cnt + tcnt);\n    }\n});", "test_cases": [["123,10\n56,12\n34,14\n\n123,3\n56,4\n123,5", "56 2\n123 3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar lm = [];\nvar line;\nwhile (line = lines.shift()) {\n    lm.push(line.split(',')[0]);\n}\n\nvar tm = [];\nwhile (line = lines.shift()) {\n    tm.push(line.split(',')[0]);\n}\n\nlm.sort(function(a,b){return a-b;});\n\nlm.forEach(function(c) {\n    var cnt = tm.filter(function(n){return n == c;}).length;\n    if (cnt > 0) {\n        var tcnt = lm.filter(function(n){return n == c}).length;\n        console.log(c, cnt + tcnt);\n    }\n});", "language": "JavaScript"}
{"filename": "p00087_1", "type": "JavaScript", "obfuscated": "function a0_0x1386() {\n    var _0xbfbfeb = [\n        'trim',\n        'length',\n        'forEach',\n        'test',\n        'unshift',\n        'shift',\n        'log',\n        'toFixed'\n    ];\n    a0_0x1386 = function () {\n        return _0xbfbfeb;\n    };\n    return a0_0x1386();\n}\nvar a0_0x3f60c7 = a0_0x1756;\nfunction a0_0x1756(tSHfzK, key) {\n    var stringArray = a0_0x1386();\n    a0_0x1756 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1756(tSHfzK, key);\n}\nx = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ny = x[a0_0x3f60c7(0x0)]()['split']('\\x0a');\nwhile (!![]) {\n    if (y[a0_0x3f60c7(0x1)] == 0x0)\n        break;\n    var z = y['shift']()['split']('\\x20');\n    var s = [];\n    z[a0_0x3f60c7(0x2)](function (v) {\n        var _0x515a1f = a0_0x1756;\n        if (/\\d/[_0x515a1f(0x3)](v)) {\n            s[_0x515a1f(0x4)](v - 0x0);\n        } else {\n            a = s[_0x515a1f(0x5)]();\n            b = s[_0x515a1f(0x5)]();\n            if (v == '+')\n                s[_0x515a1f(0x4)](b + a);\n            if (v == '-')\n                s[_0x515a1f(0x4)](b - a);\n            if (v == '*')\n                s[_0x515a1f(0x4)](b * a);\n            if (v == '/')\n                s['unshift'](b / a);\n        }\n    });\n    console[a0_0x3f60c7(0x6)](s[0x0][a0_0x3f60c7(0x7)](0x6));\n}", "test_cases": [["10 2 12 - /\n3 4 - 7 2 3 * + *\n-1 -2 3 + +", "-1.000000\n-13.000000\n0.000000"]], "original": "x=require('fs').readFileSync('/dev/stdin', 'utf8');\ny=x.trim().split(\"\\n\");\nwhile(true){\n   if(y.length==0)break;\n   var z=y.shift().split(\" \");\n   var s=[];\n   z.forEach(function(v){\n      if(/\\d/.test(v)){\n         s.unshift(v-0);\n      }else{\n         a=s.shift();\n         b=s.shift();\n         if(v==\"+\")s.unshift(b+a);\n         if(v==\"-\")s.unshift(b-a);\n         if(v==\"*\")s.unshift(b*a);\n         if(v==\"/\")s.unshift(b/a);\n      }\n   });\n   console.log(s[0].toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00103_1", "type": "JavaScript", "obfuscated": "var a0_0x583d02 = a0_0x3e0d;\nvar input = require('fs')[a0_0x583d02(0x0)](a0_0x583d02(0x1), a0_0x583d02(0x2))[a0_0x583d02(0x3)]();\nvar lines = input[a0_0x583d02(0x4)]('\\x0a');\nfunction a0_0x3e0d(TjqDer, key) {\n    var stringArray = a0_0x3652();\n    a0_0x3e0d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e0d(TjqDer, key);\n}\nvar inning = +lines['shift']();\nfunction a0_0x3652() {\n    var _0x7b9155 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'HIT',\n        'HOMERUN'\n    ];\n    a0_0x3652 = function () {\n        return _0x7b9155;\n    };\n    return a0_0x3652();\n}\nvar out = 0x0;\nvar score = 0x0;\nvar runner = 0x0;\nvar line;\nwhile (line = lines['shift']()) {\n    if (line == a0_0x583d02(0x5)) {\n        runner++;\n        if (runner > 0x3) {\n            score++;\n            runner--;\n        }\n    } else if (line == a0_0x583d02(0x6)) {\n        score += runner + 0x1;\n        runner = 0x0;\n    } else {\n        out++;\n        if (out == 0x3) {\n            console['log'](score);\n            out = 0x0;\n            score = 0x0;\n            runner = 0x0;\n            continue;\n        }\n    }\n}", "test_cases": [["2\nHIT\nOUT\nHOMERUN\nHIT\nHIT\nHOMERUN\nHIT\nOUT\nHIT\nHIT\nHIT\nHIT\nOUT\nHIT\nHIT\nOUT\nHIT\nOUT\nOUT", "7\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar inning = +lines.shift();\n\nvar out = 0;\nvar score = 0;\nvar runner = 0;\n\nvar line;\nwhile (line = lines.shift()) {\n    if (line == 'HIT') {\n        runner++;\n        if (runner > 3) {\n            score++;\n            runner--;\n        }\n    } else if (line == 'HOMERUN') {\n        score += runner + 1;\n        runner = 0;\n    } else {\n        out++;\n        if (out == 3) {\n            console.log(score);\n            out = 0;\n            score = 0;\n            runner = 0;\n            continue;\n        }\n    }\n}", "language": "JavaScript"}
{"filename": "p00142_1", "type": "JavaScript", "obfuscated": "var a0_0x2ac8bb = a0_0xba31;\nfunction a0_0x6735() {\n    var _0x530b98 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'map',\n        'shift',\n        'forEach'\n    ];\n    a0_0x6735 = function () {\n        return _0x530b98;\n    };\n    return a0_0x6735();\n}\nvar input = require('fs')[a0_0x2ac8bb(0x0)]('/dev/stdin', a0_0x2ac8bb(0x1));\nvar arr = input[a0_0x2ac8bb(0x2)]()['split']('\\x0a')[a0_0x2ac8bb(0x3)](Number);\nfunction a0_0xba31(EPBAQT, key) {\n    var stringArray = a0_0x6735();\n    a0_0xba31 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xba31(EPBAQT, key);\n}\nwhile (!![]) {\n    var n = arr[a0_0x2ac8bb(0x4)]();\n    if (n == 0x0)\n        break;\n    if (n == 0x1) {\n        console['log']('');\n        continue;\n    }\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary[i] = ![];\n    for (var i = 0x1; i < n; i++) {\n        ary[i * i % n] = !![];\n    }\n    var m = [];\n    ary[a0_0x2ac8bb(0x5)](function (v, i) {\n        if (v)\n            m['push'](i);\n    });\n    var ans = [];\n    var len = (n - 0x1) / 0x2;\n    for (var i = 0x0; i <= len; i++)\n        ans[i] = 0x0;\n    for (var i = 0x0; i < m['length']; i++) {\n        for (var j = i + 0x1; j < m['length']; j++) {\n            var x = m[i] - m[j];\n            if (x < 0x0)\n                x += n;\n            if (len < x)\n                x = n - x;\n            ans[x] += 0x2;\n        }\n    }\n    ans['shift']();\n    ans['forEach'](function (v) {\n        console['log'](v);\n    });\n}", "test_cases": [["11\n15\n0", "4\n4\n4\n4\n4\n2\n2\n4\n2\n4\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   if(n==1){\n      console.log(\"\");\n      continue;\n   }\n   var ary=[];\n   for(var i=0;i<n;i++)ary[i]=false;\n   for(var i=1;i<n;i++){\n      ary[i*i%n]=true;\n   }\n   var m=[];\n   ary.forEach(function(v,i){\n      if(v)m.push(i);\n   });\n   var ans=[];\n   var len=(n-1)/2 ;\n   for(var i=0;i<=len;i++)ans[i]=0;\n   for(var i=0;i<m.length;i++){\n      for(var j=i+1;j<m.length;j++){\n         var x=m[i]-m[j];\n         if(x<0)x+=n;\n         if(len<x)x=n-x;\n         ans[x]+=2;\n      }\n   }\n   ans.shift();\n   ans.forEach(function(v){\n      console.log(v);\n   });\n}", "language": "JavaScript"}
{"filename": "p00147_1", "type": "JavaScript", "obfuscated": "var a0_0x1e4b31 = a0_0x4a86;\nfunction main() {\n    var _0x25b664 = a0_0x4a86;\n    var waitTime = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0xe,\n        0x9,\n        0x4,\n        0x0,\n        0x0,\n        0x8,\n        0x3,\n        0x2,\n        0x0,\n        0x0,\n        0xf,\n        0xa,\n        0xf,\n        0xa,\n        0x6,\n        0xc,\n        0x7,\n        0x9,\n        0xb,\n        0x6,\n        0x17,\n        0x12,\n        0xd,\n        0x8,\n        0x3,\n        0x17,\n        0x12,\n        0xd,\n        0x8,\n        0x3,\n        0x22,\n        0x1d,\n        0x18,\n        0x16,\n        0x11,\n        0x1c,\n        0x17,\n        0x18,\n        0x13,\n        0x1b,\n        0x22,\n        0x1d,\n        0x23,\n        0x1e,\n        0x1c,\n        0x1f,\n        0x1c,\n        0x17,\n        0x18,\n        0x1c,\n        0x2a,\n        0x25,\n        0x20,\n        0x1b,\n        0x16,\n        0x2a,\n        0x25,\n        0x20,\n        0x1b,\n        0x16,\n        0x35,\n        0x30,\n        0x2b,\n        0x29,\n        0x24,\n        0x2f,\n        0x2a,\n        0x2b,\n        0x26,\n        0x2e,\n        0x40,\n        0x3b,\n        0x36,\n        0x31,\n        0x2c,\n        0x3d,\n        0x38,\n        0x33,\n        0x2e,\n        0x2c,\n        0x48,\n        0x43,\n        0x3e,\n        0x39,\n        0x34,\n        0x48,\n        0x43,\n        0x3e,\n        0x39,\n        0x34,\n        0x53,\n        0x4e,\n        0x49,\n        0x47\n    ];\n    for (var i = 0x0; i < input[_0x25b664(0x0)]; i++) {\n        var idx = parseInt(input[i], 0xa);\n        console[_0x25b664(0x1)]('%d', waitTime[idx]);\n    }\n}\nvar input = '';\nprocess['stdin'][a0_0x1e4b31(0x2)]();\nprocess[a0_0x1e4b31(0x3)]['setEncoding'](a0_0x1e4b31(0x4));\nfunction a0_0x4a86(xqIiUb, key) {\n    var stringArray = a0_0x4ff6();\n    a0_0x4a86 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4a86(xqIiUb, key);\n}\nprocess[a0_0x1e4b31(0x3)]['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x1e4b31(0x3)]['on'](a0_0x1e4b31(0x5), function () {\n    input = input['split']('\\x0a');\n    main();\n});\nfunction a0_0x4ff6() {\n    var _0x46410b = [\n        'length',\n        'log',\n        'resume',\n        'stdin',\n        'utf8',\n        'end'\n    ];\n    a0_0x4ff6 = function () {\n        return _0x46410b;\n    };\n    return a0_0x4ff6();\n}", "test_cases": [["5\n6\n7\n8", "0\n14\n9\n4"]], "original": "function main(){\n  var waitTime = [0,0,0,0,0,0,14,9,4,0,0,8,3,2,0,0,15,10,15,10,6,12,7,9,11,6,23,18,13,8,3,23,18,13,8,3,34,29,24,22,17,28,23,24,19,27,34,29,35,30,28,31,28,23,24,28,42,37,32,27,22,42,37,32,27,22,53,48,43,41,36,47,42,43,38,46,64,59,54,49,44,61,56,51,46,44,72,67,62,57,52,72,67,62,57,52,83,78,73,71];\n  for(var i = 0; i < input.length; i++){\n    var idx = parseInt(input[i], 10);\n    console.log('%d', waitTime[idx]);\n  }\n}\nvar\ninput = '';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00188_1", "type": "JavaScript", "obfuscated": "var a0_0x8b3686 = a0_0xafcb;\nfunction binarySearch(A, key) {\n    var _0x7e9c0d = a0_0xafcb;\n    var left = 0x0;\n    var right = A[_0x7e9c0d(0x0)] - 0x1;\n    var cnt = 0x0;\n    while (!![]) {\n        cnt++;\n        if (left == right)\n            break;\n        var mid = Math[_0x7e9c0d(0x1)]((left + right) / 0x2);\n        if (A[mid] == key)\n            return cnt;\n        if (key < A[mid])\n            right = mid;\n        else\n            left = mid + 0x1;\n    }\n    return cnt;\n}\nvar input = require('fs')['readFileSync'](a0_0x8b3686(0x2), 'utf8');\nfunction a0_0xafcb(SeyFsV, key) {\n    var stringArray = a0_0x2ca4();\n    a0_0xafcb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xafcb(SeyFsV, key);\n}\nfunction a0_0x2ca4() {\n    var _0x4f8712 = [\n        'length',\n        'floor',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'push'\n    ];\n    a0_0x2ca4 = function () {\n        return _0x4f8712;\n    };\n    return a0_0x2ca4();\n}\nvar Arr = input[a0_0x8b3686(0x3)]()[a0_0x8b3686(0x4)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x8b3686(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++)\n        arr[a0_0x8b3686(0x6)](Arr[a0_0x8b3686(0x5)]() - 0x0);\n    console['log'](binarySearch(arr, Arr['shift']() - 0x0));\n}", "test_cases": [["7\n11\n15\n23\n36\n51\n61\n86\n51\n4\n1\n2\n3\n5\n4\n0", "3\n3"]], "original": "function binarySearch(A,key){\n    var left = 0;\n    var right = A.length-1;\n    var cnt=0;\n    while(true){\n        cnt++;\n        if(left==right)break;\n        var mid =Math.floor((left + right)/2);\n        if (A[mid] == key)return cnt;\n        if (key < A[mid]) right = mid;\n        else left = mid+1;\n    }\n    return cnt;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++)arr.push(Arr.shift()-0);\n   console.log(binarySearch(arr,Arr.shift()-0));\n}", "language": "JavaScript"}
{"filename": "p00231_1", "type": "JavaScript", "obfuscated": "var a0_0x215468 = a0_0x5851;\nvar input = require('fs')[a0_0x215468(0x0)](a0_0x215468(0x1), 'utf8');\nvar Arr = input[a0_0x215468(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr[a0_0x215468(0x3)]() - 0x0;\n    if (N == 0x0)\n        break;\n    var plus = {};\n    var minus = {};\n    var pm = [];\n    for (var i = 0x0; i < N; i++) {\n        var arr = Arr['shift']()[a0_0x215468(0x4)]('\\x20')[a0_0x215468(0x5)](Number);\n        var m = arr[0x0];\n        var a = arr[0x1];\n        var b = arr[0x2] - 0.001 * N;\n        plus[a] = m;\n        minus[b] = m;\n        pm[a0_0x215468(0x6)](a);\n        pm[a0_0x215468(0x6)](b);\n    }\n    pm[a0_0x215468(0x7)](function (a, b) {\n        return a - b;\n    });\n    var flag = 'OK';\n    var sum = 0x0;\n    for (var i = 0x0; i < pm[a0_0x215468(0x8)]; i++) {\n        var v = pm[i];\n        if (plus['hasOwnProperty'](v))\n            sum += plus[v];\n        if (minus['hasOwnProperty'](v))\n            sum -= minus[v];\n        if (sum > 0x96) {\n            flag = 'NG';\n            break;\n        }\n    }\n    console[a0_0x215468(0x9)](flag);\n}\nfunction a0_0x5851(OgxZYi, key) {\n    var stringArray = a0_0x2749();\n    a0_0x5851 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5851(OgxZYi, key);\n}\nfunction a0_0x2749() {\n    var _0x368b7e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'push',\n        'sort',\n        'length',\n        'log'\n    ];\n    a0_0x2749 = function () {\n        return _0x368b7e;\n    };\n    return a0_0x2749();\n}", "test_cases": [["3\n80 0 30\n50 5 25\n90 27 50\n3\n80 0 30\n70 5 25\n71 30 50\n0", "NG\nOK"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var plus={};\n   var minus={};\n   var pm=[];\n   for(var i=0;i<N;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var m=arr[0];\n      var a=arr[1];\n      var b=arr[2]-(0.001*N);\n      plus[a]=m;\n      minus[b]=m;\n      pm.push(a);\n      pm.push(b);\n   }\n   pm.sort(function(a,b){return a-b;});\n   var flag=\"OK\";\n   var sum=0;\n   for(var i=0;i<pm.length;i++){\n      var v=pm[i];\n      if(plus.hasOwnProperty(v))sum+=plus[v];\n      if(minus.hasOwnProperty(v))sum-=minus[v];\n      if(sum>150){flag=\"NG\";break;}\n   }\n   console.log(flag);\n}", "language": "JavaScript"}
{"filename": "p00241_1", "type": "JavaScript", "obfuscated": "var a0_0x51a291 = a0_0x1371;\nvar input = require('fs')['readFileSync'](a0_0x51a291(0x0), a0_0x51a291(0x1));\nvar Arr = input[a0_0x51a291(0x2)]()[a0_0x51a291(0x3)]('\\x0a');\nfunction a0_0x270e() {\n    var _0x3f2a5f = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map'\n    ];\n    a0_0x270e = function () {\n        return _0x3f2a5f;\n    };\n    return a0_0x270e();\n}\nfunction a0_0x1371(uMfLiw, key) {\n    var stringArray = a0_0x270e();\n    a0_0x1371 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1371(uMfLiw, key);\n}\nwhile (!![]) {\n    var N = Arr[a0_0x51a291(0x4)]() - 0x0;\n    if (N == 0x0)\n        break;\n    for (var I = 0x0; I < N; I++) {\n        var A = Arr['shift']()[a0_0x51a291(0x3)]('\\x20')[a0_0x51a291(0x5)](Number);\n        var x1 = A[0x0];\n        var y1 = A[0x1];\n        var z1 = A[0x2];\n        var w1 = A[0x3];\n        var x2 = A[0x4];\n        var y2 = A[0x5];\n        var z2 = A[0x6];\n        var w2 = A[0x7];\n        var a = x1 * x2;\n        var i = x1 * y2;\n        var j = x1 * z2;\n        var k = x1 * w2;\n        i += y1 * x2;\n        a -= y1 * y2;\n        k += y1 * z2;\n        j -= y1 * w2;\n        j += z1 * x2;\n        k -= z1 * y2;\n        a -= z1 * z2;\n        i += z1 * w2;\n        k += w1 * x2;\n        j += w1 * y2;\n        i -= w1 * z2;\n        a -= w1 * w2;\n        console['log'](a + '\\x20' + i + '\\x20' + j + '\\x20' + k);\n    }\n}", "test_cases": [["2\n1 2 3 4 7 6 7 8\n5 6 7 8 3 2 3 4\n0", "-58 16 36 32\n-50 32 28 48"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\nvar N=Arr.shift()-0;\nif(N==0)break;\nfor(var I=0;I<N;I++){\nvar A=Arr.shift().split(\" \").map(Number);\nvar x1=A[0];\nvar y1=A[1];\nvar z1=A[2];\nvar w1=A[3];\n \nvar x2=A[4];\nvar y2=A[5];\nvar z2=A[6];\nvar w2=A[7];\n \n   var a = x1 * x2;\n   var i = x1 * y2;\n   var j = x1 * z2;\n   var k = x1 * w2;\n \n   i += y1 * x2;\n   a -= y1 * y2;\n   k += y1 * z2;\n   j -= y1 * w2;\n              \n   j += z1 * x2;\n   k -= z1 * y2;\n   a -= z1 * z2;\n   i += z1 * w2;\n              \n   k += w1 * x2;\n   j += w1 * y2;\n   i -= w1 * z2;\n   a -= w1 * w2;\nconsole.log(a+\" \"+i+\" \"+j+\" \"+k);\n}\n}", "language": "JavaScript"}
{"filename": "p00884_1", "type": "JavaScript", "obfuscated": "function a0_0x5a27() {\n    var _0x30905d = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'slice',\n        'forEach',\n        'length',\n        'keys',\n        'hasOwnProperty'\n    ];\n    a0_0x5a27 = function () {\n        return _0x30905d;\n    };\n    return a0_0x5a27();\n}\nvar a0_0x52e4f2 = a0_0x5eef;\nvar input = require('fs')[a0_0x52e4f2(0x0)]('/dev/stdin', a0_0x52e4f2(0x1));\nfunction a0_0x5eef(DcgJxr, key) {\n    var stringArray = a0_0x5a27();\n    a0_0x5eef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5eef(DcgJxr, key);\n}\nvar Arr = input[a0_0x52e4f2(0x2)]()[a0_0x52e4f2(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x52e4f2(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var first = Arr[a0_0x52e4f2(0x4)]()['split'](':');\n    first = first[0x1][a0_0x52e4f2(0x5)](0x0, -0x1)[a0_0x52e4f2(0x3)](',');\n    var F = {};\n    first[a0_0x52e4f2(0x6)](function (v) {\n        F[v] = !![];\n    });\n    var obj = {};\n    for (var i = 0x0; i < n - 0x1; i++) {\n        var arr = Arr['shift']()[a0_0x52e4f2(0x3)](':');\n        obj[arr[0x0]] = arr[0x1][a0_0x52e4f2(0x5)](0x0, -0x1)['split'](',');\n    }\n    var L = 0x0;\n    while (!![]) {\n        if (L == Object['keys'](F)[a0_0x52e4f2(0x7)])\n            break;\n        L = Object[a0_0x52e4f2(0x8)](F)['length'];\n        for (var k in F) {\n            if (obj[a0_0x52e4f2(0x9)](k) && F[k]) {\n                obj[k][a0_0x52e4f2(0x6)](function (v) {\n                    F[v] = !![];\n                });\n                F[k] = ![];\n            }\n        }\n    }\n    var cnt = 0x0;\n    for (var k in F)\n        if (obj['hasOwnProperty'](k) == ![])\n            cnt++;\n    console['log'](cnt);\n}", "test_cases": [["2\ndevelopment:alice,bob,design,eve.\ndesign:carol,alice.\n3\none:another.\nanother:yetanother.\nyetanother:dave.\n3\nfriends:alice,bob,bestfriends,carol,fran,badcompany.\nbestfriends:eve,alice.\nbadcompany:dave,carol.\n5\na:b,c,d,e.\nb:c,d,e,f.\nc:d,e,f,g.\nd:e,f,g,h.\ne:f,g,h,i.\n4\naa:bb.\ncc:dd,ee.\nff:gg.\nbb:cc.\n0", "4\n1\n6\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var first=Arr.shift().split(\":\");\n   first=first[1].slice(0,-1).split(\",\");\n   var F={};\n   first.forEach(function(v){F[v]=true;});\n   var obj={};\n   for(var i=0;i<n-1;i++){\n      var arr=Arr.shift().split(\":\");\n      obj[arr[0]]=arr[1].slice(0,-1).split(\",\");\n   }\n   var L=0;\n   while(true){\n      if(L==Object.keys(F).length)break;\n      L=Object.keys(F).length;\n      for(var k in F){\n         if(obj.hasOwnProperty(k) && F[k]){\n            obj[k].forEach(function(v){F[v]=true;});\n            F[k]=false;\n         }\n      }\n   }\n   var cnt=0;\n   for(var k in F)if(obj.hasOwnProperty(k)==false)cnt++;\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p02316_1", "type": "JavaScript", "obfuscated": "var a0_0x145a9e = a0_0x867e;\nfunction knapsack() {\n    var _0xb40934 = a0_0x867e;\n    var C = [];\n    for (var i = 0x0; i <= N; i++)\n        C[i] = [];\n    for (var i = 0x0; i <= W; i++)\n        C[0x0][i] = 0x0;\n    for (var i = 0x0; i <= N; i++)\n        C[i][0x0] = 0x0;\n    for (var i = 0x1; i <= N; i++) {\n        if (_0xb40934(0x0) !== 'HqNhl') {\n            for (var j = 0x1; j <= W; j++) {\n                if (items[i]['w'] <= W) {\n                    if (items[i]['v'] + C[i - 0x1][j - items[i]['w']] > C[i - 0x1][j]) {\n                        if ('mSnld' !== 'fCejn') {\n                            C[i][j] = items[i]['v'] + C[i - 0x1][j - items[i]['w']];\n                        } else {\n                            C[i][j] = C[i - 0x1][j];\n                        }\n                    } else {\n                        C[i][j] = C[i - 0x1][j];\n                    }\n                } else {\n                    C[i][j] = C[i - 0x1][j];\n                }\n            }\n        } else {\n            items['push']({\n                'v': arr[0x0] * k,\n                'w': arr[0x1] * k\n            });\n            N++;\n            k++;\n        }\n    }\n    return C[N][W];\n}\nvar input = require('fs')[a0_0x145a9e(0x1)](a0_0x145a9e(0x2), 'utf8');\nvar Arr = input[a0_0x145a9e(0x3)]()[a0_0x145a9e(0x4)]('\\x0a');\nvar nW = Arr[a0_0x145a9e(0x5)]()[a0_0x145a9e(0x4)]('\\x20')[a0_0x145a9e(0x6)](Number);\nvar n = nW[0x0];\nfunction a0_0xa2f6() {\n    var _0x266421 = [\n        'EibzB',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'log'\n    ];\n    a0_0xa2f6 = function () {\n        return _0x266421;\n    };\n    return a0_0xa2f6();\n}\nvar W = nW[0x1];\nfunction a0_0x867e(VYGfJz, key) {\n    var stringArray = a0_0xa2f6();\n    a0_0x867e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x867e(VYGfJz, key);\n}\nvar N = 0x0;\nvar items = [null];\nfor (var i = 0x1; i <= n; i++) {\n    var arr = Arr[a0_0x145a9e(0x5)]()[a0_0x145a9e(0x4)]('\\x20')['map'](Number);\n    var k = 0x1;\n    do {\n        items[a0_0x145a9e(0x7)]({\n            'v': arr[0x0] * k,\n            'w': arr[0x1] * k\n        });\n        N++;\n        k++;\n    } while (arr[0x1] * k <= W);\n}\nvar max = knapsack();\nconsole[a0_0x145a9e(0x8)](max);", "test_cases": [["4 8\n4 2\n5 2\n2 1\n8 3", "21"], ["2 20\n5 9\n4 10", "10"], ["3 9\n2 1\n3 1\n5 2", "27"]], "original": "function knapsack(){\n   var C=[];\n   for(var i=0;i<=N;i++)C[i]=[];\n   for(var i=0;i<=W;i++)C[0][i]=0;\n   for(var i=0;i<=N;i++)C[i][0]=0;\n   for(var i=1;i<=N;i++){\n      for(var j=1;j<=W;j++){\n         if(items[i].w<=W){\n            if(items[i].v+C[i-1][j-items[i].w]>C[i-1][j]){\n               C[i][j]=items[i].v+C[i-1][j-items[i].w];\n            }else{\n               C[i][j]=C[i-1][j];\n            }\n         }else{\n            C[i][j]=C[i-1][j];\n         } \n      }  \n   }\n   return C[N][W];\n}   \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar nW=(Arr.shift()).split(\" \").map(Number);\nvar n=nW[0];\nvar W=nW[1];\nvar N=0;\nvar items=[null];\nfor(var i=1;i<=n;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var k=1;\n   do{\n      items.push({v:arr[0]*k,w:arr[1]*k});\n      N++;\n      k++;\n   }while(arr[1]*k<=W);\n}\nvar max=knapsack();\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p02468_1", "type": "JavaScript", "obfuscated": "var a0_0x413596 = a0_0x1db4;\nvar input = require('fs')[a0_0x413596(0x0)](a0_0x413596(0x1), a0_0x413596(0x2))[a0_0x413596(0x3)]();\nvar nums = input[a0_0x413596(0x4)]('\\x20')[a0_0x413596(0x5)](function (num) {\n    return +num;\n});\nvar n = nums[0x0];\nvar m = nums[0x1];\nvar mod = 0x1;\nfor (var i = 0x0; i < m; i++) {\n    mod = mod * n % 0x3b9aca07;\n}\nfunction a0_0x1db4(FYOhql, key) {\n    var stringArray = a0_0x570f();\n    a0_0x1db4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1db4(FYOhql, key);\n}\nconsole[a0_0x413596(0x6)](mod);\nfunction a0_0x570f() {\n    var _0x212c51 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x570f = function () {\n        return _0x212c51;\n    };\n    return a0_0x570f();\n}", "test_cases": [["2 3", "8"], ["5 8", "390625"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar nums = input.split(' ').map(function(num){return +num;});\nvar n = nums[0];\nvar m = nums[1];\n\nvar mod = 1;\nfor (var i = 0; i < m; i++) {\n    mod = (mod * n) % 1000000007;\n}\n\nconsole.log(mod);", "language": "JavaScript"}
{"filename": "p02541_1", "type": "JavaScript", "obfuscated": "function a0_0x1941() {\n    var _0x440e47 = [\n        'split',\n        'sqrt',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1941 = function () {\n        return _0x440e47;\n    };\n    return a0_0x1941();\n}\nvar a0_0x1f7ab5 = a0_0xe9ed;\nfunction Main(input) {\n    var _0x20e96f = a0_0xe9ed;\n    input = input[_0x20e96f(0x0)]('\\x0a');\n    const N = parseInt(input[0x0], 0xa);\n    for (var i = 0x1; i > 0x0; i++) {\n        var n = 0.5 * (Math[_0x20e96f(0x1)](0x8 * N * i + 0x1) - 0x1);\n        if (Number['isInteger'](n) == !![]) {\n            console[_0x20e96f(0x2)](n);\n            break;\n        }\n    }\n}\nfunction a0_0xe9ed(SjAHKs, key) {\n    var stringArray = a0_0x1941();\n    a0_0xe9ed = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe9ed(SjAHKs, key);\n}\nMain(require('fs')[a0_0x1f7ab5(0x3)](a0_0x1f7ab5(0x4), a0_0x1f7ab5(0x5)));", "test_cases": [["11", "10"], ["20200920", "1100144"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  \n  const N = parseInt(input[0], 10);\n\n  for (var i = 1; i > 0; i++) {\n    var n = 0.5*(Math.sqrt((8*N*i)+1)-1);\n    if(Number.isInteger(n) == true){\n      console.log(n);\n      break;\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02736_1", "type": "JavaScript", "obfuscated": "var a0_0x3d3b04 = a0_0x155f;\nfunction a0_0x155f(ccKgpa, key) {\n    var stringArray = a0_0x1bb1();\n    a0_0x155f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x155f(ccKgpa, key);\n}\nfunction a0_0x1bb1() {\n    var _0x5ce0b8 = [\n        'split',\n        'length',\n        'map',\n        'abs',\n        'push',\n        'shift',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1bb1 = function () {\n        return _0x5ce0b8;\n    };\n    return a0_0x1bb1();\n}\nfunction Main(input) {\n    var _0x829115 = a0_0x155f;\n    input = input[_0x829115(0x0)]('\\x0a');\n    for (i = 0x0; i < input[_0x829115(0x1)]; i = i + 0x2) {\n        var N = parseInt(input[i]);\n        var a = input[i + 0x1][_0x829115(0x0)]('');\n        var aa = a[_0x829115(0x2)](Number);\n        for (j = N; j > 0x1; j--) {\n            for (k = 0x0; k < j; k++) {\n                var e = Math[_0x829115(0x3)](aa[0x0] - aa[0x1]);\n                aa[_0x829115(0x4)](e);\n                aa[_0x829115(0x5)]();\n            }\n            aa['pop']();\n        }\n        console['log'](aa[0x0]);\n    }\n}\nMain(require('fs')[a0_0x3d3b04(0x6)](a0_0x3d3b04(0x7), a0_0x3d3b04(0x8)));", "test_cases": [["4\n1231", "1"], ["10\n2311312312", "0"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    for (i=0; i < input.length; i=i+2) {\n        var N = parseInt(input[i])\n        var a = input[i+1].split(\"\")\n        var aa = a.map(Number)\n        for (j=N; j > 1; j--) {\n            for (k=0; k < j; k++) {\n                var e = Math.abs(aa[0]-aa[1])\n                aa.push(e)\n                aa.shift()\n            }\n            aa.pop()\n        }\n        console.log(aa[0])\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02763_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xef26e9 = a0_0x15cc;\nfunction a0_0x15cc(BZIzjr, key) {\n    const stringArray = a0_0x2573();\n    a0_0x15cc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x15cc(BZIzjr, key);\n}\nfunction main(input) {\n    const _0x48d888 = a0_0x15cc;\n    let n = parseInt(input[0x0]);\n    let s = input[0x1];\n    let q_l = parseInt(input[0x2]);\n    let q = [];\n    for (let j = 0x0; j < q_l; j++) {\n        let kari = input[j + 0x3][_0x48d888(0x0)]()[_0x48d888(0x1)]('\\x20');\n        q[j] = parseInt(kari[0x0]);\n        if (q[j] === 0x1) {\n            let i = parseInt(kari[0x1]);\n            let c = kari[0x2];\n            let str1 = s['slice'](0x0, i - 0x1);\n            let str2 = s[_0x48d888(0x2)](i);\n            s = str1 + c + str2;\n        } else {\n            let l = parseInt(kari[0x1]);\n            let r = parseInt(kari[0x2]);\n            let str = s['slice'](l - 0x1, r);\n            let list = {};\n            let counter = 0x0;\n            for (let i = 0x0; i < str[_0x48d888(0x3)]; i++) {\n                if (list[str[i]] === undefined) {\n                    counter++;\n                    list[str[i]] = !![];\n                }\n            }\n            console[_0x48d888(0x4)](counter);\n        }\n    }\n}\nmain(require('fs')[a0_0xef26e9(0x5)]('/dev/stdin', a0_0xef26e9(0x6))[a0_0xef26e9(0x0)]()[a0_0xef26e9(0x1)]('\\x0a'));\nfunction a0_0x2573() {\n    const _0x1dee75 = [\n        'trim',\n        'split',\n        'slice',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2573 = function () {\n        return _0x1dee75;\n    };\n    return a0_0x2573();\n}", "test_cases": [["7\nabcdbbd\n6\n2 3 6\n1 5 z\n2 1 1\n1 4 a\n1 7 d\n2 1 7", "3\n1\n5"]], "original": "\"use strict\";\nfunction main(input) {\n  let n = parseInt(input[0]);\n  let s = input[1];\n \n  let q_l = parseInt(input[2]);\n  let q = [];\n \n  for(let j=0;j<q_l;j++){\n    let kari = input[j+3].trim().split(\" \")\n    q[j] = parseInt(kari[0]);\n    if(q[j]===1){\n      let i = parseInt(kari[1]);\n      let c = kari[2];\n      let str1 = s.slice(0, i-1);\n      let str2 = s.slice(i);\n \n      s = str1 + c + str2;\n    }else{\n      let l = parseInt(kari[1]);\n      let r = parseInt(kari[2]);\n      let str = s.slice(l-1, r);\n \n      //カウント\n      let list = {};\n      let counter = 0;\n \n      for(let i=0;i<str.length;i++){\n        if(list[str[i]]===undefined){\n          counter++;\n          list[str[i]] = true;\n        }\n      }\n      console.log(counter);\n    }\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02775_1", "type": "JavaScript", "obfuscated": "function a0_0x34a4(zMKGpj, key) {\n    var stringArray = a0_0x5c97();\n    a0_0x34a4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x34a4(zMKGpj, key);\n}\nfunction a0_0x5c97() {\n    var _0x16230b = [\n        'split',\n        'length',\n        'pop',\n        'min',\n        'log',\n        'utf8'\n    ];\n    a0_0x5c97 = function () {\n        return _0x16230b;\n    };\n    return a0_0x5c97();\n}\nvar a0_0x357add = a0_0x34a4;\nfunction Main(input) {\n    var _0x18f288 = a0_0x34a4;\n    input = input[_0x18f288(0x0)]('\\x0a');\n    if (input[input[_0x18f288(0x1)] - 0x1] === '') {\n        input[_0x18f288(0x2)]();\n    }\n    const N = input[0x0];\n    var up = 0x1;\n    var down = 0x0;\n    var nup, ndown;\n    for (var i = 0x0; i < N[_0x18f288(0x1)]; i++) {\n        nup = Math[_0x18f288(0x3)](0x9 - N[i] + up, 0x1 + down + (N[i] - 0x0));\n        ndown = Math['min'](0xa - N[i] + up, down + (N[i] - 0x0));\n        up = nup;\n        down = ndown;\n    }\n    console[_0x18f288(0x4)](down);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x357add(0x5)));", "test_cases": [["36", "8"], ["91", "3"], ["314159265358979323846264338327950288419716939937551058209749445923078164062862089986280348253421170", "243"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0];\n  var up=1;\n  var down=0;\n  var nup,ndown;\n  for(var i=0;i<N.length;i++){\n    nup=Math.min(9-N[i]+up,1+down+(N[i]-0));\n    ndown=Math.min(10-N[i]+up,down+(N[i]-0));\n    up=nup;\n    down=ndown;\n  }\n  console.log(down);\n\n}\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n\n\n\n  \n", "language": "JavaScript"}
{"filename": "p02851_1", "type": "JavaScript", "obfuscated": "function a0_0x19b8(reaAil, key) {\n    const stringArray = a0_0x531b();\n    a0_0x19b8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19b8(reaAil, key);\n}\nfunction a0_0x531b() {\n    const _0x2b81bc = [\n        'map',\n        'reduce',\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split'\n    ];\n    a0_0x531b = function () {\n        return _0x2b81bc;\n    };\n    return a0_0x531b();\n}\nconst a0_0x33d065 = a0_0x19b8;\nfunction Main(input) {\n    const _0x336d3d = a0_0x19b8;\n    const k = input[0x0][0x1];\n    const as = input[0x1][_0x336d3d(0x0)](Number);\n    const answer = as[_0x336d3d(0x1)]((total, cv, ci) => {\n        const _0x3ce821 = a0_0x19b8;\n        var result = 0x0;\n        as[_0x3ce821(0x2)](ci)['reduce']((pv, value, index) => {\n            const remainder = (pv + value) % k;\n            if (remainder === index + 0x1) {\n                result++;\n            }\n            return remainder;\n        }, 0x0);\n        return total + result;\n    }, null);\n    console[_0x336d3d(0x3)](answer);\n}\nMain(require('fs')[a0_0x33d065(0x4)](a0_0x33d065(0x5), 'utf8')[a0_0x33d065(0x6)]()['split']('\\x0a')[a0_0x33d065(0x0)](line => line[a0_0x33d065(0x7)]('\\x20')));", "test_cases": [["5 4\n1 4 2 3 5", "4"], ["8 4\n4 2 4 2 4 2 4 2", "7"], ["10 7\n14 15 92 65 35 89 79 32 38 46", "8"]], "original": "function Main(input) {\n  const k = input[0][1];\n\n  /** @type {number[]} */\n  const as = input[1].map(Number);\n\n  const answer = as.reduce((total, cv, ci) => {\n    var result = 0;\n\n    as.slice(ci).reduce((pv, value, index) => {\n      const remainder = (pv + value) % k;\n\n      if (remainder === (index + 1)) {\n        result++;\n      }\n\n      return remainder;\n    }, 0);\n\n    return total + result;\n  }, null);\n\n  console.log(answer);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\").map(line => line.split(' ')));", "language": "JavaScript"}
{"filename": "p02852_1", "type": "JavaScript", "obfuscated": "const a0_0x2dd4f7 = a0_0x3fd1;\nfunction a0_0x5b8f() {\n    const _0x840bca = [\n        'split',\n        'pop',\n        'unshift',\n        'log',\n        'join',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x5b8f = function () {\n        return _0x840bca;\n    };\n    return a0_0x5b8f();\n}\nfunction a0_0x3fd1(WQKpDx, key) {\n    const stringArray = a0_0x5b8f();\n    a0_0x3fd1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fd1(WQKpDx, key);\n}\nfunction Main(input) {\n    const _0x2d81bc = a0_0x3fd1;\n    input = input[_0x2d81bc(0x0)]('\\x0a');\n    if (input[input['length'] - 0x1] === '') {\n        input[_0x2d81bc(0x1)]();\n    }\n    const N = input[0x0][_0x2d81bc(0x0)]('\\x20')[0x0] - 0x0;\n    const M = input[0x0][_0x2d81bc(0x0)]('\\x20')[0x1] - 0x0;\n    const S = input[0x1];\n    var cur = S['length'] - 0x1;\n    var ret = [];\n    while (cur > 0x0) {\n        if (cur <= M) {\n            ret[_0x2d81bc(0x2)](cur);\n            break;\n        }\n        for (var i = 0x0; i < M; i++) {\n            if (S[cur - M + i] === '0') {\n                ret[_0x2d81bc(0x2)](M - i);\n                cur = cur - M + i;\n                break;\n            }\n            if (i === M - 0x1) {\n                console[_0x2d81bc(0x3)](-0x1);\n                return;\n            }\n        }\n    }\n    console[_0x2d81bc(0x3)](ret[_0x2d81bc(0x4)]('\\x20'));\n}\nMain(require('fs')[a0_0x2dd4f7(0x5)](a0_0x2dd4f7(0x6), 'utf8'));", "test_cases": [["9 3\n0001000100", "1 3 2 3"], ["5 4\n011110", "-1"], ["6 6\n0101010", "6"]], "original": "\n\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  const S=input[1];\n  var cur=S.length-1;\n  var ret=[];\n  while(cur>0){\n    if(cur<=M){\n      ret.unshift(cur);\n      break;\n    }\n    for(var i=0;i<M;i++){\n      if(S[cur-M+i]==='0'){\n        ret.unshift(M-i);\n        cur=cur-M+i;\n        break;\n      }\n      if(i===M-1){\n        console.log(-1);\n        return;\n      }\n    }\n  }\n  console.log(ret.join(' '));\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02962_1", "type": "JavaScript", "obfuscated": "const a0_0x2d1851 = a0_0x3ceb;\nfunction a0_0x15ee() {\n    const _0x7a0700 = [\n        'length',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x15ee = function () {\n        return _0x7a0700;\n    };\n    return a0_0x15ee();\n}\nfunction a0_0x3ceb(saUlTq, key) {\n    const stringArray = a0_0x15ee();\n    a0_0x3ceb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ceb(saUlTq, key);\n}\nfunction Main(input) {\n    const _0x20584b = a0_0x3ceb;\n    input = input['split']('\\x0a');\n    const s = input[0x0];\n    const t = input[0x1];\n    const match = [];\n    for (i = 0x0; i < s[_0x20584b(0x0)]; i++) {\n        if ((s + t)['slice'](i, i + t[_0x20584b(0x0)]) == t) {\n            match[_0x20584b(0x1)](!![]);\n        } else {\n            match[_0x20584b(0x1)](![]);\n        }\n    }\n    max = 0x0;\n    for (i = 0x0; i < s[_0x20584b(0x0)]; i++) {\n        isInf = ![];\n        now = i;\n        getted = [];\n        while (match[now]) {\n            getted[_0x20584b(0x1)](now);\n            now = (now + t[_0x20584b(0x0)]) % s['length'];\n            if (getted['indexOf'](now) != -0x1) {\n                isInf = !![];\n                break;\n            }\n        }\n        if (isInf) {\n            max = -0x1;\n            break;\n        } else {\n            if (max < getted[_0x20584b(0x0)])\n                max = getted[_0x20584b(0x0)];\n        }\n    }\n    console['log'](max);\n}\nMain(require('fs')[a0_0x2d1851(0x2)](a0_0x2d1851(0x3), a0_0x2d1851(0x4)));", "test_cases": [["abcabab\nab", "3"], ["aa\naaaaaaa", "-1"], ["aba\nbaaab", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst s = input[0]\n\tconst t = input[1]\n\tconst match = []\n\tfor(i=0; i < s.length; i++){\n\t\tif((s+t).slice(i,i+t.length) == t){\n\t\t\tmatch.push(true)\n\t\t}else{\n\t\t\tmatch.push(false)\n\t\t}\n\t}\n\tmax = 0\n\tfor(i=0; i < s.length; i++){\n\t\tisInf = false\n\t\tnow = i\n\t\tgetted = []\n\t\twhile(match[now]){\n\t\t\tgetted.push(now)\n\t\t\tnow = (now + t.length) % s.length\n\t\t\tif(getted.indexOf(now) != -1){\n\t\t\t\tisInf = true\n\t\t\t\tbreak\n\t\t\t} \n\t\t}\n\t\tif(isInf){\n\t\t\tmax = -1\n\t\t\tbreak\n\t\t}else{\n\t\t\tif(max < getted.length) max = getted.length\n\t\t}\n\t}\n\tconsole.log(max)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02964_1", "type": "JavaScript", "obfuscated": "function a0_0x2fda() {\n    const _0x5751e1 = [\n        'split',\n        'indexOf',\n        'slice',\n        'push',\n        'join',\n        'ofkfE',\n        'log',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2fda = function () {\n        return _0x5751e1;\n    };\n    return a0_0x2fda();\n}\nfunction a0_0x3837(FUrmLN, key) {\n    const stringArray = a0_0x2fda();\n    a0_0x3837 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3837(FUrmLN, key);\n}\nconst a0_0x294f43 = a0_0x3837;\nfunction Main(input) {\n    const _0x1c8ff6 = a0_0x3837;\n    input = input[_0x1c8ff6(0x0)]('\\x0a');\n    input1 = input[0x0][_0x1c8ff6(0x0)]('\\x20');\n    const N = parseInt(input1[0x0]);\n    const K = parseInt(input1[0x1]);\n    const As = input[0x1]['split']('\\x20');\n    var filtered = [];\n    var results = [''];\n    for (i = 0x0; i < K; i++) {\n        for (j = 0x0; j < N; j++) {\n            if (filtered[_0x1c8ff6(0x1)](As[j]) != -0x1) {\n                var id = filtered[_0x1c8ff6(0x1)](As[j]);\n                filtered = filtered[_0x1c8ff6(0x2)](0x0, id);\n            } else {\n                if ('Myyfu' === 'nVarY') {\n                    if (filtered[_0x1c8ff6(0x1)](As[j]) != -0x1) {\n                        var id = filtered['indexOf'](As[j]);\n                        filtered = filtered[_0x1c8ff6(0x2)](0x0, id);\n                    } else {\n                        filtered[_0x1c8ff6(0x3)](As[j]);\n                    }\n                } else {\n                    filtered[_0x1c8ff6(0x3)](As[j]);\n                }\n            }\n        }\n        if (results[_0x1c8ff6(0x1)](filtered[_0x1c8ff6(0x4)]('\\x20')) == -0x1) {\n            if (_0x1c8ff6(0x5) !== _0x1c8ff6(0x5)) {\n                results['push'](filtered[_0x1c8ff6(0x4)]('\\x20'));\n            } else {\n                results[_0x1c8ff6(0x3)](filtered['join']('\\x20'));\n            }\n        } else {\n            break;\n        }\n    }\n    const roopstart = results[_0x1c8ff6(0x1)](filtered[_0x1c8ff6(0x4)]('\\x20'));\n    if (roopstart == K) {\n        console[_0x1c8ff6(0x6)](results[roopstart]);\n    } else {\n        const roopId = (K - roopstart) % (results[_0x1c8ff6(0x7)] - roopstart);\n        console[_0x1c8ff6(0x6)](results[roopstart + roopId]);\n    }\n}\nMain(require('fs')[a0_0x294f43(0x8)](a0_0x294f43(0x9), a0_0x294f43(0xa)));", "test_cases": [["3 2\n1 2 3", "2 3"], ["5 10\n1 2 3 2 3", "3"], ["6 1000000000000\n1 1 2 2 3 3", ""], ["11 97\n3 1 4 1 5 9 2 6 5 3 5", "9 2 6"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tinput1 = input[0].split(\" \")\n\tconst N = parseInt(input1[0])\n\tconst K = parseInt(input1[1])\n\tconst As = input[1].split(\" \")\n\tvar filtered = []\n\tvar results = [\"\"]\n\tfor(i=0; i < K; i++){\n\t\tfor(j=0; j < N; j++){\n\t\t\tif(filtered.indexOf(As[j]) != -1){\n\t\t\t\tvar id = filtered.indexOf(As[j])\n\t\t\t\tfiltered = filtered.slice(0, id)\n\t\t\t}else{\n\t\t\t\tfiltered.push(As[j])\n\t\t\t}\n\t\t}\n\t\tif(results.indexOf(filtered.join(\" \")) == -1){\n\t\t\tresults.push(filtered.join(\" \"))\n\t\t}else{\n\t\t\tbreak\n\t\t}\n\t}\n\tconst roopstart = results.indexOf(filtered.join(\" \"))\n\tif(roopstart == K){\n\t\tconsole.log(results[roopstart])\n\t}else{\n\t\tconst roopId = (K - roopstart) % (results.length - roopstart)\n\t\tconsole.log(results[roopstart + roopId])\n\t}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03007_1", "type": "JavaScript", "obfuscated": "var a0_0x44b7ec = a0_0xde89;\nlog = console[a0_0x44b7ec(0x0)];\nvar stdin = require('fs')['readFileSync'](a0_0x44b7ec(0x1), 'UTF-8');\nvar lines = stdin[a0_0x44b7ec(0x2)]('\\x0a')['filter'](v => v !== '')['map'](v => v[a0_0x44b7ec(0x2)]('\\x20')[a0_0x44b7ec(0x3)](Number));\nvar N = lines[0x0];\nfunction a0_0x134f() {\n    var _0x404711 = [\n        'log',\n        '/dev/stdin',\n        'split',\n        'map',\n        'pop',\n        'forEach',\n        'push',\n        'length'\n    ];\n    a0_0x134f = function () {\n        return _0x404711;\n    };\n    return a0_0x134f();\n}\nfunction a0_0xde89(xuanJF, key) {\n    var stringArray = a0_0x134f();\n    a0_0xde89 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xde89(xuanJF, key);\n}\nvar A = lines[0x1];\nvar processList = [];\nA['sort']((a, b) => a - b);\nvar plusList = [];\nvar minusList = [];\nplusList['push'](A[a0_0x44b7ec(0x4)]());\nminusList['push'](A['shift']());\nA[a0_0x44b7ec(0x5)](v => {\n    var _0x14e547 = a0_0xde89;\n    v >= 0x0 ? plusList[_0x14e547(0x6)](v) : minusList['push'](v);\n});\nvar tmp = minusList[a0_0x44b7ec(0x4)]();\nfor (var i = 0x0; i < plusList[a0_0x44b7ec(0x7)] - 0x1; i++) {\n    var plus = plusList['pop']();\n    processList[a0_0x44b7ec(0x6)](tmp + '\\x20' + plus);\n    tmp = tmp - plus;\n}\nvar lastplus = plusList[a0_0x44b7ec(0x4)]();\nfor (var i = 0x0; i < minusList[a0_0x44b7ec(0x7)]; i++) {\n    var minus = minusList[a0_0x44b7ec(0x4)]();\n    processList['push'](lastplus + '\\x20' + minus);\n    lastplus = lastplus - minus;\n}\nprocessList['push'](lastplus + '\\x20' + tmp);\nlog(lastplus - tmp);\nprocessList[a0_0x44b7ec(0x5)](v => log(v));", "test_cases": [["3\n1 -1 2", "4\n-1 1\n2 -2"], ["3\n1 1 1", "1\n1 1\n1 0"]], "original": "log = console.log;\nvar stdin = require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\");\nvar lines = stdin\n  .split(\"\\n\")\n  .filter(v => v !== \"\")\n  .map(v => v.split(\" \").map(Number));\n\nvar N = lines[0];\nvar A = lines[1];\nvar processList = [];\n\nA.sort((a, b) => a - b);\nvar plusList = [];\nvar minusList = [];\nplusList.push(A.pop());\nminusList.push(A.shift());\n\nA.forEach(v => {\n  v >= 0 ? plusList.push(v) : minusList.push(v);\n});\n\nvar tmp = minusList.pop();\nfor (var i = 0; i < plusList.length - 1; i++) {\n  var plus = plusList.pop();\n  processList.push(tmp + \" \" + plus);\n  tmp = tmp - plus;\n}\n\nvar lastplus = plusList.pop()\nfor (var i = 0; i < minusList.length; i++) {\n  var minus = minusList.pop();\n  processList.push(lastplus + \" \" + minus);\n  lastplus = lastplus - minus;\n}\n\nprocessList.push(lastplus + \" \" + tmp)\nlog(lastplus - tmp)\nprocessList.forEach(v=>log(v))", "language": "JavaScript"}
{"filename": "p03027_1", "type": "JavaScript", "obfuscated": "var a0_0x1769d9 = a0_0x1b36;\nfunction a0_0x1b36(IMqpNv, key) {\n    var stringArray = a0_0x39e0();\n    a0_0x1b36 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b36(IMqpNv, key);\n}\nfunction a0_0x39e0() {\n    var _0x37ce32 = [\n        'slice',\n        'map',\n        'fill',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x39e0 = function () {\n        return _0x37ce32;\n    };\n    return a0_0x39e0();\n}\nfunction Main(input) {\n    var _0x3575b5 = a0_0x1b36;\n    input = input['split']('\\x0a');\n    var Q = parseInt(input[0x0]);\n    var Qs = input[_0x3575b5(0x0)](0x1, Q + 0x1)[_0x3575b5(0x1)](x => x['split']('\\x20')['map'](y => parseInt(y)));\n    var ans = new Array(Q);\n    ans[_0x3575b5(0x2)](0x0);\n    for (var i = 0x0; i < Qs[_0x3575b5(0x3)]; i++) {\n        for (var j = 0x0; j < Qs[i][0x2]; j++) {\n            if (j == 0x0) {\n                ans[i] = Qs[i][0x0] % 0xf4243;\n            } else {\n                ans[i] = ans[i] * (Qs[i][0x0] + j * Qs[i][0x1]) % 0xf4243;\n            }\n        }\n        console['log'](ans[i]);\n    }\n}\nMain(require('fs')[a0_0x1769d9(0x4)](a0_0x1769d9(0x5), a0_0x1769d9(0x6)));", "test_cases": [["2\n7 2 4\n12345 67890 2019", "9009\n916936"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\");\n  \tvar Q = parseInt(input[0]);\n      var Qs = input.slice(1, Q+1).map(x => x.split(\" \").map(y => parseInt(y)));\n \tvar ans = new Array(Q);\n    ans.fill(0);\n  \tfor(var i=0; i < Qs.length; i++){\n       for(var j=0; j < Qs[i][2]; j++){\n         if(j == 0){\n           ans[i] = Qs[i][0] % 1000003;\n         }else{\n           ans[i] = ans[i]*(Qs[i][0] + j*Qs[i][1]) % 1000003;\n         }\n       }\n      console.log(ans[i]);\n    }\n }\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03040_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x380fe9 = a0_0x5108;\nfunction a0_0x5108(hANtDA, key) {\n    var stringArray = a0_0x26aa();\n    a0_0x5108 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5108(hANtDA, key);\n}\nfunction I(t, i) {\n    var _0x413cee = a0_0x5108;\n    this['_s'] = t[_0x413cee(0x0)]('\\x0a'), this['_c'] = 0x0, this['_l'] = 0x0, this['_f'] = i || Number;\n}\nI[a0_0x380fe9(0x1)]['a'] = function (t) {\n    var _0x119914 = a0_0x5108;\n    var i = this['_s'][this['_l']];\n    if (i) {\n        if (_0x119914(0x2) !== _0x119914(0x2)) {\n            var s = i[_0x119914(0x3)]()[_0x119914(0x0)]('\\x20'), h = s[this['_c']];\n            return this['_c']++, s[_0x119914(0x4)] === this['_c'] && (this['_c'] = 0x0, this['_l']++), t ? t(h) : this['_f'](h);\n        } else {\n            var s = i[_0x119914(0x3)]()[_0x119914(0x0)]('\\x20'), h = s[this['_c']];\n            return this['_c']++, s[_0x119914(0x4)] === this['_c'] && (this['_c'] = 0x0, this['_l']++), t ? t(h) : this['_f'](h);\n        }\n    }\n}, I['prototype']['l'] = function (t) {\n    var _0xd57297 = a0_0x5108;\n    var i = this['_s'][this['_l']];\n    if (i)\n        return this['_c'] = 0x0, this['_l']++, i[_0xd57297(0x0)]('\\x20')['map'](t || this['_f']);\n}, module[a0_0x380fe9(0x5)] = I;\nfunction main(input) {\n    var _0x5abad3 = a0_0x5108;\n    var o = new I(input);\n    var q = o['a']();\n    var c = 0x0;\n    var sorted = [];\n    for (var i = 0x0; i < q; i++) {\n        var q1 = o['a']();\n        if (q1 === 0x1) {\n            if (_0x5abad3(0x6) !== _0x5abad3(0x6)) {\n                sorted = sorted[_0x5abad3(0x7)]((a, b) => a - b);\n                var mid = sorted[Math['floor']((sorted['length'] - 0x1) / 0x2)];\n                var ans = sorted[_0x5abad3(0x8)](x => Math[_0x5abad3(0x9)](x - mid))[_0x5abad3(0xa)]((acc, cur) => acc + cur) + c;\n                console['log'](mid, ans);\n            } else {\n                var a = o['a']();\n                var b = o['a']();\n                c += b;\n                sorted[_0x5abad3(0xb)](a);\n            }\n        } else {\n            sorted = sorted[_0x5abad3(0x7)]((a, b) => a - b);\n            var mid = sorted[Math[_0x5abad3(0xc)]((sorted[_0x5abad3(0x4)] - 0x1) / 0x2)];\n            var ans = sorted[_0x5abad3(0x8)](x => Math[_0x5abad3(0x9)](x - mid))[_0x5abad3(0xa)]((acc, cur) => acc + cur) + c;\n            console[_0x5abad3(0xd)](mid, ans);\n        }\n    }\n}\nmain(require('fs')[a0_0x380fe9(0xe)](a0_0x380fe9(0xf), 'utf8'));\nfunction a0_0x26aa() {\n    var _0x14cea9 = [\n        'split',\n        'prototype',\n        'drNRY',\n        'trim',\n        'length',\n        'exports',\n        'JSCCp',\n        'sort',\n        'map',\n        'abs',\n        'reduce',\n        'push',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x26aa = function () {\n        return _0x14cea9;\n    };\n    return a0_0x26aa();\n}", "test_cases": [["4\n1 4 2\n2\n1 1 -8\n2", "4 2\n1 -3"], ["4\n1 -1000000000 1000000000\n1 -1000000000 1000000000\n1 -1000000000 1000000000\n2", "-1000000000 3000000000"]], "original": "\"use strict\";\nfunction I(t,i){this._s=t.split(\"\\n\"),this._c=0,this._l=0,this._f=i||Number}I.prototype.a=function(t){var i=this._s[this._l];if(i){var s=i.trim().split(\" \"),h=s[this._c];return this._c++,s.length===this._c&&(this._c=0,this._l++),t?t(h):this._f(h)}},I.prototype.l=function(t){var i=this._s[this._l];if(i)return this._c=0,this._l++,i.split(\" \").map(t||this._f)},module.exports=I;\n\nfunction main(input) {\n  var o = new I(input);\n\n  var q = o.a();\n\n  var c = 0;\n  var sorted = [];\n\n  for (var i = 0; i < q; i ++) {\n    var q1 = o.a();\n    if (q1 === 1) {\n      var a = o.a();\n      var b = o.a();\n      c += b;\n      \n      sorted.push(a);\n    } else {\n      sorted = sorted.sort((a, b) => a - b);\n      var mid = sorted[Math.floor((sorted.length - 1) / 2)];\n      var ans = sorted.map(x => Math.abs(x - mid)).reduce((acc, cur) => acc + cur) + c;\n      console.log(mid, ans);\n    }\n  }\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03090_1", "type": "JavaScript", "obfuscated": "function a0_0x5c62() {\n    var _0xf75588 = [\n        'INojn',\n        'VNBAU',\n        'string',\n        'split',\n        'reverse',\n        'pop',\n        'length',\n        'ggqRE',\n        'prototype',\n        'IChmr',\n        'WIVBn',\n        'NAank',\n        'Fsvdj',\n        'slice',\n        'map',\n        'log',\n        'BuDuW',\n        'IdoKF',\n        'oqIul',\n        'push',\n        'join'\n    ];\n    a0_0x5c62 = function () {\n        return _0xf75588;\n    };\n    return a0_0x5c62();\n}\nfunction a0_0x38c6(xKnzFR, key) {\n    var stringArray = a0_0x5c62();\n    a0_0x38c6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x38c6(xKnzFR, key);\n}\nvar a0_0x14665e = a0_0x38c6;\nvar GET = (function () {\n    var _0x958857 = a0_0x38c6;\n    function f(s) {\n        var _0x4d08bd = a0_0x38c6;\n        if (_0x4d08bd(0x0) === _0x4d08bd(0x1)) {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0x4d08bd(0x2))\n                s[y] = s[y][_0x4d08bd(0x3)]('\\x20')[_0x4d08bd(0x4)]();\n            r = s[y][_0x4d08bd(0x5)]();\n            if (!s[y][_0x4d08bd(0x6)])\n                this['_y']++;\n            return f ? r : +r;\n        } else {\n            return new g(s);\n        }\n    }\n    function g(s) {\n        var _0x140afb = a0_0x38c6;\n        if (_0x140afb(0x7) === 'ggqRE') {\n            this['_s'] = s['trim']()[_0x140afb(0x3)]('\\x0a');\n            this['_y'] = 0x0;\n        } else {\n            return new g(s);\n        }\n    }\n    g[_0x958857(0x8)]['a'] = function (f) {\n        var _0x111d8c = a0_0x38c6;\n        if (_0x111d8c(0x9) === _0x111d8c(0xa)) {\n            this['_s'] = s['trim']()[_0x111d8c(0x3)]('\\x0a');\n            this['_y'] = 0x0;\n        } else {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0x111d8c(0x2))\n                s[y] = s[y]['split']('\\x20')[_0x111d8c(0x4)]();\n            r = s[y][_0x111d8c(0x5)]();\n            if (!s[y][_0x111d8c(0x6)])\n                this['_y']++;\n            return f ? r : +r;\n        }\n    };\n    g[_0x958857(0x8)]['l'] = function (f) {\n        var _0x222c9b = a0_0x38c6;\n        if (_0x222c9b(0xb) === _0x222c9b(0xc)) {\n            var r = this['_s'][_0x222c9b(0xd)](this['_y'], this['_y'] += n);\n            return f ? r : r[_0x222c9b(0xe)](a => +a);\n        } else {\n            var s = this['_s'][this['_y']++][_0x222c9b(0x3)]('\\x20');\n            return f ? s : s[_0x222c9b(0xe)](a => +a);\n        }\n    };\n    g[_0x958857(0x8)]['m'] = function (n, f) {\n        var _0x282465 = a0_0x38c6;\n        var r = this['_s'][_0x282465(0xd)](this['_y'], this['_y'] += n)[_0x282465(0xe)](a => a[_0x282465(0x3)]('\\x20'));\n        return f ? r : r[_0x282465(0xe)](a => a[_0x282465(0xe)](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var _0x1adc09 = a0_0x38c6;\n        var r = this['_s'][_0x1adc09(0xd)](this['_y'], this['_y'] += n);\n        return f ? r : r[_0x1adc09(0xe)](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole[a0_0x14665e(0xf)](main());\nfunction main() {\n    var _0xe07afc = a0_0x38c6;\n    var n = o['a']();\n    var ans = [];\n    for (var i = 0x1; i <= n; i++) {\n        if (_0xe07afc(0x10) === _0xe07afc(0x11)) {\n            var s = this['_s'][this['_y']++]['split']('\\x20');\n            return f ? s : s[_0xe07afc(0xe)](a => +a);\n        } else {\n            for (var j = i + 0x1; j <= n; j++) {\n                if ('oqIul' !== _0xe07afc(0x12)) {\n                    var r = this['_s'][_0xe07afc(0xd)](this['_y'], this['_y'] += n)[_0xe07afc(0xe)](a => a[_0xe07afc(0x3)]('\\x20'));\n                    return f ? r : r[_0xe07afc(0xe)](a => a[_0xe07afc(0xe)](a => +a));\n                } else {\n                    if (n % 0x2 && i + j === n)\n                        continue;\n                    if (n % 0x2 === 0x0 && i + j === n + 0x1)\n                        continue;\n                    ans[_0xe07afc(0x13)](i + '\\x20' + j);\n                }\n            }\n        }\n    }\n    console[_0xe07afc(0xf)](ans[_0xe07afc(0x6)]);\n    return ans[_0xe07afc(0x14)]('\\x0a');\n}", "test_cases": [["3", "2\n1 3\n2 3"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var ans = [];\n  for(var i = 1; i <= n; i++){\n    for(var j = i+1; j <= n; j++){\n      if(n % 2 && i+j === n)continue;\n      if(n % 2 === 0 && i+j === n+1)continue;\n      ans.push(i+\" \"+j);\n    }\n  }\n  console.log(ans.length);\n  return ans.join(\"\\n\");\n}", "language": "JavaScript"}
{"filename": "p03176_1", "type": "JavaScript", "obfuscated": "function a0_0x4a61(kWTYDe, key) {\n    var stringArray = a0_0x4755();\n    a0_0x4a61 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4a61(kWTYDe, key);\n}\nvar a0_0x6399ef = a0_0x4a61;\nfunction Main(input) {\n    var _0x2991fb = a0_0x4a61;\n    input = input['split']('\\x0a');\n    var N = parseInt(input[0x0]);\n    var h = input[0x1]['split']('\\x20')['map'](i => parseInt(i));\n    var a = input[0x2][_0x2991fb(0x0)]('\\x20')[_0x2991fb(0x1)](i => parseInt(i));\n    var dp = new Array(N + 0x1)[_0x2991fb(0x2)](0x0);\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var max = 0x0;\n        tmp = a[i] + dp[h[i]];\n        for (var j = h[i]; j < N + 0x1; j++) {\n            if (tmp > dp[j]) {\n                dp[j] = tmp;\n            } else {\n                break;\n            }\n        }\n        ans = Math[_0x2991fb(0x3)](ans, dp[h[i]]);\n    }\n    console[_0x2991fb(0x4)]('%s', ans);\n    return ans;\n}\nfunction debug(n) {\n    var _0x144bd5 = a0_0x4a61;\n    var input = document[_0x144bd5(0x5)](_0x144bd5(0x6) + n)[_0x144bd5(0x7)];\n    var ans = Main(input);\n    var result = 'WA';\n    if (ans == document[_0x144bd5(0x5)](_0x144bd5(0x8) + n)[_0x144bd5(0x7)][_0x144bd5(0x0)]('\\x0a')[0x0]) {\n        result = 'AC';\n    }\n    document[_0x144bd5(0x5)](_0x144bd5(0x9) + n)[_0x144bd5(0xa)] = result;\n}\nfunction a0_0x4755() {\n    var _0x15b922 = [\n        'split',\n        'map',\n        'fill',\n        'max',\n        'log',\n        'getElementById',\n        'input',\n        'value',\n        'output',\n        'result',\n        'innerHTML',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4755 = function () {\n        return _0x15b922;\n    };\n    return a0_0x4755();\n}\nMain(require('fs')[a0_0x6399ef(0xb)](a0_0x6399ef(0xc), a0_0x6399ef(0xd)));", "test_cases": [["4\n3 1 4 2\n10 20 30 40", "60"], ["1\n1\n10", "10"], ["5\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000", "5000000000"], ["9\n4 2 5 8 3 6 1 7 9\n6 8 8 4 6 3 5 7 5", "31"]], "original": "\n\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0]);\n  var h = input[1].split(\" \").map(i => parseInt(i));\n  var a = input[2].split(\" \").map(i => parseInt(i));\n  var dp = new Array(N+1).fill(0);\n  //dp[h[0]]=a[0];\n  var ans=0;\n  for(var i=0;i<N;i++){\n    var max=0;\n    tmp=a[i]+dp[h[i]];\n    for(var j=h[i];j<N+1;j++){\n      if(tmp>dp[j]){\n        dp[j]=tmp;\n      }else{\n        break;\n      }\n\n    }\n    ans=Math.max(ans,dp[h[i]]);\n  }\n\n  console.log('%s', ans);\n  return ans;\n}\n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03255_1", "type": "JavaScript", "obfuscated": "var a0_0x270024 = a0_0x2ff5;\nvar toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr[a0_0x270024(0x0)](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var _0x42f25f = a0_0x2ff5;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x42f25f(0x1)]; i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var _0x504cdd = a0_0x2ff5;\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest[_0x504cdd(0x1)]; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')[a0_0x270024(0x2)]('/dev/stdin', a0_0x270024(0x3)));\nfunction a0_0x367b() {\n    var _0x59da0f = [\n        'map',\n        'length',\n        'readFileSync',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x367b = function () {\n        return _0x59da0f;\n    };\n    return a0_0x367b();\n}\nfunction a0_0x2ff5(eLlRWC, key) {\n    var stringArray = a0_0x367b();\n    a0_0x2ff5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ff5(eLlRWC, key);\n}\nfunction Main(input) {\n    var _0x123b29 = a0_0x2ff5;\n    var input = input[_0x123b29(0x4)]('\\x0a');\n    var temp = toIntArr(input[0x0][_0x123b29(0x4)]('\\x20'));\n    var n = temp[0x0];\n    var x = temp[0x1];\n    var xs = toIntArr(input[0x1][_0x123b29(0x4)]('\\x20'));\n    var ss = [xs[0x0]];\n    for (var i = 0x1; i < n; i++) {\n        ss[i] = xs[i] + ss[i - 0x1];\n    }\n    var ans = (n + 0x1) * x;\n    var has = 0x0;\n    for (var i = n - 0x1; i > -0x1; i--) {\n        has++;\n        if (has > 0x2 && x < ss[i] * (has - 0x1) * 0x2 - xs[i] * 0x2) {\n            has = 0x1;\n            ans += x;\n        }\n        ans += xs[i] * (max(has, 0x2) * 0x2 + 0x1);\n    }\n    console[_0x123b29(0x5)](ans);\n}", "test_cases": [["2 100\n1 10", "355"], ["5 1\n1 999999997 999999998 999999999 1000000000", "19999999983"], ["10 8851025\n38 87 668 3175 22601 65499 90236 790604 4290609 4894746", "150710136"], ["16 10\n1 7 12 27 52 75 731 13856 395504 534840 1276551 2356789 9384806 19108104 82684732 535447408", "3256017715"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar temp = toIntArr(input[0].split(' '));\n\tvar n = temp[0];\n\tvar x = temp[1];\n\tvar xs = toIntArr(input[1].split(' '));\n\tvar ss = [xs[0]];\n\n\tfor(var i = 1; i < n; i++){\n\t\tss[i] = xs[i] + ss[i-1];\n\t}\n\tvar ans = (n+1)*x;\n\n\tvar has = 0;\n\tfor(var i = n-1; i > -1; i--){\n\t\thas++;\n\t\tif(has>2 && x < ss[i]*(has-1)*2 - xs[i]*2){\n\t\t\thas = 1;\n\t\t\tans += x;\n\t\t}\n\t\tans += xs[i]*(max(has,2)*2 + 1);\n\t}\n\t\n\tconsole.log(ans);\n\n}", "language": "JavaScript"}
{"filename": "p03277_1", "type": "JavaScript", "obfuscated": "var a0_0x33fa9e = a0_0x25b6;\nfunction gets(str) {\n    this['_s'] = str['split']('\\x0a');\n    this['_y'] = 0x0;\n}\n;\ngets[a0_0x33fa9e(0x0)] = {\n    'a': function (f) {\n        var _0x3c8a73 = a0_0x25b6;\n        var s = this['_s'], y = this['_y'], r;\n        if (typeof s[y] === 'string')\n            s[y] = s[y]['split']('\\x20')[_0x3c8a73(0x1)]();\n        r = s[y]['pop']();\n        if (!s[y]['length'])\n            this['_y']++;\n        return f ? r : +r;\n    },\n    'l': function (f) {\n        var _0x39e650 = a0_0x25b6;\n        var s = this['_s'][this['_y']++][_0x39e650(0x2)]('\\x20');\n        return f ? s : s[_0x39e650(0x3)](a => +a);\n    },\n    'm': function (n, f) {\n        var _0x462409 = a0_0x25b6;\n        var s = this['_s'], y = this['_y'], r = [], i = 0x0;\n        if (f)\n            for (; i < n; i++)\n                r[i] = s[y + i]['split']('\\x20');\n        else\n            for (; i < n; i++)\n                r[i] = s[y + i][_0x462409(0x2)]('\\x20')[_0x462409(0x3)](a => +a);\n        this['_y'] += n;\n        return r;\n    }\n};\nvar o = new gets(require('fs')[a0_0x33fa9e(0x4)](a0_0x33fa9e(0x5), a0_0x33fa9e(0x6)));\nconsole[a0_0x33fa9e(0x7)](main());\nfunction a0_0x25b6(GCvtaC, key) {\n    var stringArray = a0_0x13c2();\n    a0_0x25b6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x25b6(GCvtaC, key);\n}\nfunction main() {\n    var _0x36fd55 = a0_0x25b6;\n    var n = o['a']();\n    var a = o['l']();\n    var b = [];\n    if (n <= 0x2)\n        return Math[_0x36fd55(0x8)](...a);\n    for (var i = 0x0; i < n - 0x1; i++)\n        a[n + i] = Math[_0x36fd55(0x8)](a[i], a[i + 0x1]);\n    return middle(a);\n    function middle(a) {\n        var _0x3c8c1e = a0_0x25b6;\n        if ('kbXSY' !== _0x3c8c1e(0x9)) {\n            a[_0x3c8c1e(0xa)]((a, b) => a - b);\n            return a[a[_0x3c8c1e(0xb)] >> 0x1];\n        } else {\n            this['_s'] = str[_0x3c8c1e(0x2)]('\\x0a');\n            this['_y'] = 0x0;\n        }\n    }\n}\nfunction a0_0x13c2() {\n    var _0x56bcc5 = [\n        'prototype',\n        'reverse',\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'max',\n        'dmHDH',\n        'sort',\n        'length'\n    ];\n    a0_0x13c2 = function () {\n        return _0x56bcc5;\n    };\n    return a0_0x13c2();\n}", "test_cases": [["3\n10 30 20", "30"], ["1\n10", "10"], ["10\n5 9 5 9 8 9 3 5 4 3", "8"]], "original": "function gets(str){\n  this._s = str.split(\"\\n\");\n  this._y = 0;\n};\ngets.prototype = {\n  a: function(f){\n    var s = this._s, y = this._y, r;\n    if(typeof s[y] === \"string\")s[y] = s[y].split(\" \").reverse();\n    r = s[y].pop();\n    if(!s[y].length)this._y++;\n    return f?r:+r;\n  },\n  l: function(f){\n    var s = this._s[this._y++].split(\" \");\n    return f?s:s.map(a=>+a);\n  },\n  m: function(n,f){\n    var s = this._s, y = this._y, r = [], i = 0;\n    if(f)for(;i < n; i++)r[i] = s[y+i].split(\" \");\n    else for(;i < n; i++)r[i] = s[y+i].split(\" \").map(a=>+a);\n    this._y += n;\n    return r;\n  },\n};\nvar o=new gets(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var a = o.l();\n  var b = [];\n  if(n <= 2)return Math.max(...a);\n  for(var i = 0; i < n-1; i++)a[n+i] = Math.max(a[i],a[i+1]);\n  return middle(a);\n\n  function middle(a){\n    a.sort((a,b)=>a-b);\n    return a[a.length>>1];\n  }\n}", "language": "JavaScript"}
{"filename": "p03298_1", "type": "JavaScript", "obfuscated": "function a0_0x5e36(GICXHl, key) {\n    var stringArray = a0_0x566a();\n    a0_0x5e36 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e36(GICXHl, key);\n}\nfunction a0_0x566a() {\n    var _0x5383b6 = [\n        'readFileSync',\n        'split',\n        'log'\n    ];\n    a0_0x566a = function () {\n        return _0x5383b6;\n    };\n    return a0_0x566a();\n}\nvar a0_0x8e1098 = a0_0x5e36;\nm = ('' + require('fs')[a0_0x8e1098(0x0)](0x0))[a0_0x8e1098(0x1)]`\n`;\nn = m[a = 0x0];\ns = m[0x1];\nfor (b = 0x1 << n; b--;) {\n    u = 0x0;\n    for (i = n; i--;)\n        u = b & 0x1 << i ? s[i] + u : u + s[i];\n    m[u] = -~m[u];\n}\nfor (b = 0x1 << n; b--;) {\n    u = 0x0;\n    for (i = n; i--;)\n        u = b & 0x1 << i ? s[0x2 * n + ~i] + u : u + s[0x2 * n + ~i];\n    a += ~~m[u];\n}\nconsole[a0_0x8e1098(0x2)](a);", "test_cases": [["4\ncabaacba", "4"], ["11\nmippiisssisssiipsspiim", "504"], ["4\nabcdefgh", "0"], ["18\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "9075135300"]], "original": "m=(\"\"+require(\"fs\").readFileSync(0)).split`\n`;n=m[a=0];s=m[1];for(b=1<<n;b--;){u=0;for(i=n;i--;)u=b&(1<<i)?s[i]+u:u+s[i];m[u]=-~m[u]}for(b=1<<n;b--;){u=0;for(i=n;i--;)u=b&(1<<i)?s[2*n+~i]+u:u+s[2*n+~i];a+=~~m[u]}console.log(a)", "language": "JavaScript"}
{"filename": "p03330_1", "type": "JavaScript", "obfuscated": "function a0_0x3b93(yxIYLT, key) {\n    var stringArray = a0_0x2641();\n    a0_0x3b93 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b93(yxIYLT, key);\n}\nvar a0_0x170200 = a0_0x3b93;\nfunction Main(s) {\n    var _0x1c03fe = a0_0x3b93;\n    s = s['split']('\\x0a');\n    s[0x0] = s[0x0][_0x1c03fe(0x0)]('\\x20')['map'](a => +a);\n    var n = s[0x0][0x0];\n    var c = s[0x0][0x1];\n    var d = [], a = [];\n    for (var i = 0x0; i < c; i++) {\n        d[i] = s[i + 0x1][_0x1c03fe(0x0)]('\\x20')[_0x1c03fe(0x1)](a => +a);\n    }\n    for (i = 0x0; i < n; i++) {\n        a[i] = s[i + 0x1 + c]['split']('\\x20')['map'](a => +a - 0x1);\n    }\n    var z = Array(0x3)['fill'](0x0)[_0x1c03fe(0x1)](a => Array(c)['fill'](0x0));\n    for (i = 0x0; i < n; i++)\n        for (var j = 0x0; j < n; j++) {\n            var t = (i + j) % 0x3;\n            z[t][a[i][j]]++;\n        }\n    var ans = 0x218711a00;\n    for (i = 0x0; i < c; i++) {\n        for (j = 0x0; j < c; j++) {\n            if (i === j)\n                continue;\n            for (var k = 0x0; k < c; k++) {\n                if (i === k || j === k)\n                    continue;\n                t = 0x0;\n                for (var l = 0x0; l < c; l++) {\n                    t += z[0x0][l] * d[l][i];\n                    t += z[0x1][l] * d[l][j];\n                    t += z[0x2][l] * d[l][k];\n                }\n                ans = Math[_0x1c03fe(0x2)](ans, t);\n            }\n        }\n    }\n    console[_0x1c03fe(0x3)](ans);\n}\nMain(require('fs')[a0_0x170200(0x4)](a0_0x170200(0x5), 'utf8'));\nfunction a0_0x2641() {\n    var _0x40b1c3 = [\n        'split',\n        'map',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x2641 = function () {\n        return _0x40b1c3;\n    };\n    return a0_0x2641();\n}", "test_cases": [["2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3", "3"], ["4 3\n0 12 71\n81 0 53\n14 92 0\n1 1 2 1\n2 1 1 2\n2 2 1 3\n1 1 2 2", "428"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  s[0] = s[0].split(\" \").map(a=>+a);\n  var n = s[0][0];\n  var c = s[0][1];\n  var d = [], a = [];\n  for(var i = 0; i < c; i++){\n    d[i] = s[i+1].split(\" \").map(a=>+a);\n  }\n  for(i = 0; i < n; i++){\n    a[i] = s[i+1+c].split(\" \").map(a=>+a-1);\n  }\n  var z = Array(3).fill(0).map(a=>Array(c).fill(0));\n  for(i = 0; i < n; i++)\n  for(var j = 0; j < n; j++){\n    var t = (i + j) % 3;\n    z[t][a[i][j]]++;\n  }\n  var ans = 9e9;\n  for(i = 0; i < c; i++){\n    for(j = 0; j < c; j++){\n      if(i === j)continue;\n      for(var k = 0; k < c; k++){\n        if(i === k || j === k)continue;\n        t = 0;\n        for(var l = 0; l < c; l++){\n          t += z[0][l] * d[l][i];\n          t += z[1][l] * d[l][j];\n          t += z[2][l] * d[l][k];\n        }\n        ans = Math.min(ans, t);\n      }\n    }\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03373_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x584f9e = a0_0x1056;\nfunction main(s) {\n    const _0x542ddd = a0_0x1056;\n    s = s[_0x542ddd(0x0)]('\\x0a')[0x0][_0x542ddd(0x0)]('\\x20')[_0x542ddd(0x1)](n => Number(n));\n    const A = s[0x0];\n    const B = s[0x1];\n    const C = s[0x2];\n    const X = s[0x3];\n    const Y = s[0x4];\n    const min = Math[_0x542ddd(0x2)](X, Y);\n    const case1 = A * X + B * Y;\n    const case2 = 0x2 * C * min + (X - min) * A + (Y - min) * B;\n    const case3 = 0x2 * C * Math['max'](X, Y);\n    const answer = Math[_0x542ddd(0x2)](...[\n        case1,\n        case2,\n        case3\n    ]);\n    console[_0x542ddd(0x3)](answer);\n}\nfunction a0_0x30b9() {\n    const _0x564c52 = [\n        'split',\n        'map',\n        'min',\n        'log',\n        'utf8'\n    ];\n    a0_0x30b9 = function () {\n        return _0x564c52;\n    };\n    return a0_0x30b9();\n}\nfunction a0_0x1056(olceCp, key) {\n    const stringArray = a0_0x30b9();\n    a0_0x1056 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1056(olceCp, key);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x584f9e(0x4)));", "test_cases": [["1500 2000 1600 3 2", "7900"], ["1500 2000 1900 3 2", "8500"], ["1500 2000 500 90000 100000", "100000000"]], "original": "'use strict'\n\nfunction main(s) {\n  s = s.split('\\n')[0].split(' ').map(n => Number(n));\n\n  const A = s[0];\n  const B = s[1];\n  const C = s[2];\n  const X = s[3];\n  const Y = s[4];\n  const min = Math.min(X, Y);\n\n  // AとBをそれぞれ買う\n  const case1 = A * X + B * Y\n\n  // ABセットで可能な限り組み替えて、残りをそれぞれ買う\n  const case2 = (2 * C * min) + ((X - min) * A) + ((Y - min) * B)\n\n  // 全てABセットで組み替える\n  const case3 = 2 * C * Math.max(X, Y);\n\n  const answer = Math.min(...[case1, case2, case3]);\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03436_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2d85() {\n    const _0x3a95f8 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'push',\n        'shift',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2d85 = function () {\n        return _0x3a95f8;\n    };\n    return a0_0x2d85();\n}\nfunction a0_0x43ab(SgdNHT, key) {\n    const stringArray = a0_0x2d85();\n    a0_0x43ab = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x43ab(SgdNHT, key);\n}\nconst a0_0x3d8a9e = a0_0x43ab;\nconsole[a0_0x3d8a9e(0x0)](function (args) {\n    const _0x3a08c8 = a0_0x43ab;\n    const tmp = args[_0x3a08c8(0x1)]()[_0x3a08c8(0x2)]('\\x0a');\n    const HW = tmp[0x0][_0x3a08c8(0x2)]('\\x20')[_0x3a08c8(0x3)](v => v | 0x0);\n    const H = HW[0x0], W = HW[0x1];\n    const map = [Array(W + 0x2)[_0x3a08c8(0x4)](Infinity)];\n    let s = 0x0;\n    for (let y = 0x1; y <= H; y++) {\n        map[_0x3a08c8(0x5)]([Infinity]);\n        for (let x = 0x0; x < W; x++) {\n            if (tmp[y][x] === '.') {\n                s++;\n                map[y][_0x3a08c8(0x5)](0x0);\n            } else\n                map[y][_0x3a08c8(0x5)](Infinity);\n        }\n        map[y][_0x3a08c8(0x5)](Infinity);\n    }\n    map[_0x3a08c8(0x5)](Array(W + 0x2)[_0x3a08c8(0x4)](Infinity));\n    const dir = [\n        [\n            -0x1,\n            0x0\n        ],\n        [\n            0x0,\n            -0x1\n        ],\n        [\n            0x1,\n            0x0\n        ],\n        [\n            0x0,\n            0x1\n        ]\n    ];\n    const queue = [[\n            0x1,\n            0x1,\n            0x2\n        ]];\n    do {\n        const q = queue[_0x3a08c8(0x6)]();\n        for (const d of dir) {\n            const x = q[0x0] + d[0x0], y = q[0x1] + d[0x1];\n            if (x === W && y === H)\n                return s - q[0x2];\n            if (map[y][x] === 0x0) {\n                map[y][x] = q[0x2] + 0x1;\n                queue[_0x3a08c8(0x5)]([\n                    x,\n                    y,\n                    q[0x2] + 0x1\n                ]);\n            }\n        }\n    } while (queue[0x0]);\n}(require('fs')['readFileSync'](a0_0x3d8a9e(0x7), a0_0x3d8a9e(0x8))));", "test_cases": [["3 3\n..#\n#..\n...", "2"], ["10 37\n.....................................\n...#...####...####..###...###...###..\n..#.#..#...#.##....#...#.#...#.#...#.\n..#.#..#...#.#.....#...#.#...#.#...#.\n.#...#.#..##.#.....#...#.#.###.#.###.\n.#####.####..#.....#...#..##....##...\n.#...#.#...#.#.....#...#.#...#.#...#.\n.#...#.#...#.##....#...#.#...#.#...#.\n.#...#.####...####..###...###...###..\n.....................................", "209"]], "original": "'use strict';\nconsole.log(function(args){\n  const tmp = args.trim().split('\\n');\n  const HW = tmp[0].split(' ').map(v=>v|0);\n  const H = HW[0], W = HW[1];\n  const map = [Array(W+2).fill(Infinity)]\n  let s = 0;\n  for ( let y = 1; y <= H; y++ ) {\n    map.push([Infinity]);\n    for ( let x = 0; x < W; x++ ) {\n      if ( tmp[y][x] === '.' ) {\n        s++; map[y].push( 0 );\n      } else map[y].push( Infinity );\n    }\n    map[y].push(Infinity);\n  }\n  map.push(Array(W+2).fill(Infinity));\n  const dir = [[-1,0],[0,-1],[1,0],[0,1]];\n  const queue = [[1,1,2]];\n  do {\n    const q = queue.shift();\n    for ( const d of dir ) {\n      const x = q[0] + d[0], y = q[1] + d[1];\n      if ( x === W && y === H ) return s - q[2];\n      if ( map[y][x] === 0 ) {\n        map[y][x] = q[2]+1;\n        queue.push([x,y,q[2]+1]);\n      }\n    }\n  } while ( queue[0] );\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p03503_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x2d63(Aksznz, key) {\n    const stringArray = a0_0x46da();\n    a0_0x2d63 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d63(Aksznz, key);\n}\nconst a0_0x162946 = a0_0x2d63;\nfunction main(input) {\n    const _0x5e9ce1 = a0_0x2d63;\n    const lines = input[_0x5e9ce1(0x0)]('\\x0a');\n    const N = parseInt(lines['shift']());\n    const F = [];\n    for (let i = 0x0; i < N; i++) {\n        F[_0x5e9ce1(0x1)](lines[i][_0x5e9ce1(0x0)]('\\x20')[_0x5e9ce1(0x2)](x => parseInt(x)));\n    }\n    const P = [];\n    for (let i = 0x0; i < N; i++) {\n        P[_0x5e9ce1(0x1)](lines[i + N][_0x5e9ce1(0x0)]('\\x20')[_0x5e9ce1(0x2)](x => parseInt(x)));\n    }\n    let result = -Infinity;\n    for (let i = 0x1; i < 0x400; i++) {\n        let score = 0x0;\n        for (let j = 0x0; j < N; j++) {\n            if (_0x5e9ce1(0x3) === _0x5e9ce1(0x4)) {\n                let store = F[j];\n                let p_index = (parseInt(store['join'](''), 0x2) & i)[_0x5e9ce1(0x5)](0x2)[_0x5e9ce1(0x0)]('')[_0x5e9ce1(0x2)](x => Number(x))[_0x5e9ce1(0x6)]((a, b) => a + b, 0x0);\n                score += P[j][p_index];\n            } else {\n                let store = F[j];\n                let p_index = (parseInt(store['join'](''), 0x2) & i)[_0x5e9ce1(0x5)](0x2)[_0x5e9ce1(0x0)]('')[_0x5e9ce1(0x2)](x => Number(x))['reduce']((a, b) => a + b, 0x0);\n                score += P[j][p_index];\n            }\n        }\n        if (score > result) {\n            if (_0x5e9ce1(0x7) !== _0x5e9ce1(0x8)) {\n                result = score;\n            } else {\n                F[_0x5e9ce1(0x1)](lines[i][_0x5e9ce1(0x0)]('\\x20')[_0x5e9ce1(0x2)](x => parseInt(x)));\n            }\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')[a0_0x162946(0x9)](a0_0x162946(0xa), a0_0x162946(0xb)));\nfunction a0_0x46da() {\n    const _0x283050 = [\n        'split',\n        'push',\n        'map',\n        'zBZAt',\n        'enqTw',\n        'toString',\n        'reduce',\n        'cSoIC',\n        'cXSdA',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x46da = function () {\n        return _0x283050;\n    };\n    return a0_0x46da();\n}", "test_cases": [["1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2", "8"], ["2\n1 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 1\n0 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1\n0 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1", "-2"], ["3\n1 1 1 1 1 1 0 0 1 1\n0 1 0 1 1 1 1 0 1 0\n1 0 1 1 0 1 0 1 0 1\n-8 6 -2 -8 -8 4 8 7 -6 2 2\n-9 2 0 1 7 -5 0 -2 -6 5 5\n6 -6 7 -9 6 -5 8 0 -9 -7 -7", "23"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n')\n  const N = parseInt( lines.shift() );\n  const F = [];\n  for(let i=0; i<N;i++){\n    F.push( lines[i].split(' ').map( x => parseInt(x) ) );\n  }\n\n  const P=[];\n  for(let i=0; i<N;i++){\n    P.push(lines[i+N].split(' ').map( x => parseInt(x)) );\n  }\n\n  let result = -Infinity;\n  for(let i=1; i<1024;i++){\n    let score = 0;\n    for(let j=0; j<N;j++){\n      let store = F[j];\n      let p_index = (parseInt(store.join(''), 2) & i).toString(2).split('').map(x=>Number(x)).reduce((a,b)=>a+b,0)\n      score += P[j][p_index];\n    }\n    if(score > result){result = score;}\n  }\n\n  console.log(result);\n}\n\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03651_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x52cb(iMybmB, key) {\n    const stringArray = a0_0x170f();\n    a0_0x52cb = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x52cb(iMybmB, key);\n}\nconst a0_0x30f7de = a0_0x52cb;\nfunction a0_0x170f() {\n    const _0x439854 = [\n        'trim',\n        'split',\n        'sort',\n        'igVtn',\n        'log',\n        'IMPOSSIBLE',\n        'min',\n        'POSSIBLE',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x170f = function () {\n        return _0x439854;\n    };\n    return a0_0x170f();\n}\nconst getGcd = (a, b) => {\n    return a ? getGcd(b % a, a) : b;\n};\nconst main = arg => {\n    const _0x4e485c = a0_0x52cb;\n    arg = arg[_0x4e485c(0x0)]()[_0x4e485c(0x1)]('\\x0a');\n    const N = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    const K = parseInt(arg[0x0][_0x4e485c(0x1)]('\\x20')[0x1]);\n    let A = arg[0x1][_0x4e485c(0x1)]('\\x20')['map'](n => parseInt(n))[_0x4e485c(0x2)]((a, b) => b - a);\n    const max = A[0x0];\n    let gcd = Infinity;\n    if (max < K) {\n        if (_0x4e485c(0x3) !== _0x4e485c(0x3)) {\n            return a ? getGcd(b % a, a) : b;\n        } else {\n            console[_0x4e485c(0x4)](_0x4e485c(0x5));\n            return;\n        }\n    }\n    for (let i = 0x0; i < N; i++) {\n        for (let j = i + 0x1; j < N; j++) {\n            gcd = Math[_0x4e485c(0x6)](gcd, getGcd(A[i], A[j]));\n        }\n    }\n    console[_0x4e485c(0x4)](K % gcd === 0x0 ? _0x4e485c(0x7) : _0x4e485c(0x5));\n};\nmain(require('fs')[a0_0x30f7de(0x8)](a0_0x30f7de(0x9), 'utf8'));", "test_cases": [["3 7\n9 3 4", "POSSIBLE"], ["3 5\n6 9 3", "IMPOSSIBLE"], ["4 11\n11 3 7 15", "POSSIBLE"], ["5 12\n10 2 8 6 4", "IMPOSSIBLE"]], "original": "\"use strict\";\n    \nconst getGcd = (a, b) => {\n    return a ? getGcd(b % a, a) : b;\n}\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n    \n    let A = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>b-a);\n    \n    const max = A[0];\n    let   gcd = Infinity;\n    \n    if(max < K) {\n        console.log(\"IMPOSSIBLE\");\n        return;\n    }\n    \n    for(let i=0; i<N; i++) {\n        for(let j=i+1; j<N; j++) {\n            gcd = Math.min(gcd, getGcd(A[i], A[j]));\n        }\n    }\n    \n    console.log(K % gcd === 0 ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03821_1", "type": "JavaScript", "obfuscated": "function a0_0x507f(cUMekW, key) {\n    var stringArray = a0_0x16f9();\n    a0_0x507f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x507f(cUMekW, key);\n}\nvar a0_0x2da8d6 = a0_0x507f;\nfunction a0_0x16f9() {\n    var _0x41fe6a = [\n        'split',\n        'map',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x16f9 = function () {\n        return _0x41fe6a;\n    };\n    return a0_0x16f9();\n}\nfunction Main(s) {\n    var _0x42836f = a0_0x507f;\n    s = s[_0x42836f(0x0)]('\\x0a');\n    var n = +s[0x0];\n    for (var i = 0x0; i < n; i++) {\n        s[i] = s[i + 0x1][_0x42836f(0x0)]('\\x20')[_0x42836f(0x1)](a => +a);\n    }\n    var ans = 0x0;\n    for (i = n - 0x1; i >= 0x0; i--) {\n        var x = (s[i][0x0] + ans) % s[i][0x1];\n        if (x)\n            ans += s[i][0x1] - x;\n    }\n    console[_0x42836f(0x2)](ans);\n}\nMain(require('fs')[a0_0x2da8d6(0x3)]('/dev/stdin', 'utf8'));", "test_cases": [["3\n3 5\n2 7\n9 4", "7"], ["7\n3 1\n4 1\n5 9\n2 6\n5 3\n5 8\n9 7", "22"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = +s[0];\n  for(var i = 0; i < n; i++){\n    s[i] = s[i+1].split(\" \").map(a=>+a);\n  }\n  var ans = 0;\n  for(i = n-1; i >= 0; i--){\n    var x = (s[i][0] + ans) % s[i][1];\n    if(x)ans += s[i][1] - x;\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03838_1", "type": "JavaScript", "obfuscated": "var a0_0x48a9d7 = a0_0x2cf8;\ninp = require('fs')[a0_0x48a9d7(0x0)](a0_0x48a9d7(0x1), 'utf8')['split']('\\x0a');\nl = inp['shift']()[a0_0x48a9d7(0x2)]('\\x20');\nx = l[0x0] * 0x1;\ny = l[0x1] * 0x1;\ncnt = 0x0;\nfunction a0_0x2cf8(sBAOyx, key) {\n    var stringArray = a0_0x48f2();\n    a0_0x2cf8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2cf8(sBAOyx, key);\n}\nfunction a0_0x48f2() {\n    var _0x4a8cbb = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'abs',\n        'log'\n    ];\n    a0_0x48f2 = function () {\n        return _0x4a8cbb;\n    };\n    return a0_0x48f2();\n}\nif (x == y) {\n} else if (Math[a0_0x48a9d7(0x3)](x) == Math[a0_0x48a9d7(0x3)](y)) {\n    cnt++;\n} else if (x == 0x0 || y == 0x0) {\n    if (y < x) {\n        cnt++;\n    }\n    cnt += Math[a0_0x48a9d7(0x3)](Math[a0_0x48a9d7(0x3)](x) - Math[a0_0x48a9d7(0x3)](y));\n} else {\n    if (x > y) {\n        if (x > 0x0 && y > 0x0) {\n            cnt += 0x2;\n        } else if (x > 0x0 && y < 0x0) {\n            cnt += 0x1;\n        } else {\n            cnt += 0x2;\n        }\n    } else {\n        if (x < 0x0 && y > 0x0) {\n            cnt += 0x1;\n        }\n    }\n    cnt += Math[a0_0x48a9d7(0x3)](Math[a0_0x48a9d7(0x3)](x) - Math[a0_0x48a9d7(0x3)](y));\n}\nconsole[a0_0x48a9d7(0x4)](cnt);", "test_cases": [["10 20", "10"], ["10 -10", "1"], ["-10 -20", "12"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nx = l[0] * 1\ny = l[1] * 1 \ncnt = 0\nif (x == y) {\n    \n} else if (Math.abs(x) == Math.abs(y)) {\n    cnt++\n} else if (x == 0 || y == 0) {\n    if (y < x) {\n        cnt++\n    }\n    cnt += Math.abs(Math.abs(x) - Math.abs(y))\n} else {\n    if (x > y) {\n        if (x > 0 && y > 0) {\n            cnt += 2\n        } else if (x > 0 && y < 0) {\n            cnt += 1\n        } else {\n            cnt += 2\n        }\n    } else {\n        if (x < 0 && y > 0) {\n            cnt += 1\n        }\n    }\n    cnt += Math.abs(Math.abs(x) - Math.abs(y))\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p03890_1", "type": "JavaScript", "obfuscated": "var a0_0x4c106d = a0_0x1161;\nfunction a0_0x26aa() {\n    var _0x2a72f2 = [\n        'split',\n        'slice',\n        'push',\n        'log',\n        '/dev/stdin'\n    ];\n    a0_0x26aa = function () {\n        return _0x2a72f2;\n    };\n    return a0_0x26aa();\n}\nfunction Main(input) {\n    var _0x9eeea1 = a0_0x1161;\n    var data = input[_0x9eeea1(0x0)]('\\x0a');\n    var n = data[0x0];\n    var a = data[_0x9eeea1(0x1)](0x1);\n    for (var i = 0x0; i < n; ++i) {\n        var b = [];\n        for (var j = 0x0; j < a['length']; j += 0x2) {\n            if (a[j] > a[j + 0x1]) {\n                b['push'](a[j] - a[j + 0x1]);\n            } else if (a[j] == a[j + 0x1]) {\n                b['push'](a[j]);\n            } else {\n                b[_0x9eeea1(0x2)](a[j + 0x1] - a[j]);\n            }\n        }\n        a = b;\n    }\n    console[_0x9eeea1(0x3)](a[0x0]);\n}\nfunction a0_0x1161(VmKdSd, key) {\n    var stringArray = a0_0x26aa();\n    a0_0x1161 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1161(VmKdSd, key);\n}\nMain(require('fs')['readFileSync'](a0_0x4c106d(0x4), 'utf8'));", "test_cases": [["2\n1\n3\n10\n19", "7"], ["3\n1\n3\n2\n4\n6\n8\n100\n104", "2"]], "original": "function Main(input) {\n\tvar data = input.split(\"\\n\")\n\tvar n = data[0]\n\tvar a = data.slice(1)\n\t\n\tfor (var i = 0; i < n; ++i) {\n\t\tvar b = []\n\t\tfor (var j = 0; j < a.length; j += 2) {\n\t\t\tif (a[j] > a[j + 1]) {\n\t\t\t\tb.push(a[j] - a[j + 1])\n\t\t\t} else if (a[j] == a[j + 1]) {\n\t\t\t\tb.push(a[j])\n\t\t\t} else {\n\t\t\t\tb.push(a[j + 1] - a[j])\n\t\t\t}\n\t\t}\n\t\ta = b\n\t}\n\t\n\tconsole.log(a[0])\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03909_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0xe410b9 = a0_0x19bd;\nfunction a0_0x4364() {\n    const _0x3b4abc = [\n        'trim',\n        'split',\n        'slice',\n        'map',\n        'ABCDEFGHIJ',\n        'snuke',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4364 = function () {\n        return _0x3b4abc;\n    };\n    return a0_0x4364();\n}\nconst main = arg => {\n    const _0x3b9579 = a0_0x19bd;\n    arg = arg[_0x3b9579(0x0)]()[_0x3b9579(0x1)]('\\x0a');\n    const H = parseInt(arg[0x0][_0x3b9579(0x1)]('\\x20')[0x0]);\n    const W = parseInt(arg[0x0][_0x3b9579(0x1)]('\\x20')[0x1]);\n    const words = arg[_0x3b9579(0x2)](0x1, H + 0x1)[_0x3b9579(0x3)](s => s[_0x3b9579(0x1)]('\\x20'));\n    const alpha = _0x3b9579(0x4)[_0x3b9579(0x1)]('');\n    for (let i = 0x0; i < H; i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (words[i][j] === _0x3b9579(0x5)) {\n                console[_0x3b9579(0x6)](alpha[j] + (i + 0x1));\n                return;\n            }\n        }\n    }\n};\nfunction a0_0x19bd(zzYjst, key) {\n    const stringArray = a0_0x4364();\n    a0_0x19bd = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19bd(zzYjst, key);\n}\nmain(require('fs')[a0_0xe410b9(0x7)](a0_0xe410b9(0x8), 'utf8'));", "test_cases": [["15 10\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snuke snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake", "H6"], ["1 1\nsnuke", "A1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const H = parseInt(arg[0].split(\" \")[0]);\n    const W = parseInt(arg[0].split(\" \")[1]);\n    \n    const words = arg.slice(1, H + 1).map(s=>s.split(\" \"));\n    const alpha = \"ABCDEFGHIJ\".split(\"\");\n    \n    for(let i=0; i<H; i++) {\n        for(let j=0; j<W; j++) {\n            if(words[i][j] === \"snuke\") {\n                console.log(alpha[j] + (i + 1));\n                return;\n            }\n        }\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03970_1", "type": "JavaScript", "obfuscated": "function a0_0x28cf() {\n    var _0xd6732e = [\n        'trim',\n        'CODEFESTIVAL2016',\n        'length',\n        'slice',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x28cf = function () {\n        return _0xd6732e;\n    };\n    return a0_0x28cf();\n}\nvar a0_0x6dd92f = a0_0x183d;\nfunction a0_0x183d(thQTWW, key) {\n    var stringArray = a0_0x28cf();\n    a0_0x183d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x183d(thQTWW, key);\n}\nfunction Main(input) {\n    var _0x53449d = a0_0x183d;\n    input = input[_0x53449d(0x0)]();\n    var output = 0x0;\n    var seijou = _0x53449d(0x1);\n    for (var i = 0x0; i < input[_0x53449d(0x2)]; i++) {\n        var tmp1 = input[_0x53449d(0x3)](i, i + 0x1);\n        var tmp2 = seijou[_0x53449d(0x3)](i, i + 0x1);\n        if (tmp1 != tmp2) {\n            output++;\n        }\n    }\n    console['log'](output);\n}\nMain(require('fs')[a0_0x6dd92f(0x4)]('/dev/stdin', a0_0x6dd92f(0x5)));", "test_cases": [["C0DEFESTIVAL2O16", "2"], ["FESTIVAL2016CODE", "16"]], "original": "function Main(input) {\n\tinput = input.trim();\n  var output = 0;\n  var seijou = \"CODEFESTIVAL2016\";\n  for(var i = 0; i < input.length; i++){\n    var tmp1 = input.slice(i,i+1);\n    var tmp2 = seijou.slice(i,i+1);\n    if(tmp1 != tmp2){\n       output++;\n       }\n  }\n  \n  console.log(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03971_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1ff1(PlBAXd, key) {\n    const stringArray = a0_0x1ee2();\n    a0_0x1ff1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ff1(PlBAXd, key);\n}\nfunction a0_0x1ee2() {\n    const _0x401fcf = [\n        'trim',\n        'split',\n        'push',\n        'Yes',\n        'GoCEe',\n        'join',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1ee2 = function () {\n        return _0x401fcf;\n    };\n    return a0_0x1ee2();\n}\nconst a0_0x48daa4 = a0_0x1ff1;\nconst Main = input => {\n    const _0x16cad7 = a0_0x1ff1;\n    const tmp = input[_0x16cad7(0x0)]()[_0x16cad7(0x1)]('\\x0a');\n    const N = parseInt(tmp[0x0][_0x16cad7(0x1)]('\\x20')[0x0]);\n    const A = parseInt(tmp[0x0]['split']('\\x20')[0x1]);\n    const B = parseInt(tmp[0x0][_0x16cad7(0x1)]('\\x20')[0x2]);\n    const S = tmp[0x1];\n    let result = [];\n    let count = 0x0;\n    let overseas = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        const participant = S[_0x16cad7(0x1)]('')[i];\n        if (participant === 'a') {\n            if (count < A + B) {\n                result[_0x16cad7(0x2)](_0x16cad7(0x3));\n                count += 0x1;\n            } else {\n                result[_0x16cad7(0x2)]('No');\n            }\n        } else if (participant === 'b') {\n            if (count < A + B && overseas < B) {\n                if ('TQRAT' !== _0x16cad7(0x4)) {\n                    result[_0x16cad7(0x2)](_0x16cad7(0x3));\n                    count += 0x1;\n                    overseas += 0x1;\n                } else {\n                    result[_0x16cad7(0x2)]('No');\n                }\n            } else {\n                result['push']('No');\n            }\n        } else {\n            if ('DLxGW' === 'DLxGW') {\n                result['push']('No');\n            } else {\n                result[_0x16cad7(0x2)](_0x16cad7(0x3));\n                count += 0x1;\n            }\n        }\n    }\n    result = result[_0x16cad7(0x5)]('\\x0a');\n    console[_0x16cad7(0x6)](result);\n    return result;\n};\nMain(require('fs')[a0_0x48daa4(0x7)]('/dev/stdin', a0_0x48daa4(0x8)));", "test_cases": [["10 2 3\nabccabaabb", "Yes\nYes\nNo\nNo\nYes\nYes\nYes\nNo\nNo\nNo"], ["12 5 2\ncabbabaacaba", "No\nYes\nYes\nYes\nYes\nNo\nYes\nYes\nNo\nYes\nNo\nNo"], ["5 2 2\nccccc", "No\nNo\nNo\nNo\nNo"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const N = parseInt(tmp[0].split(' ')[0])\n  const A = parseInt(tmp[0].split(' ')[1])\n  const B = parseInt(tmp[0].split(' ')[2])\n  const S = tmp[1]\n  //a 国内\n  //b 海外\n  //c どちらでもない\n\n  let result = []\n  let count = 0\n  let overseas = 0\n\n  for (let i = 0; i < N; i++) {\n    const participant = S.split('')[i]\n    if (participant === 'a') {\n      if (count < (A + B)) {\n        result.push('Yes')\n        count += 1\n      } else {\n        result.push('No')\n      }\n    } else if (participant === 'b') {\n      if (count < (A + B) && overseas < B) {\n        result.push('Yes')\n        count += 1\n        overseas += 1\n      } else {\n        result.push('No')\n      }\n    } else {\n      result.push('No')\n    }\n  }\n  result = result.join('\\n')\n\n  console.log(result)\n  return result\n}\n\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p00032_1", "type": "JavaScript", "obfuscated": "var a0_0x4eabd2 = a0_0x102d;\nfunction a0_0x8ae3() {\n    var _0x14122a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x8ae3 = function () {\n        return _0x14122a;\n    };\n    return a0_0x8ae3();\n}\nvar input = require('fs')[a0_0x4eabd2(0x0)](a0_0x4eabd2(0x1), a0_0x4eabd2(0x2));\nvar lines = input['trim']()[a0_0x4eabd2(0x3)]('\\x0a');\nvar line;\nvar rectangles = 0x0;\nvar lozenges = 0x0;\nfunction a0_0x102d(fejJBE, key) {\n    var stringArray = a0_0x8ae3();\n    a0_0x102d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x102d(fejJBE, key);\n}\nwhile (line = lines[a0_0x4eabd2(0x4)]()) {\n    var l = line['split'](',')[a0_0x4eabd2(0x5)](function (n) {\n        return +n;\n    });\n    var a = l[0x0];\n    var b = l[0x1];\n    var c = l[0x2];\n    if (a * a + b * b == c * c)\n        rectangles++;\n    else if (a == b)\n        lozenges++;\n}\nconsole['log'](rectangles);\nconsole[a0_0x4eabd2(0x6)](lozenges);", "test_cases": [["3,4,5\n5,5,8\n4,4,4\n5,4,3", "1\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n\nvar line;\nvar rectangles = 0;\nvar lozenges = 0;\nwhile (line = lines.shift()) {\n\tvar l = line.split(',').map(function(n){return +n;});\n\tvar a = l[0];\n\tvar b = l[1];\n\tvar c = l[2];\n\n\tif (a * a + b * b == c * c)\n\t\trectangles++;\n\telse if (a == b)\n\t\tlozenges++;\n}\nconsole.log(rectangles);\nconsole.log(lozenges);", "language": "JavaScript"}
{"filename": "p00045_1", "type": "JavaScript", "obfuscated": "function a0_0x3482(qZGYyV, key) {\n    var stringArray = a0_0x1eab();\n    a0_0x3482 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3482(qZGYyV, key);\n}\nfunction a0_0x1eab() {\n    var _0x1e03a6 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'forEach',\n        'map',\n        'log',\n        'round',\n        'length'\n    ];\n    a0_0x1eab = function () {\n        return _0x1e03a6;\n    };\n    return a0_0x1eab();\n}\nvar a0_0x331818 = a0_0x3482;\nvar input = require('fs')[a0_0x331818(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x331818(0x1)]()[a0_0x331818(0x2)]('\\x0a');\nvar sum = 0x0;\nvar cnt = 0x0;\nArr[a0_0x331818(0x3)](function (v) {\n    var _0x4bbfce = a0_0x3482;\n    var arr = v[_0x4bbfce(0x2)](',')[_0x4bbfce(0x4)](Number);\n    sum += arr[0x0] * arr[0x1];\n    cnt += arr[0x1];\n});\nconsole[a0_0x331818(0x5)](sum);\nconsole[a0_0x331818(0x5)](Math[a0_0x331818(0x6)](cnt / Arr[a0_0x331818(0x7)]));", "test_cases": [["100,20\n50,10\n70,35", "4950\n22"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar sum=0;\nvar cnt=0;\n\nArr.forEach(function(v){\nvar arr=v.split(\",\").map(Number);\nsum+=arr[0]*arr[1];\ncnt+=arr[1];\n});\n\nconsole.log(sum);\nconsole.log(Math.round(cnt/Arr.length));", "language": "JavaScript"}
{"filename": "p00049_1", "type": "JavaScript", "obfuscated": "var a0_0x3ec03d = a0_0x58a3;\nfor (w = x = y = z = 0x0, i = require('fs')[a0_0x3ec03d(0x0)](a0_0x3ec03d(0x1), 'utf8')[a0_0x3ec03d(0x2)](/\\s|,/), c = j = -0x1; c = i[j += 0x2]; n = '\\x0a')\n    c == 'A' ? w++ : c == 'B' ? x++ : c == 'O' ? z++ : y++;\nconsole[a0_0x3ec03d(0x3)](w + n + x + n + y + n + z);\nfunction a0_0x58a3(ZNSVCr, key) {\n    var stringArray = a0_0x217b();\n    a0_0x58a3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58a3(ZNSVCr, key);\n}\nfunction a0_0x217b() {\n    var _0x3a342a = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'log'\n    ];\n    a0_0x217b = function () {\n        return _0x3a342a;\n    };\n    return a0_0x217b();\n}", "test_cases": [["1,B\n2,A\n3,B\n4,AB\n5,B\n6,O\n7,A\n8,O\n9,AB\n10,A\n11,A\n12,B\n13,AB\n14,A", "5\n4\n3\n2"]], "original": "for(w=x=y=z=0,i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s|,/),c=j=-1;c=i[j+=2];n='\\n')c=='A'?w++:c=='B'?x++:c=='O'?z++:y++;console.log(w+n+x+n+y+n+z)", "language": "JavaScript"}
{"filename": "p00052_1", "type": "JavaScript", "obfuscated": "var a0_0x5232a8 = a0_0x21db;\nfunction a0_0x21db(LpsZbQ, key) {\n    var stringArray = a0_0x1f2f();\n    a0_0x21db = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x21db(LpsZbQ, key);\n}\nrequire('fs')[a0_0x5232a8(0x0)](a0_0x5232a8(0x1), a0_0x5232a8(0x2))[a0_0x5232a8(0x3)]('\\x0a')[a0_0x5232a8(0x4)](function (i) {\n    var _0x66d388 = a0_0x21db;\n    j = +i, s = 0x0;\n    if (j) {\n        while (j = ~~(j / 0x5))\n            s += j;\n        console[_0x66d388(0x5)](s);\n    }\n});\nfunction a0_0x1f2f() {\n    var _0x1404cf = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x1f2f = function () {\n        return _0x1404cf;\n    };\n    return a0_0x1f2f();\n}", "test_cases": [["2\n12\n10000\n0", "0\n2\n2499"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').map(function(i){j=+i,s=0;if(j){while(j=~~(j/5))s+=j;console.log(s)}})", "language": "JavaScript"}
{"filename": "p00105_1", "type": "JavaScript", "obfuscated": "function a0_0x2fca(JwwBMe, key) {\n    var stringArray = a0_0x338c();\n    a0_0x2fca = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fca(JwwBMe, key);\n}\nvar a0_0x359e9b = a0_0x2fca;\nvar d = require('fs')[a0_0x359e9b(0x0)](a0_0x359e9b(0x1), a0_0x359e9b(0x2))[a0_0x359e9b(0x3)]()[a0_0x359e9b(0x4)]('\\x0a');\nvar info = line = '';\nvar map = [];\nwhile (line = d[a0_0x359e9b(0x5)]()) {\n    info = line[a0_0x359e9b(0x4)]('\\x20');\n    map['push']([\n        info[0x0],\n        +info[0x1]\n    ]);\n}\nmap[a0_0x359e9b(0x6)](function (a, b) {\n    if (a[0x0] < b[0x0])\n        return -0x1;\n    if (a[0x0] > b[0x0])\n        return 0x1;\n    if (a[0x1] < b[0x1])\n        return -0x1;\n    if (a[0x1] > b[0x1])\n        return 0x1;\n    return 0x0;\n});\nvar word = '';\nvar pages = [];\nfunction a0_0x338c() {\n    var _0x431af7 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'sort',\n        'forEach',\n        'DyjJF',\n        'log',\n        'join',\n        'push'\n    ];\n    a0_0x338c = function () {\n        return _0x431af7;\n    };\n    return a0_0x338c();\n}\nmap[a0_0x359e9b(0x7)](function (info, i) {\n    var _0x57e2e5 = a0_0x2fca;\n    if (word !== info[0x0]) {\n        if (i !== 0x0) {\n            if (_0x57e2e5(0x8) !== _0x57e2e5(0x8)) {\n                if (a[0x0] < b[0x0])\n                    return -0x1;\n                if (a[0x0] > b[0x0])\n                    return 0x1;\n                if (a[0x1] < b[0x1])\n                    return -0x1;\n                if (a[0x1] > b[0x1])\n                    return 0x1;\n                return 0x0;\n            } else {\n                console[_0x57e2e5(0x9)](pages[_0x57e2e5(0xa)]('\\x20'));\n                pages = [];\n            }\n        }\n        console[_0x57e2e5(0x9)](info[0x0]);\n    }\n    pages[_0x57e2e5(0xb)](info[0x1]);\n    word = info[0x0];\n});\nconsole[a0_0x359e9b(0x9)](pages[a0_0x359e9b(0xa)]('\\x20'));", "test_cases": [["style 12\neven 25\nintroduction 3\neasy 9\nstyle 7\ndocument 13\nstyle 21\neven 18", "document\n13\neasy\n9\neven\n18 25\nintroduction\n3\nstyle\n7 12 21"]], "original": "var d = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nvar info = line = '';\nvar map = [];\n\nwhile (line = d.shift()) {\n  info = line.split(' ');\n  map.push([info[0], +info[1]]);\n}\nmap.sort(function(a, b) {\n  if (a[0] < b[0]) return -1;\n  if (a[0] > b[0]) return 1;\n  if (a[1] < b[1]) return -1;\n  if (a[1] > b[1]) return 1;\n  return 0;\n});\n\nvar word = '';\nvar pages = [];\nmap.forEach(function(info, i) {\n  if (word !== info[0]) {\n    if (i !== 0) {\n      console.log(pages.join(' '));\n      pages = [];\n    }\n    console.log(info[0]);\n  }\n  pages.push(info[1]);\n  word = info[0];\n});\nconsole.log(pages.join(' '));", "language": "JavaScript"}
{"filename": "p00179_1", "type": "JavaScript", "obfuscated": "var a0_0x3f6dae = a0_0x350f;\nfunction BFS(x) {\n    var _0x5ba728 = a0_0x350f;\n    var obj = {};\n    var bfs = [[\n            x,\n            0x0\n        ]];\n    obj[x] = !![];\n    while (!![]) {\n        if (bfs[_0x5ba728(0x0)] == 0x0) {\n            ans = 'NA';\n            break;\n        }\n        var leaf = bfs[_0x5ba728(0x1)]();\n        var str = leaf[0x0];\n        var cnt = leaf[0x1];\n        if (/^0+$|^1+$|^2+$/[_0x5ba728(0x2)](str)) {\n            ans = cnt;\n            break;\n        }\n        for (var i = 0x0; i < str[_0x5ba728(0x0)] - 0x1; i++) {\n            if (str[i] == str[i + 0x1])\n                continue;\n            var arr = str['split']('');\n            var color = 0x3 - +arr[i] - +arr[i + 0x1];\n            arr[i] = color;\n            arr[i + 0x1] = color;\n            var Str = arr[_0x5ba728(0x3)]('');\n            if (obj[_0x5ba728(0x4)](Str) == ![]) {\n                bfs['push']([\n                    Str,\n                    cnt + 0x1\n                ]);\n                obj[Str] = !![];\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x3f6dae(0x5));\nfunction a0_0x193d() {\n    var _0x1299b6 = [\n        'length',\n        'shift',\n        'test',\n        'join',\n        'hasOwnProperty',\n        'utf8',\n        'trim',\n        'replace',\n        'log'\n    ];\n    a0_0x193d = function () {\n        return _0x1299b6;\n    };\n    return a0_0x193d();\n}\nfunction a0_0x350f(KopDDG, key) {\n    var stringArray = a0_0x193d();\n    a0_0x350f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x350f(KopDDG, key);\n}\nvar Arr = input[a0_0x3f6dae(0x6)]()['split']('\\x0a');\nwhile (!![]) {\n    var rgb = Arr[a0_0x3f6dae(0x1)]();\n    if (rgb == '0')\n        break;\n    rgb = rgb['replace'](/r/g, '0')[a0_0x3f6dae(0x7)](/g/g, '1')[a0_0x3f6dae(0x7)](/b/g, '2');\n    var ans;\n    BFS(rgb);\n    console[a0_0x3f6dae(0x8)](ans);\n}", "test_cases": [["rbgrg\nrbbgbbr\nbgr\nbgrbrgbr\nbggrgbgrr\ngbrggrbggr\nrrrrr\nbgbr\n0", "5\n7\n1\n6\nNA\n8\n0\n4"]], "original": "function BFS(x){\n   var obj={};\n   var bfs=[[x,0]];\n   obj[x]=true;\n   while(true){\n      if(bfs.length==0){ans=\"NA\";break;}\n      var leaf=bfs.shift();\n      var str=leaf[0];\n      var cnt=leaf[1];\n      if(/^0+$|^1+$|^2+$/.test(str)){ans=cnt;break;}\n      for(var i=0;i<str.length-1;i++){\n         if(str[i]==str[i+1])continue;\n         var arr=str.split(\"\");\n         var color=3-(+arr[i])-(+arr[i+1]);\n         arr[i]=color;\n         arr[i+1]=color;\n         var Str=arr.join(\"\");\n         if(obj.hasOwnProperty(Str)==false){\n            bfs.push([Str,cnt+1]);\n            obj[Str]=true;\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var rgb=Arr.shift();\n   if(rgb==\"0\")break;\n   rgb=rgb.replace(/r/g,\"0\").replace(/g/g,\"1\").replace(/b/g,\"2\")\n   var ans;\n   BFS(rgb);\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00205_1", "type": "JavaScript", "obfuscated": "var a0_0x32d9a9 = a0_0x262a;\nfunction main() {\n    var _0x2a04a0 = a0_0x262a;\n    var hands, pattern, swap, i = 0x0, j;\n    for (;;) {\n        if ('rpPXn' === _0x2a04a0(0x0)) {\n            if (input[i] == 0x0)\n                break;\n            hands = [];\n            for (j = 0x0; j < 0x5; j++) {\n                if ('xmysv' === _0x2a04a0(0x1)) {\n                    hands[_0x2a04a0(0x2)](Number(input[i++]));\n                } else {\n                    return pat[h] = !![], pat;\n                }\n            }\n            pattern = hands[_0x2a04a0(0x3)](function (pat, h) {\n                return pat[h] = !![], pat;\n            }, {});\n            keys = Object[_0x2a04a0(0x4)](pattern)['map'](Number)[_0x2a04a0(0x5)](function (x, y) {\n                return x - y;\n            });\n            if (keys['length'] === 0x2) {\n                if (keys[0x1] - keys[0x0] == 0x2) {\n                    swap = keys[0x0];\n                    keys[0x0] = keys[0x1];\n                    keys[0x1] = swap;\n                }\n                hands[_0x2a04a0(0x6)](function (h) {\n                    var _0x2400a1 = a0_0x262a;\n                    console[_0x2400a1(0x7)](keys[_0x2400a1(0x8)](h) + 0x1);\n                });\n            } else {\n                if (_0x2a04a0(0x9) === _0x2a04a0(0xa)) {\n                    input += chunk;\n                } else {\n                    hands['forEach'](function () {\n                        var _0x16cdd9 = a0_0x262a;\n                        console[_0x16cdd9(0x7)](0x3);\n                    });\n                }\n            }\n        } else {\n            console[_0x2a04a0(0x7)](0x3);\n        }\n    }\n}\nfunction a0_0x5229() {\n    var _0x3f0492 = [\n        'rpPXn',\n        'xmysv',\n        'push',\n        'reduce',\n        'keys',\n        'sort',\n        'forEach',\n        'log',\n        'indexOf',\n        'jwUGS',\n        'sdErB',\n        'stdin',\n        'resume',\n        'utf8',\n        'data'\n    ];\n    a0_0x5229 = function () {\n        return _0x3f0492;\n    };\n    return a0_0x5229();\n}\nvar input = '';\nprocess[a0_0x32d9a9(0xb)][a0_0x32d9a9(0xc)]();\nprocess['stdin']['setEncoding'](a0_0x32d9a9(0xd));\nprocess[a0_0x32d9a9(0xb)]['on'](a0_0x32d9a9(0xe), function (chunk) {\n    input += chunk;\n});\nfunction a0_0x262a(sWiaKg, key) {\n    var stringArray = a0_0x5229();\n    a0_0x262a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x262a(sWiaKg, key);\n}\nprocess['stdin']['on']('end', function () {\n    input = input['split']('\\x0a');\n    main();\n});", "test_cases": [["1\n2\n3\n2\n1\n1\n2\n2\n2\n1\n0", "3\n3\n3\n3\n3\n1\n2\n2\n2\n1"]], "original": "function main() {\n  var\n  hands, pattern,\n  swap,\n  i = 0, j;\n  for (;;) {\n    if (input[i] == 0) break;\n    \n    \n    hands = [];\n    for (j = 0; j < 5; j++) {\n      hands.push(Number(input[i++]));\n    }\n    \n    pattern = hands.reduce(function (pat, h) {\n      return (pat[h] = true, pat);\n    }, {});\n    \n    keys = Object.keys(pattern).map(Number).sort(function (x, y) { return x - y; });\n    \n    if (keys.length === 2) {\n      if (keys[1] - keys[0] == 2) {\n        swap = keys[0];\n        keys[0] = keys[1];\n        keys[1] = swap;\n      }\n      hands.forEach(function (h) {\n        console.log(keys.indexOf(h) + 1);\n      });\n    } else {\n      hands.forEach(function () {\n        console.log(3);\n      });\n    }\n  }\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00277_1", "type": "JavaScript", "obfuscated": "var a0_0x509c72 = a0_0x1d20;\nvar input = require('fs')[a0_0x509c72(0x0)]('/dev/stdin', a0_0x509c72(0x1));\nvar arr = input[a0_0x509c72(0x2)]()['split']('\\x0a');\nvar nrl = arr['shift']()['split']('\\x20')[a0_0x509c72(0x3)](Number);\nvar n = nrl[0x0];\nvar L = nrl[0x2];\nfunction a0_0x1d20(ccqzrl, key) {\n    var stringArray = a0_0x1e81();\n    a0_0x1d20 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d20(ccqzrl, key);\n}\nvar t = [];\nvar max = [\n    0x0,\n    0x0\n];\nvar time = 0x0;\nfor (var i = 0x0; i < n; i++)\n    t[i] = [\n        0x0,\n        0x0,\n        i\n    ];\narr[a0_0x509c72(0x4)]([\n    0x1,\n    L,\n    0x0\n][a0_0x509c72(0x5)]('\\x20'));\narr[a0_0x509c72(0x6)](function (v) {\n    var _0x159802 = a0_0x1d20;\n    v = v[_0x159802(0x7)]('\\x20')[_0x159802(0x3)](Number);\n    var d = v[0x0] - 0x1;\n    var T = v[0x1];\n    var x = v[0x2];\n    t[max[0x0]][0x1] += T - time;\n    time = T;\n    t[d][0x0] += x;\n    if (x > 0x0) {\n        if (t[d][0x0] > max[0x1])\n            max = [\n                d,\n                t[d][0x0]\n            ];\n        else if (t[d][0x0] == max[0x1] && d <= max[0x0])\n            max = [\n                d,\n                t[d][0x0]\n            ];\n    }\n    if (x < 0x0 && max[0x0] == d) {\n        if (_0x159802(0x8) === _0x159802(0x8)) {\n            var MAX = 0x0;\n            var m = 0x0;\n            t[_0x159802(0x6)](function (V, index) {\n                var _0x32463f = a0_0x1d20;\n                if (_0x32463f(0x9) === _0x32463f(0xa)) {\n                    if (t[d][0x0] > max[0x1])\n                        max = [\n                            d,\n                            t[d][0x0]\n                        ];\n                    else if (t[d][0x0] == max[0x1] && d <= max[0x0])\n                        max = [\n                            d,\n                            t[d][0x0]\n                        ];\n                } else {\n                    if (MAX < V[0x0])\n                        m = index;\n                }\n            });\n            max = [\n                m,\n                t[m][0x0]\n            ];\n        } else {\n            var MAX = 0x0;\n            var m = 0x0;\n            t[_0x159802(0x6)](function (V, index) {\n                if (MAX < V[0x0])\n                    m = index;\n            });\n            max = [\n                m,\n                t[m][0x0]\n            ];\n        }\n    }\n});\nt[a0_0x509c72(0xb)](function (a, b) {\n    if (a[0x1] == b[0x1])\n        return a[0x2] - b[0x2];\n    else\n        return b[0x1] - a[0x1];\n});\nconsole[a0_0x509c72(0xc)](t[0x0][0x2] + 0x1);\nfunction a0_0x1e81() {\n    var _0x17a4ae = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'map',\n        'push',\n        'join',\n        'forEach',\n        'split',\n        'rBaod',\n        'gDorJ',\n        'ueYLZ',\n        'sort',\n        'log'\n    ];\n    a0_0x1e81 = function () {\n        return _0x17a4ae;\n    };\n    return a0_0x1e81();\n}", "test_cases": [["3 4 600\n3 100 5\n1 200 10\n2 400 20\n3 500 20", "1"], ["3 5 600\n3 100 5\n1 200 10\n2 300 30\n1 400 -8\n2 400 -27", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar arr=input.trim().split(\"\\n\");\nvar nrl=arr.shift().split(\" \").map(Number);\nvar n=nrl[0];\nvar L=nrl[2];\nvar t=[];\nvar max=[0,0];\nvar time=0;\nfor(var i=0;i<n;i++)t[i]=[0,0,i];\narr.push([1,L,0].join(\" \"));\narr.forEach(function(v){\nv=v.split(\" \").map(Number);\nvar d=v[0]-1;\nvar T=v[1];\nvar x=v[2];\n\nt[max[0]][1]+=T-time;\ntime=T;\nt[d][0]+=x;\n\nif(x>0){\nif(t[d][0]>max[1])max=[d,t[d][0]];\nelse if(t[d][0]==max[1] && d<=max[0])max=[d,t[d][0]];\n}\n\nif(x<0 && max[0]==d){\nvar MAX=0;\nvar m=0;\nt.forEach(function(V,index){\nif(MAX<V[0])m=index;\n});\n\nmax=[m,t[m][0]];\n\n\n}\n\n\n});\n\n\n\nt.sort(function(a,b){\nif(a[1]==b[1])return a[2]-b[2];\nelse return b[1]-a[1];});\n\n\nconsole.log(t[0][2]+1);", "language": "JavaScript"}
{"filename": "p00670_1", "type": "JavaScript", "obfuscated": "var a0_0x1c4e1b = a0_0x1411;\nvar input = require('fs')[a0_0x1c4e1b(0x0)](a0_0x1c4e1b(0x1), 'utf8');\nfunction a0_0x2bdb() {\n    var _0x18c852 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'min',\n        'log'\n    ];\n    a0_0x2bdb = function () {\n        return _0x18c852;\n    };\n    return a0_0x2bdb();\n}\nvar Arr = input[a0_0x1c4e1b(0x2)]()[a0_0x1c4e1b(0x3)]('\\x0a');\nfunction a0_0x1411(ZTIRBR, key) {\n    var stringArray = a0_0x2bdb();\n    a0_0x1411 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1411(ZTIRBR, key);\n}\nwhile (!![]) {\n    var nS = Arr['shift']()[a0_0x1c4e1b(0x3)]('\\x20')['map'](Number);\n    var n = nS[0x0];\n    var S = nS[0x1];\n    if (n == 0x0 && S == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i <= 0x64; i++)\n        arr[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr[a0_0x1c4e1b(0x4)]() - 0x0;\n        arr[v]++;\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i <= 0x64; i++) {\n        for (var j = i + 0x1; j <= 0x64; j++) {\n            if (i + j > S)\n                cnt += Math[a0_0x1c4e1b(0x5)](arr[i], arr[j]);\n        }\n    }\n    console[a0_0x1c4e1b(0x6)](cnt);\n}", "test_cases": [["3 7\n1\n3\n10\n0 0", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nS=Arr.shift().split(\" \").map(Number);\n   var n=nS[0];\n   var S=nS[1];\n   if(n==0 && S==0)break;\n   var arr=[];\n   for(var i=0;i<=100;i++)arr[i]=0;\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr[v]++;\n   }\n   var cnt=0;\n   for(var i=0;i<=100;i++){\n      for(var j=i+1;j<=100;j++){\n         if(i+j>S)cnt+=Math.min(arr[i],arr[j]);\n      } \n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00734_1", "type": "JavaScript", "obfuscated": "function a0_0x2fe9(FPaHuo, key) {\n    var stringArray = a0_0x5bad();\n    a0_0x2fe9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fe9(FPaHuo, key);\n}\nvar a0_0x678911 = a0_0x2fe9;\nvar input = require('fs')[a0_0x678911(0x0)](a0_0x678911(0x1), 'utf8');\nvar Arr = input[a0_0x678911(0x2)]()['split']('\\x0a');\nfunction a0_0x5bad() {\n    var _0x125b97 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        '0\\x200',\n        'map',\n        'push',\n        'reduce',\n        'length',\n        'log',\n        'sort'\n    ];\n    a0_0x5bad = function () {\n        return _0x125b97;\n    };\n    return a0_0x5bad();\n}\nwhile (!![]) {\n    var nm = Arr['shift']();\n    if (nm == a0_0x678911(0x3))\n        break;\n    nm = nm['split']('\\x20')[a0_0x678911(0x4)](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var N = [];\n    var M = [];\n    for (var i = 0x0; i < n; i++)\n        N[a0_0x678911(0x5)](Arr['shift']() - 0x0);\n    for (var i = 0x0; i < m; i++)\n        M['push'](Arr['shift']() - 0x0);\n    var sumN = N[a0_0x678911(0x6)](function (a, b) {\n        return a + b;\n    });\n    var sumM = M[a0_0x678911(0x6)](function (a, b) {\n        return a + b;\n    });\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < m; j++) {\n            var a = sumN - N[i] + M[j];\n            var b = sumM + N[i] - M[j];\n            if (a == b)\n                arr[a0_0x678911(0x5)]([\n                    N[i] + M[j],\n                    N[i],\n                    M[j]\n                ]);\n        }\n    }\n    if (arr[a0_0x678911(0x7)] == 0x0) {\n        console[a0_0x678911(0x8)](-0x1);\n        continue;\n    }\n    arr[a0_0x678911(0x9)](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    console[a0_0x678911(0x8)](arr[0x0][0x1] + '\\x20' + arr[0x0][0x2]);\n}", "test_cases": [["2 2\n1\n5\n3\n7\n6 5\n3\n9\n5\n2\n3\n3\n12\n2\n7\n3\n5\n4 5\n10\n0\n3\n8\n1\n9\n6\n0\n6\n7 4\n1\n1\n2\n1\n2\n1\n4\n2\n3\n4\n3\n2 3\n1\n1\n2\n2\n2\n0 0", "1 3\n3 5\n-1\n2 2\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=Arr.shift();\n   if(nm==\"0 0\")break;\n   nm=nm.split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   var N=[];\n   var M=[];\n   for(var i=0;i<n;i++)N.push(Arr.shift()-0);\n   for(var i=0;i<m;i++)M.push(Arr.shift()-0);\n   var sumN=N.reduce(function(a,b){return a+b;});\n   var sumM=M.reduce(function(a,b){return a+b;});\n   var arr=[];\n   for(var i=0;i<n;i++){\n      for(var j=0;j<m;j++){\n         var a=sumN-N[i]+M[j];\n         var b=sumM+N[i]-M[j];\n         if(a==b)arr.push([N[i]+M[j],N[i],M[j]]);\n      }\n   }\n   if(arr.length==0){console.log(-1);continue;}\n   arr.sort(function(a,b){return a[0]-b[0];});\n   console.log(arr[0][1]+\" \"+arr[0][2]);\n}", "language": "JavaScript"}
{"filename": "p01125_1", "type": "JavaScript", "obfuscated": "function a0_0x1519(GuzSHG, key) {\n    var stringArray = a0_0x1548();\n    a0_0x1519 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1519(GuzSHG, key);\n}\nfunction a0_0x1548() {\n    var _0x593be2 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'push',\n        'shift',\n        'forEach',\n        'indexOf',\n        'log',\n        'Yes'\n    ];\n    a0_0x1548 = function () {\n        return _0x593be2;\n    };\n    return a0_0x1548();\n}\nvar a0_0x19f9e5 = a0_0x1519;\nvar input = require('fs')['readFileSync'](a0_0x19f9e5(0x0), a0_0x19f9e5(0x1));\nvar Arr = input[a0_0x19f9e5(0x2)]()[a0_0x19f9e5(0x3)]('\\x0a');\nwhile (!![]) {\n    var a = Arr['shift']();\n    if (a == '0')\n        break;\n    var xy = [];\n    for (var i = 0x0; i < a; i++)\n        xy[a0_0x19f9e5(0x4)](Arr[a0_0x19f9e5(0x5)]());\n    var b = Arr[a0_0x19f9e5(0x5)]();\n    var news = [];\n    for (var i = 0x0; i < b; i++)\n        news[a0_0x19f9e5(0x4)](Arr[a0_0x19f9e5(0x5)]());\n    var X = 0xa;\n    var Y = 0xa;\n    var XY = [];\n    news[a0_0x19f9e5(0x6)](function (v) {\n        var _0x480e9c = a0_0x1519;\n        var arr = v[_0x480e9c(0x3)]('\\x20');\n        for (var i = 0x0; i < arr[0x1] - 0x0; i++) {\n            if (arr[0x0] == 'N')\n                Y++;\n            if (arr[0x0] == 'E')\n                X++;\n            if (arr[0x0] == 'W')\n                X--;\n            if (arr[0x0] == 'S')\n                Y--;\n            XY[_0x480e9c(0x4)](X + '\\x20' + Y);\n        }\n    });\n    var flag = xy['every'](function (v) {\n        var _0x35bdc8 = a0_0x1519;\n        return XY[_0x35bdc8(0x7)](v) != -0x1;\n    });\n    console[a0_0x19f9e5(0x8)](flag ? a0_0x19f9e5(0x9) : 'No');\n}", "test_cases": [["2\n10 11\n11 12\n2\nN 2\nE 1\n2\n10 11\n11 12\n2\nN 2\nW 1\n3\n0 15\n5 10\n5 15\n5\nW 10\nS 10\nN 20\nE 10\nS 10\n0", "Yes\nNo\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var a=Arr.shift();\n   if(a==\"0\")break;\n   var xy=[];\n   for(var i=0;i<a;i++)xy.push(Arr.shift());\n   var b=Arr.shift();\n   var news=[];\n   for(var i=0;i<b;i++)news.push(Arr.shift());\n   var X=10;\n   var Y=10;\n   var XY=[];\n   news.forEach(function(v){\n      var arr=v.split(\" \");\n      for(var i=0;i<(arr[1]-0);i++){\n         if(arr[0]==\"N\")Y++;\n         if(arr[0]==\"E\")X++;\n         if(arr[0]==\"W\")X--;\n         if(arr[0]==\"S\")Y--;\n         XY.push(X+\" \"+Y);\n      }\n   });\n   var flag=xy.every(function(v){return (XY.indexOf(v)!=-1);});\n   console.log(flag?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p01701_1", "type": "JavaScript", "obfuscated": "var a0_0x537035 = a0_0x18f3;\nfunction a0_0x4c56() {\n    var _0xb064ef = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'data',\n        'split',\n        'replace',\n        'length',\n        'pow',\n        'cLxMF',\n        'dTnkP',\n        'bAZUz',\n        'log',\n        'RJGiM',\n        'VfDLy'\n    ];\n    a0_0x4c56 = function () {\n        return _0xb064ef;\n    };\n    return a0_0x4c56();\n}\nprocess[a0_0x537035(0x0)][a0_0x537035(0x1)]();\nfunction a0_0x18f3(xnkzWg, key) {\n    var stringArray = a0_0x4c56();\n    a0_0x18f3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x18f3(xnkzWg, key);\n}\nprocess[a0_0x537035(0x0)][a0_0x537035(0x2)]('utf8');\nprocess[a0_0x537035(0x0)]['on'](a0_0x537035(0x3), function (chunk) {\n    var _0x504824 = a0_0x18f3;\n    var line, lines = chunk[_0x504824(0x4)]('\\x0a'), i, len = lines['length'], j, jLen, deg, pow, max;\n    for (i = 0x0; i < len; i++) {\n        if ('xeYJs' === 'RvEzc') {\n            if (deg < max) {\n                deg += 0x5a * Math['pow'](0x2, j);\n            }\n        } else {\n            line = lines[i];\n            if (line == '#') {\n                break;\n            }\n            line = line[_0x504824(0x5)](/north/g, 0x0);\n            line = line['replace'](/west/g, 0x1);\n            deg = 0x0;\n            jLen = line[_0x504824(0x6)];\n            pow = line['length'] - 0x1;\n            max = 0x5a * Math[_0x504824(0x7)](0x2, pow);\n            for (j = jLen; j >= 0x0; j--) {\n                if (line[j] * 0x1) {\n                    if ('hflXp' === 'hflXp') {\n                        if (deg < max) {\n                            deg += 0x5a * Math[_0x504824(0x7)](0x2, j);\n                        }\n                    } else {\n                        if (deg > 0x0) {\n                            deg -= 0x5a * Math[_0x504824(0x7)](0x2, j);\n                        }\n                    }\n                } else {\n                    if (deg > 0x0) {\n                        if ('cLxMF' === _0x504824(0x8)) {\n                            deg -= 0x5a * Math[_0x504824(0x7)](0x2, j);\n                        } else {\n                            deg -= 0x5a * Math[_0x504824(0x7)](0x2, j);\n                        }\n                    }\n                }\n            }\n            while (pow > 0x0 && deg % 0x2 === 0x0) {\n                if (_0x504824(0x9) === _0x504824(0xa)) {\n                    console[_0x504824(0xb)](deg);\n                } else {\n                    deg = deg / 0x2;\n                    pow--;\n                }\n            }\n            if (pow > 0x0) {\n                if (_0x504824(0xc) !== 'RJGiM') {\n                    console[_0x504824(0xb)](deg + '/' + Math[_0x504824(0x7)](0x2, pow));\n                } else {\n                    console[_0x504824(0xb)](deg + '/' + Math[_0x504824(0x7)](0x2, pow));\n                }\n            } else {\n                if (_0x504824(0xd) === _0x504824(0xd)) {\n                    console['log'](deg);\n                } else {\n                    deg = deg / 0x2;\n                    pow--;\n                }\n            }\n        }\n    }\n});", "test_cases": [["north\nwest\nnorthwest\nnorthnorthwest\nwestwestwestnorth\n#", "0\n90\n45\n45/2\n315/4"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  var line, lines = chunk.split(\"\\n\"),\n      i, len = lines.length, j, jLen,\n      deg, pow, max;\n\n  for (i=0; i<len; i++) {\n    line = lines[i];\n    if (line == \"#\") {\n      break;\n    }\n\n    line = line.replace(/north/g, 0);\n    line = line.replace(/west/g, 1);\n\n    deg = 0;\n\n    jLen = line.length;\n    pow = line.length - 1;\n    max = 90 * Math.pow(2, pow);\n    for (j=jLen; j>=0; j--) {\n      if (line[j]*1) {\n        if (deg < max) {\n          deg += 90 * Math.pow(2, j);\n        }   \n      } else {\n        if (deg > 0) {\n          deg -= 90 * Math.pow(2, j);\n        }\n      }\n    }\n\n    while(pow > 0 && deg % 2 === 0) {\n      deg = deg / 2;\n      pow--;\n    }\n    \n    if (pow > 0) {\n      console.log(deg + \"/\" + Math.pow(2, pow));\n    } else {\n      console.log(deg);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p02537_1", "type": "JavaScript", "obfuscated": "function a0_0x3c9e() {\n    const _0x13166b = [\n        'split',\n        'map',\n        'slice',\n        'push',\n        'abs',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x3c9e = function () {\n        return _0x13166b;\n    };\n    return a0_0x3c9e();\n}\nconst a0_0x32384d = a0_0x1845;\nconst main = arg => {\n    const _0x463de2 = a0_0x1845;\n    const [N, K] = arg[_0x463de2(0x0)]('\\x0a')[0x0][_0x463de2(0x0)]('\\x20')[_0x463de2(0x1)](Number);\n    arg = arg['split']('\\x0a')[_0x463de2(0x2)](0x1);\n    const a = arg[_0x463de2(0x1)](Number);\n    let b = [];\n    b[_0x463de2(0x3)](a[0x0]);\n    for (let i = 0x1; i < N; i++) {\n        if (Math[_0x463de2(0x4)](a[i] - b[b['length'] - 0x1]) <= K) {\n            b[_0x463de2(0x3)](a[i]);\n        }\n    }\n    console[_0x463de2(0x5)](b['length']);\n};\nfunction a0_0x1845(ASrCpT, key) {\n    const stringArray = a0_0x3c9e();\n    a0_0x1845 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1845(ASrCpT, key);\n}\nmain(require('fs')['readFileSync'](a0_0x32384d(0x6), a0_0x32384d(0x7)));", "test_cases": [["10 3\n1\n5\n4\n3\n8\n6\n9\n7\n2\n4", "7"]], "original": "const main = (arg) => {\n    const [N,K] = arg.split(\"\\n\")[0].split(\" \").map(Number)\n    arg = arg.split(\"\\n\").slice(1)\n    const a = arg.map(Number)\n    \n    let b = []\n    b.push(a[0])\n    for(let i=1; i<N; i++) {\n        if(Math.abs(a[i]-b[b.length-1]) <= K) {\n            // last = a[i]\n            b.push(a[i])\n        }\n    }\n    console.log(b.length)\n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02550_1", "type": "JavaScript", "obfuscated": "const a0_0x1e338b = a0_0x5ee6;\nconst input = require('fs')[a0_0x1e338b(0x0)]('/dev/stdin', a0_0x1e338b(0x1));\nconst lines = input[a0_0x1e338b(0x2)]('\\x0a');\nconst [N, X, M] = lines[0x0][a0_0x1e338b(0x2)]('\\x20')[a0_0x1e338b(0x3)](Number);\nlet a = X;\nfunction a0_0x30b7() {\n    const _0x3823f1 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'map',\n        'push',\n        'pop',\n        'length',\n        'reduce',\n        'floor'\n    ];\n    a0_0x30b7 = function () {\n        return _0x3823f1;\n    };\n    return a0_0x30b7();\n}\nconst map = {};\nconst loop = [];\nconst pre = [a];\nfor (let i = 0x1; i < N; i++) {\n    a = a * a % M;\n    if (map[a] === 0x2) {\n        break;\n    } else if (map[a]) {\n        loop[a0_0x1e338b(0x4)](a);\n        pre[a0_0x1e338b(0x5)]();\n    } else {\n        pre[a0_0x1e338b(0x4)](a);\n    }\n    map[a] = (map[a] || 0x0) + 0x1;\n}\nconst suf = [];\nfunction a0_0x5ee6(XtIgGt, key) {\n    const stringArray = a0_0x30b7();\n    a0_0x5ee6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ee6(XtIgGt, key);\n}\nfor (let i = 0x0; i < (N - pre[a0_0x1e338b(0x6)]) % (loop[a0_0x1e338b(0x6)] || 0x1); i++) {\n    suf[a0_0x1e338b(0x4)](loop[i]);\n}\nconst sum = loop[a0_0x1e338b(0x7)]((a, b) => a + b, 0x0);\nconst lt = loop[a0_0x1e338b(0x6)] ? Math[a0_0x1e338b(0x8)]((N - pre['length']) / loop[a0_0x1e338b(0x6)]) : 0x0;\nconsole['log'](pre[a0_0x1e338b(0x7)]((a, b) => a + b, 0x0) + sum * lt + suf[a0_0x1e338b(0x7)]((a, b) => a + b, 0x0));", "test_cases": [["6 2 1001", "1369"], ["1000 2 16", "6"], ["10000000000 10 99959", "492443256176507"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nconst lines = input.split('\\n')\nconst [N, X, M] = lines[0].split(' ').map(Number)\n\nlet a = X\nconst map = {}\nconst loop = []\nconst pre = [a]\nfor (let i = 1; i < N; i++) {\n    a = a * a % M\n    if (map[a] === 2){\n        break\n    } else if (map[a]) {\n        loop.push(a)\n        pre.pop()\n    } else {\n        pre.push(a)\n    }\n    map[a] = (map[a] || 0) + 1\n}\n\nconst suf = []\nfor (let i = 0; i < (N - pre.length) % (loop.length || 1); i++) {\n    suf.push(loop[i])\n}\n\nconst sum = loop.reduce((a, b) => a + b, 0)\nconst lt = loop.length ? Math.floor(((N - pre.length) / loop.length)) : 0\n\nconsole.log(\n    pre.reduce((a, b) => a + b, 0) +\n    sum * lt +\n    suf.reduce((a, b) => a + b, 0)\n)\n", "language": "JavaScript"}
{"filename": "p02619_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x5f00c7 = a0_0xe872;\nfunction a0_0xe872(bhTkPC, key) {\n    const stringArray = a0_0x1352();\n    a0_0xe872 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe872(bhTkPC, key);\n}\nfunction a0_0x1352() {\n    const _0x2437ae = [\n        'trim',\n        'split',\n        'map',\n        'slice',\n        'fill',\n        'length',\n        'reduce',\n        'log',\n        'utf8'\n    ];\n    a0_0x1352 = function () {\n        return _0x2437ae;\n    };\n    return a0_0x1352();\n}\nfunction Main(input) {\n    const _0x40558b = a0_0xe872;\n    const tmp = input[_0x40558b(0x0)]()[_0x40558b(0x1)]('\\x0a');\n    const D = Number(tmp[0x0]);\n    const C = tmp[0x1][_0x40558b(0x1)]('\\x20')[_0x40558b(0x2)](v => Number(v));\n    const S = tmp[_0x40558b(0x3)](0x2, 0x7)['map'](v => v[_0x40558b(0x1)]('\\x20')[_0x40558b(0x2)](v => Number(v)));\n    const T = tmp[_0x40558b(0x3)](-0x5)['map'](v => Number(v));\n    let LastContestDays = Array(0x1a)[_0x40558b(0x4)](0x0);\n    let currnetContestLebels = Array(0x1a)[_0x40558b(0x4)](0x0);\n    let lebel = 0x0;\n    for (let i = 0x1; i <= D; i++) {\n        LastContestDays[T[i - 0x1] - 0x1] = i;\n        for (let j = 0x0; j < C[_0x40558b(0x5)]; j++) {\n            if (LastContestDays[j] === i) {\n                currnetContestLebels[j] = S[i - 0x1][j];\n            } else {\n                currnetContestLebels[j] = C[j] * (i - LastContestDays[j]) * -0x1;\n            }\n        }\n        lebel += currnetContestLebels[_0x40558b(0x6)]((acc, cur) => acc + cur);\n        console[_0x40558b(0x7)](String(lebel));\n    }\n    return;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', a0_0x5f00c7(0x8)));", "test_cases": [["5\n86 90 69 51 2 96 71 47 88 34 45 46 89 34 31 38 97 84 41 80 14 4 50 83 7 82\n19771 12979 18912 10432 10544 12928 13403 3047 10527 9740 8100 92 2856 14730 1396 15905 6534 4650 11469 3628 8433 2994 10899 16396 18355 11424\n6674 17707 13855 16407 12232 2886 11908 1705 5000 1537 10440 10711 4917 10770 17272 15364 19277 18094 3929 3705 7169 6159 18683 15410 9092 4570\n6878 4239 19925 1799 375 9563 3445 5658 19857 11401 6997 6498 19933 3848 2426 2146 19745 16880 17773 18359 3921 14172 16730 11157 5439 256\n8633 15862 15303 10749 18499 7792 10317 5901 9395 11433 3514 3959 5202 19850 19469 9790 5653 784 18500 10552 17975 16615 7852 197 8471 7452\n19855 17918 7990 10572 4333 438 9140 9104 12622 4985 12319 4028 19922 12132 16259 17476 2976 547 19195 19830 16285 4806 4471 9457 2864 2192\n1\n17\n13\n14\n13", "18398\n35037\n51140\n65837\n79325"]], "original": "'use strict';\n\nfunction Main(input) {\n    const tmp = input.trim().split('\\n');\n    const D = Number(tmp[0]);\n    const C = tmp[1].split(' ').map((v) => Number(v));\n    const S = tmp.slice(2, 7).map((v) => v.split(' ').map((v) => Number(v)));\n    const T = tmp.slice(-5).map((v) => Number(v));\n\n    let LastContestDays = Array(26).fill(0); // コンテストの種類ごとの最終開催日\n    let currnetContestLebels = Array(26).fill(0); // ある開催日のコンテストごとの満足度\n    let lebel = 0; // 満足度の累計\n\n    for (let i = 1; i <= D; i++) {\n        LastContestDays[T[i - 1] - 1] = i;\n        for (let j = 0; j < C.length; j++) {\n            if (LastContestDays[j] === i) {\n                currnetContestLebels[j] = S[i - 1][j];\n            } else {\n                currnetContestLebels[j] = C[j] * (i - LastContestDays[j]) * -1;\n            }\n        }\n        lebel += currnetContestLebels.reduce((acc, cur) => acc + cur);\n        console.log(String(lebel));\n    }\n\n    return;\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02709_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x59b182 = a0_0x1e8f;\nfunction a0_0x1e8f(YuDPan, key) {\n    const stringArray = a0_0x23ab();\n    a0_0x1e8f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e8f(YuDPan, key);\n}\nfunction a0_0x23ab() {\n    const _0x30b98d = [\n        'trim',\n        'split',\n        'map',\n        'push',\n        'max',\n        'keys',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x23ab = function () {\n        return _0x30b98d;\n    };\n    return a0_0x23ab();\n}\nconst main = arg => {\n    const _0x447e3b = a0_0x1e8f;\n    const input = arg[_0x447e3b(0x0)]()['split']('\\x0a');\n    const n = parseInt(input[0x0]);\n    const arr = input[0x1][_0x447e3b(0x1)]('\\x20')[_0x447e3b(0x2)](n => parseInt(n));\n    function cal(i, dst) {\n        const _0x5436ea = a0_0x1e8f;\n        if (i === -0x1)\n            return 0x0;\n        const results = [];\n        for (const j of dst) {\n            const next_dst = dst['filter'](v => v !== j);\n            const abs = i > j ? i - j : j - i;\n            const val = arr[i] * abs + cal(i - 0x1, next_dst);\n            results[_0x5436ea(0x3)](val);\n        }\n        return Math[_0x5436ea(0x4)](...results);\n    }\n    console['log'](cal(n - 0x1, [...Array(n)[_0x447e3b(0x5)]()]));\n};\nmain(require('fs')[a0_0x59b182(0x6)](a0_0x59b182(0x7), a0_0x59b182(0x8)));", "test_cases": [["4\n1 3 4 2", "20"], ["6\n5 5 6 1 1 1", "58"], ["6\n8 6 9 1 2 1", "85"]], "original": "\"use strict\";\n\nconst main = arg => {\n  const input = arg.trim().split(\"\\n\");\n\n  const n = parseInt(input[0]);\n  const arr = input[1].split(\" \").map(n => parseInt(n));\n\n  function cal(i, dst) {\n    if (i === -1) return 0;\n\n    const results = [];\n    for (const j of dst) {\n      const next_dst = dst.filter(v => v !== j);\n      const abs = i > j ? i - j : j - i;\n      const val = arr[i] * abs + cal(i - 1, next_dst);\n      results.push(val);\n    }\n\n    return Math.max(...results);\n  }\n\n  console.log(cal(n - 1, [...Array(n).keys()]));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02814_1", "type": "JavaScript", "obfuscated": "var a0_0x24fb10 = a0_0x22fa;\nfunction main(input) {\n    var _0x296fdc = a0_0x22fa;\n    var N = input[0x0][_0x296fdc(0x0)]('\\x20')[0x0] - 0x0;\n    var M = input[0x0]['split']('\\x20')[0x1] - 0x0;\n    var list = input[0x1][_0x296fdc(0x0)]('\\x20')[_0x296fdc(0x1)](v => v / 0x2);\n    var l = lcm(list);\n    console[_0x296fdc(0x2)](Math[_0x296fdc(0x3)](M / l) - Math[_0x296fdc(0x3)](M / (l * 0x2)));\n}\nfunction a0_0x2589() {\n    var _0x31b853 = [\n        'split',\n        'map',\n        'log',\n        'trunc',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x2589 = function () {\n        return _0x31b853;\n    };\n    return a0_0x2589();\n}\nfunction a0_0x22fa(XhXQNZ, key) {\n    var stringArray = a0_0x2589();\n    a0_0x22fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x22fa(XhXQNZ, key);\n}\nfunction lcm(args) {\n    var _0x192722 = a0_0x22fa;\n    var a = args;\n    var g = (n, m) => m ? g(m, n % m) : n;\n    var l = (n, m) => n * m / g(n, m);\n    var ans = a[0x0];\n    for (var i = 0x1; i < a[_0x192722(0x4)]; i++) {\n        ans = l(ans, a[i]);\n    }\n    return ans;\n}\nmain(require('fs')[a0_0x24fb10(0x5)](a0_0x24fb10(0x6), a0_0x24fb10(0x7))[a0_0x24fb10(0x8)]()[a0_0x24fb10(0x0)]('\\x0a'));", "test_cases": [["2 50\n6 10", "2"], ["3 100\n14 22 40", "0"], ["5 1000000000\n6 6 2 6 2", "166666667"]], "original": "function main(input) {\n  var N = input[0].split(\" \")[0]-0;\n  var M = input[0].split(\" \")[1]-0;\n  var list = input[1].split(\" \").map(v=>v/2);\n  var l = lcm(list);\n  console.log(Math.trunc(M/l) - Math.trunc(M/(l*2)));\n}\n\nfunction lcm(args) {\n    var a = args\n    var g = (n, m) => m ? g(m, n % m) : n\n    var l = (n, m) => n * m / g(n, m)\n    var ans = a[0]\n\n    for (var i = 1; i < a.length; i++) {\n        ans = l(ans, a[i])\n    }\n    return ans\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02821_1", "type": "JavaScript", "obfuscated": "function a0_0x3b76(qLYMRq, key) {\n    var stringArray = a0_0x2cae();\n    a0_0x3b76 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b76(qLYMRq, key);\n}\nvar a0_0x5d5ab0 = a0_0x3b76;\nfunction Main(input) {\n    var _0xad7d82 = a0_0x3b76;\n    const M = input[0x0][0x1];\n    const alist = input[0x1];\n    const kumiList = alist['reduce']((arr, ai, i) => {\n        var _0x5aa1c0 = a0_0x3b76;\n        arr['push'](ai * 0x2);\n        var kumiVal;\n        for (var j = i + 0x1; j < alist[_0x5aa1c0(0x0)]; j++) {\n            kumiVal = ai + alist[j];\n            arr[_0x5aa1c0(0x1)](kumiVal, kumiVal);\n        }\n        return arr;\n    }, [])[_0xad7d82(0x2)]((a1, a2) => a2 - a1);\n    var answer = 0x0;\n    for (var i = 0x0; i < M; i++) {\n        answer += kumiList[i];\n    }\n    console[_0xad7d82(0x3)](answer);\n}\nMain(require('fs')[a0_0x5d5ab0(0x4)]('/dev/stdin', 'utf8')[a0_0x5d5ab0(0x5)]()[a0_0x5d5ab0(0x6)]('\\x0a')[a0_0x5d5ab0(0x7)](line => line[a0_0x5d5ab0(0x6)]('\\x20')['map'](Number)));\nfunction a0_0x2cae() {\n    var _0x3b5ccd = [\n        'length',\n        'push',\n        'sort',\n        'log',\n        'readFileSync',\n        'trim',\n        'split',\n        'map'\n    ];\n    a0_0x2cae = function () {\n        return _0x3b5ccd;\n    };\n    return a0_0x2cae();\n}", "test_cases": [["5 3\n10 14 19 34 33", "202"], ["9 14\n1 3 5 110 24 21 34 5 3", "1837"], ["9 73\n67597 52981 5828 66249 75177 64141 40773 79105 16076", "8128170"]], "original": "/**\n * @param input number[][]\n */\nfunction Main(input) {\n  const M = input[0][1];\n  const alist = input[1];\n\n  const kumiList = alist.reduce((arr, ai, i) => {\n    arr.push(ai * 2);\n\n    var kumiVal;\n    for (var j = i + 1; j < alist.length; j++) {\n      kumiVal = ai + alist[j];\n      arr.push(kumiVal, kumiVal);\n    }\n\n    return arr;\n  }, []).sort((a1, a2) => a2 - a1);\n\n  var answer = 0;\n  for (var i = 0; i < M; i++) {\n    answer += kumiList[i];\n  }\n\n  console.log(answer);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim()\n  .split('\\n')\n  .map((line) => line.split(' ').map(Number))\n);", "language": "JavaScript"}
{"filename": "p03381_1", "type": "JavaScript", "obfuscated": "const a0_0x310b14 = a0_0x4f71;\nfunction Main(input) {\n    const _0x34f8e0 = a0_0x4f71;\n    const lines = input[_0x34f8e0(0x0)]('\\x0a');\n    let N = parseInt(lines[0x0]);\n    let a = lines[0x1][_0x34f8e0(0x0)]('\\x20')[_0x34f8e0(0x1)](function (i) {\n        return parseInt(i);\n    });\n    let sortedA = a[_0x34f8e0(0x2)]()[_0x34f8e0(0x3)](function (a, b) {\n        return a - b;\n    });\n    const med1 = sortedA[N / 0x2 - 0x1];\n    const med2 = sortedA[N / 0x2];\n    a[_0x34f8e0(0x4)](function (i) {\n        const _0x2ab768 = a0_0x4f71;\n        console[_0x2ab768(0x5)](i <= med1 ? med2 : med1);\n    });\n}\nfunction a0_0x4f71(apixxI, key) {\n    const stringArray = a0_0x5fa1();\n    a0_0x4f71 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f71(apixxI, key);\n}\nfunction a0_0x5fa1() {\n    const _0xc83691 = [\n        'split',\n        'map',\n        'slice',\n        'sort',\n        'forEach',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x5fa1 = function () {\n        return _0xc83691;\n    };\n    return a0_0x5fa1();\n}\nMain(require('fs')[a0_0x310b14(0x6)]('/dev/stdin', a0_0x310b14(0x7)));", "test_cases": [["4\n2 4 4 3", "4\n3\n3\n4"], ["2\n1 2", "2\n1"], ["6\n5 5 4 4 3 3", "4\n4\n4\n4\n4\n4"]], "original": "function Main(input) {\n    const lines = input.split(\"\\n\");\n    let N = parseInt(lines[0]);\n    let a = lines[1].split(\" \").map(function(i) { return parseInt(i);});\n    let sortedA = a.slice().sort(function(a,b) { return a - b;});\n    const med1 = sortedA[N/2-1];\n    const med2 = sortedA[N/2];\n    a.forEach(function(i) {console.log(i<=med1 ? med2 : med1);})\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03418_1", "type": "JavaScript", "obfuscated": "var a0_0x113961 = a0_0x1bd3;\nfunction Main(input) {\n    var _0x2107b7 = a0_0x1bd3;\n    var line = input[_0x2107b7(0x0)]('\\x0a');\n    var tmp = line[0x0][_0x2107b7(0x0)]('\\x20');\n    var maxint = Number(tmp[0x0]);\n    var minrest = Number(tmp[0x1]);\n    var ans = 0x0;\n    for (var a = minrest || 0x1; a <= maxint; a++) {\n        for (var b = minrest || 0x1; b <= maxint; b++) {\n            if (a < b) {\n                ans++;\n            } else {\n                if (a % b >= minrest)\n                    ans++;\n            }\n        }\n    }\n    console[_0x2107b7(0x1)](ans);\n}\nfunction a0_0x1bd3(eUpuPU, key) {\n    var stringArray = a0_0x5527();\n    a0_0x1bd3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1bd3(eUpuPU, key);\n}\nMain(require('fs')[a0_0x113961(0x2)](a0_0x113961(0x3), a0_0x113961(0x4)));\nfunction a0_0x5527() {\n    var _0x17e249 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5527 = function () {\n        return _0x17e249;\n    };\n    return a0_0x5527();\n}", "test_cases": [["5 2", "7"], ["10 0", "100"], ["31415 9265", "287927211"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar line = input.split(\"\\n\");\n\tvar tmp = line[0].split(\" \");\n\tvar maxint = Number(tmp[0]);\n\tvar minrest = Number(tmp[1]);\n\tvar ans = 0;\n\tfor(var a = minrest || 1; a <= maxint; a++){\n\t\tfor(var b = minrest || 1; b <= maxint; b++){\n\t\t\tif(a < b){\n\t\t\t\tans++;\n\t\t\t} else{\n\t\t\t\tif(a%b >= minrest) ans++;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03533_1", "type": "JavaScript", "obfuscated": "function a0_0x1ad6(hdnNXA, key) {\n    var stringArray = a0_0x3539();\n    a0_0x1ad6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ad6(hdnNXA, key);\n}\nvar a0_0xfc9109 = a0_0x1ad6;\nfunction a0_0x3539() {\n    var _0x49f86b = [\n        'readFileSync',\n        'utf8',\n        'log',\n        'trim',\n        'match'\n    ];\n    a0_0x3539 = function () {\n        return _0x49f86b;\n    };\n    return a0_0x3539();\n}\nvar s = require('fs')[a0_0xfc9109(0x0)]('/dev/stdin', a0_0xfc9109(0x1));\nconsole[a0_0xfc9109(0x2)](s[a0_0xfc9109(0x3)]()[a0_0xfc9109(0x4)](/^A?KIHA?BA?RA?$/) ? 'YES' : 'NO');", "test_cases": [["KIHBR", "YES"], ["AKIBAHARA", "NO"], ["AAKIAHBAARA", "NO"]], "original": "var s = require('fs').readFileSync('/dev/stdin', 'utf8');\nconsole.log((s.trim().match(/^A?KIHA?BA?RA?$/)) ? \"YES\" : \"NO\");", "language": "JavaScript"}
{"filename": "p03568_1", "type": "JavaScript", "obfuscated": "var a0_0x407916 = a0_0x5b3b;\nfunction a0_0x5b3b(wqSBJL, key) {\n    var stringArray = a0_0x2d16();\n    a0_0x5b3b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b3b(wqSBJL, key);\n}\nfunction a0_0x2d16() {\n    var _0x5c936b = [\n        'split',\n        'map',\n        'forEach',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x2d16 = function () {\n        return _0x5c936b;\n    };\n    return a0_0x2d16();\n}\nfunction Main(input) {\n    var _0x2cb9cf = a0_0x5b3b;\n    input = input['split']('\\x0a');\n    var n = Math['pow'](0x3, input[0x0]);\n    var sum = 0x1;\n    var arr = input[0x1][_0x2cb9cf(0x0)]('\\x20')[_0x2cb9cf(0x1)](Number);\n    arr[_0x2cb9cf(0x2)](function (val) {\n        if (val % 0x2 == 0x0)\n            sum *= 0x2;\n    });\n    console[_0x2cb9cf(0x3)](n - sum);\n}\nMain(require('fs')[a0_0x407916(0x4)]('/dev/stdin', 'utf8')['trim']());", "test_cases": [["2\n2 3", "7"], ["3\n3 3 3", "26"], ["1\n100", "1"], ["10\n90 52 56 71 44 8 13 30 57 84", "58921"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n  var n = Math.pow(3,input[0]);\n  var sum = 1;\n  var arr = input[1].split(\" \").map(Number);\n  arr.forEach(function(val){if(val%2==0)sum *= 2});\n  console.log(n-sum);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03578_1", "type": "JavaScript", "obfuscated": "function a0_0x3c42(OrYVDf, key) {\n    const stringArray = a0_0x43da();\n    a0_0x3c42 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c42(OrYVDf, key);\n}\nfunction a0_0x43da() {\n    const _0x475d9a = [\n        'trim',\n        'map',\n        'sort',\n        'YES',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x43da = function () {\n        return _0x475d9a;\n    };\n    return a0_0x43da();\n}\nconst a0_0x523c0d = a0_0x3c42;\nconsole['log']((args => {\n    const _0x18e672 = a0_0x3c42;\n    const [[N], D, [M], T] = args[_0x18e672(0x0)]()['split']('\\x0a')[_0x18e672(0x1)](r => r['split']('\\x20')['map'](v => v | 0x0));\n    D[_0x18e672(0x2)]((a, b) => a - b);\n    T[_0x18e672(0x2)]((a, b) => a - b);\n    let j = -0x1;\n    Q:\n        for (let i = 0x0; i < M; i++) {\n            while (++j < N) {\n                if (D[j] > T[i])\n                    return 'NO';\n                if (D[j] === T[i])\n                    continue Q;\n            }\n            return 'NO';\n        }\n    return _0x18e672(0x3);\n})(require('fs')[a0_0x523c0d(0x4)](a0_0x523c0d(0x5), 'utf8')));", "test_cases": [["5\n3 1 4 1 5\n3\n5 4 3", "YES"], ["7\n100 200 500 700 1200 1600 2000\n6\n100 200 500 700 1600 1600", "NO"], ["1\n800\n5\n100 100 100 100 100", "NO"], ["15\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5\n9\n5 4 3 2 1 2 3 4 5", "YES"]], "original": "console.log((args=>{\n  const [[N],D,[M],T] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  D.sort((a,b)=>a-b);\n  T.sort((a,b)=>a-b);\n  let j = -1;\n  Q: for ( let i = 0; i < M; i++ ) {\n    while ( ++j < N ) {\n      if ( D[j] > T[i] ) return 'NO';\n      if ( D[j] === T[i] ) continue Q;\n    }\n    return 'NO';\n  }\n  return 'YES';\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03733_1", "type": "JavaScript", "obfuscated": "const a0_0x2ec5a3 = a0_0x1d76;\nfunction a0_0x1d76(dmYNwq, key) {\n    const stringArray = a0_0x4d9f();\n    a0_0x1d76 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d76(dmYNwq, key);\n}\nfunction a0_0x4d9f() {\n    const _0x2fc813 = [\n        'log',\n        'split',\n        'map',\n        'sort',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4d9f = function () {\n        return _0x2fc813;\n    };\n    return a0_0x4d9f();\n}\nconsole[a0_0x2ec5a3(0x0)]((args => {\n    const _0x1e76f1 = a0_0x1d76;\n    const [[N, T], t] = args['trim']()[_0x1e76f1(0x1)]`\\n`[_0x1e76f1(0x2)](r => r[_0x1e76f1(0x1)]` `[_0x1e76f1(0x2)](v => v | 0x0));\n    t[_0x1e76f1(0x3)]((a, b) => a - b);\n    let s = T;\n    for (let i = 0x1; i < N; i++) {\n        if (t[i - 0x1] + T > t[i])\n            s += t[i] - t[i - 0x1];\n        else\n            s += T;\n    }\n    return '' + s;\n})(require('fs')[a0_0x2ec5a3(0x4)](a0_0x2ec5a3(0x5), 'utf8')));", "test_cases": [["2 4\n0 3", "7"], ["2 4\n0 5", "8"], ["4 1000000000\n0 1000 1000000 1000000000", "2000000000"], ["1 1\n0", "1"], ["9 10\n0 3 5 7 100 110 200 300 311", "67"]], "original": "console.log((args=>{\n  const [[N,T],t] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  t.sort((a,b)=>a-b);\n  let s = T;\n  for ( let i = 1; i < N; i++ ) {\n    if ( t[i-1] + T > t[i] ) s += t[i] - t[i-1];\n    else s += T;\n  }\n  return `${s}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03817_1", "type": "JavaScript", "obfuscated": "var a0_0x2e13cc = a0_0x19e1;\ninput = require('fs')[a0_0x2e13cc(0x0)](a0_0x2e13cc(0x1), a0_0x2e13cc(0x2));\nlines = input[a0_0x2e13cc(0x3)]('\\x0a');\nfunction a0_0x2d18() {\n    var _0x540554 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'floor',\n        'log'\n    ];\n    a0_0x2d18 = function () {\n        return _0x540554;\n    };\n    return a0_0x2d18();\n}\nN = lines['shift']() * 0x1;\nans = Math[a0_0x2e13cc(0x4)](N / 0xb) * 0x2;\nm = N % 0xb;\nfunction a0_0x19e1(XwTFEU, key) {\n    var stringArray = a0_0x2d18();\n    a0_0x19e1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x19e1(XwTFEU, key);\n}\nif (m == 0x0) {\n} else if (m <= 0x6) {\n    ans += 0x1;\n} else {\n    ans += 0x2;\n}\nconsole[a0_0x2e13cc(0x5)](ans);", "test_cases": [["7", "2"], ["149696127901", "27217477801"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nans = Math.floor(N / 11) * 2\nm = N % 11\nif (m == 0) {\n} else if (m <= 6) {\n    ans += 1\n} else {\n    ans += 2\n} \nconsole.log(ans)", "language": "JavaScript"}
{"filename": "p03889_1", "type": "JavaScript", "obfuscated": "const a0_0x53410e = a0_0xd3ca;\nfunction Main(input) {\n    const _0x58ee01 = a0_0xd3ca;\n    const arr = input['split']('');\n    if (arr[_0x58ee01(0x0)] % 0x2 !== 0x0) {\n        console['log']('No');\n        return;\n    }\n    const a = arr['slice'](0x0, arr[_0x58ee01(0x0)] / 0x2);\n    const b = arr['slice'](arr[_0x58ee01(0x0)] / 0x2, arr['length']);\n    if (a[_0x58ee01(0x1)]('') === b[_0x58ee01(0x2)]()[_0x58ee01(0x3)](mirror)['join']('')) {\n        console['log'](_0x58ee01(0x4));\n    } else {\n        console['log']('No');\n    }\n    function mirror(a) {\n        switch (a) {\n        case 'b':\n            return 'd';\n        case 'd':\n            return 'b';\n        case 'p':\n            return 'q';\n        case 'q':\n            return 'p';\n        }\n    }\n}\nfunction a0_0x17ff() {\n    const _0x5144db = [\n        'length',\n        'join',\n        'reverse',\n        'map',\n        'Yes',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x17ff = function () {\n        return _0x5144db;\n    };\n    return a0_0x17ff();\n}\nfunction a0_0xd3ca(cJMEyj, key) {\n    const stringArray = a0_0x17ff();\n    a0_0xd3ca = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xd3ca(cJMEyj, key);\n}\nMain(require('fs')['readFileSync'](a0_0x53410e(0x5), a0_0x53410e(0x6)));", "test_cases": [["pdbq", "Yes"], ["ppqb", "No"]], "original": "function Main(input) {\n  const arr = input.split(\"\");\n  if(arr.length % 2 !== 0){\n    console.log(\"No\");\n    return;\n  }\n  const a = arr.slice(0, arr.length/2);\n  const b = arr.slice(arr.length/2, arr.length);\n  if(a.join(\"\") === b.reverse().map(mirror).join(\"\")){\n    console.log(\"Yes\");\n  }else{ console.log(\"No\"); }\n  function mirror(a){\n    switch (a) {\n        case \"b\": return \"d\";\n        case \"d\": return \"b\";\n        case \"p\": return \"q\";\n        case \"q\": return \"p\";\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04033_1", "type": "JavaScript", "obfuscated": "const a0_0x58a3e3 = a0_0x4ce2;\nconst main = input => {\n    const _0x2a6ec4 = a0_0x4ce2;\n    const data = input[_0x2a6ec4(0x0)](/\\n|\\s/)['map'](a => parseInt(a, 0xa));\n    const a = data[0x0];\n    const b = data[0x1];\n    if (a <= 0x0 && 0x0 <= b) {\n        return _0x2a6ec4(0x1);\n    }\n    if ((b - a) % 0x2 || a > 0x0) {\n        return _0x2a6ec4(0x2);\n    } else {\n        return _0x2a6ec4(0x3);\n    }\n};\nconsole[a0_0x58a3e3(0x4)](main(require('fs')[a0_0x58a3e3(0x5)](a0_0x58a3e3(0x6), a0_0x58a3e3(0x7))));\nfunction a0_0x4ce2(yPDHgi, key) {\n    const stringArray = a0_0x1338();\n    a0_0x4ce2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ce2(yPDHgi, key);\n}\nfunction a0_0x1338() {\n    const _0x426746 = [\n        'split',\n        'Zero',\n        'Positive',\n        'Negative',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1338 = function () {\n        return _0x426746;\n    };\n    return a0_0x1338();\n}", "test_cases": [["1 3", "Positive"], ["-3 -1", "Negative"], ["-1 1", "Zero"]], "original": "const main = (input) =>  {\n  const data = input.split(/\\n|\\s/).map((a) => parseInt(a, 10));\n  const a = data[0];\n  const b = data[1];\n  if (a <= 0 && 0 <= b) {\n    return \"Zero\"\n  }\n\n  if ((b - a) % 2  || a > 0) {\n    return \"Positive\";\n  } else {\n    return \"Negative\";\n  }\n}\n\nconsole.log(main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")))\n\n\n\n", "language": "JavaScript"}
{"filename": "p00034_1", "type": "JavaScript", "obfuscated": "function a0_0x16e4() {\n    var _0x28226b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x16e4 = function () {\n        return _0x28226b;\n    };\n    return a0_0x16e4();\n}\nvar a0_0x5aa9c4 = a0_0x23bf;\nfunction a0_0x23bf(SYQxJV, key) {\n    var stringArray = a0_0x16e4();\n    a0_0x23bf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23bf(SYQxJV, key);\n}\nrequire('fs')[a0_0x5aa9c4(0x0)](a0_0x5aa9c4(0x1), a0_0x5aa9c4(0x2))[a0_0x5aa9c4(0x3)]()[a0_0x5aa9c4(0x4)](/\\s/)[a0_0x5aa9c4(0x5)](function (i) {\n    var _0x550f76 = a0_0x23bf;\n    j = i[_0x550f76(0x4)](',');\n    for (s = 0x0, m = n = 0xa; m--;)\n        j[m] = s -= j[m];\n    for (s *= j[0xb] / (-j[0xb] - j[n]); j[--n] >= -s;);\n    console[_0x550f76(0x6)](++n);\n});", "test_cases": [["1,1,1,1,1,1,1,1,1,1,40,60\n1,1,1,1,1,3,3,3,3,3,50,50\n10,10,10,10,10,10,10,10,10,10,50,49", "4\n7\n6"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",'utf8').trim().split(/\\s/).map(function(i){j=i.split(',');for(s=0,m=n=10;m--;)j[m]=s-=j[m];for(s*=j[11]/(-j[11]-j[n]);j[--n]>=-s;);console.log(++n);})", "language": "JavaScript"}
{"filename": "p00039_1", "type": "JavaScript", "obfuscated": "var a0_0x36a23c = a0_0x135b;\nfunction a0_0x1987() {\n    var _0x502aa2 = [\n        '.IVXLCDM',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'pow',\n        'indexOf',\n        'log'\n    ];\n    a0_0x1987 = function () {\n        return _0x502aa2;\n    };\n    return a0_0x1987();\n}\nfunction a0_0x135b(GUKupP, key) {\n    var stringArray = a0_0x1987();\n    a0_0x135b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x135b(GUKupP, key);\n}\nr = a0_0x36a23c(0x0), require('fs')[a0_0x36a23c(0x1)](a0_0x36a23c(0x2), a0_0x36a23c(0x3))[a0_0x36a23c(0x4)]('\\x0a')[a0_0x36a23c(0x5)](function (i) {\n    var _0x35665f = a0_0x135b;\n    i ? (n = s = p = 0x0, i['split']('')[_0x35665f(0x5)](function (c) {\n        var _0x2f0db8 = a0_0x135b;\n        n = Math[_0x2f0db8(0x6)](0xa, ~~((n = r[_0x2f0db8(0x7)](c)) / 0x2)) / (0x2 - n % 0x2), n > p ? s -= p * 0x2 : 0x0, s += n, p = n;\n    }), console[_0x35665f(0x8)](s)) : 0x0;\n});", "test_cases": [["IV\nCCCCLXXXXVIIII\nCDXCIX", "4\n499\n499"]], "original": "r=\".IVXLCDM\",require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').map(function(i){i?(n=s=p=0,i.split('').map(function(c){n=Math.pow(10,~~((n=r.indexOf(c))/2))/(2-(n%2)),n>p?s-=p*2:0,s+=n,p=n}),console.log(s)):0})", "language": "JavaScript"}
{"filename": "p00064_1", "type": "JavaScript", "obfuscated": "function a0_0x28aa(WplYfP, key) {\n    var stringArray = a0_0x5788();\n    a0_0x28aa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28aa(WplYfP, key);\n}\nvar a0_0x132baf = a0_0x28aa;\nvar ans = 0x0;\nrequire('fs')[a0_0x132baf(0x0)](a0_0x132baf(0x1), a0_0x132baf(0x2))[a0_0x132baf(0x3)](/\\d+/g)[a0_0x132baf(0x4)](function (elem) {\n    ans += parseInt(elem, 0xa);\n});\nfunction a0_0x5788() {\n    var _0x120eb1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'match',\n        'forEach',\n        'log'\n    ];\n    a0_0x5788 = function () {\n        return _0x120eb1;\n    };\n    return a0_0x5788();\n}\nconsole[a0_0x132baf(0x5)](ans);", "test_cases": [["Thereare100yenonthetable.Iam17yearsold.\nIshouldgohomeat6pm.", "123"]], "original": "var ans=0;\nrequire(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").match(/\\d+/g).forEach(function(elem){\n\tans += parseInt(elem, 10);\n});\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p00092_1", "type": "JavaScript", "obfuscated": "var a0_0xeacefd = a0_0x3146;\nfunction a0_0x2670() {\n    var _0x2842f9 = [\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push'\n    ];\n    a0_0x2670 = function () {\n        return _0x2842f9;\n    };\n    return a0_0x2670();\n}\nfunction seach(y, x) {\n    var _0x2e0417 = a0_0x3146;\n    if (yx[y][x] == '*')\n        return 0x0;\n    var dy = [\n        -0x1,\n        -0x1,\n        0x0\n    ];\n    var dx = [\n        -0x1,\n        0x0,\n        -0x1\n    ];\n    var min = n;\n    for (var i = 0x0; i < 0x3; i++) {\n        var yy = y + dy[i];\n        var xx = x + dx[i];\n        if (yy < 0x0 || yy >= n || xx < 0x0 || xx >= n)\n            return 0x1;\n        min = Math[_0x2e0417(0x0)](min, yx[yy][xx]);\n    }\n    return min + 0x1;\n}\nfunction a0_0x3146(KbsULR, key) {\n    var stringArray = a0_0x2670();\n    a0_0x3146 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3146(KbsULR, key);\n}\nvar input = require('fs')[a0_0xeacefd(0x1)](a0_0xeacefd(0x2), a0_0xeacefd(0x3));\nvar Arr = input[a0_0xeacefd(0x4)]()[a0_0xeacefd(0x5)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0xeacefd(0x6)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var max = 0x0;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        var str = Arr[a0_0xeacefd(0x6)]();\n        yx[a0_0xeacefd(0x7)](str[a0_0xeacefd(0x5)](''));\n    }\n    for (var y = 0x0; y < n; y++) {\n        for (var x = 0x0; x < n; x++) {\n            yx[y][x] = seach(y, x);\n            max = Math['max'](max, yx[y][x]);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["10\n...*....**\n..........\n**....**..\n........*.\n..*.......\n..........\n.*........\n..........\n....*..***\n.*....*...\n10\n****.*****\n*..*.*....\n****.*....\n*....*....\n*....*****\n..........\n****.*****\n*..*...*..\n****...*..\n*..*...*..\n0", "5\n3"]], "original": "function seach(y,x){\n   if(yx[y][x]==\"*\")return 0;\n   var dy=[-1,-1,0];\n   var dx=[-1,0,-1];\n   var min=n;\n   for(var i=0;i<3;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=n || xx<0 || xx>=n)return 1;\n      min=Math.min(min,yx[yy][xx]);\n   }\n   return min+1;\n}\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var max=0;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      var str=Arr.shift();\n      yx.push(str.split(\"\"));\n   }\n   for(var y=0;y<n;y++){\n      for(var x=0;x<n;x++){\n         yx[y][x]=seach(y,x);\n         max=Math.max(max,yx[y][x]);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00118_1", "type": "JavaScript", "obfuscated": "function a0_0x353e() {\n    var _0x17229a = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'log'\n    ];\n    a0_0x353e = function () {\n        return _0x17229a;\n    };\n    return a0_0x353e();\n}\nvar a0_0x42b4d5 = a0_0x4bf2;\nfunction a0_0x4bf2(ovtbAm, key) {\n    var stringArray = a0_0x353e();\n    a0_0x4bf2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4bf2(ovtbAm, key);\n}\nfunction bomb(y, x, v) {\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < 0x4; i++) {\n        var yy = y + dy[i];\n        var xx = x + dx[i];\n        if (yy < 0x0 || yy >= n[0x0] || xx < 0x0 || xx >= n[0x1])\n            continue;\n        if (v == yx[yy][xx]) {\n            yx[yy][xx] = 0x0;\n            bomb(yy, xx, v);\n        }\n    }\n}\nvar input = require('fs')[a0_0x42b4d5(0x0)](a0_0x42b4d5(0x1), 'utf8');\nvar Arr = input[a0_0x42b4d5(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x42b4d5(0x3)]()[a0_0x42b4d5(0x4)]('\\x20')['map'](Number);\n    if (n[0x0] == 0x0 && n[0x1] == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n[0x0]; i++) {\n        var arr = Arr[a0_0x42b4d5(0x3)]()['split']('');\n        yx['push'](arr);\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < n[0x0]; i++) {\n        for (var j = 0x0; j < n[0x1]; j++) {\n            var v = yx[i][j];\n            if (v == '@' || v == '#' || v == '*') {\n                cnt++;\n                yx[i][j] = 0x0;\n                bomb(i, j, v);\n            }\n        }\n    }\n    console[a0_0x42b4d5(0x5)](cnt);\n}", "test_cases": [["10 10\n####*****@\n@#@@@@#*#*\n@##***@@@*\n#****#*@**\n##@*#@@*##\n*@@@@*@@@#\n***#@*@##*\n*@@@*@@##@\n*@*#*@##**\n@****#@@#@\n0 0", "33"]], "original": "function bomb(y,x,v){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=n[0] || xx<0 || xx>=n[1])continue;\n      if(v==yx[yy][xx]){yx[yy][xx]=0;bomb(yy,xx,v);}\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=(Arr.shift()).split(\" \").map(Number);\n   if(n[0]==0 && n[1]==0)break;\n   var yx=[];\n   for(var i=0;i<n[0];i++){\n      var arr=(Arr.shift()).split(\"\");\n      yx.push(arr);\n   }\n   var cnt=0;\n   for(var i=0;i<n[0];i++){\n      for(var j=0;j<n[1];j++){\n         var v=yx[i][j];\n         if(v==\"@\" || v==\"#\" || v==\"*\"){cnt++;yx[i][j]=0;bomb(i,j,v);}\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00168_1", "type": "JavaScript", "obfuscated": "var a0_0x190d06 = a0_0x1a14;\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()[a0_0x190d06(0x0)]('\\x0a');\nvar dp = [\n    0x1,\n    0x2,\n    0x4\n];\nfunction a0_0x27d3() {\n    var _0x41deae = [\n        'split',\n        'shift',\n        'log',\n        'ceil'\n    ];\n    a0_0x27d3 = function () {\n        return _0x41deae;\n    };\n    return a0_0x27d3();\n}\nfunction a0_0x1a14(NHhhPT, key) {\n    var stringArray = a0_0x27d3();\n    a0_0x1a14 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a14(NHhhPT, key);\n}\nfor (var i = 0x3; i <= 0x1f; i++) {\n    dp[i] = dp[i - 0x1] + dp[i - 0x2] + dp[i - 0x3];\n}\nwhile (!![]) {\n    var n = Arr[a0_0x190d06(0x1)]() - 0x0;\n    if (n == 0x0)\n        break;\n    console[a0_0x190d06(0x2)](Math[a0_0x190d06(0x3)](dp[n - 0x1] / 0xe42));\n}", "test_cases": [["1\n10\n20\n25\n0", "1\n1\n34\n701"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dp=[1,2,4];\nfor(var i=3;i<=31;i++){\n   dp[i]=dp[i-1]+dp[i-2]+dp[i-3];\n}\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   console.log(Math.ceil(dp[n-1]/3650));\n}", "language": "JavaScript"}
{"filename": "p00181_1", "type": "JavaScript", "obfuscated": "function a0_0x37be() {\n    var _0x3ea65c = [\n        'length',\n        'owvZF',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        '0\\x200',\n        'map',\n        'push',\n        'shift',\n        'floor',\n        'log'\n    ];\n    a0_0x37be = function () {\n        return _0x3ea65c;\n    };\n    return a0_0x37be();\n}\nvar a0_0x330d40 = a0_0xcf4a;\nfunction seach(x) {\n    var _0x2c2c8e = a0_0xcf4a;\n    var flag = !![];\n    var cnt = 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; i < ary[_0x2c2c8e(0x0)]; i++) {\n        if (x < ary[i]) {\n            if ('fqKBC' !== _0x2c2c8e(0x1)) {\n                flag = ![];\n                break;\n            } else {\n                sum += ary[i];\n            }\n        } else if (sum + ary[i] == x) {\n            sum = 0x0;\n            cnt++;\n        } else if (sum + ary[i] > x) {\n            sum = ary[i];\n            cnt++;\n        } else if (sum + ary[i] < x) {\n            sum += ary[i];\n        }\n        if (cnt == m) {\n            flag = ![];\n            break;\n        }\n    }\n    return flag;\n}\nvar input = require('fs')[a0_0x330d40(0x2)](a0_0x330d40(0x3), a0_0x330d40(0x4));\nfunction a0_0xcf4a(mhzwmS, key) {\n    var stringArray = a0_0x37be();\n    a0_0xcf4a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xcf4a(mhzwmS, key);\n}\nvar arr = input[a0_0x330d40(0x5)]()[a0_0x330d40(0x6)]('\\x0a');\nwhile (!![]) {\n    var mn = arr['shift']();\n    if (mn == a0_0x330d40(0x7))\n        break;\n    mn = mn[a0_0x330d40(0x6)]('\\x20')[a0_0x330d40(0x8)](Number);\n    var m = mn[0x0];\n    var n = mn[0x1];\n    var ary = [];\n    while (n--)\n        ary[a0_0x330d40(0x9)](arr[a0_0x330d40(0xa)]() - 0x0);\n    var L = 0x0;\n    var R = 0x16e360;\n    while (!![]) {\n        var middle = Math[a0_0x330d40(0xb)]((L + R) / 0x2);\n        if (seach(middle)) {\n            R = middle - 0x1;\n        } else {\n            L = middle + 0x1;\n        }\n        if (L > R)\n            break;\n    }\n    console[a0_0x330d40(0xc)](R + 0x1);\n}", "test_cases": [["3 9\n500\n300\n800\n200\n100\n600\n900\n700\n400\n4 3\n1000\n1000\n1000\n0 0", "1800\n1000"]], "original": "function seach(x){\n   var flag=true;\n   var cnt=0;\n   var sum=0;\n   for(var i=0;i<ary.length;i++){\n      if(x<ary[i]){\n         flag=false;\n         break;\n      }else if(sum+ary[i]==x){\n         sum=0;\n         cnt++;\n      }else if(sum+ary[i]>x){\n         sum=ary[i];\n         cnt++;\n      }else if(sum+ary[i]<x){\n         sum+=ary[i];\n      }\n      if(cnt==m){\n         flag=false;\n         break;\n      }\n   }\n   return flag;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var mn=arr.shift();\n   if(mn==\"0 0\")break;\n   mn=mn.split(\" \").map(Number);\n   var m=mn[0];\n   var n=mn[1];\n   var ary=[];\n   while(n--)ary.push(arr.shift()-0);\n   var L=0;\n   var R=1500000\n   while(true){\n      var middle=Math.floor((L+R)/2);\n      if(seach(middle)){\n         R=middle-1;\n      }else{\n         L=middle+1;\n      }\n      if(L>R)break;\n   }\n   console.log(R+1);\n}", "language": "JavaScript"}
{"filename": "p00230_1", "type": "JavaScript", "obfuscated": "function a0_0x1c3e(SZXAjB, key) {\n    var stringArray = a0_0x3346();\n    a0_0x1c3e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c3e(SZXAjB, key);\n}\nvar a0_0x4f63de = a0_0x1c3e;\nfunction bomb() {\n    var _0x4423a1 = a0_0x1c3e;\n    var obj = {};\n    var ans = 'NA';\n    var leaf = [\n        [\n            0x0,\n            0x0,\n            0x0\n        ],\n        [\n            0x1,\n            0x0,\n            0x0\n        ]\n    ];\n    while (!![]) {\n        if (leaf[_0x4423a1(0x0)] == 0x0)\n            break;\n        var ary = leaf['shift']();\n        var x = ary[0x0];\n        var y = ary[0x1];\n        if (obj['hasOwnProperty'](x + ',' + y))\n            continue;\n        else\n            obj[x + ',' + y] = !![];\n        var cnt = ary[0x2];\n        var v = xy[x][y];\n        if (v == 0x1) {\n            while (!![]) {\n                y++;\n                if (xy[x][y] != 0x1) {\n                    y--;\n                    break;\n                }\n            }\n        } else if (v == 0x2) {\n            while (!![]) {\n                y--;\n                if (xy[x][y] != 0x2)\n                    break;\n            }\n        }\n        if (y == n - 0x1) {\n            ans = cnt;\n            break;\n        }\n        for (var i = 0x0; i <= 0x2; i++)\n            leaf[_0x4423a1(0x1)]([\n                0x1 - x,\n                y + i,\n                cnt + 0x1\n            ]);\n    }\n    return ans;\n}\nfunction a0_0x3346() {\n    var _0x519102 = [\n        'length',\n        'push',\n        'readFileSync',\n        'utf8',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x3346 = function () {\n        return _0x519102;\n    };\n    return a0_0x3346();\n}\nvar input = require('fs')[a0_0x4f63de(0x2)]('/dev/stdin', a0_0x4f63de(0x3));\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x4f63de(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var xy = [];\n    xy[0x0] = arr['shift']()['split']('\\x20')[a0_0x4f63de(0x5)](Number);\n    xy[0x1] = arr[a0_0x4f63de(0x4)]()['split']('\\x20')[a0_0x4f63de(0x5)](Number);\n    console[a0_0x4f63de(0x6)](bomb());\n}", "test_cases": [["8\n0 0 0 2 2 2 0 0\n1 1 1 1 0 0 0 0\n4\n1 1 2 2\n0 0 2 2\n0", "4\nNA"]], "original": "function bomb(){\n   var obj={};\n   var ans=\"NA\";\n   var leaf=[[0,0,0],[1,0,0]];\n   while(true){\n      if(leaf.length==0)break;\n      var ary=leaf.shift();\n      var x=ary[0];\n      var y=ary[1];\n      if(obj.hasOwnProperty(x+\",\"+y))continue;\n      else obj[x+\",\"+y]=true;\n      var cnt=ary[2];\n      var v=xy[x][y];\n      if(v==1){\n         while(true){\n            y++;\n            if(xy[x][y]!=1){\n               y--;\n               break;\n            }\n         }\n      }else if(v==2){\n         while(true){\n            y--;\n            if(xy[x][y]!=2)break;\n         }\n      }\n       if(y==n-1){\n         ans=cnt;\n         break;\n      }\n      for(var i=0;i<=2;i++)leaf.push([1-x,y+i,cnt+1]);\n   }\n   return ans;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var xy=[];\n   xy[0]=arr.shift().split(\" \").map(Number);\n   xy[1]=arr.shift().split(\" \").map(Number);\n   console.log(bomb());\n}", "language": "JavaScript"}
{"filename": "p00251_1", "type": "JavaScript", "obfuscated": "function a0_0x23b0() {\n    var _0x3311e5 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'log',\n        'reduce'\n    ];\n    a0_0x23b0 = function () {\n        return _0x3311e5;\n    };\n    return a0_0x23b0();\n}\nvar a0_0x1d2174 = a0_0x4771;\nvar plus = function (a, b) {\n    return a + b;\n};\nvar input = require('fs')[a0_0x1d2174(0x0)](a0_0x1d2174(0x1), a0_0x1d2174(0x2));\nvar Arr = input[a0_0x1d2174(0x3)]()[a0_0x1d2174(0x4)]('\\x0a')['map'](Number);\nvar sum = 0x0;\nfunction a0_0x4771(wHbuLX, key) {\n    var stringArray = a0_0x23b0();\n    a0_0x4771 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4771(wHbuLX, key);\n}\nconsole[a0_0x1d2174(0x5)](Arr[a0_0x1d2174(0x6)](plus));", "test_cases": [["1\n2\n3\n4\n5\n6\n7\n8\n9\n10", "55"], ["4\n4\n8\n8\n8\n10\n10\n12\n16\n20", "100"]], "original": "var plus = function(a, b)\n{\n  return a + b;\n};\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar sum=0;\n\nconsole.log(Arr.reduce(plus));", "language": "JavaScript"}
{"filename": "p00423_1", "type": "JavaScript", "obfuscated": "var a0_0x20e9b7 = a0_0x20d0;\n(function (stdin) {\n    var _0x5f34ee = a0_0x20d0;\n    var lines = stdin[_0x5f34ee(0x0)]()[_0x5f34ee(0x1)]('\\x0a');\n    while (0x1) {\n        var line = lines[_0x5f34ee(0x2)]();\n        if (line == '0') {\n            break;\n        }\n        var n = Number(line);\n        var a = 0x0, b = 0x0;\n        for (var i = 0x0; i < n; i++) {\n            var numbers = lines[_0x5f34ee(0x2)]()[_0x5f34ee(0x1)]('\\x20')['map'](Number);\n            if (numbers[0x0] == numbers[0x1]) {\n                a += numbers[0x0];\n                b += numbers[0x0];\n            } else if (numbers[0x0] > numbers[0x1]) {\n                a += numbers[0x0] + numbers[0x1];\n            } else {\n                b += numbers[0x0] + numbers[0x1];\n            }\n        }\n        console[_0x5f34ee(0x3)]([\n            a,\n            b\n        ]['join']('\\x20'));\n    }\n}(require('fs')[a0_0x20e9b7(0x4)](a0_0x20e9b7(0x5), 'utf8')));\nfunction a0_0x20d0(gviocZ, key) {\n    var stringArray = a0_0x174a();\n    a0_0x20d0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x20d0(gviocZ, key);\n}\nfunction a0_0x174a() {\n    var _0x5bd360 = [\n        'trim',\n        'split',\n        'shift',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x174a = function () {\n        return _0x5bd360;\n    };\n    return a0_0x174a();\n}", "test_cases": [["3\n9 1\n5 4\n0 8\n3\n9 1\n5 4\n1 0\n3\n9 1\n5 5\n1 8\n0", "19 8\n20 0\n15 14"]], "original": "(function(stdin) {\n  var lines = stdin.trim().split('\\n');\n  while(1) {\n    var line = lines.shift();\n    if (line == '0') {\n      break;\n    }\n    var n = Number(line);\n    var a = 0, b = 0;\n    for (var i = 0; i < n; i++) {\n      var numbers = lines.shift().split(' ').map(Number);\n      if (numbers[0] == numbers[1]) {\n        a += numbers[0];\n        b += numbers[0];\n      } else if (numbers[0] > numbers[1]) {\n        a += numbers[0] + numbers[1];\n      } else {\n      \tb += numbers[0] + numbers[1];\n      }\n    }\n    console.log([a, b].join(' '));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00740_1", "type": "JavaScript", "obfuscated": "var a0_0x52218f = a0_0x464e;\nvar input = require('fs')[a0_0x52218f(0x0)](a0_0x52218f(0x1), 'utf8');\nfunction a0_0x464e(GlCcpe, key) {\n    var stringArray = a0_0x41e5();\n    a0_0x464e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x464e(GlCcpe, key);\n}\nfunction a0_0x41e5() {\n    var _0x249a54 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x41e5 = function () {\n        return _0x249a54;\n    };\n    return a0_0x41e5();\n}\nvar Arr = input[a0_0x52218f(0x2)]()[a0_0x52218f(0x3)]('\\x0a');\nwhile (!![]) {\n    var np = Arr[a0_0x52218f(0x4)]();\n    if (np == a0_0x52218f(0x5))\n        break;\n    np = np[a0_0x52218f(0x3)]('\\x20')[a0_0x52218f(0x6)](Number);\n    var n = np[0x0];\n    var p = np[0x1];\n    var sum = p;\n    var arr = [];\n    for (var i = 0x0; i < n; i++)\n        arr['push'](0x0);\n    var j = 0x0;\n    for (var i = 0x0; i < 0xf4240; i++) {\n        if (j == arr[a0_0x52218f(0x7)])\n            j = 0x0;\n        if (p > 0x0) {\n            p--;\n            arr[j]++;\n            if (p == 0x0 && sum == arr[j]) {\n                console[a0_0x52218f(0x8)](j);\n                break;\n            }\n        } else {\n            p = arr[j];\n            arr[j] = 0x0;\n        }\n        j++;\n    }\n}", "test_cases": [["3 2\n3 3\n3 50\n10 29\n31 32\n50 2\n50 50\n0 0", "1\n0\n1\n5\n30\n1\n13"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var np=Arr.shift();\n   if(np==\"0 0\")break;\n   np=np.split(\" \").map(Number);\n   var n=np[0];\n   var p=np[1];\n   var sum=p;\n   var arr=[];\n   for(var i=0;i<n;i++)arr.push(0);\n   var j=0;\n   for(var i=0;i<1000000;i++){\n      if(j==arr.length)j=0;\n      if(p>0){\n         p--;\n         arr[j]++;\n         if(p==0 && sum==arr[j]){console.log(j);break;}\n      }else{\n         p=arr[j];\n         arr[j]=0;\n      }\n      j++;\n   }\n}", "language": "JavaScript"}
{"filename": "p00748_1", "type": "JavaScript", "obfuscated": "var a0_0x32925d = a0_0x410b;\nvar a = [0x1];\nfor (var i = 0x1; i < 0x186a0; i++)\n    a[i] = a[i - 0x1] + i + 0x1;\nvar b = [0x1];\nfunction a0_0x410b(cBSARy, key) {\n    var stringArray = a0_0x5997();\n    a0_0x410b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x410b(cBSARy, key);\n}\nfunction a0_0x5997() {\n    var _0x2121b7 = [\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift'\n    ];\n    a0_0x5997 = function () {\n        return _0x2121b7;\n    };\n    return a0_0x5997();\n}\nvar i = 0x1;\nwhile (!![]) {\n    b[i] = b[i - 0x1] + a[i];\n    if (b[i] > 0x186a0)\n        break;\n    i++;\n}\nvar dpA = [];\nvar dpB = [];\nfor (var i = 0x0; i < 0x186a0; i++)\n    dpA[i] = Infinity;\nfor (var i = 0x0; i < 0x186a0; i++)\n    dpB[i] = Infinity;\ndpA[0x0] = 0x0;\ndpB[0x0] = 0x0;\nfor (var i = 0x0; i < 0x186a0; i++) {\n    for (var j = 0x0; j < b['length']; j++) {\n        if (i - b[j] >= 0x0)\n            dpA[i] = Math[a0_0x32925d(0x0)](dpA[i - b[j]] + 0x1, dpA[i]);\n        if (b[j] % 0x2 == 0x1 && i - b[j] >= 0x0)\n            dpB[i] = Math[a0_0x32925d(0x0)](dpB[i - b[j]] + 0x1, dpB[i]);\n    }\n}\nvar input = require('fs')[a0_0x32925d(0x1)](a0_0x32925d(0x2), a0_0x32925d(0x3));\nvar arr = input[a0_0x32925d(0x4)]()[a0_0x32925d(0x5)]('\\x0a')[a0_0x32925d(0x6)](Number);\nwhile (!![]) {\n    var n = arr[a0_0x32925d(0x7)]();\n    if (n == 0x0)\n        break;\n    console['log'](dpA[n] + '\\x20' + dpB[n]);\n}", "test_cases": [["40\n14\n5\n165\n120\n103\n106\n139\n0", "2 6\n2 14\n2 5\n1 1\n1 18\n5 35\n4 4\n3 37"]], "original": "var a=[1];\nfor(var i=1;i<100000;i++)a[i]=a[i-1]+i+1;\nvar b=[1];\nvar i=1;\nwhile(true){\n   b[i]=b[i-1]+a[i];\n   if(b[i]>100000)break;\n   i++;\n}\nvar dpA=[];\nvar dpB=[];\nfor(var i=0;i<100000;i++)dpA[i]=Infinity;\nfor(var i=0;i<100000;i++)dpB[i]=Infinity;\ndpA[0]=0;\ndpB[0]=0;\nfor(var i=0;i<100000;i++){\n   for(var j=0;j<b.length;j++){\n      if(i-b[j]>=0)dpA[i]=Math.min(dpA[i-b[j]]+1,dpA[i]);\n      if(b[j]%2==1 && i-b[j]>=0)dpB[i]=Math.min(dpB[i-b[j]]+1,dpB[i]);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   console.log(dpA[n]+\" \"+dpB[n]);\n}", "language": "JavaScript"}
{"filename": "p00760_1", "type": "JavaScript", "obfuscated": "function a0_0x2cda(WayEyr, key) {\n    const stringArray = a0_0x2a51();\n    a0_0x2cda = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2cda(WayEyr, key);\n}\nconst a0_0x4d82f4 = a0_0x2cda;\nfunction a0_0x2a51() {\n    const _0x38d4a1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'FgSDy',\n        'HsZaN',\n        'nvrnR',\n        'shift',\n        'map',\n        'lYRtq',\n        'ylveq',\n        'log'\n    ];\n    a0_0x2a51 = function () {\n        return _0x38d4a1;\n    };\n    return a0_0x2a51();\n}\nconst input = require('fs')[a0_0x4d82f4(0x0)](a0_0x4d82f4(0x1), a0_0x4d82f4(0x2))[a0_0x4d82f4(0x3)]();\nconst lines = input[a0_0x4d82f4(0x3)]()[a0_0x4d82f4(0x4)]('\\x0a');\nconst nextDay = (y, m, d) => {\n    const _0xb2cb6e = a0_0x2cda;\n    d = d + 0x1;\n    if (y % 0x3 === 0x0) {\n        if (d > 0x14) {\n            if ('FgSDy' === _0xb2cb6e(0x5)) {\n                d = 0x1;\n                m += 0x1;\n                if (m === 0xb) {\n                    if (_0xb2cb6e(0x6) === _0xb2cb6e(0x7)) {\n                        d = 0x1;\n                        m += 0x1;\n                        if (m === 0xb) {\n                            m = 0x1;\n                            y++;\n                        }\n                    } else {\n                        m = 0x1;\n                        y++;\n                    }\n                }\n            } else {\n                d = 0x1;\n                m += 0x1;\n                if (m === 0xb) {\n                    m = 0x1;\n                    y++;\n                }\n            }\n        }\n    } else {\n        if (d > 0x14) {\n            d = 0x1;\n            m += 0x1;\n            if (m === 0xb) {\n                if ('xiSHP' === 'LckEU') {\n                    m = 0x1;\n                    y++;\n                } else {\n                    m = 0x1;\n                    y++;\n                }\n            }\n        } else if (d > 0x13 && m % 0x2 === 0x0) {\n            d = 0x1;\n            m += 0x1;\n            if (m === 0xb) {\n                m = 0x1;\n                y++;\n            }\n        }\n    }\n    return [\n        y,\n        m,\n        d\n    ];\n};\nlines[a0_0x4d82f4(0x8)]();\nlines['forEach'](line => {\n    const _0x4cfc29 = a0_0x2cda;\n    let [y, m, d] = line[_0x4cfc29(0x3)]()[_0x4cfc29(0x4)]('\\x20')[_0x4cfc29(0x9)](Number);\n    let count = 0x1;\n    while (y !== 0x3e8 || m !== 0x1 || d !== 0x1) {\n        if (_0x4cfc29(0xa) === _0x4cfc29(0xb)) {\n            m = 0x1;\n            y++;\n        } else {\n            [y, m, d] = nextDay(y, m, d);\n            count++;\n        }\n    }\n    console[_0x4cfc29(0xc)](count - 0x1);\n});", "test_cases": [["8\n1 1 1\n344 3 1\n696 5 1\n182 9 5\n998 8 7\n344 2 19\n696 4 19\n999 10 20", "196470\n128976\n59710\n160715\n252\n128977\n59712\n1"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').trim()\nconst lines = input.trim().split(\"\\n\")\n\nconst nextDay = (y,m,d) => {\n    d = d + 1\n    if(y%3 === 0) {\n        if(d > 20) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        }\n    } else {\n        if(d > 20) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        } else if(d > 19 && m %2 === 0) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        }\n    }\n    return [y,m,d]\n}\nlines.shift()\nlines.forEach(line => {\n    let [y,m,d] = line.trim().split(' ').map(Number)\n    let count = 1\n    while (y !== 1000 || m !== 1 || d !== 1) {\n         [y,m,d] = nextDay(y,m,d)\n        count++\n    }\n    console.log(count - 1)\n})\n", "language": "JavaScript"}
{"filename": "p01049_1", "type": "JavaScript", "obfuscated": "function a0_0x5522(yegTjG, key) {\n    var stringArray = a0_0x2c38();\n    a0_0x5522 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5522(yegTjG, key);\n}\nfunction a0_0x2c38() {\n    var _0x391df3 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'push'\n    ];\n    a0_0x2c38 = function () {\n        return _0x391df3;\n    };\n    return a0_0x2c38();\n}\nvar a0_0x1dbb92 = a0_0x5522;\nvar input = require('fs')[a0_0x1dbb92(0x0)]('/dev/stdin', 'utf8');\nvar arr = input[a0_0x1dbb92(0x1)]()[a0_0x1dbb92(0x2)]('\\x0a');\nvar n = arr[a0_0x1dbb92(0x3)]() - 0x0;\nvar [a, d] = arr[a0_0x1dbb92(0x3)]()[a0_0x1dbb92(0x2)]('\\x20')[a0_0x1dbb92(0x4)](Number);\nvar retu = [];\nfor (var i = 0x0; i < n; i++) {\n    retu[a0_0x1dbb92(0x5)](a + i * d);\n}\nvar m = arr[a0_0x1dbb92(0x3)]() - 0x0;\nfor (var i = 0x0; i < m; i++) {\n    var [x, y, z] = arr[a0_0x1dbb92(0x3)]()['split']('\\x20')[a0_0x1dbb92(0x4)](Number);\n    if (x == 0x0)\n        [retu[y - 0x1], retu[z - 0x1]] = [\n            retu[z - 0x1],\n            retu[y - 0x1]\n        ];\n    else\n        retu[y - 0x1] = retu[z - 0x1];\n}\nvar k = arr['shift']() - 0x0;\nconsole['log'](retu[k - 0x1]);", "test_cases": [["5\n2 3\n3\n0 2 5\n0 3 5\n1 2 4\n2", "11"], ["6\n5 5\n4\n0 1 2\n1 1 2\n0 4 1\n1 1 6\n3", "15"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar [a,d]=arr.shift().split(\" \").map(Number);\nvar retu=[];\nfor(var i=0;i<n;i++){\n   retu.push(a+i*d);\n}\nvar m=arr.shift()-0;\nfor(var i=0;i<m;i++){\n   var [x,y,z] = arr.shift().split(\" \").map(Number);\n   if(x==0) [retu[y-1],retu[z-1]]=[retu[z-1],retu[y-1]]\n   else retu[y-1]=retu[z-1];\n}\nvar k=arr.shift()-0;\nconsole.log(retu[k-1]);\n\n", "language": "JavaScript"}
{"filename": "p01273_1", "type": "JavaScript", "obfuscated": "var a0_0x272131 = a0_0x4f04;\nvar data = require('fs')[a0_0x272131(0x0)](a0_0x272131(0x1), 'utf8');\nfunction a0_0x15e0() {\n    var _0x4b4995 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'map',\n        'split',\n        'push',\n        'sort',\n        'forEach',\n        'log'\n    ];\n    a0_0x15e0 = function () {\n        return _0x4b4995;\n    };\n    return a0_0x15e0();\n}\nfunction a0_0x4f04(ATmDdA, key) {\n    var stringArray = a0_0x15e0();\n    a0_0x4f04 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4f04(ATmDdA, key);\n}\nvar input = data[a0_0x272131(0x2)]()['split']('\\x0a');\nvar line = 0x0;\nwhile (!![]) {\n    var nm = input[line]['split']('\\x20')[a0_0x272131(0x3)](Number);\n    line++;\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0 && m == 0x0)\n        break;\n    var infected = [];\n    for (var i = 0x0; i < n; i++)\n        infected[i] = !![];\n    infected[0x0] = ![];\n    var tsd = [];\n    for (var i = 0x0; i < m; i++) {\n        var packet = input[line][a0_0x272131(0x4)]('\\x20')[a0_0x272131(0x3)](Number);\n        line++;\n        tsd[a0_0x272131(0x5)]([\n            packet[0x0],\n            packet[0x1] - 0x1,\n            packet[0x2] - 0x1\n        ]);\n    }\n    tsd[a0_0x272131(0x6)](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    tsd[a0_0x272131(0x7)](function (packet) {\n        var s = packet[0x1];\n        var d = packet[0x2];\n        if (!infected[s])\n            infected[d] = ![];\n    });\n    var answer = 0x0;\n    infected[a0_0x272131(0x7)](function (packet) {\n        if (!packet)\n            answer++;\n    });\n    console[a0_0x272131(0x8)](answer);\n}", "test_cases": [["3 2\n1 1 2\n2 2 3\n3 2\n2 3 2\n1 2 1\n0 0", "3\n1"]], "original": "var data = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar input = data.trim().split(\"\\n\");\nvar line = 0;\nwhile (true) {\n    var nm = input[line].split(\" \").map(Number);\n    line++;\n    var n = nm[0];\n    var m = nm[1];\n    if (n == 0 && m == 0)\n        break;\n    var infected = [];\n    for (var i = 0; i < n; i++)\n        infected[i] = true;\n    infected[0] = false;\n    var tsd = [];\n    for (var i = 0; i < m; i++) {\n        var packet = input[line].split(\" \").map(Number);\n        line++;\n        tsd.push([packet[0], packet[1] - 1, packet[2] - 1]);\n    }\n    tsd.sort(function (a, b) {\n        return a[0] - b[0];\n    });\n    tsd.forEach(function (packet) {\n        var s = packet[1];\n        var d = packet[2];\n        if (!infected[s])\n            infected[d] = false;\n    });\n    var answer = 0;\n    infected.forEach(function (packet) {\n        if (!packet)\n            answer++;\n    });\n    console.log(answer);\n}", "language": "JavaScript"}
{"filename": "p01314_1", "type": "JavaScript", "obfuscated": "function a0_0x26f0(XANxqQ, key) {\n    var stringArray = a0_0x45b3();\n    a0_0x26f0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x26f0(XANxqQ, key);\n}\nvar a0_0x361b91 = a0_0x26f0;\nfunction a0_0x45b3() {\n    var _0x5a4b40 = [\n        'split',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x45b3 = function () {\n        return _0x5a4b40;\n    };\n    return a0_0x45b3();\n}\nfunction Main(input) {\n    var _0x201966 = a0_0x26f0;\n    input = input[_0x201966(0x0)]('\\x0a');\n    for (var i = 0x0; 0x1; i++) {\n        var n = parseInt(input[i], 0xa);\n        var ans = 0x0;\n        if (n == 0x0)\n            break;\n        for (var j = 0x2; j < n; j++) {\n            if (n - j * (j - 0x1) / 0x2 > 0x0 && (n - j * (j - 0x1) / 0x2) % j == 0x0) {\n                ans++;\n            }\n        }\n        console['log'](ans);\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x361b91(0x1), a0_0x361b91(0x2)));", "test_cases": [["9\n500\n0", "2\n3"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    for(var i = 0;1;i++){\n        var n = parseInt(input[i],10);var ans = 0;\n        if(n == 0)\n            break;\n        for(var j = 2;j < n;j++){\n            if(n - j * (j - 1) / 2 > 0 && (n - j * (j - 1) / 2) % j == 0){\n                ans++;\n            }\n        }\n        console.log(ans);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p01316_1", "type": "JavaScript", "obfuscated": "function a0_0x458f() {\n    var _0x3db21e = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'join',\n        'push',\n        'pow',\n        'forEach',\n        'min',\n        'log'\n    ];\n    a0_0x458f = function () {\n        return _0x3db21e;\n    };\n    return a0_0x458f();\n}\nvar a0_0x97e5bb = a0_0x5b9d;\nfunction a0_0x5b9d(lDPLiC, key) {\n    var stringArray = a0_0x458f();\n    a0_0x5b9d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b9d(lDPLiC, key);\n}\nvar input = require('fs')[a0_0x97e5bb(0x0)]('/dev/stdin', 'utf8');\nvar arr = input[a0_0x97e5bb(0x1)]()[a0_0x97e5bb(0x2)]('\\x0a');\nwhile (!![]) {\n    var nm = arr[a0_0x97e5bb(0x3)]()[a0_0x97e5bb(0x2)]('\\x20');\n    if (nm[a0_0x97e5bb(0x4)]('\\x20') == '0\\x200')\n        break;\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var M = [];\n    for (var i = 0x0; i < m; i++)\n        M[a0_0x97e5bb(0x5)](arr['shift']() - 0x0);\n    var N = [];\n    for (var i = 0x0; i < n; i++)\n        N['push'](arr['shift']() - 0x0);\n    var dp = [];\n    for (var i = 0x0; i <= n; i++) {\n        dp[i] = [];\n        for (var j = 0x0; j <= 0xff; j++) {\n            dp[i][j] = Infinity;\n        }\n    }\n    dp[0x0][0x80] = 0x0;\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = 0x0; j <= 0xff; j++) {\n            if (dp[i - 0x1][j] != Infinity) {\n                for (var k = 0x0; k < m; k++) {\n                    var jm = j + M[k];\n                    if (jm < 0x0)\n                        jm = 0x0;\n                    if (jm > 0xff)\n                        jm = 0xff;\n                    dp[i][jm] = Math['min'](dp[i][jm], dp[i - 0x1][j] + Math[a0_0x97e5bb(0x6)](N[i - 0x1] - jm, 0x2));\n                }\n            }\n        }\n    }\n    var min = Infinity;\n    dp[n][a0_0x97e5bb(0x7)](function (v) {\n        var _0x3526a9 = a0_0x5b9d;\n        min = Math[_0x3526a9(0x8)](min, v);\n    });\n    console[a0_0x97e5bb(0x9)](min);\n}", "test_cases": [["2 7\n4\n2\n1\n0\n-1\n-2\n-4\n131\n137\n2 7\n4\n2\n1\n0\n-1\n-2\n-4\n131\n123\n10 7\n-4\n-2\n-1\n0\n1\n2\n4\n132\n134\n135\n134\n132\n128\n124\n122\n121\n122\n5 1\n255\n0\n0\n0\n0\n0\n4 1\n0\n255\n0\n255\n0\n0 0", "2\n8\n0\n325125\n65026"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nm=arr.shift().split(\" \");\n   if(nm.join(\" \")==\"0 0\")break;\n   var n=nm[0];\n   var m=nm[1];\n   var M=[];\n   for(var i=0;i<m;i++)M.push(arr.shift()-0);\n   var N=[];\n   for(var i=0;i<n;i++)N.push(arr.shift()-0);\n   var dp=[];\n   for(var i=0;i<=n;i++){\n      dp[i]=[];\n      for(var j=0;j<=255;j++){\n         dp[i][j]=Infinity;\n      }\n   }\n   dp[0][128]=0;\n   for(var i=1;i<=n;i++){\n      for(var j=0;j<=255;j++){\n         if(dp[i-1][j]!=Infinity){\n            for(var k=0;k<m;k++){\n               var jm=j+M[k];\n               if(jm<0)jm=0;\n               if(jm>255)jm=255;\n               dp[i][jm]=Math.min(dp[i][jm],dp[i-1][j]+Math.pow(N[i-1]-jm,2));\n            }\n         }\n      }\n   }\n   var min=Infinity;\n   dp[n].forEach(function(v){\n      min=Math.min(min,v);\n   });\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01479_1", "type": "JavaScript", "obfuscated": "var a0_0x37632d = a0_0x5647;\nfunction a0_0x7f95() {\n    var _0x140d89 = [\n        'readFileSync',\n        '/dev/stdin',\n        'replace',\n        'CAC',\n        'split',\n        'forEach',\n        'length',\n        'log',\n        'slice',\n        'egg',\n        'chicken'\n    ];\n    a0_0x7f95 = function () {\n        return _0x140d89;\n    };\n    return a0_0x7f95();\n}\nvar input = require('fs')[a0_0x37632d(0x0)](a0_0x37632d(0x1), 'utf8');\nfunction a0_0x5647(sCbpBq, key) {\n    var stringArray = a0_0x7f95();\n    a0_0x5647 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5647(sCbpBq, key);\n}\nvar str = input[a0_0x37632d(0x2)](/egg/g, 'E')[a0_0x37632d(0x2)](/chicken/g, 'C');\nvar ary = str[a0_0x37632d(0x2)](/EE/g, 'EAE')[a0_0x37632d(0x2)](/CC/g, a0_0x37632d(0x3))[a0_0x37632d(0x4)]('A');\nvar ans = '';\nary[a0_0x37632d(0x5)](function (v) {\n    var _0x15d001 = a0_0x5647;\n    if (ans[_0x15d001(0x6)] < v[_0x15d001(0x6)])\n        ans = v;\n});\nconsole[a0_0x37632d(0x7)](ans[a0_0x37632d(0x8)](-0x1) == 'E' ? a0_0x37632d(0x9) : a0_0x37632d(0xa));", "test_cases": [["eggchickenegg", "egg"], ["chickeneggeggchicken", "egg"], ["eggeggchicken", "chicken"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str=input.replace(/egg/g,\"E\").replace(/chicken/g,\"C\");\nvar ary=str.replace(/EE/g,\"EAE\").replace(/CC/g,\"CAC\").split(\"A\");\nvar ans=\"\";\nary.forEach(function(v){\n   if(ans.length<v.length)ans=v;\n});\nconsole.log((ans.slice(-1)==\"E\")?\"egg\":\"chicken\");", "language": "JavaScript"}
{"filename": "p02234_1", "type": "JavaScript", "obfuscated": "function a0_0x2973() {\n    var _0x501108 = [\n        '/dev/stdin',\n        'readFileSync',\n        'input',\n        'trim',\n        'split',\n        'map',\n        'min'\n    ];\n    a0_0x2973 = function () {\n        return _0x501108;\n    };\n    return a0_0x2973();\n}\nvar a0_0x511776 = a0_0x3617;\nfunction a0_0x3617(NxVQWV, key) {\n    var stringArray = a0_0x2973();\n    a0_0x3617 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3617(NxVQWV, key);\n}\nconfig = {\n    'input': a0_0x511776(0x0),\n    'newline': '\\x0a'\n};\nM = require('fs')[a0_0x511776(0x1)](config[a0_0x511776(0x2)], 'ascii')[a0_0x511776(0x3)]()[a0_0x511776(0x4)](config['newline']);\nM = M[a0_0x511776(0x5)](function (line) {\n    var _0x371ab3 = a0_0x3617;\n    return line[_0x371ab3(0x4)]('\\x20')[_0x371ab3(0x5)](Number);\n});\nn = M[0x0][0x0];\nmin = {};\nfor (i = 0x1; i <= n; i++)\n    min[i] = {};\nfor (i = 0x1; i <= n; i++)\n    min[i][i] = 0x0;\nfor (i = 0x1; i < n; i++) {\n    for (j = 0x1, k = 0x1 + i; k <= n; j++, k++) {\n        min[j][k] = Number['MAX_VALUE'];\n        for (l = j; l < k; l++) {\n            min[j][k] = Math[a0_0x511776(0x6)](min[j][k], M[j][0x0] * M[l][0x1] * M[k][0x1] + min[j][l] + min[l + 0x1][k]);\n        }\n    }\n}\nconsole['log'](min[0x1][n]);", "test_cases": [["6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25", "15125"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nM = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline);\nM = M.map(\n  function (line) {\n    return line.split(' ').map(Number);\n  });\nn = M[0][0];\n\nmin = {};\nfor (i = 1; i <= n; i++) min[i] = {};\nfor (i = 1; i <= n; i++) min[i][i] = 0;\nfor (i = 1; i < n; i++) {\n  for (j = 1, k = 1 + i; k <= n; j++, k++) {\n    min[j][k] = Number.MAX_VALUE;\n    for (l = j; l < k; l++) {\n      min[j][k] = Math.min(\n        min[j][k],\n        M[j][0] * M[l][1] * M[k][1] + min[j][l] + min[l+1][k]);\n    }\n  }\n}\nconsole.log(min[1][n]);", "language": "JavaScript"}
{"filename": "p02250_1", "type": "JavaScript", "obfuscated": "function a0_0x1c17(CsjnGM, key) {\n    var stringArray = a0_0x4a3c();\n    a0_0x1c17 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c17(CsjnGM, key);\n}\nvar a0_0x59aa4f = a0_0x1c17;\nvar input = require('fs')[a0_0x59aa4f(0x0)](a0_0x59aa4f(0x1), a0_0x59aa4f(0x2));\nvar arr = input['trim']()[a0_0x59aa4f(0x3)]('\\x0a');\nvar str = arr[0x0];\nvar n = arr[0x1] - 0x0 + 0x2;\nvar ans = '';\nfor (var i = 0x2; i < n; i++) {\n    ans += (str[a0_0x59aa4f(0x4)](arr[i]) ? 0x1 : 0x0) + '\\x0a';\n}\nconsole[a0_0x59aa4f(0x5)](ans[a0_0x59aa4f(0x6)]());\nfunction a0_0x4a3c() {\n    var _0x35d477 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'includes',\n        'log',\n        'trim'\n    ];\n    a0_0x4a3c = function () {\n        return _0x35d477;\n    };\n    return a0_0x4a3c();\n}", "test_cases": [["aabaaa\n4\naa\nba\nbb\nxyz", "1\n1\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar str=arr[0];\nvar n = (arr[1]-0)+2;\nvar ans=\"\";\nfor(var i=2;i<n;i++){\n   ans += (str.includes(arr[i])?1:0) +\"\\n\";\n}\nconsole.log(ans.trim());\n", "language": "JavaScript"}
{"filename": "p02343_1", "type": "JavaScript", "obfuscated": "function a0_0x3a89(glQkFf, key) {\n    const stringArray = a0_0x4410();\n    a0_0x3a89 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a89(glQkFf, key);\n}\nconst a0_0x4c2bfd = a0_0x3a89;\nconst findSet = p => {\n    return x => {\n        if (x != p[x])\n            p[x] = findSet(p)(p[x]);\n        return p[x];\n    };\n};\nconst link = (p, r) => {\n    return (x, y) => {\n        if (r[x] > r[y])\n            p[y] = x;\n        else {\n            p[x] = y;\n            if (r[x] === r[y])\n                r[y]++;\n        }\n    };\n};\nconst dsFactory = n => {\n    const _0x124cfa = a0_0x3a89;\n    this['p'] = [];\n    this['r'] = [];\n    for (let i = 0x0; i < n; i++) {\n        this['p'][i] = i;\n        this['r'][i] = 0x0;\n    }\n    this[_0x124cfa(0x0)] = findSet(this['p']);\n    this[_0x124cfa(0x1)] = link(this['p'], this['r']);\n    return {\n        'same': (x, y) => this[_0x124cfa(0x0)](x) === this[_0x124cfa(0x0)](y),\n        'unite': (x, y) => this[_0x124cfa(0x1)](this[_0x124cfa(0x0)](x), this[_0x124cfa(0x0)](y))\n    };\n};\nconst input = require('fs')[a0_0x4c2bfd(0x2)](a0_0x4c2bfd(0x3), 'utf8');\nconst lines = input[a0_0x4c2bfd(0x4)]('\\x0a');\nfunction a0_0x4410() {\n    const _0x297905 = [\n        'findSet',\n        'link',\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'same',\n        'log'\n    ];\n    a0_0x4410 = function () {\n        return _0x297905;\n    };\n    return a0_0x4410();\n}\nconst [n, q] = lines[a0_0x4c2bfd(0x5)]()[a0_0x4c2bfd(0x4)]('\\x20')[a0_0x4c2bfd(0x6)](Number);\nconst ds = dsFactory(n);\nlines[a0_0x4c2bfd(0x7)](x => {\n    const _0x5ed128 = a0_0x3a89;\n    const [t, a, b] = x[_0x5ed128(0x4)]('\\x20')[_0x5ed128(0x6)](Number);\n    switch (t) {\n    case 0x0:\n        ds['unite'](a, b);\n        break;\n    case 0x1:\n        const ret = ds[_0x5ed128(0x8)](a, b) ? 0x1 : 0x0;\n        console[_0x5ed128(0x9)](ret);\n        break;\n    }\n});", "test_cases": [["5 12\n0 1 4\n0 2 3\n1 1 2\n1 3 4\n1 1 4\n1 3 2\n0 1 3\n1 2 4\n1 3 0\n0 0 4\n1 0 2\n1 3 0", "0\n0\n1\n1\n1\n0\n1\n1"]], "original": "const findSet = p => {\n\treturn x => {\n\t\tif (x != p[x]) p[x] = findSet(p)(p[x]);\n\t\treturn p[x];\n\t}\n}\nconst link = (p,r) => {\n\treturn (x,y) => {\n\t\tif (r[x] > r[y]) p[y] = x;\n\t\telse {\n\t\t\tp[x] = y;\n\t\t\tif (r[x] === r[y]) r[y]++;\n\t\t}\n\t}\n}\nconst dsFactory = n => {\n\tthis.p = [];\n\tthis.r = [];\n\tfor (let i = 0; i < n; i++) {\n\t\tthis.p[i] = i;\n\t\tthis.r[i] = 0;\n\t}\n\tthis.findSet = findSet(this.p);\n\tthis.link = link(this.p,this.r);\n\treturn {\n\t\tsame: (x,y) => this.findSet(x) === this.findSet(y),\n\t\tunite: (x,y) => this.link(this.findSet(x),this.findSet(y))\n\t}\n}\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst lines = input.split(\"\\n\");\nconst [n,q] = lines.shift().split(\" \").map(Number);\n\nconst ds = dsFactory(n);\n\nlines.forEach(x => {\n\tconst [t,a,b] = x.split(\" \").map(Number);\n\tswitch (t) {\n\t\tcase 0:\n\t\t\tds.unite(a,b);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tconst ret = ds.same(a,b) ? 1 : 0;\n\t\t\tconsole.log(ret);\n\t\t\tbreak;\n\t}\n});\n", "language": "JavaScript"}
{"filename": "p02555_1", "type": "JavaScript", "obfuscated": "const a0_0x25b3d6 = a0_0x2aef;\nfunction a0_0x2aef(sjNnex, key) {\n    const stringArray = a0_0x1ca4();\n    a0_0x2aef = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2aef(sjNnex, key);\n}\nconst main = input => {\n    const _0xb0ab22 = a0_0x2aef;\n    const mod = 0xa ** 0x9 + 0x7;\n    const s = Number(input[_0xb0ab22(0x0)]());\n    const dp = [\n        0x1,\n        ...new Array(s)[_0xb0ab22(0x1)](0x0)\n    ];\n    for (let x = 0x3; x < dp[_0xb0ab22(0x2)]; x++) {\n        let sum = 0x0;\n        for (let i = x - 0x3; i >= 0x0; i--) {\n            sum = (sum + dp[i]) % mod;\n        }\n        dp[x] = sum;\n    }\n    return console['log']((dp[s] % mod + mod) % mod);\n};\nprocess[a0_0x25b3d6(0x3)][a0_0x25b3d6(0x4)] ? process[a0_0x25b3d6(0x3)][a0_0x25b3d6(0x4)] === 'test' ? test() : main(require('fs')[a0_0x25b3d6(0x5)](a0_0x25b3d6(0x6), a0_0x25b3d6(0x7))) : main(require('fs')[a0_0x25b3d6(0x5)](a0_0x25b3d6(0x8), a0_0x25b3d6(0x7)));\nfunction a0_0x1ca4() {\n    const _0x14fb4b = [\n        'trim',\n        'fill',\n        'length',\n        'env',\n        'MYTEST',\n        'readFileSync',\n        'dev/stdin',\n        'utf8',\n        '/dev/stdin'\n    ];\n    a0_0x1ca4 = function () {\n        return _0x14fb4b;\n    };\n    return a0_0x1ca4();\n}", "test_cases": [["7", "3"], ["2", "0"], ["1729", "294867501"]], "original": "const main = (input) => {\n  const mod = (10**9 + 7)\n  const s = Number(input.trim())\n\n  const dp = [1, ...new Array(s).fill(0)]\n\n  for (let x=3; x<dp.length; x++) {\n    let sum = 0\n\n    for (let i=x-3; i>=0; i--) {\n      sum = (sum + dp[i]) % mod\n    }\n\n    dp[x] = sum\n  }\n\n  return console.log((dp[s] % mod + mod) % mod)\n}\n\nprocess.env.MYTEST\n  ? (process.env.MYTEST === 'test' ? test() : main(require('fs').readFileSync('dev/stdin', 'utf8')))\n  : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02678_1", "type": "JavaScript", "obfuscated": "const a0_0x58b863 = a0_0x29c9;\nfunction a0_0x29c9(TrYwSJ, key) {\n    const stringArray = a0_0x2c79();\n    a0_0x29c9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x29c9(TrYwSJ, key);\n}\nfunction a0_0x2c79() {\n    const _0x17ddc5 = [\n        'map',\n        'split',\n        'push',\n        'EGkef',\n        'length',\n        'hvEXG',\n        'pop',\n        'slice',\n        'some',\n        'log',\n        'Yes\\x0a',\n        'join',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2c79 = function () {\n        return _0x17ddc5;\n    };\n    return a0_0x2c79();\n}\n(args => {\n    const _0x6e0af8 = a0_0x29c9;\n    const [[N, M], ...path] = args['trim']()['split']('\\x0a')[_0x6e0af8(0x0)](a => a[_0x6e0af8(0x1)]('\\x20')['map'](a => a | 0x0));\n    const dist = [], sign = [0x0], branch = [];\n    for (let i = 0x1; i <= N; i++) {\n        dist[i] = Infinity;\n        sign[i] = Infinity;\n        branch[i] = [];\n    }\n    for (let i = 0x0; i < M; i++) {\n        const [A, B] = path[i];\n        branch[A][_0x6e0af8(0x2)](B);\n        branch[B][_0x6e0af8(0x2)](A);\n    }\n    let stack = [];\n    function mark(step, i) {\n        const _0x35cb09 = a0_0x29c9;\n        for (let next of branch[i]) {\n            if (dist[next] > step) {\n                if (_0x35cb09(0x3) !== _0x35cb09(0x3)) {\n                    for (let next of branch[i]) {\n                        if (dist[next] > step) {\n                            dist[next] = step;\n                            sign[next] = i;\n                            stack[_0x35cb09(0x2)](() => mark(step + 0x1, next));\n                        }\n                    }\n                } else {\n                    dist[next] = step;\n                    sign[next] = i;\n                    stack[_0x35cb09(0x2)](() => mark(step + 0x1, next));\n                }\n            }\n        }\n    }\n    mark(0x0, 0x1);\n    while (stack[_0x6e0af8(0x4)]) {\n        if (_0x6e0af8(0x5) === _0x6e0af8(0x5)) {\n            let s;\n            while (s = stack[_0x6e0af8(0x6)]())\n                s();\n        } else {\n            if (dist[next] > step) {\n                dist[next] = step;\n                sign[next] = i;\n                stack[_0x6e0af8(0x2)](() => mark(step + 0x1, next));\n            }\n        }\n    }\n    if (sign[_0x6e0af8(0x7)](0x2)[_0x6e0af8(0x8)](v => v > N))\n        return console[_0x6e0af8(0x9)]('No');\n    console['log'](_0x6e0af8(0xa) + sign[_0x6e0af8(0x7)](0x2)[_0x6e0af8(0xb)]('\\x0a'));\n})(require('fs')[a0_0x58b863(0xc)](a0_0x58b863(0xd), a0_0x58b863(0xe)));", "test_cases": [["4 4\n1 2\n2 3\n3 4\n4 2", "Yes\n1\n2\n2"], ["6 9\n3 4\n6 1\n2 4\n5 3\n4 6\n1 5\n6 2\n4 5\n5 6", "Yes\n6\n5\n5\n1\n1"]], "original": "(args => {\n  const [[N,M],...path] = args.trim().split('\\n').map(a=>a.split(' ').map(a=>a|0));\n  const dist = [], sign = [0], branch = [];\n  for ( let i = 1; i <= N; i++ ) {\n    dist[i] = Infinity; sign[i] = Infinity; branch[i] = [];\n  }\n  for ( let i = 0; i < M; i++ ) {\n    const [A,B] = path[i];\n    branch[A].push(B);\n    branch[B].push(A);\n  }\n  let stack = [];\n  function mark( step, i ) {\n    for ( let next of branch[i] ) {\n      if ( dist[next] > step ) {\n        dist[next] = step;\n        sign[next] = i;\n        stack.push(()=>mark(step+1,next));\n      }\n    }\n  }\n  mark(0,1);\n  while( stack.length ) {\n    let s;\n    while ( s = stack.pop() ) s();\n  }\n  if ( sign.slice(2).some(v=>v>N) ) return console.log('No');\n  console.log('Yes\\n'+sign.slice(2).join('\\n'));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02788_1", "type": "JavaScript", "obfuscated": "var a0_0x178137 = a0_0x7c00;\nfunction a0_0x7c00(vNOFDF, key) {\n    var stringArray = a0_0x4b77();\n    a0_0x7c00 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7c00(vNOFDF, key);\n}\nfunction main(input) {\n    var _0x2c9453 = a0_0x7c00;\n    var N = input[0x0][_0x2c9453(0x0)]('\\x20')[0x0] - 0x0;\n    var D = input[0x0]['split']('\\x20')[0x1] - 0x0;\n    var A = input[0x0]['split']('\\x20')[0x2] - 0x0;\n    var list = [];\n    for (var i = 0x1; i <= N; i++) {\n        list[_0x2c9453(0x1)](input[i][_0x2c9453(0x0)]('\\x20')[_0x2c9453(0x2)](v => v - 0x0));\n    }\n    list = list[_0x2c9453(0x3)]((a, b) => a[0x0] - b[0x0]);\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var x = list[i];\n        if (x[0x1] > 0x0) {\n            var time = Math['ceil'](x[0x1] / A);\n            ans += time;\n            for (var j = i; j < N; j++) {\n                var y = list[j];\n                if (y[0x0] <= x[0x0] + D * 0x2 + 0x1) {\n                    y[0x1] -= A * time;\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n    console[_0x2c9453(0x4)](ans);\n}\nmain(require('fs')[a0_0x178137(0x5)]('/dev/stdin', a0_0x178137(0x6))[a0_0x178137(0x0)]('\\x0a'));\nfunction a0_0x4b77() {\n    var _0x41cd75 = [\n        'split',\n        'push',\n        'map',\n        'sort',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x4b77 = function () {\n        return _0x41cd75;\n    };\n    return a0_0x4b77();\n}", "test_cases": [["3 3 2\n1 2\n5 4\n9 2", "2"], ["9 4 1\n1 5\n2 4\n3 3\n4 2\n5 1\n6 2\n7 3\n8 4\n9 5", "5"], ["3 0 1\n300000000 1000000000\n100000000 1000000000\n200000000 1000000000", "3000000000"]], "original": "function main(input) {\n  var N = input[0].split(\" \")[0]-0;\n  var D = input[0].split(\" \")[1]-0;\n  var A = input[0].split(\" \")[2]-0;\n  var list = [];\n  for(var i=1;i<=N;i++){\n    list.push(input[i].split(\" \").map(v=>v-0));\n  }\n  list = list.sort((a,b)=>a[0]-b[0]);\n\n  var ans = 0;\n  for (var i = 0; i < N; i++) {\n    var x = list[i];\n    if(x[1] > 0){\n      var time = Math.ceil(x[1]/A);\n      ans += time;\n      for(var j=i;j<N;j++){\n        var y = list[j];\n        if(y[0]<=x[0]+D*2+1){\n          y[1] -= A*time;\n        }else{\n          break;\n        }\n      }\n    }\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02862_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3602(qnehqX, key) {\n    const stringArray = a0_0x2211();\n    a0_0x3602 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3602(qnehqX, key);\n}\nfunction a0_0x2211() {\n    const _0x1d7816 = [\n        'max',\n        'min',\n        'fTNsW',\n        'dFTTK',\n        'uIfBg',\n        'trim',\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2211 = function () {\n        return _0x1d7816;\n    };\n    return a0_0x2211();\n}\nconst a0_0xe3944b = a0_0x3602;\nconst ncr = (n, r, mod) => {\n    const _0x2f94fe = a0_0x3602;\n    mod = mod || 0x3b9aca00 + 0x7;\n    const a = Math[_0x2f94fe(0x0)](n, r);\n    const b = Math[_0x2f94fe(0x1)](n, r);\n    const p = Math[_0x2f94fe(0x1)](b, a - b);\n    const nu = new Array(p + 0x1);\n    const de = new Array(p + 0x1);\n    let dest = 0x1;\n    if (p > 0x0) {\n        for (let i = 0x1; i <= p; i++) {\n            nu[i] = a - p + i;\n            de[i] = i;\n        }\n        for (let k = 0x2; k <= p; k++) {\n            const piv = de[k];\n            const j = piv > 0x1 ? -((a - p) % k) : 0x0;\n            for (let i = k; i <= p; i += k) {\n                if ('wgXOv' === _0x2f94fe(0x2)) {\n                    if (nu[i] > 0x1)\n                        dest = dest * nu[i] % mod;\n                } else {\n                    nu[i + j] /= piv;\n                    de[i] /= piv;\n                }\n            }\n        }\n        for (let i = 0x1; i <= p; i++) {\n            if (_0x2f94fe(0x3) !== _0x2f94fe(0x4)) {\n                if (nu[i] > 0x1)\n                    dest = dest * nu[i] % mod;\n            } else {\n                nu[i + j] /= piv;\n                de[i] /= piv;\n            }\n        }\n    }\n    return dest;\n};\nfunction main(inp) {\n    const _0x56259c = a0_0x3602;\n    inp = inp[_0x56259c(0x5)]()[_0x56259c(0x6)]('\\x20');\n    const x = Number(inp[0x0]);\n    const y = Number(inp[0x1]);\n    let sum = 0x0;\n    for (let i = Math['floor'](x / 0x2); i >= 0x0; i--) {\n        const a = x - i * 0x2;\n        if (a * 0x2 + i === y) {\n            sum = ncr(i + a, i);\n        }\n    }\n    console[_0x56259c(0x7)](sum);\n}\nmain(require('fs')[a0_0xe3944b(0x8)](a0_0xe3944b(0x9), a0_0xe3944b(0xa)));", "test_cases": [["3 3", "2"], ["2 2", "0"], ["999999 999999", "151840682"]], "original": "'use strict'\n\nconst ncr = (n, r, mod) => {\n  mod = mod || 1e9+7\n  const a = Math.max(n, r)\n  const b = Math.min(n, r)\n  const p = Math.min(b, a-b)\n  const nu = new Array(p + 1)\n  const de = new Array(p + 1)\n  let dest = 1\n  if (p > 0) {\n    for (let i = 1; i <= p; i++) {\n      nu[i] = a - p + i \n      de[i] = i\n    }\n    for (let k = 2; k <= p; k++) {\n      const piv = de[k]\n      const j = (piv > 1) ? -((a - p) % k) : 0\n      for (let i = k; i <= p; i += k) {\n        nu[i + j] /= piv; de[i] /= piv\n      }\n    }\n    for (let i = 1; i <= p; i++) {\n      if (nu[i] > 1) dest = dest * nu[i] % mod\n    }\n  }\n  return dest\n}\n\nfunction main(inp) {\n  inp = inp.trim().split(' ');\n  const x = Number(inp[0])\n  const y = Number(inp[1])\n\n  let sum = 0\n  for (let i = Math.floor(x / 2); i >= 0; i--) {\n    const a = x - i * 2\n    if (a * 2 + i === y) {\n      sum = ncr(i+a, i)\n    }\n  }\n  \n  console.log(sum)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03008_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x25bc74 = a0_0x318f;\nprocess[a0_0x25bc74(0x0)][a0_0x25bc74(0x1)]();\nprocess[a0_0x25bc74(0x0)][a0_0x25bc74(0x2)](a0_0x25bc74(0x3));\nlet inputString = '';\nfunction a0_0x4335() {\n    const _0x37df19 = [\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf-8',\n        'data',\n        'end',\n        'split',\n        'fill',\n        'map',\n        'log'\n    ];\n    a0_0x4335 = function () {\n        return _0x37df19;\n    };\n    return a0_0x4335();\n}\nfunction a0_0x318f(ZVZDCZ, key) {\n    const stringArray = a0_0x4335();\n    a0_0x318f = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x318f(ZVZDCZ, key);\n}\nlet currentLine = 0x0;\nprocess[a0_0x25bc74(0x0)]['on'](a0_0x25bc74(0x4), inputStdin => {\n    inputString += inputStdin;\n});\nprocess[a0_0x25bc74(0x0)]['on'](a0_0x25bc74(0x5), _ => {\n    const _0x4414ce = a0_0x318f;\n    inputString = inputString[_0x4414ce(0x6)]('\\x0a');\n    main();\n});\nfunction readLine() {\n    return inputString[currentLine++];\n}\nfunction F(N, A, B) {\n    const _0x1f1ed5 = a0_0x318f;\n    let dp = Array(N + 0x1)[_0x1f1ed5(0x7)](0x0);\n    for (let n = 0x0; n <= N; n++) {\n        let x = n;\n        for (let j = 0x0; j < 0x3; j++) {\n            if (n >= A[j]) {\n                let y = dp[n - A[j]] + B[j];\n                if (x < y) {\n                    x = y;\n                }\n            }\n        }\n        dp[n] = x;\n    }\n    return dp[N];\n}\nfunction main() {\n    const _0x11dc86 = a0_0x318f;\n    const n = parseInt(readLine(), 0xa);\n    const a = readLine()[_0x11dc86(0x6)]('\\x20')[_0x11dc86(0x8)](_ => parseInt(_, 0xa));\n    const b = readLine()[_0x11dc86(0x6)]('\\x20')[_0x11dc86(0x8)](_ => parseInt(_, 0xa));\n    let n1 = F(n, a, b);\n    let n2 = F(n1, b, a);\n    console[_0x11dc86(0x9)](n2);\n}", "test_cases": [["23\n1 1 1\n2 1 1", "46"]], "original": "'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.split('\\n')\n        // .map(str => str.trim());\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\nfunction F(N, A, B) {\n\tlet dp = Array(N+1).fill(0);\n\tfor (let n=0;n<=N;n++){\n\t\tlet x = n;\n\t\tfor (let j=0;j<3;j++){\n\t\t\tif (n>=A[j]){\n\t\t\t\tlet y = dp[n-A[j]] + B[j];\n\t\t\t\tif (x<y){\n\t\t\t\t\tx = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdp[n] = x;\n\t}\n\treturn dp[N];\n}\n\nfunction main() {\n    const n = parseInt(readLine(), 10);\n    const a = readLine().split(' ').map(_ => parseInt(_, 10));\n    const b = readLine().split(' ').map(_ => parseInt(_, 10));\n    let n1 = F(n, a, b);\n    let n2 = F(n1, b, a);\n\tconsole.log(n2);\n}\n", "language": "JavaScript"}
{"filename": "p03063_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x13d961 = a0_0x41b0;\nfunction I(s, f) {\n    var _0x2fde61 = a0_0x41b0;\n    this['_s'] = s[_0x2fde61(0x0)]('\\x0a');\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = f || Number;\n}\nfunction a0_0x4600() {\n    var _0x2c56ff = [\n        'split',\n        'prototype',\n        'ZroMT',\n        'oBjCC',\n        'map',\n        'length',\n        'iDWDT',\n        'GOsTT',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4600 = function () {\n        return _0x2c56ff;\n    };\n    return a0_0x4600();\n}\nI[a0_0x13d961(0x1)]['a'] = function () {\n    var _0x3d279f = a0_0x41b0;\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    var t = l['trim']()['split']('\\x20');\n    var a = t[this['_c']];\n    this['_c']++;\n    if (t['length'] === this['_c']) {\n        if (_0x3d279f(0x2) !== _0x3d279f(0x3)) {\n            this['_c'] = 0x0;\n            this['_l']++;\n        } else {\n            this['_c'] = 0x0;\n            this['_l']++;\n        }\n    }\n    return this['_f'](a);\n};\nI[a0_0x13d961(0x1)]['l'] = function () {\n    var _0x618c24 = a0_0x41b0;\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    this['_c'] = 0x0;\n    this['_l']++;\n    return l[_0x618c24(0x0)]('\\x20')[_0x618c24(0x4)](this['_f']);\n};\nfunction main(input) {\n    var _0x2f0615 = a0_0x41b0;\n    var o = new I(input, String);\n    var n = Number(o['a']());\n    var s = o['a']();\n    var white = 0x0;\n    var black = 0x0;\n    for (var i = 0x0; i < s[_0x2f0615(0x5)]; i++) {\n        if (s[i] === '.')\n            white += 0x1;\n    }\n    let min = white;\n    for (var i = 0x0; i < s['length']; i++) {\n        if (s[i] === '#') {\n            if (_0x2f0615(0x6) !== 'iDWDT') {\n                white -= 0x1;\n            } else {\n                black += 0x1;\n            }\n        } else {\n            if (_0x2f0615(0x7) === 'OKBtG') {\n                if (s[i] === '.')\n                    white += 0x1;\n            } else {\n                white -= 0x1;\n            }\n        }\n        if (black + white < min) {\n            min = black + white;\n        }\n    }\n    console[_0x2f0615(0x8)](min);\n}\nfunction a0_0x41b0(gRNwzO, key) {\n    var stringArray = a0_0x4600();\n    a0_0x41b0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41b0(gRNwzO, key);\n}\nmain(require('fs')[a0_0x13d961(0x9)](a0_0x13d961(0xa), 'utf8'));", "test_cases": [["3\n#.#", "1"], ["5\n#.##.", "2"], ["9\n.........", "0"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s.split(\"\\n\");this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s[this._l];if(!l)return;this._c=0;this._l++;return l.split(\" \").map(this._f)};\n\nfunction main(input) {\n  var o = new I(input,String);\n\n  var n = Number(o.a());\n  var s = o.a();\n\n  var white = 0;\n  var black = 0;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] === \".\") white += 1;\n  }\n\n  let min = white;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] === \"#\") {\n      black += 1;\n    } else {\n      white -= 1;\n    }\n\n    if (black + white < min) {\n      min = black + white;\n    }\n  }\n  console.log(min);\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03275_1", "type": "JavaScript", "obfuscated": "function a0_0x190c() {\n    var _0x3ebedc = [\n        'floor',\n        'split',\n        'slice',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x190c = function () {\n        return _0x3ebedc;\n    };\n    return a0_0x190c();\n}\nfunction a0_0x68d9(rsurIY, key) {\n    var stringArray = a0_0x190c();\n    a0_0x68d9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x68d9(rsurIY, key);\n}\nvar a0_0x812e1a = a0_0x68d9;\nfunction median(l) {\n    var _0x526fa6 = a0_0x68d9;\n    return l['sort']()[Math[_0x526fa6(0x0)](l['length'] / 0x2)];\n}\nfunction Main(input) {\n    var _0x5015e7 = a0_0x68d9;\n    input = input[_0x5015e7(0x1)]('\\x0a');\n    N = parseInt(input[0x0]);\n    a = input[0x1][_0x5015e7(0x1)]('\\x20');\n    m = [];\n    for (var i = 0x0; i < N; i++) {\n        for (var j = i + 0x1; j < N + 0x1; j++) {\n            m['push'](median(a[_0x5015e7(0x2)](i, j)));\n        }\n    }\n    console[_0x5015e7(0x3)](median(m));\n}\nMain(require('fs')[a0_0x812e1a(0x4)](a0_0x812e1a(0x5), 'utf8'));", "test_cases": [["3\n10 30 20", "30"], ["1\n10", "10"], ["10\n5 9 5 9 8 9 3 5 4 3", "8"]], "original": "function median (l) {\n  return l.sort()[Math.floor(l.length / 2)]\n}\n\nfunction Main(input) {\n  input = input.split(\"\\n\")\n  N = parseInt(input[0])\n  a = input[1].split(\" \")\n  m = []\n\n  for (var i = 0 ; i < N ; i++ ) {\n    for (var j = i + 1 ; j < N + 1 ; j++ ) {\n      m.push(median(a.slice(i, j)))\n    }\n  }\n  console.log(median(m))\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03364_1", "type": "JavaScript", "obfuscated": "var a0_0x51fa55 = a0_0x4b4b;\nfunction a0_0x4b4b(paCTEa, key) {\n    var stringArray = a0_0x1e0e();\n    a0_0x4b4b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b4b(paCTEa, key);\n}\nvar lines = require('fs')['readFileSync'](a0_0x51fa55(0x0), 'utf8')['split']('\\x0a');\nfunction a0_0x1e0e() {\n    var _0x3a551e = [\n        '/dev/stdin',\n        'slice',\n        'pHPZp',\n        'EZPPL',\n        'log'\n    ];\n    a0_0x1e0e = function () {\n        return _0x3a551e;\n    };\n    return a0_0x1e0e();\n}\nvar n = lines[0x0] | 0x0;\nvar s = lines[a0_0x51fa55(0x1)](0x1);\nfunction good(a, b) {\n    var _0x2e2435 = a0_0x4b4b;\n    for (var i = 0x0; i < n; ++i) {\n        if ('pHPZp' !== _0x2e2435(0x2)) {\n            for (var i = 0x0; i < n; ++i) {\n                for (var j = 0x0; j < n; ++j) {\n                    if (s[(i + a) % n][(j + b) % n] !== s[(j + a) % n][(i + b) % n])\n                        return 0x0;\n                }\n            }\n            return 0x1;\n        } else {\n            for (var j = 0x0; j < n; ++j) {\n                if (_0x2e2435(0x3) !== _0x2e2435(0x3)) {\n                    ans += good(a, b);\n                } else {\n                    if (s[(i + a) % n][(j + b) % n] !== s[(j + a) % n][(i + b) % n])\n                        return 0x0;\n                }\n            }\n        }\n    }\n    return 0x1;\n}\nvar ans = 0x0;\nfor (var a = 0x0; a < n; ++a) {\n    for (var b = 0x0; b < n; ++b) {\n        ans += good(a, b);\n    }\n}\nconsole[a0_0x51fa55(0x4)](ans);", "test_cases": [["2\nab\nca", "2"], ["4\naaaa\naaaa\naaaa\naaaa", "16"], ["5\nabcde\nfghij\nklmno\npqrst\nuvwxy", "0"]], "original": "var lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\");\n\nvar n=lines[0]|0;\nvar s=lines.slice(1);\n\nfunction good(a,b){\n    for(var i=0;i<n;++i){\n        for(var j=0;j<n;++j){\n            if(s[(i+a)%n][(j+b)%n]!==s[(j+a)%n][(i+b)%n])return 0;\n        }\n    }\n    return 1;\n}\n\nvar ans=0;\nfor(var a=0;a<n;++a){\n    for(var b=0;b<n;++b){\n        ans+=good(a,b);\n    }\n}\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03388_1", "type": "JavaScript", "obfuscated": "var a0_0x414fae = a0_0x1c62;\nfunction Main(s) {\n    var _0xd783af = a0_0x1c62;\n    s = s[_0xd783af(0x0)]('\\x0a');\n    const q = +s[0x0];\n    for (var i = 0x0; i < q; i++) {\n        var a = s[i + 0x1][_0xd783af(0x0)]('\\x20')[_0xd783af(0x1)](a => +a);\n        var b = Math[_0xd783af(0x2)](a[0x0], a[0x1]);\n        a = Math[_0xd783af(0x3)](a[0x0], a[0x1]);\n        var c = Math[_0xd783af(0x4)](Math[_0xd783af(0x5)](a * b));\n        var ans = (a - 0x1) * 0x2;\n        if (a < b - 0x1)\n            ans++;\n        for (var j = a + 0x1; j < c; j++) {\n            if (Math[_0xd783af(0x6)](a / j * b) === j)\n                ans++;\n            else\n                ans += 0x2;\n        }\n        console[_0xd783af(0x7)](ans);\n    }\n}\nfunction a0_0x1c62(WnRgkD, key) {\n    var stringArray = a0_0x4b8b();\n    a0_0x1c62 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c62(WnRgkD, key);\n}\nMain(require('fs')[a0_0x414fae(0x8)](a0_0x414fae(0x9), a0_0x414fae(0xa)));\nfunction a0_0x4b8b() {\n    var _0x242830 = [\n        'split',\n        'map',\n        'max',\n        'min',\n        'ceil',\n        'sqrt',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4b8b = function () {\n        return _0x242830;\n    };\n    return a0_0x4b8b();\n}", "test_cases": [["8\n1 4\n10 5\n3 3\n4 11\n8 9\n22 40\n8 36\n314159265 358979323", "1\n12\n4\n11\n14\n57\n31\n671644785"]], "original": "function Main(s) {\n  s = s.split(\"\\n\");\n  const q = +s[0];\n  for(var i = 0; i < q; i++){\n    var a = s[i+1].split(\" \").map(a => +a);\n    var b = Math.max(a[0], a[1]);\n    a = Math.min(a[0], a[1]);\n    var c = Math.ceil(Math.sqrt(a * b));\n    var ans = (a - 1) * 2;\n    if(a < b - 1) ans++;\n    for(var j = a + 1; j < c; j++){\n      if(Math.floor(a / j * b) === j)ans++;\n      else ans += 2;\n    }\n    console.log(ans);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03393_1", "type": "JavaScript", "obfuscated": "function a0_0x3907(CrYBty, key) {\n    var stringArray = a0_0x5cbc();\n    a0_0x3907 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3907(CrYBty, key);\n}\nvar a0_0x148e94 = a0_0x3907;\nfunction a0_0x5cbc() {\n    var _0xe94c26 = [\n        'length',\n        'charCodeAt',\n        'fill',\n        'zyxwvutsrqponmlkjihgfedcba',\n        'log',\n        'slice',\n        'fromCharCode',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x5cbc = function () {\n        return _0xe94c26;\n    };\n    return a0_0x5cbc();\n}\nfunction Main(s) {\n    var _0x1e0ee0 = a0_0x3907;\n    const n = s[_0x1e0ee0(0x0)];\n    const a = 'a'[_0x1e0ee0(0x1)]();\n    var b = Array(0x1a)[_0x1e0ee0(0x2)](0x1);\n    var i;\n    if (n < 0x1a) {\n        for (i = 0x0; i < n; i++) {\n            b[s['charCodeAt'](i) - a] = 0x0;\n        }\n        for (i = 0x0; i < 0x1a; i++) {\n            if (b[i]) {\n                s += String['fromCharCode'](a + i);\n                break;\n            }\n        }\n    } else {\n        if (s === _0x1e0ee0(0x3)) {\n            console[_0x1e0ee0(0x4)](-0x1);\n            return;\n        }\n        var c = s[0x19];\n        b[s[_0x1e0ee0(0x1)](0x19) - a] = 0x0;\n        for (i = 0x18; i >= 0x0; i--) {\n            if (c > s[i]) {\n                c = s['charCodeAt'](i) - a;\n                s = s[_0x1e0ee0(0x5)](0x0, i);\n                break;\n            } else {\n                b[s[_0x1e0ee0(0x1)](i) - a] = 0x0;\n            }\n        }\n        for (var j = c - a; j < 0x1a; j++) {\n            if (b[j] === 0x0) {\n                s += String[_0x1e0ee0(0x6)](a + j);\n                break;\n            }\n        }\n    }\n    console['log'](s);\n}\nMain(require('fs')[a0_0x148e94(0x7)](a0_0x148e94(0x8), a0_0x148e94(0x9))[a0_0x148e94(0xa)]());", "test_cases": [["atcoder", "atcoderb"], ["abc", "abcd"], ["zyxwvutsrqponmlkjihgfedcba", "-1"], ["abcdefghijklmnopqrstuvwzyx", "abcdefghijklmnopqrstuvx"]], "original": "function Main(s){\n  const n = s.length;\n  const a = \"a\".charCodeAt();\n  var b = Array(26).fill(1);\n  var i;\n  if(n < 26){\n    for(i = 0; i < n; i++){\n      b[s.charCodeAt(i) - a] = 0;\n    }\n    for(i = 0; i < 26; i++){\n      if(b[i]){\n        s += String.fromCharCode(a + i);\n        break;\n      }\n    }\n  }else{\n    if(s === \"zyxwvutsrqponmlkjihgfedcba\"){\n      console.log(-1); return;\n    }\n    var c = s[25];\n    b[s.charCodeAt(25) - a] = 0;\n    for(i = 24; i >= 0; i--){\n      if(c > s[i]){\n        c = s.charCodeAt(i) - a;\n        s = s.slice(0,i)\n        break;\n      }else{\n        b[s.charCodeAt(i) - a] = 0;\n      }\n    }\n    for(var j = c - a; j < 26; j++){\n      if(b[j] === 0){\n        s += String.fromCharCode(a + j);\n        break;\n      }\n    }\n  }\n  console.log(s);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03411_1", "type": "JavaScript", "obfuscated": "function a0_0x2fb5() {\n    const _0x405773 = [\n        'trim',\n        'split',\n        'map',\n        'push',\n        'sort',\n        'length',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2fb5 = function () {\n        return _0x405773;\n    };\n    return a0_0x2fb5();\n}\nfunction a0_0x4366(AjbyTE, key) {\n    const stringArray = a0_0x2fb5();\n    a0_0x4366 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4366(AjbyTE, key);\n}\nconst a0_0x32bece = a0_0x4366;\nconsole['log']((args => {\n    const _0xc67796 = a0_0x4366;\n    const [[N], ...tmp] = args[_0xc67796(0x0)]()[_0xc67796(0x1)]('\\x0a')[_0xc67796(0x2)](r => r[_0xc67796(0x1)]('\\x20')[_0xc67796(0x2)](v => v | 0x0));\n    const rp = [], bp = [];\n    for (let i = 0x0; i < N; i++) {\n        rp[_0xc67796(0x3)](tmp[i]);\n        bp[_0xc67796(0x3)](tmp[N + i]);\n    }\n    bp[_0xc67796(0x4)](([a], [b]) => a - b);\n    let count = 0x0;\n    const test = [];\n    for (let i = 0x0; i < N; i++) {\n        const [bx, by] = bp[i];\n        let max = [\n            -0x1,\n            -0x1\n        ];\n        for (let j = 0x0; j < rp[_0xc67796(0x5)]; j++) {\n            const [rx, ry] = rp[j];\n            if (bx < rx)\n                continue;\n            if (by > ry && ry > max[0x1])\n                max = [\n                    j,\n                    ry\n                ];\n        }\n        if (max[0x1] >= 0x0) {\n            rp['splice'](max[0x0], 0x1);\n            count++;\n        }\n    }\n    return '' + count;\n})(require('fs')['readFileSync'](a0_0x32bece(0x6), a0_0x32bece(0x7))));", "test_cases": [["3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5", "2"], ["3\n0 0\n1 1\n5 2\n2 3\n3 4\n4 5", "2"], ["2\n2 2\n3 3\n0 0\n1 1", "0"], ["5\n0 0\n7 3\n2 2\n4 8\n1 6\n8 5\n6 9\n5 4\n9 1\n3 7", "5"], ["5\n0 0\n1 1\n5 5\n6 6\n7 7\n2 2\n3 3\n4 4\n8 8\n9 9", "4"]], "original": "console.log((args=>{\n  const [[N],...tmp] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  const rp = [], bp = [];\n  for ( let i = 0; i < N; i++ ) {\n    rp.push(tmp[i]);\n    bp.push(tmp[N+i]);\n  }\n  bp.sort(([a],[b])=>a-b);\n  let count = 0;\n  const test = [];\n  for ( let i = 0; i < N; i++ ) {\n    const [bx,by] = bp[i];\n    let max = [-1,-1];\n    for ( let j = 0; j < rp.length; j++ ) {\n      const [rx,ry] = rp[j];\n      if ( bx < rx ) continue;\n      if ( by > ry && ry > max[1] ) max = [j,ry];\n    }\n    if ( max[1] >= 0 ) {\n      rp.splice( max[0], 1 );\n      count++;\n    }\n  }\n  return `${count}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03558_1", "type": "JavaScript", "obfuscated": "var a0_0x581994 = a0_0x5b78;\nfunction myout(text) {\n    var _0x4fd315 = a0_0x5b78;\n    console[_0x4fd315(0x0)](text);\n}\nfunction Main(input) {\n    var _0x32cb7d = a0_0x5b78;\n    input = parseInt(input);\n    var output = 0x3b9aca00;\n    for (var i = 0x1; i <= 0xa; i++) {\n        var tmp = (input * i)[_0x32cb7d(0x1)]()['split']('')[_0x32cb7d(0x2)](a => Number(a));\n        var check = 0x0;\n        for (var j = 0x0; j < tmp[_0x32cb7d(0x3)]; j++) {\n            check += tmp[j];\n        }\n        output = Math[_0x32cb7d(0x4)](output, check);\n    }\n    myout(output);\n}\nfunction a0_0xaf51() {\n    var _0x7e97b6 = [\n        'log',\n        'toString',\n        'map',\n        'length',\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xaf51 = function () {\n        return _0x7e97b6;\n    };\n    return a0_0xaf51();\n}\nfunction a0_0x5b78(EhDXXg, key) {\n    var stringArray = a0_0xaf51();\n    a0_0x5b78 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5b78(EhDXXg, key);\n}\nMain(require('fs')[a0_0x581994(0x5)](a0_0x581994(0x6), a0_0x581994(0x7))['trim']());", "test_cases": [["6", "3"], ["41", "5"], ["79992", "36"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input);\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var output = 1000000000;\n  for(var i = 1; i <= 10; i ++){\n    var tmp = (input * i).toString().split(\"\").map((a)=>Number(a));\n    var check = 0;\n    for(var j = 0; j < tmp.length; j++){\n      check += tmp[j];\n    }\n    output = Math.min(output, check);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03567_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x6db41c = a0_0x1901;\nfunction a0_0x1901(qqtNeP, key) {\n    const stringArray = a0_0x1aa4();\n    a0_0x1901 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1901(qqtNeP, key);\n}\nfunction a0_0x1aa4() {\n    const _0x33d20d = [\n        'trim',\n        'split',\n        'log',\n        'Yes',\n        '/dev/stdin'\n    ];\n    a0_0x1aa4 = function () {\n        return _0x33d20d;\n    };\n    return a0_0x1aa4();\n}\nconst main = arg => {\n    const _0x54a6b8 = a0_0x1901;\n    arg = arg[_0x54a6b8(0x0)]()[_0x54a6b8(0x1)]('\\x0a');\n    const S = arg[0x0][_0x54a6b8(0x1)]('');\n    let previous = null;\n    for (let i in S) {\n        if (previous === 'A' && S[i] === 'C') {\n            console[_0x54a6b8(0x2)](_0x54a6b8(0x3));\n            return;\n        }\n        previous = S[i];\n    }\n    console[_0x54a6b8(0x2)]('No');\n};\nmain(require('fs')['readFileSync'](a0_0x6db41c(0x4), 'utf8'));", "test_cases": [["BACD", "Yes"], ["ABCD", "No"], ["CABD", "No"], ["ACACA", "Yes"], ["XX", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    let previous = null;\n    \n    for(let i in S) {\n        if(previous === \"A\" && S[i] === \"C\") {\n            console.log(\"Yes\");\n            return;\n        }\n        \n        previous = S[i];\n    }\n    \n    console.log(\"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03840_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0xe5ee(TNhkXt, key) {\n    var stringArray = a0_0x8c90();\n    a0_0xe5ee = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe5ee(TNhkXt, key);\n}\nvar a0_0x4723fb = a0_0xe5ee;\nvar input = require('fs')['readFileSync'](a0_0x4723fb(0x0), a0_0x4723fb(0x1));\nvar cin = input[a0_0x4723fb(0x2)](/ |\\n/), cid = 0x0;\nfunction next(a) {\n    return a ? cin[cid++] : +cin[cid++];\n}\nfunction nexts(n, a) {\n    var _0xe4a45f = a0_0xe5ee;\n    return a ? cin[_0xe4a45f(0x3)](cid, cid += n) : cin['slice'](cid, cid += n)[_0xe4a45f(0x4)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x477017 = a0_0xe5ee;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x477017(0x5)](cin[_0x477017(0x3)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x477017(0x5)](cin[_0x477017(0x3)](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0xc4a13c = a0_0xe5ee;\n    var a = arguments, l = a[_0xc4a13c(0x6)], r = _0xc4a13c(0x7) + --l + _0xc4a13c(0x8) + v + _0xc4a13c(0x9);\n    while (--l)\n        r = _0xc4a13c(0x7) + l + _0xc4a13c(0xa) + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction main() {\n    var a = nexts(0x7);\n    var ans = a[0x1] + ((a[0x0] / 0x2 | 0x0) + (a[0x3] / 0x2 | 0x0) + (a[0x4] / 0x2 | 0x0)) * 0x2;\n    switch (a[0x0] % 0x2 + a[0x3] % 0x2 + a[0x4] % 0x2) {\n    case 0x3:\n        ans += 0x3;\n        break;\n    case 0x2:\n        if (a[0x0] * a[0x3] * a[0x4])\n            ans += 0x1;\n        break;\n    }\n    return ans;\n}\nfunction a0_0x8c90() {\n    var _0x118ede = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        'Array(a[',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        ']).fill().map(x=>'\n    ];\n    a0_0x8c90 = function () {\n        return _0x118ede;\n    };\n    return a0_0x8c90();\n}", "test_cases": [["2 1 1 0 0 0 0", "3"], ["0 0 10 0 0 0 0", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(a){return a?cin[cid++]:+cin[cid++];}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(myOut);\n\nfunction main(){\n  var a = nexts(7);\n  var ans = a[1] + ((a[0]/2|0) + (a[3]/2|0)+ (a[4]/2|0)) * 2;\n  switch(a[0]%2 + a[3]%2 + a[4]%2){\n    case 3: ans += 3; break;\n    case 2: if(a[0]*a[3]*a[4])ans += 1; break;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03967_1", "type": "JavaScript", "obfuscated": "const a0_0x142529 = a0_0x3b7d;\nfunction a0_0x362b() {\n    const _0x3157ee = [\n        'log',\n        'length',\n        'fill',\n        'utf8'\n    ];\n    a0_0x362b = function () {\n        return _0x3157ee;\n    };\n    return a0_0x362b();\n}\nfunction a0_0x3b7d(mOVHtb, key) {\n    const stringArray = a0_0x362b();\n    a0_0x3b7d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b7d(mOVHtb, key);\n}\nconsole[a0_0x142529(0x0)]((args => {\n    const _0x2badf6 = a0_0x3b7d;\n    const s = args['trim']();\n    const L = s[_0x2badf6(0x1)];\n    const p = Array(L)[_0x2badf6(0x2)](0x0);\n    for (let i = L; --i;)\n        p[i - 0x1] = p[i] + (s[i] === 'p');\n    let g = 0x0, w = 0x0;\n    for (let i = 0x0; i < L; i++) {\n        if (s[i] === 'g') {\n            if (g > p[i]) {\n                g--;\n                w++;\n            } else\n                g++;\n        } else\n            g--;\n    }\n    return '' + w;\n})(require('fs')['readFileSync']('/dev/stdin', a0_0x142529(0x3))));", "test_cases": [["gpg", "0"], ["ggppgggpgg", "2"]], "original": "console.log((args=>{\n  const s = args.trim();\n  const L = s.length;\n  const p = Array(L).fill(0);\n  for ( let i = L; --i;) p[i-1] = p[i] + (s[i]==='p');\n  let g = 0, w = 0;\n  for ( let i = 0; i < L; i++ ) {\n    if ( s[i] === 'g' ) {\n      if ( g > p[i] ) {\n        g--; w++;\n      } else g++;\n    } else g--;\n  }\n  return `${w}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04013_1", "type": "JavaScript", "obfuscated": "var a0_0x5e62c0 = a0_0x1749;\nfunction a0_0x52c8() {\n    var _0x3786bf = [\n        'split',\n        'length',\n        'fill',\n        'pRjFj',\n        'pelGM',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x52c8 = function () {\n        return _0x3786bf;\n    };\n    return a0_0x52c8();\n}\nfunction Main(input) {\n    var _0x3f8450 = a0_0x1749;\n    input = input['split']('\\x0a');\n    tmp1 = input[0x0]['split']('\\x20');\n    var n = parseInt(tmp1[0x0]);\n    var a = parseInt(tmp1[0x1]);\n    tmp = input[0x1][_0x3f8450(0x0)]('\\x20');\n    x = new Array(n);\n    var sum2 = 0x0;\n    for (i = 0x0; i < tmp[_0x3f8450(0x1)]; i++) {\n        x[i] = parseInt(tmp[i]);\n    }\n    var s = 0x0;\n    for (i = 0x0; i < n; i++) {\n        sum2 = sum2 + x[i];\n    }\n    var b = new Array(sum2 + 0x1);\n    for (var y = 0x0; y < sum2 + 0x1; y++) {\n        b[y] = new Array(n + 0x1)[_0x3f8450(0x2)](0x0);\n    }\n    b[0x0][0x0] = 0x1;\n    for (j = 0x0; j < n; j++) {\n        for (i = sum2; i >= 0x0; i--) {\n            for (k = 0x0; k < n + 0x1; k++) {\n                if (b[i][k] >= 0x1) {\n                    if (_0x3f8450(0x3) !== _0x3f8450(0x4)) {\n                        b[i + x[j]][k + 0x1] = b[i + x[j]][k + 0x1] + b[i][k];\n                    } else {\n                        x[i] = parseInt(tmp[i]);\n                    }\n                }\n            }\n        }\n    }\n    for (i = 0x1; i <= n && i * a <= sum2; i++) {\n        s = s + b[i * a][i];\n    }\n    console['log']('%s', s);\n}\nfunction a0_0x1749(eKfGLW, key) {\n    var stringArray = a0_0x52c8();\n    a0_0x1749 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1749(eKfGLW, key);\n}\nMain(require('fs')['readFileSync'](a0_0x5e62c0(0x5), a0_0x5e62c0(0x6)));", "test_cases": [["4 8\n7 9 8 9", "5"], ["3 8\n6 6 9", "0"], ["8 5\n3 6 2 8 7 6 5 9", "19"], ["33 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3", "8589934591"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  tmp1 = input[0].split(\" \");\n  var n = parseInt(tmp1[0]);\n  var a = parseInt(tmp1[1]);\n  tmp= input[1].split(\" \");\n  x=new Array(n);\n  var sum2=0;\n  for(i=0;i<tmp.length;i++){\n    x[i]=parseInt(tmp[i]);\n  }\n  var s=0;\n  for(i=0;i<n;i++){\n    sum2=sum2+x[i];\n  }\n  var b = new Array(sum2+1);\n  for(var y = 0; y < sum2+1; y++) {\n    b[y] = new Array(n+1).fill(0);\n  }\n  b[0][0]=1;\n  for(j=0;j<n;j++){\n    for(i=sum2;i>=0;i--){\n      for(k=0;k<n+1;k++){\n        if(b[i][k]>=1){\n          b[i+x[j]][k+1]=b[i+x[j]][k+1]+b[i][k];\n        }\n      }\n    }\n  }\n  for(i=1;i<=n && i*a<=sum2;i++){\n      s=s+b[i*a][i];\n  }\n\n\n  console.log('%s', s);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04025_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1e34(AnAtpH, key) {\n    const stringArray = a0_0xd3ce();\n    a0_0x1e34 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e34(AnAtpH, key);\n}\nconst a0_0x2c8ce6 = a0_0x1e34;\nlet input = require('fs')[a0_0x2c8ce6(0x0)]('/dev/stdin', a0_0x2c8ce6(0x1));\nconst info = input[a0_0x2c8ce6(0x2)]()[a0_0x2c8ce6(0x3)]('\\x0a');\nconst nums = info[0x1][a0_0x2c8ce6(0x3)]('\\x20')[a0_0x2c8ce6(0x4)](x => x * 0x1);\nfunction a0_0xd3ce() {\n    const _0xee050a = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'round',\n        'reduce',\n        'pow'\n    ];\n    a0_0xd3ce = function () {\n        return _0xee050a;\n    };\n    return a0_0xd3ce();\n}\nconst ave = Math[a0_0x2c8ce6(0x5)](nums[a0_0x2c8ce6(0x6)]((x, a) => {\n    return a += x;\n}) / info[0x0]);\nlet sum = 0x0;\nfor (let i = 0x0; i < info[0x0]; i++) {\n    sum += Math[a0_0x2c8ce6(0x7)](nums[i] - ave, 0x2);\n}\nconsole['log'](sum);", "test_cases": [["2\n4 8", "8"], ["3\n1 1 3", "3"], ["3\n4 2 5", "5"], ["4\n-100 -100 -100 -100", "0"]], "original": "\"use strict\";\n\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nconst info = input.trim().split('\\n');\nconst nums = info[1].split(' ').map(x => x*1);\n// 平均値出す\nconst ave = Math.round( nums.reduce((x,a) => {return a += x}) / info[0] );\nlet sum = 0;\nfor(let i = 0; i < info[0]; i++){\n  sum += Math.pow( nums[i] - ave ,2 )\n}\nconsole.log(sum);", "language": "JavaScript"}
{"filename": "p00015_1", "type": "JavaScript", "obfuscated": "function a0_0x1af5() {\n    var _0x27a51f = [\n        'slice',\n        'length',\n        'concat',\n        'join',\n        'replace',\n        'toString',\n        'stdin',\n        'data',\n        'split',\n        'shift',\n        'log',\n        'overflow',\n        'resume'\n    ];\n    a0_0x1af5 = function () {\n        return _0x27a51f;\n    };\n    return a0_0x1af5();\n}\nvar a0_0x2d8fa8 = a0_0x1dac;\nfunction pad(n) {\n    while (n['length'] < 0x7) {\n        n = '0' + n;\n    }\n    return n;\n}\nfunction divide(s) {\n    var _0xb87574 = a0_0x1dac;\n    var a = [], i = 0x0, l = s['length'], d = 0x7;\n    for (; (a[i] = s[_0xb87574(0x0)]((i + 0x1) * -d, l + i * -d))[_0xb87574(0x1)] > d - 0x1; i++);\n    return a;\n}\nfunction unite(a) {\n    var _0x502514 = a0_0x1dac;\n    return a[_0x502514(0x2)]()['reverse']()[_0x502514(0x3)]('')[_0x502514(0x4)](/^0*/, '');\n}\nfunction a0_0x1dac(hazgwk, key) {\n    var stringArray = a0_0x1af5();\n    a0_0x1dac = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1dac(hazgwk, key);\n}\nfunction largeSum(n, m) {\n    var _0x4c4d01 = a0_0x1dac;\n    for (var h = 0x0, o = [], i = 0x0, l = Math['max'](n[_0x4c4d01(0x1)], m[_0x4c4d01(0x1)]); i < l || h != 0x0; i++) {\n        var a = ((parseInt(n[i], 0xa) || 0x0) + (parseInt(m[i], 0xa) || 0x0) + +h)[_0x4c4d01(0x5)](0xa);\n        o[i] = a['length'] > 0x7 ? (h = a['slice'](0x0, 0x1), a[_0x4c4d01(0x0)](0x1)) : (h = 0x0, pad(a));\n    }\n    return o;\n}\nprocess[a0_0x2d8fa8(0x6)]['on'](a0_0x2d8fa8(0x7), function (c) {\n    var _0x1a4880 = a0_0x1dac;\n    var a = (c + '')['trim']()[_0x1a4880(0x8)]('\\x0a');\n    for (var i = 0x0, l = +a[_0x1a4880(0x9)]() * 0x2; i < l; i += 0x2) {\n        var s = unite(largeSum(divide(a[i]), divide(a[i + 0x1])));\n        console[_0x1a4880(0xa)](s == '' ? 0x0 : s[_0x1a4880(0x1)] > 0x50 ? _0x1a4880(0xb) : s);\n    }\n})[a0_0x2d8fa8(0xc)]();", "test_cases": [["6\n1000\n800\n9999999999999999999999999999999999999999\n1\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\n1\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\n0\n100000000000000000000000000000000000000000000000000000000000000000000000000000000\n1\n100000000000000000000000000000000000000000000000000000000000000000000000000000000\n100000000000000000000000000000000000000000000000000000000000000000000000000000000", "1800\n10000000000000000000000000000000000000000\noverflow\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\noverflow\noverflow"]], "original": "function pad(n){\n\twhile(n.length<7){\n\t\tn=\"0\"+n\n\t}\n\treturn n;\n}\nfunction divide(s){\n\tvar a=[],i=0,l=s.length,d=7;\n\tfor(;(a[i]=s.slice((i+1)*-d,l+i*-d)).length>d-1;i++);\n\treturn a;\n}\nfunction unite(a){\n\treturn a.concat().reverse().join(\"\").replace(/^0*/,\"\");\n}\nfunction largeSum(n,m){\n\tfor(var h=0,o=[],i=0,l=Math.max(n.length,m.length);i<l||h!=0;i++){\n\t\tvar a=((parseInt(n[i],10)||0)+(parseInt(m[i],10)||0)+(+h)).toString(10);\n\t\to[i]=a.length>7?(h=a.slice(0,1),a.slice(1)):(h=0,pad(a));\n\t}\n\treturn o;\n}\nprocess.stdin.on(\"data\",function(c){\n\tvar a=(c+\"\").trim().split(\"\\n\");\n\tfor(var i=0,l=+a.shift()*2;i<l;i+=2){\n\t\tvar s=unite(largeSum(divide(a[i]),divide(a[i+1])));\n\t\tconsole.log(s==\"\"?0:s.length>80?\"overflow\":s);\n\t}\n}).resume();", "language": "JavaScript"}
{"filename": "p00038_1", "type": "JavaScript", "obfuscated": "var a0_0x504c4b = a0_0x7b08;\nfunction a0_0x7b08(emlukO, key) {\n    var stringArray = a0_0x5a08();\n    a0_0x7b08 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7b08(emlukO, key);\n}\nfunction a0_0x5a08() {\n    var _0x2f4bb1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'sort',\n        'log',\n        'four\\x20card',\n        'full\\x20house',\n        'three\\x20card',\n        'one\\x20pair',\n        'null'\n    ];\n    a0_0x5a08 = function () {\n        return _0x2f4bb1;\n    };\n    return a0_0x5a08();\n}\nrequire('fs')[a0_0x504c4b(0x0)](a0_0x504c4b(0x1), a0_0x504c4b(0x2))['trim']()[a0_0x504c4b(0x3)]('\\x0a')[a0_0x504c4b(0x4)](function (i) {\n    var _0x5ba6bf = a0_0x7b08;\n    f = function (a, b) {\n        return b - a;\n    };\n    a = [], c = i[_0x5ba6bf(0x3)](',')[_0x5ba6bf(0x5)](f);\n    c['map'](function (j) {\n        a[j] ? a[j]++ : a[j] = 0x1;\n    });\n    a[_0x5ba6bf(0x5)](f);\n    l = a[0x0], n = a[0x1];\n    console[_0x5ba6bf(0x6)](l == 0x4 ? _0x5ba6bf(0x7) : l == 0x3 ? n == 0x2 ? _0x5ba6bf(0x8) : _0x5ba6bf(0x9) : l == 0x2 ? n == 0x2 ? 'two\\x20pair' : _0x5ba6bf(0xa) : 0x4 == c[0x0] - c[0x4] || c[0x0] - c[0x3] == 0x3 && +c[0x4] == 0x1 ? 'straight' : _0x5ba6bf(0xb));\n});", "test_cases": [["1,2,3,4,1\n2,3,2,3,12\n12,13,11,12,12\n7,6,7,6,7\n3,3,2,3,3\n6,7,8,9,10\n11,12,10,1,13\n11,12,13,1,2", "one pair\ntwo pair\nthree card\nfull house\nfour card\nstraight\nstraight\nnull"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').map(function(i){f=function(a,b){return b-a};a=[],c=i.split(\",\").sort(f);c.map(function(j){a[j]?a[j]++:a[j]=1});a.sort(f);l=a[0],n=a[1];console.log(l==4?\"four card\":l==3?(n==2?\"full house\":\"three card\"):l==2?(n==2?\"two pair\":\"one pair\"):4==c[0]-c[4]||(c[0]-c[3]==3&&+c[4]==1)?\"straight\":\"null\")})", "language": "JavaScript"}
{"filename": "p00043_1", "type": "JavaScript", "obfuscated": "var a0_0x5cb8db = a0_0x5a0d;\nfunction Puzzle() {\n    var _0x547f90 = a0_0x5a0d;\n    var obj = {};\n    var arrA = _0x547f90(0x0)[_0x547f90(0x1)](',');\n    var arrB = _0x547f90(0x2)[_0x547f90(0x1)](',');\n    var i, j, k, l, m;\n    for (i = 0x0; i < 0x10; i++)\n        for (j = 0x0; j < 0x10; j++)\n            for (k = 0x0; k < 0x10; k++)\n                for (l = 0x0; l < 0x10; l++)\n                    for (m = 0x0; m < 0x9; m++) {\n                        var str = arrA[i] + arrA[j] + arrA[k] + arrA[l] + arrB[m];\n                        str = str[_0x547f90(0x1)]('')[_0x547f90(0x3)](Number)['sort'](function (a, b) {\n                            return a - b;\n                        })[_0x547f90(0x4)]('');\n                        obj[str] = !![];\n                    }\n    return obj;\n}\nfunction a0_0x551c() {\n    var _0x243450 = [\n        '123,234,345,456,567,678,789,111,222,333,444,555,666,777,888,999',\n        'split',\n        '11,22,33,44,55,66,77,88,99',\n        'map',\n        'join',\n        '/dev/stdin',\n        'trim',\n        'length',\n        'shift',\n        'push',\n        'sort',\n        'test',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0x551c = function () {\n        return _0x243450;\n    };\n    return a0_0x551c();\n}\nvar P = Puzzle();\nfunction a0_0x5a0d(trmCIz, key) {\n    var stringArray = a0_0x551c();\n    a0_0x5a0d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a0d(trmCIz, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x5cb8db(0x5), 'utf8');\nvar Arr = input[a0_0x5cb8db(0x6)]()[a0_0x5cb8db(0x1)]('\\x0a');\nwhile (!![]) {\n    if (Arr[a0_0x5cb8db(0x7)] == 0x0)\n        break;\n    var str = Arr[a0_0x5cb8db(0x8)]();\n    var ans = [];\n    for (var i = 0x1; i <= 0x9; i++) {\n        var arr = str[a0_0x5cb8db(0x1)]('')[a0_0x5cb8db(0x3)](Number);\n        arr[a0_0x5cb8db(0x9)](i);\n        arr[a0_0x5cb8db(0xa)](function (a, b) {\n            return a - b;\n        });\n        var v = arr[a0_0x5cb8db(0x4)]('');\n        if (/(.)\\1\\1\\1\\1/[a0_0x5cb8db(0xb)](v))\n            continue;\n        if (P[a0_0x5cb8db(0xc)](v))\n            ans['push'](i);\n    }\n    console[a0_0x5cb8db(0xd)](ans[a0_0x5cb8db(0x7)] == 0x0 ? '0' : ans[a0_0x5cb8db(0x4)]('\\x20'));\n}", "test_cases": [["3649596966777\n6358665788577\n9118992346175\n9643871425498\n7755542764533\n1133557799246", "2 3 5 8\n3 4\n1 2 3 4 5 6 7 8 9\n7 8 9\n1 2 3 4 6 7 8\n0"]], "original": "function Puzzle(){\n   var obj={};\n   var arrA=\"123,234,345,456,567,678,789,111,222,333,444,555,666,777,888,999\".split(\",\");\n   var arrB=\"11,22,33,44,55,66,77,88,99\".split(\",\");\n   var i,j,k,l,m;\n   for(i=0;i<16;i++)for(j=0;j<16;j++)for(k=0;k<16;k++)for(l=0;l<16;l++)for(m=0;m<9;m++){\n      var str=arrA[i]+arrA[j]+arrA[k]+arrA[l]+arrB[m];\n      str=str.split(\"\").map(Number).sort(function(a,b){return a-b;}).join(\"\");\n      obj[str]=true;\n   }\n   return obj;\n}\nvar P=Puzzle();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var str=Arr.shift();\n   var ans=[];\n   for(var i=1;i<=9;i++){\n      var arr=str.split(\"\").map(Number);\n      arr.push(i);\n      arr.sort(function(a,b){return a-b;});\n      var v=arr.join(\"\");\n      if(/(.)\\1\\1\\1\\1/.test(v))continue;\n      if(P.hasOwnProperty(v))ans.push(i);\n   }\n   console.log((ans.length==0)?\"0\":ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00044_1", "type": "JavaScript", "obfuscated": "function a0_0x5039() {\n    var _0x483e52 = [\n        'round',\n        'sqrt',\n        'readFileSync',\n        'trim',\n        'shift',\n        'log'\n    ];\n    a0_0x5039 = function () {\n        return _0x483e52;\n    };\n    return a0_0x5039();\n}\nvar a0_0x3c59cc = a0_0x59f4;\nfunction isPrime(num) {\n    var _0x5a5060 = a0_0x59f4;\n    if (num == 0x2 || num == 0x3)\n        return !![];\n    if (num < 0x2 || num % 0x2 == 0x0 || num % 0x3 == 0x0)\n        return ![];\n    var limit = Math[_0x5a5060(0x0)](Math[_0x5a5060(0x1)](num));\n    var i = 0x1;\n    while (i * 0x6 - 0x1 <= limit) {\n        if (num % (i * 0x6 - 0x1) == 0x0 || num % (i * 0x6 + 0x1) == 0x0)\n            return ![];\n        i++;\n    }\n    return !![];\n}\nfunction a0_0x59f4(SFIHIr, key) {\n    var stringArray = a0_0x5039();\n    a0_0x59f4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59f4(SFIHIr, key);\n}\nvar input = require('fs')[a0_0x3c59cc(0x2)]('/dev/stdin', 'utf8');\nvar lines = input[a0_0x3c59cc(0x3)]()['split']('\\x0a');\nvar line;\nwhile (line = lines[a0_0x3c59cc(0x4)]()) {\n    var num = +line;\n    var mp;\n    var lp;\n    if (num == 0x3)\n        mp = 0x2;\n    var i = 0x3;\n    while (!![]) {\n        if (isPrime(i) && i < num) {\n            mp = i;\n        }\n        if (isPrime(i) && i > num) {\n            lp = i;\n            break;\n        }\n        i += 0x2;\n    }\n    console[a0_0x3c59cc(0x5)](mp, lp);\n}", "test_cases": [["19\n3517", "17 23\n3511 3527"]], "original": "function isPrime(num) {\n    if (num == 2 || num == 3) return true;\n    if (num < 2 || num % 2 == 0 || num % 3 == 0) return false;\n    var limit = Math.round(Math.sqrt(num));\n \n    var i = 1;\n    while(i * 6 - 1 <= limit) {\n        if (num % (i * 6 - 1) == 0 || num % (i * 6 + 1) == 0) return false;\n        i++;\n    }\n    return true;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var num = +line;\n\n    var mp;\n    var lp;\n\n    if (num == 3)\n        mp = 2;\n\n    var i = 3;\n    while (true) {\n        if (isPrime(i) && i < num) {\n            mp = i;\n        }\n        if (isPrime(i) && i > num) {\n            lp = i;\n            break;\n        }\n        i += 2;\n    }\n    console.log(mp, lp);\n}", "language": "JavaScript"}
{"filename": "p00060_1", "type": "JavaScript", "obfuscated": "function a0_0x3b1b(htIMei, key) {\n    var stringArray = a0_0x4c43();\n    a0_0x3b1b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b1b(htIMei, key);\n}\nvar a0_0x1b3d87 = a0_0x3b1b;\nvar input = require('fs')[a0_0x1b3d87(0x0)](a0_0x1b3d87(0x1), a0_0x1b3d87(0x2));\nfunction a0_0x4c43() {\n    var _0x3e4ce4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'forEach',\n        'split',\n        'map',\n        'filter',\n        'log',\n        'YES'\n    ];\n    a0_0x4c43 = function () {\n        return _0x3e4ce4;\n    };\n    return a0_0x4c43();\n}\nvar Arr = input[a0_0x1b3d87(0x3)]()['split']('\\x0a');\nArr[a0_0x1b3d87(0x4)](function (v) {\n    var _0x10df1d = a0_0x3b1b;\n    var arr = v[_0x10df1d(0x5)]('\\x20')[_0x10df1d(0x6)](Number);\n    var m = [\n        0x1,\n        0x2,\n        0x3,\n        0x4,\n        0x5,\n        0x6,\n        0x7,\n        0x8,\n        0x9,\n        0xa\n    ];\n    m = m[_0x10df1d(0x7)](function (v) {\n        return v != arr[0x0] || v != arr[0x1] || v != arr[0x2];\n    });\n    var y = 0x0;\n    var n = 0x0;\n    m[_0x10df1d(0x4)](function (v) {\n        arr[0x0] + arr[0x1] + v <= 0x14 ? y++ : n++;\n    });\n    console[_0x10df1d(0x8)](y >= n ? _0x10df1d(0x9) : 'NO');\n});", "test_cases": [["1 2 3\n5 6 9\n8 9 10", "YES\nYES\nNO"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var m=[1,2,3,4,5,6,7,8,9,10];\n   m=m.filter(function(v){return (v!=arr[0] || v!= arr[1] || v!=arr[2]);});\n   var y=0;\n   var n=0;\n   m.forEach(function(v){((arr[0]+arr[1]+v)<=20)?y++:n++;});\n   console.log(y>=n?\"YES\":\"NO\");\n});", "language": "JavaScript"}
{"filename": "p00083_1", "type": "JavaScript", "obfuscated": "function a0_0x28ba(kqExBV, key) {\n    var stringArray = a0_0x347d();\n    a0_0x28ba = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28ba(kqExBV, key);\n}\nfunction a0_0x347d() {\n    var _0x23a674 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'pre-meiji',\n        'taisho',\n        'showa',\n        'heisei',\n        'log'\n    ];\n    a0_0x347d = function () {\n        return _0x23a674;\n    };\n    return a0_0x347d();\n}\nvar a0_0x2822d4 = a0_0x28ba;\nvar input = require('fs')[a0_0x2822d4(0x0)]('/dev/stdin', a0_0x2822d4(0x1))[a0_0x2822d4(0x2)]();\nvar lines = input[a0_0x2822d4(0x3)]('\\x0a');\nvar line;\nwhile (line = lines[a0_0x2822d4(0x4)]()) {\n    var arr = line[a0_0x2822d4(0x3)]('\\x20')[a0_0x2822d4(0x5)](function (n) {\n        return +n;\n    });\n    var year = arr[0x0];\n    var month = arr[0x1];\n    var day = arr[0x2];\n    var era = '';\n    var today = new Date(year, month - 0x1, day);\n    if (today < new Date(0x74c, 0x8, 0x8)) {\n        era = a0_0x2822d4(0x6);\n    } else if (today < new Date(0x778, 0x6, 0x1e)) {\n        era = 'meiji';\n        year -= 0x74b;\n    } else if (today < new Date(0x786, 0xb, 0x19)) {\n        era = a0_0x2822d4(0x7);\n        year -= 0x777;\n    } else if (today < new Date(0x7c5, 0x0, 0x8)) {\n        era = a0_0x2822d4(0x8);\n        year -= 0x785;\n    } else {\n        era = a0_0x2822d4(0x9);\n        year -= 0x7c4;\n    }\n    if (era == 'pre-meiji') {\n        console[a0_0x2822d4(0xa)](a0_0x2822d4(0x6));\n        continue;\n    }\n    console['log'](era, year, month, day);\n}", "test_cases": [["2005 9 3\n1868 12 2\n1868 9 7", "heisei 17 9 3\nmeiji 1 12 2\npre-meiji"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n    var arr = line.split(' ').map(function(n){return +n;});\n    var year = arr[0];\n    var month = arr[1];\n    var day = arr[2];\n    var era = '';\n\n    var today = new Date(year, month - 1, day);\n    if (today < new Date(1868, 8, 8)) {\n        era = 'pre-meiji';\n    } else if (today < new Date(1912, 6, 30)) {\n        era = 'meiji';\n        year -= 1867;\n    } else if (today < new Date(1926, 11, 25)) {\n        era = 'taisho';\n        year -= 1911;\n    } else if (today < new Date(1989, 0, 8)) {\n        era = 'showa';\n        year -= 1925;\n    } else {\n        era = 'heisei';\n        year -= 1988;\n    }\n\n    if (era == 'pre-meiji') {\n        console.log('pre-meiji');\n        continue;\n    }\n    console.log(era, year, month, day);\n}", "language": "JavaScript"}
{"filename": "p00085_1", "type": "JavaScript", "obfuscated": "function a0_0x8640() {\n    var _0x4154b1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        '0\\x200',\n        'log'\n    ];\n    a0_0x8640 = function () {\n        return _0x4154b1;\n    };\n    return a0_0x8640();\n}\nvar a0_0x744710 = a0_0x260a;\nvar input = require('fs')[a0_0x744710(0x0)](a0_0x744710(0x1), a0_0x744710(0x2));\nfunction a0_0x260a(nfUrhQ, key) {\n    var stringArray = a0_0x8640();\n    a0_0x260a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x260a(nfUrhQ, key);\n}\nvar Arr = input[a0_0x744710(0x3)]()[a0_0x744710(0x4)]('\\x0a');\nfor (var i = 0x0; i < Arr[a0_0x744710(0x5)]; i++) {\n    if (Arr[i] == a0_0x744710(0x6))\n        break;\n    var arr = Arr[i][a0_0x744710(0x4)]('\\x20')['map'](Number);\n    var N = arr[0x0];\n    var m = arr[0x1];\n    var n = {};\n    for (var j = 0x0; j < N; j++)\n        n[j] = null;\n    var x = 0x0;\n    for (var k = 0x0; k < N; k++) {\n        var y = 0x0;\n        do {\n            x++;\n            if (x == N)\n                x = 0x0;\n            if (n[x] === null)\n                y++;\n        } while (y != m);\n        n[x] = k;\n    }\n    console[a0_0x744710(0x7)](x);\n}", "test_cases": [["41 3\n30 9\n0 0", "31\n21"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==\"0 0\")break;\n   var arr=Arr[i].split(\" \").map(Number);\n   var N=arr[0];\n   var m=arr[1];\n   var n={};\n   for(var j=0;j<N;j++)n[j]=null;\n   var x=0;\n   for(var k=0;k<N;k++){\n      var y=0;\n      do{\n         x++;\n         if(x==N)x=0;\n         if(n[x]===null)y++;\n      }while(y!=m);\n      n[x]=k;\n   }\n   console.log(x);\n}", "language": "JavaScript"}
{"filename": "p00106_1", "type": "JavaScript", "obfuscated": "var a0_0x480e67 = a0_0x120d;\nvar obj = {};\nfunction a0_0x120d(wfMEsf, key) {\n    var stringArray = a0_0x1aa6();\n    a0_0x120d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x120d(wfMEsf, key);\n}\nfor (var i = 0x0; i <= 0x19; i++) {\n    for (var j = 0x0; j <= 0x10; j++) {\n        for (var k = 0x0; k <= 0xa; k++) {\n            var weight = 0xc8 * i + 0x12c * j + 0x1f4 * k;\n            if (weight > 0x1388)\n                continue;\n            var money = 0x0;\n            money += 0x17c * 0x5 * 0.8 * Math['floor'](i / 0x5);\n            money += 0x226 * 0x4 * 0.85 * Math['floor'](j / 0x4);\n            money += 0x352 * 0x3 * 0.88 * Math['floor'](k / 0x3);\n            money += 0x17c * (i % 0x5);\n            money += 0x226 * (j % 0x4);\n            money += 0x352 * (k % 0x3);\n            if (obj[a0_0x480e67(0x0)](weight))\n                obj[weight] = Math[a0_0x480e67(0x1)](obj[weight], money);\n            else\n                obj[weight] = money;\n        }\n    }\n}\nvar input = require('fs')[a0_0x480e67(0x2)](a0_0x480e67(0x3), a0_0x480e67(0x4));\nvar Arr = input['trim']()[a0_0x480e67(0x5)]('\\x0a');\nfunction a0_0x1aa6() {\n    var _0x51584e = [\n        'hasOwnProperty',\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x1aa6 = function () {\n        return _0x51584e;\n    };\n    return a0_0x1aa6();\n}\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    console[a0_0x480e67(0x6)](obj[n]);\n}", "test_cases": [["500\n2200\n0", "850\n3390"]], "original": "var obj={};\nfor(var i=0;i<=25;i++){\n   for(var j=0;j<=16;j++){\n      for(var k=0;k<=10;k++){\n         var weight=200*i+300*j+500*k;\n         if(weight>5000)continue;\n         var money=0;\n         money+=380*5*0.8*Math.floor(i/5);\n         money+=550*4*0.85*Math.floor(j/4);\n         money+=850*3*0.88*Math.floor(k/3);\n         money+=380*(i%5);\n         money+=550*(j%4);\n         money+=850*(k%3);\n         if(obj.hasOwnProperty(weight))obj[weight]=Math.min(obj[weight],money);\n         else obj[weight]=money;\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   console.log(obj[n]);\n}", "language": "JavaScript"}
{"filename": "p00135_1", "type": "JavaScript", "obfuscated": "var a0_0x1f15c0 = a0_0x1198;\nvar input = require('fs')['readFileSync'](a0_0x1f15c0(0x0), a0_0x1f15c0(0x1));\nfunction a0_0x553a() {\n    var _0x1176d1 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'abs',\n        'safe',\n        'warning',\n        'log'\n    ];\n    a0_0x553a = function () {\n        return _0x1176d1;\n    };\n    return a0_0x553a();\n}\nvar Arr = input['replace'](/\\n$/, '')[a0_0x1f15c0(0x2)]('\\x0a');\nvar n = Arr[a0_0x1f15c0(0x3)]() - 0x0;\nfunction a0_0x1198(UhfFjP, key) {\n    var stringArray = a0_0x553a();\n    a0_0x1198 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1198(UhfFjP, key);\n}\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr[I][a0_0x1f15c0(0x2)](':');\n    var h = parseInt(arr[0x0], 0xa);\n    var m = parseInt(arr[0x1], 0xa);\n    var H = h * (0x168 / 0xc) + m * (0x168 / 0xc / 0x3c);\n    var M = m * (0x168 / 0x3c);\n    var hm = Math[a0_0x1f15c0(0x4)](H - M);\n    var ans;\n    if (hm >= 0x0 && hm < 0x1e)\n        ans = 'alert';\n    else if (hm >= 0x5a && hm <= 0xb4)\n        ans = a0_0x1f15c0(0x5);\n    else\n        ans = a0_0x1f15c0(0x6);\n    console[a0_0x1f15c0(0x7)](ans);\n}", "test_cases": [["4\n02:15\n06:01\n11:55\n10:40", "alert\nsafe\nalert\nwarning"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=Arr[I].split(\":\");\n   var h=parseInt(arr[0],10);\n   var m=parseInt(arr[1],10);\n   var H=h*(360/12)+m*((360/12)/60);\n   var M=m*(360/60);\n   var hm=Math.abs(H-M);\n   var ans;\n   if(hm>=0 && hm<30)ans=\"alert\";\n   else if(hm>=90 && hm<=180)ans=\"safe\";\n   else ans=\"warning\"\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00206_1", "type": "JavaScript", "obfuscated": "function a0_0xe84e(hzMEvi, key) {\n    var stringArray = a0_0x1205();\n    a0_0xe84e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe84e(hzMEvi, key);\n}\nvar a0_0x13bea2 = a0_0xe84e;\nfunction main() {\n    var _0x4777f0 = a0_0xe84e;\n    var i = 0x0, j, flag, L, MN;\n    for (;;) {\n        L = Number(input[i++]);\n        if (L === 0x0)\n            break;\n        flag = !![];\n        for (j = 0x0; j < 0xc; j++) {\n            MN = input[i++][_0x4777f0(0x0)]('\\x20')[_0x4777f0(0x1)](Number);\n            L -= MN[0x0] - MN[0x1];\n            if (flag && L <= 0x0) {\n                console[_0x4777f0(0x2)](j + 0x1);\n                flag = ![];\n            }\n        }\n        if (flag)\n            console['log']('NA');\n    }\n}\nvar input = '';\nprocess[a0_0x13bea2(0x3)][a0_0x13bea2(0x4)]();\nprocess[a0_0x13bea2(0x3)][a0_0x13bea2(0x5)](a0_0x13bea2(0x6));\nprocess[a0_0x13bea2(0x3)]['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on'](a0_0x13bea2(0x7), function () {\n    input = input['split']('\\x0a');\n    main();\n});\nfunction a0_0x1205() {\n    var _0x1b2420 = [\n        'split',\n        'map',\n        'log',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'end'\n    ];\n    a0_0x1205 = function () {\n        return _0x1b2420;\n    };\n    return a0_0x1205();\n}", "test_cases": [["10000\n5000 3150\n5000 5000\n0 0\n5000 1050\n5000 3980\n5000 210\n5000 5000\n5000 5000\n0 0\n5000 2100\n5000 2100\n5000 2100\n29170\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 70831\n0", "6\nNA"]], "original": "function main() {\n  var\n  i = 0, j, flag,\n  L, MN;\n  for (;;) {\n    L = Number(input[i++]);\n    if (L === 0) break;\n    \n    flag = true;\n    for (j = 0; j < 12; j++) {\n      MN = input[i++].split(' ').map(Number);\n      L -= MN[0] - MN[1];\n      if (flag && L <= 0) {\n        console.log(j + 1);\n        flag = false;\n      }\n    }\n    \n    if (flag) console.log('NA');\n  }\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00211_1", "type": "JavaScript", "obfuscated": "var a0_0x29250b = a0_0x3546;\nfunction a0_0x26d4() {\n    var _0x33770d = [\n        'max',\n        'min',\n        'XsVlK',\n        'gAqVn',\n        'log',\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'forEach'\n    ];\n    a0_0x26d4 = function () {\n        return _0x33770d;\n    };\n    return a0_0x26d4();\n}\nfunction GCD(a, b) {\n    var _0x3e9c2b = a0_0x3546;\n    var m = Math[_0x3e9c2b(0x0)](a, b);\n    var n = Math[_0x3e9c2b(0x1)](a, b);\n    while (n != 0x0) {\n        if (_0x3e9c2b(0x2) !== _0x3e9c2b(0x3)) {\n            var N = n;\n            n = m % n;\n            m = N;\n        } else {\n            console[_0x3e9c2b(0x4)](lcm / v);\n        }\n    }\n    return m;\n}\nfunction a0_0x3546(OObvtH, key) {\n    var stringArray = a0_0x26d4();\n    a0_0x3546 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3546(OObvtH, key);\n}\nvar input = require('fs')[a0_0x29250b(0x5)]('/dev/stdin', a0_0x29250b(0x6));\nvar Arr = input['trim']()[a0_0x29250b(0x7)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x29250b(0x8)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var I = 0x0; I < n; I++) {\n        var v = Arr[a0_0x29250b(0x8)]()[a0_0x29250b(0x7)]('\\x20')[a0_0x29250b(0x9)](Number);\n        var gcd = GCD(v[0x0], v[0x1]);\n        arr[a0_0x29250b(0xa)]([\n            v[0x0] / gcd,\n            v[0x1] / gcd\n        ]);\n    }\n    var lcm = 0x1;\n    arr['forEach'](function (v) {\n        var gcd = GCD(v[0x1], lcm);\n        lcm = v[0x1] * lcm / gcd;\n    });\n    arr = arr[a0_0x29250b(0x9)](function (v, i) {\n        return v[0x0] * (lcm / v[0x1]);\n    });\n    var lcm = 0x1;\n    arr['forEach'](function (v) {\n        var gcd = GCD(v, lcm);\n        lcm = v * lcm / gcd;\n    });\n    arr[a0_0x29250b(0xb)](function (v) {\n        console['log'](lcm / v);\n    });\n}", "test_cases": [["2\n4 3\n5 4\n5\n789 289\n166 46\n9 4\n617 252\n972 303\n2\n8 5\n32 20\n0", "15\n16\n1598397732\n1209243492\n1939462992\n1782294192\n1360317793\n1\n1"]], "original": "function GCD(a,b){\n   var m=Math.max(a,b);\n   var n=Math.min(a,b);\n   while(n!=0){\n      var N=n;\n      n=m%n;\n      m=N;\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var I=0;I<n;I++){\n      var v=Arr.shift().split(\" \").map(Number);\n      var gcd=GCD(v[0],v[1]);\n      arr.push([v[0]/gcd,v[1]/gcd]);\n   }\n   var lcm=1;\n   arr.forEach(function(v){\n      var gcd=GCD(v[1],lcm);\n      lcm=(v[1]*lcm)/gcd;\n   });\n   arr=arr.map(function(v,i){return v[0]*(lcm/v[1]);});\n   var lcm=1;\n   arr.forEach(function(v){\n      var gcd=GCD(v,lcm);\n      lcm=(v*lcm)/gcd;\n   });\n   arr.forEach(function(v){console.log(lcm/v);});\n}", "language": "JavaScript"}
{"filename": "p00638_1", "type": "JavaScript", "obfuscated": "var a0_0x31735c = a0_0x5102;\nfunction a0_0x5102(XttNMb, key) {\n    var stringArray = a0_0x1033();\n    a0_0x5102 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5102(XttNMb, key);\n}\nvar n;\nvar x = [];\nfunction main() {\n    var _0x200b9f = a0_0x5102;\n    while (n = scan()) {\n        rep(n, function (i) {\n            x[i] = [\n                scan(),\n                scan()\n            ];\n        });\n        x[_0x200b9f(0x0)](function (a, b) {\n            return a[0x1] - b[0x1];\n        });\n        var ans = !![];\n        var w = 0x0;\n        rep(n, function (i) {\n            var _0x458d32 = a0_0x5102;\n            if (_0x458d32(0x1) !== 'cUdRk') {\n                console[_0x458d32(0x2)](val);\n            } else {\n                w += x[i][0x0];\n                ans = w <= x[i][0x1] && ans;\n            }\n        });\n        print(ans ? _0x200b9f(0x3) : 'No');\n    }\n}\nfunction rep(a, b, c) {\n    var _0x1b8aea = a0_0x5102;\n    if (c === undefined) {\n        if (_0x1b8aea(0x4) === _0x1b8aea(0x4)) {\n            c = b;\n            b = a;\n            a = 0x0;\n        } else {\n            if (type === _0x1b8aea(0x5)) {\n                return input[input_index++];\n            } else {\n                return +input[input_index++];\n            }\n        }\n    }\n    for (var i = a; i < b; ++i) {\n        if ('RyVUe' === 'RyVUe') {\n            if (c(i) === ![]) {\n                break;\n            }\n        } else {\n            w += x[i][0x0];\n            ans = w <= x[i][0x1] && ans;\n        }\n    }\n}\nprocess[a0_0x31735c(0x6)][a0_0x31735c(0x7)]();\nprocess['stdin']['setEncoding']('utf8');\nvar input = '';\nvar input_index = 0x0;\nfunction scan(type) {\n    var _0x478648 = a0_0x5102;\n    if (type === 'string') {\n        if (_0x478648(0x8) === _0x478648(0x9)) {\n            return +input[input_index++];\n        } else {\n            return input[input_index++];\n        }\n    } else {\n        return +input[input_index++];\n    }\n}\nfunction print(val) {\n    var _0x5dc945 = a0_0x5102;\n    console[_0x5dc945(0x2)](val);\n}\nprocess[a0_0x31735c(0x6)]['on'](a0_0x31735c(0xa), function (chunk) {\n    input += chunk;\n});\nfunction a0_0x1033() {\n    var _0x53c46b = [\n        'sort',\n        'cUdRk',\n        'log',\n        'Yes',\n        'njPuO',\n        'string',\n        'stdin',\n        'resume',\n        'XLXNv',\n        'oSeBq',\n        'data',\n        'end',\n        'split'\n    ];\n    a0_0x1033 = function () {\n        return _0x53c46b;\n    };\n    return a0_0x1033();\n}\nprocess['stdin']['on'](a0_0x31735c(0xb), function () {\n    var _0x1e1191 = a0_0x5102;\n    input = input['trim']()[_0x1e1191(0xc)](/\\s+/);\n    main();\n});", "test_cases": [["3\n2 3\n3 6\n1 2\n3\n2 3\n3 5\n1 2\n0", "Yes\nNo"]], "original": "var n;\nvar x = [];\n\nfunction main(){\n\twhile(n = scan()){\n\t\trep(n, function(i){\n\t\t\tx[i] = [scan(), scan()];\n\t\t});\n\t\tx.sort(function(a, b){\n\t\t\treturn a[1] - b[1];\n\t\t});\n\t\t//print(x);\n\t\tvar ans = true;\n\t\tvar w = 0;\n\t\trep(n, function(i){\n\t\t\tw += x[i][0];\n\t\t\tans = w <= x[i][1] && ans;\n\t\t});\n\t\tprint(ans ? \"Yes\" : \"No\");\n\t}\n}\n \nfunction rep(a, b, c){\n\tif(c === undefined){\n\t\tc = b;\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tfor(var i = a; i < b; ++i){\n\t\tif(c(i) === false){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \nvar input = '';\nvar input_index = 0;\n \nfunction scan(type){\n\tif(type === 'string'){\n\t\treturn input[input_index++];\n\t}\n\telse{\n\t\treturn +input[input_index++];\n\t}\n}\n \nfunction print(val){\n\tconsole.log(val);\n}\n \nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.trim().split(/\\s+/);\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00691_1", "type": "JavaScript", "obfuscated": "var a0_0x4e3260 = a0_0x167a;\nfunction a0_0x6f15() {\n    var _0x119411 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'min'\n    ];\n    a0_0x6f15 = function () {\n        return _0x119411;\n    };\n    return a0_0x6f15();\n}\nvar input = require('fs')[a0_0x4e3260(0x0)]('/dev/stdin', a0_0x4e3260(0x1));\nvar arr = input[a0_0x4e3260(0x2)]()[a0_0x4e3260(0x3)]('\\x0a');\nfunction a0_0x167a(QcnfoR, key) {\n    var stringArray = a0_0x6f15();\n    a0_0x167a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x167a(QcnfoR, key);\n}\nwhile (!![]) {\n    var z = arr[a0_0x4e3260(0x4)]() - 0x0;\n    if (z == 0x0)\n        break;\n    var zzz = z * z * z;\n    var ary = [];\n    for (var i = z - 0x1; i > 0x0; i--) {\n        for (var j = i; j > 0x0; j--) {\n            var x = zzz - i * i * i - j * j * j;\n            if (x > 0x0)\n                ary['push'](x);\n        }\n    }\n    console['log'](Math[a0_0x4e3260(0x5)]['apply'](null, ary));\n}", "test_cases": [["6\n4\n2\n0", "27\n10\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var z=arr.shift()-0;\n   if(z==0)break;\n   var zzz=z*z*z;\n   var ary=[];\n   for(var i=z-1;i>0;i--){\n      for(var j=i;j>0;j--){\n         var x=zzz-i*i*i-j*j*j\n         if(x>0)ary.push(x);\n      }\n   }\n   console.log(Math.min.apply(null, ary));\n}", "language": "JavaScript"}
{"filename": "p00710_1", "type": "JavaScript", "obfuscated": "function a0_0x9e22(UmzqBV, key) {\n    var stringArray = a0_0x1f3f();\n    a0_0x9e22 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x9e22(UmzqBV, key);\n}\nfunction a0_0x1f3f() {\n    var _0x1c9884 = [\n        'replace',\n        'split',\n        'shift',\n        'splice',\n        'concat',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1f3f = function () {\n        return _0x1c9884;\n    };\n    return a0_0x1f3f();\n}\nvar a0_0x5557fc = a0_0x9e22;\n(function (input) {\n    var _0x384ae7 = a0_0x9e22;\n    var inputs = input[_0x384ae7(0x0)](/\\r/g, '')[_0x384ae7(0x1)]('\\x0a');\n    while (!![]) {\n        var cards = [], line = inputs[_0x384ae7(0x2)]()[_0x384ae7(0x1)]('\\x20'), n = parseInt(line[0x0]), r = parseInt(line[0x1]);\n        if (n === 0x0 && r === 0x0)\n            break;\n        for (var i = n; i > 0x0; i--) {\n            cards['push'](i);\n        }\n        while (r--) {\n            var line = inputs[_0x384ae7(0x2)]()[_0x384ae7(0x1)]('\\x20'), p = parseInt(line[0x0]) - 0x1, c = parseInt(line[0x1]), tmp;\n            tmp = cards[_0x384ae7(0x3)](p, c);\n            cards = tmp[_0x384ae7(0x4)](cards);\n        }\n        console[_0x384ae7(0x5)](cards[_0x384ae7(0x2)]());\n    }\n}(require('fs')['readFileSync'](a0_0x5557fc(0x6), a0_0x5557fc(0x7))));", "test_cases": [["5 2\n3 1\n3 1\n10 3\n1 10\n10 1\n8 3\n0 0", "4\n4"]], "original": "(function (input) {\n    var inputs = input.replace(/\\r/g, '').split(\"\\n\");\n\n    while(true) {\n        var cards = [],\n            line = inputs.shift().split(\" \"),\n            n = parseInt(line[0]),\n            r = parseInt(line[1]);\n\n        if ( n === 0 && r === 0 ) break;\n\n        for ( var i = n; i > 0; i-- ) {\n            cards.push(i);\n        }\n\n        // シャッフルする回数分だけ\n        while(r--) {\n            var line = inputs.shift().split(\" \"),\n                p = parseInt(line[0]) - 1,  // 添字なので\n                c = parseInt(line[1]),\n                tmp;\n\n            tmp = cards.splice(p, c);\n            cards = tmp.concat(cards);\n        }\n\n        console.log(cards.shift());\n    }\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00854_1", "type": "JavaScript", "obfuscated": "var a0_0x289d2a = a0_0x38ab;\nvar input = require('fs')[a0_0x289d2a(0x0)](a0_0x289d2a(0x1), a0_0x289d2a(0x2));\nvar arr = input['trim']()[a0_0x289d2a(0x3)]('\\x0a');\nwhile (!![]) {\n    var [n, k, m] = arr['shift']()[a0_0x289d2a(0x3)]('\\x20')[a0_0x289d2a(0x4)](Number);\n    if (n + k + m == 0x0)\n        break;\n    var a = [];\n    for (var i = 0x0; i < n; i++)\n        a[i] = !![];\n    var z = m - 0x1;\n    var sum = n;\n    while (!![]) {\n        if (sum == 0x1)\n            break;\n        a[z] = ![];\n        sum--;\n        var cnt = 0x0;\n        while (!![]) {\n            if (cnt == k)\n                break;\n            z++;\n            if (z >= n)\n                z = 0x0;\n            if (a[z])\n                cnt++;\n        }\n    }\n    a[a0_0x289d2a(0x5)]((v, i) => {\n        var _0x12f0d7 = a0_0x38ab;\n        if (v)\n            console[_0x12f0d7(0x6)](i + 0x1);\n    });\n}\nfunction a0_0x38ab(gFsFGO, key) {\n    var stringArray = a0_0x1417();\n    a0_0x38ab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x38ab(gFsFGO, key);\n}\nfunction a0_0x1417() {\n    var _0x22fa3c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x1417 = function () {\n        return _0x22fa3c;\n    };\n    return a0_0x1417();\n}", "test_cases": [["8 5 3\n100 9999 98\n10000 10000 10000\n0 0 0", "1\n93\n2019"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile(true){\n   var [n,k,m]=arr.shift().split(\" \").map(Number);\n   if(n+k+m==0)break;\n   var a=[];\n   for(var i=0;i<n;i++)a[i]=true;\n   var z = m-1;\n   var sum=n;\n   while(true){\n      if(sum==1)break;\n      a[z]=false;\n      sum--;\n      var cnt = 0;\n      while(true){\n         if(cnt==k)break;\n         z++;\n         if(z>=n)z=0;\n         if(a[z])cnt++;\n      }\n   }\n   a.forEach((v,i)=>{\n      if(v)console.log(i+1);\n   });\n}\n", "language": "JavaScript"}
{"filename": "p00999_1", "type": "JavaScript", "obfuscated": "var a0_0x3f5870 = a0_0x3905;\nvar input = require('fs')[a0_0x3f5870(0x0)](a0_0x3f5870(0x1), a0_0x3f5870(0x2));\nvar arr = input[a0_0x3f5870(0x3)]()[a0_0x3f5870(0x4)]('\\x0a');\nwhile (!![]) {\n    var abc = arr[a0_0x3f5870(0x5)]();\n    if (abc == '0\\x200\\x200\\x200\\x200')\n        break;\n    var ary = (abc + '\\x20' + arr['shift']())[a0_0x3f5870(0x4)]('\\x20')[a0_0x3f5870(0x6)](Number);\n    (function (a, b, c, d, e, na, nb, nc) {\n        var _0x106745 = a0_0x3905;\n        var ans = Math[_0x106745(0x7)](nc / d) * d * e;\n        var nokori = nc % d;\n        var A = function (ans) {\n            var _0xa887f1 = a0_0x3905;\n            if (_0xa887f1(0x8) !== _0xa887f1(0x9)) {\n                ans += nokori * c;\n                ans += na * a + nb * b;\n                return ans;\n            } else {\n                return na * a + nb * b + nc * e;\n            }\n        }(ans);\n        var B = function (ans, na, nb) {\n            var _0x3036c0 = a0_0x3905;\n            if (_0x3036c0(0xa) !== _0x3036c0(0xa)) {\n                if (nb > 0x0)\n                    nb--;\n                else if (na > 0x0)\n                    na--;\n            } else {\n                if (ans == 0x0) {\n                    if ('tsjbZ' === _0x3036c0(0xb)) {\n                        ans += nokori * c;\n                        ans += na * a + nb * b;\n                        return ans;\n                    } else {\n                        var yobun = nokori == 0x0 ? 0x0 : d - nokori;\n                        if (yobun > 0x0)\n                            ans += e * d;\n                        while (yobun--) {\n                            if (nb > 0x0)\n                                nb--;\n                            else if (na > 0x0)\n                                na--;\n                        }\n                        ans += na * a + nb * b;\n                        return ans;\n                    }\n                }\n                if (ans != 0x0) {\n                    return na * a + nb * b + nc * e;\n                }\n            }\n        }(ans, na, nb);\n        console[_0x106745(0xc)](Math[_0x106745(0xd)](A, B));\n    }[a0_0x3f5870(0xe)](null, ary));\n}\nfunction a0_0x3905(NBPDGF, key) {\n    var stringArray = a0_0x32da();\n    a0_0x3905 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3905(NBPDGF, key);\n}\nfunction a0_0x32da() {\n    var _0xaf5b54 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'floor',\n        'pGrPo',\n        'XsyXv',\n        'hOmjS',\n        'yyHCj',\n        'log',\n        'min',\n        'apply'\n    ];\n    a0_0x32da = function () {\n        return _0xaf5b54;\n    };\n    return a0_0x32da();\n}", "test_cases": [["70 100 340 4 200\n1 1 4\n70 100 340 4 200\n0 1 3\n70 100 340 4 200\n1 1 2\n0 0 0 0 0", "970\n800\n800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var abc=arr.shift();\n   if(abc==\"0 0 0 0 0\")break;\n   var ary=(abc+\" \"+arr.shift()).split(\" \").map(Number);\n   (function(a,b,c,d,e,na,nb,nc){\n      var ans=Math.floor(nc/d)*d*e;\n      var nokori=nc%d;\n      var A=(function(ans){\n         ans+=nokori*c;\n         ans+=na*a+nb*b;\n         return ans;\n      })(ans);\n      var B=(function(ans,na,nb){\n         if(ans==0){\n            var yobun=(nokori==0)?0:d-nokori;\n            if(yobun>0)ans+=e*d;\n            while(yobun--){\n               if(nb>0)nb--;\n               else if(na>0)na--;\n            }\n            ans+=na*a+nb*b;\n            return ans;\n         }\n         if(ans!=0){\n            return na*a+nb*b+nc*e;\n         }\n      })(ans,na,nb);\n      console.log(Math.min(A,B));\n   }).apply(null,ary);\n}", "language": "JavaScript"}
{"filename": "p01131_1", "type": "JavaScript", "obfuscated": "function a0_0xa422() {\n    var _0x5e61d4 = [\n        '/dev/stdin',\n        'utf8',\n        '.,!?\\x20',\n        'abc',\n        'def',\n        'ghi',\n        'mno',\n        'pqrs',\n        'tuv',\n        'split',\n        'forEach',\n        'length',\n        'log'\n    ];\n    a0_0xa422 = function () {\n        return _0x5e61d4;\n    };\n    return a0_0xa422();\n}\nvar a0_0x496402 = a0_0x1ffe;\nfunction a0_0x1ffe(JfITQZ, key) {\n    var stringArray = a0_0xa422();\n    a0_0x1ffe = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ffe(JfITQZ, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x496402(0x0), a0_0x496402(0x1));\nvar Arr = input['trim']()['split']('\\x0a');\nvar AL = Arr['shift']();\nvar abc = [\n    '',\n    a0_0x496402(0x2),\n    a0_0x496402(0x3),\n    a0_0x496402(0x4),\n    a0_0x496402(0x5),\n    'jkl',\n    a0_0x496402(0x6),\n    a0_0x496402(0x7),\n    a0_0x496402(0x8),\n    'wxyz'\n];\nabc = abc['map'](function (v) {\n    var _0x79a823 = a0_0x1ffe;\n    return v[_0x79a823(0x9)]('');\n});\nfor (var i = 0x0; i < AL; i++) {\n    var arr = Arr[i]['split']('')['map'](Number);\n    var str = '';\n    var a = '';\n    var n = -0x1;\n    arr[a0_0x496402(0xa)](function (v) {\n        var _0xbfcb37 = a0_0x1ffe;\n        if (v > 0x0) {\n            n++;\n            a = abc[v][n % abc[v][_0xbfcb37(0xb)]];\n        } else {\n            str += a;\n            n = -0x1;\n            a = '';\n        }\n    });\n    console[a0_0x496402(0xc)](str);\n}", "test_cases": [["5\n20\n220\n222220\n44033055505550666011011111090666077705550301110\n000555555550000330000444000080000200004440000", "a\nb\nb\nhello, world!\nkeitai"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nvar abc=[\"\",\".,!? \",\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"];\nabc=abc.map(function(v){return v.split(\"\");});\nfor(var i=0;i<AL;i++){\n   var arr=Arr[i].split(\"\").map(Number);\n   var str=\"\";\n   var a=\"\";\n   var n=-1;\n   arr.forEach(function(v){\n      if(v>0){\n         n++;\n         a=abc[v][n%abc[v].length];\n      }else{\n         str+=a;\n         n=-1;\n         a=\"\";\n      }\n   });\nconsole.log(str);\n}", "language": "JavaScript"}
{"filename": "p01132_1", "type": "JavaScript", "obfuscated": "var a0_0x800d80 = a0_0x1a22;\nvar input = require('fs')[a0_0x800d80(0x0)](a0_0x800d80(0x1), a0_0x800d80(0x2));\nfunction a0_0x1a22(EbCaaT, key) {\n    var stringArray = a0_0x410d();\n    a0_0x1a22 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a22(EbCaaT, key);\n}\nvar Arr = input[a0_0x800d80(0x3)]()[a0_0x800d80(0x4)]('\\x0a');\nfunction a0_0x410d() {\n    var _0x5e168a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map'\n    ];\n    a0_0x410d = function () {\n        return _0x5e168a;\n    };\n    return a0_0x410d();\n}\nvar j = 0x0;\nwhile (!![]) {\n    var v = Arr['shift']() - 0x0;\n    if (v == 0x0)\n        break;\n    var m = Arr[a0_0x800d80(0x5)]()['split']('\\x20')[a0_0x800d80(0x6)](Number);\n    var money = 0xa * m[0x0] + 0x32 * m[0x1] + 0x64 * m[0x2] + 0x1f4 * m[0x3] - v;\n    var M = [\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    while (0x1f4 <= money) {\n        M[0x3]++;\n        money -= 0x1f4;\n    }\n    while (0x64 <= money) {\n        M[0x2]++;\n        money -= 0x64;\n    }\n    while (0x32 <= money) {\n        M[0x1]++;\n        money -= 0x32;\n    }\n    while (0xa <= money) {\n        M[0x0]++;\n        money -= 0xa;\n    }\n    var coin = [\n        0xa,\n        0x32,\n        0x64,\n        0x1f4\n    ];\n    var str = '';\n    m['forEach'](function (v, i) {\n        if (v > M[i])\n            str += coin[i] + '\\x20' + (v - M[i]) + '\\x0a';\n    });\n    console['log'](str);\n}", "test_cases": [["160\n1 1 2 0\n160\n1 0 2 10\n0", "10 1\n50 1\n100 1\n\n10 1\n100 2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar j=0;\nwhile(true){\n   var v=Arr.shift()-0;\n   if(v==0)break;\n   var m=(Arr.shift()).split(\" \").map(Number);\n   var money=(10*m[0]+50*m[1]+100*m[2]+500*m[3])-v;\n   var M=[0,0,0,0];\n   while(500<=money){M[3]++;money-=500;}\n   while(100<=money){M[2]++;money-=100;}\n   while(50<=money){M[1]++;money-=50;}\n   while(10<=money){M[0]++;money-=10;}\n   var coin=[10,50,100,500];\n   var str=\"\";\n   m.forEach(function(v,i){\n      if(v>M[i])str+=coin[i]+\" \"+(v-M[i])+\"\\n\";\n   });\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p01140_1", "type": "JavaScript", "obfuscated": "var a0_0x559e05 = a0_0x4efe;\nfunction a0_0x4efe(jjBRYH, key) {\n    var stringArray = a0_0x3311();\n    a0_0x4efe = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4efe(jjBRYH, key);\n}\nvar input = require('fs')[a0_0x559e05(0x0)](a0_0x559e05(0x1), a0_0x559e05(0x2));\nvar arr = input[a0_0x559e05(0x3)]()[a0_0x559e05(0x4)]('\\x0a');\nwhile (!![]) {\n    var str = arr[a0_0x559e05(0x5)]();\n    if (str == a0_0x559e05(0x6))\n        break;\n    var ary = str[a0_0x559e05(0x4)]('\\x20')[a0_0x559e05(0x7)](Number);\n    var h = [];\n    var w = [];\n    for (var i = 0x0; i < ary[0x0]; i++)\n        h['push'](arr[a0_0x559e05(0x5)]() - 0x0);\n    for (var i = 0x0; i < ary[0x1]; i++)\n        w[a0_0x559e05(0x8)](arr[a0_0x559e05(0x5)]() - 0x0);\n    var H = {};\n    for (var i = 0x0; i < h['length']; i++) {\n        var sum = 0x0;\n        for (var j = i; j < h[a0_0x559e05(0x9)]; j++) {\n            if (j != i)\n                sum += h[j];\n            H['hasOwnProperty'](h[i] + sum) ? H[h[i] + sum]++ : H[h[i] + sum] = 0x1;\n        }\n    }\n    var W = {};\n    for (var i = 0x0; i < w[a0_0x559e05(0x9)]; i++) {\n        var sum = 0x0;\n        for (var j = i; j < w['length']; j++) {\n            if (j != i)\n                sum += w[j];\n            W[a0_0x559e05(0xa)](w[i] + sum) ? W[w[i] + sum]++ : W[w[i] + sum] = 0x1;\n        }\n    }\n    var cnt = 0x0;\n    for (var k in H) {\n        if (W[a0_0x559e05(0xa)](k))\n            cnt += H[k] * W[k];\n    }\n    console[a0_0x559e05(0xb)](cnt);\n}\nfunction a0_0x3311() {\n    var _0xdc00a1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'push',\n        'length',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0x3311 = function () {\n        return _0xdc00a1;\n    };\n    return a0_0x3311();\n}", "test_cases": [["3 3\n1\n1\n4\n2\n3\n1\n1 2\n10\n10\n10\n0 0", "6\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var str=arr.shift();\n   if(str==\"0 0\")break;\n   var ary=str.split(\" \").map(Number);\n   var h=[];\n   var w=[];\n   for(var i=0;i<ary[0];i++)h.push(arr.shift()-0);\n   for(var i=0;i<ary[1];i++)w.push(arr.shift()-0);\n   var H={};\n   for(var i=0;i<h.length;i++){\n      var sum=0;\n      for(var j=i;j<h.length;j++){\n         if(j!=i)sum+=h[j];\n         (H.hasOwnProperty(h[i]+sum))?H[h[i]+sum]++:H[h[i]+sum]=1;\n      }\n   }\n   var W={};\n   for(var i=0;i<w.length;i++){\n      var sum=0;\n      for(var j=i;j<w.length;j++){\n         if(j!=i)sum+=w[j];\n         (W.hasOwnProperty(w[i]+sum))?W[w[i]+sum]++:W[w[i]+sum]=1;\n      }\n   }\n   var cnt=0;\n   for(var k in H){\n      if(W.hasOwnProperty(k))cnt+=H[k]*W[k];\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01803_1", "type": "JavaScript", "obfuscated": "var a0_0x8873f8 = a0_0x41a3;\nfunction a0_0x41a3(jdbmRY, key) {\n    var stringArray = a0_0x36b1();\n    a0_0x41a3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41a3(jdbmRY, key);\n}\nvar input = require('fs')[a0_0x8873f8(0x0)](a0_0x8873f8(0x1), a0_0x8873f8(0x2));\nvar arr = input[a0_0x8873f8(0x3)]()[a0_0x8873f8(0x4)]('\\x0a');\nfunction a0_0x36b1() {\n    var _0x1ce09f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'test',\n        'max',\n        'slice'\n    ];\n    a0_0x36b1 = function () {\n        return _0x1ce09f;\n    };\n    return a0_0x36b1();\n}\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var Arr = arr['splice'](0x0, n);\n    var obj = {};\n    var max = 0x0;\n    Arr['forEach'](function (v) {\n        var _0x149050 = a0_0x41a3;\n        var str = v;\n        var s = str[0x0];\n        var flag = ![];\n        for (var i = 0x0; i < str[_0x149050(0x5)]; i++) {\n            if (flag)\n                s += str[i];\n            flag = /[aiueo]/[_0x149050(0x6)](str[i]) ? !![] : ![];\n        }\n        obj[s] = !![];\n        max = Math[_0x149050(0x7)](max, s[_0x149050(0x5)]);\n    });\n    for (var i = 0x1; i <= max; i++) {\n        var Obj = {};\n        for (var key in obj) {\n            Obj[key[a0_0x8873f8(0x8)](0x0, i)] = !![];\n        }\n        if (Object['keys'](Obj)[a0_0x8873f8(0x5)] == n) {\n            console['log'](i);\n            break;\n        }\n        if (i == max)\n            console['log'](-0x1);\n    }\n}", "test_cases": [["3\nhaneda\noookayama\ntsu\n2\nazusa\nazishirabe\n2\nsnuke\nsnake\n4\nhaneda\nhonda\nhanamaki\nhawaii\n0", "1\n4\n-1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var Arr = arr.splice(0,n);\n   var obj = {};\n   var max = 0;\n   Arr.forEach(function(v){\n      var str = v;\n      var s = str[0];\n      var flag = false;\n      for (var i = 0; i < str.length; i++) {\n         if (flag) s += str[i];\n         flag = (/[aiueo]/.test(str[i])) ? true : false;\n      }\n      obj[s] = true;\n      max = Math.max(max, s.length);\n   });\n   for (var i = 1; i <= max; i++) {\n      var Obj = {};\n      for (var key in obj) {\n         Obj[key.slice(0, i)] = true;\n      }\n      if (Object.keys(Obj).length == n) {\n         console.log(i);\n         break;\n      }\n      if (i == max) console.log(-1);\n   }\n}", "language": "JavaScript"}
{"filename": "p02318_1", "type": "JavaScript", "obfuscated": "var a0_0x44c296 = a0_0x4563;\nfunction LD(a, b) {\n    var _0x1f3cf1 = a0_0x4563;\n    var ar = new Array();\n    for (var i = 0x0; i < a[_0x1f3cf1(0x0)] + 0x1; i++) {\n        if ('FILBa' === _0x1f3cf1(0x1)) {\n            ar[i][j] = Math[_0x1f3cf1(0x2)](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1] + 0x1);\n        } else {\n            var subar = new Array();\n            for (var j = 0x0; j < b['length'] + 0x1; j++) {\n                subar[_0x1f3cf1(0x3)](0x0);\n            }\n            ar[_0x1f3cf1(0x3)](subar);\n        }\n    }\n    for (var i = 0x0; i < a[_0x1f3cf1(0x0)] + 0x1; i++) {\n        ar[i][0x0] = i;\n    }\n    for (var i = 0x0; i < b[_0x1f3cf1(0x0)] + 0x1; i++) {\n        if ('mRigv' !== _0x1f3cf1(0x4)) {\n            ar[0x0][i] = i;\n        } else {\n            if (a[_0x1f3cf1(0x5)](i - 0x1) == b['charAt'](j - 0x1)) {\n                ar[i][j] = Math[_0x1f3cf1(0x2)](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1]);\n            } else {\n                ar[i][j] = Math[_0x1f3cf1(0x2)](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1] + 0x1);\n            }\n        }\n    }\n    for (var i = 0x1; i < a['length'] + 0x1; i++) {\n        for (var j = 0x1; j < b[_0x1f3cf1(0x0)] + 0x1; j++) {\n            if (a[_0x1f3cf1(0x5)](i - 0x1) == b['charAt'](j - 0x1)) {\n                if (_0x1f3cf1(0x6) !== _0x1f3cf1(0x7)) {\n                    ar[i][j] = Math[_0x1f3cf1(0x2)](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1]);\n                } else {\n                    ar[i][j] = Math['min'](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1]);\n                }\n            } else {\n                ar[i][j] = Math[_0x1f3cf1(0x2)](ar[i - 0x1][j] + 0x1, ar[i][j - 0x1] + 0x1, ar[i - 0x1][j - 0x1] + 0x1);\n            }\n        }\n    }\n    return ar[a[_0x1f3cf1(0x0)]][b[_0x1f3cf1(0x0)]];\n}\nvar input = require('fs')[a0_0x44c296(0x8)](a0_0x44c296(0x9), a0_0x44c296(0xa));\nfunction a0_0x202d() {\n    var _0x340d23 = [\n        'length',\n        'ACwaf',\n        'min',\n        'push',\n        'KmrKU',\n        'charAt',\n        'lRpLN',\n        'sDOMq',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x202d = function () {\n        return _0x340d23;\n    };\n    return a0_0x202d();\n}\nvar strings = input[a0_0x44c296(0xb)]('\\x0a');\nfunction a0_0x4563(QKqrfH, key) {\n    var stringArray = a0_0x202d();\n    a0_0x4563 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4563(QKqrfH, key);\n}\nconsole[a0_0x44c296(0xc)](LD(strings[0x0], strings[0x1]));", "test_cases": [["acac\nacm", "2"], ["icpc\nicpc", "0"]], "original": "function LD(a, b){\n    var ar = new Array();\n    for(var i = 0; i < a.length + 1; i++){\n        var subar = new Array();\n        for(var j = 0; j < b.length + 1; j++){\n            subar.push(0);\n        }\n        ar.push(subar);\n    }\n\n    for(var i = 0; i < a.length + 1; i++){\n        ar[i][0] = i;\n    }\n\n    for(var i = 0; i < b.length + 1; i++){\n        ar[0][i] = i;\n    }\n\n    for(var i = 1; i < a.length + 1; i++){\n        for(var j = 1; j < b.length + 1; j++){\n            if(a.charAt(i - 1) == b.charAt(j - 1)){\n                ar[i][j] = Math.min(ar[i - 1][j] + 1, ar[i][j - 1] + 1, ar[i - 1][j - 1]);\n            }else{\n                ar[i][j] = Math.min(ar[i - 1][j] + 1, ar[i][j - 1] + 1, ar[i - 1][j - 1] + 1);\n            }\n        }\n    }\n    return ar[a.length][b.length];\n} \n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar strings = input.split('\\n');\n\nconsole.log(LD(strings[0], strings[1]));", "language": "JavaScript"}
{"filename": "p02379_1", "type": "JavaScript", "obfuscated": "function a0_0x3f4c() {\n    var _0x518196 = [\n        'stdin',\n        'stdout',\n        'line',\n        'split',\n        'sqrt',\n        'log',\n        'toFixed',\n        'end'\n    ];\n    a0_0x3f4c = function () {\n        return _0x518196;\n    };\n    return a0_0x3f4c();\n}\nvar a0_0x50f447 = a0_0x1c31;\nvar reader = require('readline')['createInterface']({\n    'input': process[a0_0x50f447(0x0)],\n    'output': process[a0_0x50f447(0x1)]\n});\nreader['on'](a0_0x50f447(0x2), function (line) {\n    var _0x13515b = a0_0x1c31;\n    var a = line[_0x13515b(0x3)]('\\x20');\n    var b = parseInt(a[0x0], 0xa);\n    var c = parseInt(a[0x1], 0xa);\n    var d = parseInt(a[0x2], 0xa);\n    var e = parseInt(a[0x3], 0xa);\n    b = Math[_0x13515b(0x4)]((b - d) * (b - d) + (c - e) * (c - e));\n    console[_0x13515b(0x5)](b[_0x13515b(0x6)](0x8));\n    process['exit']();\n});\nfunction a0_0x1c31(CEQnjA, key) {\n    var stringArray = a0_0x3f4c();\n    a0_0x1c31 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c31(CEQnjA, key);\n}\nprocess[a0_0x50f447(0x0)]['on'](a0_0x50f447(0x7), function () {\n});", "test_cases": [["0 0 1 1", "1.41421356"]], "original": "var reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var b = parseInt(a[0],10);\n  var c = parseInt(a[1],10);\n  var d = parseInt(a[2],10);\n  var e = parseInt(a[3],10);\n  b = Math.sqrt((b-d)*(b-d)+(c-e)*(c-e));\n  console.log(b.toFixed(8));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02538_1", "type": "JavaScript", "obfuscated": "const a0_0x322190 = a0_0x19c6;\nfunction Main(input) {\n    const _0x45b4e6 = a0_0x19c6;\n    input = input[_0x45b4e6(0x0)]('\\x0a')[_0x45b4e6(0x1)](v => v[_0x45b4e6(0x0)]('\\x20'));\n    const [n, q] = input[0x0][_0x45b4e6(0x1)](v => +v);\n    input['shift']();\n    const mod = 0x3b800001;\n    const str = new Array(n)[_0x45b4e6(0x2)](0x1);\n    input[_0x45b4e6(0x1)](value => {\n        const _0x32ba39 = a0_0x19c6;\n        if (_0x32ba39(0x3) !== 'ajERd') {\n            const [l, r, d] = [\n                value[0x0] - 0x1,\n                value[0x1] - 0x1,\n                +value[0x2]\n            ];\n            for (let i = l; i <= r; i++) {\n                str[i] = d;\n            }\n            let num = 0x0;\n            for (let s = 0x0; s < n; s++) {\n                num = (num * 0xa + str[s]) % mod;\n            }\n            console[_0x32ba39(0x4)](num);\n        } else {\n            return parseInt(v, 0xa);\n        }\n    });\n}\nfunction a0_0x27e7() {\n    const _0x1c2647 = [\n        'split',\n        'map',\n        'fill',\n        'qssMk',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x27e7 = function () {\n        return _0x1c2647;\n    };\n    return a0_0x27e7();\n}\nfunction a0_0x19c6(UoVtwW, key) {\n    const stringArray = a0_0x27e7();\n    a0_0x19c6 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x19c6(UoVtwW, key);\n}\nfunction toInt(v) {\n    return parseInt(v, 0xa);\n}\nMain(require('fs')[a0_0x322190(0x5)](a0_0x322190(0x6), 'utf8'));", "test_cases": [["8 5\n3 6 2\n1 4 7\n3 8 3\n2 2 2\n4 5 1", "11222211\n77772211\n77333333\n72333333\n72311333"], ["200000 1\n123 456 7", "641437905"]], "original": "function Main(input) {\n  input = input.split(\"\\n\").map(v => v.split(\" \"));\n  const [n, q] = input[0].map(v => +v);\n  input.shift();\n  \n  \n  const mod = 998244353;\n  const str = (new Array(n)).fill(1);\n  \n  input.map(value => {\n    const [l, r, d] = [(value[0] - 1), (value[1] - 1), +value[2]];\n    for (let i = l; i <= r; i++) {\n      str[i] = d;\n    }\n\n    let num = 0;\n    for (let s = 0; s < n; s++) {\n      num = (num * 10 + str[s]) % mod;\n    }\n    console.log(num);\n  });  \n}\n\nfunction toInt(v) {\n    //return BigInt(v);\n    return parseInt(v, 10);\n}\n// 魔法\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02722_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x3dfe87 = a0_0x141a;\nfunction a0_0x141a(dSoPci, key) {\n    const stringArray = a0_0x2b37();\n    a0_0x141a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x141a(dSoPci, key);\n}\nfunction arrayOfDivisors(n) {\n    const _0x5844e0 = a0_0x141a;\n    const divisor = new Array();\n    divisor[0x0] = 0x1;\n    for (let i = 0x2; i <= Math[_0x5844e0(0x0)](n); i++) {\n        if (_0x5844e0(0x1) !== _0x5844e0(0x2)) {\n            if (n % i === 0x0) {\n                divisor['push'](i);\n            }\n        } else {\n            divIncluded++;\n        }\n    }\n    const p = divisor['length'];\n    if (Math['sqrt'](n) !== divisor[p - 0x1]) {\n        divisor[_0x5844e0(0x3)](n / divisor[p - 0x1]);\n    }\n    for (let i = p - 0x2; 0x0 <= i; i--) {\n        divisor[_0x5844e0(0x3)](n / divisor[i]);\n    }\n    return divisor;\n}\nfunction a0_0x2b37() {\n    const _0xef8b41 = [\n        'sqrt',\n        'OlqlK',\n        'JWwHm',\n        'push',\n        'trim',\n        'length',\n        'shift',\n        'indexOf',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x2b37 = function () {\n        return _0xef8b41;\n    };\n    return a0_0x2b37();\n}\n(function main(input) {\n    const _0x2ac76f = a0_0x141a;\n    const n = Number(input[_0x2ac76f(0x4)]());\n    const subOnly = arrayOfDivisors(n - 0x1)[_0x2ac76f(0x5)] - 0x1;\n    let divIncluded = 0x0;\n    const divOfN = arrayOfDivisors(n);\n    divOfN[_0x2ac76f(0x6)]();\n    for (let d of divOfN) {\n        let n1 = n;\n        do {\n            n1 /= d;\n        } while (n1 % d === 0x0);\n        if (n1 === 0x1) {\n            divIncluded++;\n        } else if (arrayOfDivisors(n1 - 0x1)[_0x2ac76f(0x7)](d) > -0x1) {\n            divIncluded++;\n        }\n    }\n    console[_0x2ac76f(0x8)](subOnly + divIncluded);\n}(require('fs')[a0_0x3dfe87(0x9)]('/dev/stdin', a0_0x3dfe87(0xa))));", "test_cases": [["6", "3"], ["3141", "13"], ["314159265358", "9"]], "original": "\"use strict\";\n\nfunction arrayOfDivisors(n){\n  const divisor = new Array();\n  divisor[0] = 1;\n  \n  for(let i = 2; i <= Math.sqrt(n); i++){\n    if(n % i === 0){\n      divisor.push(i);\n    }\n  }\n  \n  const p = divisor.length;\n  \n  if(Math.sqrt(n) !== divisor[p - 1]){\n    divisor.push(n / divisor[p - 1]);\n  }\n  \n  for(let i = p - 2; 0 <= i; i--){\n    divisor.push(n / divisor[i]);\n  }\n  \n  return divisor;\n}\n\n(function main(input){\n  const n = Number(input.trim());\n  \n  const subOnly = arrayOfDivisors(n - 1).length - 1;\n  \n  let divIncluded = 0;\n  \n  const divOfN = arrayOfDivisors(n);\n  divOfN.shift();\n  for (let d of divOfN){\n    let n1 = n;\n    do{\n      n1 /= d;\n    } while (n1 % d === 0);\n    \n    if (n1 === 1){\n      divIncluded++;\n    } else if (arrayOfDivisors(n1 - 1).indexOf(d) > -1){\n      divIncluded++;\n    }\n  }\n  \n  console.log(subOnly + divIncluded);\n  \n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02780_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x27dc(OhzXJm, key) {\n    const stringArray = a0_0x2070();\n    a0_0x27dc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x27dc(OhzXJm, key);\n}\nfunction a0_0x2070() {\n    const _0x258c8d = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'toFixed',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2070 = function () {\n        return _0x258c8d;\n    };\n    return a0_0x2070();\n}\nconst a0_0x2c4475 = a0_0x27dc;\nconst fact = n => {\n    if (n === 0x1)\n        0x1;\n    return n + fact(n - 0x1);\n};\nfunction Main(input) {\n    const _0xdf6896 = a0_0x27dc;\n    input = input[_0xdf6896(0x0)]()[_0xdf6896(0x1)]('\\x0a');\n    const array = input[0x0][_0xdf6896(0x1)]('\\x20')['map'](s => parseInt(s));\n    const N = array[0x0];\n    const K = array[0x1];\n    let A = input[0x1][_0xdf6896(0x1)]('\\x20')[_0xdf6896(0x2)](s => parseInt(s));\n    let dp = {};\n    for (let i = 0x0; i < N; ++i) {\n        const a = A[i];\n        if (dp[a])\n            continue;\n        let tmp = 0x0;\n        for (let j = a; j > 0x0; --j) {\n            tmp += j;\n        }\n        dp[a] = tmp;\n    }\n    let result = 0x0;\n    for (let i = 0x0; i < N - (K - 0x1); ++i) {\n        let total = 0x0;\n        for (let j = i; j < i + K; ++j) {\n            total += dp[A[j]] * 0x1 / A[j];\n        }\n        result = Math['max'](total, result);\n    }\n    console[_0xdf6896(0x3)](result[_0xdf6896(0x4)](0xc));\n}\nMain(require('fs')['readFileSync'](a0_0x2c4475(0x5), a0_0x2c4475(0x6)));", "test_cases": [["5 3\n1 2 2 4 5", "7.000000000000"], ["4 1\n6 6 6 6", "3.500000000000"], ["10 4\n17 13 13 12 15 20 10 13 17 11", "32.000000000000"]], "original": "'use strict'\n\nconst fact = (n) => {\n  if (n === 1) 1\n  return n + fact(n - 1)\n}\n\nfunction Main(input) {\n  input = input.trim().split('\\n')\n  const array = input[0].split(' ').map(s => parseInt(s))\n  const N = array[0]\n  const K = array[1]\n\n  let A = input[1].split(' ').map(s => parseInt(s))\n\n  let dp = {}\n  // 各値の期待値を計算する\n  for(let i = 0; i < N; ++i) {\n    const a = A[i]\n    if (dp[a]) continue\n\n    let tmp = 0\n    for(let j = a; j > 0; --j) {\n      tmp += j\n    }\n    dp[a] = tmp\n  }\n\n  let result = 0\n\n  // 前から順番に組み合わせる\n  for (let i = 0; i < N - (K - 1); ++i) {\n\n    let total = 0\n    for(let j = i; j < i + K; ++j) {\n      total += dp[A[j]] * 1/A[j]\n    }\n\n    result = Math.max(total, result)\n  }\n\n  console.log(result.toFixed(12))\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02890_1", "type": "JavaScript", "obfuscated": "function Main(arg) {\n    var _0x115ec8 = a0_0xb4a1;\n    var N = arg['split']('\\x0a')[0x0] - 0x0;\n    var A = arg['split']('\\x0a')[0x1]['split']('\\x20')[_0x115ec8(0x0)](v => v - 0x0);\n    var tmp = new Set(A);\n    var ans = [];\n    ans[_0x115ec8(0x1)](N);\n    for (var K = 0x2; K <= N; K++) {\n        if (tmp['size'] < K) {\n            ans[_0x115ec8(0x1)](0x0);\n        } else {\n            ans['push'](Math[_0x115ec8(0x2)](tmp[_0x115ec8(0x3)] / K));\n        }\n    }\n    console[_0x115ec8(0x4)](ans[_0x115ec8(0x5)]('\\x0a')['toString']());\n    return;\n}\nfunction a0_0x2345() {\n    var _0x463089 = [\n        'map',\n        'push',\n        'floor',\n        'size',\n        'log',\n        'join'\n    ];\n    a0_0x2345 = function () {\n        return _0x463089;\n    };\n    return a0_0x2345();\n}\nfunction a0_0xb4a1(uAJNNH, key) {\n    var stringArray = a0_0x2345();\n    a0_0xb4a1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xb4a1(uAJNNH, key);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2 1 2", "3\n1\n0"], ["5\n1 2 3 4 5", "5\n2\n1\n1\n1"], ["4\n1 3 3 3", "4\n1\n0\n0"]], "original": "function Main(arg) {\n \n    var N = arg.split(\"\\n\")[0]-0;\n    var A = arg.split(\"\\n\")[1].split(\" \").map(v=>v-0);\n \n    var tmp = new Set(A);\n    var ans = [];\n\n    ans.push(N);\n\n    for (var K = 2; K <= N; K++){\n        if (tmp.size < K) {\n            ans.push(0);\n        }\n        else {\n            ans.push(Math.floor(tmp.size / K));\n        }\n    }\n\n    console.log(ans.join(\"\\n\").toString());\n\n    return;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02941_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x216db1 = a0_0x5bb8;\nconst arg_str = require('fs')[a0_0x216db1(0x0)](a0_0x216db1(0x1), a0_0x216db1(0x2));\nconst args_lines = arg_str[a0_0x216db1(0x3)]('\\x0a');\nfunction a0_0x1d7b() {\n    const _0x392573 = [\n        'readFileSync',\n        '/dev/stdin',\n        'UTF-8',\n        'split',\n        'map',\n        'indexOf',\n        'find',\n        'log'\n    ];\n    a0_0x1d7b = function () {\n        return _0x392573;\n    };\n    return a0_0x1d7b();\n}\nconst n = args_lines[0x0];\nconst a = args_lines[0x1][a0_0x216db1(0x3)]('\\x20')[a0_0x216db1(0x4)](x => parseInt(x));\nconst b = args_lines[0x2]['split']('\\x20')['map'](x => parseInt(x));\nfunction a0_0x5bb8(DUPzOV, key) {\n    const stringArray = a0_0x1d7b();\n    a0_0x5bb8 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5bb8(DUPzOV, key);\n}\nlet cnt = 0x0;\nlet current_b = b;\nwhile (!![]) {\n    const max_index = current_b[a0_0x216db1(0x5)](Math['max'](...current_b));\n    if (max_index == 0x0) {\n        current_b[max_index] = current_b[max_index] - current_b[0x1] - current_b[n - 0x1];\n    } else if (max_index == n - 0x1) {\n        current_b[max_index] = current_b[max_index] - current_b[n - 0x2] - current_b[0x0];\n    } else {\n        current_b[max_index] = current_b[max_index] - current_b[max_index - 0x1] - current_b[max_index + 0x1];\n    }\n    cnt++;\n    if (JSON['stringify'](current_b) == JSON['stringify'](a)) {\n        console['log'](cnt);\n        break;\n    }\n    if (current_b[a0_0x216db1(0x6)](x => x < 0x1)) {\n        console[a0_0x216db1(0x7)](-0x1);\n        break;\n    }\n}", "test_cases": [["3\n1 1 1\n13 5 7", "4"], ["4\n1 2 3 4\n2 3 4 5", "-1"], ["5\n5 6 5 2 1\n9817 1108 6890 4343 8704", "25"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args_lines = arg_str.split('\\n')\nconst n = args_lines[0]\nconst a = args_lines[1].split(' ').map(x=>parseInt(x))\nconst b = args_lines[2].split(' ').map(x=>parseInt(x))\n\nlet cnt = 0\n\nlet current_b = b\n\nwhile (true){\n    const max_index = current_b.indexOf(Math.max(...current_b))\n\n    if(max_index == 0){\n        current_b[max_index] = current_b[max_index] - current_b[1] - current_b[n - 1]\n    }else if(max_index == (n - 1)){\n        current_b[max_index] = current_b[max_index] - current_b[n - 2] - current_b[0]\n    }else{\n        current_b[max_index] = current_b[max_index] - current_b[max_index - 1] - current_b[max_index + 1]\n    }\n    cnt++\n    if(JSON.stringify(current_b) == JSON.stringify(a)){\n        console.log(cnt)\n        break\n    }\n    if(current_b.find(x=>x<1)){\n        console.log(-1)\n        break\n    }\n}\n", "language": "JavaScript"}
{"filename": "p03171_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1fe7(ozcGSf, key) {\n    var stringArray = a0_0x1a72();\n    a0_0x1fe7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1fe7(ozcGSf, key);\n}\nvar a0_0x140176 = a0_0x1fe7;\nfunction a0_0x1a72() {\n    var _0x5b63c6 = [\n        'map',\n        'fill',\n        'max',\n        'min',\n        'reduce',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1a72 = function () {\n        return _0x5b63c6;\n    };\n    return a0_0x1a72();\n}\nfunction solve(N, A) {\n    var _0x2672f4 = a0_0x1fe7;\n    var dp = new Array(N + 0x1)['fill'](0x0)[_0x2672f4(0x0)](e => new Array(N + 0x1)[_0x2672f4(0x1)](0x0));\n    var row = 0x1;\n    var col = 0x1;\n    while (col <= N) {\n        var c = col;\n        for (var r = row; r <= N; r++) {\n            if (c > N) {\n                break;\n            }\n            if (c === r) {\n                dp[r][c] = A[r - 0x1];\n            } else if (c === r + 0x1) {\n                dp[r][c] = Math['max'](A[r - 0x1], A[c - 0x1]);\n            } else {\n                dp[r][c] = Math[_0x2672f4(0x2)](A[r - 0x1] + Math[_0x2672f4(0x3)](dp[r + 0x1][c - 0x1], dp[r + 0x2][c]), A[c - 0x1] + Math[_0x2672f4(0x3)](dp[r + 0x1][c - 0x1], dp[r][c - 0x2]));\n            }\n            c++;\n        }\n        col++;\n    }\n    var taro = dp[0x1][N];\n    var sum = A[_0x2672f4(0x4)]((acc, current) => acc + current);\n    return taro - (sum - taro);\n}\nfunction main(input) {\n    var _0x17041b = a0_0x1fe7;\n    var lines = input[_0x17041b(0x5)]('\\x0a');\n    var N = parseInt(lines[0x0]);\n    var A = lines[0x1]['split']('\\x20')[_0x17041b(0x0)](l => parseInt(l));\n    var ans = solve(N, A);\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x140176(0x6)](a0_0x140176(0x7), a0_0x140176(0x8)));", "test_cases": [["4\n10 80 90 30", "10"], ["3\n10 100 10", "-80"], ["1\n10", "10"], ["10\n1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000 1", "4999999995"], ["6\n4 2 9 7 1 5", "2"]], "original": "'use strict'\n\nfunction solve(N, A) {\n  var dp = new Array(N+1).fill(0).map(e => new Array(N+1).fill(0))\n  var row = 1\n  var col = 1\n  while (col <= N) {\n    var c = col\n    for (var r = row; r <= N; r++) {\n      if (c > N) {\n        break\n      }\n      if (c === r) {\n        dp[r][c] = A[r-1]\n      } else if (c === (r+1)) {\n        dp[r][c] = Math.max(A[r-1], A[c-1])\n      } else {\n        dp[r][c] = Math.max(A[r-1] + Math.min(dp[r+1][c-1], dp[r+2][c]), A[c-1] + Math.min(dp[r+1][c-1], dp[r][c-2]))\n      }\n      c++\n    }\n    col++\n  }\n  var taro = dp[1][N]\n  var sum = A.reduce((acc, current) => acc + current)\n  return taro - (sum - taro)\n}\n\nfunction main(input) {\n  var lines = input.split(\"\\n\")\n  var N = parseInt(lines[0])\n  var A = lines[1].split(' ').map(l => parseInt(l))\n  var ans = solve(N, A)\n  console.log(ans)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03222_1", "type": "JavaScript", "obfuscated": "function a0_0xd189(zvsAzv, key) {\n    var stringArray = a0_0x511a();\n    a0_0xd189 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd189(zvsAzv, key);\n}\nfunction a0_0x511a() {\n    var _0x249c8a = [\n        'split',\n        'map',\n        'fill',\n        'toString',\n        'filter',\n        '000000',\n        'slice',\n        'forEach',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x511a = function () {\n        return _0x249c8a;\n    };\n    return a0_0x511a();\n}\nvar a0_0x39f542 = a0_0xd189;\nfunction Main(input) {\n    var _0x4e5d9a = a0_0xd189;\n    input = input[_0x4e5d9a(0x0)]('\\x20')[_0x4e5d9a(0x1)](a => ~~a);\n    var H = input[0x0];\n    var W = input[0x1];\n    var K = input[0x2];\n    var mod = 0xa ** 0x9 + 0x7;\n    if (W == 0x1)\n        return 0x1;\n    var validAmidaList = Array(0x2 ** (W - 0x1))[_0x4e5d9a(0x2)](0x0)[_0x4e5d9a(0x1)]((a, b) => b)['map'](a => a[_0x4e5d9a(0x3)](0x2))[_0x4e5d9a(0x4)](a => !/11/['test'](a))[_0x4e5d9a(0x1)](a => _0x4e5d9a(0x5) + a)['map'](a => a[_0x4e5d9a(0x6)](0x1 - W))[_0x4e5d9a(0x1)](a => '0' + a + '0');\n    var dp = Array(H + 0x1);\n    for (var i = 0x0; i <= H; i++) {\n        dp[i] = Array(W)[_0x4e5d9a(0x2)](0x0);\n    }\n    dp[0x0][0x0] = 0x1;\n    for (var i = 0x1; i <= H; i++) {\n        validAmidaList[_0x4e5d9a(0x7)](function (elem) {\n            for (var j = 0x0; j < W; j++) {\n                ({\n                    '10': a => dp[i][j] += dp[i - 0x1][j - 0x1],\n                    '01': a => dp[i][j] += dp[i - 0x1][j + 0x1],\n                    '00': a => dp[i][j] += dp[i - 0x1][j]\n                }[elem[j] + elem[j + 0x1]]());\n                dp[i][j] %= mod;\n            }\n        });\n    }\n    return dp[H][K - 0x1];\n}\nif (typeof require !== 'undefined')\n    console[a0_0x39f542(0x8)](Main(require('fs')[a0_0x39f542(0x9)](a0_0x39f542(0xa), a0_0x39f542(0xb))));", "test_cases": [["1 3 2", "1"], ["1 3 1", "2"], ["2 3 3", "1"], ["2 3 1", "5"], ["7 1 1", "1"], ["15 8 5", "437760187"]], "original": "function Main(input){\n  input = input.split(\" \").map(a=>~~a)\n\tvar H = input[0];\n  var W = input[1];\n  var K = input[2];\n  var mod = 10**9+7;\n  \n  if(W == 1)return 1;\n  \n  var validAmidaList = Array(2**(W-1))\n  \t.fill(0)\n    .map((a,b)=>b)\n    .map(a=>a.toString(2))\n    .filter(a=>!/11/.test(a))\n    .map(a=>\"000000\"+a)\n    .map(a=>a.slice(1-W))\n    .map(a=>\"0\"+a+\"0\")\n  \n  var dp = Array(H+1);\n  for(var i = 0; i <= H;i++){\n  \tdp[i] = Array(W).fill(0);\n  }\n  dp[0][0] = 1;\n  \n  for(var i = 1; i <= H;i++){\n  \tvalidAmidaList.forEach(function(elem){\n    \tfor(var j = 0; j < W; j++){\n      \t({\n        \t\"10\":a=>dp[i][j] += dp[i-1][j-1],\n          \"01\":a=>dp[i][j] += dp[i-1][j+1],\n          \"00\":a=>dp[i][j] += dp[i-1][j]\n        })[elem[j]+elem[j+1]]();\n        dp[i][j] %= mod;\n      }\n    })\n  }\n  \n  return dp[H][K-1];\n}\n\nif(typeof require !== 'undefined')console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")));", "language": "JavaScript"}
{"filename": "p03223_1", "type": "JavaScript", "obfuscated": "var a0_0x312b3b = a0_0x5c6f;\nconsole[a0_0x312b3b(0x0)](main(require('fs')[a0_0x312b3b(0x1)](a0_0x312b3b(0x2), a0_0x312b3b(0x3))));\nfunction main(s) {\n    var _0x34b7a3 = a0_0x5c6f;\n    s = s['split']('\\x0a')[_0x34b7a3(0x4)](a => +a);\n    var n = s[0x0];\n    s[0x0] = s[n];\n    s[_0x34b7a3(0x5)]();\n    s[_0x34b7a3(0x6)]((a, b) => a - b);\n    var ans = 0x0;\n    var m = n + 0x1 >> 0x1;\n    for (var i = 0x0; i < m; i++) {\n        ans -= s[i] * 0x2;\n    }\n    for (; i < n; i++) {\n        ans += s[i] * 0x2;\n    }\n    if (n % 0x2 === 0x0)\n        return ans - s[m] + s[m - 0x1];\n    if (s[m - 0x1] + s[m - 0x2] > s[m - 0x1] * 0x3 - s[m])\n        return ans + s[m - 0x1] + s[m - 0x2];\n    else\n        return ans + s[m - 0x1] * 0x3 - s[m];\n}\nfunction a0_0x5c6f(NwhMBI, key) {\n    var stringArray = a0_0x6fa0();\n    a0_0x5c6f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5c6f(NwhMBI, key);\n}\nfunction a0_0x6fa0() {\n    var _0x1af73f = [\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'pop',\n        'sort'\n    ];\n    a0_0x6fa0 = function () {\n        return _0x1af73f;\n    };\n    return a0_0x6fa0();\n}", "test_cases": [["5\n6\n8\n1\n2\n3", "21"], ["6\n3\n1\n4\n1\n5\n9", "25"], ["3\n5\n5\n1", "8"]], "original": "console.log(main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\")));\nfunction main(s){\n  s = s.split(\"\\n\").map(a=>+a);\n  var n = s[0];\n  s[0] = s[n];\n  s.pop();\n  s.sort((a,b)=>a-b);\n  var ans = 0;\n  var m = n + 1 >> 1;\n  for(var i = 0; i < m; i++){\n    ans -= s[i] * 2;\n  }\n  for(; i < n; i++){\n    ans += s[i] * 2;\n  }\n  if(n % 2 === 0)return ans - s[m] + s[m-1];\n  if(s[m-1]+s[m-2] > s[m-1]*3-s[m])return ans + s[m-1] + s[m-2];\n  else return ans + s[m-1]*3 - s[m];\n}", "language": "JavaScript"}
{"filename": "p03320_1", "type": "JavaScript", "obfuscated": "function a0_0x16f3() {\n    var _0x1b6b63 = [\n        'log',\n        'join',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x16f3 = function () {\n        return _0x1b6b63;\n    };\n    return a0_0x16f3();\n}\nfunction a0_0x3cfa(onkkAw, key) {\n    var stringArray = a0_0x16f3();\n    a0_0x3cfa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3cfa(onkkAw, key);\n}\nvar a0_0x231292 = a0_0x3cfa;\nfunction Main(s) {\n    var _0x197158 = a0_0x3cfa;\n    k = +s;\n    var ans = [];\n    var x = 0x1;\n    var y = '';\n    for (var i = 0x0; i < k; i++) {\n        ans[i] = x + y;\n        if (x === 0x9) {\n            x = 0x1;\n            y += '9';\n        } else\n            x++;\n    }\n    console[_0x197158(0x0)](ans[_0x197158(0x1)]('\\x0a'));\n}\nMain(require('fs')[a0_0x231292(0x2)]('/dev/stdin', a0_0x231292(0x3)));", "test_cases": [["10", "1\n2\n3\n4\n5\n6\n7\n8\n9\n19"]], "original": "function Main(s){\n  k = +s;\n  var ans = [];\n  var x = 1;\n  var y = \"\";\n  for(var i = 0; i < k; i++){\n    ans[i] = x + y;\n    if(x === 9){\n      x = 1; y += \"9\";\n    }else x++;\n  }\n  console.log(ans.join(\"\\n\"));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03321_1", "type": "JavaScript", "obfuscated": "var a0_0x1fca6e = a0_0x2ccd;\nfunction a0_0x3702() {\n    var _0x1c04a5 = [\n        'split',\n        'map',\n        'fill',\n        'ydrvH',\n        'HvCCa',\n        'push',\n        'length',\n        'qPLyD',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3702 = function () {\n        return _0x1c04a5;\n    };\n    return a0_0x3702();\n}\nfunction a0_0x2ccd(cHYXim, key) {\n    var stringArray = a0_0x3702();\n    a0_0x2ccd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ccd(cHYXim, key);\n}\nfunction Main(s) {\n    var _0x13f837 = a0_0x2ccd;\n    s = s[_0x13f837(0x0)]('\\x0a');\n    var n = s[0x0]['split']('\\x20')[_0x13f837(0x1)](a => +a);\n    var m = n[0x1];\n    n = n[0x0];\n    var b = Array(n)[_0x13f837(0x2)](0x0)[_0x13f837(0x1)](a => Array(n)[_0x13f837(0x2)](0x0));\n    for (var i = 0x0; i < m; i++) {\n        if (_0x13f837(0x3) !== _0x13f837(0x4)) {\n            var a = s[i + 0x1][_0x13f837(0x0)]('\\x20')[_0x13f837(0x1)](a => a - 0x1);\n            b[a[0x0]][a[0x1]] = b[a[0x1]][a[0x0]] = 0x1;\n        } else {\n            k = t;\n            x = i;\n        }\n    }\n    var k = 0x218711a00;\n    var x;\n    for (i = 0x0; i < n; i++) {\n        var t = b[i]['reduce']((a, b) => a + b);\n        if (k > t) {\n            k = t;\n            x = i;\n        }\n    }\n    var y = [], z = [];\n    for (i = 0x0; i < n; i++) {\n        if (i === x)\n            continue;\n        if (b[x][i])\n            y[_0x13f837(0x5)](i);\n        else\n            z[_0x13f837(0x5)](i);\n    }\n    for (i = 0x0; i < y[_0x13f837(0x6)]; i++)\n        for (var j = i + 0x1; j < y['length']; j++) {\n            if (_0x13f837(0x7) !== _0x13f837(0x7)) {\n                console[_0x13f837(0x8)](-0x1);\n                return;\n            } else {\n                if (!b[y[i]][y[j]]) {\n                    console[_0x13f837(0x8)](-0x1);\n                    return;\n                }\n            }\n        }\n    for (i = 0x0; i < z['length']; i++)\n        for (j = i + 0x1; j < z[_0x13f837(0x6)]; j++) {\n            if (!b[z[i]][z[j]]) {\n                console[_0x13f837(0x8)](-0x1);\n                return;\n            }\n        }\n    console[_0x13f837(0x8)](k * (k + 0x1) / 0x2 + (n - k - 0x1) * (n - k - 0x2) / 0x2);\n}\nMain(require('fs')[a0_0x1fca6e(0x9)]('/dev/stdin', a0_0x1fca6e(0xa)));", "test_cases": [["5 5\n1 2\n1 3\n3 4\n3 5\n4 5", "4"], ["5 1\n1 2", "-1"], ["4 3\n1 2\n1 3\n2 3", "3"], ["10 39\n7 2\n7 1\n5 6\n5 8\n9 10\n2 8\n8 7\n3 10\n10 1\n8 10\n2 3\n7 4\n3 9\n4 10\n3 4\n6 1\n6 7\n9 5\n9 7\n6 9\n9 4\n4 6\n7 5\n8 3\n2 5\n9 2\n10 7\n8 6\n8 9\n7 3\n5 3\n4 5\n6 3\n2 10\n5 10\n4 2\n6 2\n8 4\n10 6", "21"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1];\n  n = n[0];\n  var b = Array(n).fill(0).map(a=>Array(n).fill(0));\n  for(var i = 0; i < m; i++){\n    var a = s[i+1].split(\" \").map(a=>a-1);\n    b[a[0]][a[1]] = b[a[1]][a[0]] = 1;\n  }\n  var k = 9e9;\n  var x;\n  for(i = 0; i < n; i++){\n    var t = b[i].reduce((a,b)=>a+b);\n    if(k > t){k = t; x = i;}\n  }\n  var y=[], z=[];\n  for(i = 0; i < n; i++){\n    if(i === x)continue;\n    if(b[x][i])y.push(i); else z.push(i);\n  }\n  for(i = 0; i < y.length; i++)\n  for(var j = i + 1; j < y.length; j++){\n    if(!b[y[i]][y[j]]){console.log(-1);return;}\n  }\n  for(i = 0; i < z.length; i++)\n  for(j = i + 1; j < z.length; j++){\n    if(!b[z[i]][z[j]]){console.log(-1);return;}\n  }\n  console.log(k*(k+1)/2+(n-k-1)*(n-k-2)/2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03391_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction myin() {\n    var _0x170c37 = a0_0x41a2;\n    return require('fs')['readFileSync'](_0x170c37(0x0), 'utf8')[_0x170c37(0x1)]();\n}\nfunction a0_0x493f() {\n    var _0x30a5ed = [\n        '/dev/stdin',\n        'trim',\n        'log',\n        'split',\n        'map',\n        'shift',\n        'length',\n        'bLAPZ'\n    ];\n    a0_0x493f = function () {\n        return _0x30a5ed;\n    };\n    return a0_0x493f();\n}\nfunction myout(t) {\n    var _0x33e9e3 = a0_0x41a2;\n    console[_0x33e9e3(0x2)](t);\n}\nfunction myconv(i, no) {\n    var _0x3c218e = a0_0x41a2;\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return parseInt(i);\n    case 0x2:\n        return i[_0x3c218e(0x3)]('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i[_0x3c218e(0x3)]('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i[_0x3c218e(0x3)]('\\x0a')['map'](a => Number(a));\n    case 0x6:\n        return i['split']('');\n    case 0x7:\n        return i[_0x3c218e(0x3)]('')[_0x3c218e(0x4)](a => Number(a));\n    }\n}\nfunction a0_0x41a2(naOVTn, key) {\n    var stringArray = a0_0x493f();\n    a0_0x41a2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41a2(naOVTn, key);\n}\nfunction Main(input) {\n    var _0x40e8f8 = a0_0x41a2;\n    input = myconv(input, 0x3);\n    input[_0x40e8f8(0x5)]();\n    var output = 0x0;\n    for (var i = 0x0; i < input[_0x40e8f8(0x6)]; i++) {\n        if ('dNQJE' === 'zqffB') {\n            switch (no) {\n            case 0x0:\n                return i;\n            case 0x1:\n                return parseInt(i);\n            case 0x2:\n                return i[_0x40e8f8(0x3)]('\\x20');\n            case 0x3:\n                return i[_0x40e8f8(0x3)]('\\x0a');\n            case 0x4:\n                return i[_0x40e8f8(0x3)]('\\x20')[_0x40e8f8(0x4)](a => Number(a));\n            case 0x5:\n                return i['split']('\\x0a')[_0x40e8f8(0x4)](a => Number(a));\n            case 0x6:\n                return i[_0x40e8f8(0x3)]('');\n            case 0x7:\n                return i[_0x40e8f8(0x3)]('')['map'](a => Number(a));\n            }\n        } else {\n            var A = parseInt(input[i]['split']('\\x20')[0x0]);\n            var B = parseInt(input[i][_0x40e8f8(0x3)]('\\x20')[0x1]);\n            if (A < B) {\n                if (_0x40e8f8(0x7) !== 'bLAPZ') {\n                    var A = parseInt(input[i][_0x40e8f8(0x3)]('\\x20')[0x0]);\n                    var B = parseInt(input[i]['split']('\\x20')[0x1]);\n                    if (A < B) {\n                        output += B;\n                    }\n                } else {\n                    output += B;\n                }\n            }\n        }\n    }\n    myout(output);\n}\nMain(myin());", "test_cases": [["2\n1 2\n3 2", "2"], ["3\n8 3\n0 1\n4 8", "9"], ["1\n1 1", "0"]], "original": "'use strict'\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  input.shift();\n  var output = 0;\n  for(var i = 0; i < input.length; i++){\n    var A = parseInt(input[i].split(\" \")[0]);\n\tvar B = parseInt(input[i].split(\" \")[1]);\n    if(A < B){\n       output += B;\n    }\n  }\n  myout(output);\n}\n  \nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03403_1", "type": "JavaScript", "obfuscated": "function a0_0x924e(TBjWvA, key) {\n    const stringArray = a0_0x1bc1();\n    a0_0x924e = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x924e(TBjWvA, key);\n}\nconst a0_0x25a87a = a0_0x924e;\nconsole[a0_0x25a87a(0x0)]((args => {\n    const _0x4b1412 = a0_0x924e;\n    const [[N], A] = args[_0x4b1412(0x1)]()[_0x4b1412(0x2)]('\\x0a')[_0x4b1412(0x3)](r => r[_0x4b1412(0x2)]('\\x20')[_0x4b1412(0x3)](v => v | 0x0));\n    let C = Math[_0x4b1412(0x4)](A[0x0]) + Math['abs'](A[N - 0x1]);\n    for (let i = 0x1; i < N; i++) {\n        C += Math[_0x4b1412(0x4)](A[i] - A[i - 0x1]);\n    }\n    const c = [C - Math[_0x4b1412(0x4)](A[0x0]) - Math[_0x4b1412(0x4)](A[0x1] - A[0x0]) + Math[_0x4b1412(0x4)](A[0x1])];\n    for (let i = 0x1; i < N - 0x1; i++) {\n        c[_0x4b1412(0x5)](C - Math[_0x4b1412(0x4)](A[i + 0x1] - A[i]) - Math[_0x4b1412(0x4)](A[i] - A[i - 0x1]) + Math[_0x4b1412(0x4)](A[i + 0x1] - A[i - 0x1]));\n    }\n    c['push'](C - Math[_0x4b1412(0x4)](A[N - 0x1]) - Math['abs'](A[N - 0x2] - A[N - 0x1]) + Math[_0x4b1412(0x4)](A[N - 0x2]));\n    return c[_0x4b1412(0x6)]`\\n`;\n})(require('fs')[a0_0x25a87a(0x7)]('/dev/stdin', a0_0x25a87a(0x8))));\nfunction a0_0x1bc1() {\n    const _0x16d750 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'abs',\n        'push',\n        'join',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x1bc1 = function () {\n        return _0x16d750;\n    };\n    return a0_0x1bc1();\n}", "test_cases": [["3\n3 5 -1", "12\n8\n10"], ["5\n1 1 1 2 0", "4\n4\n4\n2\n4"], ["6\n-679 -2409 -3258 3095 -3291 -4462", "21630\n21630\n19932\n8924\n21630\n19288"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  let C = Math.abs(A[0]) + Math.abs(A[N-1]);\n  for ( let i = 1; i < N; i++ ) {\n    C += Math.abs( A[i] - A[i-1] );\n  }\n  const c = [C - Math.abs(A[0]) - Math.abs(A[1]-A[0]) + Math.abs(A[1])];\n  for ( let i = 1; i < N-1; i++ ) {\n    c.push( C - Math.abs(A[i+1]-A[i]) - Math.abs(A[i]-A[i-1]) + Math.abs(A[i+1]-A[i-1]) );\n  }\n  c.push( C - Math.abs(A[N-1]) - Math.abs(A[N-2]-A[N-1]) + Math.abs(A[N-2]));\n  return c.join`\\n`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03480_1", "type": "JavaScript", "obfuscated": "var a0_0x47f85d = a0_0x12f5;\nvar GET = (function () {\n    var _0x236fbf = a0_0x12f5;\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        var _0x53c877 = a0_0x12f5;\n        this['_s'] = s[_0x53c877(0x0)]()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g[_0x236fbf(0x1)]['a'] = function (f) {\n        var _0x320edd = a0_0x12f5;\n        if (_0x320edd(0x2) !== _0x320edd(0x3)) {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0x320edd(0x4))\n                s[y] = s[y]['split']('\\x20')['reverse']();\n            r = s[y]['pop']();\n            if (!s[y]['length'])\n                this['_y']++;\n            return f ? r : +r;\n        } else {\n            return new g(s);\n        }\n    };\n    g[_0x236fbf(0x1)]['l'] = function (f) {\n        var _0x29dbdc = a0_0x12f5;\n        var s = this['_s'][this['_y']++][_0x29dbdc(0x5)]('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g[_0x236fbf(0x1)]['m'] = function (n, f) {\n        var _0x430ed4 = a0_0x12f5;\n        if (_0x430ed4(0x6) !== 'aQytp') {\n            var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a[_0x430ed4(0x5)]('\\x20'));\n            return f ? r : r['map'](a => a[_0x430ed4(0x7)](a => +a));\n        } else {\n            var r = this['_s'][_0x430ed4(0x8)](this['_y'], this['_y'] += n)[_0x430ed4(0x7)](a => a['split']('\\x20'));\n            return f ? r : r[_0x430ed4(0x7)](a => a[_0x430ed4(0x7)](a => +a));\n        }\n    };\n    g[_0x236fbf(0x1)]['r'] = function (n, f) {\n        var _0xb236b7 = a0_0x12f5;\n        var r = this['_s'][_0xb236b7(0x8)](this['_y'], this['_y'] += n);\n        return f ? r : r[_0xb236b7(0x7)](a => +a);\n    };\n    return f;\n}());\nfunction a0_0x17b1() {\n    var _0x1a2eaf = [\n        'trim',\n        'prototype',\n        'JRisy',\n        'VgZbb',\n        'string',\n        'split',\n        'aQytp',\n        'map',\n        'slice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'length',\n        'Psvbd'\n    ];\n    a0_0x17b1 = function () {\n        return _0x1a2eaf;\n    };\n    return a0_0x17b1();\n}\nfunction a0_0x12f5(ESRInR, key) {\n    var stringArray = a0_0x17b1();\n    a0_0x12f5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x12f5(ESRInR, key);\n}\nvar o = GET(require('fs')[a0_0x47f85d(0x9)](a0_0x47f85d(0xa), a0_0x47f85d(0xb)));\nconsole[a0_0x47f85d(0xc)](main());\nfunction main() {\n    var _0x20334e = a0_0x12f5;\n    var s = o['a'](0x1);\n    var n = s[_0x20334e(0xd)];\n    var l = n + 0x1 >> 0x1, u, v = l;\n    var f = s[l - 0x1];\n    if (n & 0x1)\n        u = l - 0x2;\n    else\n        u = l - 0x1;\n    for (; u >= 0x0; u--, v++) {\n        if ('Psvbd' !== _0x20334e(0xe)) {\n            var s = this['_s'][this['_y']++][_0x20334e(0x5)]('\\x20');\n            return f ? s : s[_0x20334e(0x7)](a => +a);\n        } else {\n            if (s[u] !== f || s[v] !== f)\n                break;\n            l++;\n        }\n    }\n    return l;\n}", "test_cases": [["010", "2"], ["100000000", "8"], ["00001111", "4"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var s = o.a(1);\n  var n = s.length;\n  var l = n + 1 >> 1, u, v = l;\n  var f = s[l-1];\n  if(n & 1)u = l-2;\n  else u = l-1;\n  for(; u >= 0; u--, v++){\n    if(s[u] !== f || s[v] !== f)break;\n    l++;\n  }\n  return l;\n}", "language": "JavaScript"}
{"filename": "p03553_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x131ecc = a0_0x4519;\nvar input = require('fs')['readFileSync'](a0_0x131ecc(0x0), 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0x8eea2a = a0_0x4519;\n    return a ? cin[_0x8eea2a(0x1)](cid, cid += n) : cin[_0x8eea2a(0x1)](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x21bcdd = a0_0x4519;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x21bcdd(0x2)](cin[_0x21bcdd(0x1)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x21bcdd(0x2)](cin['slice'](cid, cid += w)[_0x21bcdd(0x3)](a => +a));\n    return r;\n}\nfunction a0_0x4519(iMupUc, key) {\n    var stringArray = a0_0x3208();\n    a0_0x4519 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4519(iMupUc, key);\n}\nfunction xArray(v) {\n    var _0xdb349d = a0_0x4519;\n    var a = arguments, l = a['length'], r = _0xdb349d(0x4) + --l + _0xdb349d(0x5) + v + _0xdb349d(0x6);\n    while (--l)\n        r = 'Array(a[' + l + ']).fill().map(x=>' + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nfunction a0_0x3208() {\n    var _0x1ec25f = [\n        '/dev/stdin',\n        'slice',\n        'push',\n        'map',\n        'Array(a[',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        'log',\n        'concat',\n        'reduce'\n    ];\n    a0_0x3208 = function () {\n        return _0x1ec25f;\n    };\n    return a0_0x3208();\n}\nif (myOut !== undefined)\n    console[a0_0x131ecc(0x7)](String(myOut));\nfunction main() {\n    var _0x59eaf4 = a0_0x4519;\n    var n = next();\n    var a = [0x0][_0x59eaf4(0x8)](nexts(n));\n    for (var i = n; i >= 0x1; i--) {\n        var sum = 0x0;\n        for (var j = i; j <= n; j += i)\n            sum += a[j];\n        if (sum < 0x0)\n            for (var j = i; j <= n; j += i)\n                a[j] = 0x0;\n    }\n    return a[_0x59eaf4(0x9)]((a, b) => a + b);\n}", "test_cases": [["6\n1 2 -6 4 5 3", "12"], ["6\n100 -100 -100 -100 100 -100", "200"], ["5\n-1 -2 -3 -4 -5", "0"], ["2\n-1000 100000", "99000"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var a = [0].concat(nexts(n));\n  for(var i = n; i >= 1; i--){\n    var sum = 0;\n    for(var j = i; j <= n; j+=i)sum += a[j];\n    if(sum < 0)for(var j = i; j <= n; j+=i)a[j] = 0;\n  }\n  return a.reduce((a,b)=>a+b);\n}", "language": "JavaScript"}
{"filename": "p03569_1", "type": "JavaScript", "obfuscated": "const a0_0xa47f1 = a0_0x511c;\nfunction a0_0x511c(rrMhqi, key) {\n    const stringArray = a0_0x545b();\n    a0_0x511c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x511c(rrMhqi, key);\n}\nconsole[a0_0xa47f1(0x0)]((args => {\n    const _0x57dcd3 = a0_0x511c;\n    const s = args[_0x57dcd3(0x1)]();\n    const N = s[_0x57dcd3(0x2)] - 0x1;\n    let x = 0x0;\n    for (let i = 0x0, j = N; i < j; i++, j--) {\n        while (s[i] !== s[j]) {\n            if (s[i] === 'x')\n                x++, i++;\n            else if (s[j] === 'x')\n                x++, j--;\n            else\n                return '-1';\n        }\n    }\n    return '' + x;\n})(require('fs')[a0_0xa47f1(0x3)]('/dev/stdin', a0_0xa47f1(0x4))));\nfunction a0_0x545b() {\n    const _0x5152e3 = [\n        'log',\n        'trim',\n        'length',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x545b = function () {\n        return _0x5152e3;\n    };\n    return a0_0x545b();\n}", "test_cases": [["xabxa", "2"], ["ab", "-1"], ["a", "0"], ["oxxx", "3"]], "original": "console.log((args=>{\n  const s = args.trim();\n  const N = s.length-1;\n  let x = 0;\n  for ( let i = 0, j = N; i < j; i++, j-- ) {\n    while ( s[i] !== s[j] ) {\n      if ( s[i] === 'x' ) x++,i++;\n      else if ( s[j] === 'x' ) x++,j--;\n      else return '-1';\n    }\n  }\n  return `${x}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03639_1", "type": "JavaScript", "obfuscated": "const a0_0x2b96a7 = a0_0x3b7d;\nconsole[a0_0x2b96a7(0x0)]((args => {\n    const _0x78f960 = a0_0x3b7d;\n    const [[N], a] = args['trim']()[_0x78f960(0x1)]`\\n`[_0x78f960(0x2)](r => r[_0x78f960(0x1)]` `['map'](v => v | 0x0));\n    let odd = 0x0, p4 = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        odd += a[i] & 0x1;\n        p4 += !(a[i] % 0x4);\n    }\n    return odd - (odd + p4 === N) <= p4 ? _0x78f960(0x3) : 'No';\n})(require('fs')[a0_0x2b96a7(0x4)](a0_0x2b96a7(0x5), a0_0x2b96a7(0x6))));\nfunction a0_0x3b7d(KlfGZh, key) {\n    const stringArray = a0_0x566e();\n    a0_0x3b7d = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b7d(KlfGZh, key);\n}\nfunction a0_0x566e() {\n    const _0x2ff044 = [\n        'log',\n        'split',\n        'map',\n        'Yes',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x566e = function () {\n        return _0x2ff044;\n    };\n    return a0_0x566e();\n}", "test_cases": [["3\n1 10 100", "Yes"], ["4\n1 2 3 4", "No"], ["3\n1 4 1", "Yes"], ["2\n1 1", "No"], ["6\n2 7 1 8 2 8", "Yes"]], "original": "console.log((args=>{\n  const [[N],a] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let odd = 0, p4 = 0;\n  for ( let i = 0; i < N; i++ ) {\n    odd += a[i]&1;\n    p4 += !(a[i]%4);\n  }\n  return (odd-(odd+p4===N)<=p4)?'Yes':'No';\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03799_1", "type": "JavaScript", "obfuscated": "function a0_0x1775() {\n    var _0x390056 = [\n        'split',\n        'floor',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1775 = function () {\n        return _0x390056;\n    };\n    return a0_0x1775();\n}\nvar a0_0x2732f4 = a0_0x2d32;\nfunction a0_0x2d32(hYGhWo, key) {\n    var stringArray = a0_0x1775();\n    a0_0x2d32 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d32(hYGhWo, key);\n}\nfunction Main(input) {\n    var _0x1be119 = a0_0x2d32;\n    var inputArr = input[_0x1be119(0x0)]('\\x20');\n    var sNum = Number(inputArr[0x0]);\n    var cNum = Number(inputArr[0x1]);\n    var result = 0x0;\n    if (sNum > cNum / 0x2) {\n        result += Math[_0x1be119(0x1)](cNum / 0x2);\n    } else {\n        result += sNum;\n        cNum -= result * 0x2;\n        result += Math[_0x1be119(0x1)](cNum / 0x4);\n    }\n    console[_0x1be119(0x2)](result);\n}\nMain(require('fs')[a0_0x2732f4(0x3)](a0_0x2732f4(0x4), 'utf8'));", "test_cases": [["1 6", "2"], ["12345 678901", "175897"]], "original": "function Main (input) {\n\tvar inputArr = input.split(' ');\n\tvar sNum = Number(inputArr[0]);\n\tvar cNum = Number(inputArr[1]);\n\tvar result = 0;\n\t// Sを使う組み合わせ\n\tif (sNum > (cNum/2)) {\n\t\tresult += Math.floor(cNum/2);\n\t} else {\n\t\tresult += sNum;\n\t\tcNum -= result * 2;\n\t\tresult += Math.floor(cNum/4)\n\t}\n\tconsole.log(result);\n}\n// Main(\"12345 678901\");\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03828_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x3fef(adyiZq, key) {\n    const stringArray = a0_0x529b();\n    a0_0x3fef = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fef(adyiZq, key);\n}\nconst a0_0x2fdffd = a0_0x3fef;\nconst pf = (n, res) => {\n    const _0x5a6f79 = a0_0x3fef;\n    for (let i = 0x2; i <= n; i++) {\n        if (_0x5a6f79(0x0) !== _0x5a6f79(0x1)) {\n            while (n % i === 0x0) {\n                n /= i;\n                if (!(i in res))\n                    res[i] = 0x0;\n                res[i]++;\n            }\n        } else {\n            n /= i;\n            if (!(i in res))\n                res[i] = 0x0;\n            res[i]++;\n        }\n    }\n    return res;\n};\nfunction main(input) {\n    const _0x51131f = a0_0x3fef;\n    input = Number(input[_0x51131f(0x2)]());\n    const mod = 0x3b9aca00 + 0x7;\n    let obj = {};\n    let ans = 0x1;\n    for (let i = 0x1; i <= input; i++) {\n        obj = pf(i, obj);\n    }\n    Object['keys'](obj)[_0x51131f(0x3)](n => {\n        ans = ans * (obj[n] + 0x1) % mod;\n    });\n    console[_0x51131f(0x4)](ans);\n}\nfunction a0_0x529b() {\n    const _0x44648d = [\n        'gRmJR',\n        'pVKCr',\n        'trim',\n        'forEach',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x529b = function () {\n        return _0x44648d;\n    };\n    return a0_0x529b();\n}\nmain(require('fs')['readFileSync'](a0_0x2fdffd(0x5), a0_0x2fdffd(0x6)));", "test_cases": [["3", "4"], ["6", "30"], ["1000", "972926972"]], "original": "'use strict'\n\nconst pf = (n, res) => {\n  for (let i = 2; i <= n; i++) {\n    while(n % i === 0) {\n      n /= i;\n      if (!(i in res)) res[i] = 0\n      res[i]++\n    }\n  }\n  return res\n}\n\nfunction main(input) {\n  input = Number(input.trim())\n  const mod = 1e9 + 7\n  let obj = {}\n  let ans = 1\n\n  for (let i = 1; i <= input; i++) {\n    obj = pf(i, obj)\n  }\n\n  Object.keys(obj).forEach(n => {\n    ans = ans * (obj[n] + 1) % mod\n  })\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03830_1", "type": "JavaScript", "obfuscated": "var a0_0x5c857c = a0_0xd767;\nfunction a0_0xd767(WBBpxL, key) {\n    var stringArray = a0_0x1c82();\n    a0_0xd767 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd767(WBBpxL, key);\n}\nfunction main(input) {\n    var _0x147469 = a0_0xd767;\n    var n = parseInt(input);\n    var map = {};\n    for (var i = 0x2; i <= n; i++) {\n        var t = i;\n        for (var j = 0x2; j * j <= t; j++) {\n            if (t % j == 0x0) {\n                if ('eUeHf' === _0x147469(0x0)) {\n                    var cnt = 0x0;\n                    while (t % j == 0x0) {\n                        cnt++;\n                        t /= j;\n                    }\n                    if (map[j]) {\n                        if (_0x147469(0x1) === _0x147469(0x2)) {\n                            map[j] = map[j] + cnt;\n                        } else {\n                            map[j] = map[j] + cnt;\n                        }\n                    } else {\n                        map[j] = cnt;\n                    }\n                } else {\n                    if (map[t]) {\n                        map[t]++;\n                    } else {\n                        map[t] = 0x1;\n                    }\n                }\n            }\n        }\n        if (t != 0x1) {\n            if (_0x147469(0x3) !== 'boZJG') {\n                if (map[t]) {\n                    if (_0x147469(0x4) !== _0x147469(0x4)) {\n                        map[t] = 0x1;\n                    } else {\n                        map[t]++;\n                    }\n                } else {\n                    if (_0x147469(0x5) === _0x147469(0x6)) {\n                        cnt++;\n                        t /= j;\n                    } else {\n                        map[t] = 0x1;\n                    }\n                }\n            } else {\n                map[j] = cnt;\n            }\n        }\n    }\n    var ans = 0x1;\n    var mod = 0x3b9aca07;\n    for (var x in map) {\n        ans = ans * (map[x] + 0x1) % mod;\n    }\n    console[_0x147469(0x7)](ans);\n}\nfunction a0_0x1c82() {\n    var _0x1001af = [\n        'eUeHf',\n        'cUESq',\n        'VFTVY',\n        'eVCVH',\n        'HGOZS',\n        'KQHba',\n        'ygEnV',\n        'log',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x1c82 = function () {\n        return _0x1001af;\n    };\n    return a0_0x1c82();\n}\nmain(require('fs')[a0_0x5c857c(0x8)](a0_0x5c857c(0x9), 'utf8'));", "test_cases": [["3", "4"], ["6", "30"], ["1000", "972926972"]], "original": "function main(input) {\n    var n = parseInt(input);\n\n    var map = {};\n    for (var i = 2; i <= n; i++) {\n        var t = i;\n        for (var j = 2; j * j <= t; j++) {\n            if (t % j == 0) {\n                var cnt = 0;\n                while (t % j == 0) {\n                    cnt++;\n                    t /= j;\n                }\n                if (map[j]) {\n                    map[j] = map[j] + cnt;\n                } else {\n                    map[j] = cnt;\n                }\n            }\n        }\n        if (t != 1) {\n            if (map[t]) {\n                map[t]++;\n            } else {\n                map[t] = 1;\n            }\n        }\n    }\n\n    var ans = 1;\n    var mod = 1000000007;\n    for (var x in map) {\n        ans = (ans * (map[x] + 1)) % mod;\n    }\n\n    console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03948_1", "type": "JavaScript", "obfuscated": "var a0_0x18534f = a0_0x2764;\nfunction a0_0x2764(FxojZL, key) {\n    var stringArray = a0_0x4c37();\n    a0_0x2764 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2764(FxojZL, key);\n}\nfunction a0_0x4c37() {\n    var _0x2f333c = [\n        'HxiZJ',\n        'replace',\n        'split',\n        'length',\n        'aEEkr',\n        'BicDs',\n        'sorgH',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x4c37 = function () {\n        return _0x2f333c;\n    };\n    return a0_0x4c37();\n}\nfunction Main(input) {\n    var _0x1a96a = a0_0x2764;\n    var space_strinput = function (line) {\n        var _0x2b6fb1 = a0_0x2764;\n        if (_0x2b6fb1(0x0) === _0x2b6fb1(0x0)) {\n            var arr = line[_0x2b6fb1(0x1)](/(^\\s+)|(\\s+$)/g, '')[_0x2b6fb1(0x2)]('\\x20');\n            for (var i = 0x0; i < arr[_0x2b6fb1(0x3)]; ++i) {\n                arr[i] = arr[i];\n            }\n            return arr;\n        } else {\n            var val = a[i];\n            if (val - min > rieki) {\n                rieki = val - min;\n                rieki_place_count = 0x1;\n            } else if (val - min == rieki) {\n                rieki_place_count++;\n            }\n            min = val < min ? val : min;\n        }\n    };\n    var space_numinput = function (line) {\n        var _0x1d9d51 = a0_0x2764;\n        var arr = line[_0x1d9d51(0x1)](/(^\\s+)|(\\s+$)/g, '')[_0x1d9d51(0x2)]('\\x20');\n        for (var i = 0x0; i < arr['length']; ++i) {\n            arr[i] = +arr[i];\n        }\n        return arr;\n    };\n    var getmin = function (a, b) {\n        var _0x25c8e8 = a0_0x2764;\n        if ('qlZth' === _0x25c8e8(0x4)) {\n            var arr = line['replace'](/(^\\s+)|(\\s+$)/g, '')[_0x25c8e8(0x2)]('\\x20');\n            for (var i = 0x0; i < arr[_0x25c8e8(0x3)]; ++i) {\n                arr[i] = arr[i];\n            }\n            return arr;\n        } else {\n            return a > b ? b : a;\n        }\n    };\n    lines = input[_0x1a96a(0x2)]('\\x0a');\n    var l0 = space_numinput(lines[0x0]);\n    var n = l0[0x0];\n    var t = l0[0x1];\n    var a = space_numinput(lines[0x1]);\n    var rieki = 0x0;\n    var rieki_place_count = 0x0;\n    var min = a[0x0];\n    var max = a[0x0];\n    for (var i = 0x0; i < n; ++i) {\n        if (_0x1a96a(0x5) === 'qTnAG') {\n            var arr = line[_0x1a96a(0x1)](/(^\\s+)|(\\s+$)/g, '')[_0x1a96a(0x2)]('\\x20');\n            for (var i = 0x0; i < arr[_0x1a96a(0x3)]; ++i) {\n                arr[i] = +arr[i];\n            }\n            return arr;\n        } else {\n            var val = a[i];\n            if (val - min > rieki) {\n                if (_0x1a96a(0x6) !== _0x1a96a(0x6)) {\n                    arr[i] = +arr[i];\n                } else {\n                    rieki = val - min;\n                    rieki_place_count = 0x1;\n                }\n            } else if (val - min == rieki) {\n                rieki_place_count++;\n            }\n            min = val < min ? val : min;\n        }\n    }\n    console['log'](getmin(rieki_place_count, Math['floor'](t / 0x2)));\n}\nMain(require('fs')[a0_0x18534f(0x7)]('/dev/stdin', a0_0x18534f(0x8)));", "test_cases": [["3 2\n100 50 200", "1"], ["5 8\n50 30 40 10 20", "2"], ["10 100\n7 10 4 5 9 3 6 8 2 1", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\nvar space_strinput = function(line){\n\tvar arr= line.replace(/(^\\s+)|(\\s+$)/g, \"\").split(\" \");\n\tfor(var i=0;i<arr.length;++i){\n\t\tarr[i]=arr[i];\n\t}\n\treturn arr;\n};\nvar space_numinput = function(line){\n\tvar arr= line.replace(/(^\\s+)|(\\s+$)/g, \"\").split(\" \");\n\tfor(var i=0;i<arr.length;++i){\n\t\tarr[i]=+arr[i];\n\t}\n\treturn arr;\n};\n\nvar getmin = function(a,b){return a>b?b:a;};\n\tlines = input.split(\"\\n\"); // 1行目がinput[0], 2行目がinput[1], …に入る\n\tvar l0 = space_numinput(lines[0]);\n\tvar n = l0[0];\n\tvar t = l0[1];\n\tvar a = space_numinput(lines[1]);\n\tvar rieki = 0;\n\tvar rieki_place_count = 0;\n\tvar min = a[0];\n\tvar max = a[0];\n\tfor(var i=0;i<n;++i){\n\t\tvar val = a[i];\n\t\tif(val-min>rieki){\n\t\t\trieki=val-min;\n\t\t\trieki_place_count = 1;\n\t\t}else if(val-min==rieki){\n\t\t\trieki_place_count++;\n\t\t}\n\t\t\n\t\tmin = val < min? val:min;\n\t}\n\tconsole.log(getmin(rieki_place_count,Math.floor(t/2)));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03958_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x327b3d = a0_0x1d2b;\nfunction a0_0x1d2b(mPnFiK, key) {\n    const stringArray = a0_0x354c();\n    a0_0x1d2b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d2b(mPnFiK, key);\n}\nconst main = input => {\n    const _0x361a38 = a0_0x1d2b;\n    input = input['trim']()[_0x361a38(0x0)]('\\x0a');\n    const K = parseInt(input[0x0][_0x361a38(0x0)]('\\x20')[0x0]);\n    const T = parseInt(input[0x0][_0x361a38(0x0)]('\\x20')[0x1]);\n    let a = input[0x1]['split']('\\x20')[_0x361a38(0x1)](el => {\n        return parseInt(el);\n    });\n    let max = a[_0x361a38(0x2)](function (previous, current) {\n        return previous > current ? previous : current;\n    });\n    if (max - 0x1 - (K - max) > 0x0) {\n        console[_0x361a38(0x3)](max - 0x1 - (K - max));\n    } else {\n        console['log'](0x0);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', a0_0x327b3d(0x4)));\nfunction a0_0x354c() {\n    const _0x161dc0 = [\n        'split',\n        'map',\n        'reduce',\n        'log',\n        'utf8'\n    ];\n    a0_0x354c = function () {\n        return _0x161dc0;\n    };\n    return a0_0x354c();\n}", "test_cases": [["7 3\n3 2 2", "0"], ["6 3\n1 4 1", "1"], ["100 1\n100", "99"]], "original": "\"use strict\";\n\nconst main = input => {\n  input = input.trim().split(\"\\n\");\n  const K = parseInt(input[0].split(\" \")[0]);\n  const T = parseInt(input[0].split(\" \")[1]);\n  let a = input[1].split(\" \").map((el)=>{\n    return parseInt(el);\n  });\n  let max = a.reduce( function (previous, current) {\n  \treturn previous > current ? previous:current;\n  });\n  if(max-1-(K-max) > 0){\n    console.log(max-1-(K-max));\n  }else{\n    console.log(0);\n  }\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03965_1", "type": "JavaScript", "obfuscated": "const a0_0x2d1555 = a0_0x4df1;\nfunction a0_0x53d9() {\n    const _0x18e522 = [\n        'match',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x53d9 = function () {\n        return _0x18e522;\n    };\n    return a0_0x53d9();\n}\nfunction a0_0x4df1(xxHRIh, key) {\n    const stringArray = a0_0x53d9();\n    a0_0x4df1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4df1(xxHRIh, key);\n}\nfunction Main(s) {\n    const _0x48828c = a0_0x4df1;\n    const n = s['length'];\n    const p = s[_0x48828c(0x0)](/p/g)[_0x48828c(0x1)];\n    console[_0x48828c(0x2)](Math['floor'](n / 0x2 - p));\n}\nMain(require('fs')[a0_0x2d1555(0x3)](a0_0x2d1555(0x4), a0_0x2d1555(0x5))['trim']());", "test_cases": [["gpg", "0"], ["ggppgggpgg", "2"]], "original": "function Main(s){\n  const n = s.length;\n  const p = s.match(/p/g).length;\n  console.log(Math.floor(n / 2 - p));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p04019_1", "type": "JavaScript", "obfuscated": "function a0_0x5421(VpOdMU, key) {\n    const stringArray = a0_0xb78f();\n    a0_0x5421 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x5421(VpOdMU, key);\n}\nconst a0_0x5d28f0 = a0_0x5421;\nfunction Main(input) {\n    const _0x9c1999 = a0_0x5421;\n    input = input[_0x9c1999(0x0)]('');\n    let N = input[_0x9c1999(0x1)]('N');\n    let S = input[_0x9c1999(0x1)]('S');\n    let E = input[_0x9c1999(0x1)]('E');\n    let W = input['includes']('W');\n    let NS = N && S || !N && !S;\n    let EW = E && W || !E && !W;\n    if (NS && EW) {\n        console[_0x9c1999(0x2)](_0x9c1999(0x3));\n    } else {\n        console[_0x9c1999(0x2)]('No');\n    }\n}\nfunction a0_0xb78f() {\n    const _0xc55a3 = [\n        'split',\n        'includes',\n        'log',\n        'Yes',\n        '/dev/stdin'\n    ];\n    a0_0xb78f = function () {\n        return _0xc55a3;\n    };\n    return a0_0xb78f();\n}\nMain(require('fs')['readFileSync'](a0_0x5d28f0(0x4), 'utf8'));", "test_cases": [["SENW", "Yes"], ["NSNNSNSN", "Yes"], ["NNEW", "No"], ["W", "No"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\");\n\tlet N = input.includes(\"N\");\n  \tlet S = input.includes(\"S\");\n  \tlet E = input.includes(\"E\");\n  \tlet W = input.includes(\"W\");\n\t\n  \tlet NS = N&&S || !N&&!S;\n  \tlet EW = E&&W || !E&&!W;\n\t  \n\tif(NS&&EW){\n      console.log(\"Yes\");\n    }else{\n      console.log(\"No\");\n    }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00035_1", "type": "JavaScript", "obfuscated": "var a0_0x5317c2 = a0_0x1c7c;\nfunction a0_0x1c7c(zXlzYg, key) {\n    var stringArray = a0_0x18a4();\n    a0_0x1c7c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c7c(zXlzYg, key);\n}\nfunction heron(a, b, c) {\n    var _0x230579 = a0_0x1c7c;\n    var s = (a + b + c) / 0x2;\n    var S = Math[_0x230579(0x0)](s * (s - a) * (s - b) * (s - c));\n    return S;\n}\nvar input = require('fs')[a0_0x5317c2(0x1)](a0_0x5317c2(0x2), 'utf8');\nfunction a0_0x18a4() {\n    var _0x4afb41 = [\n        'sqrt',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'map',\n        'pow',\n        'log',\n        'apply'\n    ];\n    a0_0x18a4 = function () {\n        return _0x4afb41;\n    };\n    return a0_0x18a4();\n}\nvar Arr = input[a0_0x5317c2(0x3)]()[a0_0x5317c2(0x4)]('\\x0a');\nfor (var i = 0x0; i < Arr[a0_0x5317c2(0x5)]; i++) {\n    var arr = Arr[i][a0_0x5317c2(0x4)](',')[a0_0x5317c2(0x6)](Number);\n    (function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        var _0x1becb4 = a0_0x1c7c;\n        var d12 = Math[_0x1becb4(0x0)](Math[_0x1becb4(0x7)](x1 - x2, 0x2) + Math[_0x1becb4(0x7)](y1 - y2, 0x2));\n        var d23 = Math[_0x1becb4(0x0)](Math[_0x1becb4(0x7)](x2 - x3, 0x2) + Math[_0x1becb4(0x7)](y2 - y3, 0x2));\n        var d34 = Math[_0x1becb4(0x0)](Math[_0x1becb4(0x7)](x3 - x4, 0x2) + Math[_0x1becb4(0x7)](y3 - y4, 0x2));\n        var d41 = Math[_0x1becb4(0x0)](Math['pow'](x4 - x1, 0x2) + Math[_0x1becb4(0x7)](y4 - y1, 0x2));\n        var d13 = Math['sqrt'](Math['pow'](x1 - x3, 0x2) + Math[_0x1becb4(0x7)](y1 - y3, 0x2));\n        var d24 = Math[_0x1becb4(0x0)](Math[_0x1becb4(0x7)](x2 - x4, 0x2) + Math['pow'](y2 - y4, 0x2));\n        var A = heron(d12, d24, d41) + heron(d23, d34, d24);\n        var B = heron(d12, d23, d13) + heron(d13, d34, d41);\n        var ans = Math['abs'](A - B) < 0.00001 ? 'YES' : 'NO';\n        console[_0x1becb4(0x8)](ans);\n    }[a0_0x5317c2(0x9)](null, arr));\n}", "test_cases": [["0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0\n0.0,0.0,3.0,0.0,1.0,1.0,1.0,3.0", "YES\nNO"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\",\").map(Number);\n   (function(x1,y1,x2,y2,x3,y3,x4,y4){\n      var d12=Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));\n      var d23=Math.sqrt(Math.pow(x2-x3,2)+Math.pow(y2-y3,2));\n      var d34=Math.sqrt(Math.pow(x3-x4,2)+Math.pow(y3-y4,2));\n      var d41=Math.sqrt(Math.pow(x4-x1,2)+Math.pow(y4-y1,2));\n      var d13=Math.sqrt(Math.pow(x1-x3,2)+Math.pow(y1-y3,2));\n      var d24=Math.sqrt(Math.pow(x2-x4,2)+Math.pow(y2-y4,2));\n      var A=heron(d12,d24,d41)+heron(d23,d34,d24);\n      var B=heron(d12,d23,d13)+heron(d13,d34,d41);\n      var ans=(Math.abs(A-B)<1.0e-5)?\"YES\":\"NO\";\n      console.log(ans);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00053_1", "type": "JavaScript", "obfuscated": "var a0_0x37df51 = a0_0x1490;\nvar m = [\n    -0x1,\n    0x2,\n    0x3,\n    0x5,\n    0x7,\n    0xb,\n    0xd\n];\nfunction p(n) {\n    var _0x241664 = a0_0x1490;\n    if (m[n])\n        return m[n];\n    var found = m[_0x241664(0x0)] - 0x1;\n    var foundP = m[found];\n    for (var i = foundP + 0x2;; i += 0x2) {\n        if (isPrime(i)) {\n            if ('fgGmF' !== _0x241664(0x1)) {\n                found++;\n                m[found] = i;\n                if (found == n)\n                    return i;\n            } else {\n                found++;\n                m[found] = i;\n                if (found == n)\n                    return i;\n            }\n        }\n    }\n}\nfunction isPrime(num) {\n    var _0xbaffad = a0_0x1490;\n    if (num % 0x3 == 0x0)\n        return ![];\n    var limit = Math[_0xbaffad(0x2)](Math[_0xbaffad(0x3)](num));\n    var i = 0x1;\n    while (i * 0x6 - 0x1 <= limit) {\n        if (num % (i * 0x6 - 0x1) == 0x0 || num % (i * 0x6 + 0x1) == 0x0)\n            return ![];\n        i++;\n    }\n    return !![];\n}\nvar input = require('fs')[a0_0x37df51(0x4)](a0_0x37df51(0x5), a0_0x37df51(0x6));\nfunction a0_0x1490(ADIcBK, key) {\n    var stringArray = a0_0x1121();\n    a0_0x1490 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1490(ADIcBK, key);\n}\nvar lines = input[a0_0x37df51(0x7)]('\\x0a');\nvar line;\nwhile (line = lines[a0_0x37df51(0x8)]()) {\n    var num = +line;\n    if (num == 0x0)\n        break;\n    var s = 0x0;\n    for (var i = num; i > 0x0; i--) {\n        s += p(i);\n    }\n    console[a0_0x37df51(0x9)](s);\n}\nfunction a0_0x1121() {\n    var _0x62b6e1 = [\n        'length',\n        'fgGmF',\n        'round',\n        'sqrt',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x1121 = function () {\n        return _0x62b6e1;\n    };\n    return a0_0x1121();\n}", "test_cases": [["2\n9\n0", "5\n100"]], "original": "var m = [-1, 2, 3, 5, 7, 11, 13];\nfunction p(n) {\n    if (m[n])\n        return m[n];\n\n    var found = m.length - 1;\n    var foundP = m[found];\n    for (var i = foundP + 2;; i += 2) {\n        if (isPrime(i)) {\n            found++;\n            m[found] = i;\n            if (found == n)\n                return i;\n        }\n    }\n}\n\nfunction isPrime(num) {\n    if (num % 3 == 0) return false;\n    var limit = Math.round(Math.sqrt(num));\n    var i = 1;\n    while(i * 6 - 1 <= limit) {\n        if (num % (i * 6 - 1) == 0 || num % (i * 6 + 1) == 0) return false;\n        i++;\n    }\n    return true;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var num = +line;\n    if (num == 0)\n        break;\n\n    var s = 0;\n    for (var i = num; i > 0; i--) {\n        s += p(i);\n    }\n    console.log(s);\n}", "language": "JavaScript"}
{"filename": "p00059_1", "type": "JavaScript", "obfuscated": "function a0_0xa959() {\n    var _0x1a0793 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'YES'\n    ];\n    a0_0xa959 = function () {\n        return _0x1a0793;\n    };\n    return a0_0xa959();\n}\nvar a0_0x43296a = a0_0x30c5;\nfunction a0_0x30c5(UTEEem, key) {\n    var stringArray = a0_0xa959();\n    a0_0x30c5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x30c5(UTEEem, key);\n}\nfor (j = 0x0, i = require('fs')[a0_0x43296a(0x0)](a0_0x43296a(0x1), a0_0x43296a(0x2))[a0_0x43296a(0x3)](/\\s/); a = +i[j++], b = +i[j++], c = +i[j++], d = +i[j++], e = +i[j++], f = +i[j++], g = +i[j++], h = +i[j++];)\n    console['log'](+a <= g & e <= c & b <= h & f <= d ? a0_0x43296a(0x4) : 'NO');", "test_cases": [["0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0\n0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0\n0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0", "YES\nYES\nNO"]], "original": "for(j=0,i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s/);a=+i[j++],b=+i[j++],c=+i[j++],d=+i[j++],e=+i[j++],f=+i[j++],g=+i[j++],h=+i[j++];)console.log(+a<=g&e<=c&b<=h&f<=d?'YES':'NO')", "language": "JavaScript"}
{"filename": "p00062_1", "type": "JavaScript", "obfuscated": "var a0_0x3d83c0 = a0_0x1552;\nfunction a0_0x1552(CsdWHX, key) {\n    var stringArray = a0_0xe623();\n    a0_0x1552 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1552(CsdWHX, key);\n}\nvar input = require('fs')[a0_0x3d83c0(0x0)](a0_0x3d83c0(0x1), a0_0x3d83c0(0x2));\nfunction a0_0xe623() {\n    var _0x424ffd = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'length',\n        'push'\n    ];\n    a0_0xe623 = function () {\n        return _0x424ffd;\n    };\n    return a0_0xe623();\n}\nvar lines = input['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var nums = line[a0_0x3d83c0(0x3)]('')['map'](function (n) {\n        return +n;\n    });\n    var n = nums[a0_0x3d83c0(0x4)];\n    while (n > 0x1) {\n        var a = [];\n        for (var i = 0x0; i < n - 0x1; i++) {\n            a[a0_0x3d83c0(0x5)]((nums[i] + nums[i + 0x1]) % 0xa);\n        }\n        n--;\n        nums = a;\n    }\n    console['log'](nums[0x0]);\n}", "test_cases": [["4823108376\n1234567890\n0123456789", "5\n6\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var nums = line.split('').map(function(n){return +n;});\n    var n = nums.length;\n    while (n > 1) {\n        var a = [];\n        for (var i = 0; i < n - 1; i++) {\n            a.push((nums[i] + nums[i+1]) % 10);\n        }\n        n--;\n        nums = a;\n    }\n    console.log(nums[0]);\n}", "language": "JavaScript"}
{"filename": "p00063_1", "type": "JavaScript", "obfuscated": "var a0_0x2d7032 = a0_0x1ec6;\nfunction a0_0x2ca9() {\n    var _0x5798ff = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'forEach',\n        'split',\n        'reverse',\n        'join',\n        'log'\n    ];\n    a0_0x2ca9 = function () {\n        return _0x5798ff;\n    };\n    return a0_0x2ca9();\n}\nfunction a0_0x1ec6(aRjBpN, key) {\n    var stringArray = a0_0x2ca9();\n    a0_0x1ec6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ec6(aRjBpN, key);\n}\nvar input = require('fs')[a0_0x2d7032(0x0)](a0_0x2d7032(0x1), a0_0x2d7032(0x2));\nvar Arr = input['trim']()['split']('\\x0a');\nvar cnt = 0x0;\nArr[a0_0x2d7032(0x3)](function (v) {\n    var _0x3d96c9 = a0_0x1ec6;\n    var str = v[_0x3d96c9(0x4)]('')[_0x3d96c9(0x5)]()[_0x3d96c9(0x6)]('');\n    if (str == v)\n        cnt++;\n});\nconsole[a0_0x2d7032(0x7)](cnt);", "test_cases": [["abcba\nsx\nabcddcba\nrttrd", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar cnt=0;\nArr.forEach(function(v){\nvar str=v.split(\"\").reverse().join(\"\");\nif(str==v)cnt++;\n});\nconsole.log(cnt);", "language": "JavaScript"}
{"filename": "p00089_1", "type": "JavaScript", "obfuscated": "var a0_0x1e5260 = a0_0x374b;\nfunction a0_0x1718() {\n    var _0x27c949 = [\n        'length',\n        'HrVAw',\n        'map',\n        'push',\n        'IjwhY',\n        'max',\n        'LsuPD',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'forEach',\n        'split',\n        'log'\n    ];\n    a0_0x1718 = function () {\n        return _0x27c949;\n    };\n    return a0_0x1718();\n}\nfunction bomb(y, x, sum) {\n    var _0x14dddd = a0_0x374b;\n    YX[y][x] = sum;\n    if (y == yx[_0x14dddd(0x0)] - 0x1) {\n        max = Math['max'](max, sum);\n    } else if ((yx['length'] - 0x1) / 0x2 > y) {\n        if ('HrVAw' !== _0x14dddd(0x1)) {\n            var x = v['split'](',')[_0x14dddd(0x2)](Number);\n            var X = x[_0x14dddd(0x2)](function (v) {\n                return 0x0;\n            });\n            yx[_0x14dddd(0x3)](x);\n            YX[_0x14dddd(0x3)](X);\n        } else {\n            if (YX[y + 0x1][x] < sum + yx[y + 0x1][x])\n                bomb(y + 0x1, x, sum + yx[y + 0x1][x]);\n            if (YX[y + 0x1][x + 0x1] < sum + yx[y + 0x1][x + 0x1])\n                bomb(y + 0x1, x + 0x1, sum + yx[y + 0x1][x + 0x1]);\n        }\n    } else if ((yx['length'] - 0x1) / 0x2 <= y) {\n        if (_0x14dddd(0x4) !== _0x14dddd(0x4)) {\n            max = Math[_0x14dddd(0x5)](max, sum);\n        } else {\n            if (x - 0x1 >= 0x0) {\n                if (_0x14dddd(0x6) === 'LsuPD') {\n                    if (YX[y + 0x1][x - 0x1] < sum + yx[y + 0x1][x - 0x1])\n                        bomb(y + 0x1, x - 0x1, sum + yx[y + 0x1][x - 0x1]);\n                } else {\n                    return 0x0;\n                }\n            }\n            if (x < yx[y]['length'] - 0x1) {\n                if ('VsPqI' === 'VsPqI') {\n                    if (YX[y + 0x1][x] < sum + yx[y + 0x1][x])\n                        bomb(y + 0x1, x, sum + yx[y + 0x1][x]);\n                } else {\n                    if (YX[y + 0x1][x - 0x1] < sum + yx[y + 0x1][x - 0x1])\n                        bomb(y + 0x1, x - 0x1, sum + yx[y + 0x1][x - 0x1]);\n                }\n            }\n        }\n    }\n}\nvar input = require('fs')[a0_0x1e5260(0x7)](a0_0x1e5260(0x8), a0_0x1e5260(0x9));\nvar Arr = input['trim']()['split']('\\x0a');\nvar yx = [];\nfunction a0_0x374b(FdMyIO, key) {\n    var stringArray = a0_0x1718();\n    a0_0x374b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x374b(FdMyIO, key);\n}\nvar YX = [];\nArr[a0_0x1e5260(0xa)](function (v) {\n    var _0x432826 = a0_0x374b;\n    var x = v[_0x432826(0xb)](',')[_0x432826(0x2)](Number);\n    var X = x[_0x432826(0x2)](function (v) {\n        return 0x0;\n    });\n    yx['push'](x);\n    YX[_0x432826(0x3)](X);\n});\nvar max = 0x0;\nbomb(0x0, 0x0, yx[0x0][0x0]);\nconsole[a0_0x1e5260(0xc)](max);", "test_cases": [["7\n3,8\n8,1,0\n2,7,4,4\n4,5,2,6,5\n2,7,4,4\n8,1,0\n3,8\n7", "55"]], "original": "function bomb(y,x,sum){\n   YX[y][x]=sum;\n   if(y==yx.length-1){\n      max=Math.max(max,sum);\n   }else if((yx.length-1)/2>y){\n      if(YX[y+1][x]<sum+yx[y+1][x])bomb(y+1,x,sum+yx[y+1][x]);\n      if(YX[y+1][x+1]<sum+yx[y+1][x+1])bomb(y+1,x+1,sum+yx[y+1][x+1]);      \n   }else if((yx.length-1)/2<=y){\n      if(x-1>=0){\n         if(YX[y+1][x-1]<sum+yx[y+1][x-1])bomb(y+1,x-1,sum+yx[y+1][x-1]);\n      }\n      if(x<yx[y].length-1){\n         if(YX[y+1][x]<sum+yx[y+1][x])bomb(y+1,x,sum+yx[y+1][x]);\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar yx=[];\nvar YX=[];\nArr.forEach(function(v){\n   var x=v.split(\",\").map(Number);\n   var X=x.map(function(v){return 0;});\n   yx.push(x);\n   YX.push(X);\n});\nvar max=0;\nbomb(0,0,yx[0][0]);\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p00095_1", "type": "JavaScript", "obfuscated": "var a0_0x2cd5e4 = a0_0x437e;\n(function (input) {\n    var _0x28716d = a0_0x437e;\n    var inputs = input[_0x28716d(0x0)](/\\r/g, '')[_0x28716d(0x1)]('\\x0a'), data = [], n, line, max_index, a, b;\n    n = parseInt(inputs[_0x28716d(0x2)]());\n    max_index = 0x65;\n    max_value = -0x1;\n    while (n--) {\n        line = inputs[_0x28716d(0x2)]()[_0x28716d(0x1)]('\\x20');\n        a = parseInt(line[0x0]);\n        b = parseInt(line[0x1]);\n        if (b > max_value || b === max_value && a < max_index) {\n            max_index = a;\n            max_value = b;\n        }\n    }\n    console[_0x28716d(0x3)](max_index + '\\x20' + max_value);\n}(require('fs')['readFileSync'](a0_0x2cd5e4(0x4), a0_0x2cd5e4(0x5))));\nfunction a0_0x437e(bDsvNC, key) {\n    var stringArray = a0_0x2539();\n    a0_0x437e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x437e(bDsvNC, key);\n}\nfunction a0_0x2539() {\n    var _0xe23d15 = [\n        'replace',\n        'split',\n        'shift',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2539 = function () {\n        return _0xe23d15;\n    };\n    return a0_0x2539();\n}", "test_cases": [["6\n1 14\n2 25\n3 42\n4 11\n5 40\n6 37", "3 42"]], "original": "(function (input) {\n    var inputs = input.replace(/\\r/g, '').split(\"\\n\"),\n        data = [],\n        n, line, max_index, a, b;\n\n    n = parseInt(inputs.shift());\n\n    max_index = 101;\n    max_value = -1;\n    while ( n-- ) {\n        line = inputs.shift().split(' ');\n        a = parseInt(line[0]);\n        b = parseInt(line[1]);\n\n        if ( b > max_value || b === max_value && a < max_index ) {\n            max_index = a;\n            max_value = b;\n        }\n    }\n    console.log(max_index+\" \"+max_value);\n\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00096_1", "type": "JavaScript", "obfuscated": "var a0_0x1e7137 = a0_0x4ba7;\nvar ab = [];\nfor (var i = 0x0; i <= 0x3e8; i++) {\n    for (var j = 0x0; j <= 0x3e8; j++) {\n        ab['push'](i + j);\n    }\n}\nab[a0_0x1e7137(0x0)](function (a, b) {\n    return a - b;\n});\nfunction a0_0x4ba7(GYYeoE, key) {\n    var stringArray = a0_0x2da8();\n    a0_0x4ba7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ba7(GYYeoE, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x1e7137(0x1));\nvar Arr = input['trim']()[a0_0x1e7137(0x2)]('\\x0a');\nfunction a0_0x2da8() {\n    var _0xa78c9e = [\n        'sort',\n        'utf8',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x2da8 = function () {\n        return _0xa78c9e;\n    };\n    return a0_0x2da8();\n}\nwhile (!![]) {\n    if (Arr[a0_0x1e7137(0x3)] == 0x0)\n        break;\n    var n = Arr['shift']() - 0x0;\n    var cnt = 0x0;\n    var k = ab[a0_0x1e7137(0x3)] - 0x1;\n    for (var i = 0x0; i < ab['length']; i++) {\n        while (ab[i] + ab[k] > n)\n            k--;\n        var memo = k;\n        while (ab[i] + ab[memo] == n) {\n            cnt++;\n            memo--;\n        }\n    }\n    console[a0_0x1e7137(0x4)](cnt);\n}", "test_cases": [["2\n3\n35", "10\n20\n8436"]], "original": "var ab=[];\nfor(var i=0;i<=1000;i++){\n   for(var j=0;j<=1000;j++){\n      ab.push(i+j);\n   }\n}\nab.sort(function(a,b){return a-b;});\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var n=Arr.shift()-0;\n   var cnt=0;\n   var k=ab.length-1;\n   for(var i=0;i<ab.length;i++){\n      while(ab[i]+ab[k]>n)k--;\n      var memo=k;\n      while(ab[i]+ab[memo]==n){\n         cnt++;\n         memo--;\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00099_1", "type": "JavaScript", "obfuscated": "var a0_0x484fbe = a0_0x4741;\nfunction a0_0x4741(bhCWdO, key) {\n    var stringArray = a0_0x49e2();\n    a0_0x4741 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4741(bhCWdO, key);\n}\nvar input = require('fs')[a0_0x484fbe(0x0)]('/dev/stdin', a0_0x484fbe(0x1));\nvar arr = input[a0_0x484fbe(0x2)]()[a0_0x484fbe(0x3)]('\\x0a');\nvar nq = arr[a0_0x484fbe(0x4)]()['split']('\\x20')['map'](Number);\nvar player = [];\nfunction a0_0x49e2() {\n    var _0x6daf3f = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'forEach',\n        'log'\n    ];\n    a0_0x49e2 = function () {\n        return _0x6daf3f;\n    };\n    return a0_0x49e2();\n}\nvar maxValue = 0x0;\nvar maxId = 0x0;\nfor (var i = 0x0; i < nq[0x0]; i++)\n    player[i] = 0x0;\narr[a0_0x484fbe(0x5)](function (V) {\n    var _0x1790b0 = a0_0x4741;\n    var av = V[_0x1790b0(0x3)]('\\x20')['map'](Number);\n    var a = av[0x0] - 0x1;\n    var v = av[0x1];\n    player[a] += v;\n    if (a == maxId && v >= 0x0)\n        maxValue += v;\n    else if (maxValue == player[a] && maxId > a)\n        maxId = a;\n    else if (maxValue < player[a]) {\n        maxValue = player[a];\n        maxId = a;\n    } else if (a == maxId && v < 0x0) {\n        var max = -0x1 * Infinity;\n        player[_0x1790b0(0x5)](function (value, index) {\n            if (max < value) {\n                max = value;\n                maxValue = value;\n                maxId = index;\n            }\n        });\n    }\n    console[_0x1790b0(0x6)](maxId + 0x1 + '\\x20' + maxValue);\n});", "test_cases": [["3 5\n1 4 \n2 5 \n1 3\n3 6\n2 7", "1 4\n2 5\n1 7\n1 7\n2 12"], ["3 5\n1 4 \n2 5 \n2 -3\n3 4\n1 -1", "1 4\n2 5\n1 4\n1 4\n3 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar nq=arr.shift().split(\" \").map(Number);\nvar player=[];\nvar maxValue=0;\nvar maxId=0;\nfor(var i=0;i<nq[0];i++)player[i]=0;\narr.forEach(function(V){\n   var av=V.split(\" \").map(Number);\n   var a=av[0]-1;\n   var v=av[1];\n   player[a]+=v;\n   if(a==maxId && v>=0)maxValue+=v;\n   else if(maxValue==player[a] && maxId>a)maxId=a;\n   else if(maxValue<player[a]){maxValue=player[a];maxId=a;}\n   else if(a==maxId && v<0){\n      var max=(-1*Infinity);\n      player.forEach(function(value,index){\n         if(max<value){max=value;maxValue=value;maxId=index;}\n      });\n   }\n   console.log((maxId+1)+\" \"+maxValue);\n});", "language": "JavaScript"}
{"filename": "p00139_1", "type": "JavaScript", "obfuscated": "function a0_0x5242(bEcwJB, key) {\n    var stringArray = a0_0x1be2();\n    a0_0x5242 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5242(bEcwJB, key);\n}\nvar a0_0xdd9c8e = a0_0x5242;\nvar input = require('fs')['readFileSync'](a0_0xdd9c8e(0x0), 'utf8');\nvar Arr = input[a0_0xdd9c8e(0x1)](/\\n$/, '')['split']('\\x0a');\nfunction a0_0x1be2() {\n    var _0x333829 = [\n        '/dev/stdin',\n        'replace',\n        'shift',\n        'log'\n    ];\n    a0_0x1be2 = function () {\n        return _0x333829;\n    };\n    return a0_0x1be2();\n}\nvar n = Arr[a0_0xdd9c8e(0x2)]();\nfor (var i = 0x0; i < n; i++) {\n    if (/^>'(=+)#\\1~$/['test'](Arr[i]))\n        console['log']('A');\n    else if (/^>\\^(Q=)+~~$/['test'](Arr[i]))\n        console[a0_0xdd9c8e(0x3)]('B');\n    else\n        console[a0_0xdd9c8e(0x3)]('NA');\n}", "test_cases": [["3\n>'======#======~\n>^Q=Q=Q=Q=Q=Q=Q=Q=Q=~~\n>'===#====~", "A\nB\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift();\nfor(var i=0;i<n;i++){\n   if(/^>'(=+)#\\1~$/.test(Arr[i]))console.log(\"A\");\n   else if(/^>\\^(Q=)+~~$/.test(Arr[i]))console.log(\"B\");\n   else console.log(\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00151_1", "type": "JavaScript", "obfuscated": "var a0_0x1118cb = a0_0xa809;\nfunction a0_0xa809(vQBvKs, key) {\n    var stringArray = a0_0x140d();\n    a0_0xa809 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xa809(vQBvKs, key);\n}\nfunction count(y, x) {\n    var _0x4d55f5 = a0_0xa809;\n    var dy = [\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    var dx = [\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    var max = 0x1;\n    for (var i = 0x0; i < 0x4; i++) {\n        var cnt = 0x1;\n        for (var j = 0x1; j <= n; j++) {\n            var yy = y + dy[i] * j;\n            var xx = x + dx[i] * j;\n            if (yy < 0x0 || xx < 0x0 || yy >= n || xx >= n)\n                break;\n            if (yx[yy][xx] != 0x1)\n                break;\n            cnt++;\n        }\n        max = Math[_0x4d55f5(0x0)](max, cnt);\n        cnt = 0x1;\n    }\n    return max;\n}\nfunction a0_0x140d() {\n    var _0x64d017 = [\n        'max',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x140d = function () {\n        return _0x64d017;\n    };\n    return a0_0x140d();\n}\nvar input = require('fs')[a0_0x1118cb(0x1)](a0_0x1118cb(0x2), a0_0x1118cb(0x3));\nvar Arr = input[a0_0x1118cb(0x4)]()[a0_0x1118cb(0x5)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x1118cb(0x6)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        yx[i] = Arr[a0_0x1118cb(0x6)]()[a0_0x1118cb(0x5)]('')['map'](Number);\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            if (yx[i][j] == 0x1)\n                max = Math[a0_0x1118cb(0x0)](max, count(i, j));\n        }\n    }\n    console[a0_0x1118cb(0x7)](max);\n}", "test_cases": [["5\n00011\n00101\n01000\n10101\n00010\n8\n11000001\n10110111\n01100111\n01111010\n11111111\n01011010\n10100010\n10000001\n2\n01\n00\n3\n000\n000\n000\n0", "4\n8\n1\n0"]], "original": "function count(y,x){\n   var dy=[0,1,1,1];\n   var dx=[1,-1,0,1];\n   var max=1;\n   for(var i=0;i<4;i++){\n      var cnt=1;\n      for(var j=1;j<=n;j++){\n         var yy=y+(dy[i]*j);\n         var xx=x+(dx[i]*j);\n         if(yy<0 || xx<0 || yy>=n || xx>=n)break;\n         if(yx[yy][xx]!=1)break;\n         cnt++;\n      }\n      max=Math.max(max,cnt);\n      cnt=1;\n   }\n   return max;\n}\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      yx[i]=(Arr.shift()).split(\"\").map(Number);\n   }\n   var max=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         if(yx[i][j]==1)max=Math.max(max,count(i,j));\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00176_1", "type": "JavaScript", "obfuscated": "function a0_0x2f80(hKEFCw, key) {\n    var stringArray = a0_0x19a8();\n    a0_0x2f80 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f80(hKEFCw, key);\n}\nvar a0_0x3ab46a = a0_0x2f80;\nfunction a0_0x19a8() {\n    var _0x35c2f4 = [\n        'split',\n        'black',\n        'blue',\n        'yellow',\n        'white',\n        'length',\n        'substr',\n        'pow',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x19a8 = function () {\n        return _0x35c2f4;\n    };\n    return a0_0x19a8();\n}\n(function (input) {\n    var _0x463350 = a0_0x2f80;\n    var lines = input[_0x463350(0x0)]('\\x0a');\n    var colors = [\n        [\n            _0x463350(0x1),\n            0x0,\n            0x0,\n            0x0\n        ],\n        [\n            _0x463350(0x2),\n            0x0,\n            0x0,\n            0xff\n        ],\n        [\n            'lime',\n            0x0,\n            0xff,\n            0x0\n        ],\n        [\n            'aqua',\n            0x0,\n            0xff,\n            0x0\n        ],\n        [\n            'red',\n            0xff,\n            0x0,\n            0x0\n        ],\n        [\n            'fuchsia',\n            0xff,\n            0x0,\n            0xff\n        ],\n        [\n            _0x463350(0x3),\n            0xff,\n            0xff,\n            0x0\n        ],\n        [\n            _0x463350(0x4),\n            0xff,\n            0xff,\n            0xff\n        ]\n    ];\n    for (var i = 0x0; i < lines[_0x463350(0x5)]; ++i) {\n        if (lines[i][0x0] === '#') {\n            var best_color;\n            var min_d = 0x3 * 0x100 * 0x100 + 0x1;\n            var r = parseInt(lines[i][_0x463350(0x6)](0x1, 0x2), 0x10);\n            var g = parseInt(lines[i]['substr'](0x3, 0x2), 0x10);\n            var b = parseInt(lines[i][_0x463350(0x6)](0x5, 0x2), 0x10);\n            for (var j = 0x0; j < colors[_0x463350(0x5)]; ++j) {\n                var d = Math[_0x463350(0x7)](r - colors[j][0x1], 0x2) + Math['pow'](g - colors[j][0x2], 0x2) + Math[_0x463350(0x7)](b - colors[j][0x3], 0x2);\n                if (d < min_d) {\n                    min_d = d;\n                    best_color = colors[j][0x0];\n                }\n            }\n            console[_0x463350(0x8)](best_color);\n        }\n    }\n}(require('fs')['readFileSync'](a0_0x3ab46a(0x9), a0_0x3ab46a(0xa))['trim']()));", "test_cases": [["#ffe085\n#787878\n#decade\n#ff55ff\n0", "white\nblack\nwhite\nfuchsia"]], "original": "(function(input) {\n  var lines = input.split(\"\\n\");\n  var colors = [\n    ['black', 0x00, 0x00, 0x00],\n    ['blue', 0x00, 0x00, 0xff],\n    ['lime', 0x00, 0xff, 0x00],\n    ['aqua', 0x00, 0xff, 0x00],\n    ['red', 0xff, 0x00, 0x00],\n    ['fuchsia', 0xff, 0x00, 0xff],\n    ['yellow', 0xff, 0xff, 0x00],\n    ['white', 0xff, 0xff, 0xff],\n  ];\n  for (var i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '#') {\n      var best_color;\n      var min_d = 3 * 256 * 256 + 1;\n      var r = parseInt(lines[i].substr(1, 2), 16);\n      var g = parseInt(lines[i].substr(3, 2), 16);\n      var b = parseInt(lines[i].substr(5, 2), 16);\n      for (var j = 0; j < colors.length; ++j) {\n        var d = Math.pow(r - colors[j][1], 2) + Math.pow(g - colors[j][2], 2) + Math.pow(b - colors[j][3], 2);\n        if (d < min_d) {\n          min_d = d;\n          best_color = colors[j][0];\n        }\n      }\n      console.log(best_color);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8').trim());", "language": "JavaScript"}
{"filename": "p00208_1", "type": "JavaScript", "obfuscated": "var a0_0x304651 = a0_0x1630;\nvar input = require('fs')[a0_0x304651(0x0)](a0_0x304651(0x1), a0_0x304651(0x2));\nvar Arr = input['trim']()[a0_0x304651(0x3)]('\\x0a');\nfunction a0_0x1630(ELsonn, key) {\n    var stringArray = a0_0x405c();\n    a0_0x1630 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1630(ELsonn, key);\n}\nfunction a0_0x405c() {\n    var _0x44529e = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'toString',\n        'replace',\n        'log'\n    ];\n    a0_0x405c = function () {\n        return _0x44529e;\n    };\n    return a0_0x405c();\n}\nwhile (!![]) {\n    var n = Arr[a0_0x304651(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var str = n[a0_0x304651(0x5)](0x8) + '';\n    str = str['replace'](/7/g, '9');\n    str = str['replace'](/6/g, '8');\n    str = str['replace'](/5/g, '7');\n    str = str[a0_0x304651(0x6)](/4/g, '5');\n    console[a0_0x304651(0x7)](str);\n}", "test_cases": [["15\n100\n1000000000\n3\n0", "19\n155\n9358757000\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var str=n.toString(8)+\"\";\n   str=str.replace(/7/g,\"9\");\n   str=str.replace(/6/g,\"8\");\n   str=str.replace(/5/g,\"7\");\n   str=str.replace(/4/g,\"5\");\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00217_1", "type": "JavaScript", "obfuscated": "function a0_0x7569(tQlXjh, key) {\n    var stringArray = a0_0x4695();\n    a0_0x7569 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7569(tQlXjh, key);\n}\nvar a0_0x498eaa = a0_0x7569;\nvar input = require('fs')[a0_0x498eaa(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x498eaa(0x1)]()[a0_0x498eaa(0x2)]('\\x0a');\nwhile (!![]) {\n    var AL = Arr[a0_0x498eaa(0x3)]();\n    if (AL == 0x0)\n        break;\n    var pd = [];\n    for (var i = 0x0; i < AL; i++) {\n        var arr = Arr[a0_0x498eaa(0x3)]()[a0_0x498eaa(0x2)]('\\x20')['map'](Number);\n        var p = arr[0x0];\n        var d = arr[0x1] + arr[0x2];\n        pd[a0_0x498eaa(0x4)]([\n            p,\n            d\n        ]);\n    }\n    pd[a0_0x498eaa(0x5)](function (a, b) {\n        if (a[0x1] <= b[0x1])\n            return 0x1;\n        else\n            return -0x1;\n    });\n    console['log'](pd[0x0][a0_0x498eaa(0x6)]('\\x20'));\n}\nfunction a0_0x4695() {\n    var _0x20087a = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'sort',\n        'join'\n    ];\n    a0_0x4695 = function () {\n        return _0x20087a;\n    };\n    return a0_0x4695();\n}", "test_cases": [["5\n263 2345 2504\n1 3210 1985\n5000 1501 4132\n10000 503 3107\n51 1758 2690\n3\n345 5000 2396\n7 3910 1590\n6789 2525 3616\n0", "5000 5633\n345 7396"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n    var AL=Arr.shift();\n    if(AL==0)break;\n    var pd=[];\n    for(var i=0;i<AL;i++){\n        var arr=(Arr.shift()).split(\" \").map(Number);\n        var p=arr[0];\n        var d=arr[1]+arr[2];\n        pd.push([p,d]);\n    }\n    pd.sort(function(a,b){\n        if(a[1]<=b[1])return 1;\n        else return -1;\n    });\n    console.log(pd[0].join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00253_1", "type": "JavaScript", "obfuscated": "var a0_0x8b58b5 = a0_0x7a6d;\nvar input = require('fs')['readFileSync'](a0_0x8b58b5(0x0), 'utf8');\nvar Arr = input[a0_0x8b58b5(0x1)]()[a0_0x8b58b5(0x2)]('\\x0a');\nfunction a0_0x7a6d(kJXMRm, key) {\n    var stringArray = a0_0x4140();\n    a0_0x7a6d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7a6d(kJXMRm, key);\n}\nwhile (!![]) {\n    var n = Arr[a0_0x8b58b5(0x3)]() - 0x0;\n    if (n === 0x0)\n        break;\n    var arr = Arr[a0_0x8b58b5(0x3)]()['split']('\\x20')[a0_0x8b58b5(0x4)](Number);\n    for (var i = 0x0; i < n + 0x1; i++) {\n        var a = arr[a0_0x8b58b5(0x5)](function (v, index) {\n            return i != index;\n        });\n        var h = a[0x1] - a[0x0];\n        var flag = !![];\n        for (var j = 0x1; j < n; j++) {\n            if (h != a[j] - a[j - 0x1])\n                flag = ![];\n        }\n        if (flag == !![])\n            break;\n    }\n    console[a0_0x8b58b5(0x6)](arr[i]);\n}\nfunction a0_0x4140() {\n    var _0x12f20b = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'filter',\n        'log'\n    ];\n    a0_0x4140 = function () {\n        return _0x12f20b;\n    };\n    return a0_0x4140();\n}", "test_cases": [["5\n1 2 3 6 4 5\n6\n1 3 6 9 12 15 18\n4\n5 7 9 11 12\n0", "6\n1\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n===0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   for(var i=0;i<n+1;i++){\n      var a=arr.filter(function(v,index){return i!=index;});\n      var h=a[1]-a[0];\n      var flag=true;\n      for(var j=1;j<n;j++){\n         if(h!=a[j]-a[j-1])flag=false;\n      }\n      if(flag==true)break;\n   }\n   console.log(arr[i]);\n}", "language": "JavaScript"}
{"filename": "p00255_1", "type": "JavaScript", "obfuscated": "function a0_0x472f() {\n    var _0x4dbd29 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'sort',\n        'length',\n        'max',\n        'shift',\n        'log'\n    ];\n    a0_0x472f = function () {\n        return _0x4dbd29;\n    };\n    return a0_0x472f();\n}\nvar a0_0xd3d337 = a0_0x5200;\nvar input = require('fs')[a0_0xd3d337(0x0)](a0_0xd3d337(0x1), 'utf8');\nfunction a0_0x5200(dzDwaQ, key) {\n    var stringArray = a0_0x472f();\n    a0_0x5200 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5200(dzDwaQ, key);\n}\nvar Arr = input['trim']()[a0_0xd3d337(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var p = Arr['shift']()[a0_0xd3d337(0x2)]('\\x20')[a0_0xd3d337(0x3)](Number);\n    var j = Arr['shift']()[a0_0xd3d337(0x2)]('\\x20')['map'](Number);\n    var sum = p['reduce'](function (a, b) {\n        return a + b;\n    });\n    j[a0_0xd3d337(0x4)](function (a, b) {\n        return b - a;\n    });\n    var max = sum * n;\n    while (!![]) {\n        if (j[a0_0xd3d337(0x5)] == 0x0)\n            break;\n        n--;\n        max = Math[a0_0xd3d337(0x6)](max, (sum + j[a0_0xd3d337(0x7)]()) * n);\n    }\n    console[a0_0xd3d337(0x8)](max);\n}", "test_cases": [["3\n1 1 1\n3 3\n4\n3 3 3 3\n1 1 1\n5\n1 2 3 4 5\n4 3 2 1\n0", "12\n48\n76"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var p=Arr.shift().split(\" \").map(Number);\n   var j=Arr.shift().split(\" \").map(Number);\n   var sum=p.reduce(function(a,b){return a+b;});\n   j.sort(function(a,b){return b-a;});\n   var max=sum*n;\n   while(true){\n      if(j.length==0)break;\n      n--;\n      max=Math.max(max,(sum+j.shift())*n);\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00429_1", "type": "JavaScript", "obfuscated": "var a0_0x8eff17 = a0_0x5149;\nvar input = require('fs')[a0_0x8eff17(0x0)](a0_0x8eff17(0x1), a0_0x8eff17(0x2));\nfunction a0_0x5149(zVJaPQ, key) {\n    var stringArray = a0_0x4a87();\n    a0_0x5149 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5149(zVJaPQ, key);\n}\nvar Arr = input[a0_0x8eff17(0x3)]()[a0_0x8eff17(0x4)]('\\x0a');\nfunction a0_0x4a87() {\n    var _0x247337 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'replace',\n        'log'\n    ];\n    a0_0x4a87 = function () {\n        return _0x247337;\n    };\n    return a0_0x4a87();\n}\nfor (var i = 0x0; i < Arr[a0_0x8eff17(0x5)]; i = i + 0x2) {\n    var n = Arr[i] - 0x0;\n    var str = Arr[i + 0x1];\n    for (var j = 0x0; j < n; j++) {\n        str = str[a0_0x8eff17(0x6)](/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g, function (s) {\n            var _0x105800 = a0_0x5149;\n            return s[_0x105800(0x5)] + s[0x0];\n        });\n    }\n    console[a0_0x8eff17(0x7)](str);\n    if (Arr[i + 0x2] == '0')\n        break;\n}", "test_cases": [["5\n11\n5\n11\n0", "13112221\n13112221"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n   var Arr=(input.trim()).split(\"\\n\");\n   for(var i=0;i<Arr.length;i=i+2){\n      var n=Arr[i]-0;\n      var str=Arr[i+1];\n      for(var j=0;j<n;j++){\n      str=str.replace(/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g,function(s){\n      return s.length+s[0];\n      });\n      }\n      console.log(str);\n      if(Arr[i+2]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00430_1", "type": "JavaScript", "obfuscated": "function a0_0x2b7b(QwoNjm, key) {\n    var stringArray = a0_0x4914();\n    a0_0x2b7b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b7b(QwoNjm, key);\n}\nvar a0_0x98c905 = a0_0x2b7b;\nfunction a0_0x4914() {\n    var _0x2a815d = [\n        'log',\n        'join',\n        'push',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift'\n    ];\n    a0_0x4914 = function () {\n        return _0x2a815d;\n    };\n    return a0_0x4914();\n}\nfunction bomb(arr) {\n    var _0x2aa48a = a0_0x2b7b;\n    console[_0x2aa48a(0x0)](arr[_0x2aa48a(0x1)]('\\x20'));\n    if (arr[0x0] === 0x1)\n        return;\n    var i = arr['length'] - 0x1;\n    while (!![]) {\n        if (arr[i] !== 0x1) {\n            if (arr[i] === 0x2 || i === arr['length'] - 0x1) {\n                arr[i]--;\n                arr[_0x2aa48a(0x2)](0x1);\n            } else {\n                arr[i]--;\n                arr[i + 0x1]++;\n            }\n            break;\n        }\n        i--;\n    }\n    bomb(arr);\n}\nvar input = require('fs')['readFileSync'](a0_0x98c905(0x3), a0_0x98c905(0x4));\nvar Arr = input[a0_0x98c905(0x5)]()[a0_0x98c905(0x6)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x98c905(0x7)]() - 0x0;\n    if (n == 0x0)\n        break;\n    bomb([n]);\n}", "test_cases": [["5\n5\n0", "5\n4 1\n3 2\n3 1 1\n2 2 1\n2 1 1 1\n1 1 1 1 1\n5\n4 1\n3 2\n3 1 1\n2 2 1\n2 1 1 1\n1 1 1 1 1"]], "original": "function bomb(arr){\n   console.log(arr.join(\" \"));\n   if(arr[0]===1)return;\n   var i=arr.length-1;\n   while(true){\n      if(arr[i]!==1){\n         if(arr[i]===2 || i===arr.length-1){arr[i]--;arr.push(1);}\n         else{arr[i]--;arr[i+1]++;}\n         break;\n      }\n      i--;\n   }\n   bomb(arr);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   bomb([n]);\n}", "language": "JavaScript"}
{"filename": "p00594_1", "type": "JavaScript", "obfuscated": "var a0_0x3673bf = a0_0x124f;\nfunction a0_0x124f(AbzanC, key) {\n    var stringArray = a0_0x2999();\n    a0_0x124f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x124f(AbzanC, key);\n}\nvar input = require('fs')[a0_0x3673bf(0x0)](a0_0x3673bf(0x1), a0_0x3673bf(0x2));\nfunction a0_0x2999() {\n    var _0x16e3eb = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'forEach',\n        'log'\n    ];\n    a0_0x2999 = function () {\n        return _0x16e3eb;\n    };\n    return a0_0x2999();\n}\nvar arr = input[a0_0x3673bf(0x3)]()[a0_0x3673bf(0x4)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x3673bf(0x5)]() - 0x0;\n    if (n === 0x0)\n        break;\n    var ary = arr['shift']()[a0_0x3673bf(0x4)]('\\x20');\n    var obj = {};\n    ary[a0_0x3673bf(0x6)](function (v) {\n        obj[v] = 0x0;\n    });\n    ary['forEach'](function (v) {\n        obj[v]++;\n    });\n    var ans = 'NO\\x20COLOR';\n    var half = n / 0x2;\n    for (var k in obj) {\n        if (obj[k] > half) {\n            ans = k;\n            break;\n        }\n    }\n    console[a0_0x3673bf(0x7)](ans);\n}", "test_cases": [["8\n3 1 2 3 3 1 5 3\n7\n5 2 5 3 4 5 5\n0", "NO COLOR\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n===0)break;\n   var ary=arr.shift().split(\" \");\n   var obj={};\n   ary.forEach(function(v){obj[v]=0;});\n   ary.forEach(function(v){obj[v]++;});\n   var ans=\"NO COLOR\";\n   var half=n/2;\n   for(var k in obj){\n      if(obj[k]>half){ans=k;break;}\n   }\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00616_1", "type": "JavaScript", "obfuscated": "var a0_0x5e5f25 = a0_0x2e98;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x5e5f25(0x0));\nfunction a0_0x273a() {\n    var _0x33bb0d = [\n        'utf8',\n        'trim',\n        'shift',\n        '0\\x200',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x273a = function () {\n        return _0x33bb0d;\n    };\n    return a0_0x273a();\n}\nfunction a0_0x2e98(kDIpQp, key) {\n    var stringArray = a0_0x273a();\n    a0_0x2e98 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e98(kDIpQp, key);\n}\nvar arr = input[a0_0x5e5f25(0x1)]()['split']('\\x0a');\nwhile (!![]) {\n    var nh = arr[a0_0x5e5f25(0x2)]();\n    if (nh == a0_0x5e5f25(0x3))\n        break;\n    nh = nh[a0_0x5e5f25(0x4)]('\\x20')[a0_0x5e5f25(0x5)](Number);\n    var n = nh[0x0];\n    var h = nh[0x1];\n    var xyz = [];\n    for (var i = 0x0; i < n; i++) {\n        xyz[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            xyz[i][j] = [];\n            for (var k = 0x0; k < n; k++) {\n                xyz[i][j][k] = 0x0;\n            }\n        }\n    }\n    for (var I = 0x0; I < h; I++) {\n        var ary = arr['shift']()[a0_0x5e5f25(0x4)]('\\x20');\n        var c = ary[a0_0x5e5f25(0x2)]();\n        ary = ary[a0_0x5e5f25(0x5)](function (v) {\n            return v - 0x1;\n        });\n        if (c == 'xy') {\n            for (var i = 0x0; i < n; i++)\n                xyz[ary[0x0]][ary[0x1]][i] = 0x1;\n        } else if (c == 'xz') {\n            for (var i = 0x0; i < n; i++)\n                xyz[ary[0x0]][i][ary[0x1]] = 0x1;\n        } else if (c == 'yz') {\n            for (var i = 0x0; i < n; i++)\n                xyz[i][ary[0x0]][ary[0x1]] = 0x1;\n        }\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            for (var k = 0x0; k < n; k++) {\n                if (xyz[i][j][k] == 0x0)\n                    cnt++;\n                ;\n            }\n        }\n    }\n    console[a0_0x5e5f25(0x6)](cnt);\n}", "test_cases": [["4 3\nxy 4 4\nxz 1 2\nyz 2 3\n4 5\nxy 1 1\nxy 3 3\nxz 3 3\nyz 2 1\nyz 3 3\n0 0", "52\n46"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nh=arr.shift();\n   if(nh==\"0 0\")break;\n   nh=nh.split(\" \").map(Number);\n   var n=nh[0];\n   var h=nh[1];\n   var xyz=[];\n   for(var i=0;i<n;i++){\n      xyz[i]=[];\n      for(var j=0;j<n;j++){\n         xyz[i][j]=[];\n         for(var k=0;k<n;k++){\n            xyz[i][j][k]=0;\n         }\n      }\n   }\n   for(var I=0;I<h;I++){\n      var ary=arr.shift().split(\" \");\n      var c=ary.shift();\n      ary=ary.map(function(v){return v-1;});\n      if(c==\"xy\"){for(var i=0;i<n;i++)xyz[ary[0]][ary[1]][i]=1;}\n      else if(c==\"xz\"){for(var i=0;i<n;i++)xyz[ary[0]][i][ary[1]]=1;}\n      else if(c==\"yz\"){for(var i=0;i<n;i++)xyz[i][ary[0]][ary[1]]=1;}\n   }\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         for(var k=0;k<n;k++){\n            if(xyz[i][j][k]==0)cnt++;;\n         }\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00716_1", "type": "JavaScript", "obfuscated": "var a0_0x238e78 = a0_0x577a;\nfunction a0_0x577a(IbPDNY, key) {\n    var stringArray = a0_0x4926();\n    a0_0x577a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x577a(IbPDNY, key);\n}\nfunction a0_0x4926() {\n    var _0x311588 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'log',\n        'max',\n        'apply'\n    ];\n    a0_0x4926 = function () {\n        return _0x311588;\n    };\n    return a0_0x4926();\n}\nfunction F1(m, b, c) {\n    var sum = 0x0;\n    for (var i = 0x0; i < Y; i++) {\n        sum += Math['floor'](m * b);\n        m -= c;\n    }\n    return m + sum;\n}\nfunction F2(m, b, c) {\n    for (var i = 0x0; i < Y; i++) {\n        m += Math['floor'](m * b) - c;\n    }\n    return m;\n}\nvar input = require('fs')['readFileSync'](a0_0x238e78(0x0), 'utf8');\nvar Arr = input[a0_0x238e78(0x1)]()[a0_0x238e78(0x2)]('\\x0a');\nvar M = Arr[a0_0x238e78(0x3)]() - 0x0;\nfor (var i = 0x0; i < M; i++) {\n    var money = Arr[a0_0x238e78(0x3)]() - 0x0;\n    var Y = Arr['shift']() - 0x0;\n    var N = Arr[a0_0x238e78(0x3)]() - 0x0;\n    var arr = [];\n    for (var j = 0x0; j < N; j++) {\n        var D = Arr[a0_0x238e78(0x3)]()[a0_0x238e78(0x2)]('\\x20')['map'](Number);\n        if (D[0x0] == 0x0)\n            arr[a0_0x238e78(0x4)](F1(money, D[0x1], D[0x2]));\n        if (D[0x0] == 0x1)\n            arr[a0_0x238e78(0x4)](F2(money, D[0x1], D[0x2]));\n    }\n    console[a0_0x238e78(0x5)](Math[a0_0x238e78(0x6)][a0_0x238e78(0x7)](null, arr));\n}", "test_cases": [["4\n1000000\n5\n2\n0 0.03125 3000\n1 0.03125 3000\n6620000\n7\n2\n0 0.0732421875 42307\n1 0.0740966796875 40942\n39677000\n4\n4\n0 0.0709228515625 30754\n1 0.00634765625 26165\n0 0.03662109375 79468\n0 0.0679931640625 10932\n10585000\n6\n4\n1 0.0054931640625 59759\n1 0.12353515625 56464\n0 0.0496826171875 98193\n0 0.0887451171875 78966", "1150357\n10559683\n50796918\n20829397"]], "original": "function F1(m,b,c){\n   var sum=0;\n   for(var i=0;i<Y;i++){\n      sum+=Math.floor(m*b);\n      m-=c;\n   }\n   return m+sum;\n}\nfunction F2(m,b,c){\n   for(var i=0;i<Y;i++){\n      m+=Math.floor(m*b)-c;\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar M=Arr.shift()-0;\nfor(var i=0;i<M;i++){\n   var money=Arr.shift()-0;\n   var Y=Arr.shift()-0;\n   var N=Arr.shift()-0;\n   var arr=[];\n   for(var j=0;j<N;j++){\n      var D=(Arr.shift()).split(\" \").map(Number);\n      if(D[0]==0)arr.push(F1(money,D[1],D[2]));\n      if(D[0]==1)arr.push(F2(money,D[1],D[2]));\n   }\n   console.log(Math.max.apply(null,arr));\n}", "language": "JavaScript"}
{"filename": "p00723_1", "type": "JavaScript", "obfuscated": "var a0_0x3b5247 = a0_0x1d9e;\nvar input = require('fs')[a0_0x3b5247(0x0)](a0_0x3b5247(0x1), a0_0x3b5247(0x2));\nvar Arr = input[a0_0x3b5247(0x3)]()[a0_0x3b5247(0x4)]('\\x0a');\nvar n = Arr[a0_0x3b5247(0x5)]() - 0x0;\nfunction a0_0x9e85() {\n    var _0x126cad = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'length',\n        'push',\n        'slice',\n        'reverse',\n        'join'\n    ];\n    a0_0x9e85 = function () {\n        return _0x126cad;\n    };\n    return a0_0x9e85();\n}\nfunction a0_0x1d9e(bcialL, key) {\n    var stringArray = a0_0x9e85();\n    a0_0x1d9e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d9e(bcialL, key);\n}\nfor (var I = 0x0; I < n; I++) {\n    var str = Arr['shift']();\n    var arr = [];\n    for (var i = 0x1; i < str[a0_0x3b5247(0x6)]; i++) {\n        arr[a0_0x3b5247(0x7)]([\n            str['slice'](0x0, i),\n            str[a0_0x3b5247(0x8)](i, str[a0_0x3b5247(0x6)])\n        ]);\n    }\n    var obj = {};\n    for (var i = 0x0; i < arr[a0_0x3b5247(0x6)]; i++) {\n        var A = arr[i][0x0];\n        var B = arr[i][0x1];\n        var a = A[a0_0x3b5247(0x4)]('')[a0_0x3b5247(0x9)]()[a0_0x3b5247(0xa)]('');\n        var b = B[a0_0x3b5247(0x4)]('')[a0_0x3b5247(0x9)]()[a0_0x3b5247(0xa)]('');\n        obj[A + B] = !![];\n        obj[A + b] = !![];\n        obj[a + B] = !![];\n        obj[a + b] = !![];\n        obj[B + A] = !![];\n        obj[B + a] = !![];\n        obj[b + A] = !![];\n        obj[b + a] = !![];\n    }\n    console['log'](Object['keys'](obj)[a0_0x3b5247(0x6)]);\n}", "test_cases": [["4\naa\nabba\nabcd\nabcde", "1\n6\n12\n18"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var str=Arr.shift();\n   var arr=[];\n   for(var i=1;i<str.length;i++){\n      arr.push([str.slice(0,i),str.slice(i,str.length)]);\n   }\n   var obj={};\n   for(var i=0;i<arr.length;i++){\n      var A=arr[i][0];\n      var B=arr[i][1];\n      var a=A.split(\"\").reverse().join(\"\");\n      var b=B.split(\"\").reverse().join(\"\");\n      obj[A+B]=true;\n      obj[A+b]=true;\n      obj[a+B]=true;\n      obj[a+b]=true;\n      obj[B+A]=true;\n      obj[B+a]=true;\n      obj[b+A]=true;\n      obj[b+a]=true;\n   }\n   console.log(Object.keys(obj).length);\n}", "language": "JavaScript"}
{"filename": "p00774_1", "type": "JavaScript", "obfuscated": "var a0_0x514b45 = a0_0x202b;\nfunction stoneRemove() {\n    var _0x559e75 = a0_0x202b;\n    yx[_0x559e75(0x0)](function (v, i) {\n        var _0x4468d9 = a0_0x202b;\n        if (_0x4468d9(0x1) !== _0x4468d9(0x1)) {\n            point += (x[0x0] - 0x0) * x['length'];\n            return x[_0x4468d9(0x2)](/./g, '0');\n        } else {\n            var str = v[_0x4468d9(0x3)]('')['replace'](/([1-9])\\1{2,}/, function (x) {\n                var _0x31c9a1 = a0_0x202b;\n                if (_0x31c9a1(0x4) !== _0x31c9a1(0x5)) {\n                    point += (x[0x0] - 0x0) * x[_0x31c9a1(0x6)];\n                    return x[_0x31c9a1(0x2)](/./g, '0');\n                } else {\n                    for (var j = 0x0; j < 0x5; j++) {\n                        if (yx[i][j] != 0x0 && yx[i + 0x1][j] == 0x0) {\n                            yx[i + 0x1][j] = yx[i][j];\n                            yx[i][j] = 0x0;\n                            flag = !![];\n                        }\n                    }\n                }\n            });\n            yx[i] = str[_0x4468d9(0x7)]('')[_0x4468d9(0x8)](Number);\n        }\n    });\n    var flag = !![];\n    while (flag) {\n        flag = ![];\n        for (var i = 0x0; i < H - 0x1; i++) {\n            for (var j = 0x0; j < 0x5; j++) {\n                if (yx[i][j] != 0x0 && yx[i + 0x1][j] == 0x0) {\n                    yx[i + 0x1][j] = yx[i][j];\n                    yx[i][j] = 0x0;\n                    flag = !![];\n                }\n            }\n        }\n    }\n}\nvar input = require('fs')[a0_0x514b45(0x9)](a0_0x514b45(0xa), a0_0x514b45(0xb));\nvar arr = input['trim']()[a0_0x514b45(0x7)]('\\x0a');\nfunction a0_0x202b(LzJrVT, key) {\n    var stringArray = a0_0x488a();\n    a0_0x202b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x202b(LzJrVT, key);\n}\nfunction a0_0x488a() {\n    var _0x507126 = [\n        'forEach',\n        'sUXRy',\n        'replace',\n        'join',\n        'DwYyB',\n        'UXejg',\n        'length',\n        'split',\n        'map',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'push',\n        'log'\n    ];\n    a0_0x488a = function () {\n        return _0x507126;\n    };\n    return a0_0x488a();\n}\nwhile (!![]) {\n    var h = arr[a0_0x514b45(0xc)]() - 0x0;\n    if (h == 0x0)\n        break;\n    var H = h;\n    var yx = [];\n    while (h--)\n        yx[a0_0x514b45(0xd)](arr[a0_0x514b45(0xc)]()[a0_0x514b45(0x7)]('\\x20')[a0_0x514b45(0x8)](Number));\n    var point = 0x0;\n    var p = point;\n    while (!![]) {\n        stoneRemove();\n        if (p == point)\n            break;\n        p = point;\n    }\n    console[a0_0x514b45(0xe)](point);\n}", "test_cases": [["1\n6 9 9 9 9\n5\n5 9 5 5 9\n5 5 6 9 9\n4 6 3 6 9\n3 3 2 9 9\n2 2 1 1 1\n10\n3 5 6 5 6\n2 2 2 8 3\n6 2 5 9 2\n7 7 7 6 1\n4 6 6 4 9\n8 9 1 1 8\n5 6 1 8 1\n6 8 2 1 2\n9 6 3 3 5\n5 3 8 8 8\n5\n1 2 3 4 5\n6 7 8 9 1\n2 3 4 5 6\n7 8 9 1 2\n3 4 5 6 7\n3\n2 2 8 7 4\n6 5 7 7 7\n8 8 9 9 9\n0", "36\n38\n99\n0\n72"]], "original": "function stoneRemove(){\n   yx.forEach(function(v,i){\n      var str=v.join(\"\").replace(/([1-9])\\1{2,}/,function(x){\n         point+=(x[0]-0)*x.length;\n         return x.replace(/./g,\"0\");\n      });\n      yx[i]=str.split(\"\").map(Number);\n   });\n   var flag=true;\n   while(flag){\n      flag=false;\n      for(var i=0;i<H-1;i++){\n         for(var j=0;j<5;j++){\n            if(yx[i][j]!=0 && yx[i+1][j]==0){\n               yx[i+1][j]=yx[i][j];\n               yx[i][j]=0;\n               flag=true;\n            }\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var h=arr.shift()-0;\n   if(h==0)break;\n   var H=h;\n   var yx=[];\n   while(h--)yx.push(arr.shift().split(\" \").map(Number));\n   var point=0;\n   var p=point;\n   while(true){\n      stoneRemove();\n      if(p==point)break;\n      p=point;\n   }\n   console.log(point);\n}", "language": "JavaScript"}
{"filename": "p00946_1", "type": "JavaScript", "obfuscated": "function a0_0x27a4() {\n    var _0x2f5b82 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'forEach',\n        'sort',\n        'map',\n        'log',\n        'join'\n    ];\n    a0_0x27a4 = function () {\n        return _0x2f5b82;\n    };\n    return a0_0x27a4();\n}\nfunction a0_0x191b(pwHliS, key) {\n    var stringArray = a0_0x27a4();\n    a0_0x191b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x191b(pwHliS, key);\n}\nvar a0_0x162179 = a0_0x191b;\nvar input = require('fs')['readFileSync'](a0_0x162179(0x0), a0_0x162179(0x1));\nvar arr = input[a0_0x162179(0x2)]()[a0_0x162179(0x3)]('\\x0a');\nvar n = arr[a0_0x162179(0x4)]()[a0_0x162179(0x3)]('\\x20')[0x0] - 0x0;\nvar x = [];\nfor (var i = 0x1; i <= n; i++)\n    x[a0_0x162179(0x5)]([\n        i,\n        -0x1 * i\n    ]);\narr[a0_0x162179(0x6)](function (v, i) {\n    x[v - 0x0 - 0x1][0x1] = i;\n});\nx[a0_0x162179(0x7)](function (a, b) {\n    return b[0x1] - a[0x1];\n});\nx = x[a0_0x162179(0x8)](function (v) {\n    return v[0x0];\n});\nconsole[a0_0x162179(0x9)](x[a0_0x162179(0xa)]('\\x0a'));", "test_cases": [["5 3\n4\n2\n5", "5\n2\n4\n1\n3"], ["10 8\n1\n4\n7\n3\n4\n10\n1\n3", "3\n1\n10\n4\n7\n2\n5\n6\n8\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n = arr.shift().split(\" \")[0] - 0;\nvar x = [];\nfor (var i = 1; i <= n; i++) x.push([i,-1*i]);\narr.forEach(function(v,i) {\n   x[v-0-1][1]=i;\n});\nx.sort(function(a,b){\n   return b[1]-a[1];\n});\nx=x.map(function(v){\n   return v[0];\n});\nconsole.log(x.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p01109_1", "type": "JavaScript", "obfuscated": "var a0_0x1d31e2 = a0_0x3943;\nfunction a0_0x3943(PTgLFg, key) {\n    var stringArray = a0_0x1a78();\n    a0_0x3943 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3943(PTgLFg, key);\n}\nvar input = require('fs')[a0_0x1d31e2(0x0)](a0_0x1d31e2(0x1), a0_0x1d31e2(0x2));\nvar arr = input[a0_0x1d31e2(0x3)]()[a0_0x1d31e2(0x4)]('\\x0a');\nfunction a0_0x1a78() {\n    var _0x2e2ddc = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'length'\n    ];\n    a0_0x1a78 = function () {\n        return _0x2e2ddc;\n    };\n    return a0_0x1a78();\n}\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var a = arr[a0_0x1d31e2(0x5)]()[a0_0x1d31e2(0x4)]('\\x20')['map'](Number);\n    var sum = a['reduce']((a, b) => a + b);\n    console['log'](a['filter'](v => v <= sum / n)[a0_0x1d31e2(0x6)]);\n}", "test_cases": [["7\n15 15 15 15 15 15 15\n4\n10 20 30 60\n10\n1 1 1 1 1 1 1 1 1 100\n7\n90 90 90 90 90 90 10\n7\n2 7 1 8 2 8 4\n0", "7\n3\n9\n1\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var a = arr.shift().split(\" \").map(Number);\n   var sum = a.reduce((a,b)=>a+b);\n   console.log(a.filter(v => v<=sum/n).length);\n}\n", "language": "JavaScript"}
{"filename": "p01138_1", "type": "JavaScript", "obfuscated": "var a0_0x27c697 = a0_0x2abf;\nfunction a0_0x2abf(ebWZcB, key) {\n    var stringArray = a0_0x5616();\n    a0_0x2abf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2abf(ebWZcB, key);\n}\nvar input = require('fs')[a0_0x27c697(0x0)]('/dev/stdin', a0_0x27c697(0x1));\nfunction a0_0x5616() {\n    var _0x78e5ac = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'sort',\n        'forEach',\n        'length',\n        'fGeyO',\n        'RektT',\n        'rFQVa',\n        'Xyveq',\n        'log'\n    ];\n    a0_0x5616 = function () {\n        return _0x78e5ac;\n    };\n    return a0_0x5616();\n}\nvar arr = input[a0_0x27c697(0x2)]()[a0_0x27c697(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x27c697(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = [];\n    while (n--) {\n        var hms = arr[a0_0x27c697(0x4)]()[a0_0x27c697(0x3)]('\\x20');\n        var start = hms[0x0][a0_0x27c697(0x3)](':')['map'](Number);\n        var end = hms[0x1][a0_0x27c697(0x3)](':')['map'](Number);\n        start = start[0x0] * 0x3c * 0x3c + start[0x1] * 0x3c + start[0x2];\n        end = end[0x0] * 0x3c * 0x3c + end[0x1] * 0x3c + end[0x2];\n        ary[a0_0x27c697(0x5)]([\n            start,\n            end\n        ]);\n    }\n    ary[a0_0x27c697(0x6)](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    var train = [];\n    var cnt = 0x0;\n    ary[a0_0x27c697(0x7)](function (v) {\n        var _0x32d57e = a0_0x2abf;\n        if (train[_0x32d57e(0x8)] == 0x0) {\n            cnt++;\n            train[_0x32d57e(0x5)](v[0x1]);\n        } else {\n            if (_0x32d57e(0x9) !== _0x32d57e(0xa)) {\n                train[_0x32d57e(0x6)](function (a, b) {\n                    return a - b;\n                });\n                if (train[0x0] <= v[0x0]) {\n                    train[_0x32d57e(0x4)]();\n                    train[_0x32d57e(0x5)](v[0x1]);\n                } else {\n                    if (_0x32d57e(0xb) !== _0x32d57e(0xc)) {\n                        cnt++;\n                        train['push'](v[0x1]);\n                    } else {\n                        train[_0x32d57e(0x6)](function (a, b) {\n                            return a - b;\n                        });\n                        if (train[0x0] <= v[0x0]) {\n                            train[_0x32d57e(0x4)]();\n                            train[_0x32d57e(0x5)](v[0x1]);\n                        } else {\n                            cnt++;\n                            train['push'](v[0x1]);\n                        }\n                    }\n                }\n            } else {\n                train[_0x32d57e(0x4)]();\n                train[_0x32d57e(0x5)](v[0x1]);\n            }\n        }\n    });\n    console[a0_0x27c697(0xd)](cnt);\n}", "test_cases": [["3\n05:47:15 09:54:40\n12:12:59 12:13:00\n16:30:20 21:18:53\n6\n00:00:00 03:00:00\n01:00:00 03:00:00\n02:00:00 03:00:00\n03:00:00 04:00:00\n03:00:00 05:00:00\n03:00:00 06:00:00\n0", "1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=[];\n   while(n--){\n      var hms=arr.shift().split(\" \");\n      var start=hms[0].split(\":\").map(Number);\n      var end=hms[1].split(\":\").map(Number);\n      start=start[0]*60*60+start[1]*60+start[2];\n      end=end[0]*60*60+end[1]*60+end[2];\n      ary.push([start,end]);\n   }\n   ary.sort(function(a,b){return a[0]-b[0];});\n   var train=[];\n   var cnt=0;\n   ary.forEach(function(v){\n      if(train.length==0){\n         cnt++;\n         train.push(v[1]);\n      }else{\n         train.sort(function(a,b){return a-b;});\n         if(train[0]<=v[0]){\n            train.shift();\n            train.push(v[1]);\n         }else{\n            cnt++;\n            train.push(v[1]);\n         }\n      }\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01143_1", "type": "JavaScript", "obfuscated": "function a0_0x2c74(YSoHEB, key) {\n    var stringArray = a0_0x4d3c();\n    a0_0x2c74 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c74(YSoHEB, key);\n}\nvar a0_0x28c037 = a0_0x2c74;\nvar input = require('fs')[a0_0x28c037(0x0)](a0_0x28c037(0x1), 'utf8');\nfunction a0_0x4d3c() {\n    var _0x38d4d3 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'push',\n        'floor'\n    ];\n    a0_0x4d3c = function () {\n        return _0x38d4d3;\n    };\n    return a0_0x4d3c();\n}\nvar Arr = input[a0_0x28c037(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var nmp = Arr[a0_0x28c037(0x3)]()[a0_0x28c037(0x4)]('\\x20')[a0_0x28c037(0x5)](Number);\n    if (nmp[0x0] == 0x0 && nmp[0x1] == 0x0 && nmp[0x2] == 0x0)\n        break;\n    var n = nmp[0x0];\n    var m = nmp[0x1] - 0x1;\n    var p = nmp[0x2];\n    var arr = [];\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr['shift']() - 0x0;\n        arr[a0_0x28c037(0x6)](v);\n        sum += v * 0x64;\n    }\n    sum = sum * (0x64 - p) / 0x64;\n    var ans = 0x0;\n    if (arr[m] != 0x0)\n        ans = Math[a0_0x28c037(0x7)](sum / arr[m]);\n    console['log'](ans);\n}", "test_cases": [["3 2 50\n1\n2\n3\n4 4 75\n1\n2\n3\n0\n3 1 10\n8\n1\n1\n0 0 0", "150\n0\n112"]], "original": "\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nmp=(Arr.shift()).split(\" \").map(Number);\n   if(nmp[0]==0 && nmp[1]==0 && nmp[2]==0)break;\n   var n=nmp[0];\n   var m=nmp[1]-1;\n   var p=nmp[2];\n   var arr=[];\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr.push(v);\n      sum+=(v*100);\n   }\n   sum=sum*(100-p)/100;\n   var ans=0;\n   if(arr[m]!=0)ans=Math.floor(sum/arr[m]);\n   console.log(ans);\n}\n", "language": "JavaScript"}
{"filename": "p01313_1", "type": "JavaScript", "obfuscated": "function a0_0x313a(pIrSxz, key) {\n    var stringArray = a0_0x418c();\n    a0_0x313a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x313a(pIrSxz, key);\n}\nvar a0_0x1b97b1 = a0_0x313a;\nprocess[a0_0x1b97b1(0x0)][a0_0x1b97b1(0x1)]();\nprocess['stdin']['setEncoding']('utf8');\nfunction a0_0x418c() {\n    var _0x21400a = [\n        'stdin',\n        'resume',\n        'pow',\n        'data',\n        'split',\n        'log',\n        'No\\x20cats.'\n    ];\n    a0_0x418c = function () {\n        return _0x21400a;\n    };\n    return a0_0x418c();\n}\nvar n = -0x1, i = function (d) {\n        var _0xee6016 = a0_0x313a;\n        return Math[_0xee6016(0x2)](0xa, ~~d);\n    }, l, p, c, r, o, a, b, am, bm, d;\nprocess[a0_0x1b97b1(0x0)]['on'](a0_0x1b97b1(0x3), function (ip) {\n    var _0x424beb = a0_0x313a;\n    p = ip[_0x424beb(0x4)]('\\x0a');\n    l = ~~p[0x0];\n    for (c = 0x0; c < l; ++c) {\n        r = [], o = p[c + 0x1][_0x424beb(0x4)]('\\x20'), d = 0x0;\n        for (a = i(o[0x0] - 0x1), am = i(o[0x0]) - 0x1; a < am; ++a)\n            for (b = i(o[0x1] - 0x1), bm = i(o[0x1]) - 0x1; b < bm; ++b)\n                (b * b + b - a * a + a) / 0x2 == '' + a + b && (console[_0x424beb(0x5)](a + '\\x20' + b), ++d);\n        d || console[_0x424beb(0x5)](_0x424beb(0x6));\n    }\n});", "test_cases": [["4\n1 1\n1 3\n1 4\n2 2", "1 5\n2 7\n7 119\nNo cats.\n13 53\n18 63\n33 88\n35 91"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar n = -1, i = function(d){return Math.pow(10, ~~d)}, l, p, c, r, o, a, b, am, bm, d;\nprocess.stdin.on('data', function(ip){\n\tp = ip.split('\\n'); l = ~~p[0];\n\tfor(c = 0; c < l; ++c) {\n\t\tr = [], o = p[c+1].split(' '), d = 0;\n\t\tfor(a = i(o[0] - 1), am = i(o[0]) - 1; a < am; ++a)\n\t\tfor(b = i(o[1] - 1), bm = i(o[1]) - 1; b < bm; ++b)\n\t\t\t(b * b + b - a * a + a) / 2 == ('' + a + b) && (console.log(a + ' ' + b), ++d);\n\t\td || console.log('No cats.');\n\t}\n});", "language": "JavaScript"}
{"filename": "p01359_1", "type": "JavaScript", "obfuscated": "var a0_0x11dc0f = a0_0x34e7;\nfunction a0_0x34e7(qEIKSw, key) {\n    var stringArray = a0_0x1d74();\n    a0_0x34e7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x34e7(qEIKSw, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x11dc0f(0x0));\nfunction a0_0x1d74() {\n    var _0x2aeefa = [\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'Unknown',\n        'length',\n        'join',\n        'log'\n    ];\n    a0_0x1d74 = function () {\n        return _0x2aeefa;\n    };\n    return a0_0x1d74();\n}\nvar arr = input[a0_0x11dc0f(0x1)]()[a0_0x11dc0f(0x2)]('\\x0a');\nwhile (!![]) {\n    var [n, q] = arr[a0_0x11dc0f(0x3)]()['split']('\\x20')[a0_0x11dc0f(0x4)](Number);\n    if (n == 0x0 && q == 0x0)\n        break;\n    var g = [];\n    for (var i = 0x0; i < n; i++) {\n        var [e, ey, wy] = arr['shift']()['split']('\\x20');\n        [ey, wy] = [\n            ey - 0x0,\n            wy - 0x0\n        ];\n        g['push']([\n            e,\n            wy - ey,\n            wy\n        ]);\n    }\n    for (var i = 0x0; i < q; i++) {\n        var n = arr['shift']() - 0x0;\n        var ans = a0_0x11dc0f(0x5);\n        for (var j = 0x0; j < g[a0_0x11dc0f(0x6)]; j++) {\n            var a = g[j][0x1];\n            var b = g[j][0x2];\n            if (a < n && n <= b) {\n                ans = [\n                    g[j][0x0],\n                    n - a\n                ][a0_0x11dc0f(0x7)]('\\x20');\n            }\n        }\n        console[a0_0x11dc0f(0x8)](ans);\n    }\n}", "test_cases": [["4 3\nmeiji 10 1877\ntaisho 6 1917\nshowa 62 1987\nheisei 22 2010\n1868\n1917\n1988\n1 1\nuniversalcentury 123 2168\n2010\n0 0", "meiji 1\ntaisho 6\nUnknown\nUnknown"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar arr = input.trim().split(\"\\n\");\nwhile(true){\n   var [n,q]=arr.shift().split(\" \").map(Number);\n   if(n==0 && q==0)break;\n   var g=[];\n   for(var i=0;i<n;i++){\n      var [e,ey,wy]=arr.shift().split(\" \");\n      [ey,wy]=[ey-0,wy-0];\n      g.push([e,wy-ey,wy]);\n   }\n   for(var i=0;i<q;i++){\n      var n = arr.shift() - 0;\n      var ans=\"Unknown\";\n      for(var j=0;j<g.length;j++){\n         var a = g[j][1];\n         var b = g[j][2];\n         if(a<n && n<=b){\n            ans=[g[j][0],n-a].join(\" \");\n         }\n      }\n      console.log(ans);\n   }\n}\n\n", "language": "JavaScript"}
{"filename": "p01447_1", "type": "JavaScript", "obfuscated": "function a0_0x2f71(VaUwNT, key) {\n    var stringArray = a0_0x58fa();\n    a0_0x2f71 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f71(VaUwNT, key);\n}\nfunction a0_0x58fa() {\n    var _0x242677 = [\n        'log',\n        'ceil',\n        'readFileSync',\n        'utf-8'\n    ];\n    a0_0x58fa = function () {\n        return _0x242677;\n    };\n    return a0_0x58fa();\n}\nvar a0_0x15b717 = a0_0x2f71;\nconsole[a0_0x15b717(0x0)](Math[a0_0x15b717(0x1)](Math[a0_0x15b717(0x0)](+require('fs')[a0_0x15b717(0x2)]('/dev/stdin', a0_0x15b717(0x3))) / Math['log'](0x3)));", "test_cases": [["8", "2"], ["30", "4"], ["2000000000", "20"]], "original": "console.log(Math.ceil(Math.log(+require(\"fs\").readFileSync(\"/dev/stdin\",\"utf-8\"))/Math.log(3)))", "language": "JavaScript"}
{"filename": "p01687_1", "type": "JavaScript", "obfuscated": "var a0_0x78a27e = a0_0x5583;\nfunction a0_0x5708() {\n    var _0x5444bc = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'length',\n        'join',\n        'sort',\n        'slice',\n        'AIZUNYAN'\n    ];\n    a0_0x5708 = function () {\n        return _0x5444bc;\n    };\n    return a0_0x5708();\n}\nvar input = require('fs')[a0_0x78a27e(0x0)](a0_0x78a27e(0x1), 'utf8');\nvar s = input[a0_0x78a27e(0x2)]();\nfor (var i = 0x0; i < s[a0_0x78a27e(0x3)] - 0x7; i++) {\n    var arr = [\n        s[i],\n        s[i + 0x1],\n        s[i + 0x2],\n        s[i + 0x3],\n        s[i + 0x4],\n        s[i + 0x5],\n        s[i + 0x6],\n        s[i + 0x7]\n    ];\n    if (arr[a0_0x78a27e(0x4)]('') == 'AIZUNYAN') {\n        i += 0x7;\n        continue;\n    }\n    var str = arr[a0_0x78a27e(0x5)]()[a0_0x78a27e(0x4)]('');\n    if (str == 'AADINNUY') {\n        s = s[a0_0x78a27e(0x6)](0x0, i) + a0_0x78a27e(0x7) + s[a0_0x78a27e(0x6)](i + 0x8, s[a0_0x78a27e(0x3)]);\n        i += 0x7;\n    }\n}\nfunction a0_0x5583(XTRVSN, key) {\n    var stringArray = a0_0x5708();\n    a0_0x5583 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5583(XTRVSN, key);\n}\nconsole['log'](s);", "test_cases": [["AIDUNYAN", "AIZUNYAN"], ["ZDD", "ZDD"], ["AADINNUYHAMAJIDETENSHIDAKARANYANAIDUPEROPEROSHITAI", "AIZUNYANHAMAJIDETENSHIDAKARAAIZUNYANPEROPEROSHITAI"], ["NYANAIDUAIDU", "AIZUNYANAIDU"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim();\nfor(var i=0;i<s.length-7;i++){\n   var arr=[s[i],s[i+1],s[i+2],s[i+3],s[i+4],s[i+5],s[i+6],s[i+7]]; \n   if(arr.join(\"\")==\"AIZUNYAN\"){\n      i+=7;\n      continue;\n   }  \n   var str=arr.sort().join(\"\");\n   if(str==\"AADINNUY\"){\n      s=s.slice(0,i)+\"AIZUNYAN\"+s.slice(i+8,s.length);\n      i+=7;\n   }\n}\nconsole.log(s);", "language": "JavaScript"}
{"filename": "p01924_1", "type": "JavaScript", "obfuscated": "var a0_0x14d653 = a0_0x2dea;\nfunction a0_0x2dea(qYMfYq, key) {\n    var stringArray = a0_0x1ac4();\n    a0_0x2dea = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2dea(qYMfYq, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x14d653(0x0));\nvar arr = input[a0_0x14d653(0x1)]()['split']('\\x0a');\nwhile (!![]) {\n    var tdl = arr[0x0];\n    if (tdl == '0\\x200\\x200')\n        break;\n    var [t, d, l] = tdl[a0_0x14d653(0x2)]('\\x20')[a0_0x14d653(0x3)](Number);\n    var cnt = 0x0;\n    var time = 0x0;\n    for (var i = 0x0; i < t; i++) {\n        if (time != 0x0)\n            cnt++;\n        if (time > 0x0)\n            time--;\n        var x = arr[i + 0x1] - 0x0;\n        if (x >= l)\n            time = d;\n    }\n    console[a0_0x14d653(0x4)](cnt);\n    arr = arr['slice'](t + 0x1);\n}\nfunction a0_0x1ac4() {\n    var _0x1c685 = [\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x1ac4 = function () {\n        return _0x1c685;\n    };\n    return a0_0x1ac4();\n}", "test_cases": [["5 2 3\n3\n5\n1\n2\n3\n3 100 100\n3\n3\n4\n20 3 8\n3\n2\n6\n1\n9\n1\n8\n4\n2\n2\n8\n1\n8\n8\n2\n5\n3\n4\n3\n8\n7 2 2\n0\n2\n5\n2\n5\n2\n1\n0 0 0", "3\n0\n11\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var tdl = arr[0];\n   if (tdl == \"0 0 0\") break;\n   var [t,d,l]=tdl.split(\" \").map(Number);\n   var cnt=0;\n   var time=0;\n   for(var i=0;i<t;i++){\n      if(time!=0)cnt++;\n      if(time>0)time--;\n      var x=arr[i+1]-0;\n      if(x>=l)time=d;\n   }\n   console.log(cnt);\n   arr=arr.slice(t+1);\n}\n", "language": "JavaScript"}
{"filename": "p02247_1", "type": "JavaScript", "obfuscated": "var a0_0x4358bb = a0_0x52ef;\nvar input = require('fs')[a0_0x4358bb(0x0)](a0_0x4358bb(0x1), a0_0x4358bb(0x2));\nvar arr = input[a0_0x4358bb(0x3)]()[a0_0x4358bb(0x4)]('\\x0a');\nfunction a0_0x52ef(aHCtLI, key) {\n    var stringArray = a0_0x118b();\n    a0_0x52ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x52ef(aHCtLI, key);\n}\nvar a = arr[0x0];\nvar b = arr[0x1];\nvar len = b[a0_0x4358bb(0x5)] - 0x1;\nvar reg = new RegExp(b, 'g');\nvar ans = [];\nfunction a0_0x118b() {\n    var _0x30feb7 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'test',\n        'lastIndex',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x118b = function () {\n        return _0x30feb7;\n    };\n    return a0_0x118b();\n}\nwhile (reg[a0_0x4358bb(0x6)](a)) {\n    reg[a0_0x4358bb(0x7)] -= len;\n    ans[a0_0x4358bb(0x8)](reg[a0_0x4358bb(0x7)] - 0x1);\n}\nif (ans[a0_0x4358bb(0x5)] != 0x0)\n    console[a0_0x4358bb(0x9)](ans[a0_0x4358bb(0xa)]('\\x0a'));", "test_cases": [["aabaaa\naa", "0\n3\n4"], ["xyzz\nyz", "1"], ["abc\nxyz", ""]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar a=arr[0];\nvar b=arr[1];\nvar len=b.length-1;\nvar reg = new RegExp(b,\"g\");\nvar ans=[];\nwhile (reg.test(a)) {\n   reg.lastIndex -= len;\n   ans.push(reg.lastIndex-1);\n}\nif(ans.length!=0)console.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02381_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x3e0ced = a0_0x5e89;\nfunction a0_0x5e89(ubfRwF, key) {\n    var stringArray = a0_0x4dd8();\n    a0_0x5e89 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e89(ubfRwF, key);\n}\n(function (stdin) {\n    var _0x3fd70b = a0_0x5e89;\n    var lines = stdin['toString']();\n    var re = /\\w+\\n[\\w\\s]*?\\n/g;\n    var result = function (data) {\n        var _0xe18bda = a0_0x5e89;\n        return data[_0xe18bda(0x0)](stdev)['join']('\\x0a');\n        function stdev(scores) {\n            var _0x20ce34 = a0_0x5e89;\n            var count = scores['length'];\n            var mean = scores[_0x20ce34(0x1)](sum) / count;\n            return Math[_0x20ce34(0x2)](scores[_0x20ce34(0x0)](function (v) {\n                return Math['pow'](v - mean, 0x2);\n            })[_0x20ce34(0x1)](sum) / count)[_0x20ce34(0x3)](0x8);\n        }\n        function sum(a, b) {\n            return a + b;\n        }\n    }(lines[_0x3fd70b(0x4)](re)[_0x3fd70b(0x0)](function (v) {\n        var _0x36a9f4 = a0_0x5e89;\n        return v['split']('\\x0a')[0x1]['split']('\\x20')['slice'](0x0, v[_0x36a9f4(0x5)]('\\x0a')[0x0])['map'](Number);\n    }));\n    console[_0x3fd70b(0x6)](result);\n}(require('fs')['readFileSync'](a0_0x3e0ced(0x7), a0_0x3e0ced(0x8))));\nfunction a0_0x4dd8() {\n    var _0xe4e8bf = [\n        'map',\n        'reduce',\n        'sqrt',\n        'toFixed',\n        'match',\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4dd8 = function () {\n        return _0xe4e8bf;\n    };\n    return a0_0x4dd8();\n}", "test_cases": [["5\n70 80 100 90 20\n3\n80 80 80\n0", "27.85677655\n0.00000000"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString();\n  var re = /\\w+\\n[\\w\\s]*?\\n/g;\n  var result = (function(data) {\n\n    return data.map(stdev).join('\\n');\n\n    function stdev(scores) {\n      var count = scores.length;\n      var mean  = scores.reduce(sum) / count;\n\n      return Math.sqrt(scores.map(function(v) {\n          return Math.pow(v - mean,2);\n        })\n        .reduce(sum) / count).toFixed(8);\n    }\n\n    function sum(a,b) {\n      return a + b;\n    }\n  }(lines.match(re).map(function(v) {\n      return v.split('\\n')[1].split(' ')\n        .slice(0,v.split('\\n')[0]).map(Number);\n   })\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02431_1", "type": "JavaScript", "obfuscated": "var a0_0xb4837f = a0_0x297f;\nvar input = require('fs')['readFileSync'](a0_0xb4837f(0x0), a0_0xb4837f(0x1));\nvar arr = input[a0_0xb4837f(0x2)]()[a0_0xb4837f(0x3)]('\\x0a');\nvar Q = arr[0x0] - 0x0;\nvar a = [];\nvar s = '';\nfunction a0_0x297f(mrNtvS, key) {\n    var stringArray = a0_0x88b4();\n    a0_0x297f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x297f(mrNtvS, key);\n}\nfor (var i = 0x1; i <= Q; i++) {\n    var q = arr[i][a0_0xb4837f(0x3)]('\\x20');\n    if (q[0x0] == '0')\n        a[a0_0xb4837f(0x4)](q[0x1] - 0x0);\n    else if (q[0x0] == '1')\n        s += a[q[0x1]] - 0x0 + '\\x0a';\n    else\n        a['pop']();\n}\nfunction a0_0x88b4() {\n    var _0x2fce3f = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'push',\n        'log'\n    ];\n    a0_0x88b4 = function () {\n        return _0x2fce3f;\n    };\n    return a0_0x88b4();\n}\nconsole[a0_0xb4837f(0x5)](s['trim']());", "test_cases": [["8\n0 1\n0 2\n0 3\n2\n0 4\n1 0\n1 1\n1 2", "1\n2\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar Q=arr[0]-0;\nvar a=[];\nvar s=\"\";\nfor(var i=1;i<=Q;i++){\n   var q=arr[i].split(\" \");\n   if(q[0]==\"0\")a.push(q[1]-0);\n   else if(q[0]==\"1\")s+=(a[q[1]]-0)+\"\\n\";\n   else a.pop();\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02470_1", "type": "JavaScript", "obfuscated": "var a0_0x546081 = a0_0x91ae;\nfunction a0_0x91ae(hOwiCP, key) {\n    var stringArray = a0_0x3270();\n    a0_0x91ae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x91ae(hOwiCP, key);\n}\nfunction Main(input) {\n    var _0x378ac8 = a0_0x91ae;\n    var n = parseInt(input, 0xa);\n    var count = 0x0;\n    for (i = 0x1; i < n; i++) {\n        if (_0x378ac8(0x0) !== _0x378ac8(0x1)) {\n            if (gcd(n, i) == 0x1)\n                count++;\n        } else {\n            if (gcd(n, i) == 0x1)\n                count++;\n        }\n    }\n    console[_0x378ac8(0x2)](count);\n}\nfunction a0_0x3270() {\n    var _0x56e74c = [\n        'uIkqg',\n        'gcSqZ',\n        'log',\n        'max',\n        'readFileSync'\n    ];\n    a0_0x3270 = function () {\n        return _0x56e74c;\n    };\n    return a0_0x3270();\n}\nfunction gcd(n, m) {\n    var _0x4a74ba = a0_0x91ae;\n    var a, b, c;\n    a = Math[_0x4a74ba(0x3)](n, m);\n    b = Math['min'](n, m);\n    c = a % b;\n    if (c == 0x0) {\n        return b;\n    } else {\n        return gcd(b, c);\n    }\n}\nMain(require('fs')[a0_0x546081(0x4)]('/dev/stdin', 'utf8'));", "test_cases": [["6", "2"], ["1000000", "400000"]], "original": "function Main(input) {\n    var n = parseInt(input, 10);\n    var count = 0;\n    for (i = 1; i < n; i++) {\n        if (gcd(n, i) == 1) count++;\n    }\n    console.log(count);\n}\n\nfunction gcd(n, m) {\n    var a, b, c;\n    a = Math.max(n, m);\n    b = Math.min(n, m);\n    c = a % b; \n    if (c == 0) {\n        return b;\n    } else {\n        return gcd(b, c);\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02551_1", "type": "JavaScript", "obfuscated": "var a0_0x8681f1 = a0_0x343a;\nfunction a0_0x343a(hsVTgP, key) {\n    var stringArray = a0_0xa8a1();\n    a0_0x343a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x343a(hsVTgP, key);\n}\nfunction Main(input) {\n    var _0x2719bf = a0_0x343a;\n    input = input[_0x2719bf(0x0)]('\\x0a');\n    tmp = input[0x0][_0x2719bf(0x0)]('\\x20');\n    var N = parseInt(tmp[0x0]);\n    var Q = parseInt(tmp[0x1]);\n    var minRows = Array(N - 0x2);\n    var minCols = Array(N - 0x2);\n    minRows[_0x2719bf(0x1)](N - 0x2);\n    minCols[_0x2719bf(0x1)](N - 0x2);\n    var result = BigInt((N - 0x2) * (N - 0x2));\n    for (var i = 0x0; i < Q; i++) {\n        var query = input[i + 0x1][_0x2719bf(0x0)]('\\x20');\n        var q_1 = parseInt(query[0x0]);\n        var q_2 = parseInt(query[0x1]);\n        var myArray = minRows;\n        var myArray2 = minCols;\n        var index = q_2 - 0x2;\n        var closest = minCols[index];\n        if (q_1 == 0x1) {\n            myArray = minCols;\n            myArray2 = minRows;\n            closest = minRows[index];\n        }\n        result -= BigInt(closest);\n        for (var j = 0x0; j < closest; j++) {\n            if (myArray[j] > index)\n                myArray[j] = index;\n        }\n        myArray2[index] = 0x0;\n    }\n    console['log']('%d', Number(result));\n}\nfunction a0_0xa8a1() {\n    var _0x49cbf6 = [\n        'split',\n        'fill',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xa8a1 = function () {\n        return _0x49cbf6;\n    };\n    return a0_0xa8a1();\n}\nMain(require('fs')[a0_0x8681f1(0x2)](a0_0x8681f1(0x3), a0_0x8681f1(0x4)));", "test_cases": [["5 5\n1 3\n2 3\n1 4\n2 2\n1 2", "1"], ["200000 0", "39999200004"], ["176527 15\n1 81279\n2 22308\n2 133061\n1 80744\n2 44603\n1 170938\n2 139754\n2 15220\n1 172794\n1 159290\n2 156968\n1 56426\n2 77429\n1 97459\n2 71282", "31159505795"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  tmp = input[0].split(\" \");\n  var N = parseInt(tmp[0]);\n  var Q = parseInt(tmp[1]);\n  var minRows = Array(N-2);\n  var minCols = Array(N-2);\n  minRows.fill(N-2);\n  minCols.fill(N-2);\n  var result = BigInt((N-2)*(N-2));\n  for(var i=0; i<Q; i++) {\n    var query = input[i+1].split(\" \");\n    var q_1 = parseInt(query[0]);\n    var q_2 = parseInt(query[1]);\n    var myArray = minRows;\n    var myArray2 = minCols;\n    \n    var index = q_2-2;\n    var closest = minCols[index];\n    if(q_1 == 1) {\n      myArray = minCols;\n      myArray2 = minRows;\n      closest = minRows[index];\n    }\n    result -= BigInt(closest);\n    for(var j=0; j<closest; j++) {\n      if(myArray[j] > index) myArray[j] = index;\n    }\n    myArray2[index] = 0;\n  }\n  //出力\n  console.log(\"%d\", Number(result));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02618_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x66e869 = a0_0xe0e2;\nfunction main(input) {\n    const _0x53421a = a0_0xe0e2;\n    const inputRows = input[_0x53421a(0x0)]('\\x0a');\n    const d = parseInt(inputRows[0x0]);\n    let cStrArray = inputRows[0x1]['split']('\\x20');\n    const c = cStrArray[_0x53421a(0x1)](str => parseInt(str));\n    let s = [];\n    for (let i = 0x2; i < inputRows[_0x53421a(0x2)]; i++) {\n        s[_0x53421a(0x3)]([]);\n        const tmpRow = inputRows[i][_0x53421a(0x0)]('\\x20');\n        for (let j = 0x0; j < tmpRow[_0x53421a(0x2)]; j++) {\n            s[i - 0x2]['push'](parseInt(tmpRow[j]));\n        }\n    }\n    let t = [];\n    for (let i = 0x0; i < s[_0x53421a(0x2)]; i++) {\n        let tmpMax = s[i][0x0];\n        let index = 0x0;\n        for (let j = 0x1; j < s[i][_0x53421a(0x2)]; j++) {\n            if (s[i][j] > tmpMax) {\n                if (_0x53421a(0x4) !== 'yeHQl') {\n                    let tmpMax = s[i][0x0];\n                    let index = 0x0;\n                    for (let j = 0x1; j < s[i][_0x53421a(0x2)]; j++) {\n                        if (s[i][j] > tmpMax) {\n                            index = j;\n                            tmpMax = s[i][j];\n                        }\n                    }\n                    t[_0x53421a(0x3)](index + 0x1);\n                } else {\n                    index = j;\n                    tmpMax = s[i][j];\n                }\n            }\n        }\n        t[_0x53421a(0x3)](index + 0x1);\n    }\n    for (let i = 0x0; i < t[_0x53421a(0x2)]; i++) {\n        console['log'](t[i]);\n    }\n}\nmain(require('fs')[a0_0x66e869(0x5)](a0_0x66e869(0x6), a0_0x66e869(0x7)));\nmain(input);\nfunction a0_0xe0e2(nibQwL, key) {\n    const stringArray = a0_0x55b3();\n    a0_0xe0e2 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0xe0e2(nibQwL, key);\n}\nfunction a0_0x55b3() {\n    const _0x13fa44 = [\n        'split',\n        'map',\n        'length',\n        'push',\n        'yeHQl',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x55b3 = function () {\n        return _0x13fa44;\n    };\n    return a0_0x55b3();\n}", "test_cases": [["5\n86 90 69 51 2 96 71 47 88 34 45 46 89 34 31 38 97 84 41 80 14 4 50 83 7 82\n19771 12979 18912 10432 10544 12928 13403 3047 10527 9740 8100 92 2856 14730 1396 15905 6534 4650 11469 3628 8433 2994 10899 16396 18355 11424\n6674 17707 13855 16407 12232 2886 11908 1705 5000 1537 10440 10711 4917 10770 17272 15364 19277 18094 3929 3705 7169 6159 18683 15410 9092 4570\n6878 4239 19925 1799 375 9563 3445 5658 19857 11401 6997 6498 19933 3848 2426 2146 19745 16880 17773 18359 3921 14172 16730 11157 5439 256\n8633 15862 15303 10749 18499 7792 10317 5901 9395 11433 3514 3959 5202 19850 19469 9790 5653 784 18500 10552 17975 16615 7852 197 8471 7452\n19855 17918 7990 10572 4333 438 9140 9104 12622 4985 12319 4028 19922 12132 16259 17476 2976 547 19195 19830 16285 4806 4471 9457 2864 2192", "1\n17\n13\n14\n13"]], "original": "'use strict'\n\nfunction main(input) {\n  const inputRows = input.split('\\n');\n  const d = parseInt(inputRows[0])\n  let cStrArray = inputRows[1].split(' ')\n  const c = cStrArray.map(str => parseInt(str))\n  let s = []\n  for (let i = 2; i < inputRows.length; i++) {\n    s.push([])\n    const tmpRow = inputRows[i].split(' ')\n    for (let j = 0; j < tmpRow.length; j++) {\n      s[i - 2].push(parseInt(tmpRow[j]))\n    }\n  }\n\n  let t = []\n\n  for (let i = 0; i < s.length; i++) {\n    let tmpMax = s[i][0]\n    let index = 0\n    for (let j = 1; j < s[i].length; j++) {\n      if (s[i][j] > tmpMax) {\n        index = j\n        tmpMax = s[i][j]\n      }\n    }\n    t.push(index + 1)\n  }\n\n\n  // output\n  for (let i = 0; i < t.length; i++) {\n    console.log(t[i])\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nmain(input)", "language": "JavaScript"}
{"filename": "p02652_1", "type": "JavaScript", "obfuscated": "const a0_0x178db9 = a0_0x2e69;\nfunction a0_0x1c0b() {\n    const _0x40fff3 = [\n        'length',\n        'log',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1c0b = function () {\n        return _0x40fff3;\n    };\n    return a0_0x1c0b();\n}\nfunction Main(str) {\n    const _0x4449cd = a0_0x2e69;\n    let zero = 0x0;\n    let one = 0x0;\n    for (let i = 0x0; i < str[_0x4449cd(0x0)]; i++) {\n        if (str[i] === '1') {\n            one++;\n        } else if (str[i] === '0') {\n            zero++;\n        }\n    }\n    console[_0x4449cd(0x1)](Math[_0x4449cd(0x2)](one - zero));\n}\nfunction a0_0x2e69(PWvRtd, key) {\n    const stringArray = a0_0x1c0b();\n    a0_0x2e69 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e69(PWvRtd, key);\n}\nlet input = require('fs')[a0_0x178db9(0x3)](a0_0x178db9(0x4), a0_0x178db9(0x5));\nMain(input);", "test_cases": [["0??", "1"], ["0??0", "2"], ["??00????0??0????0?0??00??1???11?1?1???1?11?111???1", "4"]], "original": "function Main(str) {\n  \tlet zero = 0;\n  \tlet one = 0;\n  \tfor(let i=0;i<str.length;i++) {\n    \tif(str[i] === '1') {\n        \tone++;\n        } else if(str[i] === '0') {\n        \tzero++;\n        }\n    }\n  \n  \tconsole.log(Math.abs(one - zero));\n}\n\nlet input = require('fs').readFileSync('/dev/stdin', 'utf8');\nMain(input);\n", "language": "JavaScript"}
{"filename": "p02856_1", "type": "JavaScript", "obfuscated": "function a0_0x41d4(ffKFlN, key) {\n    const stringArray = a0_0x2d4d();\n    a0_0x41d4 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x41d4(ffKFlN, key);\n}\nconst a0_0x5cf75a = a0_0x41d4;\nfunction a0_0x2d4d() {\n    const _0x1039e7 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2d4d = function () {\n        return _0x1039e7;\n    };\n    return a0_0x2d4d();\n}\nfunction Main(input) {\n    const _0x27bf2b = a0_0x41d4;\n    input = input['trim']()[_0x27bf2b(0x0)]('\\x0a')['map'](function (x) {\n        const _0x5bfd9d = a0_0x41d4;\n        return x[_0x5bfd9d(0x0)]('\\x20');\n    });\n    let M = parseInt(input[0x0][0x0], 0xa);\n    let ans = -0x1;\n    let tmp = 0x0;\n    for (let i = 0x0; i < M; i++) {\n        ans += parseInt(input[i + 0x1][0x1], 0xa);\n        tmp += parseInt(input[i + 0x1][0x0], 0xa) * parseInt(input[i + 0x1][0x1], 0xa);\n    }\n    ans += Math['floor']((tmp - 0x1) / 0x9);\n    console[_0x27bf2b(0x1)](ans);\n}\nMain(require('fs')[a0_0x5cf75a(0x2)](a0_0x5cf75a(0x3), a0_0x5cf75a(0x4)));", "test_cases": [["2\n2 2\n9 1", "3"], ["3\n1 1\n0 8\n7 1", "9"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tlet M = parseInt(input[0][0], 10);\n\tlet ans = -1;\n\tlet tmp = 0;\n\tfor (let i = 0; i < M; i++){\n\t\tans += parseInt(input[i + 1][1],10);\n\t\ttmp += parseInt(input[i + 1][0],10) * parseInt(input[i + 1][1],10);\n\t}\n\tans += Math.floor((tmp - 1) / 9);\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p02897_1", "type": "JavaScript", "obfuscated": "function a0_0xb64e() {\n    var _0x1c1850 = [\n        'log',\n        'toFixed',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xb64e = function () {\n        return _0x1c1850;\n    };\n    return a0_0xb64e();\n}\nvar a0_0x258671 = a0_0x2447;\nfunction a0_0x2447(BQMLZu, key) {\n    var stringArray = a0_0xb64e();\n    a0_0x2447 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2447(BQMLZu, key);\n}\nfunction main(input) {\n    var _0x3f3857 = a0_0x2447;\n    var Gusu = 0x0;\n    var Kisu = 0x0;\n    var Out = 0x0;\n    if (input > 0x0) {\n        if (input % 0x2 == 0x0) {\n            Gusu = input / 0x2;\n            Kisu = Gusu;\n            Out = Kisu / input;\n        } else if (input % 0x2 == 0x1) {\n            Gusu = parseInt(input / 0x2);\n            Kisu = Gusu + 0x1;\n            Out = Kisu / input;\n        }\n    }\n    console[_0x3f3857(0x0)](Out[_0x3f3857(0x1)](0xa));\n}\nmain(require('fs')[a0_0x258671(0x2)](a0_0x258671(0x3), a0_0x258671(0x4)));", "test_cases": [["4", "0.5000000000"], ["5", "0.6000000000"], ["1", "1.0000000000"]], "original": "function main(input){\n  var Gusu = 0;//偶数の個数\n  var Kisu = 0;//奇数の個数\n  var Out = 0;//出力\n  if(input > 0){\n  \tif(input % 2 == 0){\n      Gusu = input / 2;\n      Kisu = Gusu;\n      Out = Kisu/input;\n  \t}\n    else if(input % 2 == 1){\n      Gusu = parseInt(input / 2);\n      Kisu = Gusu+1;\n      Out = Kisu/input;\n  \t}\n  }\n  console.log(Out.toFixed(10));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03001_1", "type": "JavaScript", "obfuscated": "function a0_0x4be2() {\n    var _0x26cc97 = [\n        'split',\n        'map',\n        'slice',\n        'log',\n        'toFixed',\n        'bNFnG',\n        'SrxTf',\n        'HrdUE',\n        'jSOTn',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4be2 = function () {\n        return _0x26cc97;\n    };\n    return a0_0x4be2();\n}\nfunction a0_0x51bd(ItHSuE, key) {\n    var stringArray = a0_0x4be2();\n    a0_0x51bd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x51bd(ItHSuE, key);\n}\nvar a0_0x382b84 = a0_0x51bd;\nfunction Main(input) {\n    var _0x20de08 = a0_0x51bd;\n    var input = input[_0x20de08(0x0)]('\\x0a');\n    var arya = input[0x0]['split']('\\x20')[_0x20de08(0x1)](val => parseInt(val, 0xa))[_0x20de08(0x2)](0x0, 0x4);\n    var w = arya[0x0];\n    var h = arya[0x1];\n    var x = arya[0x2];\n    var y = arya[0x3];\n    if (x == 0x0 & y == 0x0 || x == w && y == h) {\n        console[_0x20de08(0x3)]((w * h / 0x2)[_0x20de08(0x4)](0x6) + '\\x200');\n        return !![];\n    }\n    var a1 = x * h;\n    var a2 = (w - x) * h;\n    var b1 = y * w;\n    var b2 = (h - y) * w;\n    var a = a1;\n    var b = b1;\n    var counter = 0x0;\n    if (a1 > a2) {\n        if (_0x20de08(0x5) !== _0x20de08(0x5)) {\n            a = a2;\n        } else {\n            a = a2;\n        }\n    }\n    if (b1 > b2) {\n        if (_0x20de08(0x6) === _0x20de08(0x7)) {\n            reault = b;\n        } else {\n            b = b2;\n        }\n    }\n    var reault = a;\n    if (a < b) {\n        if (_0x20de08(0x8) !== 'QRuak') {\n            reault = b;\n        } else {\n            var counter = 0x1;\n        }\n    }\n    if (a == b) {\n        var counter = 0x1;\n    }\n    console[_0x20de08(0x3)](reault['toFixed'](0x6) + '\\x20' + counter);\n}\nMain(require('fs')['readFileSync'](a0_0x382b84(0x9), a0_0x382b84(0xa)));", "test_cases": [["2 3 1 2", "3.000000 0"], ["2 2 1 1", "2.000000 1"]], "original": "function Main(input) {\n\n  var input = input.split(\"\\n\");\n  var arya = input[0].split(\" \").map(val => parseInt(val, 10)).slice(0, 4);\n  var w = arya[0];\n  var h = arya[1];\n  var x = arya[2];\n  var y = arya[3];\n\n  if(x == 0 & y == 0 || x == w && y == h){\n    console.log((w*h/2).toFixed(6) + \" 0\");\n    return true;\n  }\n\n\n\n  var a1 = x*h;\n  var a2 = (w - x)*h;\n  var b1 = y*w;\n  var b2 = (h - y)*w;\n  var a = a1;\n  var b = b1;\n  var counter = 0;\n\n  if(a1 > a2){\n    a = a2;\n  }\n\n  if(b1 > b2){\n    b = b2;\n  }\n\n  var reault = a;\n  if(a < b) {\n    reault = b;\n  }\n\n  if(a == b) {\n    var counter = 1;\n  }\n\n\n  console.log(reault.toFixed(6) + \" \" + counter);\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03174_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x536a9e = a0_0x2274;\nfunction Main(input) {\n    const _0x1e6cbd = a0_0x2274;\n    input = input['trim']()[_0x1e6cbd(0x0)](/\\n/);\n    const N = input[_0x1e6cbd(0x1)]() - 0x0;\n    const M = Math['pow'](0x2, N);\n    const K = Math[_0x1e6cbd(0x2)](0xa, 0x9) + 0x7;\n    input = input['map'](str => str[_0x1e6cbd(0x0)](/\\s+/)[_0x1e6cbd(0x3)](x => x === '1'));\n    const Match = input;\n    const dp = new Array(N)[_0x1e6cbd(0x4)](0x0)[_0x1e6cbd(0x3)]((x, j) => new Object());\n    dp[-0x1] = { 0x0: 0x1 };\n    const p = new Array(N)[_0x1e6cbd(0x4)](0x0)[_0x1e6cbd(0x3)]((x, i) => 0x1 << i);\n    for (let i = -0x1; i < N - 0x1; i++) {\n        Object[_0x1e6cbd(0x5)](dp[i])[_0x1e6cbd(0x6)](function (J) {\n            J = J - 0x0;\n            dp[i][J] %= K;\n            for (let j = 0x0; j < N; j++) {\n                if ((J & p[j]) > 0x0)\n                    continue;\n                if (Match[i + 0x1][j])\n                    dp[i + 0x1][J + p[j]] = (dp[i + 0x1][J + p[j]] || 0x0) + dp[i][J];\n            }\n        });\n    }\n    console['log']((dp[N - 0x1][M - 0x1] || 0x0) % K);\n}\nfunction a0_0x5ad6() {\n    const _0x46b977 = [\n        'split',\n        'shift',\n        'pow',\n        'map',\n        'fill',\n        'keys',\n        'forEach',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5ad6 = function () {\n        return _0x46b977;\n    };\n    return a0_0x5ad6();\n}\nfunction a0_0x2274(vdLXMy, key) {\n    const stringArray = a0_0x5ad6();\n    a0_0x2274 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2274(vdLXMy, key);\n}\nMain(require('fs')[a0_0x536a9e(0x7)](a0_0x536a9e(0x8), a0_0x536a9e(0x9)));", "test_cases": [["3\n0 1 1\n1 0 1\n1 1 1", "3"], ["4\n0 1 0 0\n0 0 0 1\n1 0 0 0\n0 0 1 0", "1"], ["1\n0", "0"], ["21\n0 0 0 0 0 0 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1\n1 1 1 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 1 1 0\n0 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 0 0 1 1\n0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 1 1 0\n1 1 0 0 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 0 0 1\n0 1 0 0 0 1 0 1 0 0 0 1 1 1 0 0 1 1 0 1 0\n0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1\n0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 0 1 1 1\n0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 0 1\n0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 1 1 0\n0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1\n0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 1 0 1 0 1 1\n1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 0 1\n0 0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1\n1 0 1 1 0 1 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0\n0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1\n0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1\n0 0 0 0 1 1 1 0 1 0 1 1 1 0 1 1 0 0 1 1 0\n1 1 0 1 1 0 0 1 1 0 1 1 0 1 1 1 1 1 0 1 0\n1 0 0 1 1 0 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0", "102515160"]], "original": "'use strict';\nfunction Main(input){\n  input=input.trim().split(/\\n/);\n  const N=input.shift()-0;\n  const M=Math.pow(2,N);\n  const K=Math.pow(10,9)+7;\n  input=input.map(str=>str.split(/\\s+/).map(x=>x==='1'));\n  const Match=input;\n  \n  const dp=new Array(N).fill(0).map((x,j)=>new Object);\n  dp[-1]={0:1,};\n  \n  const p=new Array(N).fill(0).map((x,i)=>(1<<i));\n  \n  /*\n    男N-1から降順に売れてゆく場合を考える。\n    dp[i][j]で男0~iと「女i+1人の組み合わせのうちj番目」が残っているとき、\n    残りのマッチングの場合の数。\n  */\n  \n  for(let i=-1;i<N-1;i++){\n    Object.keys(dp[i]).forEach(function(J){\n      J=J-0;\n      dp[i][J]%=K;\n      for(let j=0;j<N;j++){\n        if((J&p[j])>0)continue;\n        if(Match[i+1][j])\n          dp[i+1][J+p[j]]=(dp[i+1][J+p[j]]||0)+dp[i][J];\n      }\n    });\n  }\n  console.log((dp[N-1][M-1]||0)%K);\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03336_1", "type": "JavaScript", "obfuscated": "const a0_0x214d9e = a0_0x3861;\nfunction Main(input) {\n    const _0x1932e7 = a0_0x3861;\n    input = input[_0x1932e7(0x0)]('\\x0a');\n    const row1 = input[0x0][_0x1932e7(0x0)]('\\x20');\n    const N = parseInt(row1[0x0]);\n    const M = parseInt(row1[0x1]);\n    const K = parseInt(row1[0x2]);\n    var S = parseInt(input[0x1], 0x2);\n    var T = parseInt(input[0x2], 0x2);\n    for (var i = 0x0; i < K; i++) {\n        var sANDt = S & T;\n        S = S + sANDt;\n        T = T + sANDt;\n    }\n    const sBinary = toBinary(S);\n    const tBinary = toBinary(T);\n    console[_0x1932e7(0x1)](sBinary);\n    console[_0x1932e7(0x1)](tBinary);\n}\nfunction toBinary(a) {\n    var num = a, binary = '';\n    while (num > 0x0) {\n        binary = num % 0x2 + binary;\n        num = Math['floor'](num / 0x2);\n    }\n    return binary;\n}\nfunction a0_0x56ed() {\n    const _0x3ab6fc = [\n        'split',\n        'log',\n        'readFileSync'\n    ];\n    a0_0x56ed = function () {\n        return _0x3ab6fc;\n    };\n    return a0_0x56ed();\n}\nfunction a0_0x3861(sJRZpQ, key) {\n    const stringArray = a0_0x56ed();\n    a0_0x3861 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x3861(sJRZpQ, key);\n}\nMain(require('fs')[a0_0x214d9e(0x2)]('/dev/stdin', 'utf8'));", "test_cases": [["2 3 3\n11\n101", "10000\n10010"], ["5 8 3\n10101\n10101001", "100000\n10110100"], ["10 10 10\n1100110011\n1011001101", "10000100000010001000\n10000100000000100010"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\");\n  \tconst row1 = input[0].split(\" \");\n  \tconst N = parseInt(row1[0]);\n  const M = parseInt(row1[1]);\n  const K = parseInt(row1[2]);\n  var S = parseInt(input[1],2);\n  var T = parseInt(input[2],2);\n  for(var i=0; i < K; i++){\n    var sANDt = S & T;\n    S = S + sANDt;\n    T = T + sANDt;\n  }\n  const sBinary = toBinary(S);\n  const tBinary = toBinary(T);\n  console.log(sBinary);\n  console.log(tBinary);\n  \n }\n\nfunction toBinary( a ){ \n  var num = a, binary = ''; \n  while ( num > 0 ) { \n    binary = ( num % 2 ) + binary; \n    num = Math.floor( num / 2 ); \n  } \n  return binary; \n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03481_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst a0_0x50f496 = a0_0x43a0;\nfunction a0_0x1de9() {\n    const _0x17fa68 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split'\n    ];\n    a0_0x1de9 = function () {\n        return _0x17fa68;\n    };\n    return a0_0x1de9();\n}\nconst input = require('fs')[a0_0x50f496(0x0)](a0_0x50f496(0x1), a0_0x50f496(0x2))[a0_0x50f496(0x3)]()[a0_0x50f496(0x4)]('\\x20')['map'](x => x * 0x1);\nfunction a0_0x43a0(fSNmgY, key) {\n    const stringArray = a0_0x1de9();\n    a0_0x43a0 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x43a0(fSNmgY, key);\n}\nlet ans = 0x0;\nlet max = input[0x1];\nlet div = input[0x0];\nlet tmpNum = div;\nwhile (tmpNum < max + 0x1) {\n    tmpNum *= 0x2;\n    ans++;\n}\nconsole['log'](ans);", "test_cases": [["3 20", "3"], ["25 100", "3"], ["314159265 358979323846264338", "31"]], "original": "'use strict';\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(' ').map(x => x*1);\nlet ans = 0;\nlet max = input[1];\nlet div = input[0];\nlet tmpNum = div;\nwhile(tmpNum < max+1){\n  tmpNum *= 2;\n  ans++;\t\n}\n\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p03551_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x15c434 = a0_0x517a;\nvar input = require('fs')[a0_0x15c434(0x0)](a0_0x15c434(0x1), a0_0x15c434(0x2));\nvar cin = input[a0_0x15c434(0x3)](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction a0_0x517a(SCRpNU, key) {\n    var stringArray = a0_0xb0c7();\n    a0_0x517a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x517a(SCRpNU, key);\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0x1486c1 = a0_0x517a;\n    return a ? cin[_0x1486c1(0x4)](cid, cid += n) : cin[_0x1486c1(0x4)](cid, cid += n)[_0x1486c1(0x5)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x51cd23 = a0_0x517a;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x51cd23(0x6)](cin[_0x51cd23(0x4)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin[_0x51cd23(0x4)](cid, cid += w)[_0x51cd23(0x5)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x5dfb9b = a0_0x517a;\n    var a = arguments, l = a[_0x5dfb9b(0x7)], r = 'Array(a[' + --l + _0x5dfb9b(0x8) + v + _0x5dfb9b(0x9);\n    while (--l)\n        r = _0x5dfb9b(0xa) + l + ']).fill().map(x=>' + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x15c434(0xb)](String(myOut));\nfunction a0_0xb0c7() {\n    var _0x49273b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        'Array(a[',\n        'log'\n    ];\n    a0_0xb0c7 = function () {\n        return _0x49273b;\n    };\n    return a0_0xb0c7();\n}\nfunction main() {\n    var n = next();\n    var m = next();\n    var ans = m * 0x708 + n * 0x64;\n    return ans << m;\n}", "test_cases": [["1 1", "3800"], ["10 2", "18400"], ["100 5", "608000"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var m = next();\n  var ans = m*1800 + n*100;\n  return ans << m;\n}", "language": "JavaScript"}
{"filename": "p03618_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x213a57 = a0_0x2a45;\nfunction a0_0x7a16() {\n    var _0x19e023 = [\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        'log',\n        'charCodeAt'\n    ];\n    a0_0x7a16 = function () {\n        return _0x19e023;\n    };\n    return a0_0x7a16();\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x213a57(0x0));\nvar cin = input[a0_0x213a57(0x1)](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0xb968a0 = a0_0x2a45;\n    return a ? cin[_0xb968a0(0x2)](cid, cid += n) : cin[_0xb968a0(0x2)](cid, cid += n)[_0xb968a0(0x3)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x5db602 = a0_0x2a45;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x5db602(0x4)](cin[_0x5db602(0x2)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w)[_0x5db602(0x3)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x2d8e1d = a0_0x2a45;\n    var a = arguments, l = a[_0x2d8e1d(0x5)], r = 'Array(a[' + --l + _0x2d8e1d(0x6) + v + _0x2d8e1d(0x7);\n    while (--l)\n        r = 'Array(a[' + l + ']).fill().map(x=>' + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x213a57(0x8)](String(myOut));\nfunction a0_0x2a45(RCDQpu, key) {\n    var stringArray = a0_0x7a16();\n    a0_0x2a45 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a45(RCDQpu, key);\n}\nfunction main() {\n    var _0x499798 = a0_0x2a45;\n    var a = nextstr();\n    var ans = 0x1;\n    var c = xArray(0x0, 0x1a);\n    for (var i = 0x0; i < a[_0x499798(0x5)]; i++) {\n        var t = a[i][_0x499798(0x9)]() - 0x61;\n        ans += i - c[t];\n        c[t]++;\n    }\n    return ans;\n}", "test_cases": [["aatt", "5"], ["xxxxxxxxxx", "1"], ["abracadabra", "44"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var a = nextstr();\n  var ans = 1;\n  var c = xArray(0,26);\n  for(var i = 0; i < a.length; i++){\n    var t = a[i].charCodeAt()-97;\n    ans += i-c[t];\n    c[t]++;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03786_1", "type": "JavaScript", "obfuscated": "const a0_0x549ecc = a0_0x491b;\nfunction a0_0x48db() {\n    const _0x4f68a2 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x48db = function () {\n        return _0x4f68a2;\n    };\n    return a0_0x48db();\n}\nfunction a0_0x491b(mlHjoJ, key) {\n    const stringArray = a0_0x48db();\n    a0_0x491b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x491b(mlHjoJ, key);\n}\nconsole[a0_0x549ecc(0x0)]((args => {\n    const _0x2df7f8 = a0_0x491b;\n    const [[N], A] = args[_0x2df7f8(0x1)]()[_0x2df7f8(0x2)]('\\x0a')['map'](r => r[_0x2df7f8(0x2)]('\\x20')[_0x2df7f8(0x3)](v => v | 0x0));\n    A[_0x2df7f8(0x4)]((a, b) => a - b);\n    let sum = A[0x0], n = 0x0;\n    for (let i = 0x1; i < N; i++) {\n        if (sum * 0x2 >= A[i])\n            n++;\n        else\n            n = 0x0;\n        if (sum + A[i] >= 0x3b9aca00)\n            return '' + (n + N - i);\n        sum = sum + A[i];\n    }\n    return '' + (n + 0x1);\n})(require('fs')[a0_0x549ecc(0x5)](a0_0x549ecc(0x6), a0_0x549ecc(0x7))));", "test_cases": [["3\n3 1 4", "2"], ["5\n1 1 1 1 1", "5"], ["6\n40 1 30 2 7 20", "4"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  A.sort((a,b)=>a-b);\n  let sum = A[0], n = 0;\n  for ( let i = 1; i < N; i++ ) {\n    if ( sum * 2 >= A[i] ) n++;\n    else n = 0;\n    if ( sum + A[i] >= 1e9 ) return `${n+N-i}`;\n    sum = sum + A[i];\n  }\n  return `${n+1}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03831_1", "type": "JavaScript", "obfuscated": "var a0_0x56e3fe = a0_0x498b;\nfunction main(input) {\n    var _0x48c5f9 = a0_0x498b;\n    var lines = input['split']('\\x0a');\n    var line0 = lines[0x0][_0x48c5f9(0x0)]('\\x20');\n    var n = parseInt(line0[0x0]);\n    var a = parseInt(line0[0x1]);\n    var b = parseInt(line0[0x2]);\n    var x = lines[0x1]['split']('\\x20')['map'](t => parseInt(t));\n    var ans = 0x0;\n    for (var i = 0x0; i < n - 0x1; i++) {\n        ans += Math[_0x48c5f9(0x1)](a * (x[i + 0x1] - x[i]), b);\n    }\n    console['log'](ans);\n}\nmain(require('fs')[a0_0x56e3fe(0x2)](a0_0x56e3fe(0x3), 'utf8'));\nfunction a0_0x498b(JKAnsC, key) {\n    var stringArray = a0_0x4e9a();\n    a0_0x498b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x498b(JKAnsC, key);\n}\nfunction a0_0x4e9a() {\n    var _0x1ac690 = [\n        'split',\n        'min',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x4e9a = function () {\n        return _0x1ac690;\n    };\n    return a0_0x4e9a();\n}", "test_cases": [["4 2 5\n1 2 5 7", "11"], ["7 1 100\n40 43 45 105 108 115 124", "84"], ["7 1 2\n24 35 40 68 72 99 103", "12"]], "original": "function main(input) {\n    var lines = input.split('\\n');\n    var line0 = lines[0].split(' ');\n    var n = parseInt(line0[0]);\n    var a = parseInt(line0[1]);\n    var b = parseInt(line0[2]);\n    var x = lines[1].split(' ').map(t => parseInt(t));\n\n    var ans = 0;\n    for (var i = 0; i < n - 1; i++) {\n        ans += Math.min(a * (x[i + 1] - x[i]), b);\n    }\n    console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04021_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x18ab(TnHYLD, key) {\n    var stringArray = a0_0x3145();\n    a0_0x18ab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x18ab(TnHYLD, key);\n}\nvar a0_0x3b3320 = a0_0x18ab;\nvar input = require('fs')['readFileSync'](a0_0x3b3320(0x0), a0_0x3b3320(0x1));\nvar cin = input[a0_0x3b3320(0x2)](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0x4585af = a0_0x18ab;\n    return a ? cin[_0x4585af(0x3)](cid, cid += n) : cin[_0x4585af(0x3)](cid, cid += n)[_0x4585af(0x4)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x30afa8 = a0_0x18ab;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x30afa8(0x5)](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x30afa8(0x5)](cin[_0x30afa8(0x3)](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x41546a = a0_0x18ab;\n    var a = arguments, l = a[_0x41546a(0x6)], r = 'Array(a[' + --l + _0x41546a(0x7) + v + _0x41546a(0x8);\n    while (--l)\n        r = 'Array(a[' + l + _0x41546a(0x9) + r + ')';\n    return eval(r);\n}\nfunction a0_0x3145() {\n    var _0x1ec6de = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        ']).fill().map(x=>',\n        'log',\n        'sort'\n    ];\n    a0_0x3145 = function () {\n        return _0x1ec6de;\n    };\n    return a0_0x3145();\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x3b3320(0xa)](String(myOut));\nfunction main() {\n    var _0x5402be = a0_0x18ab;\n    var n = next();\n    var a = [];\n    for (var i = 0x0; i < n; i++) {\n        a[_0x5402be(0x5)]([\n            next(),\n            i & 0x1\n        ]);\n    }\n    a[_0x5402be(0xb)]((a, b) => a[0x0] - b[0x0]);\n    var ans = 0x0;\n    for (var i = 0x0; i < n; i += 0x2)\n        if (a[i][0x1] === 0x1)\n            ans++;\n    return ans;\n}", "test_cases": [["4\n2\n4\n3\n1", "1"], ["5\n10\n8\n5\n3\n2", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var a = [];\n  for(var i = 0; i < n; i++){\n    a.push([next(),i&1]);\n  }\n  a.sort((a,b)=>a[0]-b[0]);\n  var ans = 0;\n  for(var i = 0; i < n; i+=2)if(a[i][1] === 1)ans++;\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p00061_1", "type": "JavaScript", "obfuscated": "var a0_0x4ab944 = a0_0x28ef;\nvar input = require('fs')[a0_0x4ab944(0x0)](a0_0x4ab944(0x1), 'utf8');\nvar Arr = input['trim']()[a0_0x4ab944(0x2)](a0_0x4ab944(0x3));\nvar inputA = Arr[0x0][a0_0x4ab944(0x2)]('\\x0a');\nvar inputB = Arr[0x1][a0_0x4ab944(0x2)]('\\x0a')[a0_0x4ab944(0x4)](Number);\nvar obj = {};\nvar s = [];\ninputA[a0_0x4ab944(0x5)](function (v) {\n    var _0x507fdc = a0_0x28ef;\n    var arr = v['split'](',')['map'](Number);\n    obj[arr[0x0]] = arr[0x1];\n    s[_0x507fdc(0x6)](arr[0x1]);\n});\nfunction a0_0x367f() {\n    var _0x3669af = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        '\\x0a0,0\\x0a',\n        'map',\n        'forEach',\n        'push',\n        'length',\n        'log',\n        'indexOf'\n    ];\n    a0_0x367f = function () {\n        return _0x3669af;\n    };\n    return a0_0x367f();\n}\ns['sort'](function (a, b) {\n    return b - a;\n});\nvar s0 = s[0x0];\nfunction a0_0x28ef(daoSsG, key) {\n    var stringArray = a0_0x367f();\n    a0_0x28ef = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28ef(daoSsG, key);\n}\nvar t = [s0];\nfor (var i = 0x1; i < s[a0_0x4ab944(0x7)]; i++) {\n    if (s0 == s[i])\n        continue;\n    s0 = s[i];\n    t['push'](s[i]);\n}\ninputB[a0_0x4ab944(0x5)](function (v) {\n    var _0x89669f = a0_0x28ef;\n    console[_0x89669f(0x8)](t[_0x89669f(0x9)](obj[v]) + 0x1);\n});", "test_cases": [["1,20\n2,20\n3,30\n4,10\n5,10\n6,20\n0,0\n1\n2\n4\n5", "2\n2\n3\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n0,0\\n\");\nvar inputA=Arr[0].split(\"\\n\");\nvar inputB=Arr[1].split(\"\\n\").map(Number);\n\nvar obj={};\nvar s=[];\n\ninputA.forEach(function(v){\nvar arr=v.split(\",\").map(Number);\nobj[arr[0]]=arr[1];\ns.push(arr[1]);\n});\n\ns.sort(function(a,b){return b-a;});\n\nvar s0=s[0];\nvar t=[s0];\nfor(var i=1;i<s.length;i++){\nif(s0==s[i])continue;\ns0=s[i];\nt.push(s[i]);\n}\n\ninputB.forEach(function(v){\nconsole.log(t.indexOf(obj[v])+1);\n});", "language": "JavaScript"}
{"filename": "p00071_1", "type": "JavaScript", "obfuscated": "function a0_0x7b67(kOaLvd, key) {\n    var stringArray = a0_0x3bc6();\n    a0_0x7b67 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7b67(kOaLvd, key);\n}\nvar a0_0x575024 = a0_0x7b67;\nfunction a0_0x3bc6() {\n    var _0x3be1b4 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x3bc6 = function () {\n        return _0x3be1b4;\n    };\n    return a0_0x3bc6();\n}\nfunction bomb(y, x) {\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    for (var i = 0x0; i < 0x4; i++) {\n        for (var j = 0x1; j <= 0x3; j++) {\n            var yy = y + dy[i] * j;\n            var xx = x + dx[i] * j;\n            if (yy < 0x0 || yy >= 0x8 || xx < 0x0 || xx >= 0x8)\n                continue;\n            if (yx[yy][xx] == 0x1) {\n                yx[yy][xx] = 0x0;\n                bomb(yy, xx);\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync'](a0_0x575024(0x0), a0_0x575024(0x1));\nvar Arr = input[a0_0x575024(0x2)]()['split']('\\x0a');\nvar AL = Arr[a0_0x575024(0x3)]();\nfor (var i = 0x0; i < AL; i++) {\n    Arr[a0_0x575024(0x3)]();\n    var yx = [];\n    for (var j = 0x0; j < 0x8; j++) {\n        var line = Arr[a0_0x575024(0x3)]()[a0_0x575024(0x4)]('')[a0_0x575024(0x5)](Number);\n        yx[a0_0x575024(0x6)](line);\n    }\n    var X = Arr[a0_0x575024(0x3)]() - 0x0 - 0x1;\n    var Y = Arr[a0_0x575024(0x3)]() - 0x0 - 0x1;\n    if (yx[Y][X] == 0x1) {\n        yx[Y][X] = 0x0;\n        bomb(Y, X);\n    }\n    console['log']('Data\\x20' + (i + 0x1) + ':');\n    for (var j = 0x0; j < 0x8; j++)\n        console[a0_0x575024(0x7)](yx[j][a0_0x575024(0x8)](''));\n}", "test_cases": [["2\n\n00010010\n00000100\n10001001\n00100010\n01000000\n00001000\n10100010\n01010010\n2\n5\n\n00010010\n00000100\n10001001\n00100010\n01000000\n00001000\n10100010\n01010010\n2\n5", "Data 1:\n00000000\n00000100\n10001001\n00100000\n00000000\n00001000\n10100000\n00000000\nData 2:\n00000000\n00000100\n10001001\n00100000\n00000000\n00001000\n10100000\n00000000"]], "original": "function bomb(y,x){\n   var dx=[-1,1,0,0];\n   var dy=[0,0,-1,1];\n   for(var i=0;i<4;i++){\n      for(var j=1;j<=3;j++){\n         var yy=y+(dy[i]*j);\n         var xx=x+(dx[i]*j);\n         if(yy<0 || yy>=8 || xx<0 || xx>=8)continue;\n         if(yx[yy][xx]==1){yx[yy][xx]=0;bomb(yy,xx);}\n      }\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nfor(var i=0;i<AL;i++){\n   Arr.shift();\n   var yx=[];\n   for(var j=0;j<8;j++){\n      var line=Arr.shift().split(\"\").map(Number);\n      yx.push(line);\n   }\n   var X=(Arr.shift()-0)-1;\n   var Y=(Arr.shift()-0)-1;\n   if(yx[Y][X]==1){yx[Y][X]=0;bomb(Y,X);}\n   console.log(\"Data \"+(i+1)+\":\");\n   for(var j=0;j<8;j++)console.log(yx[j].join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00072_1", "type": "JavaScript", "obfuscated": "function a0_0x4b2b() {\n    var _0xc9b9be = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'length',\n        'push'\n    ];\n    a0_0x4b2b = function () {\n        return _0xc9b9be;\n    };\n    return a0_0x4b2b();\n}\nvar a0_0x23ed63 = a0_0x10a4;\nfunction a0_0x10a4(cKmfkc, key) {\n    var stringArray = a0_0x4b2b();\n    a0_0x10a4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x10a4(cKmfkc, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x23ed63(0x0), a0_0x23ed63(0x1));\nvar Arr = input['trim']()[a0_0x23ed63(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var m = Arr['shift']() - 0x0;\n    var N = [];\n    for (var i = 0x0; i < n; i++) {\n        N[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            N[i][j] = Infinity;\n            if (i == j)\n                N[i][j] = 0x0;\n        }\n    }\n    var arr = [];\n    for (var i = 0x0; i < m; i++) {\n        var abc = Arr[a0_0x23ed63(0x3)]()['split'](',')['map'](Number);\n        var a = abc[0x0];\n        var b = abc[0x1];\n        var c = abc[0x2] / 0x64;\n        N[a][b] = c;\n        N[b][a] = c;\n    }\n    var city = [0x0];\n    var cost = 0x0;\n    while (!![]) {\n        if (city[a0_0x23ed63(0x4)] == n)\n            break;\n        var min = Infinity;\n        var select = -0x1;\n        for (var i = 0x0; i < city[a0_0x23ed63(0x4)]; i++) {\n            for (var j = 0x0; j < n; j++) {\n                if (city['indexOf'](j) != -0x1)\n                    continue;\n                if (N[city[i]][j] < min) {\n                    select = j;\n                    min = N[city[i]][j] - 0x1;\n                }\n            }\n        }\n        if (select != -0x1) {\n            cost += min;\n            city[a0_0x23ed63(0x5)](select);\n        }\n    }\n    console['log'](cost);\n}", "test_cases": [["4\n4\n0,1,1500\n0,2,2000\n1,2,600\n1,3,500\n0", "23"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\nvar n=Arr.shift()-0;\nif(n==0)break;\nvar m=Arr.shift()-0;\nvar N=[];\nfor(var i=0;i<n;i++){\n   N[i]=[];\n   for(var j=0;j<n;j++){\n      N[i][j]=Infinity;\n      if(i==j)N[i][j]=0;\n   }\n}\nvar arr=[];\nfor(var i=0;i<m;i++){\n   var abc=Arr.shift().split(\",\").map(Number);\n   var a=abc[0];\n   var b=abc[1];\n   var c=abc[2]/100;\n   N[a][b]=c;\n   N[b][a]=c;\n}\nvar city=[0];\nvar cost=0;\nwhile(true){\n   if(city.length==n)break;\n   var min=Infinity;\n   var select=-1;\n   for(var i=0;i<city.length;i++){\n      for(var j=0;j<n;j++){\n         if(city.indexOf(j)!=-1)continue;\n         if(N[city[i]][j]<min){\n            select=j;\n            min=N[city[i]][j]-1;\n         }\n      }\n   }\n   if(select!=-1){\n      cost+=min;\n      city.push(select);\n   }\n}\nconsole.log(cost);\n}", "language": "JavaScript"}
{"filename": "p00074_1", "type": "JavaScript", "obfuscated": "var a0_0x29f3af = a0_0x3a04;\nfunction a0_0x1d57() {\n    var _0x14da23 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'map',\n        'floor',\n        'log',\n        'slice'\n    ];\n    a0_0x1d57 = function () {\n        return _0x14da23;\n    };\n    return a0_0x1d57();\n}\nvar input = require('fs')[a0_0x29f3af(0x0)](a0_0x29f3af(0x1), a0_0x29f3af(0x2))[a0_0x29f3af(0x3)]();\nvar lines = input['split']('\\x0a');\nvar line;\nfunction a0_0x3a04(iRmIVr, key) {\n    var stringArray = a0_0x1d57();\n    a0_0x3a04 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3a04(iRmIVr, key);\n}\nwhile (line = lines[a0_0x29f3af(0x4)]()) {\n    var time = line['split']('\\x20')[a0_0x29f3af(0x5)](function (n) {\n        return +n;\n    });\n    if (time[0x0] == -0x1 && time[0x1] == -0x1 && time[0x2] == -0x1)\n        break;\n    var hour = time[0x0];\n    var min = time[0x1] + hour * 0x3c;\n    var sec = time[0x2] + min * 0x3c;\n    var rem = 0x78 * 0x3c - sec;\n    var rem3 = rem * 0x3;\n    var remSec = rem % 0x3c;\n    var remSec3 = rem3 % 0x3c;\n    rem = Math[a0_0x29f3af(0x6)](rem / 0x3c);\n    rem3 = Math[a0_0x29f3af(0x6)](rem3 / 0x3c);\n    var remMin = rem % 0x3c;\n    var remMin3 = rem3 % 0x3c;\n    var remHour = Math[a0_0x29f3af(0x6)](rem / 0x3c);\n    var remHour3 = Math[a0_0x29f3af(0x6)](rem3 / 0x3c);\n    console[a0_0x29f3af(0x7)](('0' + remHour)[a0_0x29f3af(0x8)](-0x2) + ':' + ('0' + remMin)[a0_0x29f3af(0x8)](-0x2) + ':' + ('0' + remSec)[a0_0x29f3af(0x8)](-0x2));\n    console[a0_0x29f3af(0x7)](('0' + remHour3)[a0_0x29f3af(0x8)](-0x2) + ':' + ('0' + remMin3)[a0_0x29f3af(0x8)](-0x2) + ':' + ('0' + remSec3)[a0_0x29f3af(0x8)](-0x2));\n}", "test_cases": [["1 30 0\n-1 -1 -1", "00:30:00\n01:30:00"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n    var time = line.split(' ').map(function(n){return +n;});\n    if (time[0] == -1 && time[1] == -1 && time[2] == -1)\n        break;\n\n    var hour = time[0];\n    var min = time[1] + hour * 60;\n    var sec = time[2] + min * 60;\n\n    var rem = 120 * 60 - sec;\n    var rem3 = rem * 3;\n    var remSec = rem % 60;\n    var remSec3 = rem3 % 60;\n    rem = Math.floor(rem / 60);\n    rem3 = Math.floor(rem3 / 60);\n    var remMin = rem % 60;\n    var remMin3 = rem3 % 60;\n    var remHour = Math.floor(rem / 60);\n    var remHour3 = Math.floor(rem3 / 60);\n\n    console.log(('0' + remHour).slice(-2) + ':' + ('0' + remMin).slice(-2) + ':' + ('0' + remSec).slice(-2));\n    console.log(('0' + remHour3).slice(-2) + ':' + ('0' + remMin3).slice(-2) + ':' + ('0' + remSec3).slice(-2));\n}", "language": "JavaScript"}
{"filename": "p00075_1", "type": "JavaScript", "obfuscated": "var a0_0x761afa = a0_0x1a52;\nvar input = require('fs')[a0_0x761afa(0x0)](a0_0x761afa(0x1), a0_0x761afa(0x2));\nfunction a0_0x1a52(BzUmjd, key) {\n    var stringArray = a0_0x2aea();\n    a0_0x1a52 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a52(BzUmjd, key);\n}\nvar lines = input[a0_0x761afa(0x3)]()[a0_0x761afa(0x4)]('\\x0a');\nfunction a0_0x2aea() {\n    var _0x571e3b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'forEach',\n        'log'\n    ];\n    a0_0x2aea = function () {\n        return _0x571e3b;\n    };\n    return a0_0x2aea();\n}\nvar ret = lines['filter'](function (line) {\n    var _0x819984 = a0_0x1a52;\n    var items = line[_0x819984(0x4)](',');\n    var w = +items[0x1];\n    var h = +items[0x2];\n    return w / (h * h) >= 0x19;\n});\nret[a0_0x761afa(0x5)](function (line) {\n    var _0x3885b2 = a0_0x1a52;\n    console[_0x3885b2(0x6)](line['split'](',')[0x0]);\n});", "test_cases": [["1001,50.0,1.60 \n1002,60.0,1.70 \n1003,70.0,1.80 \n1004,80.0,1.70 \n1005,90.0,1.60", "1004\n1005"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar ret = lines.filter(function(line) {\n    var items = line.split(',');\n    var w = +items[1];\n    var h = +items[2];\n\n    return w / (h * h) >= 25;\n});\n\nret.forEach(function(line) {\n    console.log(line.split(',')[0]);\n});", "language": "JavaScript"}
{"filename": "p00078_1", "type": "JavaScript", "obfuscated": "var a0_0x18e8e5 = a0_0x484f;\nfunction a0_0x1ff2() {\n    var _0x357d45 = [\n        'slice',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'length',\n        'floor',\n        'log',\n        'join',\n        'replace'\n    ];\n    a0_0x1ff2 = function () {\n        return _0x357d45;\n    };\n    return a0_0x1ff2();\n}\nfunction bomb(y, x) {\n    var _0x350b1d = a0_0x484f;\n    if (N == max)\n        return;\n    if (x < 0x0)\n        x = n - 0x1;\n    if (y < 0x0)\n        y = n - 0x1;\n    if (x >= n)\n        x = 0x0;\n    if (y >= n)\n        y = 0x0;\n    if (yx[y][x] != -0x1) {\n        bomb(y + 0x1, x - 0x1);\n    } else {\n        yx[y][x] = ('\\x20\\x20\\x20' + N)[_0x350b1d(0x0)](-0x4);\n        N++;\n        bomb(y + 0x1, x + 0x1);\n    }\n}\nvar input = require('fs')[a0_0x18e8e5(0x1)](a0_0x18e8e5(0x2), a0_0x18e8e5(0x3));\nfunction a0_0x484f(nZnfXf, key) {\n    var stringArray = a0_0x1ff2();\n    a0_0x484f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x484f(nZnfXf, key);\n}\nvar Arr = input[a0_0x18e8e5(0x4)]()['split']('\\x0a')[a0_0x18e8e5(0x5)](Number);\nfor (var i = 0x0; i < Arr[a0_0x18e8e5(0x6)]; i++) {\n    var n = Arr[i];\n    var max = n * n + 0x1;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var j = 0x0; j < n; j++) {\n        yx[j] = [];\n        for (var k = 0x0; k < n; k++) {\n            yx[j][k] = -0x1;\n        }\n    }\n    var N = 0x1;\n    bomb(Math[a0_0x18e8e5(0x7)](n / 0x2) + 0x1, Math['floor'](n / 0x2));\n    console[a0_0x18e8e5(0x8)](yx[a0_0x18e8e5(0x9)]('\\x0a')[a0_0x18e8e5(0xa)](/\\,/g, ''));\n}", "test_cases": [["3\n5\n0", "4   9   2\n   3   5   7\n   8   1   6\n  11  24   7  20   3\n   4  12  25   8  16\n  17   5  13  21   9\n  10  18   1  14  22\n  23   6  19   2  15"]], "original": "function bomb(y,x){\n   if(N==max)return;\n   if(x<0)x=n-1;\n   if(y<0)y=n-1;\n   if(x>=n)x=0;\n   if(y>=n)y=0;\n   if(yx[y][x]!=-1){bomb(y+1,x-1);}\n   else{yx[y][x]=(\"   \"+N).slice(-4);N++;bomb(y+1,x+1);}\n}\n \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var n=Arr[i];\n   var max=n*n+1;\n   if(n==0)break;\n   var yx=[];\n   for(var j=0;j<n;j++){\n      yx[j]=[];\n      for(var k=0;k<n;k++){\n         yx[j][k]=-1;\n      }\n   }\n   var N=1;\n   bomb(Math.floor(n/2)+1,Math.floor(n/2));\n   console.log(yx.join(\"\\n\").replace(/\\,/g,\"\"));\n}", "language": "JavaScript"}
{"filename": "p00121_1", "type": "JavaScript", "obfuscated": "var a0_0x443644 = a0_0x3191;\nfunction a0_0x3191(avAirH, key) {\n    var stringArray = a0_0x3004();\n    a0_0x3191 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3191(avAirH, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x443644(0x0));\nfunction a0_0x3004() {\n    var _0x318e66 = [\n        'utf8',\n        'trim',\n        'split',\n        'forEach',\n        'map',\n        'length',\n        'shift',\n        'join',\n        '01234567',\n        'indexOf',\n        'floor',\n        'slice',\n        'hasOwnProperty'\n    ];\n    a0_0x3004 = function () {\n        return _0x318e66;\n    };\n    return a0_0x3004();\n}\nvar Arr = input[a0_0x443644(0x1)]()[a0_0x443644(0x2)]('\\x0a');\nvar dy = [\n    -0x1,\n    0x0,\n    0x0,\n    0x1\n];\nvar dx = [\n    0x0,\n    -0x1,\n    0x1,\n    0x0\n];\nArr[a0_0x443644(0x3)](function (v, I) {\n    var _0x23d9ba = a0_0x3191;\n    var V = v[_0x23d9ba(0x2)]('\\x20')[_0x23d9ba(0x4)](Number);\n    var obj = {};\n    var P = [[\n            V,\n            0x0\n        ]];\n    while (P[_0x23d9ba(0x5)] > 0x0) {\n        var A = P[_0x23d9ba(0x6)]();\n        var arr = A[0x0];\n        var cnt = A[0x1];\n        if (arr[_0x23d9ba(0x7)]('') == _0x23d9ba(0x8)) {\n            console['log'](cnt);\n            break;\n        }\n        var index = arr[_0x23d9ba(0x9)](0x0);\n        var y = Math[_0x23d9ba(0xa)](index / 0x4);\n        var x = index % 0x4;\n        var yx = [\n            arr[_0x23d9ba(0xb)](0x0, 0x4),\n            arr[_0x23d9ba(0xb)](0x4, 0x8)\n        ];\n        for (var i = 0x0; i < 0x4; i++) {\n            var yy = y + dy[i];\n            var xx = x + dx[i];\n            if (yy < 0x0 || xx < 0x0 || yy >= 0x2 || xx >= 0x4)\n                continue;\n            yx[y][x] = yx[yy][xx];\n            var card = yx[yy][xx];\n            yx[yy][xx] = 0x0;\n            var YX = yx[0x0]['concat'](yx[0x1]);\n            var str = YX['join']('');\n            if (obj[_0x23d9ba(0xc)](str) == ![]) {\n                obj[str] = !![];\n                P['push']([\n                    YX,\n                    cnt + 0x1\n                ]);\n            }\n            yx[yy][xx] = card;\n            yx[y][x] = 0x0;\n        }\n    }\n});", "test_cases": [["0 1 2 3 4 5 6 7\n1 0 2 3 4 5 6 7\n7 6 5 4 3 2 1 0", "0\n1\n28"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dy=[-1,0,0,1];\nvar dx=[0,-1,1,0];\nArr.forEach(function(v,I){\n   var V=v.split(\" \").map(Number);\n   var obj={};\n   var P=[[V,0]];\n   while(P.length>0){\n      var A=P.shift();\n      var arr=A[0];\n      var cnt=A[1];\n      if(arr.join(\"\")==\"01234567\"){console.log(cnt);break;}\n      var index=arr.indexOf(0);\n      var y=Math.floor(index/4);\n      var x=index%4;\n      var yx=[arr.slice(0,4),arr.slice(4,8)];\n      for(var i=0;i<4;i++){\n         var yy=y+dy[i];\n         var xx=x+dx[i];\n         if(yy<0 || xx<0 || yy>=2 || xx>=4)continue;\n         yx[y][x]=yx[yy][xx];\n         var card=yx[yy][xx];\n         yx[yy][xx]=0;\n         var YX=yx[0].concat(yx[1]);\n         var str=YX.join(\"\");\n         if(obj.hasOwnProperty(str)==false){\n               obj[str]=true;\n               P.push([YX,cnt+1]);\n         }\n         yx[yy][xx]=card;\n         yx[y][x]=0;\n      }\n   }\n});", "language": "JavaScript"}
{"filename": "p00130_1", "type": "JavaScript", "obfuscated": "var a0_0x251d95 = a0_0xf730;\nvar input = require('fs')[a0_0x251d95(0x0)](a0_0x251d95(0x1), a0_0x251d95(0x2));\nvar Arr = input['trim']()['split']('\\x0a');\nvar L = Arr[a0_0x251d95(0x3)]();\nfunction a0_0xf730(ywPHUq, key) {\n    var stringArray = a0_0x5c98();\n    a0_0xf730 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf730(ywPHUq, key);\n}\nfunction a0_0x5c98() {\n    var _0x3c891d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'replace',\n        'split',\n        'forEach',\n        'unshift',\n        'length',\n        'push',\n        'join'\n    ];\n    a0_0x5c98 = function () {\n        return _0x3c891d;\n    };\n    return a0_0x5c98();\n}\nfor (var i = 0x0; i < L; i++) {\n    var str = Arr[i];\n    str = str[a0_0x251d95(0x4)](/\\-\\>/g, 'A');\n    str = str['replace'](/\\<\\-/g, 'Z');\n    var m = str[a0_0x251d95(0x5)]('');\n    var arr = [m[0x0]];\n    var n = 0x1;\n    m[a0_0x251d95(0x6)](function (v) {\n        var _0x28ea8b = a0_0xf730;\n        if (v == 'A')\n            n++;\n        else if (v == 'Z')\n            n--;\n        else {\n            if (n == 0x0) {\n                arr[_0x28ea8b(0x7)](v);\n                n = 0x1;\n            }\n            if (n > arr[_0x28ea8b(0x8)])\n                arr[_0x28ea8b(0x9)](v);\n        }\n    });\n    console['log'](arr[a0_0x251d95(0xa)](''));\n}", "test_cases": [["4\na->e->c->b->d\nb<-c<-a<-d<-e\nb->a->c<-a->c->d<-c<-a<-b->a->c->d->e<-d\na->e<-a<-d->a->e<-a<-d<-c->d->a<-d<-c<-b->c->d<-c", "aecbd\nedacb\nbacde\nbcdae"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar L=Arr.shift();\nfor(var i=0;i<L;i++){\n   var str=Arr[i];\n   str=str.replace(/\\-\\>/g,\"A\");\n   str=str.replace(/\\<\\-/g,\"Z\");\n   var m=str.split(\"\");\n   var arr=[m[0]];\n   var n=1;\n   m.forEach(function(v){\n      if(v==\"A\")n++;\n      else if(v==\"Z\")n--;\n      else {\n         if(n==0){arr.unshift(v);n=1;}\n         if(n>arr.length)arr.push(v);\n      }\n   });\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00148_1", "type": "JavaScript", "obfuscated": "function a0_0x10f9(WwgHew, key) {\n    const stringArray = a0_0x3913();\n    a0_0x10f9 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x10f9(WwgHew, key);\n}\nfunction a0_0x3913() {\n    const _0x432de0 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x3913 = function () {\n        return _0x432de0;\n    };\n    return a0_0x3913();\n}\nconst a0_0x395b2a = a0_0x10f9;\nlet input = require('fs')['readFileSync'](a0_0x395b2a(0x0), a0_0x395b2a(0x1));\nlet Arr = input[a0_0x395b2a(0x2)]()[a0_0x395b2a(0x3)]('\\x0a');\nfor (var i = 0x0; i < Arr[a0_0x395b2a(0x4)]; ++i) {\n    let n = Arr[i];\n    var ans = n % 0x27;\n    if (ans == 0x0)\n        ans = 0x27;\n    if (ans < 0xa) {\n        ans = '0' + ans;\n    }\n    console[a0_0x395b2a(0x5)]('3C' + ans);\n}", "test_cases": [["50\n5576\n5577\n5578", "3C11\n3C38\n3C39\n3C01"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'utf8');\nlet Arr = (input.trim()).split(\"\\n\");\n\nfor(var i = 0;i < Arr.length;++i){\n    let n = Arr[i];\n    var ans = n % 39;\n    if(ans == 0) ans = 39\n    if(ans < 10){\n        ans = \"0\" + ans\n    }\n    console.log(\"3C\"+ ans);\n}\n\n", "language": "JavaScript"}
{"filename": "p00149_1", "type": "JavaScript", "obfuscated": "var a0_0x851348 = a0_0x33c3;\nvar input = require('fs')[a0_0x851348(0x0)](a0_0x851348(0x1), a0_0x851348(0x2));\nvar Arr = input[a0_0x851348(0x3)]()[a0_0x851348(0x4)]('\\x0a');\nvar a = [\n    0x0,\n    0x0\n];\nvar b = [\n    0x0,\n    0x0\n];\nvar c = [\n    0x0,\n    0x0\n];\nvar d = [\n    0x0,\n    0x0\n];\nfor (var i = 0x0; i < Arr[a0_0x851348(0x5)]; i++) {\n    var arr = Arr[i]['split']('\\x20')[a0_0x851348(0x6)](Number);\n    for (var j = 0x0; j < 0x2; j++) {\n        if (arr[j] >= 1.1)\n            a[j]++;\n        else if (arr[j] >= 0.6)\n            b[j]++;\n        else if (arr[j] >= 0.2)\n            c[j]++;\n        else\n            d[j]++;\n    }\n}\nfunction a0_0x33c3(aHGNRT, key) {\n    var stringArray = a0_0xe4e2();\n    a0_0x33c3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x33c3(aHGNRT, key);\n}\nconsole[a0_0x851348(0x7)](a[0x0] + '\\x20' + a[0x1]);\nconsole['log'](b[0x0] + '\\x20' + b[0x1]);\nconsole[a0_0x851348(0x7)](c[0x0] + '\\x20' + c[0x1]);\nfunction a0_0xe4e2() {\n    var _0x14e986 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'map',\n        'log'\n    ];\n    a0_0xe4e2 = function () {\n        return _0x14e986;\n    };\n    return a0_0xe4e2();\n}\nconsole[a0_0x851348(0x7)](d[0x0] + '\\x20' + d[0x1]);", "test_cases": [["1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0", "2 3\n2 1\n0 0\n0 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar a=[0,0];\nvar b=[0,0];\nvar c=[0,0];\nvar d=[0,0];\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   for(var j=0;j<2;j++){\n      if(arr[j]>=1.1)a[j]++;\n      else if(arr[j]>=0.6)b[j]++;\n      else if(arr[j]>=0.2)c[j]++;\n      else d[j]++;\n   }\n}\nconsole.log(a[0]+\" \"+a[1]);\nconsole.log(b[0]+\" \"+b[1]);\nconsole.log(c[0]+\" \"+c[1]);\nconsole.log(d[0]+\" \"+d[1]);", "language": "JavaScript"}
{"filename": "p00159_1", "type": "JavaScript", "obfuscated": "function a0_0x1c25() {\n    var _0x7e5996 = [\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'abs',\n        'set',\n        'toString',\n        'entries',\n        'sort',\n        'log',\n        'next'\n    ];\n    a0_0x1c25 = function () {\n        return _0x7e5996;\n    };\n    return a0_0x1c25();\n}\nvar a0_0x122ca5 = a0_0x4db9;\nlet input = require('fs')['readFileSync']('/dev/stdin', a0_0x122ca5(0x0));\nfunction a0_0x4db9(MsdcSC, key) {\n    var stringArray = a0_0x1c25();\n    a0_0x4db9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4db9(MsdcSC, key);\n}\nlet Arr = input[a0_0x122ca5(0x1)]()[a0_0x122ca5(0x2)]('\\x0a');\nlet bmis = new Map();\nwhile (0x1) {\n    let n = Arr[0x0];\n    if (n == 0x0)\n        break;\n    Arr[a0_0x122ca5(0x3)]();\n    for (var i = 0x0; i < n; ++i) {\n        var nums = Arr[0x0][a0_0x122ca5(0x2)]('\\x20')[a0_0x122ca5(0x4)](Number);\n        var m = nums[0x1] / 0x64;\n        var bmi = nums[0x2] / (m * m);\n        var dif = Math[a0_0x122ca5(0x5)](0x16 - bmi);\n        bmis[a0_0x122ca5(0x6)](nums[0x0][a0_0x122ca5(0x7)](), dif);\n        Arr[a0_0x122ca5(0x3)]();\n    }\n    let sorted = new Map([...bmis[a0_0x122ca5(0x8)]()][a0_0x122ca5(0x9)]((a, b) => a[0x1] - b[0x1]));\n    console[a0_0x122ca5(0xa)](sorted['keys']()[a0_0x122ca5(0xb)]()['value']);\n}", "test_cases": [["6\n1 165 66\n2 178 60\n3 180 72\n4 160 65\n5 185 62\n6 182 62\n3\n3 160 65\n2 180 70\n1 170 75\n0", "3\n2"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'utf8');\nlet Arr = (input.trim()).split(\"\\n\");\nlet bmis = new Map()\n\nwhile(1){\n    let n = Arr[0];\n    if(n == 0) break;\n    Arr.shift();\n    \n    for(var i = 0;i < n;++i){\n        var nums = Arr[0].split(\" \").map(Number);\n        var m = nums[1] / 100\n        var bmi = nums[2] / (m * m);\n        var dif = Math.abs(22 - bmi)\n        bmis.set(nums[0].toString(),dif);\n        Arr.shift();\n    }\n    let sorted = new Map([...bmis.entries()].sort((a, b) => a[1] - b[1]));\n    console.log(sorted.keys().next().value);\n}\n", "language": "JavaScript"}
{"filename": "p00160_1", "type": "JavaScript", "obfuscated": "var a0_0x35b2b1 = a0_0x2262;\nvar input = require('fs')[a0_0x35b2b1(0x0)](a0_0x35b2b1(0x1), a0_0x35b2b1(0x2));\nfunction a0_0x2262(AjNLNl, key) {\n    var stringArray = a0_0x1c97();\n    a0_0x2262 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2262(AjNLNl, key);\n}\nfunction a0_0x1c97() {\n    var _0x270916 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'max'\n    ];\n    a0_0x1c97 = function () {\n        return _0x270916;\n    };\n    return a0_0x1c97();\n}\nvar Arr = input[a0_0x35b2b1(0x3)]()[a0_0x35b2b1(0x4)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x35b2b1(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr['shift']()[a0_0x35b2b1(0x4)]('\\x20')[a0_0x35b2b1(0x6)](Number);\n        var L = arr[0x0] + arr[0x1] + arr[0x2];\n        var W = arr[0x3];\n        var x;\n        if (L > 0xa0)\n            x = 0x0;\n        if (L <= 0xa0)\n            x = 0x640;\n        if (L <= 0x8c)\n            x = 0x578;\n        if (L <= 0x78)\n            x = 0x4b0;\n        if (L <= 0x64)\n            x = 0x3e8;\n        if (L <= 0x50)\n            x = 0x320;\n        if (L <= 0x3c)\n            x = 0x258;\n        var y;\n        if (W > 0x19)\n            y = 0x0;\n        if (W <= 0x19)\n            y = 0x640;\n        if (W <= 0x14)\n            y = 0x578;\n        if (W <= 0xf)\n            y = 0x4b0;\n        if (W <= 0xa)\n            y = 0x3e8;\n        if (W <= 0x5)\n            y = 0x320;\n        if (W <= 0x2)\n            y = 0x258;\n        if (x != 0x0 && y != 0x0)\n            sum += Math[a0_0x35b2b1(0x7)](x, y);\n    }\n    console['log'](sum);\n}", "test_cases": [["2\n50 25 5 5\n80 60 10 30\n3\n10 15 25 24\n5 8 12 5\n30 30 30 18\n0", "800\n3800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var L=arr[0]+arr[1]+arr[2];\n      var W=arr[3];\n      var x;\n      if(L>160)x=0;\n      if(L<=160)x=1600;\n      if(L<=140)x=1400;\n      if(L<=120)x=1200;\n      if(L<=100)x=1000;\n      if(L<=80)x=800;\n      if(L<=60)x=600;\n      var y;\n      if(W>25)y=0;\n      if(W<=25)y=1600;\n      if(W<=20)y=1400;\n      if(W<=15)y=1200;\n      if(W<=10)y=1000;\n      if(W<=5)y=800;\n      if(W<=2)y=600;\n      if(x!=0 && y!=0)sum+=Math.max(x,y);\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00169_1", "type": "JavaScript", "obfuscated": "var a0_0x3cde51 = a0_0x897d;\nvar input = require('fs')[a0_0x3cde51(0x0)]('/dev/stdin', a0_0x3cde51(0x1));\nfunction a0_0x56c7() {\n    var _0x30186e = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x56c7 = function () {\n        return _0x30186e;\n    };\n    return a0_0x56c7();\n}\nfunction a0_0x897d(wtMOMf, key) {\n    var stringArray = a0_0x56c7();\n    a0_0x897d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x897d(wtMOMf, key);\n}\nvar Arr = input[a0_0x3cde51(0x2)]()[a0_0x3cde51(0x3)]('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()[a0_0x3cde51(0x3)]('\\x20')['map'](Number);\n    if (arr[0x0] == 0x0)\n        break;\n    var sum = 0x0;\n    arr = arr['filter'](function (v) {\n        if (v > 0xa)\n            v = 0xa;\n        sum += v;\n        return v == 0x1;\n    });\n    var i = arr[a0_0x3cde51(0x4)];\n    while (i != 0x0) {\n        if (sum + 0xa <= 0x15)\n            sum += 0xa;\n        i--;\n    }\n    console[a0_0x3cde51(0x5)](sum > 0x15 ? 0x0 : sum);\n}", "test_cases": [["1\n7 7 7\n7 7 8\n12 1\n10 1 1\n0", "11\n21\n0\n21\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0)break;\n   var sum=0;\n   arr=arr.filter(function(v){\n      if(v>10)v=10;\n      sum+=v;\n      return v==1;\n   });\n   var i=arr.length;\n   while(i!=0){\n      if(sum+10<=21)sum+=10;\n      i--;\n   }\n   console.log((sum>21)?0:sum);\n}", "language": "JavaScript"}
{"filename": "p00183_1", "type": "JavaScript", "obfuscated": "var a0_0xbec197 = a0_0x3cfa;\nvar input = require('fs')[a0_0xbec197(0x0)](a0_0xbec197(0x1), a0_0xbec197(0x2));\nfunction a0_0x3cfa(GIvLTZ, key) {\n    var stringArray = a0_0x2259();\n    a0_0x3cfa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3cfa(GIvLTZ, key);\n}\nfunction a0_0x2259() {\n    var _0x5bf1f0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift'\n    ];\n    a0_0x2259 = function () {\n        return _0x5bf1f0;\n    };\n    return a0_0x2259();\n}\nvar Arr = input[a0_0xbec197(0x3)](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var x = Arr['shift']()[a0_0xbec197(0x4)]('');\n    if (x[0x0] == '0')\n        break;\n    var y = Arr[a0_0xbec197(0x5)]()[a0_0xbec197(0x4)]('');\n    var z = Arr['shift']()[a0_0xbec197(0x4)]('');\n    var ans = 'NA';\n    for (var i = 0x0; i < 0x2; i++) {\n        var s = [\n            'b',\n            'w'\n        ][i];\n        if (x[0x0] + x[0x1] + x[0x2] == s + s + s)\n            ans = s;\n        if (y[0x0] + y[0x1] + y[0x2] == s + s + s)\n            ans = s;\n        if (z[0x0] + z[0x1] + z[0x2] == s + s + s)\n            ans = s;\n        if (x[0x0] + y[0x0] + z[0x0] == s + s + s)\n            ans = s;\n        if (x[0x1] + y[0x1] + z[0x1] == s + s + s)\n            ans = s;\n        if (x[0x2] + y[0x2] + z[0x2] == s + s + s)\n            ans = s;\n        if (x[0x0] + y[0x1] + z[0x2] == s + s + s)\n            ans = s;\n        if (x[0x2] + y[0x1] + z[0x0] == s + s + s)\n            ans = s;\n    }\n    console['log'](ans);\n}", "test_cases": [["bbw\nwbw\n+b+\nbwb\nwbw\nwbw\n0", "b\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var x=Arr.shift().split(\"\");\n   if(x[0]==\"0\")break;\n   var y=Arr.shift().split(\"\");\n   var z=Arr.shift().split(\"\");\n   var ans=\"NA\";\n   for(var i=0;i<2;i++){\n      var s=([\"b\",\"w\"])[i];\n      if(x[0]+x[1]+x[2]==s+s+s)ans=s;\n      if(y[0]+y[1]+y[2]==s+s+s)ans=s;\n      if(z[0]+z[1]+z[2]==s+s+s)ans=s;\n      if(x[0]+y[0]+z[0]==s+s+s)ans=s;\n      if(x[1]+y[1]+z[1]==s+s+s)ans=s;\n      if(x[2]+y[2]+z[2]==s+s+s)ans=s;\n      if(x[0]+y[1]+z[2]==s+s+s)ans=s;\n      if(x[2]+y[1]+z[0]==s+s+s)ans=s;\n   }\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00195_1", "type": "JavaScript", "obfuscated": "var a0_0x110199 = a0_0x5dda;\nvar input = require('fs')[a0_0x110199(0x0)](a0_0x110199(0x1), 'utf8');\nvar Arr = input[a0_0x110199(0x2)]()[a0_0x110199(0x3)]('\\x0a');\nfunction a0_0x444a() {\n    var _0xdacc2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        '0\\x200',\n        'reduce',\n        'indexOf',\n        'log',\n        'map'\n    ];\n    a0_0x444a = function () {\n        return _0xdacc2;\n    };\n    return a0_0x444a();\n}\nvar abc = [];\nfunction a0_0x5dda(sFWXsB, key) {\n    var stringArray = a0_0x444a();\n    a0_0x5dda = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5dda(sFWXsB, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x110199(0x4)]; i++) {\n    if (abc[a0_0x110199(0x4)] == 0x0 && Arr[i] == a0_0x110199(0x5))\n        break;\n    if (abc[a0_0x110199(0x4)] == 0x4) {\n        var max = abc[a0_0x110199(0x6)](function (a, b) {\n            return Math['max'](a, b);\n        });\n        var ABC = 'ABCD'[a0_0x110199(0x3)]('');\n        var str = ABC[abc[a0_0x110199(0x7)](max)];\n        console[a0_0x110199(0x8)](str + '\\x20' + max);\n        abc = [];\n    } else {\n        var arr = Arr[i][a0_0x110199(0x3)]('\\x20')[a0_0x110199(0x9)](Number);\n        abc['push'](arr[0x0] + arr[0x1]);\n    }\n}", "test_cases": [["1593 4311\n4321 2155\n1256 6421\n5310 1455\n2152 5421\n1549 3386\n4528 3719\n1234 4321\n3330 3109\n2739 2199\n0 0", "C 7677\nB 8247"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar abc=[];\nfor(var i=0;i<Arr.length;i++){\nif(abc.length==0 && Arr[i]==\"0 0\")break;\nif(abc.length==4){\n   var max=abc.reduce(function(a,b){return Math.max(a,b);});\n   var ABC=\"ABCD\".split(\"\");\n   var str=ABC[abc.indexOf(max)];\n   console.log(str+\" \"+max);\n   abc=[];\n}else{\n   var arr=Arr[i].split(\" \").map(Number);\n   abc.push(arr[0]+arr[1]);\n}\n}", "language": "JavaScript"}
{"filename": "p00197_1", "type": "JavaScript", "obfuscated": "function a0_0x367c() {\n    var _0x18179f = [\n        'GeiGS',\n        'length',\n        'JFERv',\n        'log',\n        'stdin',\n        'resume',\n        'utf8',\n        'end',\n        'OPtFH'\n    ];\n    a0_0x367c = function () {\n        return _0x18179f;\n    };\n    return a0_0x367c();\n}\nfunction a0_0x6322(dgxGgA, key) {\n    var stringArray = a0_0x367c();\n    a0_0x6322 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6322(dgxGgA, key);\n}\n(function () {\n    var _0x1874a0 = a0_0x6322;\n    var input = '', cnt = 0x0;\n    function main() {\n        var _0x1fceea = a0_0x6322;\n        if (_0x1fceea(0x0) !== _0x1fceea(0x0)) {\n            input = input['split']('\\x0a');\n            main();\n        } else {\n            var inputLen, nums, x, y, temp, ans;\n            inputLen = input[_0x1fceea(0x1)];\n            for (i = 0x0; i < inputLen; i += 0x1) {\n                nums = input[i]['split']('\\x20');\n                x = parseInt(nums[0x0], 0xa);\n                y = parseInt(nums[0x1], 0xa);\n                if (x === 0x0 && y === 0x0) {\n                    break;\n                } else if (x < y) {\n                    temp = x;\n                    x = y;\n                    y = temp;\n                }\n                ans = gcd(x, y);\n                showResult(ans, cnt);\n                cnt = 0x0;\n            }\n        }\n    }\n    function gcd(x, y) {\n        var _0x22ba38 = a0_0x6322;\n        if (_0x22ba38(0x2) === 'eVuBy') {\n            console[_0x22ba38(0x3)](result + '\\x20' + cnt);\n        } else {\n            cnt += 0x1;\n            return x % y === 0x0 ? y : gcd(y, x % y);\n        }\n    }\n    function showResult(result, cnt) {\n        console['log'](result + '\\x20' + cnt);\n    }\n    process[_0x1874a0(0x4)][_0x1874a0(0x5)]();\n    process[_0x1874a0(0x4)]['setEncoding'](_0x1874a0(0x6));\n    process[_0x1874a0(0x4)]['on']('data', function (chunk) {\n        input += chunk;\n    });\n    process[_0x1874a0(0x4)]['on'](_0x1874a0(0x7), function () {\n        var _0x2bfdbe = a0_0x6322;\n        if (_0x2bfdbe(0x8) !== _0x2bfdbe(0x8)) {\n            input += chunk;\n        } else {\n            input = input['split']('\\x0a');\n            main();\n        }\n    });\n}());", "test_cases": [["1071 1029\n5 5\n0 0", "21 3\n5 1"]], "original": "(function () {\n  var input = '',\n      cnt = 0;\n\n  function main () {\n    var inputLen, nums, x, y, temp, ans;\n\n    inputLen = input.length;\n    \n    for (i = 0; i < inputLen; i += 1) {\n      nums = input[i].split(' ');\n      x = parseInt(nums[0], 10);\n      y = parseInt(nums[1], 10);\n\n      if (x === 0 && y === 0) {\n        break;\n      } else if (x < y) {\n        temp = x;\n        x = y;\n        y = temp;\n      }\n\n      ans = gcd(x, y);\n\n      showResult(ans, cnt);\n      cnt = 0;\n    }\n  }\n\n  function gcd (x, y) {\n    cnt += 1;\n    return x % y === 0 ? y : gcd(y, x % y);\n  }\n\n  function showResult(result, cnt) {\n    console.log(result + ' ' + cnt);\n  }\n\n  process.stdin.resume();\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', function (chunk) {\n    input += chunk;\n  });\n\n  process.stdin.on('end', function () {\n    input = input.split('\\n');\n    main();\n  });\n}());", "language": "JavaScript"}
{"filename": "p00216_1", "type": "JavaScript", "obfuscated": "var a0_0x3938b6 = a0_0x1b16;\nfunction a0_0x1b16(CIYsmW, key) {\n    var stringArray = a0_0x4e83();\n    a0_0x1b16 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b16(CIYsmW, key);\n}\nvar input = require('fs')[a0_0x3938b6(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x3938b6(0x1)]()[a0_0x3938b6(0x2)]('\\x0a')[a0_0x3938b6(0x3)](Number);\nfor (var i = 0x0; i < Arr[a0_0x3938b6(0x4)]; i++) {\n    if (Arr[i] == -0x1)\n        break;\n    var a = Arr[i];\n    var sum = 0x47e;\n    if (a > 0xa && a <= 0x14)\n        sum = 0x47e + 0x7d * (a - 0xa);\n    else if (a > 0x14 && a <= 0x1e)\n        sum = 0x47e + 0x7d * 0xa + 0x8c * (a - 0x14);\n    else if (a > 0x1e)\n        sum = 0x47e + 0x7d * 0xa + 0x8c * 0xa + 0xa0 * (a - 0x1e);\n    console[a0_0x3938b6(0x5)](0x10b8 - sum);\n}\nfunction a0_0x4e83() {\n    var _0x382e28 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x4e83 = function () {\n        return _0x382e28;\n    };\n    return a0_0x4e83();\n}", "test_cases": [["29\n40\n0\n-1", "620\n-1120\n3130"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==-1)break;\n   var a=Arr[i];\n   var sum=1150;\n   if(a>10 && a<=20)sum=1150+125*(a-10);\n   else if(a>20 && a<=30)sum=1150+125*10+140*(a-20);\n   else if(a>30)sum=1150+125*10+140*10+160*(a-30);\n   console.log(4280-sum);\n}", "language": "JavaScript"}
{"filename": "p00218_1", "type": "JavaScript", "obfuscated": "var a0_0x5f45e4 = a0_0x1436;\nfunction a0_0xeb42() {\n    var _0x119468 = [\n        'stdin',\n        'resume',\n        'utf8',\n        'data',\n        'end',\n        'split',\n        'atrIL',\n        'MhTXw',\n        'map',\n        'XmDby',\n        'log'\n    ];\n    a0_0xeb42 = function () {\n        return _0x119468;\n    };\n    return a0_0xeb42();\n}\nprocess[a0_0x5f45e4(0x0)][a0_0x5f45e4(0x1)]();\nprocess[a0_0x5f45e4(0x0)]['setEncoding'](a0_0x5f45e4(0x2));\nvar input = '';\nfunction a0_0x1436(OIiaIo, key) {\n    var stringArray = a0_0xeb42();\n    a0_0x1436 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1436(OIiaIo, key);\n}\nprocess[a0_0x5f45e4(0x0)]['on'](a0_0x5f45e4(0x3), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x5f45e4(0x0)]['on'](a0_0x5f45e4(0x4), function () {\n    var _0x169d49 = a0_0x1436;\n    var lines = input[_0x169d49(0x5)]('\\x0a');\n    var l = 0x0;\n    while (!![]) {\n        if (_0x169d49(0x6) !== _0x169d49(0x7)) {\n            var n = Number(lines[l++]);\n            if (n === 0x0) {\n                break;\n            }\n            for (var i = 0x0; i < n; i++) {\n                var values = lines[l++][_0x169d49(0x5)]('\\x20')[_0x169d49(0x8)](Number);\n                var pm = values[0x0];\n                var pe = values[0x1];\n                var pj = values[0x2];\n                var ans = 'C';\n                if (pm === 0x64 || pe === 0x64 || pj === 0x64) {\n                    ans = 'A';\n                } else if ((pm + pe) / 0x2 >= 0x5a) {\n                    ans = 'A';\n                } else {\n                    if ('kFria' !== 'kFria') {\n                        var average = (pm + pe + pj) / 0x3;\n                        if (average >= 0x50) {\n                            ans = 'A';\n                        } else if (average >= 0x46) {\n                            ans = 'B';\n                        } else if (average >= 0x32 && (pm >= 0x50 || pe >= 0x50)) {\n                            ans = 'B';\n                        }\n                    } else {\n                        var average = (pm + pe + pj) / 0x3;\n                        if (average >= 0x50) {\n                            ans = 'A';\n                        } else if (average >= 0x46) {\n                            ans = 'B';\n                        } else if (average >= 0x32 && (pm >= 0x50 || pe >= 0x50)) {\n                            if (_0x169d49(0x9) !== 'MDIJb') {\n                                ans = 'B';\n                            } else {\n                                ans = 'A';\n                            }\n                        }\n                    }\n                }\n                console[_0x169d49(0xa)](ans);\n            }\n        } else {\n            ans = 'A';\n        }\n    }\n});", "test_cases": [["4\n100 70 20\n98 86 55\n80 34 36\n65 79 65\n2\n99 81 20\n66 72 90\n0", "A\nA\nB\nC\nA\nB"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar input = '';\nprocess.stdin.on('data', function (chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function () {\n  var lines = input.split('\\n');\n  var l = 0;\n  while (true) {\n    var n = Number(lines[l++]);\n    if (n === 0) {\n      break;\n    }\n    for (var i = 0; i < n; i++) {\n      var values = lines[l++].split(' ').map(Number);\n      var pm = values[0];\n      var pe = values[1];\n      var pj = values[2];\n      var ans = 'C';\n      if (pm === 100 || pe === 100 || pj === 100) {\n        ans = 'A';\n      } else if ((pm + pe) / 2 >= 90) {\n        ans = 'A';\n      } else {\n        var average = (pm + pe + pj) / 3;\n        if (average >= 80) {\n          ans = 'A';\n        } else if (average >= 70) {\n          ans = 'B';\n        } else if (average >= 50 && (pm >= 80 || pe >= 80)) {\n          ans = 'B';\n        }\n      }\n      console.log(ans);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p00219_1", "type": "JavaScript", "obfuscated": "function a0_0x35d2() {\n    var _0x485e15 = [\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end',\n        'split',\n        'length'\n    ];\n    a0_0x35d2 = function () {\n        return _0x485e15;\n    };\n    return a0_0x35d2();\n}\nvar a0_0x205458 = a0_0x513f;\nprocess[a0_0x205458(0x0)]['resume']();\nprocess[a0_0x205458(0x0)][a0_0x205458(0x1)](a0_0x205458(0x2));\nvar input = '';\nprocess[a0_0x205458(0x0)]['on'](a0_0x205458(0x3), function (chunk) {\n    input += chunk;\n});\nfunction a0_0x513f(JFByXN, key) {\n    var stringArray = a0_0x35d2();\n    a0_0x513f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x513f(JFByXN, key);\n}\nprocess[a0_0x205458(0x0)]['on'](a0_0x205458(0x4), function () {\n    var _0x125e1e = a0_0x513f;\n    var lines = input[_0x125e1e(0x5)]('\\x0a');\n    var l = 0x0;\n    while (!![]) {\n        var n = Number(lines[l++]);\n        if (n === 0x0) {\n            break;\n        }\n        var sales = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n        for (var i = 0x0; i < n; i++) {\n            sales[Number(lines[l++])]++;\n        }\n        for (var i = 0x0; i < sales[_0x125e1e(0x6)]; i++) {\n            var bar = sales[i] === 0x0 ? '-' : '';\n            for (var j = 0x0; j < sales[i]; j++) {\n                bar += '*';\n            }\n            console['log'](bar);\n        }\n    }\n});", "test_cases": [["15\n2\n6\n7\n0\n1\n9\n8\n7\n3\n8\n9\n4\n8\n2\n2\n3\n9\n1\n5\n0", "*\n*\n***\n*\n*\n-\n*\n**\n***\n**\n-\n*\n-\n-\n-\n*\n-\n-\n-\n*"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar input = '';\nprocess.stdin.on('data', function (chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function () {\n  var lines = input.split('\\n');\n  var l = 0;\n  while (true) {\n    var n = Number(lines[l++]);\n    if (n === 0) {\n      break;\n    }\n    var sales = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (var i = 0; i < n; i++) {\n      sales[Number(lines[l++])]++;\n    }\n    for (var i = 0; i < sales.length; i++) {\n      var bar = (sales[i] === 0) ? '-' : '';\n      for (var j = 0; j < sales[i]; j++) {\n        bar += '*';\n      }\n      console.log(bar);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p00222_1", "type": "JavaScript", "obfuscated": "var a0_0x52a77e = a0_0x3c62;\nfunction prime(max) {\n    var _0x5e06cd = a0_0x3c62;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x5e06cd(0x0)](Math[_0x5e06cd(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[_0x5e06cd(0x2)](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x98967f);\nvar input = require('fs')[a0_0x52a77e(0x3)](a0_0x52a77e(0x4), a0_0x52a77e(0x5));\nfunction a0_0x4971() {\n    var _0x3dd3c9 = [\n        'floor',\n        'sqrt',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'length'\n    ];\n    a0_0x4971 = function () {\n        return _0x3dd3c9;\n    };\n    return a0_0x4971();\n}\nfunction a0_0x3c62(TdAdgO, key) {\n    var stringArray = a0_0x4971();\n    a0_0x3c62 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c62(TdAdgO, key);\n}\nvar Arr = input[a0_0x52a77e(0x6)]()['split']('\\x0a')[a0_0x52a77e(0x7)](Number);\nfor (var i = 0x0; i < Arr[a0_0x52a77e(0x8)]; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    var quad = '';\n    for (var j = 0x5; j < p[a0_0x52a77e(0x8)]; j++) {\n        if (p[j] > a)\n            break;\n        var x = p[j] - 0x8;\n        if (x == p[j - 0x3] && x + 0x2 == p[j - 0x2] && x + 0x6 == p[j - 0x1])\n            quad = p[j];\n    }\n    console['log'](quad);\n}", "test_cases": [["13\n14\n15\n16\n17\n18\n19\n20\n10000\n0", "13\n13\n13\n13\n13\n13\n19\n19\n9439"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(9999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   var quad=\"\";\n   for(var j=5;j<p.length;j++){\n   if(p[j]>a)break;\n   var x=p[j]-8;\n   if(x==p[j-3] && x+2==p[j-2] && x+6==p[j-1])quad=p[j];\n   }\n   console.log(quad);\n}", "language": "JavaScript"}
{"filename": "p00238_1", "type": "JavaScript", "obfuscated": "var a0_0x5a1212 = a0_0x1891;\nvar input = require('fs')[a0_0x5a1212(0x0)](a0_0x5a1212(0x1), a0_0x5a1212(0x2));\nfunction a0_0x1891(bKCUxz, key) {\n    var stringArray = a0_0x458d();\n    a0_0x1891 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1891(bKCUxz, key);\n}\nvar Arr = input[a0_0x5a1212(0x3)]()[a0_0x5a1212(0x4)]('\\x0a');\nfunction a0_0x458d() {\n    var _0x431449 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift'\n    ];\n    a0_0x458d = function () {\n        return _0x431449;\n    };\n    return a0_0x458d();\n}\nwhile (!![]) {\n    var t = Arr[a0_0x5a1212(0x5)]() - 0x0;\n    if (t == 0x0)\n        break;\n    var n = Arr['shift']() - 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x5a1212(0x5)]()[a0_0x5a1212(0x4)]('\\x20')['map'](Number);\n        sum += arr[0x1] - arr[0x0];\n    }\n    console['log'](t <= sum ? 'OK' : t - sum);\n}", "test_cases": [["10\n3\n6 11\n12 15\n18 22\n14\n2\n6 11\n13 20\n0", "OK\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var t=Arr.shift()-0;\n   if(t==0)break;\n   var n=Arr.shift()-0;\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      sum+=arr[1]-arr[0];\n   }\n   console.log((t<=sum)?\"OK\":t-sum);\n}", "language": "JavaScript"}
{"filename": "p00239_1", "type": "JavaScript", "obfuscated": "var a0_0x449116 = a0_0x49b5;\nfunction a0_0x49b5(HteOcP, key) {\n    var stringArray = a0_0x2348();\n    a0_0x49b5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x49b5(HteOcP, key);\n}\nvar input = require('fs')[a0_0x449116(0x0)](a0_0x449116(0x1), a0_0x449116(0x2));\nvar Arr = input[a0_0x449116(0x3)]()[a0_0x449116(0x4)]('\\x0a');\nfunction a0_0x2348() {\n    var _0x5ccbe3 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'map',\n        'forEach',\n        'log',\n        'length',\n        'join'\n    ];\n    a0_0x2348 = function () {\n        return _0x5ccbe3;\n    };\n    return a0_0x2348();\n}\nwhile (!![]) {\n    var N = Arr[a0_0x449116(0x5)]() - 0x0;\n    if (N == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < N; i++) {\n        var ipqr = Arr[a0_0x449116(0x5)]()[a0_0x449116(0x4)]('\\x20')['map'](Number);\n        arr[a0_0x449116(0x6)](ipqr);\n    }\n    var PQRC = Arr[a0_0x449116(0x5)]()[a0_0x449116(0x4)]('\\x20')[a0_0x449116(0x7)](Number);\n    var result = [];\n    arr[a0_0x449116(0x8)](function (v) {\n        var _0x432261 = a0_0x49b5;\n        var bad = 0x0;\n        if (PQRC[0x0] < v[0x1])\n            bad++;\n        if (PQRC[0x1] < v[0x2])\n            bad++;\n        if (PQRC[0x2] < v[0x3])\n            bad++;\n        if (PQRC[0x3] < 0x4 * (v[0x1] + v[0x3]) + 0x9 * v[0x2])\n            bad++;\n        if (bad == 0x0)\n            result[_0x432261(0x6)](v[0x0]);\n    });\n    console[a0_0x449116(0x9)](result[a0_0x449116(0xa)] == 0x0 ? 'NA' : result[a0_0x449116(0xb)]('\\x0a'));\n}", "test_cases": [["4\n1 7 14 47\n2 5 35 55\n3 6 3 59\n4 6 5 15\n10 15 50 400\n2\n1 8 10 78\n2 4 18 33\n10 10 50 300\n0", "1\n4\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var arr=[];\n   for(var i=0;i<N;i++){\n      var ipqr=(Arr.shift()).split(\" \").map(Number);\n      arr.push(ipqr);\n   }\n   var PQRC=(Arr.shift()).split(\" \").map(Number);\n   var result=[];\n   arr.forEach(function(v){\n      var bad=0;\n      if(PQRC[0]<v[1])bad++;\n      if(PQRC[1]<v[2])bad++;\n      if(PQRC[2]<v[3])bad++;\n      if(PQRC[3]<4*(v[1]+v[3])+(9*v[2]))bad++;\n      if(bad==0)result.push(v[0]);\n   });\n   console.log((result.length==0)?\"NA\":result.join(\"\\n\"));\n}", "language": "JavaScript"}
{"filename": "p00242_1", "type": "JavaScript", "obfuscated": "var a0_0x2d9391 = a0_0x13d8;\nfunction a0_0x13d8(KJyWQM, key) {\n    var stringArray = a0_0x342d();\n    a0_0x13d8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x13d8(KJyWQM, key);\n}\nvar input = require('fs')[a0_0x2d9391(0x0)](a0_0x2d9391(0x1), a0_0x2d9391(0x2));\nvar Arr = input[a0_0x2d9391(0x3)](/\\n$/, '')[a0_0x2d9391(0x4)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x2d9391(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var str = '';\n    for (var i = 0x0; i < n; i++)\n        str += Arr[a0_0x2d9391(0x5)]() + '\\x20';\n    var arr = str[a0_0x2d9391(0x6)]()[a0_0x2d9391(0x4)]('\\x20');\n    var s = Arr['shift']();\n    var f = arr[a0_0x2d9391(0x7)](function (v) {\n        return v[0x0] == s;\n    });\n    f[a0_0x2d9391(0x8)]();\n    var F = [];\n    var memo = '';\n    for (var i = 0x0; i < f['length']; i++) {\n        if (memo == f[i]) {\n            F[F['length'] - 0x1] = [\n                f[i],\n                F[F['length'] - 0x1][0x1] + 0x1\n            ];\n        } else {\n            F['push']([\n                f[i],\n                0x1\n            ]);\n            memo = f[i];\n        }\n    }\n    F['sort'](function (a, b) {\n        if (a[0x1] == b[0x1])\n            return a[0x0] > b[0x0];\n        else\n            return b[0x1] - a[0x1];\n    });\n    var ans = [];\n    for (var i = 0x0; i < 0x5; i++) {\n        if (F[a0_0x2d9391(0x9)] > i)\n            ans[a0_0x2d9391(0xa)](F[i][0x0]);\n    }\n    console[a0_0x2d9391(0xb)](ans[a0_0x2d9391(0x9)] > 0x0 ? ans[a0_0x2d9391(0xc)]('\\x20') : 'NA');\n}\nfunction a0_0x342d() {\n    var _0x59b99e = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift',\n        'trim',\n        'filter',\n        'sort',\n        'length',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x342d = function () {\n        return _0x59b99e;\n    };\n    return a0_0x342d();\n}", "test_cases": [["1\nben likes bananas the best among many fruits because bananas are sweet and cheap\nb\n1\nwinners get to visit aizu and the university of aizu and make many friends as well\na\n3\nask alex about\nthe answer for the\nassignment on android apps\na\n2\nprogramming is both\na sport and an intellectual puzzle\nc\n0", "bananas because ben best\naizu and as\nabout alex android answer apps\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var str=\"\";\n   for(var i=0;i<n;i++)str+=Arr.shift()+\" \";\n   var arr=(str.trim()).split(\" \");\n   var s=Arr.shift();\n   var f=arr.filter(function(v){return v[0]==s;});\n   f.sort();\n   var F=[];\n   var memo=\"\";\n   for(var i=0;i<f.length;i++){\n      if(memo==f[i]){\n         F[F.length-1]=[f[i],F[F.length-1][1]+1];\n      }\n      else {\n         F.push([f[i],1]);\n         memo=f[i];\n      }\n   }\n   F.sort(function(a,b){\n      if(a[1]==b[1])return a[0]>b[0];\n      else return b[1]-a[1];\n   });\n   var ans=[];\n   for(var i=0;i<5;i++){\n      if(F.length>i)ans.push(F[i][0]);\n   }\n   console.log((ans.length>0)?ans.join(\" \"):\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00252_1", "type": "JavaScript", "obfuscated": "var a0_0x2e572c = a0_0xbeac;\nfunction Main(input) {\n    var _0x5d6403 = a0_0xbeac;\n    a = input[_0x5d6403(0x0)]('\\x0a')[0x0][_0x5d6403(0x0)]('\\x20')[_0x5d6403(0x1)]('');\n    console[_0x5d6403(0x2)](a == '110' || a == '001' ? _0x5d6403(0x3) : _0x5d6403(0x4));\n}\nfunction a0_0xbeac(VjUKgg, key) {\n    var stringArray = a0_0x3066();\n    a0_0xbeac = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xbeac(VjUKgg, key);\n}\nMain(require('fs')[a0_0x2e572c(0x5)]('/dev/stdin', 'utf8'));\nfunction a0_0x3066() {\n    var _0xee6c47 = [\n        'split',\n        'join',\n        'log',\n        'Open',\n        'Close',\n        'readFileSync'\n    ];\n    a0_0x3066 = function () {\n        return _0xee6c47;\n    };\n    return a0_0x3066();\n}", "test_cases": [["0 0 1", "Open"], ["0 1 0", "Close"]], "original": "function Main(input){\n  a=input.split('\\n')[0].split(' ').join('');\n  console.log(((a=='110'||a=='001')?'Open':'Close'));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00261_1", "type": "JavaScript", "obfuscated": "var a0_0x21d9f3 = a0_0x2e06;\nvar input = require('fs')[a0_0x21d9f3(0x0)](a0_0x21d9f3(0x1), 'utf8');\nfunction a0_0x2e06(zxHQDr, key) {\n    var stringArray = a0_0xfb58();\n    a0_0x2e06 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e06(zxHQDr, key);\n}\nfunction a0_0xfb58() {\n    var _0x12b898 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'log',\n        'Yes'\n    ];\n    a0_0xfb58 = function () {\n        return _0x12b898;\n    };\n    return a0_0xfb58();\n}\nvar Arr = input[a0_0x21d9f3(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == '#')\n        break;\n    var p = 'A';\n    for (var i = 0x0; i < str['length']; i++) {\n        var s = str[i] - 0x0;\n        if (p == 'A' && s === 0x0)\n            p = 'X';\n        else if (p == 'A' && s === 0x1)\n            p = 'Y';\n        else if (p == 'B' && s === 0x0)\n            p = 'Y';\n        else if (p == 'B' && s === 0x1)\n            p = 'X';\n        else if (p == 'W' && s === 0x0)\n            p = 'B';\n        else if (p == 'W' && s === 0x1)\n            p = 'Y';\n        else if (p == 'X' && s === 0x0)\n            p = '';\n        else if (p == 'X' && s === 0x1)\n            p = 'Z';\n        else if (p == 'Y' && s === 0x0)\n            p = 'X';\n        else if (p == 'Y' && s === 0x1)\n            p = '';\n        else if (p == 'Z' && s === 0x0)\n            p = 'W';\n        else if (p == 'Z' && s === 0x1)\n            p = 'B';\n    }\n    console[a0_0x21d9f3(0x3)](p == 'B' ? a0_0x21d9f3(0x4) : 'No');\n}", "test_cases": [["0100\n0101\n10100\n01000\n0101011\n0011\n011111\n#", "Yes\nNo\nYes\nNo\nYes\nNo\nYes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"#\")break;\n   var p=\"A\";\n   for(var i=0;i<str.length;i++){\n      var s=str[i]-0;\n      if(p==\"A\" && s===0)p=\"X\";\n      else if(p==\"A\" && s===1)p=\"Y\";\n      else if(p==\"B\" && s===0)p=\"Y\";\n      else if(p==\"B\" && s===1)p=\"X\";\n      else if(p==\"W\" && s===0)p=\"B\";\n      else if(p==\"W\" && s===1)p=\"Y\";\n      else if(p==\"X\" && s===0)p=\"\";\n      else if(p==\"X\" && s===1)p=\"Z\";\n      else if(p==\"Y\" && s===0)p=\"X\";\n      else if(p==\"Y\" && s===1)p=\"\";\n      else if(p==\"Z\" && s===0)p=\"W\";\n      else if(p==\"Z\" && s===1)p=\"B\";\n   }\n   console.log((p==\"B\")?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p00262_1", "type": "JavaScript", "obfuscated": "var a0_0x372a31 = a0_0x15fb;\nfunction a0_0x361a() {\n    var _0x440503 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'every',\n        'length',\n        'push'\n    ];\n    a0_0x361a = function () {\n        return _0x440503;\n    };\n    return a0_0x361a();\n}\nvar input = require('fs')[a0_0x372a31(0x0)](a0_0x372a31(0x1), a0_0x372a31(0x2));\nvar Arr = input[a0_0x372a31(0x3)]()['split']('\\x0a');\nfunction a0_0x15fb(ictavf, key) {\n    var stringArray = a0_0x361a();\n    a0_0x15fb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15fb(ictavf, key);\n}\nwhile (!![]) {\n    var n = Arr[a0_0x372a31(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr[a0_0x372a31(0x4)]()[a0_0x372a31(0x5)]('\\x20')[a0_0x372a31(0x6)](Number);\n    var cnt = 0x0;\n    while (!![]) {\n        var flag = arr[a0_0x372a31(0x7)](function (v, i) {\n            return i + 0x1 == v;\n        });\n        if (flag)\n            break;\n        var L = arr[a0_0x372a31(0x8)];\n        arr = arr[a0_0x372a31(0x6)](function (v) {\n            return v - 0x1;\n        });\n        arr = arr['filter'](function (v) {\n            return v != 0x0;\n        });\n        arr[a0_0x372a31(0x9)](L);\n        cnt++;\n        if (cnt == 0x2710) {\n            cnt = -0x1;\n            break;\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["6\n1 4 1 3 2 4\n5\n1 2 3 4 5\n10\n1 1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1\n12\n1 4 1 3 2 4 3 3 2 1 2 2\n1\n5050\n3\n10000 10000 100\n0", "24\n0\n10\n-1\n48\n5049\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var cnt=0;\n   while(true){\n      var flag=arr.every(function(v,i){return (i+1==v);});\n      if(flag)break;\n      var L=arr.length;\n      arr=arr.map(function(v){return v-1;});\n      arr=arr.filter(function(v){return (v!=0);});\n      arr.push(L);\n      cnt++;\n      if(cnt==10000){cnt=-1;break;}\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00276_1", "type": "JavaScript", "obfuscated": "Main(function (input) {\n    var _0x4bc9f2 = a0_0x2b4e;\n    input = input['trim']()[_0x4bc9f2(0x0)]('\\x0a');\n    input[_0x4bc9f2(0x1)]();\n    input['forEach'](function (line) {\n        var _0x2f021d = a0_0x2b4e;\n        if (_0x2f021d(0x2) !== 'SWXiK') {\n            var tmp = line['split']('\\x20');\n            var c = +tmp[0x0];\n            var a = +tmp[0x1];\n            var n = +tmp[0x2];\n            var ans = 0x0;\n            var min;\n            min = Math['min'](c, a, n);\n            c -= min;\n            a -= min;\n            n -= min;\n            ans += min;\n            min = Math[_0x2f021d(0x3)](Math[_0x2f021d(0x4)](c / 0x2), a);\n            c -= min * 0x2;\n            a -= min;\n            ans += min;\n            ans += Math[_0x2f021d(0x4)](c / 0x3);\n            console[_0x2f021d(0x5)](ans);\n        } else {\n            input += chunk;\n        }\n    });\n});\nfunction Main(main) {\n    var _0x46eaf9 = a0_0x2b4e;\n    var input = '';\n    process['stdin'][_0x46eaf9(0x6)]();\n    process['stdin'][_0x46eaf9(0x7)](_0x46eaf9(0x8));\n    process['stdin']['on'](_0x46eaf9(0x9), function (chunk) {\n        input += chunk;\n    });\n    process[_0x46eaf9(0xa)]['on'](_0x46eaf9(0xb), function () {\n        var _0x2b0189 = a0_0x2b4e;\n        if (_0x2b0189(0xc) === _0x2b0189(0xc)) {\n            main(input);\n        } else {\n            input = input[_0x2b0189(0xd)]()[_0x2b0189(0x0)]('\\x0a');\n            input[_0x2b0189(0x1)]();\n            input[_0x2b0189(0xe)](function (line) {\n                var _0x891956 = a0_0x2b4e;\n                var tmp = line[_0x891956(0x0)]('\\x20');\n                var c = +tmp[0x0];\n                var a = +tmp[0x1];\n                var n = +tmp[0x2];\n                var ans = 0x0;\n                var min;\n                min = Math['min'](c, a, n);\n                c -= min;\n                a -= min;\n                n -= min;\n                ans += min;\n                min = Math[_0x891956(0x3)](Math[_0x891956(0x4)](c / 0x2), a);\n                c -= min * 0x2;\n                a -= min;\n                ans += min;\n                ans += Math[_0x891956(0x4)](c / 0x3);\n                console[_0x891956(0x5)](ans);\n            });\n        }\n    });\n}\nfunction a0_0x2b4e(hbxVjm, key) {\n    var stringArray = a0_0x322e();\n    a0_0x2b4e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b4e(hbxVjm, key);\n}\n;\nfunction a0_0x322e() {\n    var _0x348627 = [\n        'split',\n        'shift',\n        'CQMdd',\n        'min',\n        'floor',\n        'log',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'data',\n        'stdin',\n        'end',\n        'gxGYp',\n        'trim',\n        'forEach'\n    ];\n    a0_0x322e = function () {\n        return _0x348627;\n    };\n    return a0_0x322e();\n}", "test_cases": [["4\n3 0 0\n1 1 1\n9 4 1\n0 1 2", "1\n1\n4\n0"]], "original": "Main(function(input) {\n\tinput = input.trim().split('\\n');\n\tinput.shift();\n\tinput.forEach(function(line) {\n\t\tvar tmp = line.split(' ');\n\t\tvar c = +tmp[0];\n\t\tvar a = +tmp[1];\n\t\tvar n = +tmp[2];\n\t\tvar ans = 0;\n\t\tvar min;\n\n\t\t/**\n\t\t * CAN pattern\n\t\t */\n\t\tmin = Math.min(c, a, n);\n\t\tc -= min;\n\t\ta -= min;\n\t\tn -= min;\n\t\tans += min;\n\n\t\t/**\n\t\t * CCA pattern\n\t\t */\n\t\tmin = Math.min(Math.floor(c / 2), a);\n\t\tc -= min * 2;\n\t\ta -= min;\n\t\tans += min;\n\n\t\t/**\n\t\t * CCC pattern\n\t\t */\n\t\tans += Math.floor(c / 3);\n\n\t\tconsole.log(ans);\n\t});\n});\n\nfunction Main(main) {\n\tvar input = '';\n\n\tprocess.stdin.resume();\n\tprocess.stdin.setEncoding('utf8');\n\tprocess.stdin.on('data', function(chunk) {\n\t\tinput += chunk;\n\t});\n\tprocess.stdin.on('end', function() {\n\t\tmain(input);\n\t});\n};", "language": "JavaScript"}
{"filename": "p00310_1", "type": "JavaScript", "obfuscated": "function a0_0x1b29(shmmPl, key) {\n    var stringArray = a0_0x3668();\n    a0_0x1b29 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b29(shmmPl, key);\n}\nvar a0_0x38f578 = a0_0x1b29;\nvar input = require('fs')[a0_0x38f578(0x0)]('/dev/stdin', a0_0x38f578(0x1));\nfunction a0_0x3668() {\n    var _0x3eb161 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x3668 = function () {\n        return _0x3eb161;\n    };\n    return a0_0x3668();\n}\nvar [p, m, c] = input[a0_0x38f578(0x2)]()[a0_0x38f578(0x3)]('\\x20')[a0_0x38f578(0x4)](Number);\nconsole[a0_0x38f578(0x5)](p + m + c);", "test_cases": [["10 10 20", "40"], ["100 0 0", "100"], ["1000 1000 1000", "3000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [p,m,c]=input.trim().split(\" \").map(Number);\nconsole.log(p+m+c);\n", "language": "JavaScript"}
{"filename": "p00352_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x4581(ZKnSEv, key) {\n    const stringArray = a0_0x17ae();\n    a0_0x4581 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x4581(ZKnSEv, key);\n}\nconst a0_0xe938b9 = a0_0x4581;\nfunction Main(input) {\n    const _0x2bfb19 = a0_0x4581;\n    const ab = input[_0x2bfb19(0x0)]('\\x20');\n    console['log']((parseFloat(ab[0x0]) + parseFloat(ab[0x1])) / 0x2);\n}\nfunction a0_0x17ae() {\n    const _0xd35b0a = [\n        'split',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x17ae = function () {\n        return _0xd35b0a;\n    };\n    return a0_0x17ae();\n}\nMain(require('fs')[a0_0xe938b9(0x1)]('/dev/stdin', a0_0xe938b9(0x2)));", "test_cases": [["1000 3000", "2000"], ["5000 5000", "5000"], ["1000 2000", "1500"]], "original": "\"use strict\";\n\nfunction Main(input) {\n  const ab = input.split(\" \");\n  console.log((parseFloat(ab[0])+parseFloat(ab[1]))/2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00355_1", "type": "JavaScript", "obfuscated": "var a0_0x289d5f = a0_0x3e23;\nvar input = require('fs')[a0_0x289d5f(0x0)]('/dev/stdin', a0_0x289d5f(0x1));\nvar arr = input[a0_0x289d5f(0x2)]()[a0_0x289d5f(0x3)]('\\x0a');\nfunction a0_0x3e23(TWmJQn, key) {\n    var stringArray = a0_0x840b();\n    a0_0x3e23 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e23(TWmJQn, key);\n}\nfunction a0_0x840b() {\n    var _0x2f04dd = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'log'\n    ];\n    a0_0x840b = function () {\n        return _0x2f04dd;\n    };\n    return a0_0x840b();\n}\nvar [a, b] = arr['shift']()[a0_0x289d5f(0x3)]('\\x20')[a0_0x289d5f(0x4)](Number);\nvar n = arr[a0_0x289d5f(0x5)]() - 0x0;\nvar flag = 0x0;\nwhile (n--) {\n    var [s, f] = arr['shift']()[a0_0x289d5f(0x3)]('\\x20')[a0_0x289d5f(0x4)](Number);\n    if (f <= a || b <= s)\n        continue;\n    else\n        flag = 0x1;\n}\nconsole[a0_0x289d5f(0x6)](flag);", "test_cases": [["5 7\n3\n1 4\n4 5\n7 10", "0"], ["3 7\n3\n7 10\n1 4\n4 5", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr =input.trim().split(\"\\n\");\nvar [a,b] = arr.shift().split(\" \").map(Number);\nvar n = arr.shift() - 0;\nvar flag = 0;\nwhile(n--){\n   var [s,f] = arr.shift().split(\" \").map(Number);\n   if(f<=a || b<=s)continue;\n   else flag = 1;\n}\nconsole.log(flag);\n", "language": "JavaScript"}
{"filename": "p00356_1", "type": "JavaScript", "obfuscated": "var a0_0x5e8102 = a0_0x248e;\nfunction a0_0x1190() {\n    var _0x2152cb = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x1190 = function () {\n        return _0x2152cb;\n    };\n    return a0_0x1190();\n}\nfunction a0_0x248e(MmDKZW, key) {\n    var stringArray = a0_0x1190();\n    a0_0x248e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x248e(MmDKZW, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x5e8102(0x0), 'utf8');\nvar [x, y] = input[a0_0x5e8102(0x1)]()[a0_0x5e8102(0x2)]('\\x20')[a0_0x5e8102(0x3)](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i <= x; i++) {\n    if (y * i * 0x2 / (x * 0x2) % 0x1 === 0x0)\n        cnt++;\n}\nconsole[a0_0x5e8102(0x4)](x + 0x1 + y + 0x1 - cnt);", "test_cases": [["4 4", "5"], ["4 6", "9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [x,y]=input.trim().split(\" \").map(Number);\nvar cnt = 0;\nfor(var i=0;i<=x;i++){\n   if(y*i*2/(x*2)%1===0)cnt++;\n}\nconsole.log(x+1+y+1-cnt);\n", "language": "JavaScript"}
{"filename": "p00424_1", "type": "JavaScript", "obfuscated": "function a0_0x2f79() {\n    var _0x659c2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'length',\n        'shift',\n        'split',\n        'slice',\n        'log'\n    ];\n    a0_0x2f79 = function () {\n        return _0x659c2;\n    };\n    return a0_0x2f79();\n}\nvar a0_0x2113a9 = a0_0x38cd;\nfunction a0_0x38cd(HhAGwt, key) {\n    var stringArray = a0_0x2f79();\n    a0_0x38cd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x38cd(HhAGwt, key);\n}\nvar input = require('fs')[a0_0x2113a9(0x0)](a0_0x2113a9(0x1), a0_0x2113a9(0x2));\nvar Arr = input[a0_0x2113a9(0x3)]()['split']('\\x0a');\nwhile (Arr[a0_0x2113a9(0x4)] > 0x1) {\n    var AL = Arr[a0_0x2113a9(0x5)]();\n    var hash = {};\n    for (var i = 0x0; i < AL; i++) {\n        var arr = Arr[i][a0_0x2113a9(0x3)]()[a0_0x2113a9(0x6)]('\\x20');\n        hash[arr[0x0]] = arr[0x1];\n    }\n    Arr = Arr[a0_0x2113a9(0x7)](AL, Arr[a0_0x2113a9(0x4)] + 0x1);\n    var AL = Arr['shift']();\n    var str = '';\n    for (var i = 0x0; i < AL; i++) {\n        var k = Arr[i][a0_0x2113a9(0x3)]();\n        str += hash['hasOwnProperty'](k) ? hash[k] : k;\n    }\n    Arr = Arr[a0_0x2113a9(0x7)](AL, Arr[a0_0x2113a9(0x4)] + 0x1);\n    console[a0_0x2113a9(0x8)](str);\n    if (Arr[0x0] == '0')\n        break;\n}", "test_cases": [["3\t\nA a\t\n0 5\t\n5 4\t\n10\t\nA\t\nB\t\nC\t\n0\t\n1\t\n4\t\n5\t\na\t\nb\t\nA\n3\t\nA a\t\n0 5\t\n5 4\t\n10\t\nA\t\nB\t\nC\t\n0\t\n1\t\n4\t\n5\t\na\t\nb\t\nA\n0", "aBC5144aba\naBC5144aba"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(Arr.length>1){\n   var AL=Arr.shift();\n   var hash={};\n   for(var i=0;i<AL;i++){\n      var arr=(Arr[i].trim()).split(\" \");\n      hash[arr[0]]=arr[1];\n   }\n   Arr=Arr.slice(AL,Arr.length+1);\n   var AL=Arr.shift();\n   var str=\"\";\n   for(var i=0;i<AL;i++){\n      var k=Arr[i].trim();\n      str+=(hash.hasOwnProperty(k))?hash[k]:k;\n   }\n   Arr=Arr.slice(AL,Arr.length+1);\n   console.log(str);\n   if(Arr[0]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00425_1", "type": "JavaScript", "obfuscated": "var a0_0x37c88a = a0_0x59a7;\nfunction move(x, arr) {\n    var d1 = arr[0x0];\n    var d2 = arr[0x1];\n    var d3 = arr[0x2];\n    var d4 = arr[0x3];\n    var d5 = arr[0x4];\n    var d6 = arr[0x5];\n    var after = [];\n    if (x == 'N')\n        after = [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    if (x == 'S')\n        after = [\n            d5,\n            d1,\n            d3,\n            d4,\n            d6,\n            d2\n        ];\n    if (x == 'E')\n        after = [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n    if (x == 'W')\n        after = [\n            d3,\n            d2,\n            d6,\n            d1,\n            d5,\n            d4\n        ];\n    if (x == 'R')\n        after = [\n            d1,\n            d3,\n            d5,\n            d2,\n            d4,\n            d6\n        ];\n    if (x == 'L')\n        after = [\n            d1,\n            d4,\n            d2,\n            d5,\n            d3,\n            d6\n        ];\n    return after;\n}\nvar input = require('fs')[a0_0x37c88a(0x0)](a0_0x37c88a(0x1), 'utf8');\nvar Arr = input[a0_0x37c88a(0x2)]()[a0_0x37c88a(0x3)]('\\x0a');\nfunction a0_0x59a7(eCiqfY, key) {\n    var stringArray = a0_0x2afd();\n    a0_0x59a7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59a7(eCiqfY, key);\n}\nvar dice;\nvar sum;\nfunction a0_0x2afd() {\n    var _0x2c1bd6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x2afd = function () {\n        return _0x2c1bd6;\n    };\n    return a0_0x2afd();\n}\nfor (var i = 0x0; i < Arr[a0_0x37c88a(0x4)]; i++) {\n    var v = Arr[i]['charAt'](0x0);\n    if (v['match'](/[NSEWRL]/)) {\n        dice = move(v, dice);\n        sum += dice[0x0];\n    } else {\n        if (i != 0x0)\n            console[a0_0x37c88a(0x5)](sum);\n        dice = [\n            0x1,\n            0x2,\n            0x3,\n            0x4,\n            0x5,\n            0x6\n        ];\n        sum = 0x1;\n    }\n    if (Arr[i] == '0')\n        break;\n}", "test_cases": [["5\nNorth\nNorth\nEast\nSouth\nWest\n8\nWest\nNorth\nLeft\nSouth\nRight\nNorth\nLeft\nEast\n0", "21\n34"]], "original": "function move(x,arr){\nvar d1=arr[0];\nvar d2=arr[1];\nvar d3=arr[2];\nvar d4=arr[3];\nvar d5=arr[4];\nvar d6=arr[5];\nvar after=[];\nif(x==\"N\")after=[d2,d6,d3,d4,d1,d5];\nif(x==\"S\")after=[d5,d1,d3,d4,d6,d2];\nif(x==\"E\")after=[d4,d2,d1,d6,d5,d3];\nif(x==\"W\")after=[d3,d2,d6,d1,d5,d4];\nif(x==\"R\")after=[d1,d3,d5,d2,d4,d6];\nif(x==\"L\")after=[d1,d4,d2,d5,d3,d6];\nreturn after;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dice;\nvar sum;\nfor(var i=0;i<Arr.length;i++){\n   var v=Arr[i].charAt(0);\n   if(v.match(/[NSEWRL]/)){\n      dice=move(v,dice);\n      sum+=dice[0];\n   }else{\n      if(i!=0)console.log(sum);\n      dice=[1,2,3,4,5,6];\n      sum=1;\n   }\n   if(Arr[i]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00484_1", "type": "JavaScript", "obfuscated": "var a0_0x256a6e = a0_0x5825;\nvar input = require('fs')[a0_0x256a6e(0x0)](a0_0x256a6e(0x1), a0_0x256a6e(0x2));\nvar arr = input[a0_0x256a6e(0x3)]()['split']('\\x0a');\nvar nk = arr[a0_0x256a6e(0x4)]()[a0_0x256a6e(0x5)]('\\x20')[a0_0x256a6e(0x6)](Number);\nvar n = nk[0x0];\nvar k = nk[0x1];\nvar N = [];\nfunction a0_0x27ed() {\n    var _0x556962 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'sort',\n        'zmTJg',\n        'max',\n        'length',\n        'nGhdF'\n    ];\n    a0_0x27ed = function () {\n        return _0x556962;\n    };\n    return a0_0x27ed();\n}\nfor (var i = 0x0; i < n; i++)\n    N['push'](arr['shift']()[a0_0x256a6e(0x5)]('\\x20')[a0_0x256a6e(0x6)](Number));\nvar dp = [];\nfor (var i = 0x0; i <= 0xa; i++)\n    dp[i] = [];\nvar DP = [];\nfunction a0_0x5825(WMjYbF, key) {\n    var stringArray = a0_0x27ed();\n    a0_0x5825 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5825(WMjYbF, key);\n}\nfor (var i = 0x0; i <= 0xa; i++)\n    DP[i] = [];\nN[a0_0x256a6e(0x7)](function (v) {\n    var c = v[0x0];\n    var g = v[0x1];\n    dp[g]['push'](c);\n});\ndp['forEach'](function (v, i) {\n    var _0x3e0981 = a0_0x5825;\n    v[_0x3e0981(0x8)](function (a, b) {\n        return b - a;\n    });\n    v[_0x3e0981(0x7)](function (value, j) {\n        var _0x2a7f0a = a0_0x5825;\n        if (j == 0x0)\n            DP[i][j] = dp[i][j];\n        if (j > 0x0) {\n            if ('ZrsSv' !== _0x2a7f0a(0x9)) {\n                dp[i][j] += dp[i][j - 0x1];\n                DP[i][j] = dp[i][j] + (j + 0x1) * j;\n            } else {\n                v['sort'](function (a, b) {\n                    return b - a;\n                });\n                v[_0x2a7f0a(0x7)](function (value, j) {\n                    if (j == 0x0)\n                        DP[i][j] = dp[i][j];\n                    if (j > 0x0) {\n                        dp[i][j] += dp[i][j - 0x1];\n                        DP[i][j] = dp[i][j] + (j + 0x1) * j;\n                    }\n                });\n            }\n        }\n    });\n});\nvar dp = [];\nfor (var i = 0x0; i <= n; i++)\n    dp[i] = 0x0;\nvar bomb = function (cnt, start, sum) {\n    var _0x10ceb0 = a0_0x5825;\n    dp[cnt] = Math[_0x10ceb0(0xa)](dp[cnt], sum);\n    if (sum == k)\n        return;\n    for (var i = start; i < DP[_0x10ceb0(0xb)]; i++) {\n        if ('jyNhN' !== _0x10ceb0(0xc)) {\n            DP[i][_0x10ceb0(0x7)](function (v, index) {\n                bomb(cnt + (index + 0x1), i + 0x1, sum + v);\n            });\n        } else {\n            dp[cnt] = Math['max'](dp[cnt], sum);\n            if (sum == k)\n                return;\n            for (var i = start; i < DP[_0x10ceb0(0xb)]; i++) {\n                DP[i]['forEach'](function (v, index) {\n                    bomb(cnt + (index + 0x1), i + 0x1, sum + v);\n                });\n            }\n        }\n    }\n};\nbomb(0x0, 0x0, 0x0);\nconsole['log'](dp[k]);", "test_cases": [["7 4\n14 1\n13 2\n12 3\n14 2\n8 2\n16 3\n11 2", "60"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar nk=arr.shift().split(\" \").map(Number);\nvar n=nk[0];\nvar k=nk[1];\nvar N=[];\nfor(var i=0;i<n;i++)N.push(arr.shift().split(\" \").map(Number));\n\nvar dp=[];\nfor(var i=0;i<=10;i++)dp[i]=[];\nvar DP=[];\nfor(var i=0;i<=10;i++)DP[i]=[];\n\nN.forEach(function(v){\n   var c=v[0];\n   var g=v[1];\n   dp[g].push(c);\n});\n\ndp.forEach(function(v,i){\n   v.sort(function(a,b){return b-a;});\n   v.forEach(function(value,j){\n      if(j==0)DP[i][j]=dp[i][j];\n      if(j>0){\n         dp[i][j]+=dp[i][j-1];\n         DP[i][j]=dp[i][j]+(j+1)*j;\n      }\n   });\n});\n\n\nvar dp=[];\nfor(var i=0;i<=n;i++)dp[i]=0;\n\nvar bomb=function(cnt,start,sum){\n   dp[cnt]=Math.max(dp[cnt],sum);\n   if(sum==k)return;\n   for(var i=start;i<DP.length;i++){\n      DP[i].forEach(function(v,index){\n         bomb(cnt+(index+1),i+1,sum+v);\n      });\n   }\n};\n\nbomb(0,0,0);\n\nconsole.log(dp[k]);", "language": "JavaScript"}
{"filename": "p00590_1", "type": "JavaScript", "obfuscated": "var a0_0x1d0ee0 = a0_0x4ad5;\nfunction prime(max) {\n    var _0x481554 = a0_0x4ad5;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x481554(0x0)](Math[_0x481554(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nfunction a0_0x4ad5(OCKSTm, key) {\n    var stringArray = a0_0x5eaa();\n    a0_0x4ad5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ad5(OCKSTm, key);\n}\nvar p = prime(0x2710);\nfunction a0_0x5eaa() {\n    var _0x2faad4 = [\n        'floor',\n        'sqrt',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'length',\n        'push',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0x5eaa = function () {\n        return _0x2faad4;\n    };\n    return a0_0x5eaa();\n}\nvar input = require('fs')[a0_0x1d0ee0(0x2)](a0_0x1d0ee0(0x3), a0_0x1d0ee0(0x4));\nvar Arr = input[a0_0x1d0ee0(0x5)]()['split']('\\x0a')[a0_0x1d0ee0(0x6)](Number);\nfor (var i = 0x0; i < Arr[a0_0x1d0ee0(0x7)]; i++) {\n    var a = Arr[i];\n    var A = [];\n    var B = [];\n    for (var j = 0x1; j <= a; j++)\n        A['push'](j);\n    for (var j = a; j >= 0x1; j--)\n        B[a0_0x1d0ee0(0x8)](j);\n    var pair = 0x0;\n    for (var j = 0x0; j < a; j++) {\n        if (p[a0_0x1d0ee0(0x9)](A[j]) && p[a0_0x1d0ee0(0x9)](B[j]))\n            pair++;\n    }\n    console[a0_0x1d0ee0(0xa)](pair);\n}", "test_cases": [["1\n4\n7\n51", "0\n2\n2\n6"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(10000);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   var A=[];\n   var B=[];\n   for(var j=1;j<=a;j++)A.push(j);\n   for(var j=a;j>=1;j--)B.push(j);\n   var pair=0;\n   for(var j=0;j<a;j++){\n      if(p.hasOwnProperty(A[j]) && p.hasOwnProperty(B[j]))pair++;\n   }\n   console.log(pair);\n}", "language": "JavaScript"}
{"filename": "p00591_1", "type": "JavaScript", "obfuscated": "var a0_0x55ba52 = a0_0x578c;\nvar input = require('fs')[a0_0x55ba52(0x0)]('/dev/stdin', a0_0x55ba52(0x1));\nvar arr = input['trim']()[a0_0x55ba52(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x55ba52(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++)\n        yx[a0_0x55ba52(0x4)](arr[a0_0x55ba52(0x3)]()[a0_0x55ba52(0x2)]('\\x20')[a0_0x55ba52(0x5)](Number));\n    var xy = [];\n    var hand = [];\n    for (var i = 0x0; i < n; i++) {\n        xy[i] = [];\n        hand[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            xy[i][j] = yx[j][i];\n            hand[i][j] = [\n                0x0,\n                0x0\n            ];\n        }\n    }\n    yx[a0_0x55ba52(0x6)](function (v, i) {\n        var _0x3ebc0 = a0_0x578c;\n        var min = v[_0x3ebc0(0x7)](function (a, b) {\n            var _0x57b084 = a0_0x578c;\n            return Math[_0x57b084(0x8)](a, b);\n        });\n        hand[i][v[_0x3ebc0(0x9)](min)][0x0] = 0x1;\n    });\n    xy[a0_0x55ba52(0x6)](function (v, i) {\n        var _0x48ac6c = a0_0x578c;\n        var max = v[_0x48ac6c(0x7)](function (a, b) {\n            var _0x12cc24 = a0_0x578c;\n            return Math[_0x12cc24(0xa)](a, b);\n        });\n        hand[v[_0x48ac6c(0x9)](max)][i][0x1] = 0x1;\n    });\n    var ans = (function () {\n        var _0x294a78 = a0_0x578c;\n        for (var i = 0x0; i < n; i++) {\n            if (_0x294a78(0xb) !== _0x294a78(0xc)) {\n                for (var j = 0x0; j < n; j++) {\n                    if (hand[i][j][0x0] == 0x1 && hand[i][j][0x1] == 0x1)\n                        return yx[i][j];\n                }\n            } else {\n                for (var i = 0x0; i < n; i++) {\n                    for (var j = 0x0; j < n; j++) {\n                        if (hand[i][j][0x0] == 0x1 && hand[i][j][0x1] == 0x1)\n                            return yx[i][j];\n                    }\n                }\n                return 0x0;\n            }\n        }\n        return 0x0;\n    }());\n    console[a0_0x55ba52(0xd)](ans);\n}\nfunction a0_0x578c(UiXTAq, key) {\n    var stringArray = a0_0x121e();\n    a0_0x578c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x578c(UiXTAq, key);\n}\nfunction a0_0x121e() {\n    var _0x54c00f = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'push',\n        'map',\n        'forEach',\n        'reduce',\n        'min',\n        'indexOf',\n        'max',\n        'eeMFr',\n        'HkDBl',\n        'log'\n    ];\n    a0_0x121e = function () {\n        return _0x54c00f;\n    };\n    return a0_0x121e();\n}", "test_cases": [["3\n1 2 3\n4 5 6\n7 8 9\n3\n1 2 3\n7 8 9\n4 5 6\n0", "7\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++)yx.push(arr.shift().split(\" \").map(Number));\n   var xy=[];\n   var hand=[];\n   for(var i=0;i<n;i++){\n      xy[i]=[];\n      hand[i]=[];\n      for(var j=0;j<n;j++){\n         xy[i][j]=yx[j][i];\n         hand[i][j]=[0,0];\n      }\n   }\n   yx.forEach(function(v,i){\n      var min=v.reduce(function(a,b){return Math.min(a,b);});\n      hand[i][v.indexOf(min)][0]=1;\n   });\n   xy.forEach(function(v,i){\n      var max=v.reduce(function(a,b){return Math.max(a,b);});\n      hand[v.indexOf(max)][i][1]=1;\n   });\n   var ans=(function(){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            if(hand[i][j][0]==1 && hand[i][j][1]==1)return yx[i][j];\n         }\n      }\n      return 0;\n   })();\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00593_1", "type": "JavaScript", "obfuscated": "var a0_0x433d28 = a0_0x263b;\nfunction bomb(y, x, cnt, f) {\n    var _0x2a7434 = a0_0x263b;\n    yx[y][x] = (_0x2a7434(0x0) + cnt)[_0x2a7434(0x1)](-0x3);\n    if (y == n - 0x1 && x == n - 0x1)\n        return;\n    else if (y == n - 0x1 && f == -0x1)\n        bomb(y, x + 0x1, cnt + 0x1, 0x1);\n    else if (y == n - 0x1 && f == 0x1)\n        bomb(y - 0x1, x + 0x1, cnt + 0x1, 0x1);\n    else if (x == n - 0x1 && f == 0x1)\n        bomb(y + 0x1, x, cnt + 0x1, -0x1);\n    else if (x == n - 0x1 && f == -0x1)\n        bomb(y + 0x1, x - 0x1, cnt + 0x1, -0x1);\n    else if (y == 0x0 && f == 0x1)\n        bomb(y, x + 0x1, cnt + 0x1, -0x1);\n    else if (y == 0x0 && f == -0x1)\n        bomb(y + 0x1, x - 0x1, cnt + 0x1, -0x1);\n    else if (x == 0x0 && f == -0x1)\n        bomb(y + 0x1, x, cnt + 0x1, 0x1);\n    else if (x == 0x0 && f == 0x1)\n        bomb(y - 0x1, x + 0x1, cnt + 0x1, 0x1);\n    else if (f == 0x1)\n        bomb(y - 0x1, x + 0x1, cnt + 0x1, 0x1);\n    else if (f == -0x1)\n        bomb(y + 0x1, x - 0x1, cnt + 0x1, -0x1);\n}\nfunction a0_0x263b(VFejgX, key) {\n    var stringArray = a0_0x4a0a();\n    a0_0x263b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x263b(VFejgX, key);\n}\nvar input = require('fs')[a0_0x433d28(0x2)]('/dev/stdin', a0_0x433d28(0x3));\nvar Arr = input[a0_0x433d28(0x4)]()[a0_0x433d28(0x5)]('\\x0a');\nvar I = 0x1;\nwhile (!![]) {\n    var n = Arr[a0_0x433d28(0x6)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        yx[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            yx[i][j] = 0x0;\n        }\n    }\n    bomb(0x0, 0x0, 0x1, 0x1);\n    console['log'](a0_0x433d28(0x7) + I + ':');\n    I++;\n    console[a0_0x433d28(0x8)](yx[a0_0x433d28(0x9)]('\\x0a')[a0_0x433d28(0xa)](/\\,/g, ''));\n}\nfunction a0_0x4a0a() {\n    var _0x253f3f = [\n        '\\x20\\x20\\x20',\n        'slice',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'Case\\x20',\n        'log',\n        'join',\n        'replace'\n    ];\n    a0_0x4a0a = function () {\n        return _0x253f3f;\n    };\n    return a0_0x4a0a();\n}", "test_cases": [["3\n4\n0", "Case 1:\n  1  2  6\n  3  5  7\n  4  8  9\nCase 2:\n  1  2  6  7\n  3  5  8 13\n  4  9 12 14\n 10 11 15 16"]], "original": "function bomb(y,x,cnt,f){\n   yx[y][x]=(\"   \"+cnt).slice(-3);\n   if(y==n-1 && x==n-1)return;\n   else if(y==n-1 && f==-1)bomb(y,x+1,cnt+1,1);\n   else if(y==n-1 && f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(x==n-1 && f==1)bomb(y+1,x,cnt+1,-1);\n   else if(x==n-1 && f==-1)bomb(y+1,x-1,cnt+1,-1);\n   else if(y==0 && f==1)bomb(y,x+1,cnt+1,-1);\n   else if(y==0 && f==-1)bomb(y+1,x-1,cnt+1,-1);\n   else if(x==0 && f==-1)bomb(y+1,x,cnt+1,1);\n   else if(x==0 && f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(f==-1)bomb(y+1,x-1,cnt+1,-1);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=1;\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      yx[i]=[];\n      for(var j=0;j<n;j++){\n         yx[i][j]=0;\n      }\n   }\n   bomb(0,0,1,1);\n   console.log(\"Case \"+I+\":\");\n   I++;\n   console.log(yx.join(\"\\n\").replace(/\\,/g,\"\"));\n}", "language": "JavaScript"}
{"filename": "p00629_1", "type": "JavaScript", "obfuscated": "var a0_0x1ed6ae = a0_0x89ad;\nvar input = require('fs')[a0_0x1ed6ae(0x0)]('/dev/stdin', a0_0x1ed6ae(0x1));\nfunction a0_0x89ad(KaIorj, key) {\n    var stringArray = a0_0x16c8();\n    a0_0x89ad = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x89ad(KaIorj, key);\n}\nvar arr = input[a0_0x1ed6ae(0x2)]()[a0_0x1ed6ae(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n === 0x0)\n        break;\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary[a0_0x1ed6ae(0x4)](arr['shift']()[a0_0x1ed6ae(0x3)]('\\x20')[a0_0x1ed6ae(0x5)](Number));\n    ary[a0_0x1ed6ae(0x6)](function (a, b) {\n        if (a[0x2] == b[0x2] && a[0x3] == b[0x3])\n            return a[0x0] - b[0x0];\n        else if (a[0x2] == b[0x2])\n            return a[0x3] - b[0x3];\n        else\n            return b[0x2] - a[0x2];\n    });\n    var ans = [];\n    var U = [];\n    for (var i = 0x0; i <= 0x3e8; i++)\n        U[i] = 0x0;\n    ary[a0_0x1ed6ae(0x7)](function (v, i) {\n        var _0x52530a = a0_0x89ad;\n        var id = v[0x0];\n        var u = v[0x1];\n        if (i < 0xa) {\n            if (U[u] < 0x3) {\n                ans[_0x52530a(0x4)](id);\n                U[u]++;\n            }\n        } else if (i < 0x14) {\n            if (U[u] < 0x2) {\n                ans['push'](id);\n                U[u]++;\n            }\n        } else if (i < 0x1a) {\n            if (U[u] == 0x0) {\n                if (_0x52530a(0x8) === _0x52530a(0x8)) {\n                    ans['push'](id);\n                    U[u]++;\n                } else {\n                    if (U[u] == 0x0) {\n                        ans[_0x52530a(0x4)](id);\n                        U[u]++;\n                    }\n                }\n            }\n        }\n    });\n    console[a0_0x1ed6ae(0x9)](ans['join']('\\x0a'));\n}\nfunction a0_0x16c8() {\n    var _0x4657e0 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'push',\n        'map',\n        'sort',\n        'forEach',\n        'qwkha',\n        'log'\n    ];\n    a0_0x16c8 = function () {\n        return _0x4657e0;\n    };\n    return a0_0x16c8();\n}", "test_cases": [["6\n1 1 6 200\n2 1 6 300\n3 1 6 400\n4 2 5 1200\n5 1 5 1400\n6 3 4 800\n3\n777 1 5 300\n808 2 4 20\n123 3 6 500\n2\n2 1 3 100\n1 1 3 100\n0", "1\n2\n3\n4\n6\n123\n777\n808\n1\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n===0)break;\n   var ary=[];\n   for(var i=0;i<n;i++)ary.push(arr.shift().split(\" \").map(Number));\n   ary.sort(function(a,b){\n      if(a[2]==b[2] && a[3]==b[3])return a[0]-b[0];\n      else if(a[2]==b[2])return a[3]-b[3];\n      else return b[2]-a[2];\n   });\n   var ans=[];\n   var U=[];\n   for(var i=0;i<=1000;i++)U[i]=0;\n   ary.forEach(function(v,i){\n      var id=v[0];\n      var u=v[1];\n      if(i<10){\n         if(U[u]<3){ans.push(id);U[u]++;}\n      }else if(i<20){\n         if(U[u]<2){ans.push(id);U[u]++;}\n      }else if(i<26){\n         if(U[u]==0){ans.push(id);U[u]++;}\n      }\n   });\n   console.log(ans.join(\"\\n\"));\n}", "language": "JavaScript"}
{"filename": "p00648_1", "type": "JavaScript", "obfuscated": "function a0_0x109e() {\n    var _0x48b935 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'length',\n        'push',\n        'sort',\n        'forEach',\n        'QyKXV',\n        'log'\n    ];\n    a0_0x109e = function () {\n        return _0x48b935;\n    };\n    return a0_0x109e();\n}\nvar a0_0x15e8b2 = a0_0x3290;\nfunction a0_0x3290(feSPhF, key) {\n    var stringArray = a0_0x109e();\n    a0_0x3290 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3290(feSPhF, key);\n}\nvar input = require('fs')[a0_0x15e8b2(0x0)](a0_0x15e8b2(0x1), 'utf8');\nvar arr = input[a0_0x15e8b2(0x2)]()[a0_0x15e8b2(0x3)]('\\x0a');\nwhile (!![]) {\n    var N = arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var obj = {};\n    var ary = [];\n    for (var i = 0x0; i < N; i++) {\n        var nws = arr[a0_0x15e8b2(0x4)]()['split']('\\x20');\n        var name = nws[0x0];\n        var w = nws[0x1] - 0x0;\n        var s = nws[0x2][a0_0x15e8b2(0x3)]('')[a0_0x15e8b2(0x5)](Number);\n        s = s[a0_0x15e8b2(0x6)] == 0x3 ? s[0x0] * 0x3c + s[0x1] * 0xa + s[0x2] : s[0x0] * 0x258 + s[0x1] * 0x3c + 0xa * s[0x2] + s[0x3];\n        obj[name] = w * 0x5a0 + s;\n        ary['push'](w * 0x5a0 + s);\n    }\n    var P = arr['shift']() - 0x0;\n    for (var i = 0x0; i < P; i++) {\n        var f = arr[a0_0x15e8b2(0x4)]();\n        ary[a0_0x15e8b2(0x7)](obj[f] - 29.5);\n    }\n    ary[a0_0x15e8b2(0x8)](function (a, b) {\n        return a - b;\n    });\n    var cnt = 0x0;\n    var i = 0x0;\n    var p = 0x0;\n    ary[a0_0x15e8b2(0x9)](function (v) {\n        var _0x5b6054 = a0_0x3290;\n        if (v % 0x1 == 0.5) {\n            if (_0x5b6054(0xa) === _0x5b6054(0xa)) {\n                cnt++;\n                p++;\n                i = v + 29.5 + 0x1e;\n            } else {\n                var f = arr[_0x5b6054(0x4)]();\n                ary['push'](obj[f] - 29.5);\n            }\n        } else if (i <= v) {\n            cnt++;\n            i = v + 0x1e;\n        }\n    });\n    if (p != P)\n        cnt = -0x1;\n    console[a0_0x15e8b2(0xb)](cnt);\n}", "test_cases": [["1\ngalaxy_angel 0 600\n1\ngalaxy_angel\n11\nA 0 600\nB 0 610\nC 0 610\nD 0 610\nE 0 640\nEE 0 700\nF 0 710\nG 0 710\nH 0 710\nI 0 740\nJ 0 750\n2\nB\nH\n42\nnchj 6 2620\nanhnnnmewbktthsrn 4 2515\ngntmdsh 1 1800\nachnnl 4 2540\nhnskirh 0 2200\naonexrcst 0 1700\ndgdys 6 2330\nhdnnara 4 2525\ndnpaonntssotk 4 2555\nddmnwndrlnd 6 2500\nC 4 2445\nastrttnomch 0 2330\nseknnqasr 1 2630\nsftnt 4 2630\nstnsgt 2 2605\ndrrnenmknmrmr 4 2610\nhnzm 6 2713\nyndmsoazzlsn 6 2658\nmrahlcalv 4 2615\nhshzrhkkrhs 1 900\nortchntsbshni 0 2430\nkmnmzshrski 1 2530\nsktdnc 4 1800\ngykkybrkjhkirkhn 2 2459\ntrk 0 900\n30zzsinhkntiik 3 2700\nsngkotmmmirprdx 1 2600\nyran 2 2529\ntntissygntinybu 1 2614\nskiichhtki 5 2505\ntgrbnny 6 2558\ndnbrsnki 3 1927\nyugozxl 1 1930\nfrbllchrmn 1 1928\nfjrg 1 1955\nshwmngtr 0 2200\nxmn 5 2200\nrngnkkrskitikihn 0 2100\nszysz 0 1254\nprttyrythmaulrdrm 6 1000\nsckiesfrntrqst 5 1820\nmshdr 1 2255\n1\nmrahlcalv\n0", "1\n4\n31"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var N=arr.shift()-0;\n   if(N==0)break;\n   var obj={};\n   var ary=[];\n   for(var i=0;i<N;i++){\n      var nws=(arr.shift()).split(\" \");\n      var name=nws[0];\n      var w=nws[1]-0;\n      var s=nws[2].split(\"\").map(Number);\n      s=(s.length==3)?s[0]*60+s[1]*10+s[2]:s[0]*600+s[1]*60+10*s[2]+s[3];\n      obj[name]=(w*1440)+s;\n      ary.push((w*1440)+s);\n   }\n   var P=arr.shift()-0;\n   for(var i=0;i<P;i++){\n      var f=arr.shift();\n      ary.push(obj[f]-29.5);\n   }\n   ary.sort(function(a,b){return a-b;});\n   var cnt=0;\n   var i=0;\n   var p=0;\n   ary.forEach(function(v){\n      if(v%1==0.5){cnt++;p++;i=v+29.5+30;}\n      else if(i<=v){cnt++;i=v+30;}\n   });\n   if(p!=P)cnt=-1;\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00682_1", "type": "JavaScript", "obfuscated": "var a0_0x8858f2 = a0_0x2a2f;\nprocess[a0_0x8858f2(0x0)]['resume']();\nfunction a0_0x2a2f(erHWwy, key) {\n    var stringArray = a0_0x1371();\n    a0_0x2a2f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a2f(erHWwy, key);\n}\nprocess[a0_0x8858f2(0x0)][a0_0x8858f2(0x1)]('utf8');\nfunction a0_0x1371() {\n    var _0x4cb51e = [\n        'stdin',\n        'setEncoding',\n        'data',\n        'push',\n        'split',\n        'map',\n        'log',\n        'abs',\n        'toFixed',\n        'shift'\n    ];\n    a0_0x1371 = function () {\n        return _0x4cb51e;\n    };\n    return a0_0x1371();\n}\nprocess[a0_0x8858f2(0x0)]['on'](a0_0x8858f2(0x2), function (chunk) {\n    var _0x41afa0 = a0_0x2a2f;\n    var input = chunk['trim']()['split']('\\x0a');\n    var order = 0x1;\n    while (!![]) {\n        var n = input['shift']();\n        if (n == 0x0)\n            break;\n        var coordinate = [];\n        while (n--)\n            coordinate[_0x41afa0(0x3)](input['shift']()[_0x41afa0(0x4)]('\\x20')[_0x41afa0(0x5)](Number));\n        coordinate['push'](coordinate[0x0]);\n        var area = 0x0;\n        for (var i = 0x0; i < coordinate['length'] - 0x1; i++) {\n            area += coordinate[i][0x0] * coordinate[i + 0x1][0x1] - coordinate[i][0x1] * coordinate[i + 0x1][0x0];\n        }\n        console[_0x41afa0(0x6)](order + '\\x20' + Math[_0x41afa0(0x7)](area / 0x2)[_0x41afa0(0x8)](0x1));\n        input[_0x41afa0(0x9)]();\n        order++;\n    }\n});", "test_cases": [["3\n1 1\n3 4\n6 0\n\n7\n0 0\n10 10\n0 20\n10 30\n0 40\n100 40\n100 0\n\n0", "1 8.5\n2 3800.0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\nprocess.stdin.on(\"data\", function (chunk) {\n    var input = chunk.trim().split(\"\\n\");\n    var order = 1;\n    while (true) {\n        var n = input.shift();\n        if (n == 0)\n            break;\n        var coordinate = [];\n        while (n--)\n            coordinate.push(input.shift().split(\" \").map(Number));\n        coordinate.push(coordinate[0]);\n        var area = 0;\n        for (var i = 0; i < coordinate.length - 1; i++) {\n            area += (coordinate[i][0] * coordinate[i + 1][1]) - (coordinate[i][1] * coordinate[i + 1][0]);\n        }\n        console.log(order + \" \" + Math.abs(area / 2).toFixed(1));\n        input.shift();\n        order++;\n    }\n});", "language": "JavaScript"}
{"filename": "p00687_1", "type": "JavaScript", "obfuscated": "var a0_0x333a7b = a0_0x2eb9;\nvar input = require('fs')[a0_0x333a7b(0x0)](a0_0x333a7b(0x1), a0_0x333a7b(0x2));\nvar arr = input[a0_0x333a7b(0x3)]()[a0_0x333a7b(0x4)]('\\x0a');\nfunction a0_0x2eb9(eItkFV, key) {\n    var stringArray = a0_0x2944();\n    a0_0x2eb9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2eb9(eItkFV, key);\n}\nfunction a0_0x2944() {\n    var _0x4167e9 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'forEach',\n        'log'\n    ];\n    a0_0x2944 = function () {\n        return _0x4167e9;\n    };\n    return a0_0x2944();\n}\nwhile (!![]) {\n    var nab = arr['shift']();\n    if (nab == '0\\x200\\x200')\n        break;\n    nab = nab['split']('\\x20')[a0_0x333a7b(0x5)](Number);\n    var n = nab[0x0];\n    var ab = [\n        nab[0x1],\n        nab[0x2]\n    ];\n    var dp = [];\n    for (var i = 0x0; i <= n; i++)\n        dp[i] = ![];\n    dp[0x0] = !![];\n    for (var i = 0x0; i < ab[a0_0x333a7b(0x6)]; i++) {\n        for (var j = 0x0; j <= n; j++) {\n            if (dp[j])\n                dp[j + ab[i]] = !![];\n        }\n    }\n    var cnt = 0x0;\n    dp[a0_0x333a7b(0x7)](function (v) {\n        if (v == ![])\n            cnt++;\n    });\n    console[a0_0x333a7b(0x8)](cnt);\n}", "test_cases": [["10 2 3\n10 2 5\n100 5 25\n0 0 0", "1\n2\n80"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\nvar nab=arr.shift();\n   if(nab==\"0 0 0\")break;\n   nab=nab.split(\" \").map(Number);\n   var n=nab[0];\n   var ab=[nab[1],nab[2]];\n   var dp=[];\n   for(var i=0;i<=n;i++)dp[i]=false;\n   dp[0]=true;\n   for(var i=0;i<ab.length;i++){\n      for(var j=0;j<=n;j++){\n         if(dp[j])dp[j+ab[i]]=true;\n      }\n   }\n   var cnt=0;\n   dp.forEach(function(v){\n      if(v==false)cnt++;\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00693_1", "type": "JavaScript", "obfuscated": "var a0_0x119e85 = a0_0x237f;\nfunction a0_0x2b08() {\n    var _0xd9c998 = [\n        'readFileSync',\n        'replace',\n        'trim',\n        'split',\n        'shift',\n        'permit',\n        'forEach',\n        'test',\n        'join',\n        'log'\n    ];\n    a0_0x2b08 = function () {\n        return _0xd9c998;\n    };\n    return a0_0x2b08();\n}\nfunction a0_0x237f(QMVWyn, key) {\n    var stringArray = a0_0x2b08();\n    a0_0x237f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x237f(QMVWyn, key);\n}\nvar input = require('fs')[a0_0x119e85(0x0)]('/dev/stdin', 'utf8');\ninput = input[a0_0x119e85(0x1)](/\\?/g, '.');\nvar arr = input[a0_0x119e85(0x2)]()[a0_0x119e85(0x3)]('\\x0a');\nwhile (!![]) {\n    var nm = arr[a0_0x119e85(0x4)]()['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0 && m == 0x0)\n        break;\n    var rule = [];\n    while (n--) {\n        var ary = arr[a0_0x119e85(0x4)]()['split']('\\x20');\n        var flag = ary[0x0] == a0_0x119e85(0x5) ? !![] : ![];\n        rule['push']([\n            flag,\n            new RegExp(ary[0x1] + ary[0x2])\n        ]);\n    }\n    var ans = [];\n    while (m--) {\n        var packet = arr[a0_0x119e85(0x4)]()[a0_0x119e85(0x3)]('\\x20');\n        var str = packet[0x0] + packet[0x1];\n        var flag = ![];\n        rule[a0_0x119e85(0x6)](function (v) {\n            var _0x519312 = a0_0x237f;\n            if (v[0x0] == !![] && v[0x1][_0x519312(0x7)](str))\n                flag = !![];\n            else if (v[0x0] == ![] && v[0x1]['test'](str))\n                flag = ![];\n        });\n        if (flag)\n            ans['push'](packet[a0_0x119e85(0x8)]('\\x20'));\n    }\n    console['log'](ans['length']);\n    ans['forEach'](function (v) {\n        var _0x42ebc9 = a0_0x237f;\n        console[_0x42ebc9(0x9)](v);\n    });\n}", "test_cases": [["2 5\npermit 192168?? ?12??34?\ndeny 19216899 012343?5\n19216711 11233340 HiIamACracker\n19216891 01234345 Hello\n19216899 01234345 HiIamAlsoACracker\n19216809 11200340 World\n00000000 99999999 TheEndOfTheWorld\n1 2\npermit 12345678 23456789\n19216891 01234345 Hello\n12345678 23456789 Hello\n0 0", "2\n19216891 01234345 Hello\n19216809 11200340 World\n1\n12345678 23456789 Hello"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.replace(/\\?/g,\".\");\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nm=arr.shift().split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   if(n==0 && m==0)break;\n   var rule=[];\n   while(n--){\n      var ary=arr.shift().split(\" \");\n      var flag=(ary[0]==\"permit\")?true:false;\n      rule.push([flag,new RegExp(ary[1]+ary[2])]);\n   }\n   var ans=[];\n   while(m--){\n      var packet=arr.shift().split(\" \");\n      var str=packet[0]+packet[1];\n      var flag=false;\n      rule.forEach(function(v){\n         if(v[0]==true && v[1].test(str))flag=true;\n         else if(v[0]==false && v[1].test(str))flag=false;  \n      });\n      if(flag)ans.push(packet.join(\" \"));\n   }\n   console.log(ans.length);\n   ans.forEach(function(v){console.log(v);});\n}", "language": "JavaScript"}
{"filename": "p00700_1", "type": "JavaScript", "obfuscated": "var a0_0x3e5aee = a0_0x3af0;\nfunction a0_0x3af0(PbTqmR, key) {\n    var stringArray = a0_0x52fa();\n    a0_0x3af0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3af0(PbTqmR, key);\n}\nvar input = require('fs')[a0_0x3e5aee(0x0)](a0_0x3e5aee(0x1), 'utf8');\nvar arr = input[a0_0x3e5aee(0x2)]()[a0_0x3e5aee(0x3)]('\\x0a');\nvar n = arr[a0_0x3e5aee(0x4)]() - 0x0;\nwhile (n--) {\n    var xy = [\n        0x0,\n        0x0\n    ];\n    var max = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    while (!![]) {\n        var str = arr[a0_0x3e5aee(0x4)]();\n        if (str == a0_0x3e5aee(0x5))\n            break;\n        var ary = str[a0_0x3e5aee(0x3)]('\\x20')[a0_0x3e5aee(0x6)](Number);\n        xy[0x0] += ary[0x0];\n        xy[0x1] += ary[0x1];\n        var d = Math[a0_0x3e5aee(0x7)](xy[0x0] * xy[0x0] + xy[0x1] * xy[0x1]);\n        if (max[0x0] < d)\n            max = [\n                d,\n                xy[0x0],\n                xy[0x1]\n            ];\n        else if (max[0x0] == d && max[0x1] < xy[0x0])\n            max = [\n                d,\n                xy[0x0],\n                xy[0x1]\n            ];\n    }\n    max[a0_0x3e5aee(0x4)]();\n    console[a0_0x3e5aee(0x8)](max[a0_0x3e5aee(0x9)]('\\x20'));\n}\nfunction a0_0x52fa() {\n    var _0x4eb2eb = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'sqrt',\n        'log',\n        'join'\n    ];\n    a0_0x52fa = function () {\n        return _0x4eb2eb;\n    };\n    return a0_0x52fa();\n}", "test_cases": [["3\n1 0\n0 1\n-1 0\n1 0\n0 5\n-1 0\n0 -1\n5 0\n0 1\n0 -1\n1 0\n0 -4\n-3 0\n0 3\n2 0\n0 -2\n-1 0\n0 1\n0 -1\n1 0\n0 2\n-2 0\n0 -3\n3 0\n0 4\n-4 0\n0 -5\n-2 0\n0 0\n1 0\n-1 0\n0 0\n2 0\n0 1\n-1 0\n0 1\n-1 0\n0 -2\n0 0", "6 5\n1 0\n2 1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var xy=[0,0];\n   var max=[0,0,0];\n   while(true){\n      var str=arr.shift();\n      if(str==\"0 0\")break;\n      var ary=str.split(\" \").map(Number);\n      xy[0]+=ary[0];\n      xy[1]+=ary[1];\n      var d=Math.sqrt(xy[0]*xy[0]+xy[1]*xy[1]);\n      if(max[0]<d)max=[d,xy[0],xy[1]];\n      else if(max[0]==d && max[1]<xy[0])max=[d,xy[0],xy[1]];\n      }\n   max.shift();\n   console.log(max.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00705_1", "type": "JavaScript", "obfuscated": "function a0_0x4ccb(qIoavp, key) {\n    var stringArray = a0_0x13e2();\n    a0_0x4ccb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ccb(qIoavp, key);\n}\nvar a0_0x3b8e8e = a0_0x4ccb;\nvar input = require('fs')[a0_0x3b8e8e(0x0)]('/dev/stdin', a0_0x3b8e8e(0x1));\nvar Arr = input[a0_0x3b8e8e(0x2)]()[a0_0x3b8e8e(0x3)]('\\x0a');\nwhile (!![]) {\n    var v = Arr['shift']();\n    if (v == '0\\x200')\n        break;\n    var NQ = v['split']('\\x20')[a0_0x3b8e8e(0x4)](Number);\n    var arr = [];\n    for (var i = 0x0; i < 0x32; i++)\n        arr[i] = 0x0;\n    for (var i = 0x0; i < NQ[0x0]; i++) {\n        var day = Arr['shift']()[a0_0x3b8e8e(0x3)]('\\x20')[a0_0x3b8e8e(0x4)](Number);\n        var L = day[a0_0x3b8e8e(0x5)]();\n        for (var j = 0x0; j < L; j++) {\n            arr[day[j]]++;\n        }\n    }\n    var result = 0x0;\n    var max = Math[a0_0x3b8e8e(0x6)]['apply'](null, arr);\n    if (max >= NQ[0x1])\n        NQ[0x1] = max;\n    for (var i = 0x0; i < arr['length']; i++) {\n        if (arr[i] >= NQ[0x1]) {\n            result = i;\n            break;\n        }\n    }\n    console[a0_0x3b8e8e(0x7)](result);\n}\nfunction a0_0x13e2() {\n    var _0x34222a = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'max',\n        'log'\n    ];\n    a0_0x13e2 = function () {\n        return _0x34222a;\n    };\n    return a0_0x13e2();\n}", "test_cases": [["3 2\n2 1 4\n0\n3 3 4 8\n3 2\n4 1 5 8 9\n3 2 5 9\n5 2 4 5 7 9\n3 3\n2 1 4\n3 2 5 9\n2 2 4\n3 3\n2 1 2\n3 1 2 9\n2 2 4\n0 0", "4\n5\n0\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var v=Arr.shift();\n   if(v==\"0 0\")break;\n   var NQ=v.split(\" \").map(Number);\n   var arr=[];\n   for(var i=0;i<50;i++)arr[i]=0;\n   for(var i=0;i<NQ[0];i++){\n      var day=(Arr.shift()).split(\" \").map(Number);\n      var L=day.shift();\n      for(var j=0;j<L;j++){\n         arr[day[j]]++;\n      }\n   }\n   var result=0;\n   var max=Math.max.apply(null,arr);\n   if(max>=NQ[1])NQ[1]=max;\n   for(var i=0;i<arr.length;i++){\n      if(arr[i]>=NQ[1]){\n         result=i;\n         break;\n      }\n   }\n   console.log(result);\n}", "language": "JavaScript"}
{"filename": "p00718_1", "type": "JavaScript", "obfuscated": "function a0_0x1a8b(KpITwN, key) {\n    var stringArray = a0_0x5d52();\n    a0_0x1a8b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1a8b(KpITwN, key);\n}\nvar a0_0x3481d3 = a0_0x1a8b;\nfunction a0_0x5d52() {\n    var _0x342f19 = [\n        'readFileSync',\n        '/dev/stdin',\n        'shift',\n        'split',\n        'forEach',\n        'replace',\n        '000',\n        'map'\n    ];\n    a0_0x5d52 = function () {\n        return _0x342f19;\n    };\n    return a0_0x5d52();\n}\nvar input = require('fs')[a0_0x3481d3(0x0)](a0_0x3481d3(0x1), 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr[a0_0x3481d3(0x2)]() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr[a0_0x3481d3(0x2)]()[a0_0x3481d3(0x3)]('\\x20');\n    var sum = 0x0;\n    arr[a0_0x3481d3(0x4)](function (v) {\n        var _0x14f720 = a0_0x1a8b;\n        v = v[_0x14f720(0x5)](/(\\d?)([mcxi])/g, function (s, s1, s2) {\n            s1 = s1 ? s1 - 0x0 : 0x1;\n            if (s2 == 'm')\n                s2 = 0x3e8;\n            if (s2 == 'c')\n                s2 = 0x64;\n            if (s2 == 'x')\n                s2 = 0xa;\n            if (s2 == 'i')\n                s2 = 0x1;\n            sum += s1 * s2;\n            return s;\n        });\n    });\n    var str = (a0_0x3481d3(0x6) + sum)['slice'](-0x4);\n    var S = str[a0_0x3481d3(0x3)]('')[a0_0x3481d3(0x7)](Number);\n    var result = '';\n    S['forEach'](function (v, i) {\n        if (v == 0x1)\n            v = '';\n        if (v !== 0x0) {\n            if (i == 0x0)\n                result += v + 'm';\n            if (i == 0x1)\n                result += v + 'c';\n            if (i == 0x2)\n                result += v + 'x';\n            if (i == 0x3)\n                result += v + 'i';\n        }\n    });\n    console['log'](result);\n}", "test_cases": [["10\nxi x9i\ni 9i\nc2x2i 4c8x8i\nm2ci 4m7c9x8i\n9c9x9i i\ni 9m9c9x8i\nm i\ni m\nm9i i\n9m8c7xi c2x8i", "3x\nx\n6cx\n5m9c9x9i\nm\n9m9c9x9i\nmi\nmi\nmx\n9m9c9x9i"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=(Arr.shift()).split(\" \");\n   var sum=0;\n   arr.forEach(function(v){\n      v=v.replace(/(\\d?)([mcxi])/g,function(s,s1,s2){\n         s1=(s1)?s1-0:1;\n         if(s2==\"m\")s2=1000;\n         if(s2==\"c\")s2=100;\n         if(s2==\"x\")s2=10;\n         if(s2==\"i\")s2=1;\n         sum+=(s1*s2);\n         return s;\n      });\n   });\n   var str=(\"000\"+sum).slice(-4);\n   var S=str.split(\"\").map(Number);\n   var result=\"\";\n   S.forEach(function(v,i){\n      if(v==1)v=\"\";\n      if(v!==0){\n         if(i==0)result+=v+\"m\";\n         if(i==1)result+=v+\"c\";\n         if(i==2)result+=v+\"x\";\n         if(i==3)result+=v+\"i\";\n      }\n   });\n   console.log(result);\n}", "language": "JavaScript"}
{"filename": "p00722_1", "type": "JavaScript", "obfuscated": "function a0_0x4616(qAEXqB, key) {\n    var stringArray = a0_0x172a();\n    a0_0x4616 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4616(qAEXqB, key);\n}\nvar a0_0x33a8cc = a0_0x4616;\nfunction prime(max) {\n    var _0x4fe5af = a0_0x4616;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x4fe5af(0x0)](Math[_0x4fe5af(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nvar p = prime(0xf423f);\nvar input = require('fs')[a0_0x33a8cc(0x2)]('/dev/stdin', a0_0x33a8cc(0x3));\nfunction a0_0x172a() {\n    var _0x40c2ae = [\n        'floor',\n        'sqrt',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0x172a = function () {\n        return _0x40c2ae;\n    };\n    return a0_0x172a();\n}\nvar Arr = input[a0_0x33a8cc(0x4)]()[a0_0x33a8cc(0x5)]('\\x0a');\nwhile (!![]) {\n    var v = Arr['shift']();\n    if (v == '0\\x200\\x200')\n        break;\n    var adn = v[a0_0x33a8cc(0x5)]('\\x20')['map'](Number);\n    var cnt = 0x0;\n    var sum = adn[0x0] - adn[0x1];\n    while (cnt != adn[0x2]) {\n        sum += adn[0x1];\n        if (p[a0_0x33a8cc(0x6)](sum))\n            cnt++;\n    }\n    console[a0_0x33a8cc(0x7)](sum);\n}", "test_cases": [["367 186 151\n179 10 203\n271 37 39\n103 230 1\n27 104 185\n253 50 85\n1 1 1\n9075 337 210\n307 24 79\n331 221 177\n259 170 40\n269 58 102\n0 0 0", "92809\n6709\n12037\n103\n93523\n14503\n2\n899429\n5107\n412717\n22699\n25673"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var v=Arr.shift();\n   if(v==\"0 0 0\")break;\n   var adn=v.split(\" \").map(Number);\n   var cnt=0;\n   var sum=adn[0]-adn[1];\n   while(cnt!=adn[2]){\n      sum+=adn[1];\n      if(p.hasOwnProperty(sum))cnt++;\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00735_1", "type": "JavaScript", "obfuscated": "var a0_0x2af722 = a0_0x15c4;\nfunction a0_0x6447() {\n    var _0x496545 = [\n        'push',\n        '/dev/stdin',\n        'utf8',\n        'some',\n        'log',\n        'join'\n    ];\n    a0_0x6447 = function () {\n        return _0x496545;\n    };\n    return a0_0x6447();\n}\nvar ms = [];\nfunction a0_0x15c4(tTfhdd, key) {\n    var stringArray = a0_0x6447();\n    a0_0x15c4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15c4(tTfhdd, key);\n}\nvar flag = [];\nfor (var i = 0x0; i < 0x493e0; i++)\n    flag[i] = !![];\nvar i = 0x1;\nwhile (!![]) {\n    var m = 0x7 * i - 0x1;\n    var s = 0x7 * i + 0x1;\n    if (m > 0x493e0)\n        break;\n    i++;\n    if (flag[m])\n        ms['push'](m);\n    if (flag[s])\n        ms[a0_0x2af722(0x0)](s);\n    var j = 0x2;\n    while (!![]) {\n        if (m * j > 0x493e0)\n            break;\n        flag[m * j] = ![];\n        flag[s * j] = ![];\n        j++;\n    }\n}\nvar input = require('fs')['readFileSync'](a0_0x2af722(0x1), a0_0x2af722(0x2));\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x1)\n        break;\n    var ans = [];\n    var i = 0x0;\n    ms[a0_0x2af722(0x3)](function (v) {\n        var _0x531d3d = a0_0x15c4;\n        if (n % v == 0x0)\n            ans[_0x531d3d(0x0)](v);\n        return n < v;\n    });\n    console[a0_0x2af722(0x4)](n + ':\\x20' + ans[a0_0x2af722(0x5)]('\\x20'));\n}", "test_cases": [["205920\n262144\n262200\n279936\n299998\n1", "205920: 6 8 13 15 20 22 55 99\n262144: 8\n262200: 6 8 15 20 50 57 69 76 92 190 230 475 575 874 2185\n279936: 6 8 27\n299998: 299998"]], "original": "var ms=[];\nvar flag=[];\nfor(var i=0;i<300000;i++)flag[i]=true;\nvar i=1;\nwhile(true){\n   var m=(7*i)-1;\n   var s=(7*i)+1;\n   if(m>300000)break;\n   i++;\n   if(flag[m])ms.push(m);\n   if(flag[s])ms.push(s);\n   var j=2;\n   while(true){\n      if(m*j>300000)break;\n      flag[m*j]=false;\n      flag[s*j]=false;\n      j++;\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==1)break;\n   var ans=[];\n   var i=0;\n   ms.some(function(v){\n      if(n%v==0)ans.push(v);\n      return (n<v);\n   });\n   console.log(n+\": \"+ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00767_1", "type": "JavaScript", "obfuscated": "var a0_0x51c01e = a0_0xe1c9;\nfunction a0_0xe1c9(QsUgKT, key) {\n    var stringArray = a0_0x4220();\n    a0_0xe1c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xe1c9(QsUgKT, key);\n}\nfunction HW() {\n    var _0xba3bf9 = a0_0xe1c9;\n    var arr = [];\n    for (var i = 0x1; i < 0x96; i++) {\n        for (var j = i + 0x1; j <= 0x96; j++) {\n            arr[_0xba3bf9(0x0)]([\n                i,\n                j,\n                i * i + j * j\n            ]);\n        }\n    }\n    arr['sort'](function (a, b) {\n        if (a[0x2] == b[0x2])\n            return a[0x0] - b[0x0];\n        else\n            return a[0x2] - b[0x2];\n    });\n    return arr;\n}\nvar Rectangles = HW();\nfunction a0_0x4220() {\n    var _0xed62b = [\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x4220 = function () {\n        return _0xed62b;\n    };\n    return a0_0x4220();\n}\nvar input = require('fs')[a0_0x51c01e(0x1)](a0_0x51c01e(0x2), a0_0x51c01e(0x3));\nvar Arr = input[a0_0x51c01e(0x4)]()['split']('\\x0a');\nwhile (!![]) {\n    var hw = Arr[a0_0x51c01e(0x5)]()[a0_0x51c01e(0x6)]('\\x20')[a0_0x51c01e(0x7)](Number);\n    var h = hw[0x0];\n    var w = hw[0x1];\n    if (h == 0x0 && w == 0x0)\n        break;\n    var num = h * h + w * w;\n    for (var i = 0x0; i < Rectangles[a0_0x51c01e(0x8)]; i++) {\n        if (Rectangles[i][0x0] == h && Rectangles[i][0x1] == w)\n            break;\n    }\n    console[a0_0x51c01e(0x9)](Rectangles[i + 0x1][0x0] + '\\x20' + Rectangles[i + 0x1][0x1]);\n}", "test_cases": [["1 2\n1 3\n2 3\n1 4\n2 4\n5 6\n1 8\n4 7\n98 100\n99 100\n0 0", "1 3\n2 3\n1 4\n2 4\n3 4\n1 8\n4 7\n2 8\n3 140\n89 109"]], "original": "function HW(){\n   var arr=[];\n   for(var i=1;i<150;i++){\n      for(var j=i+1;j<=150;j++){\n         arr.push([i,j,i*i+j*j]);\n      }\n   }\n   arr.sort(function(a,b){\n      if(a[2]==b[2])return a[0]-b[0];\n      else return a[2]-b[2];\n   });\n   return arr;\n}\nvar Rectangles=HW();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var hw=Arr.shift().split(\" \").map(Number);\n   var h=hw[0];\n   var w=hw[1];\n   if(h==0 && w==0)break;\n   var num=h*h+w*w;\n   for(var i=0;i<Rectangles.length;i++){\n      if(Rectangles[i][0]==h &&Rectangles[i][1]==w)break;\n   }\n   console.log(Rectangles[i+1][0]+\" \"+Rectangles[i+1][1]);\n}", "language": "JavaScript"}
{"filename": "p00773_1", "type": "JavaScript", "obfuscated": "var a0_0x23b56c = a0_0x2d33;\nvar input = require('fs')[a0_0x23b56c(0x0)]('/dev/stdin', a0_0x23b56c(0x1));\nfunction a0_0x2d33(cRgiXq, key) {\n    var stringArray = a0_0x26ee();\n    a0_0x2d33 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d33(cRgiXq, key);\n}\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var xys = Arr[a0_0x23b56c(0x2)]()[a0_0x23b56c(0x3)]('\\x20')[a0_0x23b56c(0x4)](Number);\n    var x = xys[0x0];\n    var y = xys[0x1];\n    var s = xys[0x2];\n    if (x == 0x0 && y == 0x0 && s == 0x0)\n        break;\n    var max = 0x0;\n    for (var i = 0x1; i <= s - 0x1; i++) {\n        for (var j = 0x1; j <= s - 0x1; j++) {\n            var a = Math[a0_0x23b56c(0x5)](i * (0x64 + x) / 0x64) + Math[a0_0x23b56c(0x5)](j * (0x64 + x) / 0x64);\n            if (a > s)\n                break;\n            if (a == s) {\n                var b = Math[a0_0x23b56c(0x5)](i * (0x64 + y) / 0x64) + Math[a0_0x23b56c(0x5)](j * (0x64 + y) / 0x64);\n                max = Math[a0_0x23b56c(0x6)](max, b);\n                break;\n            }\n        }\n    }\n    console[a0_0x23b56c(0x7)](max);\n}\nfunction a0_0x26ee() {\n    var _0x15202f = [\n        'readFileSync',\n        'utf8',\n        'shift',\n        'split',\n        'map',\n        'floor',\n        'max',\n        'log'\n    ];\n    a0_0x26ee = function () {\n        return _0x15202f;\n    };\n    return a0_0x26ee();\n}", "test_cases": [["5 8 105\n8 5 105\n1 2 24\n99 98 24\n12 13 26\n1 22 23\n1 13 201\n13 16 112\n2 24 50\n1 82 61\n1 84 125\n1 99 999\n99 1 999\n98 99 999\n1 99 11\n99 1 12\n0 0 0", "109\n103\n24\n24\n26\n27\n225\n116\n62\n111\n230\n1972\n508\n1004\n20\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var xys=Arr.shift().split(\" \").map(Number);\n   var x=xys[0];\n   var y=xys[1];\n   var s=xys[2];\n   if(x==0 && y==0 && s==0)break;\n   var max=0;\n   for(var i=1;i<=s-1;i++){\n      for(var j=1;j<=s-1;j++){\n         var a=Math.floor(i*(100+x)/100)+Math.floor(j*(100+x)/100);\n         if(a>s)break;\n         if(a==s){\n            var b=Math.floor(i*(100+y)/100)+Math.floor(j*(100+y)/100);\n            max=Math.max(max,b);\n            break;\n         }\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00788_1", "type": "JavaScript", "obfuscated": "var a0_0x15b245 = a0_0x1852;\nfunction a0_0x1852(CjIZYW, key) {\n    var stringArray = a0_0x2b6b();\n    a0_0x1852 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1852(CjIZYW, key);\n}\nvar input = require('fs')[a0_0x15b245(0x0)](a0_0x15b245(0x1), a0_0x15b245(0x2));\nvar arr = input[a0_0x15b245(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var pn = arr[a0_0x15b245(0x4)]()[a0_0x15b245(0x5)]('\\x20')[a0_0x15b245(0x6)](Number);\n    if (pn[a0_0x15b245(0x7)]('\\x20') == '0\\x200')\n        break;\n    var p = Math[a0_0x15b245(0x8)](pn[0x0]);\n    var n = pn[0x1];\n    var max = 0x0;\n    var min = Infinity;\n    var ans = [];\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = 0x1; j <= n; j++) {\n            var v = i / j;\n            if (p > v && max < v) {\n                max = v;\n                ans[0x1] = i + '/' + j;\n            } else if (p < v && min > v) {\n                min = v;\n                ans[0x0] = i + '/' + j;\n            }\n        }\n    }\n    console[a0_0x15b245(0x9)](ans[a0_0x15b245(0x7)]('\\x20'));\n}\nfunction a0_0x2b6b() {\n    var _0x3633b2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'join',\n        'sqrt',\n        'log'\n    ];\n    a0_0x2b6b = function () {\n        return _0x3633b2;\n    };\n    return a0_0x2b6b();\n}", "test_cases": [["2 5\n3 10\n5 100\n0 0", "3/2 4/3\n7/4 5/3\n85/38 38/17"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\nvar pn=arr.shift().split(\" \").map(Number);\nif(pn.join(\" \")==\"0 0\")break;\nvar p=Math.sqrt(pn[0]);\nvar n=pn[1];\nvar max=0;\nvar min=Infinity;\nvar ans=[];\nfor(var i=1;i<=n;i++){\nfor(var j=1;j<=n;j++){\nvar v=i/j;\nif(p>v && max<v){\nmax=v;\nans[1]=i+\"/\"+j;\n}else if(p<v && min>v){\nmin=v;\nans[0]=i+\"/\"+j;\n}\n}\n}\nconsole.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00790_1", "type": "JavaScript", "obfuscated": "var a0_0x2134d0 = a0_0x2b48;\nfunction a0_0x2b48(yhybRA, key) {\n    var stringArray = a0_0x3b41();\n    a0_0x2b48 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b48(yhybRA, key);\n}\nfunction move(d1, d2, d3, d4, d5, d6) {\n    var _0x48eff5 = a0_0x2b48;\n    var x = this[_0x48eff5(0x0)]();\n    if (x == 's')\n        return [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    else if (x == 'n')\n        return [\n            d5,\n            d1,\n            d3,\n            d4,\n            d6,\n            d2\n        ];\n    else if (x == 'w')\n        return [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n    else if (x == 'e')\n        return [\n            d3,\n            d2,\n            d6,\n            d1,\n            d5,\n            d4\n        ];\n}\nvar input = require('fs')['readFileSync'](a0_0x2134d0(0x1), a0_0x2134d0(0x2));\nvar arr = input[a0_0x2134d0(0x3)]()[a0_0x2134d0(0x4)]('\\x0a');\nfunction a0_0x3b41() {\n    var _0x5187f7 = [\n        'toString',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'apply',\n        'log'\n    ];\n    a0_0x3b41 = function () {\n        return _0x5187f7;\n    };\n    return a0_0x3b41();\n}\nwhile (!![]) {\n    var n = arr[a0_0x2134d0(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var dice = [\n        0x1,\n        0x2,\n        0x3,\n        0x4,\n        0x5,\n        0x6\n    ];\n    while (n--) {\n        var str = arr['shift']();\n        dice = move[a0_0x2134d0(0x6)](str[0x0], dice);\n    }\n    console[a0_0x2134d0(0x7)](dice[0x0]);\n}", "test_cases": [["1\nnorth\n3\nnorth\neast\nsouth\n0", "5\n1"]], "original": "function move(d1,d2,d3,d4,d5,d6){\n   var x=this.toString();\n   if(x==\"s\")return [d2,d6,d3,d4,d1,d5];\n   else if(x==\"n\")return [d5,d1,d3,d4,d6,d2];\n   else if(x==\"w\")return [d4,d2,d1,d6,d5,d3];\n   else if(x==\"e\")return [d3,d2,d6,d1,d5,d4];\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var dice=[1,2,3,4,5,6];\n   while(n--){\n      var str=arr.shift();\n      dice=move.apply(str[0],dice);\n   }\n   console.log(dice[0]);\n}", "language": "JavaScript"}
{"filename": "p01085_1", "type": "JavaScript", "obfuscated": "var a0_0x79331 = a0_0x1622;\nfunction a0_0x330d() {\n    var _0x162736 = [\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x330d = function () {\n        return _0x162736;\n    };\n    return a0_0x330d();\n}\nfunction a0_0x1622(BMhBvD, key) {\n    var stringArray = a0_0x330d();\n    a0_0x1622 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1622(BMhBvD, key);\n}\nfunction Main(input) {\n    var _0x57561f = a0_0x1622;\n    input = input[_0x57561f(0x0)]('\\x0a');\n    var k = 0x0;\n    while (0x1) {\n        input[k] = input[k]['split']('\\x20');\n        var m = parseInt(input[k][0x0], 0xa);\n        var nmin = parseInt(input[k][0x1], 0xa);\n        var nmax = parseInt(input[k++][0x2], 0xa);\n        if (m == 0x0 && nmin == 0x0 && nmax == 0x0)\n            break;\n        var maxg = 0x0, maxn = 0x0;\n        var p = [];\n        for (var i = 0x0; i < m; i++)\n            p[i] = parseInt(input[k++], 0xa);\n        for (var i = nmin - 0x1; i < nmax; i++) {\n            if (p[i] - p[i + 0x1] >= maxg) {\n                maxg = p[i] - p[i + 0x1];\n                maxn = i;\n            }\n        }\n        console['log'](maxn + 0x1);\n    }\n}\nMain(require('fs')[a0_0x79331(0x1)](a0_0x79331(0x2), a0_0x79331(0x3)));", "test_cases": [["5 2 4\n100\n90\n82\n70\n65\n5 2 4\n100\n90\n80\n75\n65\n3 1 2\n5000\n4000\n3000\n4 2 3\n10000\n10000\n8000\n8000\n4 2 3\n10000\n10000\n10000\n8000\n5 2 3\n100\n80\n68\n60\n45\n0 0 0", "3\n4\n2\n2\n3\n2"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var k = 0;\n    while(1){\n        input[k] = input[k].split(\" \");\n        var m = parseInt(input[k][0],10);\n        var nmin = parseInt(input[k][1],10);\n        var nmax = parseInt(input[k++][2],10);\n        if(m == 0 && nmin == 0 && nmax == 0)\n            break;\n\n        var maxg = 0,maxn = 0;\n\n        var p = [];\n        for(var i = 0;i < m;i++)\n            p[i] = parseInt(input[k++],10);\n\n        for(var i = nmin - 1;i < nmax;i++){\n            if(p[i] - p[i + 1] >= maxg){\n                maxg = p[i] - p[i + 1];\n                maxn = i;\n            }\n        }\n        console.log(maxn + 1);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p01102_1", "type": "JavaScript", "obfuscated": "var a0_0x431068 = a0_0x136f;\nvar input = require('fs')[a0_0x431068(0x0)](a0_0x431068(0x1), a0_0x431068(0x2));\nvar arr = input[a0_0x431068(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var a = arr[a0_0x431068(0x4)]();\n    if (a == '.')\n        break;\n    var b = arr[a0_0x431068(0x4)]();\n    var memo = [];\n    var aa = a[a0_0x431068(0x5)](/\".*?\"/g, function (s) {\n        memo['push'](s);\n        return '\\x22';\n    });\n    var cnt = 0x0;\n    var bb = b[a0_0x431068(0x5)](/\".*?\"/g, function (s) {\n        if (s != memo['shift']())\n            cnt++;\n        return '\\x22';\n    });\n    if (aa == bb && cnt == 0x0)\n        console[a0_0x431068(0x6)](a0_0x431068(0x7));\n    else if (aa == bb && cnt == 0x1)\n        console[a0_0x431068(0x6)]('CLOSE');\n    else if (aa != bb || aa == bb && cnt > 0x1)\n        console[a0_0x431068(0x6)](a0_0x431068(0x8));\n}\nfunction a0_0x136f(TYGMKW, key) {\n    var stringArray = a0_0x14ae();\n    a0_0x136f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x136f(TYGMKW, key);\n}\nfunction a0_0x14ae() {\n    var _0x301b1b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'replace',\n        'log',\n        'IDENTICAL',\n        'DIFFERENT'\n    ];\n    a0_0x14ae = function () {\n        return _0x301b1b;\n    };\n    return a0_0x14ae();\n}", "test_cases": [["print\"hello\";print123\nprint\"hello\";print123\nread\"B1input\";solve;output;\nread\"B2\";solve;output;\nread\"C1\";solve;output\"C1ans\";\nread\"C2\";solve;output\"C2ans\";\n\"\"\"\"\"\"\"\"\n\"\"\"42\"\"\"\"\"\nslow\"program\"\nfast\"code\"\n\"super\"fast\"program\"\n\"super\"faster\"program\"\nX\"\"\nX\nI\"S\"\"CREAM\"\nI\"CE\"\"CREAM\"\n11\"22\"11\n1\"33\"111\n.", "IDENTICAL\nCLOSE\nDIFFERENT\nCLOSE\nDIFFERENT\nDIFFERENT\nDIFFERENT\nCLOSE\nDIFFERENT"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var a = arr.shift();\n   if(a==\".\")break;\n   var b = arr.shift();\n   var memo=[];\n   var aa = a.replace(/\".*?\"/g,function(s){\n      memo.push(s);\n      return \"\\\"\";\n   });\n   var cnt =0;\n   var bb = b.replace(/\".*?\"/g,function(s){\n      if(s != memo.shift())cnt++;\n      return \"\\\"\";\n   });\n   if(aa==bb && cnt==0) console.log(\"IDENTICAL\");\n   else if( aa==bb && cnt==1) console.log(\"CLOSE\");\n   else if(aa != bb || (aa==bb && cnt>1))console.log(\"DIFFERENT\");\n}\n", "language": "JavaScript"}
{"filename": "p01126_1", "type": "JavaScript", "obfuscated": "var a0_0x219030 = a0_0x2cdd;\nfunction a0_0x2cdd(YVbDiE, key) {\n    var stringArray = a0_0x456b();\n    a0_0x2cdd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2cdd(YVbDiE, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x219030(0x0), 'utf8');\nvar Arr = input[a0_0x219030(0x1)]()[a0_0x219030(0x2)]('\\x0a');\nfunction a0_0x456b() {\n    var _0x21780a = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200\\x200',\n        'map',\n        'push',\n        'log'\n    ];\n    a0_0x456b = function () {\n        return _0x21780a;\n    };\n    return a0_0x456b();\n}\nwhile (!![]) {\n    var A = Arr[a0_0x219030(0x3)]();\n    if (A == a0_0x219030(0x4))\n        break;\n    var arr = A[a0_0x219030(0x2)]('\\x20')[a0_0x219030(0x5)](Number);\n    var m = arr[0x1];\n    var start = arr[0x2];\n    var hpq = [];\n    for (var i = 0x0; i < m; i++)\n        hpq[a0_0x219030(0x6)](Arr[a0_0x219030(0x3)]());\n    hpq['sort'](function (a, b) {\n        var _0x3333a8 = a0_0x2cdd;\n        a = a[_0x3333a8(0x2)]('\\x20')[0x0] - 0x0;\n        b = b[_0x3333a8(0x2)]('\\x20')[0x0] - 0x0;\n        if (a >= b)\n            return -0x1;\n        else\n            return 0x1;\n    });\n    var H = 0x3e9;\n    for (var i = 0x0; i < hpq['length']; i++) {\n        var HPQ = hpq[i]['split']('\\x20')[a0_0x219030(0x5)](Number);\n        var h = HPQ[0x0];\n        var p = HPQ[0x1];\n        var q = HPQ[0x2];\n        if (H == h)\n            continue;\n        if (start == p || start == q) {\n            H = h;\n            start = start == p ? q : p;\n        }\n    }\n    console[a0_0x219030(0x7)](start);\n}", "test_cases": [["4 4 1\n3 1 2\n2 2 3\n3 3 4\n1 3 4\n0 0 0", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var A=Arr.shift();\n   if(A==\"0 0 0\")break;\n   var arr=A.split(\" \").map(Number);\n   var m=arr[1];\n   var start=arr[2];\n   var hpq=[];\n   for(var i=0;i<m;i++)hpq.push(Arr.shift());\n   hpq.sort(function(a,b){\n      a=(a.split(\" \"))[0]-0;\n      b=(b.split(\" \"))[0]-0;\n      if(a>=b)return -1;\n      else return 1;\n   });\n  var H=1001;\n   for(var i=0;i<hpq.length;i++){\n      var HPQ=hpq[i].split(\" \").map(Number);\n      var h=HPQ[0];\n      var p=HPQ[1];\n      var q=HPQ[2];\n      if(H==h)continue;\n      if(start==p || start==q){\n         H=h;\n         start=(start==p)?q:p;\n      }\n   }\n   console.log(start);\n}", "language": "JavaScript"}
{"filename": "p01137_1", "type": "JavaScript", "obfuscated": "var a0_0xde94c1 = a0_0x1948;\nfunction a0_0x1378() {\n    var _0x47866f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'pow',\n        'min',\n        'log'\n    ];\n    a0_0x1378 = function () {\n        return _0x47866f;\n    };\n    return a0_0x1378();\n}\nvar input = require('fs')[a0_0xde94c1(0x0)](a0_0xde94c1(0x1), a0_0xde94c1(0x2));\nfunction a0_0x1948(jTefef, key) {\n    var stringArray = a0_0x1378();\n    a0_0x1948 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1948(jTefef, key);\n}\nvar Arr = input[a0_0xde94c1(0x3)]()[a0_0xde94c1(0x4)]('\\x0a');\nwhile (!![]) {\n    var e = Arr[a0_0xde94c1(0x5)]() - 0x0;\n    if (e == 0x0)\n        break;\n    var min = Infinity;\n    for (var z = 0x0; z <= 0x64; z++) {\n        for (var y = 0x0; y <= 0x3e8; y++) {\n            var x = e - (Math[a0_0xde94c1(0x6)](z, 0x3) + Math['pow'](y, 0x2));\n            if (x < 0x0)\n                break;\n            min = Math[a0_0xde94c1(0x7)](min, z + y + x);\n        }\n    }\n    console[a0_0xde94c1(0x8)](min);\n}", "test_cases": [["1\n2\n4\n27\n300\n1250\n0", "1\n2\n2\n3\n18\n44"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var e=Arr.shift()-0;\n   if(e==0)break;\n   var min=Infinity;\n   for(var z=0;z<=100;z++){\n      for(var y=0;y<=1000;y++){\n         var x=e-(Math.pow(z,3)+Math.pow(y,2));\n         if(x<0)break;\n         min=Math.min(min,z+y+x)\n      }\n   }\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01202_1", "type": "JavaScript", "obfuscated": "function a0_0x4a19(IjtdBu, key) {\n    var stringArray = a0_0x54c4();\n    a0_0x4a19 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4a19(IjtdBu, key);\n}\nvar a0_0xda538a = a0_0x4a19;\nvar input = require('fs')['readFileSync'](a0_0xda538a(0x0), a0_0xda538a(0x1));\nvar arr = input['trim']()[a0_0xda538a(0x2)]('\\x0a');\nfunction a0_0x54c4() {\n    var _0x10e4b5 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'Yes',\n        'forEach',\n        'log'\n    ];\n    a0_0x54c4 = function () {\n        return _0x10e4b5;\n    };\n    return a0_0x54c4();\n}\nvar n = arr[a0_0xda538a(0x3)]() - 0x0;\nwhile (n--) {\n    var ary = arr[a0_0xda538a(0x3)]()['split']('');\n    var ans = a0_0xda538a(0x4);\n    var s = '';\n    ary[a0_0xda538a(0x5)](function (v) {\n        if (v == s)\n            ans = 'No';\n        s = v;\n    });\n    console[a0_0xda538a(0x6)](ans);\n}", "test_cases": [["3\nUU\nRDUL\nULDURDULDURDULDURDULDURD", "No\nYes\nYes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var ary=arr.shift().split(\"\");\n   var ans=\"Yes\";\n   var s=\"\";\n   ary.forEach(function(v){\n      if(v==s)ans=\"No\";\n      s=v;\n   });\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p01227_1", "type": "JavaScript", "obfuscated": "function a0_0x4970(jQPqEU, key) {\n    var stringArray = a0_0x3a00();\n    a0_0x4970 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4970(jQPqEU, key);\n}\nvar a0_0x3091fb = a0_0x4970;\nvar input = require('fs')[a0_0x3091fb(0x0)](a0_0x3091fb(0x1), 'utf8');\nvar arr = input[a0_0x3091fb(0x2)]()[a0_0x3091fb(0x3)]('\\x0a');\nvar t = arr[a0_0x3091fb(0x4)]() - 0x0;\nfunction a0_0x3a00() {\n    var _0x2d3b0c = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'length',\n        'push',\n        'sort'\n    ];\n    a0_0x3a00 = function () {\n        return _0x2d3b0c;\n    };\n    return a0_0x3a00();\n}\nwhile (t--) {\n    var [n, k] = arr[a0_0x3091fb(0x4)]()[a0_0x3091fb(0x3)]('\\x20')['map'](Number);\n    var x = arr[a0_0x3091fb(0x4)]()[a0_0x3091fb(0x3)]('\\x20')[a0_0x3091fb(0x5)](Number);\n    var d = x[x['length'] - 0x1] - x[0x0];\n    var a = [];\n    for (var i = 0x0; i < x[a0_0x3091fb(0x6)] - 0x1; i++)\n        a[a0_0x3091fb(0x7)](x[i + 0x1] - x[i]);\n    a[a0_0x3091fb(0x8)]((a, b) => b - a);\n    var sum = 0x0;\n    for (var i = 0x0; i < k - 0x1; i++) {\n        if (i > a['length'] - 0x1)\n            break;\n        sum += a[i];\n    }\n    console['log'](d - sum);\n}", "test_cases": [["6\n5 2\n10 30 40 70 100\n7 3\n3 6 10 17 21 26 28\n1 1\n100\n2 1\n0 1000000\n3 5\n30 70 150\n6 4\n0 10 20 30 40 50", "60\n13\n0\n1000000\n0\n20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar t=arr.shift()-0;\nwhile(t--){\n   var [n,k]=arr.shift().split(\" \").map(Number);\n   var x=arr.shift().split(\" \").map(Number);\n   var d=x[x.length-1]-x[0];\n   var a=[];\n   for(var i=0;i<x.length-1;i++)a.push(x[i+1]-x[i]);\n   a.sort((a,b)=>b-a);\n   var sum=0;\n   for(var i=0;i<k-1;i++){\n      if(i>a.length-1)break;\n      sum+=a[i];\n   }\n   console.log(d-sum);\n}\n", "language": "JavaScript"}
{"filename": "p01267_1", "type": "JavaScript", "obfuscated": "var a0_0x186ac2 = a0_0xee24;\nvar input = require('fs')[a0_0x186ac2(0x0)](a0_0x186ac2(0x1), 'utf8');\nfunction a0_0xee24(CIZBUt, key) {\n    var stringArray = a0_0x4d73();\n    a0_0xee24 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xee24(CIZBUt, key);\n}\nvar Arr = input[a0_0x186ac2(0x2)](/\\n$/, '')[a0_0x186ac2(0x3)]('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()[a0_0x186ac2(0x3)]('\\x20')['map'](Number);\n    if (arr[a0_0x186ac2(0x4)]('') == a0_0x186ac2(0x5))\n        break;\n    var y = Arr[a0_0x186ac2(0x6)]()[a0_0x186ac2(0x3)]('\\x20')[a0_0x186ac2(0x7)](Number);\n    (function (N, A, B, C, X) {\n        var _0x415ee1 = a0_0xee24;\n        var i = 0x0;\n        while (!![]) {\n            if (y[0x0] == X)\n                y[_0x415ee1(0x6)]();\n            if (y[_0x415ee1(0x8)] == 0x0) {\n                console[_0x415ee1(0x9)](i);\n                break;\n            }\n            X = (A * X + B) % C;\n            i++;\n            if (i == 0x2711) {\n                console['log'](-0x1);\n                break;\n            }\n        }\n    }['apply'](null, arr));\n}\nfunction a0_0x4d73() {\n    var _0x495d14 = [\n        'readFileSync',\n        '/dev/stdin',\n        'replace',\n        'split',\n        'join',\n        '00000',\n        'shift',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x4d73 = function () {\n        return _0x495d14;\n    };\n    return a0_0x4d73();\n}", "test_cases": [["1 5 7 11 10\n10\n2 5 7 11 10\n2 4\n2 1 1 256 0\n128 255\n2 0 0 1 0\n1234 5678\n2 1 1 100 0\n99 98\n2 1 1 100 0\n99 99\n2 1 1 10000 0\n1 0\n2 1 1 10000 0\n2 1\n0 0 0 0 0", "0\n3\n255\n-1\n198\n199\n10000\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr.join(\"\")==\"00000\")break;\n   var y=(Arr.shift()).split(\" \").map(Number);\n   (function(N, A, B, C, X){\n      var i=0;\n      while(true){\n         if(y[0]==X)y.shift();\n         if(y.length==0){console.log(i);break;}\n         X=((A*X)+B)%C;\n         i++;\n         if(i==10001){console.log(-1);break;}\n      }\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p01398_1", "type": "JavaScript", "obfuscated": "var a0_0x48f2a9 = a0_0x3953;\nfunction a0_0x3953(zBuVpX, key) {\n    var stringArray = a0_0x3a17();\n    a0_0x3953 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3953(zBuVpX, key);\n}\nfunction a0_0x3a17() {\n    var _0x42a9f2 = [\n        'abcdefghijklmnopqrstuvwxyz',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'map',\n        'length',\n        'join'\n    ];\n    a0_0x3a17 = function () {\n        return _0x42a9f2;\n    };\n    return a0_0x3a17();\n}\nvar objStr = {};\nvar objNum = {};\nvar abc = a0_0x48f2a9(0x0)[a0_0x48f2a9(0x1)]('');\nabc['forEach'](function (v, i) {\n    objStr[v] = i;\n    objNum[i] = v;\n});\nvar input = require('fs')[a0_0x48f2a9(0x2)](a0_0x48f2a9(0x3), 'utf8');\nvar Arr = input[a0_0x48f2a9(0x4)]()[a0_0x48f2a9(0x1)]('\\x0a');\nwhile (!![]) {\n    var N = Arr[a0_0x48f2a9(0x5)]() - 0x0;\n    if (N == 0x0)\n        break;\n    var str = Arr[a0_0x48f2a9(0x5)]();\n    var AB = [];\n    for (var i = 0x0; i < N; i++) {\n        var ab = Arr[a0_0x48f2a9(0x5)]()[a0_0x48f2a9(0x1)]('\\x20')[a0_0x48f2a9(0x6)](Number);\n        AB['push'](ab);\n    }\n    AB['reverse']();\n    var s = str[a0_0x48f2a9(0x1)]('');\n    for (var i = 0x0; i < N; i++) {\n        var ab = AB[i];\n        var plus = ab[0x1] - ab[0x0];\n        var m1 = s[ab[0x0] - 0x1];\n        var m2 = s[ab[0x1] - 0x1];\n        var n1 = objStr[m1] + plus;\n        var n2 = objStr[m2] + plus;\n        s[ab[0x0] - 0x1] = objNum[n2 % abc[a0_0x48f2a9(0x7)]];\n        s[ab[0x1] - 0x1] = objNum[n1 % abc[a0_0x48f2a9(0x7)]];\n    }\n    console['log'](s[a0_0x48f2a9(0x8)](''));\n}", "test_cases": [["1\ntojxo\n1 4\n5\nuhcqmlmkv\n4 5\n6 9\n3 6\n1 7\n3 6\n5\nshzxadexonr\n8 9\n3 9\n5 8\n4 9\n10 11\n0", "aojwo\nshinryaku\nshitadegeso"]], "original": "var objStr={};\nvar objNum={};\nvar abc=\"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nabc.forEach(function(v,i){\n   objStr[v]=i;\n   objNum[i]=v;\n});\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var str=Arr.shift();\n   var AB=[];\n   for(var i=0;i<N;i++){\n      var ab=(Arr.shift()).split(\" \").map(Number);\n      AB.push(ab);\n   }\n   AB.reverse();\n   var s=str.split(\"\");\n   for(var i=0;i<N;i++){\n      var ab=AB[i];\n      var plus=ab[1]-ab[0];\n      var m1=s[ab[0]-1];\n      var m2=s[ab[1]-1];\n      var n1=objStr[m1]+plus;\n      var n2=objStr[m2]+plus;\n      s[ab[0]-1]=objNum[n2%abc.length];\n      s[ab[1]-1]=objNum[n1%abc.length];\n   }\n   console.log(s.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p01694_1", "type": "JavaScript", "obfuscated": "var a0_0x39490b = a0_0x470d;\nfunction a0_0x470d(HHDCJB, key) {\n    var stringArray = a0_0x4d21();\n    a0_0x470d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x470d(HHDCJB, key);\n}\nvar input = require('fs')[a0_0x39490b(0x0)](a0_0x39490b(0x1), 'utf8');\nvar arr = input[a0_0x39490b(0x2)]()['split']('\\x0a');\nfunction a0_0x4d21() {\n    var _0x40ff04 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'forEach',\n        'log'\n    ];\n    a0_0x4d21 = function () {\n        return _0x40ff04;\n    };\n    return a0_0x4d21();\n}\nwhile (!![]) {\n    var n = arr[a0_0x39490b(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = arr['shift']()[a0_0x39490b(0x4)]('\\x20');\n    var L = 0x0;\n    var R = 0x0;\n    var UD = 0x2;\n    var cnt = 0x0;\n    ary[a0_0x39490b(0x5)](function (v) {\n        if (v == 'lu')\n            L = 0x1;\n        else if (v == 'ru')\n            R = 0x1;\n        else if (v == 'ld')\n            L = 0x0;\n        else if (v == 'rd')\n            R = 0x0;\n        if (UD == L + R) {\n            cnt++;\n            UD = UD == 0x2 ? 0x0 : 0x2;\n        }\n    });\n    console[a0_0x39490b(0x6)](cnt);\n}", "test_cases": [["4\nlu ru ld rd\n4\nlu ld lu ru\n1\nlu\n10\nru lu ld rd ru rd ru lu rd ld\n0", "2\n1\n0\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=arr.shift().split(\" \");\n   var L=0;\n   var R=0;\n   var UD=2;\n   var cnt=0;\n   ary.forEach(function(v){\n      if(v==\"lu\")L=1;\n      else if(v==\"ru\")R=1;\n      else if(v==\"ld\")L=0;\n      else if(v==\"rd\")R=0;\n      if(UD==L+R){\n         cnt++;\n         UD=(UD==2)?0:2;\n      }\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01845_1", "type": "JavaScript", "obfuscated": "var a0_0x1623a7 = a0_0x115c;\nfunction a0_0x44d5() {\n    var _0x37e630 = [\n        'split',\n        'log',\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x44d5 = function () {\n        return _0x37e630;\n    };\n    return a0_0x44d5();\n}\nfunction Main(input) {\n    var _0x57c132 = a0_0x115c;\n    input = input[_0x57c132(0x0)]('\\x0a');\n    for (var i = 0x0; 0x1; i++) {\n        input[i] = input[i][_0x57c132(0x0)]('\\x20');\n        var r0 = parseInt(input[i][0x0], 0xa);\n        var w0 = parseInt(input[i][0x1], 0xa);\n        var c = parseInt(input[i][0x2], 0xa);\n        var r = parseInt(input[i][0x3], 0xa);\n        if (r0 == 0x0 && w0 == 0x0 && c == 0x0 && r == 0x0)\n            break;\n        var a = c * w0;\n        if (a <= r0)\n            console[_0x57c132(0x1)]('0');\n        else {\n            console[_0x57c132(0x1)](Math[_0x57c132(0x2)]((a - r0 + r - 0x1) / r));\n        }\n    }\n}\nfunction a0_0x115c(YrNQnF, key) {\n    var stringArray = a0_0x44d5();\n    a0_0x115c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x115c(YrNQnF, key);\n}\nMain(require('fs')[a0_0x1623a7(0x3)](a0_0x1623a7(0x4), a0_0x1623a7(0x5)));", "test_cases": [["10 5 3 4\n2 5 2 3\n91 13 7 62\n10 1 3 5\n20 100 2 20\n2 14 7 1\n0 0 0 0", "2\n3\n0\n0\n9\n96"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    for(var i = 0;1;i++){\n        input[i] = input[i].split(\" \");\n        var r0 = parseInt(input[i][0],10);\n        var w0 = parseInt(input[i][1],10);\n        var c = parseInt(input[i][2],10);\n        var r = parseInt(input[i][3],10);\n        if(r0 == 0 && w0 == 0 && c == 0 && r == 0)\n            break;\n\n        var a = c * w0;\n        if(a <= r0)\n            console.log(\"0\");\n        else{\n            console.log(Math.floor((a - r0 + r - 1) / r));\n        }\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p02016_1", "type": "JavaScript", "obfuscated": "var a0_0x21a0da = a0_0x23fa;\nfunction a0_0x23fa(YQSKNP, key) {\n    var stringArray = a0_0xfd64();\n    a0_0x23fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23fa(YQSKNP, key);\n}\nvar input = require('fs')[a0_0x21a0da(0x0)](a0_0x21a0da(0x1), 'utf8');\nif (input == a0_0x21a0da(0x2))\n    console[a0_0x21a0da(0x3)]('square1001');\nelse\n    console[a0_0x21a0da(0x3)]('e869120');\nfunction a0_0xfd64() {\n    var _0x45a424 = [\n        'readFileSync',\n        '/dev/stdin',\n        'ani',\n        'log'\n    ];\n    a0_0xfd64 = function () {\n        return _0x45a424;\n    };\n    return a0_0xfd64();\n}", "test_cases": [["ani", "square1001"], ["otouto", "e869120"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nif(input==\"ani\")console.log(\"square1001\");\nelse console.log(\"e869120\");\n", "language": "JavaScript"}
{"filename": "p02125_1", "type": "JavaScript", "obfuscated": "var a0_0x359279 = a0_0x5ee7;\nfunction a0_0x5ee7(lMRNNe, key) {\n    var stringArray = a0_0x59e2();\n    a0_0x5ee7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ee7(lMRNNe, key);\n}\nvar input = require('fs')[a0_0x359279(0x0)](a0_0x359279(0x1), 'utf8');\nvar arr = input[a0_0x359279(0x2)]()['split']('\\x0a');\nvar n = arr[a0_0x359279(0x3)]() - 0x0;\nvar max = 0x0;\nfunction a0_0x59e2() {\n    var _0xb22417 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'toString',\n        'split',\n        'max'\n    ];\n    a0_0x59e2 = function () {\n        return _0xb22417;\n    };\n    return a0_0x59e2();\n}\nfor (var i = 0x1; i <= n; i++) {\n    var s = (i[a0_0x359279(0x4)](0x2) + '')[a0_0x359279(0x5)]('')['map'](Number);\n    var sum = s['reduce']((a, b) => a + b);\n    max = Math[a0_0x359279(0x6)](max, sum);\n}\nconsole['log'](max);", "test_cases": [["2", "1"], ["9", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n = arr.shift()-0;\nvar max=0;\nfor(var i=1;i<=n;i++){\n   var s = (i.toString(2) + \"\").split(\"\").map(Number);\n   var sum = s.reduce((a,b)=>a+b);\n   max=Math.max(max,sum);\n}\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02326_1", "type": "JavaScript", "obfuscated": "var a0_0x1359b9 = a0_0x3b9a;\nvar input = require('fs')[a0_0x1359b9(0x0)]('/dev/stdin', 'utf8');\nvar arr = input[a0_0x1359b9(0x1)]()[a0_0x1359b9(0x2)]('\\x0a');\nvar [h, w] = arr['shift']()['split']('\\x20')['map'](Number);\nvar yx = [];\nfor (var i = 0x0; i < h; i++) {\n    yx[i] = arr[a0_0x1359b9(0x3)]()[a0_0x1359b9(0x2)]('\\x20')['map'](v => 0x1 - (v - 0x0));\n}\nfunction a0_0x3b9a(SAPupE, key) {\n    var stringArray = a0_0xe5a5();\n    a0_0x3b9a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b9a(SAPupE, key);\n}\nfor (var y = 0x1; y < h; y++) {\n    for (var x = 0x1; x < w; x++) {\n        if (yx[y][x] == 0x1)\n            yx[y][x] = Math[a0_0x1359b9(0x4)](yx[y - 0x1][x], yx[y][x - 0x1], yx[y - 0x1][x - 0x1]) + 0x1;\n    }\n}\nfunction a0_0xe5a5() {\n    var _0x58cebf = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'min',\n        'max',\n        'log'\n    ];\n    a0_0xe5a5 = function () {\n        return _0x58cebf;\n    };\n    return a0_0xe5a5();\n}\nvar max = 0x0;\nfor (var y = 0x0; y < h; y++) {\n    for (var x = 0x0; x < w; x++) {\n        max = Math[a0_0x1359b9(0x5)](max, yx[y][x]);\n    }\n}\nconsole[a0_0x1359b9(0x6)](max * max);", "test_cases": [["4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar yx=[];\nfor(var i=0;i<h;i++){\n   yx[i]=arr.shift().split(\" \").map(v=>1-(v-0));\n}\nfor(var y=1;y<h;y++){\n   for(var x=1;x<w;x++){\n      if(yx[y][x]==1)yx[y][x]=Math.min(yx[y-1][x],yx[y][x-1],yx[y-1][x-1])+1;\n   }\n}\nvar max=0;\nfor(var y=0;y<h;y++){\n   for(var x=0;x<w;x++){\n      max=Math.max(max,yx[y][x]);\n   }\n}\nconsole.log(max*max);\n", "language": "JavaScript"}
{"filename": "p02380_1", "type": "JavaScript", "obfuscated": "function a0_0x1c3d(jTdcpN, key) {\n    var stringArray = a0_0x4dad();\n    a0_0x1c3d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c3d(jTdcpN, key);\n}\nvar a0_0x5a89fe = a0_0x1c3d;\nfunction a0_0x4dad() {\n    var _0x5719ff = [\n        'readline',\n        'createInterface',\n        'stdin',\n        'stdout',\n        'line',\n        'split',\n        'sqrt',\n        'sin',\n        'log',\n        'toFixed',\n        'end'\n    ];\n    a0_0x4dad = function () {\n        return _0x5719ff;\n    };\n    return a0_0x4dad();\n}\nvar reader = require(a0_0x5a89fe(0x0))[a0_0x5a89fe(0x1)]({\n    'input': process[a0_0x5a89fe(0x2)],\n    'output': process[a0_0x5a89fe(0x3)]\n});\nreader['on'](a0_0x5a89fe(0x4), function (line) {\n    var _0x3a54e2 = a0_0x1c3d;\n    var rad, a, S, L, h;\n    var e = line[_0x3a54e2(0x5)]('\\x20');\n    var b = Number(e[0x0]);\n    var c = Number(e[0x1]);\n    var d = Number(e[0x2]);\n    rad = d / 0xb4 * Math['PI'];\n    a = Math[_0x3a54e2(0x6)](b * b + c * c - 0x2 * b * c * Math['cos'](rad));\n    S = b * c * Math[_0x3a54e2(0x7)](rad) / 0x2;\n    L = a + b + c;\n    h = b * c * Math[_0x3a54e2(0x7)](rad) / b;\n    console[_0x3a54e2(0x8)](S[_0x3a54e2(0x9)](0x8));\n    console[_0x3a54e2(0x8)](L['toFixed'](0x8));\n    console[_0x3a54e2(0x8)](h['toFixed'](0x8));\n    process['exit']();\n});\nprocess[a0_0x5a89fe(0x2)]['on'](a0_0x5a89fe(0xa), function () {\n});", "test_cases": [["4 3 90", "6.00000000\n12.00000000\n3.00000000"]], "original": "var reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var rad,a,S,L,h;\n  var e = line.split(' ');\n  var b = Number(e[0]);\n  var c = Number(e[1]);\n  var d = Number(e[2]);\n  rad = d / 180 * Math.PI;\n  a = Math.sqrt(b*b+c*c-2*b*c*Math.cos(rad));\n  S = (b*c*Math.sin(rad))/2;\n  L = a+b+c;\n  h = (b*c*Math.sin(rad))/b;\n  console.log(S.toFixed(8));\n  console.log(L.toFixed(8));\n  console.log(h.toFixed(8));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02382_1", "type": "JavaScript", "obfuscated": "var a0_0x46c007 = a0_0x1ee8;\nvar input = require('fs')[a0_0x46c007(0x0)](a0_0x46c007(0x1), a0_0x46c007(0x2));\nfunction a0_0xc6f2() {\n    var _0x9dd77a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'abs',\n        'pow',\n        'toFixed',\n        'log'\n    ];\n    a0_0xc6f2 = function () {\n        return _0x9dd77a;\n    };\n    return a0_0xc6f2();\n}\nvar Arr = input['trim']()[a0_0x46c007(0x3)]('\\x0a');\nvar n = Arr[0x0] - 0x0;\nvar x = Arr[0x1][a0_0x46c007(0x3)]('\\x20')[a0_0x46c007(0x4)](Number);\nvar y = Arr[0x2]['split']('\\x20')[a0_0x46c007(0x4)](Number);\nvar sum1 = 0x0;\nvar sum2 = 0x0;\nvar sum3 = 0x0;\nvar max = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    var a = Math[a0_0x46c007(0x5)](x[i] - y[i]);\n    sum1 += a;\n    sum2 += Math[a0_0x46c007(0x6)](a, 0x2);\n    sum3 += Math[a0_0x46c007(0x6)](a, 0x3);\n    max = Math['max'](max, a);\n}\nfunction a0_0x1ee8(ypwwnp, key) {\n    var stringArray = a0_0xc6f2();\n    a0_0x1ee8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ee8(ypwwnp, key);\n}\nconsole['log'](sum1[a0_0x46c007(0x7)](0x6));\nconsole[a0_0x46c007(0x8)](Math['sqrt'](sum2)[a0_0x46c007(0x7)](0x6));\nconsole[a0_0x46c007(0x8)](Math[a0_0x46c007(0x6)](sum3, 0x1 / 0x3)[a0_0x46c007(0x7)](0x6));\nconsole['log'](max['toFixed'](0x6));", "test_cases": [["3\n1 2 3\n2 0 4", "4.000000\n2.449490\n2.154435\n2.000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr[0]-0;\nvar x=Arr[1].split(\" \").map(Number);\nvar y=Arr[2].split(\" \").map(Number);\nvar sum1=0;\nvar sum2=0;\nvar sum3=0;\nvar max=0;\nfor(var i=0;i<n;i++){\n   var a=Math.abs(x[i]-y[i]);\n   sum1+=a;\n   sum2+=Math.pow(a,2);\n   sum3+=Math.pow(a,3);\n   max=Math.max(max,a);\n}\nconsole.log(sum1.toFixed(6));\nconsole.log(Math.sqrt(sum2).toFixed(6));\nconsole.log(Math.pow(sum3,1/3).toFixed(6));\nconsole.log(max.toFixed(6));", "language": "JavaScript"}
{"filename": "p02440_1", "type": "JavaScript", "obfuscated": "var a0_0x46ea93 = a0_0x29a0;\nvar input = require('fs')[a0_0x46ea93(0x0)]('/dev/stdin', a0_0x46ea93(0x1));\nvar arr = input[a0_0x46ea93(0x2)]()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()[a0_0x46ea93(0x3)]('\\x20')[a0_0x46ea93(0x4)](Number);\nfunction a0_0x41f9() {\n    var _0x35f834 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'max',\n        'log'\n    ];\n    a0_0x41f9 = function () {\n        return _0x35f834;\n    };\n    return a0_0x41f9();\n}\nvar q = arr['shift']() - 0x0;\nfunction a0_0x29a0(YwOxNE, key) {\n    var stringArray = a0_0x41f9();\n    a0_0x29a0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x29a0(YwOxNE, key);\n}\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var [c, b, e] = arr[i][a0_0x46ea93(0x3)]('\\x20')[a0_0x46ea93(0x4)](Number);\n    var m = a[b];\n    if (c == 0x0) {\n        for (var j = b; j < e; j++)\n            m = Math['min'](m, a[j]);\n    } else {\n        for (var j = b; j < e; j++)\n            m = Math[a0_0x46ea93(0x5)](m, a[j]);\n    }\n    s += m + '\\x0a';\n}\nconsole[a0_0x46ea93(0x6)](s['trim']());", "test_cases": [["7\n8 3 7 1 9 1 4\n3\n0 0 3\n0 1 5\n1 0 7", "3\n1\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [c,b,e]=arr[i].split(\" \").map(Number);\n   var m = a[b];\n   if(c==0){\n      for(var j=b;j<e;j++) m=Math.min(m,a[j]);\n   }else{\n      for(var j=b;j<e;j++) m=Math.max(m,a[j]);\n   }\n   s+=m+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02469_1", "type": "JavaScript", "obfuscated": "function a0_0x2ca1(obpuHs, key) {\n    var stringArray = a0_0x69f4();\n    a0_0x2ca1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ca1(obpuHs, key);\n}\nvar a0_0x535efe = a0_0x2ca1;\nfunction gcd(a, b) {\n    if (b > a)\n        return gcd(b, a);\n    if (b == 0x0)\n        return a;\n    return gcd(b, a % b);\n}\nfunction lcm(a, b) {\n    var d = gcd(a, b);\n    return a * b / d;\n}\nvar input = require('fs')[a0_0x535efe(0x0)]('/dev/stdin', a0_0x535efe(0x1))[a0_0x535efe(0x2)]();\nvar lines = input[a0_0x535efe(0x3)]('\\x0a');\nvar n = +lines[a0_0x535efe(0x4)]();\nvar nums = lines[a0_0x535efe(0x4)]()['split']('\\x20')[a0_0x535efe(0x5)](function (num) {\n    return +num;\n});\nfunction a0_0x69f4() {\n    var _0x56a0bf = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x69f4 = function () {\n        return _0x56a0bf;\n    };\n    return a0_0x69f4();\n}\nvar p = 0x1;\nfor (var i = 0x0; i < n; i++) {\n    p = lcm(p, nums[i]);\n}\nconsole[a0_0x535efe(0x6)](p);", "test_cases": [["3\n3 4 6", "12"], ["4\n1 2 3 5", "30"]], "original": "function gcd(a, b) {\n    if (b > a)\n        return gcd(b, a);\n    if (b == 0)\n        return a;\n\n    return gcd(b, a % b);\n}\nfunction lcm(a, b) {\n    var d = gcd(a, b);\n    return a * b / d;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar n = +lines.shift();\n\nvar nums = lines.shift().split(' ').map(function(num){return +num;});\nvar p = 1;\nfor (var i = 0; i < n; i++) {\n    p = lcm(p, nums[i]);\n}\n\nconsole.log(p);", "language": "JavaScript"}
{"filename": "p02540_1", "type": "JavaScript", "obfuscated": "var a0_0x2bf8e4 = a0_0x5fec;\nfunction a0_0x1a2d() {\n    var _0x1277fb = [\n        'gQwoy',\n        'iTzFU',\n        'split',\n        'map',\n        'push',\n        'tIQwD',\n        'QzxHM',\n        'xpkIQ',\n        'RpZof',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1a2d = function () {\n        return _0x1277fb;\n    };\n    return a0_0x1a2d();\n}\nfunction a0_0x5fec(PXAfUZ, key) {\n    var stringArray = a0_0x1a2d();\n    a0_0x5fec = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5fec(PXAfUZ, key);\n}\nfunction Main(input) {\n    var _0x509e7a = a0_0x5fec;\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0], 0xa);\n    var x = [];\n    var y = [];\n    for (var i = 0x1; i <= N; i++) {\n        if (_0x509e7a(0x0) !== _0x509e7a(0x1)) {\n            tmp = input[i][_0x509e7a(0x2)]('\\x20')[_0x509e7a(0x3)](n => parseInt(n, 0xa));\n            x[_0x509e7a(0x4)](tmp[0x0]);\n            y[_0x509e7a(0x4)](tmp[0x1]);\n        } else {\n            if (x[j] > x[k] && y[j] > y[k] || x[j] < x[k] && y[j] < y[k]) {\n                count = count + counts[k];\n            }\n        }\n    }\n    var counts = [];\n    for (var j = 0x0; j < N; j++) {\n        if (_0x509e7a(0x5) !== _0x509e7a(0x5)) {\n            count++;\n        } else {\n            var count = 0x0;\n            for (var k = 0x0; k < N; k++) {\n                if (x[j] > x[k] && y[j] > y[k] || x[j] < x[k] && y[j] < y[k]) {\n                    count++;\n                }\n            }\n            counts['push'](parseInt(count, 0xa));\n        }\n    }\n    for (var j = 0x0; j < N; j++) {\n        var count = 0x1;\n        for (var k = 0x0; k < N; k++) {\n            if ('OHIno' !== _0x509e7a(0x6)) {\n                if (x[j] > x[k] && y[j] > y[k] || x[j] < x[k] && y[j] < y[k]) {\n                    if (_0x509e7a(0x7) === _0x509e7a(0x8)) {\n                        if (x[j] > x[k] && y[j] > y[k] || x[j] < x[k] && y[j] < y[k]) {\n                            count++;\n                        }\n                    } else {\n                        count = count + counts[k];\n                    }\n                }\n            } else {\n                count = count + counts[k];\n            }\n        }\n        console[_0x509e7a(0x9)](count);\n    }\n}\nMain(require('fs')['readFileSync'](a0_0x2bf8e4(0xa), a0_0x2bf8e4(0xb)));", "test_cases": [["4\n1 4\n2 3\n3 1\n4 2", "1\n1\n2\n2"], ["7\n6 4\n4 3\n3 5\n7 1\n2 7\n5 2\n1 6", "3\n3\n1\n1\n2\n3\n2"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  \n  const N = parseInt(input[0], 10);\n\n  var x = [];\n  var y = [];\n\n  for (var i = 1; i <= N; i++) {\n    tmp = input[i].split(\" \").map(n => parseInt(n, 10));\n    x.push(tmp[0]);\n    y.push(tmp[1]);\n  }\n\n  var counts = [];\n\n  for(var j = 0; j < N; j++){\n    var count = 0;\n    for(var k = 0; k < N; k++){\n      if((x[j] > x[k] && y[j] > y[k])||(x[j] < x[k] && y[j] < y[k])){\n        count++;\n      }\n    }\n    counts.push(parseInt(count, 10))\n  }\n\n  for(var j = 0; j < N; j++){\n    var count = 1;\n    for(var k = 0; k < N; k++){\n      if((x[j] > x[k] && y[j] > y[k])||(x[j] < x[k] && y[j] < y[k])){\n        count = count + counts[k];\n      }\n    }\n    console.log(count);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02904_1", "type": "JavaScript", "obfuscated": "var a0_0x3f96c1 = a0_0x4887;\nfunction Main(arg) {\n    var _0xce7d3f = a0_0x4887;\n    var N = arg[_0xce7d3f(0x0)]('\\x0a')[0x0][_0xce7d3f(0x0)]('\\x20')[0x0] - 0x0;\n    var K = arg[_0xce7d3f(0x0)]('\\x0a')[0x0][_0xce7d3f(0x0)]('\\x20')[0x1] - 0x0;\n    var P = arg[_0xce7d3f(0x0)]('\\x0a')[0x1][_0xce7d3f(0x0)]('\\x20')[_0xce7d3f(0x1)](v => v - 0x0);\n    var ans = [];\n    for (var i = 0x0; i < N - K + 0x1; i++) {\n        var tmp = P[_0xce7d3f(0x2)](i, i + K);\n        tmp[_0xce7d3f(0x3)](compareNumbers);\n        ans[i] = P[_0xce7d3f(0x2)](0x0, i)[_0xce7d3f(0x4)](tmp)['concat'](P[_0xce7d3f(0x2)](i + K))['toString']();\n    }\n    var aa = new Set(ans);\n    console[_0xce7d3f(0x5)](aa[_0xce7d3f(0x6)]);\n}\nMain(require('fs')[a0_0x3f96c1(0x7)](a0_0x3f96c1(0x8), a0_0x3f96c1(0x9)));\nfunction compareNumbers(a, b) {\n    return a - b;\n}\nfunction a0_0x4887(voTlvk, key) {\n    var stringArray = a0_0x142d();\n    a0_0x4887 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4887(voTlvk, key);\n}\nfunction a0_0x142d() {\n    var _0x435637 = [\n        'split',\n        'map',\n        'slice',\n        'sort',\n        'concat',\n        'log',\n        'size',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x142d = function () {\n        return _0x435637;\n    };\n    return a0_0x142d();\n}", "test_cases": [["5 3\n0 2 1 4 3", "2"], ["4 4\n0 1 2 3", "1"], ["10 4\n2 0 1 3 7 5 4 6 8 9", "6"]], "original": "function Main(arg) {\n \n    var N = arg.split(\"\\n\")[0].split(\" \")[0]-0;\n    var K = arg.split(\"\\n\")[0].split(\" \")[1]-0;\n    var P = arg.split(\"\\n\")[1].split(\" \").map(v => v-0);\n\n    var ans = [];\n    for (var i = 0; i < N - K + 1; i++){\n        var tmp = P.slice(i, i + K);\n        tmp.sort(compareNumbers);\n        ans[i] = P.slice(0, i).concat(tmp).concat(P.slice(i + K)).toString();\n    }\n\n    var aa = new Set(ans);\n\n    console.log(aa.size);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction compareNumbers(a, b) { //for sort\n    return a - b;\n}\n", "language": "JavaScript"}
{"filename": "p02978_1", "type": "JavaScript", "obfuscated": "function a0_0x1ac8(qFQhfU, key) {\n    var stringArray = a0_0xb57e();\n    a0_0x1ac8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ac8(qFQhfU, key);\n}\nfunction a0_0xb57e() {\n    var _0x580cf9 = [\n        'split',\n        'map',\n        'length',\n        'push',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0xb57e = function () {\n        return _0x580cf9;\n    };\n    return a0_0xb57e();\n}\nvar a0_0x8a113e = a0_0x1ac8;\nfunction Main(input) {\n    var _0x30301e = a0_0x1ac8;\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0]);\n    const As = input[0x1][_0x30301e(0x0)]('\\x20')[_0x30301e(0x1)](x => parseInt(x));\n    var now = As;\n    while (!![]) {\n        var min = -0x1;\n        var next = [];\n        for (i = 0x1; i < now[_0x30301e(0x2)] - 0x1; i++) {\n            if (min == -0x1 || now[min] > now[i])\n                min = i;\n            if (min == now[i] && now[i - 0x1] + now[i + 0x1] < now[min - 0x1] + now[min + 0x1])\n                min = i;\n        }\n        if (now[min] * 0x2 > now[now['length'] - 0x2])\n            min = now['length'] - 0x2;\n        for (i = 0x0; i < now['length']; i++) {\n            if (i == min - 0x1) {\n                next[_0x30301e(0x3)](now[min - 0x1] + now[min]);\n            } else if (i == min) {\n            } else if (i == min + 0x1) {\n                next[_0x30301e(0x3)](now[min + 0x1] + now[min]);\n            } else {\n                next[_0x30301e(0x3)](now[i]);\n            }\n        }\n        now = next;\n        if (now['length'] == 0x2)\n            break;\n    }\n    console[_0x30301e(0x4)](now[0x0] + now[0x1]);\n}\nMain(require('fs')[a0_0x8a113e(0x5)](a0_0x8a113e(0x6), a0_0x8a113e(0x7)));", "test_cases": [["4\n3 1 4 2", "16"], ["6\n5 2 4 1 6 9", "51"], ["10\n3 1 4 1 5 9 2 6 5 3", "115"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst N = parseInt(input[0])\n\tconst As = input[1].split(\" \").map(x => parseInt(x))\n\tvar now = As\n\twhile(true){\n\t\tvar min = -1\n\t\tvar next = []\n\t\tfor(i=1; i<now.length-1; i++){\n\t\t\tif(min == -1 || now[min] > now[i]) min = i\n\t\t\tif(min == now[i] && now[i-1] + now[i+1] < now[min-1] + now[min+1]) min = i\n\t\t}\n\t\tif(now[min]*2 > now[now.length-2]) min = now.length-2\n\t\tfor(i=0; i<now.length; i++){\n\t\t\tif(i == min-1){\n\t\t\t\tnext.push(now[min-1]+now[min])\n\t\t\t}else if(i == min){\n\n\t\t\t}else if(i == min+1){\n\t\t\t\tnext.push(now[min+1]+now[min])\n\t\t\t}else{\n\t\t\t\tnext.push(now[i])\n\t\t\t}\n\t\t}\n\t\tnow = next\n\t\tif(now.length == 2) break\n\t}\n\tconsole.log(now[0] + now[1])\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03135_1", "type": "JavaScript", "obfuscated": "const a0_0x4369bd = a0_0x2d36;\nfunction a0_0x423e() {\n    const _0x176b38 = [\n        'trim',\n        'split',\n        'map',\n        'log',\n        'toFixed',\n        '/dev/stdin'\n    ];\n    a0_0x423e = function () {\n        return _0x176b38;\n    };\n    return a0_0x423e();\n}\nfunction main(input) {\n    const _0x363974 = a0_0x2d36;\n    const nums = input[_0x363974(0x0)]()[_0x363974(0x1)](/\\s/)[_0x363974(0x2)](str => {\n        return Number(str);\n    });\n    console[_0x363974(0x3)]((nums[0x0] / nums[0x1])[_0x363974(0x4)](0xa));\n}\nfunction a0_0x2d36(HQyMYK, key) {\n    const stringArray = a0_0x423e();\n    a0_0x2d36 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d36(HQyMYK, key);\n}\nmain(require('fs')['readFileSync'](a0_0x4369bd(0x5), 'utf8'));", "test_cases": [["8 3", "2.6666666667"], ["99 1", "99.0000000000"], ["1 100", "0.0100000000"]], "original": "function main(input) {\n    const nums = input.trim().split(/\\s/).map(str=>{return Number(str)});\n    console.log((nums[0] / nums[1]).toFixed(10));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03187_1", "type": "JavaScript", "obfuscated": "function a0_0x5a12() {\n    const _0x43dcc4 = [\n        'split',\n        'slice',\n        'filter',\n        'map',\n        'length',\n        'concat',\n        'pop',\n        'log',\n        'apply',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5a12 = function () {\n        return _0x43dcc4;\n    };\n    return a0_0x5a12();\n}\nconst a0_0x3b605e = a0_0x417b;\nfunction a0_0x417b(pPMVji, key) {\n    const stringArray = a0_0x5a12();\n    a0_0x417b = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x417b(pPMVji, key);\n}\nfunction main(input) {\n    'use strict';\n    const _0x438791 = a0_0x417b;\n    const lines = input[_0x438791(0x0)]('\\x0a');\n    const firstLine = lines[0x0][_0x438791(0x0)]('\\x20')['map'](value => +value);\n    const L = firstLine[0x0];\n    const N = firstLine[0x1];\n    let xn = lines[_0x438791(0x1)](0x1)[_0x438791(0x2)](value => value)[_0x438791(0x3)](value => +value);\n    let costs = [];\n    const search = (x, xn, sum) => {\n        const _0x515503 = a0_0x417b;\n        if (xn[_0x515503(0x4)] === 0x0) {\n            costs['push'](sum);\n            return;\n        }\n        const leftDistance = xn[0x0] >= x ? xn[0x0] - x : L - x + xn[0x0];\n        const rightDistance = xn[xn['length'] - 0x1] <= x ? x - xn[xn[_0x515503(0x4)] - 0x1] : x + (L - xn[xn[_0x515503(0x4)] - 0x1]);\n        const left = xn['concat']();\n        const leftX = left['shift']();\n        const right = xn[_0x515503(0x5)]();\n        const rightX = right[_0x515503(0x6)]();\n        search(leftX, left, sum + leftDistance);\n        search(rightX, right, sum + rightDistance);\n    };\n    search(0x0, xn, 0x0);\n    console[_0x438791(0x7)](Math['max'][_0x438791(0x8)](null, costs));\n}\nmain(require('fs')[a0_0x3b605e(0x9)](a0_0x3b605e(0xa), a0_0x3b605e(0xb)));", "test_cases": [["10 3\n2\n7\n9", "15"], ["10 6\n1\n2\n3\n6\n7\n9", "27"], ["314159265 7\n21662711\n77271666\n89022761\n156626166\n160332356\n166902656\n298992265", "1204124749"]], "original": "function main(input) {\n    \"use strict\";\n    const lines = input.split(\"\\n\");\n    const firstLine = lines[0].split(\" \").map((value) => +value);\n    const L = firstLine[0];\n    const N = firstLine[1];\n    let xn = lines.slice(1).filter((value) => value).map((value) => +value);\n\n    let costs = [];\n    const search = (x, xn, sum) => {\n        if (xn.length === 0) {\n            costs.push(sum);\n            return;\n        }\n        const leftDistance = xn[0] >= x ? xn[0] - x : (L - x) + xn[0];\n        const rightDistance = xn[xn.length - 1] <= x ? x - xn[xn.length - 1] : x + (L - xn[xn.length - 1]);\n        const left = xn.concat();\n        const leftX = left.shift();\n        const right = xn.concat();\n        const rightX = right.pop();\n        search(leftX, left, sum + leftDistance);\n        search(rightX, right, sum + rightDistance);\n    }\n\n    search(0, xn, 0);\n    console.log(Math.max.apply(null, costs));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03195_1", "type": "JavaScript", "obfuscated": "function a0_0x3f8c(fiZmNu, key) {\n    var stringArray = a0_0x36f5();\n    a0_0x3f8c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f8c(fiZmNu, key);\n}\nvar a0_0x36b785 = a0_0x3f8c;\nfunction main(input) {\n    var _0x437e4c = a0_0x3f8c;\n    var line1 = parseInt(input[0x0]);\n    var ans = ![];\n    for (var i = 0x1; i < input[_0x437e4c(0x0)]; i++) {\n        if (_0x437e4c(0x1) !== _0x437e4c(0x1)) {\n            var n = parseInt(input[i]);\n            if (n % 0x2 === 0x1)\n                ans = !![];\n            ;\n        } else {\n            var n = parseInt(input[i]);\n            if (n % 0x2 === 0x1)\n                ans = !![];\n            ;\n        }\n    }\n    console[_0x437e4c(0x2)](ans ? _0x437e4c(0x3) : _0x437e4c(0x4));\n}\nfunction parse(line) {\n    var _0x4c0b6f = a0_0x3f8c;\n    var ret = [];\n    var arr = line[_0x4c0b6f(0x5)]('\\x20');\n    for (var i = 0x0; i < arr[_0x4c0b6f(0x0)]; i++) {\n        ret[_0x4c0b6f(0x6)](parseInt(arr[i]));\n    }\n    return ret;\n}\nvar input = '';\nprocess['stdin'][a0_0x36b785(0x7)]();\nprocess[a0_0x36b785(0x8)][a0_0x36b785(0x9)]('utf8');\nfunction a0_0x36f5() {\n    var _0x4ea906 = [\n        'length',\n        'jdCiX',\n        'log',\n        'first',\n        'second',\n        'split',\n        'push',\n        'resume',\n        'stdin',\n        'setEncoding',\n        'data',\n        'end'\n    ];\n    a0_0x36f5 = function () {\n        return _0x4ea906;\n    };\n    return a0_0x36f5();\n}\nprocess[a0_0x36b785(0x8)]['on'](a0_0x36b785(0xa), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x36b785(0x8)]['on'](a0_0x36b785(0xb), function () {\n    var _0x3fda6a = a0_0x3f8c;\n    input = input[_0x3fda6a(0x5)]('\\x0a');\n    main(input);\n});", "test_cases": [["2\n1\n2", "first"], ["3\n100000\n30000\n20000", "second"]], "original": "function main(input){\n  var line1 = parseInt(input[0]);\n \n  var ans = false;\n  for (var i=1; i<input.length; i++){\n    var n = parseInt(input[i]);\n    \n    if (n%2 ===1)\n      ans = true;;\n  }\n\n  console.log(ans ? 'first' : 'second');\n}\n\n\nfunction parse(line){\n  var ret = [];\n  var arr = line.split(' ');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(parseInt(arr[i]));\n  }\n  return ret;\n}\n\nvar input = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main(input);\n});\n", "language": "JavaScript"}
{"filename": "p03276_1", "type": "JavaScript", "obfuscated": "var a0_0x268e49 = a0_0x3d46;\nfunction a0_0x3901() {\n    var _0x2050ac = [\n        'split',\n        'length',\n        'TeWWq',\n        'pop',\n        'map',\n        'findIndex',\n        'max',\n        'abs',\n        'min',\n        'OCxXI',\n        '/dev/stdin'\n    ];\n    a0_0x3901 = function () {\n        return _0x2050ac;\n    };\n    return a0_0x3901();\n}\nfunction Main(input) {\n    var _0x5ab466 = a0_0x3d46;\n    input = input[_0x5ab466(0x0)]('\\x0a');\n    if (input[input[_0x5ab466(0x1)] - 0x1] === '') {\n        if (_0x5ab466(0x2) !== _0x5ab466(0x2)) {\n            return e => 0x0;\n        } else {\n            input[_0x5ab466(0x3)]();\n        }\n    }\n    const N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    const K = input[0x0][_0x5ab466(0x0)]('\\x20')[0x1] - 0x0;\n    const x = input[0x1][_0x5ab466(0x0)]('\\x20')[_0x5ab466(0x4)](e => {\n        return e - 0x0;\n    });\n    var pointer = x[_0x5ab466(0x5)](e => {\n        if ('xaWod' !== 'xaWod') {\n            return e - 0x0;\n        } else {\n            return e => 0x0;\n        }\n    }) - K;\n    if (pointer < 0x0) {\n        pointer = 0x0;\n    }\n    var temp;\n    var ret = Infinity;\n    for (var i = 0x0; i < K; i++) {\n        if (pointer + i + K - 0x1 >= x[_0x5ab466(0x1)]) {\n            if ('AYgrU' === 'AYgrU') {\n                break;\n            } else {\n                temp = Math[_0x5ab466(0x6)](Math[_0x5ab466(0x7)](x[pointer + i]), Math[_0x5ab466(0x7)](x[pointer + i + K - 0x1]));\n            }\n        }\n        if (x[pointer + i] * x[pointer + i + K - 0x1] < 0x0) {\n            temp = Math[_0x5ab466(0x8)](-x[pointer + i], x[pointer + i + K - 0x1]) - x[pointer + i] + x[pointer + i + K - 0x1];\n        } else {\n            if ('OCxXI' === _0x5ab466(0x9)) {\n                temp = Math[_0x5ab466(0x6)](Math[_0x5ab466(0x7)](x[pointer + i]), Math[_0x5ab466(0x7)](x[pointer + i + K - 0x1]));\n            } else {\n                pointer = 0x0;\n            }\n        }\n        ret = Math[_0x5ab466(0x8)](ret, temp);\n    }\n    console['log'](ret);\n}\nfunction a0_0x3d46(VgZVJZ, key) {\n    var stringArray = a0_0x3901();\n    a0_0x3d46 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d46(VgZVJZ, key);\n}\nMain(require('fs')['readFileSync'](a0_0x268e49(0xa), 'utf8'));", "test_cases": [["5 3\n-30 -10 10 20 50", "40"], ["3 2\n10 20 30", "20"], ["1 1\n0", "0"], ["8 5\n-9 -7 -4 -3 1 2 3 4", "10"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const K=input[0].split(' ')[1]-0;\n  const x=input[1].split(' ').map(e=>{\n    return e-0;\n  });\n  var pointer=x.findIndex(e=>{\n    return e=>0;\n  })-K;\n  if(pointer<0){\n    pointer=0;\n  }\n  var temp;\n  var ret=Infinity;\n  for(var i=0;i<K;i++){\n    if(pointer+i+K-1>=x.length){\n      break;\n    }\n    if(x[pointer+i]*x[pointer+i+K-1]<0){\n      temp=Math.min(-x[pointer+i],x[pointer+i+K-1])-x[pointer+i]+x[pointer+i+K-1];\n    }else{\n      temp=Math.max(Math.abs(x[pointer+i]),Math.abs(x[pointer+i+K-1]));\n    }\n    ret=Math.min(ret,temp);\n  }\n  console.log(ret);\n      \n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03313_1", "type": "JavaScript", "obfuscated": "function a0_0x2e4a(kiRaYJ, key) {\n    var stringArray = a0_0x43c0();\n    a0_0x2e4a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e4a(kiRaYJ, key);\n}\nvar a0_0x4c4143 = a0_0x2e4a;\nfunction Main(s) {\n    var _0x4e00b7 = a0_0x2e4a;\n    s = s[_0x4e00b7(0x0)]('\\x0a');\n    var n = +s[0x0];\n    var m = 0x1 << n;\n    var a = s[0x1][_0x4e00b7(0x0)]('\\x20')[_0x4e00b7(0x1)](a => +a);\n    var b = [a[0x0]], c = [[\n                a[0x0],\n                0x0\n            ]], d = [[\n                -0x1,\n                -0x1\n            ]];\n    for (var i = 0x1; i < m; i++) {\n        f(i);\n    }\n    console[_0x4e00b7(0x2)](b['slice'](0x1)[_0x4e00b7(0x3)]('\\x0a'));\n    function f(n) {\n        var _0x44d0a0 = a0_0x2e4a;\n        var q = {}, s = n, t = 0x0;\n        while (s) {\n            t++;\n            s >>= 0x1;\n        }\n        for (var i = 0x0; i < t; i++) {\n            var u = n & (0x1 << i ^ 0xfffff);\n            if (u === n)\n                continue;\n            q[c[u][0x1]] = c[u][0x0];\n            q[d[u][0x1]] = d[u][0x0];\n        }\n        s = [\n            a[n],\n            n\n        ], t = [\n            -0x1,\n            -0x1\n        ];\n        for (i in q) {\n            if (t[0x0] > q[i])\n                continue;\n            if (s[0x0] > q[i])\n                t = [\n                    q[i],\n                    i\n                ];\n            else {\n                t = s;\n                s = [\n                    q[i],\n                    i\n                ];\n            }\n        }\n        b[n] = Math[_0x44d0a0(0x4)](b[n - 0x1], t[0x0] + s[0x0]);\n        c[n] = t;\n        d[n] = s;\n    }\n}\nMain(require('fs')[a0_0x4c4143(0x5)](a0_0x4c4143(0x6), 'utf8'));\nfunction a0_0x43c0() {\n    var _0x2d2075 = [\n        'split',\n        'map',\n        'log',\n        'join',\n        'max',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x43c0 = function () {\n        return _0x2d2075;\n    };\n    return a0_0x43c0();\n}", "test_cases": [["2\n1 2 3 1", "3\n4\n5"], ["3\n10 71 84 33 6 47 23 25", "81\n94\n155\n155\n155\n155\n155"], ["4\n75 26 45 72 81 47 97 97 2 2 25 82 84 17 56 32", "101\n120\n147\n156\n156\n178\n194\n194\n194\n194\n194\n194\n194\n194\n194"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = +s[0];\n  var m = 1 << n;\n  var a = s[1].split(\" \").map(a=>+a);\n  var b = [a[0]], c = [[a[0],0]], d = [[-1,-1]];\n  for(var i = 1; i < m; i++){\n    f(i);\n  }\n  console.log(b.slice(1).join(\"\\n\"));\n  \n  function f(n){\n    var q = {}, s = n, t = 0;\n    while(s){\n      t++;\n      s >>= 1;\n    }\n    for(var i = 0; i < t; i++){\n      var u = n & ((1 << i) ^ 0xFFFFF);\n      if(u === n)continue;\n      q[c[u][1]] = c[u][0];\n      q[d[u][1]] = d[u][0];\n    }\n    s = [a[n],n], t = [-1,-1];\n    for(i in q){\n      if(t[0] > q[i])continue;\n      if(s[0] > q[i])t = [q[i],i];\n      else{t = s; s = [q[i],i];}\n    }\n    b[n] = Math.max(b[n-1], t[0] + s[0]);\n    c[n] = t;\n    d[n] = s;\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03334_1", "type": "JavaScript", "obfuscated": "var a0_0x147c07 = a0_0x46f1;\nfunction Main(s) {\n    var _0x463ba2 = a0_0x46f1;\n    s = s[_0x463ba2(0x0)]('\\x20')[_0x463ba2(0x1)](a => +a);\n    var n = s[0x0];\n    var a = calc(s[0x1]);\n    var b = calc(s[0x2]);\n    var ans = [];\n    var k = 0x0;\n    for (var i = 0x0; i < 0x2 * n; i++)\n        for (var j = 0x0; j < 0x2 * n; j++) {\n            if (f(a, i, j) && f(b, i, j))\n                ans[k++] = i + '\\x20' + j;\n            if (k === n * n) {\n                console[_0x463ba2(0x2)](ans['join']('\\x0a'));\n                return;\n            }\n        }\n}\nfunction a0_0x3ab3() {\n    var _0x2faa1e = [\n        'split',\n        'map',\n        'log',\n        'floor',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x3ab3 = function () {\n        return _0x2faa1e;\n    };\n    return a0_0x3ab3();\n}\nfunction calc(n) {\n    var s = 0x1;\n    while ((n & 0x3) === 0x0) {\n        s++;\n        n >>>= 0x2;\n    }\n    return [\n        s,\n        n & 0x1\n    ];\n}\nfunction a0_0x46f1(nbtoZf, key) {\n    var stringArray = a0_0x3ab3();\n    a0_0x46f1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x46f1(nbtoZf, key);\n}\nfunction f(s, y, x) {\n    var _0x9ba1d3 = a0_0x46f1;\n    y = Math[_0x9ba1d3(0x3)](y / s[0x0]);\n    if (!s[0x1])\n        return !(y & 0x1);\n    x = Math[_0x9ba1d3(0x3)](x / s[0x0]);\n    return !(x + y & 0x1);\n}\nMain(require('fs')[a0_0x147c07(0x4)]('/dev/stdin', a0_0x147c07(0x5)));", "test_cases": [["2 1 2", "0 0\n0 2\n2 0\n2 2"], ["3 1 5", "0 0\n0 2\n0 4\n1 1\n1 3\n1 5\n2 0\n2 2\n2 4"]], "original": "function Main(s){\n  s = s.split(\" \").map(a=>+a);\n  var n = s[0];\n  var a = calc(s[1]);\n  var b = calc(s[2]);\n  var ans = [];\n  var k = 0;\n  for(var i = 0; i < 2 * n; i++)\n  for(var j = 0; j < 2 * n; j++){\n    if(f(a,i,j) && f(b,i,j))ans[k++] = i + \" \" + j;\n    if(k === n * n){console.log(ans.join(\"\\n\"));return;}\n  }\n}\nfunction calc(n){\n  var s = 1;\n  while((n & 3) === 0){\n    s++;\n    n >>>= 2;\n  }\n  return [s, n & 1];\n}\nfunction f(s,y,x){\n  y = Math.floor(y / s[0]);\n  if(!s[1])return !(y&1);\n  x = Math.floor(x / s[0]);\n  return !(x+y&1);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03451_1", "type": "JavaScript", "obfuscated": "function a0_0x2078() {\n    var _0xbd6fa7 = [\n        'split',\n        'map',\n        'length',\n        'bkwoq',\n        'PQFdb',\n        'slice',\n        'naVsS',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2078 = function () {\n        return _0xbd6fa7;\n    };\n    return a0_0x2078();\n}\nvar a0_0x4d1a5f = a0_0x3e9f;\nfunction Main(input) {\n    var _0x1ae907 = a0_0x3e9f;\n    input = input[_0x1ae907(0x0)]('\\x0a');\n    var a1 = input[0x1][_0x1ae907(0x0)]('\\x20')[_0x1ae907(0x1)](e => {\n        return parseInt(e);\n    });\n    var a2 = input[0x2]['split']('\\x20')['map'](e => {\n        return parseInt(e);\n    });\n    var j = a1[_0x1ae907(0x2)] - 0x1;\n    var m = 0x0, n = a1[_0x1ae907(0x2)] - 0x2;\n    var r = 0x0;\n    var temp;\n    for (var i = j; i >= m; i--) {\n        if (_0x1ae907(0x3) !== _0x1ae907(0x4)) {\n            temp = sum(a1['slice'](m, i + 0x1)) + sum(a2[_0x1ae907(0x5)](i));\n            if (r < temp)\n                r = temp;\n        } else {\n            r += arr[i];\n        }\n    }\n    function sum(arr) {\n        var _0x46d127 = a0_0x3e9f;\n        var r = 0x0;\n        for (var i = 0x0; i < arr['length']; i++) {\n            if (_0x46d127(0x6) === 'naVsS') {\n                r += arr[i];\n            } else {\n                return parseInt(e);\n            }\n        }\n        return r;\n    }\n    console['log'](r);\n}\nfunction a0_0x3e9f(nBgpPa, key) {\n    var stringArray = a0_0x2078();\n    a0_0x3e9f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e9f(nBgpPa, key);\n}\nMain(require('fs')[a0_0x4d1a5f(0x7)](a0_0x4d1a5f(0x8), a0_0x4d1a5f(0x9)));", "test_cases": [["5\n3 2 2 4 1\n1 2 2 2 1", "14"], ["4\n1 1 1 1\n1 1 1 1", "5"], ["7\n3 3 4 5 4 5 3\n5 3 4 4 2 3 2", "29"], ["1\n2\n3", "5"]], "original": "function Main(input) {\ninput = input.split(\"\\n\");\n    var a1 = input[1].split(' ').map(e => { return parseInt(e) })\n    var a2 = input[2].split(' ').map(e => { return parseInt(e) })\n    var j = a1.length - 1\n    var m = 0, n = a1.length - 2\n    var r = 0;\n    var temp;\n\n    for (var i = j; i >= m; i--) {\n        temp = sum(a1.slice(m, i+1)) + sum(a2.slice(i))\n        if (r < temp) r = temp\n    }\n\n    function sum(arr) {\n        var r = 0\n        for (var i = 0; i < arr.length; i++) {\n            r += arr[i]\n        }\n        return r\n    }\n\n    console.log(r)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03525_1", "type": "JavaScript", "obfuscated": "function a0_0x2721() {\n    const _0x1ab861 = [\n        'log',\n        'trim',\n        'split',\n        'map',\n        'fill',\n        'min',\n        'readFileSync'\n    ];\n    a0_0x2721 = function () {\n        return _0x1ab861;\n    };\n    return a0_0x2721();\n}\nconst a0_0x2a8000 = a0_0x255a;\nfunction a0_0x255a(cfHVES, key) {\n    const stringArray = a0_0x2721();\n    a0_0x255a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x255a(cfHVES, key);\n}\nconsole[a0_0x2a8000(0x0)]((args => {\n    const _0x4e14a9 = a0_0x255a;\n    const [[N], D] = args[_0x4e14a9(0x1)]()[_0x4e14a9(0x2)]('\\x0a')['map'](r => r[_0x4e14a9(0x2)]('\\x20')[_0x4e14a9(0x3)](v => v | 0x0));\n    if (N === 0x1)\n        return '' + D[0x0];\n    const q = Array(0xd)[_0x4e14a9(0x4)](0x0);\n    let _s = 0xc, s = 0x1;\n    for (let i = 0x0; i < N; i++) {\n        if (++q[D[i]] > 0x2)\n            return '0';\n        if (D[i] < _s)\n            _s = D[i];\n        if (q[D[i]] === 0x2)\n            _s = Math[_0x4e14a9(0x5)](_s, 0x18 - 0x2 * D[i]);\n    }\n    if (q[0xc] > 0x1 || q[0x0] > 0x0)\n        return '0';\n    const mask = q['reduce']((a, b, i) => a | (b === 0x1 ? 0x0 : 0x1 << i), 0x1);\n    for (let m = 0x0; m < 0x1 << 0xd; m = m + 0x1 | mask) {\n        let min = _s;\n        for (let a = 0x1; a <= 0xc; a++) {\n            if (!q[a])\n                continue;\n            for (let b = a + 0x1; b <= 0xc; b++) {\n                if (!q[b])\n                    continue;\n                let t = b - a;\n                if (q[a] === 0x1 && q[b] === 0x1)\n                    t = m >> a & 0x1 ^ m >> b & 0x1 ? 0x18 - a - b : t;\n                min = Math[_0x4e14a9(0x5)](min, t);\n            }\n        }\n        if (s < min)\n            s = min;\n    }\n    return '' + s;\n})(require('fs')[a0_0x2a8000(0x6)]('/dev/stdin', 'utf8')));", "test_cases": [["3\n7 12 8", "4"], ["2\n11 11", "2"], ["1\n0", "0"]], "original": "console.log((args=>{\n  const [[N],D] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0));\n  if ( N === 1 ) return `${D[0]}`;\n  const q = Array(13).fill(0);\n  let _s = 12, s = 1;\n  for ( let i = 0; i < N; i++ ) {\n    if ( ++q[D[i]] > 2 ) return '0';\n    if ( D[i] < _s ) _s = D[i];\n    if ( q[D[i]] === 2 ) _s = Math.min(_s,24-2*D[i]);\n  }\n  if ( q[12] > 1 || q[0] > 0 ) return '0';\n  const mask = q.reduce((a,b,i)=>a|(b===1?0:1<<i),1);\n  for ( let m = 0; m < 1<<13; m = m+1|mask ) {\n    let min = _s;\n    for ( let a = 1; a <= 12; a++ ) {\n      if ( !q[a] ) continue;\n      for ( let b = a+1; b <= 12; b++ ) {\n        if ( !q[b] ) continue;\n        let t = b - a;\n        if ( q[a]===1 && q[b] === 1 ) t = (m>>a&1^m>>b&1)?24-a-b:t;\n        min = Math.min( min, t );\n      }\n    }\n    if ( s < min ) s = min;\n  }\n  return `${s}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03534_1", "type": "JavaScript", "obfuscated": "function a0_0x4327(CrFkXA, key) {\n    var stringArray = a0_0x2dac();\n    a0_0x4327 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4327(CrFkXA, key);\n}\nvar a0_0x148e61 = a0_0x4327;\nfunction Main(s) {\n    var _0x570317 = a0_0x4327;\n    s = s['trim']();\n    var a = 0x0, b = 0x0, c = 0x0;\n    var ans = _0x570317(0x0);\n    for (var i = 0x0; i < s[_0x570317(0x1)]; i++) {\n        if (s[i] === 'a')\n            a++;\n        else if (s[i] === 'b')\n            b++;\n        else\n            c++;\n    }\n    if (Math[_0x570317(0x2)](a, b, c) - Math[_0x570317(0x3)](a, b, c) > 0x1)\n        ans = 'NO';\n    console[_0x570317(0x4)](ans);\n}\nfunction a0_0x2dac() {\n    var _0x705d12 = [\n        'YES',\n        'length',\n        'max',\n        'min',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2dac = function () {\n        return _0x705d12;\n    };\n    return a0_0x2dac();\n}\nMain(require('fs')[a0_0x148e61(0x5)](a0_0x148e61(0x6), a0_0x148e61(0x7)));", "test_cases": [["abac", "YES"], ["aba", "NO"], ["babacccabab", "YES"]], "original": "function Main(s) {\n  s = s.trim();\n  var a = 0, b = 0, c = 0;\n  var ans = \"YES\";\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === \"a\")a++;\n    else if(s[i] === \"b\")b++;\n    else c++;\n  }\n  if(Math.max(a, b, c) - Math.min(a, b, c) > 1)ans = \"NO\";\n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03700_1", "type": "JavaScript", "obfuscated": "const a0_0x415168 = a0_0x2171;\nfunction a0_0x1b18() {\n    const _0x2b6e45 = [\n        'log',\n        'split',\n        'map',\n        'ceil',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1b18 = function () {\n        return _0x2b6e45;\n    };\n    return a0_0x1b18();\n}\nfunction a0_0x2171(ziyKYr, key) {\n    const stringArray = a0_0x1b18();\n    a0_0x2171 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x2171(ziyKYr, key);\n}\nconsole[a0_0x415168(0x0)]((args => {\n    const _0x5f1b7e = a0_0x2171;\n    const [[N, A, B], ...h] = args['trim']()[_0x5f1b7e(0x1)]`\\n`[_0x5f1b7e(0x2)](r => r[_0x5f1b7e(0x1)]` `[_0x5f1b7e(0x2)](v => v | 0x0));\n    let ok = Math[_0x5f1b7e(0x3)](0x3b9aca00 / B), ng = 0x0;\n    bisect:\n        while (ok > ng + 0x1) {\n            let m = ok + ng >> 0x1, k = m;\n            for (let i = 0x0; i < N; i++) {\n                let r = h[i] - m * B;\n                if (r <= 0x0)\n                    continue;\n                k -= Math[_0x5f1b7e(0x3)](r / (A - B));\n            }\n            if (k >= 0x0)\n                ok = m;\n            else\n                ng = m;\n        }\n    return '' + ok;\n})(require('fs')[a0_0x415168(0x4)](a0_0x415168(0x5), a0_0x415168(0x6))));", "test_cases": [["4 5 3\n8\n7\n4\n2", "2"], ["2 10 4\n20\n20", "4"], ["5 2 1\n900000000\n900000000\n1000000000\n1000000000\n1000000000", "800000000"]], "original": "console.log((args=>{\n  const [[N,A,B],...h] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let ok = Math.ceil(1e9/B), ng = 0;\n  bisect: while ( ok > ng+1 ) {\n    let m = (ok+ng) >> 1, k = m;\n    for ( let i = 0; i < N; i++ ) {\n      let r = h[i] - m*B;\n      if ( r <= 0 ) continue;\n      k -= Math.ceil(r/(A-B));\n    }\n    if ( k >= 0 ) ok = m;\n    else ng = m;\n  }\n  return `${ok}`;\n})(require('fs').readFileSync('/dev/stdin','utf8')));\n", "language": "JavaScript"}
{"filename": "p03763_1", "type": "JavaScript", "obfuscated": "function a0_0x24dd() {\n    var _0x48497d = [\n        'split',\n        'abcdefghijklmnopqrstuvwxyz',\n        'fill',\n        'length',\n        'findIndex',\n        'FKLBu',\n        'kxqKr',\n        'repeat',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x24dd = function () {\n        return _0x48497d;\n    };\n    return a0_0x24dd();\n}\nvar a0_0xc005cf = a0_0x4bec;\nfunction a0_0x4bec(Lahhbc, key) {\n    var stringArray = a0_0x24dd();\n    a0_0x4bec = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4bec(Lahhbc, key);\n}\nfunction Main(input) {\n    var _0x91393f = a0_0x4bec;\n    input = input[_0x91393f(0x0)]('\\x0a');\n    var S = _0x91393f(0x1)['split']('');\n    var array = new Array(0x1a);\n    array[_0x91393f(0x2)](0x0);\n    var temp;\n    for (var i = 0x1; i < input['length']; i++) {\n        temp = new Array(0x1a);\n        temp[_0x91393f(0x2)](0x0);\n        for (var j = 0x0; j < input[i][_0x91393f(0x3)]; j++) {\n            temp[S[_0x91393f(0x4)](e => {\n                return e === input[i][j];\n            })]++;\n        }\n        for (var j = 0x0; j < 0x1a; j++) {\n            if (_0x91393f(0x5) !== _0x91393f(0x5)) {\n                array[j] = temp[j];\n            } else {\n                if (array[j] > temp[j] || i === 0x1) {\n                    array[j] = temp[j];\n                }\n            }\n        }\n    }\n    var ret = '';\n    array['forEach']((e, i) => {\n        var _0x49323b = a0_0x4bec;\n        if (_0x49323b(0x6) === _0x49323b(0x6)) {\n            ret += S[i][_0x49323b(0x7)](e);\n        } else {\n            return e === input[i][j];\n        }\n    });\n    console[_0x91393f(0x8)](ret);\n}\nMain(require('fs')[a0_0xc005cf(0x9)](a0_0xc005cf(0xa), a0_0xc005cf(0xb)));", "test_cases": [["3\ncbaa\ndaacc\nacacac", "aac"], ["3\na\naa\nb", ""]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var S=\"abcdefghijklmnopqrstuvwxyz\".split('');\n  var array=new Array(26);\n  array.fill(0);\n  var temp;\n  for(var i=1;i<input.length;i++){\n    temp=new Array(26);\n    temp.fill(0);\n    for(var j=0;j<input[i].length;j++){\n      temp[S.findIndex(e=>{return e===input[i][j];})]++;\n    }\n    \n    for(var j=0;j<26;j++){\n      if(array[j]>temp[j]||i===1){\n        array[j]=temp[j];\n      }\n    }\n  }\n  var ret='';\n  array.forEach((e,i)=>{\n    ret+=S[i].repeat(e);\n  });\n  console.log(ret);\n\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03816_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x1bc8() {\n    const _0x3ced4a = [\n        'aqRcR',\n        'keys',\n        'reduce',\n        'aTbfE',\n        'LSftk',\n        'ClUEa',\n        'stdin',\n        'resume',\n        'setEncoding',\n        'utf8',\n        'end',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'sOtyw',\n        'log',\n        'data',\n        'JuKUs',\n        'KUyQM',\n        'TIFzy'\n    ];\n    a0_0x1bc8 = function () {\n        return _0x3ced4a;\n    };\n    return a0_0x1bc8();\n}\nfunction a0_0x57c1(VTkawm, key) {\n    const stringArray = a0_0x1bc8();\n    a0_0x57c1 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x57c1(VTkawm, key);\n}\nfunction main(n, array) {\n    const _0x24e233 = a0_0x57c1;\n    let counter = {};\n    for (let a of array) {\n        if ('aqRcR' !== _0x24e233(0x0)) {\n            input += chunk;\n        } else {\n            counter[a] = counter[a] || 0x0;\n            counter[a]++;\n        }\n    }\n    let nums = Object[_0x24e233(0x1)](counter);\n    let evenCount = nums[_0x24e233(0x2)]((count, num) => {\n        const _0x5a06f9 = a0_0x57c1;\n        if (_0x5a06f9(0x3) !== _0x5a06f9(0x4)) {\n            if (counter[num] % 0x2 === 0x0) {\n                if (_0x5a06f9(0x5) !== _0x5a06f9(0x5)) {\n                    let input = '';\n                    process[_0x5a06f9(0x6)][_0x5a06f9(0x7)]();\n                    process[_0x5a06f9(0x6)][_0x5a06f9(0x8)](_0x5a06f9(0x9));\n                    process[_0x5a06f9(0x6)]['on']('data', chunk => {\n                        input += chunk;\n                    });\n                    process[_0x5a06f9(0x6)]['on'](_0x5a06f9(0xa), () => {\n                        const _0xaceaff = a0_0x57c1;\n                        input = input[_0xaceaff(0xb)]()[_0xaceaff(0xc)]('\\x0a');\n                        let n = Number(input[0x0]);\n                        let array = input[0x1][_0xaceaff(0xc)]('\\x20')[_0xaceaff(0xd)](a => Number(a));\n                        main(n, array);\n                    });\n                } else {\n                    return count + 0x1;\n                }\n            } else {\n                return count;\n            }\n        } else {\n            return count + 0x1;\n        }\n    }, 0x0);\n    let answer;\n    if (evenCount % 0x2 === 0x0) {\n        answer = nums[_0x24e233(0xe)];\n    } else {\n        if (_0x24e233(0xf) === _0x24e233(0xf)) {\n            answer = nums['length'] - 0x1;\n        } else {\n            input = input[_0x24e233(0xb)]()['split']('\\x0a');\n            let n = Number(input[0x0]);\n            let array = input[0x1][_0x24e233(0xc)]('\\x20')['map'](a => Number(a));\n            main(n, array);\n        }\n    }\n    console[_0x24e233(0x10)](answer);\n}\nfunction doMain() {\n    const _0x55602e = a0_0x57c1;\n    let input = '';\n    process[_0x55602e(0x6)]['resume']();\n    process['stdin'][_0x55602e(0x8)](_0x55602e(0x9));\n    process[_0x55602e(0x6)]['on'](_0x55602e(0x11), chunk => {\n        const _0x1f5fec = a0_0x57c1;\n        if ('JuKUs' !== _0x1f5fec(0x12)) {\n            answer = nums[_0x1f5fec(0xe)];\n        } else {\n            input += chunk;\n        }\n    });\n    process[_0x55602e(0x6)]['on']('end', () => {\n        const _0x45fa0a = a0_0x57c1;\n        if (_0x45fa0a(0x13) === _0x45fa0a(0x14)) {\n            return count;\n        } else {\n            input = input[_0x45fa0a(0xb)]()[_0x45fa0a(0xc)]('\\x0a');\n            let n = Number(input[0x0]);\n            let array = input[0x1]['split']('\\x20')[_0x45fa0a(0xd)](a => Number(a));\n            main(n, array);\n        }\n    });\n}\ndoMain();", "test_cases": [["5\n1 2 1 3 7", "3"], ["15\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1", "7"]], "original": "'use strict'\n\nfunction main (n, array) {\n  let counter = {}\n  for (let a of array) {\n    counter[a] = counter[a] || 0\n    counter[a]++\n  }\n  let nums = Object.keys(counter)\n  let evenCount = nums.reduce((count, num) => {\n    if (counter[num] % 2 === 0) {\n      return count + 1\n    } else {\n      return count\n    }\n  }, 0)\n  let answer\n  if (evenCount % 2 === 0) {\n    answer = nums.length\n  } else {\n    answer = nums.length - 1\n  }\n  console.log(answer)\n}\n\nfunction doMain () {\n  let input = ''\n  process.stdin.resume()\n  process.stdin.setEncoding('utf8')\n  process.stdin.on('data', (chunk) => {\n    input += chunk\n  })\n  process.stdin.on('end', () => {\n    input = input.trim().split('\\n')\n    let n = Number(input[0])\n    let array = input[1].split(' ').map(a => Number(a))\n    main(n, array)\n  })\n}\n\ndoMain()\n", "language": "JavaScript"}
{"filename": "p03856_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction a0_0x32d5() {\n    var _0x1bc517 = [\n        'alloc',\n        'readSync',\n        'toString',\n        'trim',\n        'length',\n        'fill',\n        'slice',\n        'dream',\n        'erase',\n        'eraser',\n        'log',\n        'YES'\n    ];\n    a0_0x32d5 = function () {\n        return _0x1bc517;\n    };\n    return a0_0x32d5();\n}\nvar a0_0x1a26aa = a0_0x3439;\nvar fs = require('fs');\nvar input = Buffer[a0_0x1a26aa(0x0)](0x10000);\nvar length = fs[a0_0x1a26aa(0x1)](0x0, input, 0x0, 0x10000);\nfunction a0_0x3439(gRNJdJ, key) {\n    var stringArray = a0_0x32d5();\n    a0_0x3439 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3439(gRNJdJ, key);\n}\nvar text = input[a0_0x1a26aa(0x2)]()['slice'](0x0, length)[a0_0x1a26aa(0x3)]();\nvar dp = Array(text[a0_0x1a26aa(0x4)] + 0x1)[a0_0x1a26aa(0x5)](![]);\ndp[0x0] = !![];\nfor (var index = 0x5; index <= text[a0_0x1a26aa(0x4)]; index++) {\n    if (dp[index - 0x5] === !![] && text[a0_0x1a26aa(0x6)](index - 0x5, index) === a0_0x1a26aa(0x7)) {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x7] === !![] && text['slice'](index - 0x7, index) === 'dreamer') {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x5] === !![] && text[a0_0x1a26aa(0x6)](index - 0x5, index) === a0_0x1a26aa(0x8)) {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x6] === !![] && text[a0_0x1a26aa(0x6)](index - 0x6, index) === a0_0x1a26aa(0x9)) {\n        dp[index] = !![];\n        continue;\n    }\n}\nconsole[a0_0x1a26aa(0xa)](dp[text['length']] ? a0_0x1a26aa(0xb) : 'NO');", "test_cases": [["erasedream", "YES"], ["dreameraser", "YES"], ["dreamerer", "NO"]], "original": "'use strict';\n\nvar fs = require('fs');\n\nvar input = Buffer.alloc(0x10000);\nvar length = fs.readSync(0, input, 0, 0x10000);\n\nvar text = input.toString().slice(0, length).trim();\nvar dp = Array(text.length + 1).fill(false);\ndp[0] = true;\n\nfor (var index = 5; index <= text.length; index++) {\n    if (dp[index - 5] === true && text.slice(index - 5, index) === 'dream') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 7] === true && text.slice(index - 7, index) === 'dreamer') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 5] === true && text.slice(index - 5, index) === 'erase') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 6] === true && text.slice(index - 6, index) === 'eraser') {\n        dp[index] = true;\n        continue;\n    }\n}\n\nconsole.log(dp[text.length] ? 'YES' : 'NO');", "language": "JavaScript"}
{"filename": "p03864_1", "type": "JavaScript", "obfuscated": "var a0_0x4d5c03 = a0_0x59c9;\nfunction a0_0x59c9(nDIAoY, key) {\n    var stringArray = a0_0x4320();\n    a0_0x59c9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59c9(nDIAoY, key);\n}\nfunction a0_0x4320() {\n    var _0x1f86f1 = [\n        'trim',\n        'split',\n        'map',\n        'forEach',\n        'push',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x4320 = function () {\n        return _0x1f86f1;\n    };\n    return a0_0x4320();\n}\nfunction Main(input) {\n    var _0x3c85a3 = a0_0x59c9;\n    input = input[_0x3c85a3(0x0)]()[_0x3c85a3(0x1)]('\\x0a')[_0x3c85a3(0x2)](function (x) {\n        var _0x3f1532 = a0_0x59c9;\n        return x[_0x3f1532(0x1)]('\\x20');\n    });\n    var N = parseInt(input[0x0][0x0], 0xa);\n    var x = parseInt(input[0x0][0x1], 0xa);\n    var vec_a = input[0x1][_0x3c85a3(0x2)](e => parseInt(e, 0xa));\n    var sum = function (arr) {\n        var _0x132012 = a0_0x59c9;\n        var sum = 0x0;\n        arr[_0x132012(0x3)](function (elm) {\n            sum += elm;\n        });\n        return sum;\n    };\n    var vec_b = [];\n    var tmp = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        if (vec_a[i] >= x - tmp)\n            vec_b[_0x3c85a3(0x4)](x - tmp);\n        else\n            vec_b[_0x3c85a3(0x4)](vec_a[i]);\n        tmp = vec_b[i];\n    }\n    console[_0x3c85a3(0x5)](sum(vec_a) - sum(vec_b));\n}\nMain(require('fs')[a0_0x4d5c03(0x6)](a0_0x4d5c03(0x7), a0_0x4d5c03(0x8)));", "test_cases": [["3 3\n2 2 2", "1"], ["6 1\n1 6 1 2 0 4", "11"], ["5 9\n3 1 4 1 5", "0"], ["2 0\n5 5", "10"]], "original": "\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar N = parseInt(input[0][0], 10);\n\tvar x = parseInt(input[0][1], 10);\n\tvar vec_a = input[1].map(e => parseInt(e, 10));\n\tvar sum  = function(arr) {\n\t\tvar sum = 0;\n\t\tarr.forEach(function(elm) {\n\t\t\tsum += elm;\n\t\t});\n\t\treturn sum;\n\t};\n\tvar vec_b = [];\n\tvar tmp = 0;\n\tfor (var i = 0; i < N; i++){\n\t\tif (vec_a[i] >= (x - tmp)) vec_b.push(x - tmp);\n\t\telse vec_b.push(vec_a[i]);\n\t\ttmp = vec_b[i];\n\t}\n\tconsole.log(sum(vec_a) - sum(vec_b));\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03891_1", "type": "JavaScript", "obfuscated": "var a0_0x1163b6 = a0_0x1d68;\nfunction Main(input) {\n    var _0x56eca8 = a0_0x1d68;\n    var data = input[_0x56eca8(0x0)](/\\a\\n|\\a|\\n/)[_0x56eca8(0x1)](function (s) {\n        return parseInt(s);\n    });\n    var x = [\n        [\n            data[0x0],\n            data[0x1],\n            0x0\n        ],\n        [\n            0x0,\n            data[0x2],\n            0x0\n        ],\n        [\n            0x0,\n            0x0,\n            0x0\n        ]\n    ];\n    var sum = 0x3 * x[0x1][0x1];\n    x[0x0][0x2] = sum - x[0x0][0x0] - x[0x0][0x1];\n    x[0x2][0x1] = sum - x[0x0][0x1] - x[0x1][0x1];\n    x[0x2][0x2] = sum - x[0x0][0x0] - x[0x1][0x1];\n    x[0x2][0x0] = sum - x[0x2][0x1] - x[0x2][0x2];\n    x[0x1][0x0] = sum - x[0x0][0x0] - x[0x2][0x0];\n    x[0x1][0x2] = sum - x[0x0][0x2] - x[0x2][0x2];\n    console[_0x56eca8(0x2)](x[0x0][0x0] + '\\x20' + x[0x0][0x1] + '\\x20' + x[0x0][0x2]);\n    console[_0x56eca8(0x2)](x[0x1][0x0] + '\\x20' + x[0x1][0x1] + '\\x20' + x[0x1][0x2]);\n    console[_0x56eca8(0x2)](x[0x2][0x0] + '\\x20' + x[0x2][0x1] + '\\x20' + x[0x2][0x2]);\n}\nMain(require('fs')['readFileSync'](a0_0x1163b6(0x3), a0_0x1163b6(0x4)));\nfunction a0_0x1d68(tXqkQR, key) {\n    var stringArray = a0_0x8faa();\n    a0_0x1d68 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d68(tXqkQR, key);\n}\nfunction a0_0x8faa() {\n    var _0x13c44e = [\n        'split',\n        'map',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x8faa = function () {\n        return _0x13c44e;\n    };\n    return a0_0x8faa();\n}", "test_cases": [["8\n3\n5", "8 3 4\n1 5 9\n6 7 2"], ["1\n1\n1", "1 1 1\n1 1 1\n1 1 1"]], "original": "function Main(input) {\n\tvar data = input.split(/\\a\\n|\\a|\\n/).map(function(s) { return parseInt(s); });\n\tvar x = [ [data[0], data[1], 0],\n\t\t\t\t[0, data[2], 0],\n\t\t\t\t[0, 0, 0] ]\n\tvar sum = 3 * x[1][1]\n\tx[0][2] = sum - x[0][0] - x[0][1]\n\tx[2][1] = sum - x[0][1] - x[1][1]\n\tx[2][2] = sum - x[0][0] - x[1][1]\n\tx[2][0] = sum - x[2][1] - x[2][2]\n\tx[1][0] = sum - x[0][0] - x[2][0]\n\tx[1][2] = sum - x[0][2] - x[2][2]\n\t\n\tconsole.log(x[0][0] + \" \" + x[0][1] + \" \" + x[0][2])\n\tconsole.log(x[1][0] + \" \" + x[1][1] + \" \" + x[1][2])\n\tconsole.log(x[2][0] + \" \" + x[2][1] + \" \" + x[2][2])\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03910_1", "type": "JavaScript", "obfuscated": "var a0_0x21bc89 = a0_0x2d2f;\nfunction myout(text) {\n    var _0x3403e6 = a0_0x2d2f;\n    console[_0x3403e6(0x0)](text);\n}\nfunction Main(input) {\n    var _0x243725 = a0_0x2d2f;\n    input = parseInt(input);\n    var list = [];\n    var output = 0x0;\n    for (var i = 0x1; i <= input; i++) {\n        output += i;\n        list[_0x243725(0x1)](i);\n        if (output == input) {\n            if (_0x243725(0x2) !== 'JitpU') {\n                output += i;\n                list[_0x243725(0x1)](i);\n                if (output == input) {\n                    myout(list['join']('\\x0a'));\n                    return;\n                } else if (output > input) {\n                    var diff = output - input;\n                    list['splice'](list[_0x243725(0x3)](diff), 0x1);\n                    myout(list[_0x243725(0x4)]('\\x0a'));\n                    return;\n                }\n            } else {\n                myout(list['join']('\\x0a'));\n                return;\n            }\n        } else if (output > input) {\n            var diff = output - input;\n            list[_0x243725(0x5)](list[_0x243725(0x3)](diff), 0x1);\n            myout(list['join']('\\x0a'));\n            return;\n        }\n    }\n}\nMain(require('fs')[a0_0x21bc89(0x6)]('/dev/stdin', 'utf8')[a0_0x21bc89(0x7)]());\nfunction a0_0x2d2f(mOloPX, key) {\n    var stringArray = a0_0x3769();\n    a0_0x2d2f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d2f(mOloPX, key);\n}\nfunction a0_0x3769() {\n    var _0xf0426a = [\n        'log',\n        'push',\n        'JitpU',\n        'indexOf',\n        'join',\n        'splice',\n        'readFileSync',\n        'trim'\n    ];\n    a0_0x3769 = function () {\n        return _0xf0426a;\n    };\n    return a0_0x3769();\n}", "test_cases": [["4", "1\n3"], ["7", "1\n2\n4"], ["1", "1"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input);\n\t//input = input.split(\" \");\n\t//input = input.split(\"\\n\");\n\t//input = input.split(\" \").map((a)=>Number(a));\n\t//input = input.split(\"\\n\").map((a)=>Number(a));\n  var list = [];\n  var output = 0;\n  for(var i = 1; i <= input; i++){\n    output += i;\n    list.push(i);\n    if(output == input){\n       myout(list.join(\"\\n\"));\n      return;\n    }else if(output > input){\n      var diff = output - input;\n      list.splice(list.indexOf(diff),1);\n      myout(list.join(\"\\n\"));\n      return;\n    }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03929_1", "type": "JavaScript", "obfuscated": "var a0_0x59272f = a0_0x34b0;\nfunction Main(input) {\n    var _0x4622ac = a0_0x34b0;\n    input = input[_0x4622ac(0x0)]('\\x20');\n    var valN = input[0x0];\n    var valK = input[0x1];\n    if (valN < 0x3) {\n        console[_0x4622ac(0x1)]('0');\n        return;\n    }\n    var count = 0x0;\n    for (var i = 0x0; i + 0x2 < valN; i++) {\n        for (var j = 0x0; j < 0x5; j++) {\n            if ((i * 0x3f + j * 0x9 + 0x51) % 0xb == valK) {\n                count++;\n            }\n        }\n    }\n    console[_0x4622ac(0x1)](count);\n}\nMain(require('fs')[a0_0x59272f(0x2)](a0_0x59272f(0x3), a0_0x59272f(0x4)));\nfunction a0_0x34b0(IFXofM, key) {\n    var stringArray = a0_0x1f53();\n    a0_0x34b0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x34b0(IFXofM, key);\n}\nfunction a0_0x1f53() {\n    var _0x31c819 = [\n        'split',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1f53 = function () {\n        return _0x31c819;\n    };\n    return a0_0x1f53();\n}", "test_cases": [["7 7", "2"], ["6 0", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\" \");\n\t//カレンダーの段数 n\n\tvar valN = input[0];\n\t//正方形を置く時の条件となる数 k\n\tvar valK = input[1];\n\t\n\t//値のチェック\n\tif(valN < 3){\n\t\tconsole.log(\"0\");\n\t\treturn;\n\t}\n\t\n\tvar count = 0;\n\t//段数の数だけ繰り返す\n\tfor(var i = 0;i+2<valN;i++){\n\t\t//行数の数だけ繰り返す\n\t\tfor(var j = 0;j<5;j++){\n\t\t\t//条件チェック\n\t\t\tif((i*63 + j*9 + 81)%11 == valK){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconsole.log(count);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04028_1", "type": "JavaScript", "obfuscated": "function a0_0x49f7(GnSDhw, key) {\n    var stringArray = a0_0x3e0a();\n    a0_0x49f7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x49f7(GnSDhw, key);\n}\nvar a0_0x3807bc = a0_0x49f7;\nvar mod = 0x3b9aca00 + 0x7;\nfunction a0_0x3e0a() {\n    var _0x2e7243 = [\n        'length',\n        'fill',\n        'map',\n        'ICIBk',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split'\n    ];\n    a0_0x3e0a = function () {\n        return _0x2e7243;\n    };\n    return a0_0x3e0a();\n}\nfunction Main(s) {\n    var _0xa252d0 = a0_0x49f7;\n    var n = parseInt(s[0x0]);\n    var sl = s[0x1][_0xa252d0(0x0)];\n    var a = Array(n + 0x1)[_0xa252d0(0x1)](0x0)[_0xa252d0(0x2)](a => Array(n + 0x2)[_0xa252d0(0x1)](0x0));\n    a[0x0][0x0] = 0x1;\n    for (var i = 0x1; i <= n; i++) {\n        a[i][0x0] = a[i - 0x1][0x0] + a[i - 0x1][0x1];\n        a[i][0x0] %= mod;\n        for (var j = 0x1; j <= i; j++) {\n            if (_0xa252d0(0x3) !== 'ICIBk') {\n                a[i][j] = a[i - 0x1][j - 0x1] * 0x2 + a[i - 0x1][j + 0x1];\n                a[i][j] %= mod;\n            } else {\n                a[i][j] = a[i - 0x1][j - 0x1] * 0x2 + a[i - 0x1][j + 0x1];\n                a[i][j] %= mod;\n            }\n        }\n    }\n    console[_0xa252d0(0x4)](permod(a[n][sl], powmod(0x2, sl)));\n}\nfunction abmod() {\n    var _0x522840 = a0_0x49f7;\n    var rt = arguments[0x0];\n    for (var i = 0x1; i < arguments[_0x522840(0x0)]; i++) {\n        rt = (rt >>> 0x10) * arguments[i] % mod * 0x10000 + (rt & 0xffff) * arguments[i];\n        rt %= mod;\n    }\n    return rt;\n}\nfunction powmod(a, n) {\n    var rt = 0x1;\n    while (n) {\n        if (n & 0x1)\n            rt = abmod(a, rt);\n        a = abmod(a, a);\n        n >>>= 0x1;\n    }\n    return rt;\n}\nfunction permod(a, n) {\n    var rt = powmod(n, mod - 0x2);\n    rt = abmod(rt, a);\n    return rt;\n}\nMain(require('fs')[a0_0x3807bc(0x5)](a0_0x3807bc(0x6), a0_0x3807bc(0x7))[a0_0x3807bc(0x8)]('\\x0a'));", "test_cases": [["3\n0", "5"], ["300\n1100100", "519054663"], ["5000\n01000001011101000100001101101111011001000110010101110010000", "500886057"]], "original": "var mod = 1e9+7;\nfunction Main(s) {\n  var n = parseInt(s[0]);\n  var sl = s[1].length;\n  var a = Array(n+1).fill(0).map(a => Array(n+2).fill(0));\n  a[0][0] = 1;\n  for(var i = 1; i <= n; i++){\n    a[i][0] = a[i-1][0] + a[i-1][1];\n    a[i][0] %= mod;\n    for(var j = 1; j <= i; j++){\n      a[i][j] = a[i-1][j-1] * 2 + a[i-1][j+1];\n      a[i][j] %= mod;\n    }\n  }\n  console.log(permod(a[n][sl], powmod(2, sl)));\n}\nfunction abmod(){\n\tvar rt = arguments[0];\n\tfor(var i = 1; i < arguments.length; i++){\n\t\trt = (rt >>> 16) * arguments[i] % mod * 0x10000 + (rt & 0xFFFF) * arguments[i];\n\t\trt %= mod;\n\t}\n\treturn rt;\n}\nfunction powmod(a,n){//a^n%mod\n\tvar rt = 1;\n\twhile(n){\n\t\tif(n & 1) rt = abmod(a, rt);\n\t\ta = abmod(a, a);\n\t\tn >>>= 1;\n\t}\n\treturn rt;\n}\nfunction permod(a,n){\n\tvar rt = powmod(n, mod-2);\n\trt = abmod(rt, a);\n\treturn rt;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p00055_1", "type": "JavaScript", "obfuscated": "var a0_0x24bcd9 = a0_0x274f;\nfunction a0_0x274f(kxvYHn, key) {\n    var stringArray = a0_0x1d2f();\n    a0_0x274f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x274f(kxvYHn, key);\n}\nvar input = require('fs')[a0_0x24bcd9(0x0)](a0_0x24bcd9(0x1), 'utf8');\nvar Arr = input[a0_0x24bcd9(0x2)]()['split']('\\x0a')['map'](Number);\nfunction a0_0x1d2f() {\n    var _0xf1480c = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'forEach',\n        'log',\n        'toFixed'\n    ];\n    a0_0x1d2f = function () {\n        return _0xf1480c;\n    };\n    return a0_0x1d2f();\n}\nArr[a0_0x24bcd9(0x3)](function (v) {\n    var _0x5b4f6b = a0_0x274f;\n    var arr = [\n        0x0,\n        v\n    ];\n    for (var i = 0x2; i <= 0xa; i++) {\n        arr[i] = i % 0x2 == 0x0 ? arr[i - 0x1] * 0x2 : arr[i - 0x1] / 0x3;\n    }\n    var sum = arr['reduce'](function (a, b) {\n        return a + b;\n    });\n    console[_0x5b4f6b(0x4)](sum[_0x5b4f6b(0x5)](0x8));\n});", "test_cases": [["1.0\n2.0\n3.0", "7.81481481\n15.62962963\n23.44444444"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nArr.forEach(function(v){\n   var arr=[0,v];\n   for(var i=2;i<=10;i++){\n         arr[i]=(i%2==0)?arr[i-1]*2 : arr[i-1]/3;\n   }\n   var sum=arr.reduce(function(a,b){return a+b;});\n   console.log(sum.toFixed(8));\n});", "language": "JavaScript"}
{"filename": "p00057_1", "type": "JavaScript", "obfuscated": "var a0_0x2bc44c = a0_0x3978;\nfunction a0_0x355f() {\n    var _0x423120 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'length'\n    ];\n    a0_0x355f = function () {\n        return _0x423120;\n    };\n    return a0_0x355f();\n}\nvar input = require('fs')[a0_0x2bc44c(0x0)](a0_0x2bc44c(0x1), a0_0x2bc44c(0x2));\nvar Arr = input[a0_0x2bc44c(0x3)]()['split']('\\x0a');\nfunction a0_0x3978(eNoNvE, key) {\n    var stringArray = a0_0x355f();\n    a0_0x3978 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3978(eNoNvE, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x2bc44c(0x4)]; i++) {\n    var n = Arr[i] - 0x0 + 0x1;\n    var x = 0x1 / 0x2 * n * (n - 0x1);\n    console['log'](x + 0x1);\n}", "test_cases": [["1\n3", "2\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var n=(Arr[i]-0)+1;\n   var x=1/2*n*(n-1);\n   console.log(x+1);\n}", "language": "JavaScript"}
{"filename": "p00066_1", "type": "JavaScript", "obfuscated": "var a0_0x882135 = a0_0x4fe0;\nvar input = require('fs')[a0_0x882135(0x0)](a0_0x882135(0x1), a0_0x882135(0x2));\nvar Arr = input[a0_0x882135(0x3)]()['split']('\\x0a');\nfunction a0_0x2c27() {\n    var _0x109906 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'length',\n        'split',\n        'log'\n    ];\n    a0_0x2c27 = function () {\n        return _0x109906;\n    };\n    return a0_0x2c27();\n}\nfunction a0_0x4fe0(gYOhhG, key) {\n    var stringArray = a0_0x2c27();\n    a0_0x4fe0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fe0(gYOhhG, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x882135(0x4)]; i++) {\n    var arr = Arr[i][a0_0x882135(0x5)]('');\n    var a1 = arr[0x0];\n    var a2 = arr[0x1];\n    var a3 = arr[0x2];\n    var a4 = arr[0x3];\n    var a5 = arr[0x4];\n    var a6 = arr[0x5];\n    var a7 = arr[0x6];\n    var a8 = arr[0x7];\n    var a9 = arr[0x8];\n    var d = 0x0;\n    for (var j = 0x0; j < 0x2; j++) {\n        var s = j == 0x0 ? 'o' : 'x';\n        var S = s + s + s;\n        if (a1 + a2 + a3 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a4 + a5 + a6 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a7 + a8 + a9 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a1 + a4 + a7 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a2 + a5 + a8 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a3 + a6 + a9 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a1 + a5 + a9 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        if (a3 + a5 + a7 == S) {\n            console[a0_0x882135(0x6)](s);\n            break;\n        }\n        d++;\n    }\n    if (d == 0x2)\n        console['log']('d');\n}", "test_cases": [["ooosxssxs\nxoosxsosx\nooxxxooxo", "o\nx\nd"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\nvar arr=Arr[i].split(\"\");\nvar a1=arr[0];\nvar a2=arr[1];\nvar a3=arr[2];\nvar a4=arr[3];\nvar a5=arr[4];\nvar a6=arr[5];\nvar a7=arr[6];\nvar a8=arr[7];\nvar a9=arr[8];\nvar d=0;\nfor(var j=0;j<2;j++){\n   var s=(j==0)?\"o\":\"x\";\n   var S=s+s+s;\n   if(a1+a2+a3==S){console.log(s);break;}\n   if(a4+a5+a6==S){console.log(s);break;}\n   if(a7+a8+a9==S){console.log(s);break;}\n   if(a1+a4+a7==S){console.log(s);break;}\n   if(a2+a5+a8==S){console.log(s);break;}\n   if(a3+a6+a9==S){console.log(s);break;}\n   if(a1+a5+a9==S){console.log(s);break;}\n   if(a3+a5+a7==S){console.log(s);break;}\n   d++;\n}\nif(d==2)console.log(\"d\");\n}", "language": "JavaScript"}
{"filename": "p00067_1", "type": "JavaScript", "obfuscated": "var a0_0x53d3b3 = a0_0x2001;\nfunction a0_0x2001(Mnbnrq, key) {\n    var stringArray = a0_0x2de5();\n    a0_0x2001 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2001(Mnbnrq, key);\n}\nfunction bomb(y, x) {\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < 0x4; i++) {\n        var yy = y + dy[i];\n        var xx = x + dx[i];\n        if (yy < 0x0 || yy >= 0xc || xx < 0x0 || xx >= 0xc)\n            continue;\n        if (yx[yy][xx] == 'a') {\n            yx[yy][xx] = cnt;\n            bomb(yy, xx);\n        }\n    }\n}\nvar input = require('fs')[a0_0x53d3b3(0x0)]('/dev/stdin', a0_0x53d3b3(0x1));\nvar Arr = input['trim']()[a0_0x53d3b3(0x2)]('\\x0a');\nvar n = 0x0;\nvar cnt = 0x0;\nfunction a0_0x2de5() {\n    var _0x89b0e2 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'length',\n        'replace',\n        'log'\n    ];\n    a0_0x2de5 = function () {\n        return _0x89b0e2;\n    };\n    return a0_0x2de5();\n}\nvar yx = [];\nfor (var I = 0x0; I < Arr[a0_0x53d3b3(0x3)]; I++) {\n    n++;\n    var v = Arr[I][a0_0x53d3b3(0x4)](/1/g, 'a');\n    var arr = v[a0_0x53d3b3(0x2)]('');\n    yx['push'](arr);\n    if (n != 0xc)\n        continue;\n    cnt = 0x0;\n    for (var i = 0x0; i < 0xc; i++) {\n        for (var j = 0x0; j < 0xc; j++) {\n            if (yx[i][j] == 'a') {\n                cnt++;\n                yx[i][j] = cnt;\n                bomb(i, j);\n            }\n        }\n    }\n    console[a0_0x53d3b3(0x5)](cnt);\n    n = 0x0;\n    yx = [];\n    I++;\n}", "test_cases": [["111100001111\n111000001111\n110000001111\n100000001111\n000100010000\n000000111000\n000001111100\n100011111110\n110001111100\n111000111000\n111100010000\n000000000000\n\n010001111100\n110010000010\n010010000001\n010000000001\n010000000110\n010000111000\n010000000100\n010000000010\n010000000001\n010010000001\n010010000010\n111001111100\n\n000000000000\n111111111111\n100010100001\n100010100001\n100010100001\n100010100001\n100100100101\n101000011101\n100000000001\n100000000001\n111111111111\n100000000001", "5\n13\n4"]], "original": "function bomb(y,x){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=12 || xx<0 || xx>=12)continue;\n      if(yx[yy][xx]==\"a\"){yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=0;\nvar cnt=0;\nvar yx=[];\nfor(var I=0;I<Arr.length;I++){\n   n++;\n   var v=Arr[I].replace(/1/g,\"a\");\n   var arr=v.split(\"\");\n   yx.push(arr);\n   if(n!=12)continue;\n   cnt=0;\n   for(var i=0;i<12;i++){\n      for(var j=0;j<12;j++){\n         if(yx[i][j]==\"a\"){cnt++;yx[i][j]=cnt;bomb(i,j);}\n      }\n   }\n   console.log(cnt);\n   n=0;\n   yx=[];\n   I++;\n}", "language": "JavaScript"}
{"filename": "p00073_1", "type": "JavaScript", "obfuscated": "function a0_0x583a() {\n    var _0x3e9e71 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'log',\n        'sqrt',\n        'toFixed'\n    ];\n    a0_0x583a = function () {\n        return _0x3e9e71;\n    };\n    return a0_0x583a();\n}\nvar a0_0x101139 = a0_0x208c;\nvar input = require('fs')[a0_0x101139(0x0)](a0_0x101139(0x1), a0_0x101139(0x2))['trim']();\nvar lines = input[a0_0x101139(0x3)]('\\x0a');\nfunction a0_0x208c(ABwRML, key) {\n    var stringArray = a0_0x583a();\n    a0_0x208c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x208c(ABwRML, key);\n}\nwhile (!![]) {\n    var x = +lines[a0_0x101139(0x4)]();\n    var h = +lines[a0_0x101139(0x4)]();\n    if (x + h == 0x0)\n        break;\n    console[a0_0x101139(0x5)]((x * x + x * Math[a0_0x101139(0x6)](0x4 * h * h + x * x))[a0_0x101139(0x7)](0x6));\n}", "test_cases": [["6\n4\n7\n9\n0\n0", "96.000000\n184.192455"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nwhile (true) {\n    var x = +lines.shift();\n    var h = +lines.shift();\n    if (x + h == 0)\n        break;\n\n    console.log(((x * x) + (x * Math.sqrt(4 * h * h + x * x))).toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00077_1", "type": "JavaScript", "obfuscated": "var a0_0x1bcc6f = a0_0x1c30;\nvar input = require('fs')['readFileSync'](a0_0x1bcc6f(0x0), a0_0x1bcc6f(0x1));\nfunction a0_0x1c30(IBBaqy, key) {\n    var stringArray = a0_0x14ee();\n    a0_0x1c30 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1c30(IBBaqy, key);\n}\nfunction a0_0x14ee() {\n    var _0x59d901 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'forEach',\n        'replace',\n        'join',\n        'log'\n    ];\n    a0_0x14ee = function () {\n        return _0x59d901;\n    };\n    return a0_0x14ee();\n}\nvar Arr = input[a0_0x1bcc6f(0x2)]()['split']('\\x0a');\nArr[a0_0x1bcc6f(0x3)](function (v) {\n    var _0x5722db = a0_0x1c30;\n    v = v[_0x5722db(0x4)](/@(\\d)(.)/g, function (s, s1, s2) {\n        var _0x46e18d = a0_0x1c30;\n        return Array(s1 - 0x0 + 0x1)[_0x46e18d(0x5)](s2);\n    });\n    console[_0x5722db(0x6)](v);\n});", "test_cases": [["ab@5C1@8050\n@99+1=1@90", "abCCCCC10000000050\n999999999+1=1000000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   v=v.replace(/@(\\d)(.)/g,function(s,s1,s2){\n      return Array((s1-0)+1).join(s2);\n   });\n   console.log(v);\n});", "language": "JavaScript"}
{"filename": "p00079_1", "type": "JavaScript", "obfuscated": "var a0_0x30ff44 = a0_0x2ff2;\nfunction heron(a, b, c) {\n    var _0x12d5e2 = a0_0x2ff2;\n    var s = (a + b + c) / 0x2;\n    var S = Math[_0x12d5e2(0x0)](s * (s - a) * (s - b) * (s - c));\n    return S;\n}\nvar input = require('fs')['readFileSync'](a0_0x30ff44(0x1), 'utf8');\nvar Arr = input[a0_0x30ff44(0x2)]()[a0_0x30ff44(0x3)]('\\x0a');\nvar xy1 = Arr[a0_0x30ff44(0x4)]()[a0_0x30ff44(0x3)](',')[a0_0x30ff44(0x5)](Number);\nvar xy2 = Arr['shift']()['split'](',')[a0_0x30ff44(0x5)](Number);\nvar x1 = xy1[0x0];\nvar y1 = xy1[0x1];\nfunction a0_0x25d8() {\n    var _0x502b98 = [\n        'sqrt',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'length',\n        'pow',\n        'log',\n        'toFixed'\n    ];\n    a0_0x25d8 = function () {\n        return _0x502b98;\n    };\n    return a0_0x25d8();\n}\nvar x2 = xy2[0x0];\nfunction a0_0x2ff2(uKsJEp, key) {\n    var stringArray = a0_0x25d8();\n    a0_0x2ff2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ff2(uKsJEp, key);\n}\nvar y2 = xy2[0x1];\nvar sum = 0x0;\nfor (var I = 0x0; I < Arr[a0_0x30ff44(0x6)]; I++) {\n    var xy3 = Arr[I][a0_0x30ff44(0x3)](',')[a0_0x30ff44(0x5)](Number);\n    var x3 = xy3[0x0];\n    var y3 = xy3[0x1];\n    var d12 = Math['sqrt'](Math[a0_0x30ff44(0x7)](x1 - x2, 0x2) + Math[a0_0x30ff44(0x7)](y1 - y2, 0x2));\n    var d13 = Math[a0_0x30ff44(0x0)](Math[a0_0x30ff44(0x7)](x1 - x3, 0x2) + Math[a0_0x30ff44(0x7)](y1 - y3, 0x2));\n    var d23 = Math[a0_0x30ff44(0x0)](Math['pow'](x2 - x3, 0x2) + Math[a0_0x30ff44(0x7)](y2 - y3, 0x2));\n    sum += heron(d12, d13, d23);\n    x2 = xy3[0x0];\n    y2 = xy3[0x1];\n}\nconsole[a0_0x30ff44(0x8)](sum[a0_0x30ff44(0x9)](0x6));", "test_cases": [["0.0,0.0\n0.0,1.0 \n1.0,1.0 \n2.0,0.0 \n1.0,-1.0", "2.500000"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar xy1=(Arr.shift()).split(\",\").map(Number);\nvar xy2=(Arr.shift()).split(\",\").map(Number);\nvar x1=xy1[0];var y1=xy1[1];\nvar x2=xy2[0];var y2=xy2[1];\nvar sum=0;\nfor(var I=0;I<Arr.length;I++){\n   var xy3=Arr[I].split(\",\").map(Number);\n   var x3=xy3[0];var y3=xy3[1];\n   var d12=Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));\n   var d13=Math.sqrt(Math.pow(x1-x3,2)+Math.pow(y1-y3,2));\n   var d23=Math.sqrt(Math.pow(x2-x3,2)+Math.pow(y2-y3,2));\n   sum+=heron(d12,d13,d23);\n   x2=xy3[0];\n   y2=xy3[1];\n}\nconsole.log(sum.toFixed(6));", "language": "JavaScript"}
{"filename": "p00080_1", "type": "JavaScript", "obfuscated": "var a0_0x4383b3 = a0_0x2c52;\nfunction a0_0x2c52(guxyKO, key) {\n    var stringArray = a0_0x58f4();\n    a0_0x2c52 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c52(guxyKO, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x4383b3(0x0));\nvar Arr = input['trim']()[a0_0x4383b3(0x1)]('\\x0a');\nwhile (!![]) {\n    var Q = Arr[a0_0x4383b3(0x2)]() - 0x0;\n    if (Q == -0x1)\n        break;\n    var x = Q / 0x2;\n    while (Math[a0_0x4383b3(0x3)](Math[a0_0x4383b3(0x4)](x, 0x3) - Q) >= 0.00001 * Q) {\n        x = x - (Math[a0_0x4383b3(0x4)](x, 0x3) - Q) / (0x3 * Math[a0_0x4383b3(0x4)](x, 0x2));\n    }\n    console[a0_0x4383b3(0x5)](x['toFixed'](0x6));\n}\nfunction a0_0x58f4() {\n    var _0x28cbac = [\n        'utf8',\n        'split',\n        'shift',\n        'abs',\n        'pow',\n        'log'\n    ];\n    a0_0x58f4 = function () {\n        return _0x28cbac;\n    };\n    return a0_0x58f4();\n}", "test_cases": [["15\n15\n-1", "2.466212\n2.466212"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var Q=Arr.shift()-0;\n   if(Q==-1)break;\n   var x=Q/2;\n   while(Math.abs(Math.pow(x,3)-Q)>=0.00001*Q){\n      x=x-(Math.pow(x,3)-Q)/(3*Math.pow(x,2));\n   }\n   console.log(x.toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00081_1", "type": "JavaScript", "obfuscated": "var a0_0x5784b5 = a0_0x128e;\nvar input = require('fs')['readFileSync'](a0_0x5784b5(0x0), a0_0x5784b5(0x1));\nvar Arr = input['trim']()[a0_0x5784b5(0x2)]('\\x0a');\nfunction a0_0x128e(tXRBRT, key) {\n    var stringArray = a0_0x3e5a();\n    a0_0x128e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x128e(tXRBRT, key);\n}\nfunction a0_0x3e5a() {\n    var _0x1bcde3 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'length',\n        'toFixed'\n    ];\n    a0_0x3e5a = function () {\n        return _0x1bcde3;\n    };\n    return a0_0x3e5a();\n}\nfor (var i = 0x0; i < Arr[a0_0x5784b5(0x3)]; i++) {\n    var arr = Arr[i][a0_0x5784b5(0x2)](',')['map'](Number);\n    (function (x1, y1, x2, y2, xq, yq) {\n        var _0x3b4e14 = a0_0x128e;\n        var k = x2 - x1 == 0x0 ? Infinity : (y2 - y1) / (x2 - x1);\n        var ans;\n        if (k == 0x0)\n            ans = [\n                xq,\n                y1 - (yq - y1)\n            ];\n        else if (k == Infinity)\n            ans = [\n                x1 - (xq - x1),\n                yq\n            ];\n        else {\n            var a1 = (y2 - y1) / (x2 - x1);\n            var a2 = -0x1 / a1;\n            var b1 = y1 - a1 * x1;\n            var b2 = yq - a2 * xq;\n            var xm = (b2 - b1) / (a1 - a2);\n            var x = 0x2 * xm - xq;\n            var y = a2 * x + b2;\n            ans = [\n                x,\n                y\n            ];\n        }\n        console['log'](ans[0x0][_0x3b4e14(0x4)](0x6) + '\\x20' + ans[0x1]['toFixed'](0x6));\n    }['apply'](null, arr));\n}", "test_cases": [["1.0,0.0,-1.0,0.0,1.0,1.0 \n1.0,0.0,0.0,-1.0,3.0,0.0 \n0.0,1.0,0.0,-1.0,1.0,1.0", "1.000000 -1.000000\n1.000000 2.000000\n-1.000000 1.000000"]], "original": "/*h  t t p : / / t a k u -k . h a t e n a blog . c o m / entry /2013/ 03 / 2 6 / 174239 */\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\",\").map(Number);\n   (function(x1,y1,x2,y2,xq,yq){\n      var k=(x2-x1==0)?Infinity:(y2-y1)/(x2-x1);\n      var ans;\n      if(k==0)ans=[xq,y1-(yq-y1)];\n      else if(k==Infinity)ans=[x1-(xq-x1),yq];\n      else{\n         var  a1=(y2-y1)/(x2-x1);\n         var  a2=(-1)/a1;\n         var  b1=y1-a1*x1;\n         var  b2=yq-a2*xq;\n         var  xm=(b2-b1)/(a1-a2);\n         var  x=2*xm-xq;\n         var  y=a2*x+b2;\n         ans=[x,y];\n      }\n      console.log(ans[0].toFixed(6)+\" \"+ans[1].toFixed(6));\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00107_1", "type": "JavaScript", "obfuscated": "var a0_0x2f4476 = a0_0xcc1b;\nfunction a0_0xcc1b(vctQMV, key) {\n    var stringArray = a0_0x51ee();\n    a0_0xcc1b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xcc1b(vctQMV, key);\n}\nfunction a0_0x51ee() {\n    var _0x3e724f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'sort',\n        'sqrt',\n        'log'\n    ];\n    a0_0x51ee = function () {\n        return _0x3e724f;\n    };\n    return a0_0x51ee();\n}\nvar input = require('fs')[a0_0x2f4476(0x0)](a0_0x2f4476(0x1), a0_0x2f4476(0x2));\nvar Arr = input[a0_0x2f4476(0x3)]()[a0_0x2f4476(0x4)]('\\x0a');\nwhile (!![]) {\n    var arr = Arr[a0_0x2f4476(0x5)]()[a0_0x2f4476(0x4)]('\\x20')[a0_0x2f4476(0x6)](Number);\n    if (arr[0x0] == 0x0 && arr[0x1] == 0x0 && arr[0x2] == 0x0)\n        break;\n    arr[a0_0x2f4476(0x7)](function (a, b) {\n        return a - b;\n    });\n    var R = Math[a0_0x2f4476(0x8)](arr[0x0] * arr[0x0] + arr[0x1] * arr[0x1]);\n    var n = Arr[a0_0x2f4476(0x5)]() - 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var r = Arr[a0_0x2f4476(0x5)]() - 0x0;\n        console[a0_0x2f4476(0x9)](r * 0x2 > R ? 'OK' : 'NA');\n    }\n}", "test_cases": [["10 6 8\n5\n4\n8\n6\n2\n5\n0 0 0", "NA\nOK\nOK\nNA\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0 && arr[1]==0 && arr[2]==0)break;\n   arr.sort(function(a,b){return a-b;});\n   var R=Math.sqrt(arr[0]*arr[0]+arr[1]*arr[1]);\n   var n=Arr.shift()-0;\n   for(var i=0;i<n;i++){\n      var r=Arr.shift()-0;\n      console.log((r*2>R)?\"OK\":\"NA\");\n   }\n}", "language": "JavaScript"}
{"filename": "p00108_1", "type": "JavaScript", "obfuscated": "function a0_0x6910() {\n    var _0x3c7521 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'map',\n        'length',\n        'join',\n        'slice',\n        'log'\n    ];\n    a0_0x6910 = function () {\n        return _0x3c7521;\n    };\n    return a0_0x6910();\n}\nfunction a0_0x3575(yoTohb, key) {\n    var stringArray = a0_0x6910();\n    a0_0x3575 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3575(yoTohb, key);\n}\nvar a0_0x4a0a19 = a0_0x3575;\nvar input = require('fs')[a0_0x4a0a19(0x0)](a0_0x4a0a19(0x1), a0_0x4a0a19(0x2));\nvar Arr = input[a0_0x4a0a19(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x4a0a19(0x4)]();\n    if (n == '0')\n        break;\n    var arr = Arr[a0_0x4a0a19(0x4)]()['split']('\\x20')[a0_0x4a0a19(0x5)](Number);\n    var k = 0x0;\n    var S = [];\n    while (!![]) {\n        for (var i = 0x0; i < arr[a0_0x4a0a19(0x6)]; i++) {\n            var cnt = 0x0;\n            for (var j = 0x0; j < arr[a0_0x4a0a19(0x6)]; j++) {\n                if (arr[i] == arr[j])\n                    cnt++;\n            }\n            S['push'](cnt);\n        }\n        if (S['join']('\\x20') == arr[a0_0x4a0a19(0x7)]('\\x20'))\n            break;\n        arr = S[a0_0x4a0a19(0x8)]();\n        S = [];\n        k++;\n    }\n    console[a0_0x4a0a19(0x9)](k);\n    console[a0_0x4a0a19(0x9)](S[a0_0x4a0a19(0x7)]('\\x20'));\n}", "test_cases": [["10\n4 5 1 1 4 5 12 3 5 4\n0", "3\n6 6 4 4 6 6 4 4 6 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift();\n   if(n==\"0\")break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var k=0;\n   var S=[];\n   while(true){\n      for(var i=0;i<arr.length;i++){\n         var cnt=0;\n         for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j])cnt++;\n         }\n         S.push(cnt);\n      }\n      if(S.join(\" \")==arr.join(\" \"))break;\n      arr=S.slice();\n      S=[];\n      k++;\n   }\n   console.log(k);\n   console.log(S.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00112_1", "type": "JavaScript", "obfuscated": "function a0_0x4ef8(pOTKmk, key) {\n    var stringArray = a0_0x2a38();\n    a0_0x4ef8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4ef8(pOTKmk, key);\n}\nfunction a0_0x2a38() {\n    var _0x563912 = [\n        'utf8',\n        'shift',\n        'push',\n        'sort',\n        'reduce',\n        'log'\n    ];\n    a0_0x2a38 = function () {\n        return _0x563912;\n    };\n    return a0_0x2a38();\n}\nvar a0_0x465e64 = a0_0x4ef8;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x465e64(0x0));\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x465e64(0x1)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr[a0_0x465e64(0x1)]() - 0x0;\n        arr[a0_0x465e64(0x2)](v);\n    }\n    arr[a0_0x465e64(0x3)](function (a, b) {\n        return a - b;\n    });\n    var wait = [];\n    var time = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        wait[a0_0x465e64(0x2)](time);\n        time += arr[i];\n    }\n    var sum = wait[a0_0x465e64(0x4)](function (a, b) {\n        return a + b;\n    });\n    console[a0_0x465e64(0x5)](sum);\n}", "test_cases": [["5\n2\n6\n4\n3\n9\n0", "31"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr.push(v);\n   }\n   arr.sort(function(a,b){return a-b;});\n   var wait=[];\n   var time=0;\n   for(var i=0;i<n;i++){\n      wait.push(time);\n      time+=arr[i];\n   }\n   var sum=wait.reduce(function(a,b){return a+b;});\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00117_1", "type": "JavaScript", "obfuscated": "var a0_0x5988c4 = a0_0x3369;\nfunction warshall() {\n    var _0x1af8d0 = a0_0x3369;\n    for (var k = 0x0; k < n; k++) {\n        if (_0x1af8d0(0x0) !== _0x1af8d0(0x1)) {\n            for (var i = 0x0; i < n; i++) {\n                if (_0x1af8d0(0x2) === 'LEVzB') {\n                    C[i][j] = Math['min'](C[i][j], C[i][k] + C[k][j]);\n                } else {\n                    for (var j = 0x0; j < n; j++) {\n                        C[i][j] = Math[_0x1af8d0(0x3)](C[i][j], C[i][k] + C[k][j]);\n                    }\n                }\n            }\n        } else {\n            for (var j = 0x0; j < n; j++) {\n                C[i][j] = Math['min'](C[i][j], C[i][k] + C[k][j]);\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync'](a0_0x5988c4(0x4), 'utf8');\nvar Arr = input[a0_0x5988c4(0x5)]()[a0_0x5988c4(0x6)]('\\x0a');\nfunction a0_0x3369(ZTujZJ, key) {\n    var stringArray = a0_0x210e();\n    a0_0x3369 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3369(ZTujZJ, key);\n}\nvar n = Arr['shift']() - 0x0;\nvar m = Arr[a0_0x5988c4(0x7)]() - 0x0;\nvar C = [];\nfor (var i = 0x0; i < n; i++) {\n    C[i] = [];\n    for (var j = 0x0; j < n; j++) {\n        C[i][j] = i === j ? 0x0 : Infinity;\n    }\n}\nfor (var i = 0x0; i < m; i++) {\n    var A = Arr[a0_0x5988c4(0x7)]()[a0_0x5988c4(0x6)](',')[a0_0x5988c4(0x8)](Number);\n    C[A[0x0] - 0x1][A[0x1] - 0x1] = A[0x2];\n    C[A[0x1] - 0x1][A[0x0] - 0x1] = A[0x3];\n}\nwarshall();\nvar last = Arr[a0_0x5988c4(0x7)]()['split'](',')[a0_0x5988c4(0x8)](Number);\nvar cost = C[last[0x0] - 0x1][last[0x1] - 0x1] + C[last[0x1] - 0x1][last[0x0] - 0x1] + last[0x3];\nconsole['log'](last[0x2] - cost);\nfunction a0_0x210e() {\n    var _0x442a93 = [\n        'KnjnY',\n        'AJahB',\n        'uQDbQ',\n        'min',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map'\n    ];\n    a0_0x210e = function () {\n        return _0x442a93;\n    };\n    return a0_0x210e();\n}", "test_cases": [["6\n8\n1,2,2,2 \n1,3,4,3 \n1,4,4,2 \n2,5,3,2 \n3,4,4,2 \n3,6,1,2 \n4,6,1,1 \n5,6,1,2 \n2,4,50,30", "11"]], "original": "function warshall(){\n   for(var k=0;k<n;k++){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            C[i][j]=Math.min(C[i][j], C[i][k]+C[k][j]);\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nvar m=Arr.shift()-0;\nvar C=[];\nfor(var i=0;i<n;i++){\n   C[i]=[];\n   for(var j=0;j<n;j++){\n      C[i][j]=(i===j)?0:Infinity;\n   }\n}\nfor(var i=0;i<m;i++){\n   var A=(Arr.shift()).split(\",\").map(Number);\n   C[A[0]-1][A[1]-1]=A[2];\n   C[A[1]-1][A[0]-1]=A[3];\n}\nwarshall();\nvar last=(Arr.shift()).split(\",\").map(Number);\nvar cost=C[last[0]-1][last[1]-1]+C[last[1]-1][last[0]-1]+last[3];\nconsole.log(last[2]-cost);", "language": "JavaScript"}
{"filename": "p00119_1", "type": "JavaScript", "obfuscated": "var a0_0x5c9de3 = a0_0x4fb3;\nvar input = require('fs')['readFileSync'](a0_0x5c9de3(0x0), a0_0x5c9de3(0x1));\nfunction a0_0x42d6() {\n    var _0x1d33c8 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'forEach',\n        'reverse',\n        'log'\n    ];\n    a0_0x42d6 = function () {\n        return _0x1d33c8;\n    };\n    return a0_0x42d6();\n}\nvar Arr = input['trim']()[a0_0x5c9de3(0x2)]('\\x0a');\nfunction a0_0x4fb3(qZcCIv, key) {\n    var stringArray = a0_0x42d6();\n    a0_0x4fb3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4fb3(qZcCIv, key);\n}\nvar m = Arr[a0_0x5c9de3(0x3)]() - 0x0;\nvar n = Arr[a0_0x5c9de3(0x3)]() - 0x0;\nvar M = [];\nvar check = [];\nfor (var i = 0x0; i < m; i++)\n    M[i] = [];\nfor (var i = 0x0; i < m; i++)\n    check[i] = ![];\nfor (var i = 0x0; i < n; i++) {\n    var v = Arr[a0_0x5c9de3(0x3)]()['split']('\\x20')[a0_0x5c9de3(0x4)](Number);\n    M[v[0x0] - 0x1][a0_0x5c9de3(0x5)](v[0x1] - 0x1);\n}\nvar L = [];\nfor (var i = 0x0; i < m; i++) {\n    visit(i);\n}\nfunction visit(x) {\n    var _0x53370b = a0_0x4fb3;\n    if (check[x] == !![])\n        return;\n    else\n        check[x] = !![];\n    M[x][_0x53370b(0x6)](function (v) {\n        visit(v);\n    });\n    L[_0x53370b(0x5)](x);\n}\nL[a0_0x5c9de3(0x7)]();\nL[a0_0x5c9de3(0x6)](function (v) {\n    var _0x54493c = a0_0x4fb3;\n    console[_0x54493c(0x8)](v + 0x1);\n});", "test_cases": [["6\n7\n5 2\n1 4\n3 5\n4 2\n1 6\n6 4\n3 4", "3\n5\n1\n6\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar m=Arr.shift()-0;\nvar n=Arr.shift()-0;\nvar M=[];\nvar check=[];\nfor(var i=0;i<m;i++)M[i]=[];\nfor(var i=0;i<m;i++)check[i]=false;\nfor(var i=0;i<n;i++){\n   var v=Arr.shift().split(\" \").map(Number);\n   M[v[0]-1].push(v[1]-1);\n}\nvar L=[]; \nfor(var i=0;i<m;i++){\n   visit(i);\n}\nfunction visit(x){\n   if(check[x]==true)return;\n   else check[x]=true;\n   M[x].forEach(function(v){\n      visit(v);\n   });\n   L.push(x);\n}\nL.reverse();\nL.forEach(function(v){\n   console.log(v+1);\n});", "language": "JavaScript"}
{"filename": "p00123_1", "type": "JavaScript", "obfuscated": "var a0_0x13e2fd = a0_0x3b4a;\nvar input = require('fs')[a0_0x13e2fd(0x0)](a0_0x13e2fd(0x1), a0_0x13e2fd(0x2));\nfunction a0_0x3b4a(DHvCyJ, key) {\n    var stringArray = a0_0x57ce();\n    a0_0x3b4a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3b4a(DHvCyJ, key);\n}\nvar Arr = input[a0_0x13e2fd(0x3)]()['split']('\\x0a');\nArr[a0_0x13e2fd(0x4)](function (v) {\n    var _0xb63b14 = a0_0x3b4a;\n    var arr = v[_0xb63b14(0x5)]('\\x20')[_0xb63b14(0x6)](Number);\n    var a = arr[0x0];\n    var b = arr[0x1];\n    var ans;\n    if (35.5 > a && 0x47 > b)\n        ans = _0xb63b14(0x7);\n    else if (37.5 > a && 0x4d > b)\n        ans = 'AA';\n    else if (0x28 > a && 0x53 > b)\n        ans = 'A';\n    else if (0x2b > a && 0x59 > b)\n        ans = 'B';\n    else if (0x32 > a && 0x69 > b)\n        ans = 'C';\n    else if (0x37 > a && 0x74 > b)\n        ans = 'D';\n    else if (0x46 > a && 0x94 > b)\n        ans = 'E';\n    else\n        ans = 'NA';\n    console['log'](ans);\n});\nfunction a0_0x57ce() {\n    var _0xd8c6b0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'forEach',\n        'split',\n        'map',\n        'AAA'\n    ];\n    a0_0x57ce = function () {\n        return _0xd8c6b0;\n    };\n    return a0_0x57ce();\n}", "test_cases": [["40.0 70.0\n72.5 140.51", "B\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var a=arr[0];\n   var b=arr[1];\n   var ans;\n   if(35.5>a && 71>b)ans=\"AAA\";\n   else if(37.5>a && 77>b)ans=\"AA\";\n   else if(40>a && 83>b)ans=\"A\";\n   else if(43>a && 89>b)ans=\"B\";\n   else if(50>a && 105>b)ans=\"C\";\n   else if(55>a && 116>b)ans=\"D\";\n   else if(70>a && 148>b)ans=\"E\";\n   else ans=\"NA\";\n   console.log(ans);\n});", "language": "JavaScript"}
{"filename": "p00124_1", "type": "JavaScript", "obfuscated": "var a0_0x42627d = a0_0x5246;\nvar input = require('fs')[a0_0x42627d(0x0)](a0_0x42627d(0x1), a0_0x42627d(0x2));\nfunction a0_0x2981() {\n    var _0xdaa642 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log',\n        'push',\n        'sort',\n        'forEach',\n        'floor'\n    ];\n    a0_0x2981 = function () {\n        return _0xdaa642;\n    };\n    return a0_0x2981();\n}\nvar Arr = input[a0_0x42627d(0x3)]()[a0_0x42627d(0x4)]('\\x0a');\nfunction a0_0x5246(OtfxEu, key) {\n    var stringArray = a0_0x2981();\n    a0_0x5246 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5246(OtfxEu, key);\n}\nvar I = 0x0;\nwhile (!![]) {\n    var n = Arr[a0_0x42627d(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    if (I != 0x0)\n        console[a0_0x42627d(0x6)]('');\n    I++;\n    var rank = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x42627d(0x5)]()[a0_0x42627d(0x4)]('\\x20');\n        var score = 0x3 * (arr[0x1] - 0x0) + (arr[0x3] - 0x0) + (0xa - i) * 0.01;\n        rank[a0_0x42627d(0x7)]([\n            arr[0x0],\n            score\n        ]);\n    }\n    rank[a0_0x42627d(0x8)](function (a, b) {\n        a = a[0x1];\n        b = b[0x1];\n        return b - a;\n    });\n    rank[a0_0x42627d(0x9)](function (v) {\n        var _0x549cc2 = a0_0x5246;\n        console['log'](v[0x0] + ',' + Math[_0x549cc2(0xa)](v[0x1]));\n    });\n}", "test_cases": [["4\nJapan 1 0 2\nEgypt 1 2 0\nCanada 0 2 1\nSpain 2 0 1\n3\nIndia 0 2 0\nPoland 1 0 1\nItaly 1 0 1\n0", "Spain,7\nJapan,5\nEgypt,3\nCanada,1\n\nPoland,4\nItaly,4\nIndia,0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=0;\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   if(I!=0)console.log(\"\");\n   I++;\n   var rank=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var score=(3*(arr[1]-0))+(arr[3]-0)+((10-i)*0.01);\n      rank.push([arr[0],score]);\n   }\n   rank.sort(function(a,b){\n      a=a[1];\n      b=b[1];\n      return b-a;\n   });\n   rank.forEach(function(v){\n      console.log(v[0]+\",\"+Math.floor(v[1]));\n   });\n}", "language": "JavaScript"}
{"filename": "p00125_1", "type": "JavaScript", "obfuscated": "function a0_0x27ae(UzAUvW, key) {\n    var stringArray = a0_0xa45a();\n    a0_0x27ae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x27ae(UzAUvW, key);\n}\nvar a0_0x546ec5 = a0_0x27ae;\nfunction year(x) {\n    var _0x1749fe = a0_0x27ae;\n    var m = [\n        0x16d,\n        0x1f,\n        0x1c,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1e,\n        0x1f\n    ];\n    if (x % 0x4 == 0x0) {\n        if (_0x1749fe(0x0) !== _0x1749fe(0x0)) {\n            y1++;\n            days += year(y1)[0x0];\n        } else {\n            m[0x2] = 0x1d;\n            m[0x0] = 0x16e;\n            if (x % 0x64 == 0x0) {\n                if ('UUpLL' !== 'UUpLL') {\n                    m2++;\n                    sum2 += Y2[m2];\n                } else {\n                    m[0x2] = 0x1c;\n                    m[0x0] = 0x16d;\n                }\n            }\n            if (x % 0x190 == 0x0) {\n                if (_0x1749fe(0x1) === _0x1749fe(0x1)) {\n                    m[0x2] = 0x1d;\n                    m[0x0] = 0x16e;\n                } else {\n                    m[0x2] = 0x1d;\n                    m[0x0] = 0x16e;\n                }\n            }\n        }\n    }\n    return m;\n}\nvar input = require('fs')[a0_0x546ec5(0x2)]('/dev/stdin', 'utf8');\nfunction a0_0xa45a() {\n    var _0x89fe7b = [\n        'tEmTU',\n        'KdKcO',\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        '-1\\x20-1\\x20-1\\x20-1\\x20-1\\x20-1',\n        'map',\n        'log',\n        'apply'\n    ];\n    a0_0xa45a = function () {\n        return _0x89fe7b;\n    };\n    return a0_0xa45a();\n}\nvar Arr = input[a0_0x546ec5(0x3)]()[a0_0x546ec5(0x4)]('\\x0a');\nwhile (!![]) {\n    var str = Arr[a0_0x546ec5(0x5)]();\n    if (str == a0_0x546ec5(0x6))\n        break;\n    var arr = str[a0_0x546ec5(0x4)]('\\x20')[a0_0x546ec5(0x7)](Number);\n    (function (y1, m1, d1, y2, m2, d2) {\n        var _0x382078 = a0_0x27ae;\n        var sum1 = 0x0;\n        var sum2 = 0x0;\n        var Y1 = year(y1);\n        var Y2 = year(y2);\n        sum1 += Y1[m1] - d1;\n        sum2 += Y2[m2] - d2;\n        while (m1 < 0xc) {\n            m1++;\n            sum1 += Y1[m1];\n        }\n        while (m2 < 0xc) {\n            m2++;\n            sum2 += Y2[m2];\n        }\n        var days = sum1 - sum2;\n        while (y1 != y2) {\n            y1++;\n            days += year(y1)[0x0];\n        }\n        console[_0x382078(0x8)](days);\n    }[a0_0x546ec5(0x9)](null, arr));\n}", "test_cases": [["2006 9 2 2006 9 3\n2006 9 2 2006 11 11\n2004 1 1 2005 1 1\n2000 1 1 2006 1 1\n2000 1 1 2101 1 1\n-1 -1 -1 -1 -1 -1", "1\n70\n366\n2192\n36890"]], "original": "function year(x){\n   var m=[365,31,28,31,30,31,30,31,31,30,31,30,31];\n   if(x%4==0){\n      m[2]=29;\n      m[0]=366;\n      if(x%100==0){m[2]=28;m[0]=365;}\n      if(x%400==0){m[2]=29;m[0]=366;}\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"-1 -1 -1 -1 -1 -1\")break;\n   var arr=str.split(\" \").map(Number);\n   (function(y1, m1, d1, y2, m2, d2){\n      var sum1=0;\n      var sum2=0;\n      var Y1=year(y1);\n      var Y2=year(y2);\n      sum1+=Y1[m1]-d1;\n      sum2+=Y2[m2]-d2;\n      while(m1<12){m1++;sum1+=Y1[m1];}\n      while(m2<12){m2++;sum2+=Y2[m2];}\n      var days=sum1-sum2;\n      while(y1!=y2){\n         y1++;\n         days+=(year(y1))[0];\n      }\n      console.log(days);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00127_1", "type": "JavaScript", "obfuscated": "var a0_0x2f0793 = a0_0x1f01;\nvar table = {};\ntable[0xb] = 'a';\ntable[0xc] = 'b';\ntable[0xd] = 'c';\ntable[0xe] = 'd';\ntable[0xf] = 'e';\nfunction a0_0x1f01(CahgUC, key) {\n    var stringArray = a0_0x167d();\n    a0_0x1f01 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f01(CahgUC, key);\n}\ntable[0x15] = 'f';\ntable[0x16] = 'g';\ntable[0x17] = 'h';\ntable[0x18] = 'i';\ntable[0x19] = 'j';\ntable[0x1f] = 'k';\ntable[0x20] = 'l';\ntable[0x21] = 'm';\ntable[0x22] = 'n';\ntable[0x23] = 'o';\ntable[0x29] = 'p';\ntable[0x2a] = 'q';\ntable[0x2b] = 'r';\ntable[0x2c] = 's';\ntable[0x2d] = 't';\ntable[0x33] = 'u';\ntable[0x34] = 'v';\ntable[0x35] = 'w';\ntable[0x36] = 'x';\nfunction a0_0x167d() {\n    var _0x27a09d = [\n        'readFileSync',\n        '/dev/stdin',\n        'replace',\n        'split',\n        'forEach',\n        'hasOwnProperty',\n        'match',\n        'log'\n    ];\n    a0_0x167d = function () {\n        return _0x27a09d;\n    };\n    return a0_0x167d();\n}\ntable[0x37] = 'y';\ntable[0x3d] = 'z';\ntable[0x3e] = '.';\ntable[0x3f] = '?';\ntable[0x40] = '!';\ntable[0x41] = '\\x20';\nvar input = require('fs')[a0_0x2f0793(0x0)](a0_0x2f0793(0x1), 'utf8');\nvar Arr = input[a0_0x2f0793(0x2)](/\\n$/, '')[a0_0x2f0793(0x3)]('\\x0a');\nArr[a0_0x2f0793(0x4)](function (str) {\n    var _0x4ac79b = a0_0x1f01;\n    str = str[_0x4ac79b(0x2)](/\\d\\d/g, function (s) {\n        var _0x10fc1c = a0_0x1f01;\n        if (table[_0x10fc1c(0x5)](s))\n            s = table[s];\n        return s;\n    });\n    if (str[_0x4ac79b(0x6)](/\\d/))\n        str = 'NA';\n    console[_0x4ac79b(0x7)](str);\n});", "test_cases": [["341143514535\n314\n143565553551655311343411652235654535651124615163\n551544654451431564\n4\n3411\n6363636363\n153414", "naruto\nNA\ndo you wanna go to aizu?\nyes sure!\nNA\nna\n?????\nend"]], "original": "var table={};\n    table[11] = \"a\";\n    table[12] = \"b\";\n    table[13] = \"c\";\n    table[14] = \"d\";\n    table[15] = \"e\";\n \n    table[21] = \"f\";\n    table[22] = \"g\";\n    table[23] = \"h\";\n    table[24] = \"i\";\n    table[25] = \"j\";\n \n    table[31] = \"k\";\n    table[32] = \"l\";\n    table[33] = \"m\";\n    table[34] = \"n\";\n    table[35] = \"o\";\n \n    table[41] = \"p\";\n    table[42] = \"q\";\n    table[43] = \"r\";\n    table[44] = \"s\";\n    table[45] = \"t\";\n \n    table[51] = \"u\";\n    table[52] = \"v\";\n    table[53] = \"w\";\n    table[54] = \"x\";\n    table[55] = \"y\";\n \n    table[61] = \"z\";\n    table[62] = \".\";\n    table[63] = \"?\";\n    table[64] = \"!\";\n    table[65] = \" \";\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nArr.forEach(function(str){\n   str=str.replace(/\\d\\d/g,function(s){\n      if(table.hasOwnProperty(s))s=table[s];\n      return s;\n   });\n   if(str.match(/\\d/))str=\"NA\";\n   console.log(str);\n});", "language": "JavaScript"}
{"filename": "p00133_1", "type": "JavaScript", "obfuscated": "var a0_0x59d355 = a0_0x84f9;\nfunction move(yx) {\n    var arr = [];\n    for (var y = 0x0; y < 0x8; y++)\n        arr[y] = [];\n    for (var y = 0x0; y < 0x8; y++) {\n        for (var x = 0x0; x < 0x8; x++) {\n            arr[y][x] = yx[0x7 - x][y];\n        }\n    }\n    return arr;\n}\nfunction a0_0x84f9(CnfffL, key) {\n    var stringArray = a0_0x306a();\n    a0_0x84f9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x84f9(CnfffL, key);\n}\nvar input = require('fs')[a0_0x59d355(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar yx = [];\nfor (var i = 0x0; i < 0x8; i++)\n    yx['push'](Arr[i][a0_0x59d355(0x1)](''));\nyx = move(yx);\nfunction a0_0x306a() {\n    var _0x57f422 = [\n        'readFileSync',\n        'split',\n        '90\\x0a',\n        'replace',\n        'join',\n        'log',\n        '270\\x0a'\n    ];\n    a0_0x306a = function () {\n        return _0x57f422;\n    };\n    return a0_0x306a();\n}\nconsole['log'](a0_0x59d355(0x2) + yx['join']('\\x0a')[a0_0x59d355(0x3)](/\\,/g, ''));\nyx = move(yx);\nconsole['log']('180\\x0a' + yx[a0_0x59d355(0x4)]('\\x0a')[a0_0x59d355(0x3)](/\\,/g, ''));\nyx = move(yx);\nconsole[a0_0x59d355(0x5)](a0_0x59d355(0x6) + yx[a0_0x59d355(0x4)]('\\x0a')['replace'](/\\,/g, ''));", "test_cases": [["#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n########", "90\n########\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n180\n########\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n270\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n########"]], "original": "function move(yx){\n   var arr=[];\n   for(var y=0;y<8;y++)arr[y]=[];\n   for(var y=0;y<8;y++){\n      for(var x=0;x<8;x++){\n         arr[y][x]=yx[7-x][y];\n      }\n   }\n   return arr;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar yx=[];\nfor(var i=0;i<8;i++)yx.push(Arr[i].split(\"\"));\nyx=move(yx);\nconsole.log(\"90\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));\nyx=move(yx);\nconsole.log(\"180\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));\nyx=move(yx);\nconsole.log(\"270\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));", "language": "JavaScript"}
{"filename": "p00134_1", "type": "JavaScript", "obfuscated": "var a0_0x539b49 = a0_0x1611;\nfunction a0_0x1611(jTerUd, key) {\n    var stringArray = a0_0x50b6();\n    a0_0x1611 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1611(jTerUd, key);\n}\nfunction a0_0x50b6() {\n    var _0x302493 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'log'\n    ];\n    a0_0x50b6 = function () {\n        return _0x302493;\n    };\n    return a0_0x50b6();\n}\nvar input = require('fs')['readFileSync'](a0_0x539b49(0x0), a0_0x539b49(0x1));\nvar Arr = input[a0_0x539b49(0x2)]()['split']('\\x0a')['map'](Number);\nvar n = Arr[a0_0x539b49(0x3)]();\nvar sum = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    sum += Arr[i];\n}\nconsole[a0_0x539b49(0x4)](Math['floor'](sum / n));", "test_cases": [["6\n12300\n5600\n33800\n0\n26495\n52000", "21699"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar n=Arr.shift();\nvar sum=0;\nfor(var i=0;i<n;i++){\nsum+=Arr[i];\n}\nconsole.log(Math.floor(sum/n));", "language": "JavaScript"}
{"filename": "p00137_1", "type": "JavaScript", "obfuscated": "function a0_0x7581(LtEHdi, key) {\n    var stringArray = a0_0x1a18();\n    a0_0x7581 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7581(LtEHdi, key);\n}\nvar a0_0x312cf3 = a0_0x7581;\nvar input = require('fs')[a0_0x312cf3(0x0)]('/dev/stdin', a0_0x312cf3(0x1));\nvar Arr = input[a0_0x312cf3(0x2)]()[a0_0x312cf3(0x3)]('\\x0a')['map'](Number);\nvar L = Arr[a0_0x312cf3(0x4)]();\nfor (var i = 0x0; i < L; i++) {\n    console[a0_0x312cf3(0x5)](a0_0x312cf3(0x6) + (i + 0x1) + ':');\n    var v = Arr[i];\n    for (var j = 0x0; j < 0xa; j++) {\n        v = a0_0x312cf3(0x7) + v * v;\n        v = v[a0_0x312cf3(0x8)](-0x6);\n        v = v[a0_0x312cf3(0x8)](0x0, 0x4);\n        v = parseInt(v, 0xa);\n        console[a0_0x312cf3(0x5)](v);\n    }\n}\nfunction a0_0x1a18() {\n    var _0x5e9559 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log',\n        'Case\\x20',\n        '000000',\n        'slice'\n    ];\n    a0_0x1a18 = function () {\n        return _0x5e9559;\n    };\n    return a0_0x1a18();\n}", "test_cases": [["2\n123\n567", "Case 1:\n151\n228\n519\n2693\n2522\n3604\n9888\n7725\n6756\n6435\nCase 2:\n3214\n3297\n8702\n7248\n5335\n4622\n3628\n1623\n6341\n2082"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar L=Arr.shift();\nfor(var i=0;i<L;i++){\n   console.log(\"Case \"+(i+1)+\":\");\n   var v=Arr[i];\n   for(var j=0;j<10;j++){\n      v=\"000000\"+(v*v);\n      v=v.slice(-6);\n      v=v.slice(0,4);\n      v=parseInt(v,10);\n      console.log(v);\n   }\n}", "language": "JavaScript"}
{"filename": "p00138_1", "type": "JavaScript", "obfuscated": "var a0_0x446deb = a0_0x476f;\nvar input = require('fs')['readFileSync'](a0_0x446deb(0x0), 'utf8');\nfunction a0_0x476f(QgTPIj, key) {\n    var stringArray = a0_0x1f48();\n    a0_0x476f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x476f(QgTPIj, key);\n}\nvar Arr = input[a0_0x446deb(0x1)]()['split']('\\x0a');\nvar abc = [\n    [],\n    [],\n    []\n];\nvar obj = {};\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i][a0_0x446deb(0x2)]('\\x20')[a0_0x446deb(0x3)](Number);\n    abc[Math['floor'](i / 0x8)]['push'](arr[0x1]);\n    obj[arr[0x1]] = arr[0x0];\n}\nfor (var i = 0x0; i < 0x3; i++)\n    abc[i][a0_0x446deb(0x4)](function (a, b) {\n        return a - b;\n    });\nconsole[a0_0x446deb(0x5)](obj[abc[0x0][0x0]] + '\\x20' + abc[0x0][0x0][a0_0x446deb(0x6)](0x2));\nconsole['log'](obj[abc[0x0][0x1]] + '\\x20' + abc[0x0][0x1][a0_0x446deb(0x6)](0x2));\nfunction a0_0x1f48() {\n    var _0x10ce9e = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'log',\n        'toFixed'\n    ];\n    a0_0x1f48 = function () {\n        return _0x10ce9e;\n    };\n    return a0_0x1f48();\n}\nconsole[a0_0x446deb(0x5)](obj[abc[0x1][0x0]] + '\\x20' + abc[0x1][0x0][a0_0x446deb(0x6)](0x2));\nconsole[a0_0x446deb(0x5)](obj[abc[0x1][0x1]] + '\\x20' + abc[0x1][0x1][a0_0x446deb(0x6)](0x2));\nconsole[a0_0x446deb(0x5)](obj[abc[0x2][0x0]] + '\\x20' + abc[0x2][0x0]['toFixed'](0x2));\nconsole[a0_0x446deb(0x5)](obj[abc[0x2][0x1]] + '\\x20' + abc[0x2][0x1][a0_0x446deb(0x6)](0x2));\nvar d = [];\nfor (var i = 0x0; i < 0x3; i++)\n    d['push'](abc[i][0x2]);\nd[a0_0x446deb(0x4)](function (a, b) {\n    return a - b;\n});\nconsole[a0_0x446deb(0x5)](obj[d[0x0]] + '\\x20' + d[0x0][a0_0x446deb(0x6)](0x2));\nconsole[a0_0x446deb(0x5)](obj[d[0x1]] + '\\x20' + d[0x1][a0_0x446deb(0x6)](0x2));", "test_cases": [["18 25.46\n16 26.23\n3 23.00\n10 24.79\n5 22.88\n11 23.87\n19 23.90\n1 25.11\n23 23.88\n4 23.46\n7 24.12\n12 22.91\n13 21.99\n14 22.86\n21 23.12\n9 24.09\n17 22.51\n22 23.49\n6 23.02\n20 22.23\n24 21.89\n15 24.14\n8 23.77\n2 23.42", "5 22.88\n3 23.00\n13 21.99\n14 22.86\n24 21.89\n20 22.23\n17 22.51\n12 22.91"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar abc=[[],[],[]];\nvar obj={};\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   abc[Math.floor(i/8)].push(arr[1]);\n   obj[arr[1]]=arr[0];\n}\nfor(var i=0;i<3;i++)abc[i].sort(function(a,b){return a-b;});\nconsole.log(obj[abc[0][0]]+\" \"+(abc[0][0].toFixed(2)));\nconsole.log(obj[abc[0][1]]+\" \"+(abc[0][1].toFixed(2)));\nconsole.log(obj[abc[1][0]]+\" \"+(abc[1][0].toFixed(2)));\nconsole.log(obj[abc[1][1]]+\" \"+(abc[1][1].toFixed(2)));\nconsole.log(obj[abc[2][0]]+\" \"+(abc[2][0].toFixed(2)));\nconsole.log(obj[abc[2][1]]+\" \"+(abc[2][1].toFixed(2)));\nvar d=[];\nfor(var i=0;i<3;i++)d.push(abc[i][2]);\nd.sort(function(a,b){return a-b;});\nconsole.log(obj[d[0]]+\" \"+(d[0].toFixed(2)));\nconsole.log(obj[d[1]]+\" \"+(d[1].toFixed(2)));", "language": "JavaScript"}
{"filename": "p00150_1", "type": "JavaScript", "obfuscated": "var a0_0x1801c6 = a0_0x245c;\nfunction prime(max) {\n    var _0x3c2fd8 = a0_0x245c;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x3c2fd8(0x0)](Math[_0x3c2fd8(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0xf423f);\nfunction a0_0x245c(kXDiey, key) {\n    var stringArray = a0_0x2578();\n    a0_0x245c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x245c(kXDiey, key);\n}\nvar input = require('fs')[a0_0x1801c6(0x2)]('/dev/stdin', a0_0x1801c6(0x3));\nvar Arr = input['trim']()[a0_0x1801c6(0x4)]('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    var twin = '';\n    for (var j = 0x1; j < p['length']; j++) {\n        if (p[j] > a)\n            break;\n        if (p[j] - p[j - 0x1] == 0x2)\n            twin = p[j - 0x1] + '\\x20' + p[j];\n    }\n    console[a0_0x1801c6(0x5)](twin);\n}\nfunction a0_0x2578() {\n    var _0x54ecae = [\n        'floor',\n        'sqrt',\n        'readFileSync',\n        'utf8',\n        'split',\n        'log'\n    ];\n    a0_0x2578 = function () {\n        return _0x54ecae;\n    };\n    return a0_0x2578();\n}", "test_cases": [["12\n100\n200\n300\n0", "5 7\n71 73\n197 199\n281 283"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   var twin=\"\";\n   for(var j=1;j<p.length;j++){\n   if(p[j]>a)break;\n   if(p[j]-p[j-1]==2)twin=p[j-1]+\" \"+p[j];\n   }\n   console.log(twin);\n}", "language": "JavaScript"}
{"filename": "p00154_1", "type": "JavaScript", "obfuscated": "var a0_0x4f8a30 = a0_0x404f;\nfunction bomb(start, sum) {\n    var _0x4cdebc = a0_0x404f;\n    dp[start][sum]++;\n    if (start == card[_0x4cdebc(0x0)])\n        return;\n    var v = card[start][0x0];\n    var k = card[start][0x1];\n    for (var i = 0x0; i <= k; i++) {\n        bomb(start + 0x1, sum + v * i);\n    }\n}\nfunction a0_0x404f(yVHzeX, key) {\n    var stringArray = a0_0x3d27();\n    a0_0x404f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x404f(yVHzeX, key);\n}\nfunction a0_0x3d27() {\n    var _0x50717b = [\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'push',\n        'map',\n        'log'\n    ];\n    a0_0x3d27 = function () {\n        return _0x50717b;\n    };\n    return a0_0x3d27();\n}\nvar input = require('fs')[a0_0x4f8a30(0x1)](a0_0x4f8a30(0x2), a0_0x4f8a30(0x3));\nvar arr = input[a0_0x4f8a30(0x4)]()['split']('\\x0a');\nwhile (!![]) {\n    var m = arr[a0_0x4f8a30(0x5)]() - 0x0;\n    if (m == 0x0)\n        break;\n    var card = [];\n    while (m--)\n        card[a0_0x4f8a30(0x6)](arr['shift']()['split']('\\x20')[a0_0x4f8a30(0x7)](Number));\n    var g = arr['shift']() - 0x0;\n    var dp = [];\n    for (var i = 0x0; i <= card['length']; i++) {\n        dp[i] = [];\n        for (var j = 0x0; j <= 0x3e8; j++) {\n            dp[i][j] = 0x0;\n        }\n    }\n    bomb(0x0, 0x0);\n    while (g--)\n        console[a0_0x4f8a30(0x8)](dp[card[a0_0x4f8a30(0x0)]][arr[a0_0x4f8a30(0x5)]() - 0x0]);\n}", "test_cases": [["5\n1 10\n5 3\n10 3\n25 2\n50 2\n4\n120\n500\n100\n168\n7\n1 10\n3 10\n5 10\n10 10\n25 10\n50 10\n100 10\n3\n452\n574\n787\n0", "16\n0\n12\n7\n9789\n13658\n17466"]], "original": "function bomb(start,sum){\n   dp[start][sum]++;\n   if(start==card.length)return;\n   var v=card[start][0];\n   var k=card[start][1];\n   for(var i=0;i<=k;i++){\n      bomb(start+1,sum+v*i);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var m=arr.shift()-0;\n   if(m==0)break;\n   var card=[];\n   while(m--)card.push(arr.shift().split(\" \").map(Number));\n   var g=arr.shift()-0;\n   var dp=[];\n   for(var i=0;i<=card.length;i++){\n      dp[i]=[];\n      for(var j=0;j<=1000;j++){\n         dp[i][j]=0;\n      }\n   }\n   bomb(0,0);\n   while(g--)console.log(dp[card.length][arr.shift()-0]);\n}", "language": "JavaScript"}
{"filename": "p00157_1", "type": "JavaScript", "obfuscated": "var a0_0x39f3d0 = a0_0x6e42;\nfunction a0_0x6e42(pKcbLh, key) {\n    var stringArray = a0_0x18bb();\n    a0_0x6e42 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6e42(pKcbLh, key);\n}\nfunction Longest() {\n    var _0x383fc4 = a0_0x6e42;\n    ary[_0x383fc4(0x0)](function (a, b) {\n        if (a[0x0] == b[0x0])\n            return a[0x1] - b[0x1];\n        else\n            return a[0x0] - b[0x0];\n    });\n    var A = ary['filter'](function (v, i) {\n        if (i == 0x0)\n            return !![];\n        else if (ary[i - 0x1][0x0] != v[0x0])\n            return !![];\n    });\n    A = A[_0x383fc4(0x1)](function (v) {\n        return v[0x1];\n    });\n    var L = [];\n    L[0x0] = A[0x0];\n    var length = 0x1;\n    for (var i = 0x1; i < A[_0x383fc4(0x2)]; i++) {\n        if (L[length - 0x1] < A[i])\n            L[length++] = A[i];\n        else {\n            for (var j = 0x0; j < length; j++) {\n                if (L[j] >= A[i]) {\n                    L[j] = A[i];\n                    break;\n                }\n            }\n        }\n    }\n    return length;\n}\nfunction a0_0x18bb() {\n    var _0x81d73b = [\n        'sort',\n        'map',\n        'length',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'log'\n    ];\n    a0_0x18bb = function () {\n        return _0x81d73b;\n    };\n    return a0_0x18bb();\n}\nvar input = require('fs')[a0_0x39f3d0(0x3)](a0_0x39f3d0(0x4), a0_0x39f3d0(0x5));\nvar arr = input[a0_0x39f3d0(0x6)]()[a0_0x39f3d0(0x7)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x39f3d0(0x8)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary['push'](arr[a0_0x39f3d0(0x8)]()[a0_0x39f3d0(0x7)]('\\x20')[a0_0x39f3d0(0x1)](Number));\n    var m = arr[a0_0x39f3d0(0x8)]() - 0x0;\n    for (var i = 0x0; i < m; i++)\n        ary[a0_0x39f3d0(0x9)](arr[a0_0x39f3d0(0x8)]()[a0_0x39f3d0(0x7)]('\\x20')[a0_0x39f3d0(0x1)](Number));\n    var R = Longest();\n    ary = ary['map'](function (v) {\n        return [\n            v[0x1],\n            v[0x0]\n        ];\n    });\n    var H = Longest();\n    console[a0_0x39f3d0(0xa)](Math['max'](R, H));\n}", "test_cases": [["6\n1 1\n4 3\n6 5\n8 6\n10 10\n14 14\n5\n2 2\n5 4\n6 6\n9 8\n15 10\n4\n1 1\n4 3\n6 5\n8 6\n3\n2 2\n5 4\n6 6\n4\n1 1\n4 3\n6 5\n8 6\n4\n10 10\n12 11\n18 15\n24 20\n0", "9\n6\n8"]], "original": "function Longest(){\n   ary.sort(function(a,b){\n      if(a[0]==b[0])return a[1]-b[1];\n      else return a[0]-b[0]\n   });\n   var A=ary.filter(function(v,i){\n      if(i==0)return true;\n      else if(ary[i-1][0]!=v[0])return true;\n   });\n   A=A.map(function(v){return v[1];});\n   var L=[];\n   L[0] = A[0];\n   var length = 1;\n   for(var i=1;i<A.length;i++){\n      if (L[length-1] < A[i])L[length++] = A[i];\n      else {\n         for(var j=0;j<length;j++){\n            if(L[j]>=A[i]){L[j]=A[i];break;}\n         }\n      }\n   }\n   return length;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=[];\n   for(var i=0;i<n;i++)ary.push(arr.shift().split(\" \").map(Number));\n   var m=arr.shift()-0;\n   for(var i=0;i<m;i++)ary.push(arr.shift().split(\" \").map(Number));\n   var R=Longest();\n   ary=ary.map(function(v){return [v[1],v[0]];});\n   var H=Longest();\n   console.log(Math.max(R,H));\n}", "language": "JavaScript"}
{"filename": "p00158_1", "type": "JavaScript", "obfuscated": "var a0_0x4ff22e = a0_0x3c82;\nvar input = require('fs')[a0_0x4ff22e(0x0)]('/dev/stdin', a0_0x4ff22e(0x1));\nfunction a0_0x3c82(zQYflS, key) {\n    var stringArray = a0_0x1118();\n    a0_0x3c82 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c82(zQYflS, key);\n}\nvar Arr = input[a0_0x4ff22e(0x2)]()[a0_0x4ff22e(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x4ff22e(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var cnt = 0x0;\n    while (n != 0x1) {\n        cnt++;\n        if (n % 0x2 == 0x0)\n            n = n / 0x2;\n        else\n            n = 0x3 * n + 0x1;\n    }\n    console[a0_0x4ff22e(0x5)](cnt);\n}\nfunction a0_0x1118() {\n    var _0x3c847c = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x1118 = function () {\n        return _0x3c847c;\n    };\n    return a0_0x1118();\n}", "test_cases": [["3\n10\n0", "7\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var cnt=0;\n   while(n!=1){\n      cnt++;\n      if(n%2==0)n=n/2;\n      else n=(3*n)+1;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00161_1", "type": "JavaScript", "obfuscated": "var a0_0x29aba8 = a0_0x845e;\nfunction a0_0x845e(DojGqL, key) {\n    var stringArray = a0_0x3b47();\n    a0_0x845e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x845e(DojGqL, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x29aba8(0x0), 'utf8');\nvar Arr = input[a0_0x29aba8(0x1)]()['split']('\\x0a');\nfunction a0_0x3b47() {\n    var _0x382fcf = [\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'map',\n        'push',\n        'sort',\n        'log',\n        'length'\n    ];\n    a0_0x3b47 = function () {\n        return _0x382fcf;\n    };\n    return a0_0x3b47();\n}\nwhile (!![]) {\n    var n = Arr[a0_0x29aba8(0x2)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var team = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x29aba8(0x2)]()['split']('\\x20')[a0_0x29aba8(0x3)](Number);\n        var a = arr[0x1] * 0x3c + arr[0x2];\n        var b = arr[0x3] * 0x3c + arr[0x4];\n        var c = arr[0x5] * 0x3c + arr[0x6];\n        var d = arr[0x7] * 0x3c + arr[0x8];\n        team[a0_0x29aba8(0x4)]([\n            arr[0x0],\n            a + b + c + d\n        ]);\n    }\n    team[a0_0x29aba8(0x5)](function (a, b) {\n        a = a[0x1];\n        b = b[0x1];\n        return a - b;\n    });\n    console['log'](team[0x0][0x0]);\n    console[a0_0x29aba8(0x6)](team[0x1][0x0]);\n    console['log'](team[team[a0_0x29aba8(0x7)] - 0x2][0x0]);\n}", "test_cases": [["8\n34001 3 20 3 8 6 27 2 25\n20941 3 5 2 41 7 19 2 42\n90585 4 8 3 12 6 46 2 34\n92201 3 28 2 47 6 37 2 58\n10001 3 50 2 42 7 12 2 54\n63812 4 11 3 11 6 53 2 22\n54092 3 33 2 54 6 18 2 19\n25012 3 44 2 58 6 45 2 46\n4\n1 3 23 1 23 1 34 4 44\n2 5 12 2 12 3 41 2 29\n3 5 24 1 24 2 0 3 35\n4 4 49 2 22 4 41 4 23\n0", "54092\n34001\n10001\n1\n3\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var team=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var a=(arr[1]*60)+arr[2];\n      var b=(arr[3]*60)+arr[4];\n      var c=(arr[5]*60)+arr[6];\n      var d=(arr[7]*60)+arr[8];\n      team.push([arr[0],a+b+c+d]);\n   }\n   team.sort(function(a,b){\n      a=a[1];\n      b=b[1];\n      return a-b;\n   });\n   console.log(team[0][0]);\n   console.log(team[1][0]);\n   console.log(team[team.length-2][0]);\n}", "language": "JavaScript"}
{"filename": "p00162_1", "type": "JavaScript", "obfuscated": "function a0_0x32bd(RQcaKk, key) {\n    var stringArray = a0_0x30d2();\n    a0_0x32bd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x32bd(RQcaKk, key);\n}\nfunction a0_0x30d2() {\n    var _0x5d3e5c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift'\n    ];\n    a0_0x30d2 = function () {\n        return _0x5d3e5c;\n    };\n    return a0_0x30d2();\n}\nvar a0_0x33fef2 = a0_0x32bd;\nfunction hamming() {\n    var obj = {};\n    for (var i = 0x1; i <= 0xf4240; i++) {\n        var h = i;\n        while (h % 0x2 == 0x0)\n            h /= 0x2;\n        while (h % 0x3 == 0x0)\n            h /= 0x3;\n        while (h % 0x5 == 0x0)\n            h /= 0x5;\n        if (h == 0x1)\n            obj[i] = !![];\n    }\n    return obj;\n}\nvar Numbers = hamming();\nvar input = require('fs')[a0_0x33fef2(0x0)](a0_0x33fef2(0x1), a0_0x33fef2(0x2));\nvar Arr = input[a0_0x33fef2(0x3)](/\\n$/, '')[a0_0x33fef2(0x4)]('\\x0a');\nwhile (!![]) {\n    var mn = Arr[a0_0x33fef2(0x5)]()[a0_0x33fef2(0x4)]('\\x20')['map'](Number);\n    if (mn[0x0] == 0x0)\n        break;\n    var cnt = 0x0;\n    for (var i = mn[0x0]; i <= mn[0x1]; i++) {\n        if (Numbers[i])\n            cnt++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 8\n1 27\n1 86\n0", "5\n17\n31"]], "original": "function hamming(){\n   var obj={};\n   for(var i=1;i<=1000000;i++){\n      var h=i;\n      while(h%2==0)h/=2;\n      while(h%3==0)h/=3;\n      while(h%5==0)h/=5;\n      if(h==1)obj[i]=true\n   }\n   return obj;\n}\nvar Numbers=hamming();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var mn=(Arr.shift()).split(\" \").map(Number);\n   if(mn[0]==0)break;\n   var cnt=0;\n   for(var i=mn[0];i<=mn[1];i++){\n      if(Numbers[i])cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00164_1", "type": "JavaScript", "obfuscated": "var a0_0x5114a3 = a0_0x16a2;\nvar input = require('fs')[a0_0x5114a3(0x0)]('/dev/stdin', a0_0x5114a3(0x1));\nvar Arr = input[a0_0x5114a3(0x2)]()[a0_0x5114a3(0x3)]('\\x0a');\nfunction a0_0x16a2(DkjfCw, key) {\n    var stringArray = a0_0x1c1b();\n    a0_0x16a2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16a2(DkjfCw, key);\n}\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr[a0_0x5114a3(0x4)]()[a0_0x5114a3(0x3)]('\\x20')[a0_0x5114a3(0x5)](Number);\n    var ball = 0x20;\n    var i = 0x0;\n    while (!![]) {\n        ball -= (ball - 0x1) % 0x5;\n        console[a0_0x5114a3(0x6)](ball);\n        if (ball == 0x1) {\n            console['log'](0x0);\n            break;\n        }\n        ball -= arr[i % n];\n        i++;\n        console[a0_0x5114a3(0x6)](ball);\n    }\n}\nfunction a0_0x1c1b() {\n    var _0x5615dd = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x1c1b = function () {\n        return _0x5615dd;\n    };\n    return a0_0x1c1b();\n}", "test_cases": [["4\n3 1 4 2\n3\n4 3 2\n0", "31\n28\n26\n25\n21\n17\n16\n14\n11\n8\n6\n5\n1\n0\n31\n27\n26\n23\n21\n19\n16\n12\n11\n8\n6\n4\n1\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var ball=32;\n   var i=0;\n   while(true){\n      ball-=(ball-1)%5;\n      console.log(ball);\n      if(ball==1){console.log(0);break;}\n      ball-=arr[i%n];\n      i++;\n      console.log(ball);\n   }\n}", "language": "JavaScript"}
{"filename": "p00167_1", "type": "JavaScript", "obfuscated": "var a0_0x49ea72 = a0_0x5213;\nvar input = require('fs')[a0_0x49ea72(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x5213(vhuDXP, key) {\n    var stringArray = a0_0x40a9();\n    a0_0x5213 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5213(vhuDXP, key);\n}\nvar Arr = input[a0_0x49ea72(0x1)](/\\n$/, '')[a0_0x49ea72(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x49ea72(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        var x = Arr[a0_0x49ea72(0x3)]() - 0x0;\n        arr[a0_0x49ea72(0x4)](x);\n    }\n    var L = 0x1;\n    var cnt = 0x0;\n    while (!![]) {\n        if (arr['length'] == L)\n            break;\n        for (var i = 0x0; i < arr[a0_0x49ea72(0x5)] - L; i++) {\n            var memo = arr[i];\n            if (arr[i] > arr[i + 0x1]) {\n                cnt++;\n                arr[i] = arr[i + 0x1];\n                arr[i + 0x1] = memo;\n            }\n        }\n        L++;\n    }\n    console[a0_0x49ea72(0x6)](cnt);\n}\nfunction a0_0x40a9() {\n    var _0x3b4782 = [\n        'readFileSync',\n        'replace',\n        'split',\n        'shift',\n        'push',\n        'length',\n        'log'\n    ];\n    a0_0x40a9 = function () {\n        return _0x3b4782;\n    };\n    return a0_0x40a9();\n}", "test_cases": [["5\n5\n3\n2\n1\n4\n6\n1\n2\n3\n4\n5\n6\n3\n3\n2\n1\n0", "7\n0\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++){\n      var x=Arr.shift()-0;\n      arr.push(x);\n   }\n   var L=1;\n   var cnt=0;\n   while(true){\n      if(arr.length==L)break;\n      for(var i=0;i<arr.length-L;i++){\n         var memo=arr[i];\n         if(arr[i]>arr[i+1]){\n            cnt++;\n            arr[i]=arr[i+1];\n            arr[i+1]=memo;\n         }\n      }\n   L++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00173_1", "type": "JavaScript", "obfuscated": "var a0_0x58301d = a0_0xdf9d;\nfunction a0_0x38ca() {\n    var _0x2ff82d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x38ca = function () {\n        return _0x2ff82d;\n    };\n    return a0_0x38ca();\n}\nfunction a0_0xdf9d(jwOZuI, key) {\n    var stringArray = a0_0x38ca();\n    a0_0xdf9d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdf9d(jwOZuI, key);\n}\nvar input = require('fs')[a0_0x58301d(0x0)](a0_0x58301d(0x1), a0_0x58301d(0x2));\nvar Arr = input[a0_0x58301d(0x3)]()[a0_0x58301d(0x4)]('\\x0a');\nfor (var i = 0x0; i < Arr[a0_0x58301d(0x5)]; i++) {\n    var arr = Arr[i][a0_0x58301d(0x4)]('\\x20');\n    var a = arr[0x1] - 0x0 + (arr[0x2] - 0x0);\n    var b = (arr[0x1] - 0x0) * 0xc8 + (arr[0x2] - 0x0) * 0x12c;\n    console[a0_0x58301d(0x6)](arr[0x0] + '\\x20' + a + '\\x20' + b);\n}", "test_cases": [["1a 132 243\n1c 324 183\n1f 93 199\n2b 372 163\n2c 229 293\n2e 391 206\n3a 118 168\n3b 263 293\n3d 281 102", "1a 375 99300\n1c 507 119700\n1f 292 78300\n2b 535 123300\n2c 522 133700\n2e 597 140000\n3a 286 74000\n3b 556 140500\n3d 383 86800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \");\n   var a=(arr[1]-0)+(arr[2]-0);\n   var b=(arr[1]-0)*200+(arr[2]-0)*300;\n   console.log(arr[0]+\" \"+a+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00174_1", "type": "JavaScript", "obfuscated": "var a0_0xcaa6c8 = a0_0x4b0b;\nfunction a0_0x4b0b(xXPBdS, key) {\n    var stringArray = a0_0x2d63();\n    a0_0x4b0b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4b0b(xXPBdS, key);\n}\nvar input = require('fs')['readFileSync'](a0_0xcaa6c8(0x0), a0_0xcaa6c8(0x1));\nvar Arr = input[a0_0xcaa6c8(0x2)](/\\n$/, '')[a0_0xcaa6c8(0x3)]('\\x0a');\nfunction a0_0x2d63() {\n    var _0x25f6a5 = [\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift',\n        'forEach'\n    ];\n    a0_0x2d63 = function () {\n        return _0x25f6a5;\n    };\n    return a0_0x2d63();\n}\nwhile (!![]) {\n    var str = Arr[a0_0xcaa6c8(0x4)]();\n    if (str == '0')\n        break;\n    var arr = str[a0_0xcaa6c8(0x3)]('');\n    var a = 0x0;\n    var b = 0x0;\n    arr[a0_0xcaa6c8(0x4)]();\n    arr[a0_0xcaa6c8(0x5)](function (v) {\n        if (v == 'A')\n            a++;\n        if (v == 'B')\n            b++;\n    });\n    a > b ? a++ : b++;\n    console['log'](a + '\\x20' + b);\n}", "test_cases": [["ABAABBBAABABAAABBAA\nAABBBABBABBAAABABABAAB\nBABAABAABABABBAAAB\nAABABAAABBAABBBABAA\nAAAAAAAAAAA\nABBBBBBBBBB\n0", "11 8\n10 12\n11 7\n11 8\n11 0\n0 11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"0\")break;\n   var arr=str.split(\"\");\n   var a=0;\n   var b=0;\n   arr.shift();\n   arr.forEach(function(v){\n      if(v==\"A\")a++;\n      if(v==\"B\")b++;\n   });\n   (a>b)?a++:b++;\n   console.log(a+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00175_1", "type": "JavaScript", "obfuscated": "function a0_0x25c7() {\n    var _0x31ae8e = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'length',\n        'log',\n        'toString'\n    ];\n    a0_0x25c7 = function () {\n        return _0x31ae8e;\n    };\n    return a0_0x25c7();\n}\nvar a0_0x5224ac = a0_0x1af9;\nvar input = require('fs')[a0_0x5224ac(0x0)](a0_0x5224ac(0x1), a0_0x5224ac(0x2));\nfunction a0_0x1af9(PfdXxE, key) {\n    var stringArray = a0_0x25c7();\n    a0_0x1af9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1af9(PfdXxE, key);\n}\nvar Arr = input[a0_0x5224ac(0x3)]()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr[a0_0x5224ac(0x4)]; i++) {\n    if (Arr[i] == -0x1)\n        break;\n    console[a0_0x5224ac(0x5)](Arr[i][a0_0x5224ac(0x6)](0x4));\n}", "test_cases": [["7\n4\n0\n12\n10\n10000\n-1", "13\n10\n0\n30\n22\n2130100"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==-1)break;\n   console.log(Arr[i].toString(4));\n}", "language": "JavaScript"}
{"filename": "p00178_1", "type": "JavaScript", "obfuscated": "var a0_0x1fdc31 = a0_0x5e8d;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x1fdc31(0x0));\nfunction a0_0x5e8d(VKUTNt, key) {\n    var stringArray = a0_0x2f34();\n    a0_0x5e8d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e8d(VKUTNt, key);\n}\nfunction a0_0x2f34() {\n    var _0x1c2903 = [\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'max',\n        'length',\n        'join',\n        'replace',\n        'log'\n    ];\n    a0_0x2f34 = function () {\n        return _0x1c2903;\n    };\n    return a0_0x2f34();\n}\nvar arr = input[a0_0x1fdc31(0x1)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x1fdc31(0x2)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var base = [\n        '',\n        '',\n        '',\n        '',\n        ''\n    ];\n    for (var i = 0x0; i < n; i++) {\n        var [d, p, q] = arr['shift']()[a0_0x1fdc31(0x3)]('\\x20')[a0_0x1fdc31(0x4)](Number);\n        q--;\n        if (d == 0x1) {\n            var max = 0x0;\n            for (var j = 0x0; j < p; j++)\n                max = Math[a0_0x1fdc31(0x5)](max, base[q + j][a0_0x1fdc31(0x6)]);\n            for (var j = 0x0; j < p; j++) {\n                while (base[q + j][a0_0x1fdc31(0x6)] < max)\n                    base[q + j] += '0';\n                base[q + j] += '1';\n            }\n        } else if (d == 0x2) {\n            for (var j = 0x0; j < p; j++)\n                base[q] += '1';\n        }\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < 0x5; i++)\n        max = Math[a0_0x1fdc31(0x5)](max, base[i][a0_0x1fdc31(0x6)]);\n    for (var i = 0x0; i < 0x5; i++) {\n        while (base[i]['length'] < max)\n            base[i] += '0';\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < max; i++) {\n        var str = base['map'](v => v[i])[a0_0x1fdc31(0x7)]('');\n        str = str[a0_0x1fdc31(0x8)]('11111', '')[a0_0x1fdc31(0x8)](/0/g, '');\n        cnt += str[a0_0x1fdc31(0x6)];\n    }\n    console[a0_0x1fdc31(0x9)](cnt);\n}", "test_cases": [["4\n1 4 1\n1 3 1\n2 2 4\n2 3 5\n1\n1 5 1\n7\n2 2 2\n1 4 1\n2 1 3\n1 4 1\n1 1 1\n2 5 5\n1 4 2\n0", "2\n0\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var base=[\"\",\"\",\"\",\"\",\"\"];\n   for(var i=0;i<n;i++){\n      var [d,p,q]=arr.shift().split(\" \").map(Number);\n      q--;\n      if(d==1){\n         var max=0;\n         for(var j=0;j<p;j++)max=Math.max(max,base[q+j].length);\n         for(var j=0;j<p;j++){\n            while(base[q+j].length<max)base[q+j]+=\"0\";\n            base[q+j]+=\"1\";\n         }\n      }else if(d==2){\n         for(var j=0;j<p;j++)base[q]+=\"1\";\n      }\n   }\n   var max=0;\n   for(var i=0;i<5;i++)max=Math.max(max,base[i].length);\n   for(var i=0;i<5;i++){\n      while(base[i].length<max)base[i]+=\"0\";\n   }\n   var cnt=0;\n   for(var i=0;i<max;i++){\n      var str=base.map(v=> v[i]).join(\"\");\n      str=str.replace(\"11111\",\"\").replace(/0/g,\"\");\n      cnt+=str.length;\n   }\n   console.log(cnt);\n}\n\n", "language": "JavaScript"}
{"filename": "p00184_1", "type": "JavaScript", "obfuscated": "function a0_0x390e() {\n    var _0x4666a4 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'map',\n        'length',\n        'forEach',\n        'log'\n    ];\n    a0_0x390e = function () {\n        return _0x4666a4;\n    };\n    return a0_0x390e();\n}\nvar a0_0x3283b6 = a0_0x3fe2;\nvar input = require('fs')[a0_0x3283b6(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x3283b6(0x1)]()[a0_0x3283b6(0x2)]('\\x0a')[a0_0x3283b6(0x3)](Number);\nvar n = 0x0;\nvar arr = [\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0\n];\nfunction a0_0x3fe2(ECETpn, key) {\n    var stringArray = a0_0x390e();\n    a0_0x3fe2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3fe2(ECETpn, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x3283b6(0x4)]; i++) {\n    if (n == 0x0) {\n        if (i != 0x0)\n            arr[a0_0x3283b6(0x5)](function (v) {\n                var _0x4da815 = a0_0x3fe2;\n                console[_0x4da815(0x6)](v);\n            });\n        if (Arr[i] == 0x0)\n            break;\n        n = Arr[i];\n        arr = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n    } else {\n        n--;\n        if (Arr[i] >= 0x3c)\n            arr[0x6]++;\n        else if (Arr[i] >= 0x32)\n            arr[0x5]++;\n        else if (Arr[i] >= 0x28)\n            arr[0x4]++;\n        else if (Arr[i] >= 0x1e)\n            arr[0x3]++;\n        else if (Arr[i] >= 0x14)\n            arr[0x2]++;\n        else if (Arr[i] >= 0xa)\n            arr[0x1]++;\n        else\n            arr[0x0]++;\n    }\n}", "test_cases": [["8\n71\n34\n65\n11\n41\n39\n6\n5\n4\n67\n81\n78\n65\n0", "2\n1\n0\n2\n1\n0\n2\n0\n0\n0\n0\n0\n0\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar n=0;\nvar arr=[0,0,0,0,0,0,0];\nfor(var i=0;i<Arr.length;i++){\n   if(n==0){\n      if(i!=0)arr.forEach(function(v){console.log(v);});\n      if(Arr[i]==0)break;\n      n=Arr[i];\n      arr=[0,0,0,0,0,0,0];\n    }else{\n      n--;\n      if(Arr[i]>=60)arr[6]++;\n      else if(Arr[i]>=50)arr[5]++;\n      else if(Arr[i]>=40)arr[4]++;\n      else if(Arr[i]>=30)arr[3]++;\n      else if(Arr[i]>=20)arr[2]++;\n      else if(Arr[i]>=10)arr[1]++;\n      else arr[0]++;\n   }\n}", "language": "JavaScript"}
{"filename": "p00185_1", "type": "JavaScript", "obfuscated": "function a0_0xd195() {\n    var _0x308fc4 = [\n        'floor',\n        'sqrt',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'length',\n        'hasOwnProperty',\n        'log'\n    ];\n    a0_0xd195 = function () {\n        return _0x308fc4;\n    };\n    return a0_0xd195();\n}\nvar a0_0x2be654 = a0_0x50c1;\nfunction a0_0x50c1(rZQqdn, key) {\n    var stringArray = a0_0xd195();\n    a0_0x50c1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50c1(rZQqdn, key);\n}\nfunction prime(max) {\n    var _0x28f753 = a0_0x50c1;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x28f753(0x0)](Math[_0x28f753(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nvar p = prime(0xf4240);\nvar input = require('fs')['readFileSync'](a0_0x2be654(0x2), a0_0x2be654(0x3));\nvar Arr = input[a0_0x2be654(0x4)]()['split']('\\x0a')[a0_0x2be654(0x5)](Number);\nfor (var I = 0x0; I < Arr[a0_0x2be654(0x6)]; I++) {\n    var v = Arr[I];\n    if (v == 0x0)\n        break;\n    var cnt = 0x0;\n    var obj = {};\n    for (var k in p) {\n        if (k >= v)\n            break;\n        if (obj[a0_0x2be654(0x7)](k))\n            continue;\n        obj[v - k] = !![];\n        if (p[a0_0x2be654(0x7)](v - k))\n            cnt++;\n    }\n    console[a0_0x2be654(0x8)](cnt);\n}", "test_cases": [["134\n4330\n34808\n98792\n0", "6\n72\n274\n607"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(1000000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var I=0;I<Arr.length;I++){\n   var v=Arr[I];\n   if(v==0)break;\n   var cnt=0;\n   var obj={};\n   for(var k in p){\n      if(k>=v)break;\n      if(obj.hasOwnProperty(k))continue;\n      obj[v-k]=true;\n      if(p.hasOwnProperty(v-k))cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00186_1", "type": "JavaScript", "obfuscated": "var a0_0x380455 = a0_0x2d2f;\nvar input = require('fs')[a0_0x380455(0x0)](a0_0x380455(0x1), a0_0x380455(0x2));\nfunction a0_0x2d2f(PghdIy, key) {\n    var stringArray = a0_0x4b07();\n    a0_0x2d2f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d2f(PghdIy, key);\n}\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()[a0_0x380455(0x3)]('\\x20')[a0_0x380455(0x4)](Number);\n    if (arr[0x0] == 0x0)\n        break;\n    var q1 = arr[0x0];\n    var b = arr[0x1];\n    var c1 = arr[0x2];\n    var c2 = arr[0x3];\n    var q2 = arr[0x4];\n    var x = 0x0;\n    var y = 0x0;\n    var flag = !![];\n    while (!![]) {\n        if (b >= c1 * (x + 0x1) && x + 0x1 <= q2)\n            x++;\n        else\n            break;\n    }\n    while (!![]) {\n        if (b >= c1 * x + c2 * (y + 0x1))\n            y++;\n        else\n            break;\n    }\n    while (!![]) {\n        if (x == 0x0) {\n            flag = ![];\n            break;\n        }\n        if (c1 * x + c2 * y > b) {\n            flag = ![];\n            break;\n        }\n        if (q1 > x + y) {\n            x--;\n            while (!![]) {\n                if (b >= c1 * x + c2 * (y + 0x1))\n                    y++;\n                else\n                    break;\n            }\n        } else {\n            break;\n        }\n    }\n    console[a0_0x380455(0x5)](flag ? x + '\\x20' + y : 'NA');\n}\nfunction a0_0x4b07() {\n    var _0x11a3d1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x4b07 = function () {\n        return _0x11a3d1;\n    };\n    return a0_0x4b07();\n}", "test_cases": [["48 9297 240 126 32\n20 3010 157 141 7\n30 117002 5680 962 15\n8 1673 1712 190 22\n64 8478 87 54 307\n23 5477 117 92 12\n50 7558 1396 187 17\n279 88677 4522 514 14\n0", "28 20\n7 13\n15 33\nNA\n97 0\n12 44\nNA\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0)break;\n   var q1=arr[0];\n   var b=arr[1];\n   var c1=arr[2];\n   var c2=arr[3];\n   var q2=arr[4];\n   var x=0;\n   var y=0;\n   var flag=true;\n   while(true){\n      if(b>=c1*(x+1) &&  (x+1)<=q2)x++;\n      else break;\n   }\n   while(true){\n      if(b>=c1*x+c2*(y+1))y++;\n      else break;\n   }   \n   while(true){\n      if(x==0){flag=false;break;}\n      if(c1*x+c2*y>b){flag=false;break;}\n      if(q1>x+y){\n         x--;\n         while(true){\n            if(b>=c1*x+c2*(y+1))y++;\n            else break;         \n         }    \n      }else{\n         break;\n      }\n   }\n   console.log((flag)?x+\" \"+y:\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00189_1", "type": "JavaScript", "obfuscated": "var a0_0x6e12c0 = a0_0x3de1;\nfunction warshall() {\n    var _0x4305ad = a0_0x3de1;\n    for (var k = 0x0; k < n; k++) {\n        for (var i = 0x0; i < n; i++) {\n            for (var j = 0x0; j < n; j++) {\n                if ('IAjxd' !== _0x4305ad(0x0)) {\n                    C[i][j] = Math[_0x4305ad(0x1)](C[i][j], C[i][k] + C[k][j]);\n                } else {\n                    for (var j = 0x0; j < n; j++) {\n                        C[i][j] = Math['min'](C[i][j], C[i][k] + C[k][j]);\n                    }\n                }\n            }\n        }\n    }\n}\nvar input = require('fs')[a0_0x6e12c0(0x2)](a0_0x6e12c0(0x3), a0_0x6e12c0(0x4));\nfunction a0_0x3de1(bsOOOW, key) {\n    var stringArray = a0_0x4988();\n    a0_0x3de1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3de1(bsOOOW, key);\n}\nvar Arr = input[a0_0x6e12c0(0x5)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = 0xa;\n    var m = Arr[a0_0x6e12c0(0x6)]() - 0x0;\n    if (m == 0x0)\n        break;\n    var C = [];\n    for (var i = 0x0; i < n; i++) {\n        C[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            C[i][j] = i === j ? 0x0 : Infinity;\n        }\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var A = Arr[a0_0x6e12c0(0x6)]()[a0_0x6e12c0(0x7)]('\\x20')[a0_0x6e12c0(0x8)](Number);\n        max = Math[a0_0x6e12c0(0x9)](max, A[0x0], A[0x1]);\n        C[A[0x0]][A[0x1]] = A[0x2];\n        C[A[0x1]][A[0x0]] = A[0x2];\n    }\n    warshall();\n    var min = [\n        '',\n        Infinity\n    ];\n    for (var i = max; i >= 0x0; i--) {\n        var arr = C[i][a0_0x6e12c0(0xa)](0x0, max + 0x1);\n        var sum = arr[a0_0x6e12c0(0xb)](function (a, b) {\n            return a + b;\n        });\n        min[0x1] = Math[a0_0x6e12c0(0x1)](min[0x1], sum);\n        if (min[0x1] == sum)\n            min = [\n                i,\n                sum\n            ];\n    }\n    console[a0_0x6e12c0(0xc)](min[a0_0x6e12c0(0xd)]('\\x20'));\n}\nfunction a0_0x4988() {\n    var _0x894bf8 = [\n        'fZtDH',\n        'min',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'max',\n        'slice',\n        'reduce',\n        'log',\n        'join'\n    ];\n    a0_0x4988 = function () {\n        return _0x894bf8;\n    };\n    return a0_0x4988();\n}", "test_cases": [["6     \n0 1 80\n1 2 20\n0 2 60\n2 3 50\n3 4 60\n1 4 90\n2\n0 1 1\n1 2 1\n0", "2 240\n1 2"]], "original": "function warshall(){\n   for(var k=0;k<n;k++){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            C[i][j]=Math.min(C[i][j], C[i][k]+C[k][j]);\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=10;\n   var m=Arr.shift()-0;\n   if(m==0)break;\n   var C=[];\n   for(var i=0;i<n;i++){\n      C[i]=[];\n      for(var j=0;j<n;j++){\n         C[i][j]=(i===j)?0:Infinity;\n      }\n   }\n   var max=0;\n   for(var i=0;i<m;i++){\n      var A=(Arr.shift()).split(\" \").map(Number);\n      max=Math.max(max,A[0],A[1]);\n      C[A[0]][A[1]]=A[2];\n      C[A[1]][A[0]]=A[2];\n   }\n   warshall();\n   var min=[\"\",Infinity];\n   for(var i=max;i>=0;i--){\n      var arr=C[i].slice(0,max+1);\n      var sum=arr.reduce(function(a,b){return a+b;});\n      min[1]=Math.min(min[1],sum);\n      if(min[1]==sum)min=[i,sum];\n   }\n   console.log(min.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00196_1", "type": "JavaScript", "obfuscated": "var a0_0x4e773d = a0_0x448d;\nfunction a0_0x448d(PyhOao, key) {\n    var stringArray = a0_0x5642();\n    a0_0x448d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x448d(PyhOao, key);\n}\nfunction a0_0x5642() {\n    var _0x59c31d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'sort',\n        'log'\n    ];\n    a0_0x5642 = function () {\n        return _0x59c31d;\n    };\n    return a0_0x5642();\n}\nvar input = require('fs')[a0_0x4e773d(0x0)](a0_0x4e773d(0x1), a0_0x4e773d(0x2));\nvar Arr = input[a0_0x4e773d(0x3)]()[a0_0x4e773d(0x4)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x4e773d(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var team = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x4e773d(0x5)]()[a0_0x4e773d(0x4)]('\\x20');\n        var name = arr[a0_0x4e773d(0x5)]();\n        var scoreA = 0x0;\n        var scoreB = 0x0;\n        for (var j = 0x0; j < n - 0x1; j++) {\n            if (arr[j] - 0x0 === 0x0)\n                scoreA++;\n            if (arr[j] - 0x0 === 0x1)\n                scoreB++;\n        }\n        team[a0_0x4e773d(0x6)]([\n            name,\n            scoreA * 0x64 + (0xa - scoreB) + (0xa - j) * 0.01\n        ]);\n    }\n    team[a0_0x4e773d(0x7)](function (a, b) {\n        return b[0x1] - a[0x1];\n    });\n    team['forEach'](function (v) {\n        var _0x53aeab = a0_0x448d;\n        console[_0x53aeab(0x8)](v[0x0]);\n    });\n}", "test_cases": [["6\nA 1 0 0 2 0\nB 0 0 1 1 0\nC 1 1 1 1 1\nD 1 0 0 1 2\nE 2 0 0 0 0\nF 1 1 0 2 1\n4\ng 1 1 1\nh 0 1 2\nw 0 0 0\nb 0 2 1\n0", "E\nA\nB\nD\nF\nC\nw\nh\nb\ng"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var team=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var name=arr.shift();\n      var scoreA=0;\n      var scoreB=0;\n      for(var j=0;j<n-1;j++){\n         if(arr[j]-0===0)scoreA++;\n         if(arr[j]-0===1)scoreB++;\n      }\n      team.push([name,scoreA*100+(10-scoreB)+((10-j)*0.01)]);\n   }\n   team.sort(function(a,b){return b[1]-a[1];});\n   team.forEach(function(v){console.log(v[0]);});\n}", "language": "JavaScript"}
{"filename": "p00220_1", "type": "JavaScript", "obfuscated": "function a0_0x4cdf(wuPaSF, key) {\n    var stringArray = a0_0x1210();\n    a0_0x4cdf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4cdf(wuPaSF, key);\n}\nvar a0_0x389348 = a0_0x4cdf;\nvar input = require('fs')['readFileSync'](a0_0x389348(0x0), a0_0x389348(0x1));\nfunction a0_0x1210() {\n    var _0x1d2179 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'push',\n        'shift',\n        'length',\n        'log'\n    ];\n    a0_0x1210 = function () {\n        return _0x1d2179;\n    };\n    return a0_0x1210();\n}\nvar Arr = input['replace'](/\\n$/, '')[a0_0x389348(0x2)]('\\x0a');\nvar nums = [];\nfor (var i = 0x7; i >= -0x4; i--) {\n    nums[a0_0x389348(0x3)](Math['pow'](0x2, i));\n}\nwhile (!![]) {\n    var x = Arr[a0_0x389348(0x4)]() - 0x0;\n    if (x == -0x1)\n        break;\n    var str = '';\n    for (var i = 0x0; i < nums[a0_0x389348(0x5)]; i++) {\n        if (x >= nums[i]) {\n            x -= nums[i];\n            str += '1';\n        } else {\n            str += '0';\n        }\n        if (i == 0x7)\n            str += '.';\n    }\n    if (x !== 0x0)\n        str = 'NA';\n    console[a0_0x389348(0x6)](str);\n}", "test_cases": [["23.5\n158.1\n-1.0", "00010111.1000\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar nums=[];\nfor(var i=7;i>=-4;i--){\n   nums.push(Math.pow(2,i));\n}\nwhile(true){\n   var x=Arr.shift()-0;\n   if(x==-1)break;\n   var str=\"\";\n   for(var i=0;i<nums.length;i++){\n       if(x>=nums[i]){\n          x-=nums[i];\n          str+=\"1\";\n       }else{\n          str+=\"0\";\n       }\n       if(i==7)str+=\".\";\n   }\n   if(x!==0)str=\"NA\";\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00226_1", "type": "JavaScript", "obfuscated": "var a0_0x75d8ad = a0_0xbb03;\nfunction a0_0x2cc7() {\n    var _0x5cd9df = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'indexOf',\n        'log'\n    ];\n    a0_0x2cc7 = function () {\n        return _0x5cd9df;\n    };\n    return a0_0x2cc7();\n}\nvar input = require('fs')[a0_0x75d8ad(0x0)]('/dev/stdin', a0_0x75d8ad(0x1));\nvar Arr = input[a0_0x75d8ad(0x2)]()[a0_0x75d8ad(0x3)]('\\x0a');\nfunction a0_0xbb03(FhNTRR, key) {\n    var stringArray = a0_0x2cc7();\n    a0_0xbb03 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xbb03(FhNTRR, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x75d8ad(0x4)]; i++) {\n    if (Arr[i] == '0\\x200')\n        break;\n    var arr = Arr[i][a0_0x75d8ad(0x3)]('\\x20');\n    var x = arr[0x0]['split']('');\n    var y = arr[0x1][a0_0x75d8ad(0x3)]('');\n    var h = 0x0;\n    var b = 0x0;\n    for (var j = 0x0; j < 0x4; j++) {\n        if (x[j] == y[j]) {\n            h++;\n        } else if (y[a0_0x75d8ad(0x5)](x[j]) != -0x1) {\n            b++;\n        }\n    }\n    console[a0_0x75d8ad(0x6)](h + '\\x20' + b);\n}", "test_cases": [["1234 5678\n1234 1354\n1234 1234\n1230 1023\n0123 1234\n0 0", "0 0\n2 1\n4 0\n1 3\n0 3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\nif(Arr[i]==\"0 0\")break;\nvar arr=Arr[i].split(\" \");\nvar x=(arr[0]).split(\"\");\nvar y=(arr[1]).split(\"\");\nvar h=0;\nvar b=0;\nfor(var j=0;j<4;j++){\n   if(x[j]==y[j]){h++;}\n   else if(y.indexOf(x[j])!=-1){b++;}\n}\nconsole.log(h+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00227_1", "type": "JavaScript", "obfuscated": "var a0_0x2914a4 = a0_0x26f7;\nvar input = require('fs')[a0_0x2914a4(0x0)](a0_0x2914a4(0x1), a0_0x2914a4(0x2));\nfunction a0_0x26f7(CrdxWK, key) {\n    var stringArray = a0_0x76fc();\n    a0_0x26f7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x26f7(CrdxWK, key);\n}\nfunction a0_0x76fc() {\n    var _0x5882a5 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        '0\\x200',\n        'split',\n        'map',\n        'sort',\n        'log'\n    ];\n    a0_0x76fc = function () {\n        return _0x5882a5;\n    };\n    return a0_0x76fc();\n}\nvar Arr = input[a0_0x2914a4(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var NM = Arr[a0_0x2914a4(0x4)]();\n    if (NM == a0_0x2914a4(0x5))\n        break;\n    var nm = NM[a0_0x2914a4(0x6)]('\\x20')[a0_0x2914a4(0x7)](Number);\n    var m = nm[0x1];\n    var arr = Arr[a0_0x2914a4(0x4)]()[a0_0x2914a4(0x6)]('\\x20')['map'](Number);\n    arr[a0_0x2914a4(0x8)](function (a, b) {\n        return b - a;\n    });\n    var sum = 0x0;\n    for (var i = 0x0; i < arr['length']; i++) {\n        if ((i + 0x1) % m != 0x0)\n            sum += arr[i];\n    }\n    console[a0_0x2914a4(0x9)](sum);\n}", "test_cases": [["4 2\n50 40 100 80\n7 3\n400 300 100 700 200 600 500\n0 0", "150\n2100"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var NM=Arr.shift();\n   if(NM==\"0 0\")break;\n   var nm=NM.split(\" \").map(Number);\n   var m=nm[1];\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   arr.sort(function(a,b){return b-a;});\n   var sum=0;\n   for(var i=0;i<arr.length;i++){\n      if((i+1)%m!=0)sum+=arr[i];\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00228_1", "type": "JavaScript", "obfuscated": "var a0_0x488390 = a0_0x2c9e;\nvar input = require('fs')[a0_0x488390(0x0)](a0_0x488390(0x1), a0_0x488390(0x2));\nvar Arr = input['trim']()['split']('\\x0a')[a0_0x488390(0x3)](Number);\nfunction a0_0x2c9e(OUGtAY, key) {\n    var stringArray = a0_0x936a();\n    a0_0x2c9e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c9e(OUGtAY, key);\n}\nvar SEG = [\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0\n    ]['reverse'](),\n    [\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ][a0_0x488390(0x4)](),\n    [\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1\n    ][a0_0x488390(0x4)](),\n    [\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1\n    ][a0_0x488390(0x4)](),\n    [\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x0\n    ][a0_0x488390(0x4)](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1\n    ][a0_0x488390(0x4)](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1\n    ][a0_0x488390(0x4)]()\n];\nvar n = Arr[0x0];\nvar seg = [];\nfor (var i = 0x1; i < Arr[a0_0x488390(0x5)]; i++) {\n    if (n == 0x0) {\n        if (i == 0x0)\n            continue;\n        var arr = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n        seg[a0_0x488390(0x6)](function (v) {\n            var _0x13df76 = a0_0x2c9e;\n            var V = SEG[v];\n            var str = '';\n            for (var i = 0x0; i < 0x7; i++) {\n                str += V[i] == arr[i] ? '0' : '1';\n            }\n            console[_0x13df76(0x7)](str);\n            arr = V[_0x13df76(0x8)]();\n        });\n        if (Arr[i] == -0x1)\n            break;\n        seg = [];\n        n = Arr[i];\n    } else {\n        n--;\n        seg[a0_0x488390(0x9)](Arr[i]);\n    }\n}\nfunction a0_0x936a() {\n    var _0xb90246 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'reverse',\n        'length',\n        'forEach',\n        'log',\n        'slice',\n        'push'\n    ];\n    a0_0x936a = function () {\n        return _0xb90246;\n    };\n    return a0_0x936a();\n}", "test_cases": [["3\n0\n5\n1\n1\n0\n-1", "0111111\n1010010\n1101011\n0111111"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar SEG=[\n[1,1,1,1,1,1,0].reverse(),\n[0,1,1,0,0,0,0].reverse(),\n[1,1,0,1,1,0,1].reverse(),\n[1,1,1,1,0,0,1].reverse(),\n[0,1,1,0,0,1,1].reverse(),\n[1,0,1,1,0,1,1].reverse(),\n[1,0,1,1,1,1,1].reverse(),\n[1,1,1,0,0,1,0].reverse(),\n[1,1,1,1,1,1,1].reverse(),\n[1,1,1,1,0,1,1].reverse()\n];\nvar n=Arr[0];\nvar seg=[];\nfor(var i=1;i<Arr.length;i++){\n   if(n==0){\n      if(i==0)continue;\n      var arr=[0,0,0,0,0,0,0];\n      seg.forEach(function(v){\n         var V=SEG[v];\n         var str=\"\";\n         for(var i=0;i<7;i++){\n            str+=(V[i]==arr[i])?\"0\":\"1\";\n         }\n         console.log(str);\n         arr=V.slice();\n      });\n      if(Arr[i]==-1)break;\n      seg=[];\n      n=Arr[i];\n   }else{\n      n--;\n      seg.push(Arr[i]);\n   }\n}", "language": "JavaScript"}
{"filename": "p00229_1", "type": "JavaScript", "obfuscated": "var a0_0x114b48 = a0_0x3d7f;\nvar input = require('fs')[a0_0x114b48(0x0)](a0_0x114b48(0x1), a0_0x114b48(0x2));\nfunction a0_0x53b4() {\n    var _0x568d52 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200\\x200\\x200\\x200\\x200',\n        'log'\n    ];\n    a0_0x53b4 = function () {\n        return _0x568d52;\n    };\n    return a0_0x53b4();\n}\nfunction a0_0x3d7f(XbNepl, key) {\n    var stringArray = a0_0x53b4();\n    a0_0x3d7f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3d7f(XbNepl, key);\n}\nvar Arr = input[a0_0x114b48(0x3)]()[a0_0x114b48(0x4)]('\\x0a');\nwhile (!![]) {\n    var BR = Arr[a0_0x114b48(0x5)]();\n    if (BR == a0_0x114b48(0x6))\n        break;\n    var br = BR[a0_0x114b48(0x4)]('\\x20')['map'](Number);\n    var b = br[0x0];\n    var r = br[0x1];\n    var g = br[0x2];\n    var c = br[0x3];\n    var s = br[0x4];\n    var t = br[0x5];\n    var sum = 0x64;\n    sum += b * 0xf;\n    sum += r * 0xf;\n    sum += (b * 0x5 + r * 0x3) * 0xf;\n    sum += g * 0x7;\n    sum += c * 0x2;\n    sum -= (b * 0x5 + r * 0x3) * 0x2;\n    sum -= (t - s - (b * 0x5 + r * 0x3)) * 0x3;\n    console[a0_0x114b48(0x7)](sum);\n}", "test_cases": [["3 2 30 3 26 226\n9 0 18 3 20 118\n5 5 12 2 15 203\n7 4 19 2 22 197\n7 4 24 4 17 209\n0 0 0 0 0 0", "127\n793\n414\n629\n617"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var BR=Arr.shift();\n   if(BR==\"0 0 0 0 0 0\")break;\n   var br=BR.split(\" \").map(Number);\n   var b=br[0];\n   var r=br[1];\n   var g=br[2];\n   var c=br[3];\n   var s=br[4];\n   var t=br[5];\n   var sum=100;\n   sum+=b*15;\n   sum+=r*15;\n   sum+=(b*5+r*3)*15;\n   sum+=g*7;\n   sum+=c*2;\n   sum-=(b*5+r*3)*2;\n   sum-=(t-s-(b*5+r*3))*3;\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00240_1", "type": "JavaScript", "obfuscated": "var a0_0x48ce05 = a0_0x1da7;\nfunction a0_0x1f47() {\n    var _0x191bd5 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'shift',\n        'map',\n        'pow',\n        'push',\n        'max',\n        'apply',\n        'log',\n        'indexOf'\n    ];\n    a0_0x1f47 = function () {\n        return _0x191bd5;\n    };\n    return a0_0x1f47();\n}\nvar input = require('fs')[a0_0x48ce05(0x0)](a0_0x48ce05(0x1), 'utf8');\nfunction a0_0x1da7(mmSynO, key) {\n    var stringArray = a0_0x1f47();\n    a0_0x1da7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1da7(mmSynO, key);\n}\nvar Arr = input['trim']()[a0_0x48ce05(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x48ce05(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var y = Arr['shift']() - 0x0;\n    var S = [];\n    var s = [];\n    for (var i = 0x0; i < n; i++) {\n        var brt = Arr['shift']()['split']('\\x20')[a0_0x48ce05(0x4)](Number);\n        var r = brt[0x1];\n        var t = brt[0x2];\n        var result;\n        if (t == 0x1)\n            result = 0x2710 * (0x1 + y * (r / 0x64));\n        if (t == 0x2)\n            result = 0x2710 * Math[a0_0x48ce05(0x5)](0x1 + r / 0x64, y);\n        S[a0_0x48ce05(0x6)](brt[0x0]);\n        s['push'](result);\n    }\n    var max = Math[a0_0x48ce05(0x7)][a0_0x48ce05(0x8)](null, s);\n    console[a0_0x48ce05(0x9)](S[s[a0_0x48ce05(0xa)](max)]);\n}", "test_cases": [["2\n8\n1 5 2\n2 6 1\n2\n9\n1 5 2\n2 6 1\n0", "2\n1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var y=Arr.shift()-0;\n   var S=[];\n   var s=[];\n   for(var i=0;i<n;i++){\n      var brt=(Arr.shift()).split(\" \").map(Number);\n      var r=brt[1];\n      var t=brt[2];\n      var result;\n      if(t==1)result=10000*(1+(y*(r/100)));\n      if(t==2)result=10000*Math.pow((1+(r/100)),y);\n      S.push(brt[0]);\n      s.push(result);\n   }\n   var max=Math.max.apply(null,s);\n   console.log(S[s.indexOf(max)]);\n}", "language": "JavaScript"}
{"filename": "p00254_1", "type": "JavaScript", "obfuscated": "var a0_0x27bdbc = a0_0x41a1;\nfunction a0_0x41a1(rHdijP, key) {\n    var stringArray = a0_0x53e1();\n    a0_0x41a1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41a1(rHdijP, key);\n}\nvar input = require('fs')[a0_0x27bdbc(0x0)]('/dev/stdin', a0_0x27bdbc(0x1));\nvar Arr = input[a0_0x27bdbc(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']();\n    if (n == '0000')\n        break;\n    if (n == '1111' || n == '2222' || n == '3333' || n == a0_0x27bdbc(0x3) || n == '5555') {\n        console['log']('NA');\n        continue;\n    }\n    if (n == a0_0x27bdbc(0x4) || n == a0_0x27bdbc(0x5) || n == a0_0x27bdbc(0x6) || n == a0_0x27bdbc(0x7)) {\n        console[a0_0x27bdbc(0x8)]('NA');\n        continue;\n    }\n    var i = 0x0;\n    while (!![]) {\n        if (n == a0_0x27bdbc(0x9))\n            break;\n        i++;\n        var arr = n[a0_0x27bdbc(0xa)]('')['map'](Number);\n        arr[a0_0x27bdbc(0xb)](function (a, b) {\n            return b - a;\n        });\n        var L = parseInt('' + arr[0x0] + arr[0x1] + arr[0x2] + arr[0x3], 0xa);\n        var S = parseInt('' + arr[0x3] + arr[0x2] + arr[0x1] + arr[0x0], 0xa);\n        n = ('0000' + (L - S))[a0_0x27bdbc(0xc)](-0x4);\n    }\n    console[a0_0x27bdbc(0x8)](i);\n}\nfunction a0_0x53e1() {\n    var _0x3178b5 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        '4444',\n        '6666',\n        '7777',\n        '8888',\n        '9999',\n        'log',\n        '6174',\n        'split',\n        'sort',\n        'slice'\n    ];\n    a0_0x53e1 = function () {\n        return _0x3178b5;\n    };\n    return a0_0x53e1();\n}", "test_cases": [["6174\n2012\n3333\n0000", "0\n3\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift();\n   if(n==\"0000\")break;\n   if(n==\"1111\" || n==\"2222\" || n==\"3333\" || n==\"4444\" || n==\"5555\"){console.log(\"NA\");continue;}\n   if(n==\"6666\" || n==\"7777\" || n==\"8888\" || n==\"9999\"){console.log(\"NA\");continue;}\n   var i=0;\n   while(true){\n      if(n==\"6174\")break;\n      i++;\n      var arr=n.split(\"\").map(Number);\n      arr.sort(function(a,b){return b-a;});\n      var L=parseInt(\"\"+arr[0]+arr[1]+arr[2]+arr[3],10);\n      var S=parseInt(\"\"+arr[3]+arr[2]+arr[1]+arr[0],10);\n      n=(\"0000\"+(L-S)).slice(-4);\n   }\n   console.log(i);\n}", "language": "JavaScript"}
{"filename": "p00271_1", "type": "JavaScript", "obfuscated": "function a0_0x3889() {\n    var _0x35929f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x3889 = function () {\n        return _0x35929f;\n    };\n    return a0_0x3889();\n}\nvar a0_0x7baa8b = a0_0xc67f;\nfunction a0_0xc67f(uMXWWT, key) {\n    var stringArray = a0_0x3889();\n    a0_0xc67f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xc67f(uMXWWT, key);\n}\nvar input = require('fs')[a0_0x7baa8b(0x0)](a0_0x7baa8b(0x1), a0_0x7baa8b(0x2));\nvar Arr = input[a0_0x7baa8b(0x3)]()[a0_0x7baa8b(0x4)]('\\x0a');\nfor (var i = 0x0; i < 0x7; i++) {\n    var arr = Arr[i][a0_0x7baa8b(0x4)]('\\x20')['map'](Number);\n    console[a0_0x7baa8b(0x5)](arr[0x0] - arr[0x1]);\n}", "test_cases": [["30 19\n39 20\n19 18\n25 20\n22 21\n23 10\n10 -10", "11\n19\n1\n5\n1\n13\n20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<7;i++){\nvar arr=Arr[i].split(\" \").map(Number);\nconsole.log(arr[0]-arr[1]);\n}", "language": "JavaScript"}
{"filename": "p00272_1", "type": "JavaScript", "obfuscated": "var a0_0x473124 = a0_0x26af;\nfunction a0_0x4201() {\n    var _0x282e06 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x4201 = function () {\n        return _0x282e06;\n    };\n    return a0_0x4201();\n}\nvar input = require('fs')[a0_0x473124(0x0)]('/dev/stdin', a0_0x473124(0x1));\nfunction a0_0x26af(hHddTv, key) {\n    var stringArray = a0_0x4201();\n    a0_0x26af = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x26af(hHddTv, key);\n}\nvar Arr = input[a0_0x473124(0x2)]()[a0_0x473124(0x3)]('\\x0a');\nfor (var i = 0x0; i < 0x4; i++) {\n    var arr = Arr[i][a0_0x473124(0x3)]('\\x20')[a0_0x473124(0x4)](Number);\n    if (arr[0x0] == 0x1)\n        console[a0_0x473124(0x5)](arr[0x1] * 0x1770);\n    if (arr[0x0] == 0x2)\n        console['log'](arr[0x1] * 0xfa0);\n    if (arr[0x0] == 0x3)\n        console['log'](arr[0x1] * 0xbb8);\n    if (arr[0x0] == 0x4)\n        console[a0_0x473124(0x5)](arr[0x1] * 0x7d0);\n}", "test_cases": [["3 10\n1 4\n4 1\n2 5", "30000\n24000\n2000\n20000"], ["1 1\n2 0\n3 1\n4 1", "6000\n0\n3000\n2000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<4;i++){\nvar arr=Arr[i].split(\" \").map(Number);\nif(arr[0]==1)console.log(arr[1]*6000);\nif(arr[0]==2)console.log(arr[1]*4000);\nif(arr[0]==3)console.log(arr[1]*3000);\nif(arr[0]==4)console.log(arr[1]*2000);\n}", "language": "JavaScript"}
{"filename": "p00273_1", "type": "JavaScript", "obfuscated": "var a0_0x4235f6 = a0_0x2cd5;\nfunction a0_0x2cd5(iXIsEJ, key) {\n    var stringArray = a0_0x4c1e();\n    a0_0x2cd5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2cd5(iXIsEJ, key);\n}\nvar input = require('fs')[a0_0x4235f6(0x0)](a0_0x4235f6(0x1), 'utf8');\nfunction a0_0x4c1e() {\n    var _0x532219 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map'\n    ];\n    a0_0x4c1e = function () {\n        return _0x532219;\n    };\n    return a0_0x4c1e();\n}\nvar Arr = input[a0_0x4235f6(0x2)]()['split']('\\x0a');\nvar N = Arr[a0_0x4235f6(0x3)]() - 0x0;\nfor (var i = 0x0; i < N; i++) {\n    var arr = Arr[a0_0x4235f6(0x3)]()[a0_0x4235f6(0x4)]('\\x20')[a0_0x4235f6(0x5)](Number);\n    var x = arr[0x0];\n    var y = arr[0x1];\n    var b = arr[0x2];\n    var p = arr[0x3];\n    var A = x * b + y * p;\n    while (b < 0x5)\n        b++;\n    while (p < 0x2)\n        p++;\n    var B = (x * b + y * p) * 0.8;\n    console['log'](Math['min'](A, B));\n}", "test_cases": [["2\n100 100 1 1\n1000 500 5 2", "200\n4800"], ["5\n500 500 1 1\n500 500 5 2\n1000 100 0 6\n1000 100 6 0\n100 1000 0 0", "1000\n2800\n600\n4960\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar N=Arr.shift()-0;\nfor(var i=0;i<N;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var x=arr[0];\n   var y=arr[1];\n   var b=arr[2];\n   var p=arr[3];\n   var A=(x*b)+(y*p);\n   while(b<5)b++;\n   while(p<2)p++;\n   var B=((x*b)+(y*p))*0.8;\n   console.log(Math.min(A,B));\n}", "language": "JavaScript"}
{"filename": "p00274_1", "type": "JavaScript", "obfuscated": "var a0_0x3b8efb = a0_0x2c91;\nvar input = require('fs')[a0_0x3b8efb(0x0)]('/dev/stdin', a0_0x3b8efb(0x1));\nfunction a0_0x4a9c() {\n    var _0x36239c = [\n        'readFileSync',\n        'utf8',\n        'replace',\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x4a9c = function () {\n        return _0x36239c;\n    };\n    return a0_0x4a9c();\n}\nfunction a0_0x2c91(vNnGIV, key) {\n    var stringArray = a0_0x4a9c();\n    a0_0x2c91 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2c91(vNnGIV, key);\n}\nvar Arr = input[a0_0x3b8efb(0x2)](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr[a0_0x3b8efb(0x3)]()[a0_0x3b8efb(0x4)]('\\x20')[a0_0x3b8efb(0x5)](Number);\n    var sum = 0x0;\n    var flag = ![];\n    arr[a0_0x3b8efb(0x6)](function (v) {\n        if (v != 0x0)\n            sum += 0x1;\n        if (v >= 0x2)\n            flag = !![];\n    });\n    console[a0_0x3b8efb(0x7)](flag ? sum + 0x1 : 'NA');\n}", "test_cases": [["2\n3 2\n3\n0 1 1\n1\n1000\n0", "3\nNA\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var sum=0;\n   var flag=false;\n   arr.forEach(function(v){\n      if(v!=0)sum+=1;\n      if(v>=2)flag=true;\n   });\n   console.log(flag?sum+1:\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00275_1", "type": "JavaScript", "obfuscated": "function a0_0x396e(KvrDCw, key) {\n    var stringArray = a0_0x307f();\n    a0_0x396e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x396e(KvrDCw, key);\n}\nvar a0_0x335a6e = a0_0x396e;\nfunction a0_0x307f() {\n    var _0x5e0fb3 = [\n        'utf8',\n        'split',\n        'shift',\n        'length',\n        'sort',\n        'log',\n        'join'\n    ];\n    a0_0x307f = function () {\n        return _0x5e0fb3;\n    };\n    return a0_0x307f();\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x335a6e(0x0));\nvar Arr = input['trim']()[a0_0x335a6e(0x1)]('\\x0a');\nwhile (!![]) {\n    var N = Arr[a0_0x335a6e(0x2)]() - 0x0;\n    if (N == 0x0)\n        break;\n    var n = [];\n    var p = 0x0;\n    for (var i = 0x0; i < N; i++)\n        n[i] = 0x0;\n    var str = Arr['shift']();\n    for (var i = 0x0; i < str[a0_0x335a6e(0x3)]; i++) {\n        var v = str[i];\n        var j = i % N;\n        if (v == 'M')\n            n[j]++;\n        if (v == 'S') {\n            p += n[j] + 0x1;\n            n[j] = 0x0;\n        }\n        if (v == 'L') {\n            n[j] += p + 0x1;\n            p = 0x0;\n        }\n    }\n    n[a0_0x335a6e(0x4)](function (a, b) {\n        return a - b;\n    });\n    console[a0_0x335a6e(0x5)](n[a0_0x335a6e(0x6)]('\\x20') + '\\x20' + p);\n}", "test_cases": [["2\nSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n2\nSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMSL\n5\nMMMMMMSLSLLMMMSMMSLMMMLMMMMLSLLLLMLSMMLMMLLMSSSLMMMMLMLSMLMSMMMMMMMSMMMMMMLMMMMMSMMMLMMLMMMMMMMMMSSM\n0", "42 58 0\n0 100 0\n0 0 3 10 59 28"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var n=[];\n   var p=0;\n   for(var i=0;i<N;i++)n[i]=0;\n   var str=Arr.shift();\n   for(var i=0;i<str.length;i++){\n      var v=str[i];\n      var j=i%N;\n      if(v==\"M\")n[j]++;\n      if(v==\"S\"){p+=(n[j]+1);n[j]=0;}\n      if(v==\"L\"){n[j]+=(p+1);p=0;}\n   }\n   n.sort(function(a,b){return a-b;});\n   console.log(n.join(\" \")+\" \"+p);\n}", "language": "JavaScript"}
{"filename": "p00311_1", "type": "JavaScript", "obfuscated": "var a0_0x51b8cf = a0_0x15fa;\nvar input = require('fs')[a0_0x51b8cf(0x0)]('/dev/stdin', a0_0x51b8cf(0x1));\nvar arr = input['trim']()[a0_0x51b8cf(0x2)]('\\x0a');\nvar [h1, h2] = arr['shift']()[a0_0x51b8cf(0x2)]('\\x20')[a0_0x51b8cf(0x3)](Number);\nfunction a0_0x15fa(IuxXez, key) {\n    var stringArray = a0_0xbcc0();\n    a0_0x15fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15fa(IuxXez, key);\n}\nvar [k1, k2] = arr['shift']()[a0_0x51b8cf(0x2)]('\\x20')['map'](Number);\nfunction a0_0xbcc0() {\n    var _0x5f2142 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'map',\n        'shift',\n        'floor',\n        'even',\n        'log',\n        'hiroshi',\n        'kenjiro'\n    ];\n    a0_0xbcc0 = function () {\n        return _0x5f2142;\n    };\n    return a0_0xbcc0();\n}\nvar [a, b, c, d] = arr[a0_0x51b8cf(0x4)]()[a0_0x51b8cf(0x2)]('\\x20')['map'](Number);\nvar h = h1 * a + h2 * b + Math[a0_0x51b8cf(0x5)](h1 / 0xa) * c + Math[a0_0x51b8cf(0x5)](h2 / 0x14) * d;\nvar k = k1 * a + k2 * b + Math[a0_0x51b8cf(0x5)](k1 / 0xa) * c + Math['floor'](k2 / 0x14) * d;\nif (h == k)\n    console['log'](a0_0x51b8cf(0x6));\nelse if (h > k)\n    console[a0_0x51b8cf(0x7)](a0_0x51b8cf(0x8));\nelse\n    console[a0_0x51b8cf(0x7)](a0_0x51b8cf(0x9));", "test_cases": [["5 1\n3 1\n1 2 5 5", "hiroshi"], ["5 1\n4 2\n1 2 5 5", "kenjiro"], ["0 20\n10 0\n1 1 10 0", "even"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar [h1,h2] = arr.shift().split(\" \").map(Number);\nvar [k1,k2] = arr.shift().split(\" \").map(Number);\nvar [a,b,c,d] = arr.shift().split(\" \").map(Number);\nvar h = h1*a + h2*b+Math.floor(h1/10)*c+Math.floor(h2/20)*d;\nvar k = k1*a + k2*b+Math.floor(k1/10)*c+Math.floor(k2/20)*d;\nif(h==k)console.log(\"even\");\nelse if(h>k)console.log(\"hiroshi\");\nelse console.log(\"kenjiro\");\n", "language": "JavaScript"}
{"filename": "p00312_1", "type": "JavaScript", "obfuscated": "var a0_0x15e640 = a0_0x72e6;\nfunction a0_0x72e6(SwDeps, key) {\n    var stringArray = a0_0xb29a();\n    a0_0x72e6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x72e6(SwDeps, key);\n}\nfunction a0_0xb29a() {\n    var _0x4b4597 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'map',\n        'log'\n    ];\n    a0_0xb29a = function () {\n        return _0x4b4597;\n    };\n    return a0_0xb29a();\n}\nvar input = require('fs')[a0_0x15e640(0x0)]('/dev/stdin', a0_0x15e640(0x1));\nvar [D, L] = input[a0_0x15e640(0x2)]()['split']('\\x20')[a0_0x15e640(0x3)](Number);\nvar amari = D % L;\nvar yakusuu = (D - amari) / L;\nconsole[a0_0x15e640(0x4)](yakusuu + amari);", "test_cases": [["10 5", "2"], ["7 4", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [D,L] = input.trim().split(\" \").map(Number);\nvar amari = D%L;\nvar yakusuu = (D - amari)/L;\nconsole.log(yakusuu + amari);\n", "language": "JavaScript"}
{"filename": "p00313_1", "type": "JavaScript", "obfuscated": "var a0_0x3a7c42 = a0_0x2199;\nvar input = require('fs')[a0_0x3a7c42(0x0)](a0_0x3a7c42(0x1), 'utf8');\nvar arr = input['trim']()[a0_0x3a7c42(0x2)]('\\x0a');\nvar n = arr[a0_0x3a7c42(0x3)]() - 0x0;\nvar xyz = [];\nfor (var i = 0x0; i <= n; i++)\n    xyz[i] = [\n        0x0,\n        0x0,\n        0x0\n    ];\nvar x = arr[a0_0x3a7c42(0x3)]()[a0_0x3a7c42(0x2)]('\\x20')[a0_0x3a7c42(0x4)](Number);\nvar y = arr['shift']()['split']('\\x20')['map'](Number);\nvar z = arr[a0_0x3a7c42(0x3)]()[a0_0x3a7c42(0x2)]('\\x20')[a0_0x3a7c42(0x4)](Number);\nfunction a0_0x40cc() {\n    var _0x26d527 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'shift',\n        'map',\n        'forEach'\n    ];\n    a0_0x40cc = function () {\n        return _0x26d527;\n    };\n    return a0_0x40cc();\n}\nx[a0_0x3a7c42(0x3)]();\ny[a0_0x3a7c42(0x3)]();\nz[a0_0x3a7c42(0x3)]();\nx['forEach'](v => {\n    xyz[v][0x0] = 0x1;\n});\ny[a0_0x3a7c42(0x5)](v => {\n    xyz[v][0x1] = 0x1;\n});\nz[a0_0x3a7c42(0x5)](v => {\n    xyz[v][0x2] = 0x1;\n});\nxyz[a0_0x3a7c42(0x3)]();\nvar cnt = 0x0;\nxyz[a0_0x3a7c42(0x5)](v => {\n    if (v[0x0] == 0x0 && v[0x2] == 0x1)\n        cnt++;\n    else if (v[0x1] == 0x1 && v[0x2] == 0x1)\n        cnt++;\n});\nfunction a0_0x2199(vmrSFU, key) {\n    var stringArray = a0_0x40cc();\n    a0_0x2199 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2199(vmrSFU, key);\n}\nconsole['log'](cnt);", "test_cases": [["5\n3 1 2 3\n2 4 5\n2 3 4", "1"], ["100\n3 1 100 4\n0\n2 2 3", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n= arr.shift()-0;\nvar xyz = [];\nfor(var i=0;i<=n;i++)xyz[i]=[0,0,0];\nvar x = arr.shift().split(\" \").map(Number);\nvar y = arr.shift().split(\" \").map(Number);\nvar z = arr.shift().split(\" \").map(Number);\nx.shift();\ny.shift();\nz.shift();\nx.forEach(v=>{\n   xyz[v][0]=1;\n});\ny.forEach(v=>{\n   xyz[v][1]=1;\n});\nz.forEach(v=>{\n   xyz[v][2]=1;\n});\nxyz.shift();\nvar cnt = 0;\nxyz.forEach(v=>{\n   if(v[0]==0 && v[2]==1)cnt++;\n   else if(v[1]==1 && v[2]==1)cnt++;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p00314_1", "type": "JavaScript", "obfuscated": "var a0_0x19a758 = a0_0x1b7b;\nvar input = require('fs')[a0_0x19a758(0x0)](a0_0x19a758(0x1), a0_0x19a758(0x2));\nvar arr = input[a0_0x19a758(0x3)]()[a0_0x19a758(0x4)]('\\x0a');\nfunction a0_0x59e6() {\n    var _0x97f05d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x59e6 = function () {\n        return _0x97f05d;\n    };\n    return a0_0x59e6();\n}\nvar n = arr['shift']() - 0x0;\nvar p = arr[a0_0x19a758(0x5)]()[a0_0x19a758(0x4)]('\\x20')[a0_0x19a758(0x6)](Number);\nvar ans = 0x0;\nfunction a0_0x1b7b(PNefZR, key) {\n    var stringArray = a0_0x59e6();\n    a0_0x1b7b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b7b(PNefZR, key);\n}\nfor (var i = 0x1; i <= 0x64; i++) {\n    var cnt = 0x0;\n    p[a0_0x19a758(0x7)](v => {\n        if (v >= i)\n            cnt++;\n    });\n    if (cnt >= i)\n        ans = i;\n}\nconsole[a0_0x19a758(0x8)](ans);", "test_cases": [["7\n5 4 3 10 2 4 1", "4"], ["3\n1 1 100", "1"], ["4\n11 15 58 1", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n= arr.shift()-0;\nvar p = arr.shift().split(\" \").map(Number);\nvar ans = 0;\nfor(var i=1;i<=100;i++){\n   var cnt = 0;\n   p.forEach(v=>{\n      if(v>=i)cnt++;\n   });\n   if(cnt>=i)ans=i;\n}\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p00321_1", "type": "JavaScript", "obfuscated": "function a0_0x44dc(NeNAWl, key) {\n    var stringArray = a0_0x3a11();\n    a0_0x44dc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x44dc(NeNAWl, key);\n}\nvar a0_0x130c1f = a0_0x44dc;\nvar input = require('fs')[a0_0x130c1f(0x0)](a0_0x130c1f(0x1), 'utf8');\nvar arr = input[a0_0x130c1f(0x2)]()['split']('\\x0a');\nfunction a0_0x3a11() {\n    var _0x4f2d3e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'length',\n        'push',\n        'join',\n        'sort',\n        'log'\n    ];\n    a0_0x3a11 = function () {\n        return _0x4f2d3e;\n    };\n    return a0_0x3a11();\n}\nvar nf = arr[a0_0x130c1f(0x3)]()[a0_0x130c1f(0x4)]('\\x20')[a0_0x130c1f(0x5)](Number);\nvar f = nf[0x1];\nvar obj = {};\narr = arr['map'](function (v) {\n    var _0x480b57 = a0_0x44dc;\n    v = v[_0x480b57(0x4)]('\\x20');\n    v['shift']();\n    v[_0x480b57(0x6)](function (V) {\n        obj[V] = {};\n    });\n    return v;\n});\nfor (var k in obj) {\n    for (var K in obj) {\n        obj[k][K] = 0x0;\n    }\n}\narr[a0_0x130c1f(0x6)](function (v) {\n    var _0x1b9af8 = a0_0x44dc;\n    for (var i = 0x0; i < v['length']; i++) {\n        for (var j = 0x0; j < v[_0x1b9af8(0x7)]; j++) {\n            obj[v[i]][v[j]]++;\n        }\n    }\n});\nvar ans = [];\nfor (var k in obj) {\n    for (var K in obj) {\n        obj[K][k] = 0x0;\n        if (obj[k][K] >= f) {\n            ans[a0_0x130c1f(0x8)]([\n                k,\n                K\n            ]['sort']()[a0_0x130c1f(0x9)]('\\x20'));\n        }\n    }\n}\nans[a0_0x130c1f(0xa)]();\nconsole[a0_0x130c1f(0xb)](ans['length']);\nif (ans[a0_0x130c1f(0x7)] != 0x0)\n    console[a0_0x130c1f(0xb)](ans[a0_0x130c1f(0x9)]('\\x0a'));", "test_cases": [["5 2\n3 bread milk banana\n2 milk cornflakes\n3 potato bread milk\n4 cornflakes bread milk butter\n2 potato bread", "3\nbread milk\nbread potato\ncornflakes milk"], ["5 5\n3 bread milk banana\n2 milk cornflakes\n3 potato bread milk\n4 cornflakes bread milk butter\n2 potato bread", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar nf = arr.shift().split(\" \").map(Number);\nvar f = nf[1];\nvar obj = {};\narr = arr.map(function(v) {\n   v = v.split(\" \");\n   v.shift();\n   v.forEach(function(V) {\n      obj[V] = {};\n   });\n   return v;\n});\nfor (var k in obj) {\n   for (var K in obj) {\n      obj[k][K] = 0;\n   }\n}\narr.forEach(function(v) {\n   for (var i = 0; i < v.length; i++) {\n      for (var j = 0; j < v.length; j++) {\n         obj[v[i]][v[j]]++;\n      }\n   }\n});\nvar ans = [];\nfor (var k in obj) {\n   for (var K in obj) {\n      obj[K][k] = 0;\n      if (obj[k][K] >= f) {\n         ans.push([k, K].sort().join(\" \"));\n      }\n   }\n}\nans.sort();\nconsole.log(ans.length);\nif (ans.length != 0) console.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p00322_1", "type": "JavaScript", "obfuscated": "function a0_0x10fd() {\n    var _0x533d1e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'map',\n        'split',\n        'length',\n        'concat',\n        'every',\n        'log'\n    ];\n    a0_0x10fd = function () {\n        return _0x533d1e;\n    };\n    return a0_0x10fd();\n}\nvar a0_0x5401f1 = a0_0x466f;\nvar input = require('fs')[a0_0x5401f1(0x0)](a0_0x5401f1(0x1), 'utf8');\nvar x = input[a0_0x5401f1(0x2)]()['split']('\\x20')[a0_0x5401f1(0x3)](Number);\nfunction a0_0x466f(VpCrho, key) {\n    var stringArray = a0_0x10fd();\n    a0_0x466f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x466f(VpCrho, key);\n}\nvar cnt = 0x0;\nfor (var a = 0x1; a <= 0x9; a++) {\n    for (var b = 0x1; b <= 0x9; b++) {\n        for (var c = 0x1; c <= 0x9; c++) {\n            for (var d = 0x1; d <= 0x8; d++) {\n                for (var e = 0x1; e <= 0x9; e++) {\n                    for (var f = 0x1; f <= 0x9; f++) {\n                        var z = (a + c + f + (b + e) * 0xa + d * 0x64 + '')[a0_0x5401f1(0x4)]('')['map'](Number);\n                        if (z[a0_0x5401f1(0x5)] != 0x3)\n                            continue;\n                        z = [\n                            a,\n                            b,\n                            c,\n                            d,\n                            e,\n                            f\n                        ][a0_0x5401f1(0x6)](z);\n                        var flag = z[a0_0x5401f1(0x7)](function (v, i) {\n                            return (x[i] == v || x[i] == -0x1) && z['indexOf'](i + 0x1) >= 0x0;\n                        });\n                        if (flag)\n                            cnt++;\n                    }\n                }\n            }\n        }\n    }\n}\nconsole[a0_0x5401f1(0x8)](cnt);", "test_cases": [["7 6 -1 1 -1 9 2 3 4", "1"], ["7 6 5 1 8 9 2 3 4", "0"], ["-1 -1 -1 -1 -1 -1 8 4 6", "12"], ["-1 -1 -1 -1 -1 -1 -1 -1 -1", "168"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim().split(\" \").map(Number);\nvar cnt=0;\nfor(var a=1;a<=9;a++){\nfor(var b=1;b<=9;b++){\nfor(var c=1;c<=9;c++){\nfor(var d=1;d<=8;d++){\nfor(var e=1;e<=9;e++){\nfor(var f=1;f<=9;f++){\nvar z=((a+c+f+(b+e)*10+d*100)+\"\").split(\"\").map(Number);\nif(z.length!=3)continue;\nz=[a,b,c,d,e,f].concat(z);\nvar flag = z.every(function(v,i){\n   return  (x[i] == v || x[i] == -1) && (z.indexOf(i+1)>=0) ;\n});\nif(flag)cnt++;\n}}}}}}\nconsole.log(cnt);", "language": "JavaScript"}
{"filename": "p00330_1", "type": "JavaScript", "obfuscated": "var a0_0x1a5fc0 = a0_0x3f17;\nvar input = require('fs')['readFileSync'](a0_0x1a5fc0(0x0), a0_0x1a5fc0(0x1));\nvar x = input[a0_0x1a5fc0(0x2)]() - 0x0;\nfunction a0_0x58d3() {\n    var _0x68d85c = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'log'\n    ];\n    a0_0x58d3 = function () {\n        return _0x68d85c;\n    };\n    return a0_0x58d3();\n}\nfunction a0_0x3f17(NfoAnn, key) {\n    var stringArray = a0_0x58d3();\n    a0_0x3f17 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f17(NfoAnn, key);\n}\nconsole[a0_0x1a5fc0(0x3)](x * 0x20);", "test_cases": [["4", "128"], ["3", "96"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim() -0;\nconsole.log(x*32);\n", "language": "JavaScript"}
{"filename": "p00331_1", "type": "JavaScript", "obfuscated": "function a0_0x4592(UirIFQ, key) {\n    var stringArray = a0_0xd439();\n    a0_0x4592 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4592(UirIFQ, key);\n}\nvar a0_0x247577 = a0_0x4592;\nfunction a0_0xd439() {\n    var _0x136a73 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0xd439 = function () {\n        return _0x136a73;\n    };\n    return a0_0xd439();\n}\nvar input = require('fs')[a0_0x247577(0x0)](a0_0x247577(0x1), a0_0x247577(0x2));\nvar [h, r] = input[a0_0x247577(0x3)]()[a0_0x247577(0x4)]('\\x20')[a0_0x247577(0x5)](Number);\nif (r + h == 0x0)\n    console[a0_0x247577(0x6)](0x0);\nelse if (r + h > 0x0)\n    console['log'](0x1);\nelse\n    console[a0_0x247577(0x6)](-0x1);", "test_cases": [["-3 3", "0"], ["3 3", "1"], ["-4 3", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [h,r]=input.trim().split(\" \").map(Number);\nif(r+h==0)console.log(0);\nelse if(r+h>0)console.log(1);\nelse console.log(-1);\n", "language": "JavaScript"}
{"filename": "p00332_1", "type": "JavaScript", "obfuscated": "function a0_0x4e4e() {\n    var _0x2c6ad4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'MTSH',\n        'log'\n    ];\n    a0_0x4e4e = function () {\n        return _0x2c6ad4;\n    };\n    return a0_0x4e4e();\n}\nvar a0_0x16b53e = a0_0x12a9;\nvar input = require('fs')[a0_0x16b53e(0x0)](a0_0x16b53e(0x1), 'utf8');\nfunction a0_0x12a9(URrAyC, key) {\n    var stringArray = a0_0x4e4e();\n    a0_0x12a9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x12a9(URrAyC, key);\n}\nvar [e, y] = input[a0_0x16b53e(0x2)]()[a0_0x16b53e(0x3)]('\\x20')[a0_0x16b53e(0x4)](Number);\nvar mtsh = a0_0x16b53e(0x5)[a0_0x16b53e(0x3)]('');\nif (e == 0x0) {\n    if (y >= 0x74c && y <= 0x777) {\n        e = 0x1;\n        y -= 0x74c;\n    } else if (y >= 0x778 && y <= 0x785) {\n        e = 0x2;\n        y -= 0x778;\n    } else if (y >= 0x786 && y <= 0x7c4) {\n        e = 0x3;\n        y -= 0x786;\n    } else if (y >= 0x7c5 && y <= 0x7e0) {\n        e = 0x4;\n        y -= 0x7c5;\n    }\n    console[a0_0x16b53e(0x6)](mtsh[e - 0x1] + (y + 0x1));\n} else if (e == 0x1)\n    console[a0_0x16b53e(0x6)](0x74c + y - 0x1);\nelse if (e == 0x2)\n    console[a0_0x16b53e(0x6)](0x778 + y - 0x1);\nelse if (e == 0x3)\n    console[a0_0x16b53e(0x6)](0x786 + y - 0x1);\nelse if (e == 0x4)\n    console[a0_0x16b53e(0x6)](0x7c5 + y - 0x1);", "test_cases": [["0 2015", "H27"], ["0 1912", "T1"], ["2 1", "1912"], ["4 28", "2016"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [e,y] = input.trim().split(\" \").map(Number);\nvar mtsh = \"MTSH\".split(\"\");\nif(e==0){\n   if(y>=1868 && y<=1911){e=1;y-=1868}\n   else if(y>=1912 && y<=1925){e=2;y-=1912}\n   else if(y>=1926 && y<=1988){e=3;y-=1926}\n   else if(y>=1989 && y<=2016){e=4;y-=1989}\n   console.log(mtsh[e-1] + (y+1));\n}\nelse if(e==1)console.log(1868 + y - 1);\nelse if(e==2)console.log(1912 + y - 1);\nelse if(e==3)console.log(1926 + y - 1);\nelse if(e==4)console.log(1989 + y - 1);\n", "language": "JavaScript"}
{"filename": "p00333_1", "type": "JavaScript", "obfuscated": "var a0_0x23b0c8 = a0_0x28b6;\nvar input = require('fs')[a0_0x23b0c8(0x0)](a0_0x23b0c8(0x1), a0_0x23b0c8(0x2));\nfunction a0_0x28b6(oWQfqZ, key) {\n    var stringArray = a0_0x39ed();\n    a0_0x28b6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x28b6(oWQfqZ, key);\n}\nvar [w, h, c] = input[a0_0x23b0c8(0x3)]()[a0_0x23b0c8(0x4)]('\\x20')['map'](Number);\nvar max = 0x1;\nfor (var i = 0x1; i <= 0x3e8; i++) {\n    if (w % i == 0x0 && h % i == 0x0)\n        max = i;\n}\nconsole['log'](w * h / (max * max) * c);\nfunction a0_0x39ed() {\n    var _0x3c4049 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split'\n    ];\n    a0_0x39ed = function () {\n        return _0x3c4049;\n    };\n    return a0_0x39ed();\n}", "test_cases": [["10 20 5", "10"], ["27 6 1", "18"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [w,h,c]= input.trim().split(\" \").map(Number);\nvar max=1;\nfor(var i=1;i<=1000;i++){\n   if(w%i==0 && h%i==0)max=i;\n}\nconsole.log(((w*h)/(max*max))*c);\n", "language": "JavaScript"}
{"filename": "p00340_1", "type": "JavaScript", "obfuscated": "var a0_0x4e62b8 = a0_0xd338;\nvar input = require('fs')[a0_0x4e62b8(0x0)]('/dev/stdin', a0_0x4e62b8(0x1));\nvar arr = input[a0_0x4e62b8(0x2)]()[a0_0x4e62b8(0x3)]('\\x20')['map'](Number);\nvar a = arr[0x0];\nvar b = arr[0x1];\nfunction a0_0x99e3() {\n    var _0x192142 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'yes',\n        'log'\n    ];\n    a0_0x99e3 = function () {\n        return _0x192142;\n    };\n    return a0_0x99e3();\n}\nvar c = arr[0x2];\nvar d = arr[0x3];\nfunction a0_0xd338(uvTfMV, key) {\n    var stringArray = a0_0x99e3();\n    a0_0xd338 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd338(uvTfMV, key);\n}\nif (a == b && c == d)\n    console['log'](a0_0x4e62b8(0x4));\nelse if (a == c && b == d)\n    console[a0_0x4e62b8(0x5)](a0_0x4e62b8(0x4));\nelse if (a == d && b == c)\n    console[a0_0x4e62b8(0x5)](a0_0x4e62b8(0x4));\nelse\n    console[a0_0x4e62b8(0x5)]('no');", "test_cases": [["1 1 3 4", "no"], ["1 1 2 2", "yes"], ["2 1 1 2", "yes"], ["4 4 4 10", "no"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\" \").map(Number);\nvar a = arr[0];\nvar b = arr[1];\nvar c = arr[2];\nvar d = arr[3];\nif (a == b && c == d) console.log(\"yes\");\nelse if (a == c && b == d) console.log(\"yes\");\nelse if (a == d && b == c) console.log(\"yes\");\nelse console.log(\"no\");", "language": "JavaScript"}
{"filename": "p00341_1", "type": "JavaScript", "obfuscated": "function a0_0x4453(ftucGi, key) {\n    var stringArray = a0_0x5851();\n    a0_0x4453 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4453(ftucGi, key);\n}\nvar a0_0x5c67cf = a0_0x4453;\nvar input = require('fs')[a0_0x5c67cf(0x0)](a0_0x5c67cf(0x1), a0_0x5c67cf(0x2));\nvar arr = input['trim']()['split']('\\x20')[a0_0x5c67cf(0x3)](Number);\narr[a0_0x5c67cf(0x4)](function (a, b) {\n    return a - b;\n});\nvar sum = 0x0;\nfunction a0_0x5851() {\n    var _0x55260a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'sort',\n        'yes'\n    ];\n    a0_0x5851 = function () {\n        return _0x55260a;\n    };\n    return a0_0x5851();\n}\nif (arr[0x0] == arr[0x1] && arr[0x1] == arr[0x2] && arr[0x2] == arr[0x3])\n    sum++;\nif (arr[0x0 + 0x4] == arr[0x1 + 0x4] && arr[0x1 + 0x4] == arr[0x2 + 0x4] && arr[0x2 + 0x4] == arr[0x3 + 0x4])\n    sum++;\nif (arr[0x0 + 0x8] == arr[0x1 + 0x8] && arr[0x1 + 0x8] == arr[0x2 + 0x8] && arr[0x2 + 0x8] == arr[0x3 + 0x8])\n    sum++;\nconsole['log'](sum == 0x3 ? a0_0x5c67cf(0x5) : 'no');", "test_cases": [["1 1 3 4 8 9 7 3 4 5 5 5", "no"], ["1 1 2 2 3 1 2 3 3 3 1 2", "yes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\" \").map(Number);\narr.sort(function(a,b){\n   return a - b;\n});\nvar sum=0;\nif(arr[0] == arr[1] && arr[1] == arr[2] && arr[2] == arr[3])sum++;\nif(arr[0+4] == arr[1+4] && arr[1+4] == arr[2+4] && arr[2+4] == arr[3+4])sum++;\nif(arr[0+8] == arr[1+8] && arr[1+8] == arr[2+8] && arr[2+8] == arr[3+8])sum++;\nconsole.log((sum==3)?\"yes\":\"no\");", "language": "JavaScript"}
{"filename": "p00353_1", "type": "JavaScript", "obfuscated": "function a0_0x48c5() {\n    var _0x260a4a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x48c5 = function () {\n        return _0x260a4a;\n    };\n    return a0_0x48c5();\n}\nfunction a0_0x2085(IBRnOY, key) {\n    var stringArray = a0_0x48c5();\n    a0_0x2085 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2085(IBRnOY, key);\n}\nvar a0_0x6eb9a7 = a0_0x2085;\nvar input = require('fs')[a0_0x6eb9a7(0x0)](a0_0x6eb9a7(0x1), a0_0x6eb9a7(0x2));\nvar [m, f, b] = input['trim']()[a0_0x6eb9a7(0x3)]('\\x20')[a0_0x6eb9a7(0x4)](Number);\nif (m >= b)\n    console[a0_0x6eb9a7(0x5)](0x0);\nelse if (m + f < b)\n    console[a0_0x6eb9a7(0x5)]('NA');\nelse\n    console[a0_0x6eb9a7(0x5)](b - m);", "test_cases": [["1000 3000 3000", "2000"], ["5000 3000 4500", "0"], ["500 1000 2000", "NA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [m,f,b] =input.trim().split(\" \").map(Number);\nif(m>=b)console.log(0);\nelse if(m+f<b)console.log(\"NA\");\nelse console.log(b-m);\n", "language": "JavaScript"}
{"filename": "p00354_1", "type": "JavaScript", "obfuscated": "function a0_0x4ca1() {\n    var _0x6f33e2 = [\n        'readFileSync',\n        'utf8',\n        'fri',\n        'sun',\n        'mon',\n        'tue',\n        'wed',\n        'log'\n    ];\n    a0_0x4ca1 = function () {\n        return _0x6f33e2;\n    };\n    return a0_0x4ca1();\n}\nvar a0_0x5d178a = a0_0x1006;\nvar input = require('fs')[a0_0x5d178a(0x0)]('/dev/stdin', a0_0x5d178a(0x1));\nfunction a0_0x1006(JOwhxZ, key) {\n    var stringArray = a0_0x4ca1();\n    a0_0x1006 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1006(JOwhxZ, key);\n}\nvar x = input['trim']() - 0x0;\nvar w = [\n    'thu',\n    a0_0x5d178a(0x2),\n    'sat',\n    a0_0x5d178a(0x3),\n    a0_0x5d178a(0x4),\n    a0_0x5d178a(0x5),\n    a0_0x5d178a(0x6)\n];\nconsole[a0_0x5d178a(0x7)](w[x % 0x7]);", "test_cases": [["1", "fri"], ["9", "sat"], ["30", "sat"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x =input.trim() - 0;\nvar w = [\"thu\",\"fri\",\"sat\",\"sun\",\"mon\",\"tue\",\"wed\"];\nconsole.log(w[x%7]);\n", "language": "JavaScript"}
{"filename": "p00357_1", "type": "JavaScript", "obfuscated": "var a0_0x249d9d = a0_0x2fd2;\nfunction tobu(arr) {\n    var _0x40dad0 = a0_0x2fd2;\n    var max = 0x0;\n    for (var i = 0x0; i < arr[_0x40dad0(0x0)] - 0x1; i++) {\n        if (i > max)\n            break;\n        var d = Math[_0x40dad0(0x1)](arr[i] / 0xa);\n        max = Math[_0x40dad0(0x2)](max, i + d);\n    }\n    return max >= arr[_0x40dad0(0x0)] - 0x1;\n}\nvar input = require('fs')['readFileSync'](a0_0x249d9d(0x3), a0_0x249d9d(0x4));\nfunction a0_0x2fd2(FkkbiI, key) {\n    var stringArray = a0_0x2476();\n    a0_0x2fd2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fd2(FkkbiI, key);\n}\nfunction a0_0x2476() {\n    var _0x194d4a = [\n        'length',\n        'floor',\n        'max',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'reverse',\n        'yes',\n        'log'\n    ];\n    a0_0x2476 = function () {\n        return _0x194d4a;\n    };\n    return a0_0x2476();\n}\nvar arr = input[a0_0x249d9d(0x5)]()[a0_0x249d9d(0x6)]('\\x0a')[a0_0x249d9d(0x7)](Number);\nvar n = arr[a0_0x249d9d(0x8)]();\nif (tobu(arr) && tobu(arr[a0_0x249d9d(0x9)]()))\n    console['log'](a0_0x249d9d(0xa));\nelse\n    console[a0_0x249d9d(0xb)]('no');", "test_cases": [["4\n20\n5\n10\n1", "no"], ["3\n10\n5\n10", "no"], ["4\n20\n30\n1\n20", "yes"]], "original": "function tobu(arr){\n   var max=0;\n   for(var i=0;i<arr.length-1;i++){\n      if(i>max)break;\n      var d = Math.floor(arr[i]/10);\n      max=Math.max(max,i+d);\n   }\n   return (max>=arr.length-1);\n}\n \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\").map(Number);\nvar n=arr.shift();\nif(tobu(arr) && tobu(arr.reverse()))console.log(\"yes\");\nelse console.log(\"no\");\n", "language": "JavaScript"}
{"filename": "p00363_1", "type": "JavaScript", "obfuscated": "function a0_0x57e9(ziDFeQ, key) {\n    var stringArray = a0_0x3b49();\n    a0_0x57e9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x57e9(ziDFeQ, key);\n}\nvar a0_0x7fa18d = a0_0x57e9;\nvar input = require('fs')[a0_0x7fa18d(0x0)]('/dev/stdin', a0_0x7fa18d(0x1));\nvar [w, h, c] = input[a0_0x7fa18d(0x2)]()[a0_0x7fa18d(0x3)]('\\x20');\nfunction a0_0x3b49() {\n    var _0x36167a = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'repeat',\n        'push',\n        'floor',\n        'join'\n    ];\n    a0_0x3b49 = function () {\n        return _0x36167a;\n    };\n    return a0_0x3b49();\n}\nw = w - 0x0;\nh = h - 0x0;\nvar ans = [];\nans['push']('+' + '-'[a0_0x7fa18d(0x4)](w - 0x2) + '+');\nfor (var i = 0x0; i < h - 0x2; i++)\n    ans[a0_0x7fa18d(0x5)]('|' + '.'['repeat'](w - 0x2) + '|');\nans[a0_0x7fa18d(0x5)]('+' + '-'[a0_0x7fa18d(0x4)](w - 0x2) + '+');\nans[Math[a0_0x7fa18d(0x6)](h / 0x2)] = '|' + '.'[a0_0x7fa18d(0x4)]((w - 0x3) / 0x2) + c + '.'['repeat']((w - 0x3) / 0x2) + '|';\nconsole['log'](ans[a0_0x7fa18d(0x7)]('\\x0a')[a0_0x7fa18d(0x2)]());", "test_cases": [["3 3 B", "+-+\n|B|\n+-+"], ["11 7 Z", "+---------+\n|.........|\n|.........|\n|....Z....|\n|.........|\n|.........|\n+---------+"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [w,h,c] = input.trim().split(\" \");\nw=w-0;\nh=h-0;\nvar ans=[];\nans.push(\"+\" + \"-\".repeat(w-2) + \"+\");\nfor(var i=0;i<h - 2;i++)ans.push(\"|\" + \".\".repeat(w-2) + \"|\");\nans.push(\"+\" + \"-\".repeat(w-2) + \"+\");\nans[Math.floor(h/2)]=\"|\" + \".\".repeat((w-3)/2)  + c + \".\".repeat((w-3)/2)+ \"|\"\nconsole.log(ans.join(\"\\n\").trim());\n", "language": "JavaScript"}
{"filename": "p00364_1", "type": "JavaScript", "obfuscated": "function a0_0x15a0(jhepAP, key) {\n    var stringArray = a0_0x3acb();\n    a0_0x15a0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15a0(jhepAP, key);\n}\nvar a0_0xc26200 = a0_0x15a0;\nvar input = require('fs')[a0_0xc26200(0x0)](a0_0xc26200(0x1), a0_0xc26200(0x2));\nvar arr = input[a0_0xc26200(0x3)]()[a0_0xc26200(0x4)]('\\x0a');\narr = arr['map'](v => v[a0_0xc26200(0x4)]('\\x20')[a0_0xc26200(0x5)](Number));\nvar [n, t] = arr[a0_0xc26200(0x6)]();\nvar max = 0x0;\narr[a0_0xc26200(0x7)](v => {\n    max = Math['max'](max, v[0x1] / v[0x0]);\n});\nfunction a0_0x3acb() {\n    var _0x56c96f = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'forEach',\n        'log'\n    ];\n    a0_0x3acb = function () {\n        return _0x56c96f;\n    };\n    return a0_0x3acb();\n}\nconsole[a0_0xc26200(0x8)]((max * t)['toFixed'](0x6));", "test_cases": [["3 10\n6 4\n4 2\n3 2", "6.666667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\narr=arr.map(v=>v.split(\" \").map(Number));\nvar [n,t]=arr.shift();\nvar max=0;\narr.forEach(v=>{\n   max=Math.max(max,v[1]/v[0]);\n});\nconsole.log((max*t).toFixed(6));\n", "language": "JavaScript"}
{"filename": "p00375_1", "type": "JavaScript", "obfuscated": "var a0_0x587469 = a0_0x99eb;\nvar input = require('fs')[a0_0x587469(0x0)](a0_0x587469(0x1), a0_0x587469(0x2));\nfunction a0_0x99eb(LbDwtD, key) {\n    var stringArray = a0_0x5118();\n    a0_0x99eb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x99eb(LbDwtD, key);\n}\nvar a = input - 0x0;\nconsole['log']((a - 0x1e) / 0x2);\nfunction a0_0x5118() {\n    var _0x20754a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x5118 = function () {\n        return _0x20754a;\n    };\n    return a0_0x5118();\n}", "test_cases": [["68", "19"], ["50", "10"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar a=input-0;\nconsole.log((a-30)/2);\n", "language": "JavaScript"}
{"filename": "p00376_1", "type": "JavaScript", "obfuscated": "var a0_0x43665a = a0_0x281a;\nfunction a0_0x281a(LXOVhp, key) {\n    var stringArray = a0_0x2c71();\n    a0_0x281a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x281a(LXOVhp, key);\n}\nfunction a0_0x2c71() {\n    var _0x10d8f3 = [\n        'readFileSync',\n        'split',\n        'map',\n        'log',\n        'abs'\n    ];\n    a0_0x2c71 = function () {\n        return _0x10d8f3;\n    };\n    return a0_0x2c71();\n}\nvar input = require('fs')[a0_0x43665a(0x0)]('/dev/stdin', 'utf8');\nvar [a, b] = input['trim']()[a0_0x43665a(0x1)]('\\x20')[a0_0x43665a(0x2)](Number);\nconsole[a0_0x43665a(0x3)](Math[a0_0x43665a(0x4)](b - a));", "test_cases": [["20 30", "10"], ["50 25", "25"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]=input.trim().split(\" \").map(Number);\nconsole.log(Math.abs(b-a));\n", "language": "JavaScript"}
{"filename": "p00377_1", "type": "JavaScript", "obfuscated": "var a0_0xde3210 = a0_0x33ba;\nvar input = require('fs')[a0_0xde3210(0x0)](a0_0xde3210(0x1), 'utf8');\nfunction a0_0x33ba(DjkCzd, key) {\n    var stringArray = a0_0x1ca7();\n    a0_0x33ba = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x33ba(DjkCzd, key);\n}\nvar arr = input[a0_0xde3210(0x2)]()['split']('\\x0a');\nvar [n, c] = arr[0x0][a0_0xde3210(0x3)]('\\x20')[a0_0xde3210(0x4)](Number);\nvar p = arr[0x1]['split']('\\x20')['map'](Number);\nvar sum = p[a0_0xde3210(0x5)]((a, b) => a + b);\nvar x = sum % (n + 0x1) == 0x0 ? 0x0 : 0x1;\nconsole[a0_0xde3210(0x6)](Math[a0_0xde3210(0x7)](sum / (n + 0x1)) + x);\nfunction a0_0x1ca7() {\n    var _0x18161e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'reduce',\n        'log',\n        'floor'\n    ];\n    a0_0x1ca7 = function () {\n        return _0x18161e;\n    };\n    return a0_0x1ca7();\n}", "test_cases": [["5 4\n5 5 6 5", "4"], ["7 5\n8 8 8 8 8", "5"], ["100 3\n3 3 3", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,c]=arr[0].split(\" \").map(Number);\nvar p=arr[1].split(\" \").map(Number);\nvar sum=p.reduce((a,b)=> a+b);\nvar x=(sum%(n+1)==0)?0:1;\nconsole.log(Math.floor(sum/(n+1))+x);\n", "language": "JavaScript"}
{"filename": "p00378_1", "type": "JavaScript", "obfuscated": "var a0_0xa54e2c = a0_0x4c0e;\nvar input = require('fs')[a0_0xa54e2c(0x0)](a0_0xa54e2c(0x1), a0_0xa54e2c(0x2));\nfunction a0_0x4c0e(OSKZMt, key) {\n    var stringArray = a0_0x3bfc();\n    a0_0x4c0e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c0e(OSKZMt, key);\n}\nvar [a, b, x] = input[a0_0xa54e2c(0x3)]()[a0_0xa54e2c(0x4)]('\\x20')[a0_0xa54e2c(0x5)](Number);\nfunction a0_0x3bfc() {\n    var _0x572321 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'min',\n        'log'\n    ];\n    a0_0x3bfc = function () {\n        return _0x572321;\n    };\n    return a0_0x3bfc();\n}\nvar min = Infinity;\nfor (var i = 0x0; i <= 0x14; i++) {\n    for (var j = 0x0; j <= 0x28; j++) {\n        if (i * 0x3e8 + j * 0x1f4 >= x)\n            min = Math[a0_0xa54e2c(0x6)](min, i * a + j * b);\n    }\n}\nconsole[a0_0xa54e2c(0x7)](min);", "test_cases": [["180 100 2400", "460"], ["200 90 2018", "450"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,x]=input.trim().split(\" \").map(Number);\nvar min=Infinity;\nfor(var i=0;i<=20;i++){\n   for(var j=0;j<=40;j++){\n      if(i*1000+j*500>=x)min=Math.min(min,i*a+j*b);\n   }\n}\nconsole.log(min);\n", "language": "JavaScript"}
{"filename": "p00387_1", "type": "JavaScript", "obfuscated": "var a0_0x4d0c9a = a0_0x2a4f;\nfunction a0_0x2a4f(mXIPwr, key) {\n    var stringArray = a0_0x1137();\n    a0_0x2a4f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a4f(mXIPwr, key);\n}\nvar input = require('fs')[a0_0x4d0c9a(0x0)]('/dev/stdin', a0_0x4d0c9a(0x1));\nvar [a, b] = input['trim']()[a0_0x4d0c9a(0x2)]('\\x20')[a0_0x4d0c9a(0x3)](Number);\nfunction a0_0x1137() {\n    var _0x11593b = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'map'\n    ];\n    a0_0x1137 = function () {\n        return _0x11593b;\n    };\n    return a0_0x1137();\n}\nconsole['log'](Math['ceil'](b / a));", "test_cases": [["3 5", "2"], ["25 10", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]= input.trim().split(\" \").map(Number);\nconsole.log(Math.ceil(b/a));\n", "language": "JavaScript"}
{"filename": "p00388_1", "type": "JavaScript", "obfuscated": "var a0_0x73f4bc = a0_0x5949;\nfunction a0_0x2f6c() {\n    var _0x30b75a = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x2f6c = function () {\n        return _0x30b75a;\n    };\n    return a0_0x2f6c();\n}\nfunction a0_0x5949(KwTiCF, key) {\n    var stringArray = a0_0x2f6c();\n    a0_0x5949 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5949(KwTiCF, key);\n}\nvar input = require('fs')[a0_0x73f4bc(0x0)](a0_0x73f4bc(0x1), a0_0x73f4bc(0x2));\nvar [h, a, b] = input[a0_0x73f4bc(0x3)]()[a0_0x73f4bc(0x4)]('\\x20')[a0_0x73f4bc(0x5)](Number);\nvar cnt = 0x0;\nfor (var i = a; i <= b; i++) {\n    if (h % i == 0x0)\n        cnt++;\n}\nconsole[a0_0x73f4bc(0x6)](cnt);", "test_cases": [["100 2 4", "2"], ["101 3 5", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [h,a,b]= input.trim().split(\" \").map(Number);\nvar cnt = 0;\nfor(var i=a;i<=b;i++){\n   if(h%i==0)cnt++;\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p00389_1", "type": "JavaScript", "obfuscated": "var a0_0x84c34d = a0_0x2fc8;\nvar input = require('fs')[a0_0x84c34d(0x0)](a0_0x84c34d(0x1), a0_0x84c34d(0x2));\nvar [n, k] = input[a0_0x84c34d(0x3)]()[a0_0x84c34d(0x4)]('\\x20')['map'](Number);\nfunction a0_0x2fc8(Ymtjij, key) {\n    var stringArray = a0_0x56bb();\n    a0_0x2fc8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2fc8(Ymtjij, key);\n}\nvar takasa = 0x0;\nvar w = 0x0;\nvar cnt = 0x0;\nwhile (!![]) {\n    if (n == 0x0)\n        break;\n    n--;\n    cnt++;\n    if (w <= k * cnt) {\n        takasa++;\n        w += cnt;\n        cnt = 0x0;\n    }\n}\nconsole[a0_0x84c34d(0x5)](takasa);\nfunction a0_0x56bb() {\n    var _0x258b70 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x56bb = function () {\n        return _0x258b70;\n    };\n    return a0_0x56bb();\n}", "test_cases": [["4 2", "3"], ["5 2", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,k]= input.trim().split(\" \").map(Number);\nvar takasa=0;\nvar w=0;\nvar cnt=0;\nwhile(true){\n   if(n==0)break;\n   n--;\n   cnt++;\n   if(w<=k*cnt){\n      takasa++;\n      w+=cnt;\n      cnt=0;\n   }\n}\nconsole.log(takasa);\n", "language": "JavaScript"}
{"filename": "p00589_1", "type": "JavaScript", "obfuscated": "var a0_0x1bfc47 = a0_0x35f8;\nvar a = [''];\na[0x1] = a0_0x1bfc47(0x0)[a0_0x1bfc47(0x1)]('');\na[0x2] = a0_0x1bfc47(0x2)[a0_0x1bfc47(0x1)]('');\nfunction a0_0x35f8(uYeGDK, key) {\n    var stringArray = a0_0x5132();\n    a0_0x35f8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x35f8(uYeGDK, key);\n}\na[0x3] = a0_0x1bfc47(0x3)[a0_0x1bfc47(0x1)]('');\na[0x4] = a0_0x1bfc47(0x4)[a0_0x1bfc47(0x1)]('');\na[0x5] = a0_0x1bfc47(0x5)[a0_0x1bfc47(0x1)]('');\na[0x6] = a0_0x1bfc47(0x6)[a0_0x1bfc47(0x1)]('');\na[0x7] = a0_0x1bfc47(0x7)[a0_0x1bfc47(0x1)]('');\nfunction a0_0x5132() {\n    var _0x236b0f = [\n        '\\x27,.,!?',\n        'split',\n        'abcABC',\n        'defDEF',\n        'ghiGHI',\n        'jklJKL',\n        'mnoMNO',\n        'pqrsPQRS',\n        'tuvTUV',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'forEach',\n        'replace',\n        'slice'\n    ];\n    a0_0x5132 = function () {\n        return _0x236b0f;\n    };\n    return a0_0x5132();\n}\na[0x8] = a0_0x1bfc47(0x8)['split']('');\na[0x9] = 'wxyzWXYZ'[a0_0x1bfc47(0x1)]('');\nvar input = require('fs')[a0_0x1bfc47(0x9)]('/dev/stdin', a0_0x1bfc47(0xa));\nvar arr = input[a0_0x1bfc47(0xb)]()[a0_0x1bfc47(0x1)]('\\x0a');\narr[a0_0x1bfc47(0xc)](function (v) {\n    var _0x211de2 = a0_0x35f8;\n    v = v[_0x211de2(0xd)](/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g, function (x) {\n        var _0x29b63c = a0_0x35f8;\n        if (x[0x0] == '0')\n            return x[_0x29b63c(0xe)](0x1)[_0x29b63c(0xd)](/0/g, '\\x20');\n        else\n            return a[x[0x0] - 0x0][x['length'] - 0x1];\n    });\n    console['log'](v);\n});", "test_cases": [["666660666\n44444416003334446633111\n20202202000333003330333", "No\nI'm fine.\naaba  f ff"]], "original": "var a=[\"\"];\na[1]=\"',.,!?\".split(\"\");\na[2]=\"abcABC\".split(\"\");\na[3]=\"defDEF\".split(\"\");\na[4]=\"ghiGHI\".split(\"\");\na[5]=\"jklJKL\".split(\"\");\na[6]=\"mnoMNO\".split(\"\");\na[7]=\"pqrsPQRS\".split(\"\");\na[8]=\"tuvTUV\".split(\"\");\na[9]=\"wxyzWXYZ\".split(\"\");\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.forEach(function(v){\n   v=v.replace(/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g,function(x){\n      if(x[0]==\"0\")return x.slice(1).replace(/0/g,\" \");\n      else return a[x[0]-0][x.length-1];\n   });\n   console.log(v);\n});", "language": "JavaScript"}
{"filename": "p00592_1", "type": "JavaScript", "obfuscated": "function a0_0x3edd(CMpTDj, key) {\n    var stringArray = a0_0xc571();\n    a0_0x3edd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3edd(CMpTDj, key);\n}\nvar a0_0x4403c0 = a0_0x3edd;\nfunction time(x) {\n    var _0x23160c = a0_0x3edd;\n    x = x['split']('')[_0x23160c(0x0)](Number);\n    return x[0x0] * 0xa * 0x3c + x[0x1] * 0x3c + x[0x2] * 0xa + x[0x3];\n}\nvar input = require('fs')[a0_0x4403c0(0x1)]('/dev/stdin', a0_0x4403c0(0x2));\nfunction a0_0xc571() {\n    var _0x66df9b = [\n        'map',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200\\x200',\n        'max',\n        'log'\n    ];\n    a0_0xc571 = function () {\n        return _0x66df9b;\n    };\n    return a0_0xc571();\n}\nvar arr = input[a0_0x4403c0(0x3)]()[a0_0x4403c0(0x4)]('\\x0a');\nwhile (!![]) {\n    var npq = arr[a0_0x4403c0(0x5)]();\n    if (npq == a0_0x4403c0(0x6))\n        break;\n    npq = npq[a0_0x4403c0(0x4)]('\\x20');\n    var n = npq[0x0] - 0x0;\n    var p = time(npq[0x1]);\n    var q = time(npq[0x2]);\n    var tv = [];\n    for (var i = p; i < q; i++)\n        tv[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var cm = arr[a0_0x4403c0(0x5)]();\n        var ary = arr[a0_0x4403c0(0x5)]()['split']('\\x20');\n        for (var j = 0x0; j < cm; j++) {\n            var start = time(ary[a0_0x4403c0(0x5)]());\n            var stop = time(ary['shift']());\n            for (var k = start; k < stop; k++)\n                tv[k]++;\n        }\n    }\n    var max = 0x0;\n    var cnt = 0x0;\n    for (var i = p; i < q; i++) {\n        if (tv[i] != n) {\n            cnt++;\n        } else {\n            max = Math['max'](max, cnt);\n            cnt = 0x0;\n        }\n    }\n    max = Math[a0_0x4403c0(0x7)](max, cnt);\n    console[a0_0x4403c0(0x8)](max);\n}", "test_cases": [["1 2100 2400\n1\n2130 2200\n3 2100 2400\n3\n2100 2130 2200 2230 2300 2330\n2\n2130 2200 2330 2400\n2\n2100 2130 2330 2400\n0 0 0", "120\n180"]], "original": "function time(x){\n   x=x.split(\"\").map(Number);\n   return x[0]*10*60+x[1]*60+x[2]*10+x[3];\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var npq=arr.shift();\n   if(npq==\"0 0 0\")break;\n   npq=npq.split(\" \");\n   var n=npq[0]-0;\n   var p=time(npq[1]);\n   var q=time(npq[2]);\n   var tv=[];\n   for(var i=p;i<q;i++)tv[i]=0;\n   for(var i=0;i<n;i++){\n      var cm=arr.shift();\n      var ary=arr.shift().split(\" \");\n      for(var j=0;j<cm;j++){\n         var start=time(ary.shift());\n         var stop=time(ary.shift());\n         for(var k=start;k<stop;k++)tv[k]++;\n      }\n   }\n   var max=0;\n   var cnt=0;\n   for(var i=p;i<q;i++){\n      if(tv[i]!=n){cnt++;}\n      else {max=Math.max(max,cnt);cnt=0;}\n   }\n   max=Math.max(max,cnt);\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00595_1", "type": "JavaScript", "obfuscated": "function a0_0x509d() {\n    var _0x4fdc1c = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'min',\n        'log'\n    ];\n    a0_0x509d = function () {\n        return _0x4fdc1c;\n    };\n    return a0_0x509d();\n}\nvar a0_0x3409d6 = a0_0x2f5e;\nfunction a0_0x2f5e(iquWcZ, key) {\n    var stringArray = a0_0x509d();\n    a0_0x2f5e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f5e(iquWcZ, key);\n}\nvar input = require('fs')[a0_0x3409d6(0x0)]('/dev/stdin', a0_0x3409d6(0x1));\nvar Arr = input[a0_0x3409d6(0x2)]()[a0_0x3409d6(0x3)]('\\x0a');\nArr['forEach'](function (v) {\n    var _0x25d317 = a0_0x2f5e;\n    var arr = v[_0x25d317(0x3)]('\\x20')[_0x25d317(0x4)](Number);\n    var m = Math['max'](arr[0x0], arr[0x1]);\n    var n = Math[_0x25d317(0x5)](arr[0x0], arr[0x1]);\n    while (n != 0x0) {\n        var N = n;\n        n = m % n;\n        m = N;\n    }\n    console[_0x25d317(0x6)](m);\n});", "test_cases": [["57 38\n60 84", "19\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var m=Math.max(arr[0],arr[1]);\n   var n=Math.min(arr[0],arr[1]);\n   while(n!=0){\n      var N=n;\n      n=m%n;\n      m=N;\n   }\n   console.log(m);\n});", "language": "JavaScript"}
{"filename": "p00602_1", "type": "JavaScript", "obfuscated": "var a0_0x7b1e4c = a0_0x77fa;\nvar input = require('fs')[a0_0x7b1e4c(0x0)](a0_0x7b1e4c(0x1), a0_0x7b1e4c(0x2));\nfunction a0_0x77fa(ShlEsS, key) {\n    var stringArray = a0_0x5550();\n    a0_0x77fa = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x77fa(ShlEsS, key);\n}\nfunction a0_0x5550() {\n    var _0x121bf2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'sort',\n        'length',\n        'log'\n    ];\n    a0_0x5550 = function () {\n        return _0x121bf2;\n    };\n    return a0_0x5550();\n}\nvar arr = input['trim']()[a0_0x7b1e4c(0x3)]('\\x0a');\narr['forEach'](function (value) {\n    var _0x28f55e = a0_0x77fa;\n    var vd = value['split']('\\x20')[_0x28f55e(0x4)](Number);\n    var v = vd[0x0];\n    var d = vd[0x1];\n    var f = [];\n    f[0x0] = 0x1;\n    f[0x1] = 0x2;\n    for (var i = 0x2; i <= v; i++) {\n        f[i] = (f[i - 0x1] + f[i - 0x2]) % 0x3e9;\n    }\n    f['shift']();\n    f[_0x28f55e(0x5)](function (a, b) {\n        return a - b;\n    });\n    var cnt = 0x0;\n    for (var i = 0x1; i < f[_0x28f55e(0x6)]; i++) {\n        if (f[i] - f[i - 0x1] < d)\n            cnt++;\n    }\n    console[_0x28f55e(0x7)](f[_0x28f55e(0x6)] - cnt);\n});", "test_cases": [["5 5\n50 1\n13 13", "2\n50\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.forEach(function(value){\n   var vd=value.split(\" \").map(Number);\n   var v=vd[0];\n   var d=vd[1];\n   var f=[];\n   f[0]=1;\n   f[1]=2;\n   for(var i=2;i<=v;i++){\n      f[i]=(f[i - 1] + f[i - 2])%1001;\n   }\n   f.shift();\n   f.sort(function(a,b){return a-b});\n   var cnt=0;\n   for(var i=1;i<f.length;i++){\n         if(f[i]-f[i-1]<d)cnt++;\n   }\n   console.log(f.length-cnt);\n});", "language": "JavaScript"}
{"filename": "p00603_1", "type": "JavaScript", "obfuscated": "function a0_0x1f92(CLEpRW, key) {\n    var stringArray = a0_0xebac();\n    a0_0x1f92 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f92(CLEpRW, key);\n}\nfunction a0_0xebac() {\n    var _0x554fc3 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'shift',\n        'map',\n        'push',\n        'concat',\n        'splice'\n    ];\n    a0_0xebac = function () {\n        return _0x554fc3;\n    };\n    return a0_0xebac();\n}\nvar a0_0x176fb6 = a0_0x1f92;\nvar input = require('fs')[a0_0x176fb6(0x0)](a0_0x176fb6(0x1), 'utf8');\nvar Arr = input[a0_0x176fb6(0x2)]()[a0_0x176fb6(0x3)]('\\x0a');\nwhile (!![]) {\n    if (Arr[a0_0x176fb6(0x4)] == 0x0)\n        break;\n    var nr = Arr[a0_0x176fb6(0x5)]()[a0_0x176fb6(0x3)]('\\x20')[a0_0x176fb6(0x6)](Number);\n    var n = nr[0x0];\n    var r = nr[0x1];\n    var card = [];\n    for (var i = 0x0; i < n; i++)\n        card[i] = i;\n    var arr = Arr[a0_0x176fb6(0x5)]()['split']('\\x20')[a0_0x176fb6(0x6)](Number);\n    for (var i = 0x0; i < r; i++) {\n        var v = arr[i];\n        var a = [];\n        var b = [];\n        for (var j = 0x0; j < n; j++)\n            Math['floor'](n / 0x2) > j ? b[a0_0x176fb6(0x7)](card[j]) : a[a0_0x176fb6(0x7)](card[j]);\n        card = [];\n        while (!![]) {\n            if (a[a0_0x176fb6(0x4)] == 0x0 && b[a0_0x176fb6(0x4)] == 0x0)\n                break;\n            card = card[a0_0x176fb6(0x8)](a[a0_0x176fb6(0x9)](0x0, v));\n            card = card['concat'](b[a0_0x176fb6(0x9)](0x0, v));\n        }\n    }\n    console['log'](card[card[a0_0x176fb6(0x4)] - 0x1]);\n}", "test_cases": [["9 1\n3\n9 4\n1 2 3 4", "3\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var nr=Arr.shift().split(\" \").map(Number);\n   var n=nr[0];\n   var r=nr[1];\n   var card=[];\n   for(var i=0;i<n;i++)card[i]=i;\n   var arr=Arr.shift().split(\" \").map(Number);\n   for(var i=0;i<r;i++){\n      var v=arr[i];\n      var a=[];\n      var b=[];\n      for(var j=0;j<n;j++)(Math.floor(n/2)>j)?b.push(card[j]): a.push(card[j]);\n      card=[];\n      while(true){\n         if(a.length==0 && b.length==0)break;\n         card=card.concat(a.splice(0,v));\n         card=card.concat(b.splice(0,v));\n      }\n   }\n   console.log(card[card.length-1]);\n}", "language": "JavaScript"}
{"filename": "p00604_1", "type": "JavaScript", "obfuscated": "var a0_0x5dde88 = a0_0x578f;\nfunction a0_0x2508() {\n    var _0x377977 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'length',\n        'shift',\n        'map',\n        'sort',\n        'log'\n    ];\n    a0_0x2508 = function () {\n        return _0x377977;\n    };\n    return a0_0x2508();\n}\nvar input = require('fs')['readFileSync'](a0_0x5dde88(0x0), a0_0x5dde88(0x1));\nvar Arr = input[a0_0x5dde88(0x2)]()[a0_0x5dde88(0x3)]('\\x0a');\nfunction a0_0x578f(NZGkez, key) {\n    var stringArray = a0_0x2508();\n    a0_0x578f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x578f(NZGkez, key);\n}\nwhile (!![]) {\n    if (Arr[a0_0x5dde88(0x4)] == 0x0)\n        break;\n    var n = Arr[a0_0x5dde88(0x5)]();\n    var arr = Arr[a0_0x5dde88(0x5)]()[a0_0x5dde88(0x3)]('\\x20')[a0_0x5dde88(0x6)](Number);\n    arr[a0_0x5dde88(0x7)](function (a, b) {\n        return a - b;\n    });\n    var sum = 0x0;\n    var time = 0x0;\n    arr['forEach'](function (v) {\n        sum += v + time;\n        time += v;\n    });\n    console[a0_0x5dde88(0x8)](sum);\n}", "test_cases": [["3\n10 20 30\n7\n56 26 62 43 25 80 7", "100\n873"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var n=Arr.shift();\n   var arr=Arr.shift().split(\" \").map(Number);\n   arr.sort(function(a,b){return a-b;});\n   var sum=0;\n   var time=0;\n   arr.forEach(function(v){\n      sum+=v+time;\n      time+=v;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00605_1", "type": "JavaScript", "obfuscated": "function a0_0x40be() {\n    var _0x9a5055 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'forEach',\n        'every',\n        'log'\n    ];\n    a0_0x40be = function () {\n        return _0x9a5055;\n    };\n    return a0_0x40be();\n}\nvar a0_0x433e72 = a0_0x2bb1;\nvar input = require('fs')[a0_0x433e72(0x0)](a0_0x433e72(0x1), a0_0x433e72(0x2));\nvar Arr = input[a0_0x433e72(0x3)](/\\n$/, '')[a0_0x433e72(0x4)]('\\x0a');\nfunction a0_0x2bb1(UAzktA, key) {\n    var stringArray = a0_0x40be();\n    a0_0x2bb1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2bb1(UAzktA, key);\n}\nwhile (!![]) {\n    var NK = Arr[a0_0x433e72(0x5)]();\n    if (NK == a0_0x433e72(0x6))\n        break;\n    var nk = NK[a0_0x433e72(0x4)]('\\x20')[a0_0x433e72(0x7)](Number);\n    var S = Arr[a0_0x433e72(0x5)]()[a0_0x433e72(0x4)]('\\x20')[a0_0x433e72(0x7)](Number);\n    for (var i = 0x0; i < nk[0x0]; i++) {\n        var B = Arr[a0_0x433e72(0x5)]()[a0_0x433e72(0x4)]('\\x20')[a0_0x433e72(0x7)](Number);\n        B[a0_0x433e72(0x8)](function (v, index) {\n            S[index] -= v;\n        });\n    }\n    var flag = S[a0_0x433e72(0x9)](function (v) {\n        return v >= 0x0;\n    });\n    console[a0_0x433e72(0xa)](flag ? 'Yes' : 'No');\n}", "test_cases": [["2 3\n5 4 5\n1 2 3\n3 2 1\n3 5\n1 2 3 4 5\n0 1 0 1 2\n0 1 1 2 2\n1 0 3 1 1\n0 0", "Yes\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var NK=Arr.shift();\n   if(NK==\"0 0\")break;\n   var nk=NK.split(\" \").map(Number);\n   var S=(Arr.shift()).split(\" \").map(Number);\n   for(var i=0;i<nk[0];i++){\n      var B=(Arr.shift()).split(\" \").map(Number);\n      B.forEach(function(v,index){S[index]-=v;});\n   }\n   var flag=S.every(function(v){return (v>=0);});\n   console.log(flag?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p00613_1", "type": "JavaScript", "obfuscated": "function a0_0x2046() {\n    var _0x5ac568 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'map',\n        'reduce'\n    ];\n    a0_0x2046 = function () {\n        return _0x5ac568;\n    };\n    return a0_0x2046();\n}\nvar a0_0x5c5d01 = a0_0x18c5;\nvar input = require('fs')[a0_0x5c5d01(0x0)](a0_0x5c5d01(0x1), a0_0x5c5d01(0x2));\nvar Arr = input['trim']()['split']('\\x0a');\nfunction a0_0x18c5(mklOGD, key) {\n    var stringArray = a0_0x2046();\n    a0_0x18c5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x18c5(mklOGD, key);\n}\nwhile (!![]) {\n    var K = Arr[a0_0x5c5d01(0x3)]() - 0x0;\n    if (K == 0x0)\n        break;\n    var arr = Arr[a0_0x5c5d01(0x3)]()['split']('\\x20')[a0_0x5c5d01(0x4)](Number);\n    var sum = arr[a0_0x5c5d01(0x5)](function (a, b) {\n        return a + b;\n    });\n    console['log'](sum / (K - 0x1));\n}", "test_cases": [["2\n2\n3\n5 4 3\n0", "2\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var K=Arr.shift()-0;\n   if(K==0)break;\n   var arr=Arr.shift().split(\" \").map(Number);\n   var sum=arr.reduce(function(a,b){return a+b;});\n   console.log(sum/(K-1));\n}", "language": "JavaScript"}
{"filename": "p00615_1", "type": "JavaScript", "obfuscated": "function a0_0x1560(IlWUzX, key) {\n    var stringArray = a0_0x3638();\n    a0_0x1560 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1560(IlWUzX, key);\n}\nvar a0_0x37561d = a0_0x1560;\nvar input = require('fs')[a0_0x37561d(0x0)](a0_0x37561d(0x1), 'utf8');\nvar Arr = input[a0_0x37561d(0x2)](/\\n$/, '')[a0_0x37561d(0x3)]('\\x0a');\nfunction a0_0x3638() {\n    var _0x3cffe0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'replace',\n        'split',\n        'shift',\n        '0\\x200',\n        'concat',\n        'map',\n        'sort',\n        'reduce',\n        'abs',\n        'log'\n    ];\n    a0_0x3638 = function () {\n        return _0x3cffe0;\n    };\n    return a0_0x3638();\n}\nwhile (!![]) {\n    var str = Arr[a0_0x37561d(0x4)]();\n    if (str == a0_0x37561d(0x5))\n        break;\n    var arr = str[a0_0x37561d(0x3)]('\\x20');\n    var data = [0x0];\n    if (arr[0x0] > 0x0)\n        data = data[a0_0x37561d(0x6)](Arr[a0_0x37561d(0x4)]()[a0_0x37561d(0x3)]('\\x20')[a0_0x37561d(0x7)](Number));\n    if (arr[0x1] > 0x0)\n        data = data[a0_0x37561d(0x6)](Arr['shift']()[a0_0x37561d(0x3)]('\\x20')[a0_0x37561d(0x7)](Number));\n    data[a0_0x37561d(0x8)](function (a, b) {\n        return a - b;\n    });\n    var max = 0x0;\n    data[a0_0x37561d(0x9)](function (a, b) {\n        var _0x399a9e = a0_0x1560;\n        max = Math['max'](max, Math[_0x399a9e(0xa)](a - b));\n        return b;\n    });\n    console[a0_0x37561d(0xb)](max);\n}", "test_cases": [["4 5\n20 35 60 70\n15 30 40 80 90\n3 2\n10 20 30\n42 60\n0 1\n100\n1 1\n10\n50\n0 0", "20\n18\n100\n40"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"0 0\")break;\n   var arr=str.split(\" \");\n   var data=[0];\n   if(arr[0]>0)data=data.concat((Arr.shift()).split(\" \").map(Number));\n   if(arr[1]>0)data=data.concat((Arr.shift()).split(\" \").map(Number));\n   data.sort(function(a,b){return a-b;});\n   var max=0;\n   data.reduce(function(a,b){\n      max=Math.max(max,Math.abs(a-b));\n   return b;\n   });\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00621_1", "type": "JavaScript", "obfuscated": "var a0_0xd1dec5 = a0_0x45b1;\nvar input = require('fs')[a0_0xd1dec5(0x0)](a0_0xd1dec5(0x1), a0_0xd1dec5(0x2));\nfunction a0_0x5566() {\n    var _0x2b7b98 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'impossible',\n        'log',\n        'END'\n    ];\n    a0_0x5566 = function () {\n        return _0x2b7b98;\n    };\n    return a0_0x5566();\n}\nvar arr = input[a0_0xd1dec5(0x3)]()[a0_0xd1dec5(0x4)]('\\x0a');\nfunction a0_0x45b1(AmsBiB, key) {\n    var stringArray = a0_0x5566();\n    a0_0x45b1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x45b1(AmsBiB, key);\n}\nwhile (!![]) {\n    var wq = arr[a0_0xd1dec5(0x5)]();\n    if (wq == a0_0xd1dec5(0x6))\n        break;\n    wq = wq[a0_0xd1dec5(0x4)]('\\x20')['map'](Number);\n    var w = wq[0x0];\n    var W = [];\n    for (var i = 0x0; i < w; i++)\n        W[i] = !![];\n    var cat = {};\n    while (wq[0x1]--) {\n        var sw = arr['shift']()[a0_0xd1dec5(0x4)]('\\x20');\n        if (sw[0x0] == 's') {\n            var id = sw[0x1];\n            var width = sw[0x2] - 0x0;\n            var cnt = 0x0;\n            var ans = a0_0xd1dec5(0x7);\n            for (var i = 0x0; i < w; i++) {\n                cnt = W[i] ? cnt + 0x1 : 0x0;\n                if (cnt == width) {\n                    while (cnt--) {\n                        W[i] = ![];\n                        i--;\n                    }\n                    i++;\n                    cat[id] = [\n                        i,\n                        width\n                    ];\n                    ans = i;\n                    break;\n                }\n            }\n            console[a0_0xd1dec5(0x8)](ans);\n        }\n        if (sw[0x0] == 'w') {\n            var id = sw[0x1];\n            var width = cat[id][0x1];\n            var i = cat[id][0x0];\n            while (width--) {\n                W[i] = !![];\n                i++;\n            }\n        }\n    }\n    console['log'](a0_0xd1dec5(0x9));\n}", "test_cases": [["4 6\ns 0 2\ns 1 3\ns 2 1\nw 0\ns 3 3\ns 4 2\n3 3\ns 0 1\ns 1 1\ns 2 1\n0 0", "0\nimpossible\n2\nimpossible\n0\nEND\n0\n1\n2\nEND"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wq=arr.shift();\n   if(wq==\"0 0\")break;\n   wq=wq.split(\" \").map(Number);\n   var w=wq[0];\n   var W=[];\n   for(var i=0;i<w;i++)W[i]=true;\n   var cat={};\n   while(wq[1]--){\n      var sw=arr.shift().split(\" \");\n      if(sw[0]==\"s\"){\n         var id=sw[1];\n         var width=sw[2]-0;\n         var cnt=0;\n         var ans=\"impossible\";\n         for(var i=0;i<w;i++){\n            cnt=(W[i])?cnt+1:0;\n            if(cnt==width){\n              while(cnt--){W[i]=false;i--;}\n               i++;\n               cat[id]=[i,width];\n               ans=i;\n               break;\n            }\n         }\n         console.log(ans);\n      }\n      if(sw[0]==\"w\"){\n         var id=sw[1];\n         var width=cat[id][1];\n         var i=cat[id][0];\n         while(width--){W[i]=true;i++;}\n      }\n   }\n   console.log(\"END\");\n}", "language": "JavaScript"}
{"filename": "p00622_1", "type": "JavaScript", "obfuscated": "var a0_0xe223d1 = a0_0x1879;\nfunction a0_0x1879(DJNYsz, key) {\n    var stringArray = a0_0x2c69();\n    a0_0x1879 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1879(DJNYsz, key);\n}\nfunction a0_0x2c69() {\n    var _0x517d12 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'join',\n        'shift',\n        'forEach',\n        'hasOwnProperty',\n        'uaPVh',\n        'nCHnT',\n        'fNrEI',\n        'log'\n    ];\n    a0_0x2c69 = function () {\n        return _0x517d12;\n    };\n    return a0_0x2c69();\n}\nvar input = require('fs')[a0_0xe223d1(0x0)](a0_0xe223d1(0x1), a0_0xe223d1(0x2));\nvar arr = input[a0_0xe223d1(0x3)]()[a0_0xe223d1(0x4)]('\\x0a');\nwhile (!![]) {\n    var a = arr['shift']()[a0_0xe223d1(0x4)]('');\n    if (a[a0_0xe223d1(0x5)]('') == '-')\n        break;\n    var b = arr[a0_0xe223d1(0x6)]()['split']('');\n    var c = arr[a0_0xe223d1(0x6)]()[a0_0xe223d1(0x4)]('');\n    var obj = {};\n    a['forEach'](function (v) {\n        obj[v] = !![];\n    });\n    var str = '';\n    var m = '';\n    c[a0_0xe223d1(0x7)](function (v) {\n        var _0x42b94a = a0_0x1879;\n        if (obj[_0x42b94a(0x8)](v)) {\n            if (m == '') {\n                if ('aUQhd' !== 'JdpYK') {\n                    m = a[_0x42b94a(0x6)]();\n                    m = a[_0x42b94a(0x6)]();\n                } else {\n                    str += m;\n                    m = b['shift']();\n                }\n            } else {\n                if (_0x42b94a(0x9) === _0x42b94a(0xa)) {\n                    m = a[_0x42b94a(0x6)]();\n                } else {\n                    m = a[_0x42b94a(0x6)]();\n                }\n            }\n        } else {\n            while (!![]) {\n                if (m == v) {\n                    m = a[_0x42b94a(0x6)]();\n                    break;\n                } else {\n                    if (_0x42b94a(0xb) !== _0x42b94a(0xb)) {\n                        if (m == '') {\n                            m = a[_0x42b94a(0x6)]();\n                            m = a[_0x42b94a(0x6)]();\n                        } else {\n                            m = a['shift']();\n                        }\n                    } else {\n                        str += m;\n                        m = b[_0x42b94a(0x6)]();\n                    }\n                }\n            }\n        }\n    });\n    str += m;\n    str += b[a0_0xe223d1(0x5)]('');\n    console[a0_0xe223d1(0xc)](str);\n}", "test_cases": [["CBA\ncba\ncCa\nX\nZY\nZ\n-", "BbA\nXY"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var a=arr.shift().split(\"\");\n   if(a.join(\"\")==\"-\")break;\n   var b=arr.shift().split(\"\");\n   var c=arr.shift().split(\"\");\n   var obj={};\n   a.forEach(function(v){\n      obj[v]=true;\n   });\n   var str=\"\";\n   var m=\"\";\n   c.forEach(function(v){\n      if(obj.hasOwnProperty(v)){\n         if(m==\"\"){\n            m=a.shift();\n            m=a.shift();\n         }else{\n            m=a.shift();\n         }\n      }else{\n         while(true){\n            if(m==v){\n               m=a.shift();\n               break;\n            }else{\n               str+=m;\n               m=b.shift();\n            }\n         }\n      }\n   });\n   str+=m;\n   str+=b.join(\"\");\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00627_1", "type": "JavaScript", "obfuscated": "var a0_0x22e9d7 = a0_0x3c42;\nfunction a0_0x3c42(pIntiZ, key) {\n    var stringArray = a0_0x4a76();\n    a0_0x3c42 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c42(pIntiZ, key);\n}\nfunction a0_0x4a76() {\n    var _0x2481b8 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'length',\n        'shift',\n        'log'\n    ];\n    a0_0x4a76 = function () {\n        return _0x2481b8;\n    };\n    return a0_0x4a76();\n}\nvar input = require('fs')[a0_0x22e9d7(0x0)]('/dev/stdin', a0_0x22e9d7(0x1));\nvar Arr = input['trim']()[a0_0x22e9d7(0x2)]('\\x0a')['map'](Number);\nwhile (Arr[a0_0x22e9d7(0x3)] != 0x0) {\n    var n = Arr[a0_0x22e9d7(0x4)]() / 0x4;\n    if (n == 0x0)\n        break;\n    var sum = 0x0;\n    while (n != 0x0) {\n        sum += Arr[a0_0x22e9d7(0x4)]();\n        n--;\n    }\n    console[a0_0x22e9d7(0x5)](sum);\n}", "test_cases": [["20\n4\n3\n2\n1\n3\n8\n2\n0\n0", "13\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nwhile(Arr.length!=0){\n   var n=(Arr.shift())/4;\n   if(n==0)break;\n   var sum=0;\n   while(n!=0){sum+=Arr.shift();n--}\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00628_1", "type": "JavaScript", "obfuscated": "var a0_0x461285 = a0_0x3911;\nvar input = require('fs')[a0_0x461285(0x0)](a0_0x461285(0x1), a0_0x461285(0x2));\nfunction a0_0x3911(JEHjGA, key) {\n    var stringArray = a0_0x18c3();\n    a0_0x3911 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3911(JEHjGA, key);\n}\nfunction a0_0x18c3() {\n    var _0x5966b9 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'END\\x20OF\\x20INPUT',\n        'forEach',\n        'length',\n        'log'\n    ];\n    a0_0x18c3 = function () {\n        return _0x5966b9;\n    };\n    return a0_0x18c3();\n}\nvar Arr = input['replace'](/\\n$/, '')[a0_0x461285(0x3)]('\\x0a');\nwhile (!![]) {\n    var str = Arr[a0_0x461285(0x4)]();\n    if (str == a0_0x461285(0x5))\n        break;\n    var arr = str['split']('\\x20');\n    arr[a0_0x461285(0x6)](function (v, i) {\n        var _0x332b98 = a0_0x3911;\n        arr[i] = v[_0x332b98(0x7)];\n    });\n    console[a0_0x461285(0x8)](arr['join'](''));\n}", "test_cases": [["Yes I have a number\nHow I wish I could calculate an unused color for space\nThank you\nEND OF INPUT", "31416\n31415926535\n53"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"END OF INPUT\")break;\n   var arr=str.split(\" \");\n   arr.forEach(function(v,i){arr[i]=v.length;});\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00630_1", "type": "JavaScript", "obfuscated": "var a0_0x533578 = a0_0x33ce;\nvar input = require('fs')[a0_0x533578(0x0)](a0_0x533578(0x1), a0_0x533578(0x2));\nfunction a0_0x33ce(RVHCsu, key) {\n    var stringArray = a0_0x2b8f();\n    a0_0x33ce = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x33ce(RVHCsu, key);\n}\nvar Arr = input[a0_0x533578(0x3)](/\\n$/, '')[a0_0x533578(0x4)]('\\x0a');\nfunction a0_0x2b8f() {\n    var _0xcbe618 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'replace',\n        'split',\n        'shift',\n        'toLowerCase',\n        'length',\n        'toUpperCase',\n        'log',\n        'join'\n    ];\n    a0_0x2b8f = function () {\n        return _0xcbe618;\n    };\n    return a0_0x2b8f();\n}\nwhile (!![]) {\n    var nt = Arr[a0_0x533578(0x5)]()[a0_0x533578(0x4)]('\\x20');\n    var str = nt[0x0];\n    var type = nt[0x1];\n    if (type == 'X')\n        break;\n    str = str[a0_0x533578(0x3)](/^./, function (s) {\n        var _0x39e2d2 = a0_0x33ce;\n        return s[_0x39e2d2(0x6)]();\n    });\n    str = str[a0_0x533578(0x3)](/[A-Z]/g, function (s) {\n        return '_' + s;\n    });\n    var arr = str[a0_0x533578(0x4)]('_');\n    for (var i = 0x1; i < arr[a0_0x533578(0x7)]; i++) {\n        arr[i] = arr[i][a0_0x533578(0x3)](/./, function (s) {\n            var _0x1a404d = a0_0x33ce;\n            return s[_0x1a404d(0x8)]();\n        });\n    }\n    if (type == 'U') {\n        arr[0x0] = arr[0x0][a0_0x533578(0x3)](/^./, function (s) {\n            return s['toUpperCase']();\n        });\n        console[a0_0x533578(0x9)](arr[a0_0x533578(0xa)](''));\n    }\n    if (type == 'L')\n        console[a0_0x533578(0x9)](arr['join'](''));\n    if (type == 'D')\n        console[a0_0x533578(0x9)](arr[a0_0x533578(0xa)]('_')[a0_0x533578(0x6)]());\n}", "test_cases": [["get_user_name L\ngetUserName U\nGetUserName D\nEndOfInput X", "getUserName\nGetUserName\nget_user_name"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var nt=(Arr.shift()).split(\" \");\n   var str=nt[0];\n   var type=nt[1];\n   if(type==\"X\")break;\n   str=str.replace(/^./,function(s){\n      return s.toLowerCase();\n   });\n   str=str.replace(/[A-Z]/g,function(s){\n      return \"_\"+s;\n   });\n   var arr=str.split(\"_\");\n   for(var i=1;i<arr.length;i++){\n      arr[i]=arr[i].replace(/./,function(s){\n         return s.toUpperCase();\n      });\n   }\n   if(type==\"U\"){\n      arr[0]=arr[0].replace(/^./,function(s){\n         return s.toUpperCase();\n      });\n      console.log(arr.join(\"\"));\n   }\n   if(type==\"L\")console.log(arr.join(\"\"));\n   if(type==\"D\")console.log(arr.join(\"_\").toLowerCase());\n}", "language": "JavaScript"}
{"filename": "p00631_1", "type": "JavaScript", "obfuscated": "var a0_0x52ece5 = a0_0x3914;\nfunction a0_0x3914(NUKIfb, key) {\n    var stringArray = a0_0x3d63();\n    a0_0x3914 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3914(NUKIfb, key);\n}\nfunction bomb(a, b, i) {\n    var _0xff4039 = a0_0x3914;\n    if (i == n) {\n        min = Math[_0xff4039(0x0)](min, Math[_0xff4039(0x1)](a - b));\n        return;\n    }\n    bomb(a + arr[i], b, i + 0x1);\n    bomb(a, b + arr[i], i + 0x1);\n}\nvar input = require('fs')['readFileSync'](a0_0x52ece5(0x2), 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfunction a0_0x3d63() {\n    var _0x4fa841 = [\n        'min',\n        'abs',\n        '/dev/stdin',\n        'shift',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x3d63 = function () {\n        return _0x4fa841;\n    };\n    return a0_0x3d63();\n}\nwhile (!![]) {\n    var n = Arr[a0_0x52ece5(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()[a0_0x52ece5(0x4)]('\\x20')[a0_0x52ece5(0x5)](Number);\n    var min = Infinity;\n    bomb(0x0, 0x0, 0x0);\n    console[a0_0x52ece5(0x6)](min);\n}", "test_cases": [["5\n1 2 3 4 5\n4\n2 3 5 7\n0", "1\n1"]], "original": "function bomb(a,b,i){\n   if(i==n){\n      min=Math.min(min,Math.abs(a-b));\n      return;\n   }\n   bomb(a+arr[i],b,i+1);\n   bomb(a,b+arr[i],i+1);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=Arr.shift().split(\" \").map(Number);\n   var min=Infinity;\n   bomb(0,0,0);\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p00637_1", "type": "JavaScript", "obfuscated": "var a0_0x3679af = a0_0x1dae;\nfunction a0_0x1dae(vinFrn, key) {\n    var stringArray = a0_0x4305();\n    a0_0x1dae = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1dae(vinFrn, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x3679af(0x0)](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr[a0_0x3679af(0x1)]()[a0_0x3679af(0x2)]('\\x20')['map'](Number);\n    var x = arr[0x0];\n    var ans = [[x]];\n    for (var i = 0x1; i < n; i++) {\n        if (x + 0x1 == arr[i])\n            ans[ans[a0_0x3679af(0x3)] - 0x1][a0_0x3679af(0x4)](arr[i]);\n        else\n            ans['push']([arr[i]]);\n        x = arr[i];\n    }\n    ans['forEach'](function (v, i) {\n        var _0x275928 = a0_0x1dae;\n        if (v[_0x275928(0x3)] !== 0x1)\n            ans[i] = v[0x0] + '-' + v[v['length'] - 0x1];\n        else\n            ans[i] = v[0x0];\n    });\n    console[a0_0x3679af(0x5)](ans[a0_0x3679af(0x6)]('\\x20'));\n}\nfunction a0_0x4305() {\n    var _0x24cfa9 = [\n        'replace',\n        'shift',\n        'split',\n        'length',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x4305 = function () {\n        return _0x24cfa9;\n    };\n    return a0_0x4305();\n}", "test_cases": [["5\n1 2 3 5 6\n3\n7 8 9\n0", "1-3 5-6\n7-9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var x=arr[0];\n   var ans=[[x]];\n   for(var i=1;i<n;i++){\n      if(x+1==arr[i])(ans[ans.length-1]).push(arr[i]);\n      else ans.push([arr[i]]);\n      x=arr[i];\n   }\n   ans.forEach(function(v,i){\n      if(v.length!==1)ans[i]=v[0]+\"-\"+v[v.length-1];\n      else ans[i]=v[0];\n   });\n   console.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00657_1", "type": "JavaScript", "obfuscated": "var a0_0x955df2 = a0_0x148e;\nvar input = require('fs')['readFileSync'](a0_0x955df2(0x0), 'utf8');\nfunction a0_0x4204() {\n    var _0x56ee45 = [\n        '/dev/stdin',\n        'split',\n        'log',\n        'yes'\n    ];\n    a0_0x4204 = function () {\n        return _0x56ee45;\n    };\n    return a0_0x4204();\n}\nvar Arr = input['trim']()[a0_0x955df2(0x1)]('\\x0a');\nfunction a0_0x148e(LrgEEe, key) {\n    var stringArray = a0_0x4204();\n    a0_0x148e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x148e(LrgEEe, key);\n}\nwhile (!![]) {\n    var rc = Arr['shift']()[a0_0x955df2(0x1)]('\\x20')['map'](Number);\n    var r = rc[0x0];\n    var c = rc[0x1];\n    if (r == 0x0 && c == 0x0)\n        break;\n    console[a0_0x955df2(0x2)](r % 0x2 == 0x1 && c % 0x2 == 0x1 ? 'no' : a0_0x955df2(0x3));\n}", "test_cases": [["1 1\n2 2\n0 0", "no\nyes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var rc=Arr.shift().split(\" \").map(Number);\n   var r=rc[0];\n   var c=rc[1];\n   if(r==0 && c==0)break;\n   console.log((r%2==1 && c%2==1)?\"no\":\"yes\");\n}", "language": "JavaScript"}
{"filename": "p00676_1", "type": "JavaScript", "obfuscated": "var a0_0x2d8cb9 = a0_0x5139;\nfunction heron(a, b, c) {\n    var _0x565886 = a0_0x5139;\n    var s = (a + b + c) / 0x2;\n    var S = Math[_0x565886(0x0)](s * (s - a) * (s - b) * (s - c));\n    return S;\n}\nvar input = require('fs')[a0_0x2d8cb9(0x1)]('/dev/stdin', a0_0x2d8cb9(0x2));\nvar Arr = input['trim']()[a0_0x2d8cb9(0x3)]('\\x0a');\nfunction a0_0x55e8() {\n    var _0x1c90da = [\n        'sqrt',\n        'readFileSync',\n        'utf8',\n        'split',\n        'map',\n        'toFixed'\n    ];\n    a0_0x55e8 = function () {\n        return _0x1c90da;\n    };\n    return a0_0x55e8();\n}\nfunction a0_0x5139(omaEjV, key) {\n    var stringArray = a0_0x55e8();\n    a0_0x5139 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5139(omaEjV, key);\n}\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var ALX = Arr[i][a0_0x2d8cb9(0x3)]('\\x20')[a0_0x2d8cb9(0x4)](Number);\n    var A = ALX[0x0];\n    var L = ALX[0x1];\n    var X = ALX[0x2];\n    var sum = 0x0;\n    sum += heron(A, L, L);\n    sum += heron(L, (L + X) / 0x2, (L + X) / 0x2) * 0x2;\n    console['log'](sum[a0_0x2d8cb9(0x5)](0xa));\n}", "test_cases": [["2 2 1\n2 3 1\n3 2 3\n2 3 5", "3.9681187851\n6.7970540913\n6.5668891783\n13.9527248554"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var ALX=Arr[i].split(\" \").map(Number);\n   var A=ALX[0];\n   var L=ALX[1];\n   var X=ALX[2];\n   var sum=0;\n   sum+=heron(A,L,L);\n   sum+=(heron(L,(L+X)/2,(L+X)/2)*2);\n   console.log(sum.toFixed(10));\n}", "language": "JavaScript"}
{"filename": "p00695_1", "type": "JavaScript", "obfuscated": "var a0_0x4c5285 = a0_0x6ead;\nvar input = require('fs')[a0_0x4c5285(0x0)](a0_0x4c5285(0x1), a0_0x4c5285(0x2));\nvar Arr = input[a0_0x4c5285(0x3)]()['split']('\\x0a');\nfunction a0_0x6ead(XANvSQ, key) {\n    var stringArray = a0_0x2583();\n    a0_0x6ead = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6ead(XANvSQ, key);\n}\nArr[a0_0x4c5285(0x4)]('');\nvar n = Arr[a0_0x4c5285(0x5)]() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var yx = [];\n    var dp = [];\n    for (var i = 0x0; i < 0x5; i++) {\n        var v = Arr[a0_0x4c5285(0x5)]()[a0_0x4c5285(0x6)]('\\x20')[a0_0x4c5285(0x7)](Number);\n        yx['push'](v);\n        dp[a0_0x4c5285(0x4)]([]);\n    }\n    for (var y = 0x0; y < 0x5; y++) {\n        for (var x = 0x0; x < 0x5; x++) {\n            if (y == 0x0)\n                dp[y][x] = yx[y][x] == 0x1 ? 0x1 : 0x0;\n            else\n                dp[y][x] = yx[y][x] == 0x1 ? dp[y - 0x1][x] + 0x1 : 0x0;\n        }\n    }\n    var max = 0x0;\n    for (var y = 0x0; y < 0x5; y++) {\n        for (var i = 0x0; i < 0x5; i++) {\n            for (var j = i; j < 0x5; j++) {\n                var min = Infinity;\n                for (var k = i; k <= j; k++)\n                    min = Math[a0_0x4c5285(0x8)](min, dp[y][k]);\n                max = Math[a0_0x4c5285(0x9)](max, min * (j - i + 0x1));\n            }\n        }\n    }\n    console[a0_0x4c5285(0xa)](max);\n    Arr[a0_0x4c5285(0x5)]();\n}\nfunction a0_0x2583() {\n    var _0x258db8 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'push',\n        'shift',\n        'split',\n        'map',\n        'min',\n        'max',\n        'log'\n    ];\n    a0_0x2583 = function () {\n        return _0x258db8;\n    };\n    return a0_0x2583();\n}", "test_cases": [["3\n1 1 0 1 0\n0 1 1 1 1\n1 0 1 0 1\n0 1 1 1 0\n0 1 1 0 0\n\n0 1 0 1 1\n0 1 0 1 0\n0 0 1 0 0\n0 0 1 1 0\n1 0 1 0 0\n\n1 1 1 1 0\n0 1 1 1 0\n0 1 1 0 1\n0 1 1 1 0\n0 0 0 0 1", "4\n3\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.push(\"\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var yx=[];\n   var dp=[];\n   for(var i=0;i<5;i++){\n      var v=Arr.shift().split(\" \").map(Number);\n      yx.push(v);\n      dp.push([]);\n   }\n   for(var y=0;y<5;y++){\n      for(var x=0;x<5;x++){\n         if(y==0)dp[y][x]=(yx[y][x]==1)?1:0;\n         else dp[y][x]=(yx[y][x]==1)?dp[y-1][x]+1:0;\n      }\n   }\n   var max=0;\n   for(var y=0;y<5;y++){\n      for(var i=0;i<5;i++){\n         for(var j=i;j<5;j++){\n            var min=Infinity;\n            for(var k=i;k<=j;k++)min=Math.min(min,dp[y][k]);\n            max=Math.max(max,min*(j-i+1));\n         }\n      }\n   }\n   console.log(max);\n   Arr.shift();\n}", "language": "JavaScript"}
{"filename": "p00706_1", "type": "JavaScript", "obfuscated": "function a0_0x2a0d(VrVZqN, key) {\n    var stringArray = a0_0x6c54();\n    a0_0x2a0d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a0d(VrVZqN, key);\n}\nfunction a0_0x6c54() {\n    var _0x10a81c = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map'\n    ];\n    a0_0x6c54 = function () {\n        return _0x10a81c;\n    };\n    return a0_0x6c54();\n}\nvar a0_0x38667e = a0_0x2a0d;\nvar input = require('fs')[a0_0x38667e(0x0)](a0_0x38667e(0x1), 'utf8');\nvar arr = input[a0_0x38667e(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x38667e(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var wh = arr[a0_0x38667e(0x3)]()[a0_0x38667e(0x4)]('\\x20')[a0_0x38667e(0x5)](Number);\n    var w = wh[0x0];\n    var h = wh[0x1];\n    var XY = [];\n    for (var i = 0x0; i < w; i++) {\n        XY[i] = [];\n        for (var j = 0x0; j < h; j++) {\n            XY[i][j] = 0x0;\n        }\n    }\n    while (n--) {\n        var xy = arr[a0_0x38667e(0x3)]()[a0_0x38667e(0x4)]('\\x20')[a0_0x38667e(0x5)](Number);\n        XY[xy[0x0] - 0x1][xy[0x1] - 0x1] = 0x1;\n    }\n    var st = arr[a0_0x38667e(0x3)]()[a0_0x38667e(0x4)]('\\x20')['map'](Number);\n    var s = st[0x0];\n    var t = st[0x1];\n    var max = 0x0;\n    for (var i = 0x0; i <= w - s; i++) {\n        for (var j = 0x0; j <= h - t; j++) {\n            var sum = 0x0;\n            for (var x = 0x0; x < s; x++) {\n                for (var y = 0x0; y < t; y++) {\n                    sum += XY[i + x][j + y];\n                }\n            }\n            max = Math['max'](sum, max);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["16\n10 8\n2 2\n2 5\n2 7\n3 3\n3 8\n4 2\n4 5\n4 8\n6 4\n6 7\n7 5\n7 8\n8 1\n8 4\n9 6\n10 3\n4 3\n8\n6 4\n1 2\n2 1\n2 4\n3 4\n4 2\n5 3\n6 1\n6 2\n3 2\n0", "4\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var wh=arr.shift().split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var XY=[];\n   for(var i=0;i<w;i++){\n      XY[i]=[];\n      for(var j=0;j<h;j++){\n         XY[i][j]=0;\n      }\n   }\n   while(n--){\n      var xy=arr.shift().split(\" \").map(Number);\n      XY[xy[0]-1][xy[1]-1]=1;\n   }\n   var st=arr.shift().split(\" \").map(Number);\n   var s=st[0];\n   var t=st[1];\n   var max=0;\n   for(var i=0;i<=w-s;i++){\n      for(var j=0;j<=h-t;j++){\n         var sum=0;\n         for(var x=0;x<s;x++){\n            for(var y=0;y<t;y++){\n               sum+=XY[i+x][j+y];\n            }\n         }\n         max=Math.max(sum,max);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00711_1", "type": "JavaScript", "obfuscated": "function a0_0xa0d0() {\n    var _0x395082 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'indexOf',\n        'push',\n        'log'\n    ];\n    a0_0xa0d0 = function () {\n        return _0x395082;\n    };\n    return a0_0xa0d0();\n}\nfunction a0_0xf30c(pBUYJa, key) {\n    var stringArray = a0_0xa0d0();\n    a0_0xf30c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf30c(pBUYJa, key);\n}\nvar a0_0x15f0ca = a0_0xf30c;\nfunction bomb(y, x) {\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < 0x4; i++) {\n        var yy = y + dy[i];\n        var xx = x + dx[i];\n        if (yy < 0x0 || yy >= H || xx < 0x0 || xx >= W)\n            continue;\n        if (yx[yy][xx] == '.') {\n            cnt++;\n            yx[yy][xx] = cnt;\n            bomb(yy, xx);\n        }\n    }\n}\nvar input = require('fs')[a0_0x15f0ca(0x0)](a0_0x15f0ca(0x1), a0_0x15f0ca(0x2));\nvar Arr = input[a0_0x15f0ca(0x3)]()[a0_0x15f0ca(0x4)]('\\x0a');\nwhile (!![]) {\n    var WH = Arr['shift']()[a0_0x15f0ca(0x4)]('\\x20')['map'](Number);\n    var W = WH[0x0];\n    var H = WH[0x1];\n    if (W == 0x0 && H == 0x0)\n        break;\n    var yx = [];\n    var Y, X;\n    for (var i = 0x0; i < H; i++) {\n        var arr = Arr[a0_0x15f0ca(0x5)]()[a0_0x15f0ca(0x4)]('');\n        if (arr[a0_0x15f0ca(0x6)]('@') != -0x1) {\n            Y = i;\n            X = arr[a0_0x15f0ca(0x6)]('@');\n        }\n        yx[a0_0x15f0ca(0x7)](arr);\n    }\n    var cnt = 0x1;\n    bomb(Y, X);\n    console[a0_0x15f0ca(0x8)](cnt);\n}", "test_cases": [["6 9\n....#.\n.....#\n......\n......\n......\n......\n......\n#@...#\n.#..#.\n11 9\n.#.........\n.#.#######.\n.#.#.....#.\n.#.#.###.#.\n.#.#..@#.#.\n.#.#####.#.\n.#.......#.\n.#########.\n...........\n11 6\n..#..#..#..\n..#..#..#..\n..#..#..###\n..#..#..#@.\n..#..#..#..\n..#..#..#..\n7 7\n..#.#..\n..#.#..\n###.###\n...@...\n###.###\n..#.#..\n..#.#..\n0 0", "45\n59\n6\n13"]], "original": "function bomb(y,x){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=H || xx<0 || xx>=W)continue;\n      if(yx[yy][xx]==\".\"){cnt++;yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var WH=(Arr.shift()).split(\" \").map(Number);\n   var W=WH[0];\n   var H=WH[1];\n   if(W==0 && H==0)break;\n      var yx=[];\n      var Y,X;\n      for(var i=0;i<H;i++){\n         var arr=(Arr.shift()).split(\"\");\n         if(arr.indexOf(\"@\")!=-1){Y=i;X=arr.indexOf(\"@\");}\n         yx.push(arr);\n      }\n      var cnt=1;\n      bomb(Y,X);\n      console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00712_1", "type": "JavaScript", "obfuscated": "function a0_0x20e7() {\n    var _0x1c0b6f = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'join',\n        '0\\x200\\x200\\x200',\n        'log'\n    ];\n    a0_0x20e7 = function () {\n        return _0x1c0b6f;\n    };\n    return a0_0x20e7();\n}\nfunction a0_0x155b(niYLNL, key) {\n    var stringArray = a0_0x20e7();\n    a0_0x155b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x155b(niYLNL, key);\n}\nvar a0_0x476057 = a0_0x155b;\nvar input = require('fs')[a0_0x476057(0x0)]('/dev/stdin', a0_0x476057(0x1));\nvar arr = input[a0_0x476057(0x2)]()['split']('\\x0a');\nwhile (!![]) {\n    var pqan = arr['shift']()[a0_0x476057(0x3)]('\\x20')[a0_0x476057(0x4)](Number);\n    if (pqan[a0_0x476057(0x5)]('\\x20') == a0_0x476057(0x6))\n        break;\n    var p = pqan[0x0];\n    var q = pqan[0x1];\n    var a = pqan[0x2];\n    var n = pqan[0x3];\n    var ans = 0x0;\n    var loop = function (start, P, Q, A, cnt) {\n        if (cnt > 0x0) {\n            if (cnt > n)\n                return;\n            if (p * Q == P * q) {\n                ans++;\n                return;\n            } else if (p * Q < P * q)\n                return;\n        }\n        for (var i = start; A * i <= a; i++) {\n            loop(i, 0x1 * Q + i * P, Q * i, A * i, cnt + 0x1);\n        }\n    };\n    loop(0x1, 0x0, 0x1, 0x1, 0x0);\n    console[a0_0x476057(0x7)](ans);\n}", "test_cases": [["2 3 120 3\n2 3 300 3\n2 3 299 3\n2 3 12 3\n2 3 12000 7\n54 795 12000 7\n2 3 300 1\n2 1 200 5\n2 4 54 2\n0 0 0 0", "4\n7\n6\n2\n42\n1\n0\n9\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var pqan=arr.shift().split(\" \").map(Number);\n   if(pqan.join(\" \")==\"0 0 0 0\")break;\n   var p=pqan[0];\n   var q=pqan[1];\n   var a=pqan[2];\n   var n=pqan[3];\n   var ans=0;\n   var loop=function(start,P,Q,A,cnt){\n      if(cnt>0){\n         if(cnt>n)return;\n         if(p*Q==P*q){\n            ans++;\n            return;\n         }else if(p*Q<P*q)return;\n      }\n      for(var i=start;A*i<=a;i++){\n         loop(i,1*Q+i*P,Q*i,A*i,cnt+1);\n      }\n   };\n   loop(1,0,1,1,0);\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00746_1", "type": "JavaScript", "obfuscated": "function a0_0x2f44(UajZnX, key) {\n    var stringArray = a0_0x2f2a();\n    a0_0x2f44 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f44(UajZnX, key);\n}\nvar a0_0x19a70a = a0_0x2f44;\nfunction a0_0x2f2a() {\n    var _0x320fb1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'shift',\n        '1\\x201',\n        'map',\n        'length',\n        'max',\n        'min',\n        'log'\n    ];\n    a0_0x2f2a = function () {\n        return _0x320fb1;\n    };\n    return a0_0x2f2a();\n}\nvar input = require('fs')[a0_0x19a70a(0x0)](a0_0x19a70a(0x1), 'utf8');\nvar Arr = input['trim']()[a0_0x19a70a(0x2)]('\\x0a');\nwhile (!![]) {\n    var N = Arr[a0_0x19a70a(0x3)]() - 0x0;\n    if (N == 0x0)\n        break;\n    if (N == 0x1) {\n        console['log'](a0_0x19a70a(0x4));\n        continue;\n    }\n    var arr = [];\n    arr[0x0] = [\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < N - 0x1; i++) {\n        var nm = Arr[a0_0x19a70a(0x3)]()[a0_0x19a70a(0x2)]('\\x20')[a0_0x19a70a(0x5)](Number);\n        var n = nm[0x0];\n        var m = nm[0x1];\n        var x = 0x0;\n        var y = 0x0;\n        if (m == 0x0)\n            x = -0x1;\n        if (m == 0x1)\n            y = -0x1;\n        if (m == 0x2)\n            x = 0x1;\n        if (m == 0x3)\n            y = 0x1;\n        arr[i + 0x1] = [\n            arr[n][0x0] + x,\n            arr[n][0x1] + y\n        ];\n    }\n    var xA = 0x0;\n    var xZ = 0x0;\n    var yA = 0x0;\n    var yZ = 0x0;\n    for (var i = 0x0; i < arr[a0_0x19a70a(0x6)]; i++) {\n        xA = Math['min'](xA, arr[i][0x0]);\n        xZ = Math[a0_0x19a70a(0x7)](xZ, arr[i][0x0]);\n        yA = Math[a0_0x19a70a(0x8)](yA, arr[i][0x1]);\n        yZ = Math['max'](yZ, arr[i][0x1]);\n    }\n    console[a0_0x19a70a(0x9)](xZ - xA + 0x1 + '\\x20' + (yZ - yA + 0x1));\n}", "test_cases": [["1\n5\n0 0\n0 1\n0 2\n0 3\n12\n0 0\n1 0\n2 0\n3 1\n4 1\n5 1\n6 2\n7 2\n8 2\n9 3\n10 3\n10\n0 2\n1 2\n2 2\n3 2\n2 1\n5 1\n6 1\n7 1\n8 1\n0", "1 1\n3 3\n4 4\n5 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   if(N==1){console.log(\"1 1\");continue;}\n   var arr=[];\n   arr[0]=[0,0];\n   for(var i=0;i<N-1;i++){\n      var nm=(Arr.shift()).split(\" \").map(Number);\n      var n=nm[0];\n      var m=nm[1];\n      var x=0;\n      var y=0;\n      if(m==0)x=-1;\n      if(m==1)y=-1\n      if(m==2)x=1;\n      if(m==3)y=1;\n      arr[i+1]=[arr[n][0]+x,arr[n][1]+y];\n   }\n   var xA=0;\n   var xZ=0;\n   var yA=0;\n   var yZ=0;\n   for(var i=0;i<arr.length;i++){\n      xA=Math.min(xA,arr[i][0]);\n      xZ=Math.max(xZ,arr[i][0]);\n      yA=Math.min(yA,arr[i][1]);\n      yZ=Math.max(yZ,arr[i][1]);\n   }\n   console.log((xZ-xA+1)+\" \"+(yZ-yA+1));\n}", "language": "JavaScript"}
{"filename": "p00761_1", "type": "JavaScript", "obfuscated": "var a0_0x2b96c1 = a0_0xd64a;\nfunction a0_0xa802() {\n    var _0x3df5ad = [\n        'length',\n        'readFileSync',\n        'trim',\n        'shift',\n        'map',\n        'push',\n        'split',\n        'sort',\n        'reverse',\n        'join',\n        'indexOf',\n        'log'\n    ];\n    a0_0xa802 = function () {\n        return _0x3df5ad;\n    };\n    return a0_0xa802();\n}\nfunction str1(x) {\n    var _0xc02062 = a0_0xd64a;\n    x = x + '';\n    while (x[_0xc02062(0x0)] != b)\n        x = '0' + x;\n    return x;\n}\nvar input = require('fs')[a0_0x2b96c1(0x1)]('/dev/stdin', 'utf8');\nvar Arr = input[a0_0x2b96c1(0x2)]()['split']('\\x0a');\nfunction a0_0xd64a(VHGyhP, key) {\n    var stringArray = a0_0xa802();\n    a0_0xd64a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xd64a(VHGyhP, key);\n}\nwhile (!![]) {\n    var ab = Arr[a0_0x2b96c1(0x3)]()['split']('\\x20')[a0_0x2b96c1(0x4)](Number);\n    if (ab[0x0] == 0x0 && ab[0x1] == 0x0)\n        break;\n    var str = ab[0x0] + '';\n    var b = ab[0x1];\n    var arr = [];\n    str = str1(str);\n    arr[a0_0x2b96c1(0x5)](str);\n    var i = 0x0;\n    while (!![]) {\n        i++;\n        var s = str[a0_0x2b96c1(0x6)]('');\n        s[a0_0x2b96c1(0x7)](function (a, b) {\n            return b - a;\n        });\n        var A = parseInt(s['join'](''), 0xa);\n        var B = parseInt(s[a0_0x2b96c1(0x8)]()[a0_0x2b96c1(0x9)](''), 0xa);\n        var C = A - B;\n        var Cstr = str1(C);\n        if (arr[a0_0x2b96c1(0xa)](Cstr) != -0x1)\n            break;\n        arr[a0_0x2b96c1(0x5)](Cstr);\n        str = Cstr;\n    }\n    console[a0_0x2b96c1(0xb)](arr[a0_0x2b96c1(0xa)](Cstr) + '\\x20' + parseInt(Cstr, 0xa) + '\\x20' + (i - arr[a0_0x2b96c1(0xa)](Cstr)));\n}", "test_cases": [["2012 4\n83268 6\n1112 4\n0 1\n99 2\n0 0", "3 6174 1\n1 862632 7\n5 6174 1\n0 0 1\n1 0 1"]], "original": "function str1(x){\n   x=x+\"\";\n   while(x.length!=b)x=\"0\"+x;\n   return x;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var ab=(Arr.shift()).split(\" \").map(Number);\n   if(ab[0]==0 && ab[1]==0)break;\n   var str=ab[0]+\"\";\n   var b=ab[1];\n   var arr=[];\n   str=str1(str);\n   arr.push(str);\n   var i=0;\n   while(true){\n      i++;\n      var s=str.split(\"\");\n      s.sort(function(a,b){return b-a;});\n      var A=parseInt(s.join(\"\"),10);\n      var B=parseInt(s.reverse().join(\"\"),10); \n      var C=A-B;\n      var Cstr=str1(C);     \n      if(arr.indexOf(Cstr)!=-1)break;\n      arr.push(Cstr);\n      str=Cstr; \n   }\n   console.log(arr.indexOf(Cstr)+\" \"+parseInt(Cstr,10)+\" \"+(i-arr.indexOf(Cstr)));\n}", "language": "JavaScript"}
{"filename": "p00768_1", "type": "JavaScript", "obfuscated": "function a0_0x4a59(oqQfzk, key) {\n    var stringArray = a0_0x1781();\n    a0_0x4a59 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4a59(oqQfzk, key);\n}\nvar a0_0x2251a6 = a0_0x4a59;\nvar input = require('fs')['readFileSync'](a0_0x2251a6(0x0), 'utf8');\nfunction a0_0x1781() {\n    var _0x1a68f8 = [\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'sort',\n        'forEach',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x1781 = function () {\n        return _0x1a68f8;\n    };\n    return a0_0x1781();\n}\nvar arr = input[a0_0x2251a6(0x1)]()['split']('\\x0a');\nwhile (!![]) {\n    var MTPR = arr[a0_0x2251a6(0x2)]();\n    if (MTPR == '0\\x200\\x200\\x200')\n        break;\n    MTPR = MTPR[a0_0x2251a6(0x3)]('\\x20')[a0_0x2251a6(0x4)](Number);\n    var team = [];\n    for (var i = 0x0; i < MTPR[0x1]; i++)\n        team['push']([\n            0x0,\n            0x0,\n            [\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0\n            ],\n            i\n        ]);\n    for (var i = 0x0; i < MTPR[0x3]; i++) {\n        var mtpj = arr[a0_0x2251a6(0x2)]()['split']('\\x20')[a0_0x2251a6(0x4)](Number);\n        var m = mtpj[0x0];\n        var t = mtpj[0x1] - 0x1;\n        var p = mtpj[0x2] - 0x1;\n        var j = mtpj[0x3];\n        if (j == 0x0) {\n            team[t][0x0]++;\n            team[t][0x1] += m + team[t][0x2][p] * 0x14;\n        }\n        if (j != 0x0)\n            team[t][0x2][p]++;\n    }\n    team[a0_0x2251a6(0x5)](function (a, b) {\n        if (a[0x0] == b[0x0] && a[0x1] == b[0x1])\n            return b[0x3] - a[0x3];\n        else if (a[0x0] == b[0x0])\n            return a[0x1] - b[0x1];\n        else\n            return b[0x0] - a[0x0];\n    });\n    var ans = [];\n    var same = [\n        -0x1,\n        -0x1\n    ];\n    team[a0_0x2251a6(0x6)](function (v, i) {\n        var _0x3fab4a = a0_0x4a59;\n        if (same[0x0] == v[0x0] && same[0x1] == v[0x1])\n            ans[ans['length'] - 0x1] += '=' + (v[0x3] + 0x1);\n        else {\n            ans[_0x3fab4a(0x7)](v[0x3] + 0x1);\n            same = [\n                v[0x0],\n                v[0x1]\n            ];\n        }\n    });\n    console[a0_0x2251a6(0x8)](ans[a0_0x2251a6(0x9)](','));\n}", "test_cases": [["300 10 8 5\n50 5 2 1\n70 5 2 0\n75 1 1 0\n100 3 1 0\n150 3 2 0\n240 5 5 7\n50 1 1 0\n60 2 2 0\n70 2 3 0\n90 1 3 0\n120 3 5 0\n140 4 1 0\n150 2 4 1\n180 3 5 4\n15 2 2 1\n20 2 2 1\n25 2 2 0\n60 1 1 0\n120 5 5 4\n15 5 4 1\n20 5 4 0\n40 1 1 0\n40 2 2 0\n120 2 3 4\n30 1 1 0\n40 2 1 0\n50 2 2 0\n60 1 2 0\n120 3 3 2\n0 1 1 0\n1 2 2 0\n300 5 8 0\n0 0 0 0", "3,1,5,10=9=8=7=6=4=2\n2,1,3,4,5\n1,2,3\n5=2=1,4=3\n2=1\n1,2,3\n5=4=3=2=1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var MTPR=arr.shift();\n   if(MTPR==\"0 0 0 0\")break;\n   MTPR=MTPR.split(\" \").map(Number);\n   var team=[];\n   for(var i=0;i<MTPR[1];i++)team.push([0,0,[0,0,0,0,0,0,0,0,0,0],i]);\n   for(var i=0;i<MTPR[3];i++){\n      var mtpj=arr.shift().split(\" \").map(Number);\n      var m=mtpj[0];\n      var t=mtpj[1]-1;\n      var p=mtpj[2]-1;\n      var j=mtpj[3];\n      if(j==0){\n         team[t][0]++;\n         team[t][1]+=m+team[t][2][p]*20;\n      }\n      if(j!=0)team[t][2][p]++;\n   }\n   team.sort(function(a,b){\n      if(a[0]==b[0] && a[1]==b[1])return b[3]-a[3];\n      else if(a[0]==b[0])return a[1]-b[1];\n      else return b[0]-a[0];\n   });\n   var ans=[];\n   var same=[-1,-1];\n   team.forEach(function(v,i){\n      if(same[0]==v[0] && same[1]==v[1])ans[ans.length-1]+=\"=\"+(v[3]+1);\n      else {ans.push(v[3]+1);same=[v[0],v[1]];}\n   });\n   console.log(ans.join(\",\"));\n}", "language": "JavaScript"}
{"filename": "p00769_1", "type": "JavaScript", "obfuscated": "var a0_0x49d5f7 = a0_0x20fc;\nfunction saiki(str, flag) {\n    var _0x123c10 = a0_0x20fc;\n    while (!![]) {\n        if (/\\[{2}\\d.*?\\]{2}/[_0x123c10(0x0)](str)) {\n            str = str[_0x123c10(0x1)](/\\[{2}\\d.*?\\]{2}/, function (s) {\n                var _0x2dafa0 = a0_0x20fc;\n                var d = s[_0x2dafa0(0x2)](0x2, -0x2)[_0x2dafa0(0x3)]('][')[_0x2dafa0(0x4)](Number);\n                d[_0x2dafa0(0x5)]((a, b) => a - b);\n                var sum = 0x0;\n                for (var i = 0x0; i < Math['ceil'](d[_0x2dafa0(0x6)] / 0x2); i++) {\n                    if (flag)\n                        sum += Math[_0x2dafa0(0x7)](d[i] / 0x2) + 0x1;\n                    else\n                        sum += Math[_0x2dafa0(0x7)](d[i]);\n                }\n                return '(' + sum + ')';\n            });\n        } else\n            break;\n    }\n    str = str['replace'](/\\(/g, '[');\n    str = str[_0x123c10(0x1)](/\\)/g, ']');\n    return str;\n}\nvar input = require('fs')[a0_0x49d5f7(0x8)](a0_0x49d5f7(0x9), 'utf8');\nvar arr = input[a0_0x49d5f7(0xa)]()[a0_0x49d5f7(0x3)]('\\x0a');\nfunction a0_0x20fc(UKdZaZ, key) {\n    var stringArray = a0_0x2aec();\n    a0_0x20fc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x20fc(UKdZaZ, key);\n}\nvar n = arr[a0_0x49d5f7(0xb)]() - 0x0;\narr[a0_0x49d5f7(0xc)](str => {\n    var _0x27b4d7 = a0_0x20fc;\n    str = saiki(str, !![]);\n    while (/\\[\\[/[_0x27b4d7(0x0)](str))\n        str = saiki(str, ![]);\n    console[_0x27b4d7(0xd)](str[_0x27b4d7(0x1)](/\\[|\\]/g, ''));\n});\nfunction a0_0x2aec() {\n    var _0x1d8883 = [\n        'test',\n        'replace',\n        'slice',\n        'split',\n        'map',\n        'sort',\n        'length',\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'forEach',\n        'log'\n    ];\n    a0_0x2aec = function () {\n        return _0x1d8883;\n    };\n    return a0_0x2aec();\n}", "test_cases": [["6\n[[123][4567][89]]\n[[5][3][7][3][9]]\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]][[57][95][5][69][31]][[99][59][65][73][31]]]\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n[[8231][3721][203][3271][8843]]", "107\n7\n175\n95\n21\n3599"]], "original": "function saiki(str,flag){\n   while(true){\n      if(/\\[{2}\\d.*?\\]{2}/.test(str)){\n         str=str.replace(/\\[{2}\\d.*?\\]{2}/,function(s){\n               var d =s.slice(2,-2).split(\"][\").map(Number);\n               d.sort((a,b)=> a-b);\n               var sum=0;\n               for(var i=0;i<Math.ceil(d.length/2);i++){\n                  if(flag) sum+=Math.floor(d[i]/2)+1;\n                  else sum+=Math.floor(d[i]);\n               }\n               return \"(\"+sum+\")\";\n            });\n      }else break;\n   }\n   str=str.replace(/\\(/g,\"[\");\n   str=str.replace(/\\)/g,\"]\");\n   return str;\n }\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\n\narr.forEach(str=>{\n   str=saiki(str,true);\n   while(/\\[\\[/.test(str))str=saiki(str,false);\n    console.log(str.replace(/\\[|\\]/g,\"\"));\n});\n", "language": "JavaScript"}
{"filename": "p00780_1", "type": "JavaScript", "obfuscated": "var a0_0x2eb9b7 = a0_0x2b28;\nfunction prime(max) {\n    var _0x54bd93 = a0_0x2b28;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x54bd93(0x0)](Math[_0x54bd93(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[_0x54bd93(0x2)](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0xc350);\nvar input = require('fs')[a0_0x2eb9b7(0x3)](a0_0x2eb9b7(0x4), 'utf8');\nvar Arr = input[a0_0x2eb9b7(0x5)]()[a0_0x2eb9b7(0x6)]('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var cnt = 0x0;\n    var k = p['length'] - 0x1;\n    for (var i = 0x0; i < p[a0_0x2eb9b7(0x7)]; i++) {\n        while (p[i] + p[k] > n)\n            k--;\n        if (k < i)\n            break;\n        if (p[i] + p[k] == n)\n            cnt++;\n    }\n    console[a0_0x2eb9b7(0x8)](cnt);\n}\nfunction a0_0x2b28(pSdGbN, key) {\n    var stringArray = a0_0x4ddd();\n    a0_0x2b28 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b28(pSdGbN, key);\n}\nfunction a0_0x4ddd() {\n    var _0x268905 = [\n        'floor',\n        'sqrt',\n        'push',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'length',\n        'log'\n    ];\n    a0_0x4ddd = function () {\n        return _0x268905;\n    };\n    return a0_0x4ddd();\n}", "test_cases": [["6\n10\n12\n0", "1\n2\n1"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(50000);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var cnt=0;\n   var k=p.length-1;\n   for(var i=0;i<p.length;i++){\n      while(p[i]+p[k]>n)k--;\n      if(k<i)break;\n      if(p[i]+p[k]==n)cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00789_1", "type": "JavaScript", "obfuscated": "var a0_0x568526 = a0_0x2a8c;\nvar input = require('fs')[a0_0x568526(0x0)](a0_0x568526(0x1), a0_0x568526(0x2));\nvar arr = input[a0_0x568526(0x3)]()['split']('\\x0a')[a0_0x568526(0x4)](Number);\nwhile (!![]) {\n    var n = arr[a0_0x568526(0x5)]();\n    if (n == 0x0)\n        break;\n    var coin = [''];\n    for (var i = 0x1; i <= 0x11; i++)\n        coin[a0_0x568526(0x6)](i * i);\n    var dp = [];\n    for (var i = 0x0; i <= 0x11; i++) {\n        dp[i] = [];\n        for (var j = 0x0; j <= n; j++) {\n            dp[i][j] = 0x0;\n        }\n    }\n    dp[0x0][0x0] = 0x1;\n    for (var i = 0x1; i <= 0x11; i++) {\n        for (var j = 0x0; j <= n; j++) {\n            var k = 0x0;\n            while (coin[i] * k + j <= n) {\n                dp[i][coin[i] * k + j] += dp[i - 0x1][j];\n                k++;\n            }\n        }\n    }\n    console[a0_0x568526(0x7)](dp[0x11][n]);\n}\nfunction a0_0x2a8c(MBwJUh, key) {\n    var stringArray = a0_0x5904();\n    a0_0x2a8c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2a8c(MBwJUh, key);\n}\nfunction a0_0x5904() {\n    var _0x71fd2d = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'shift',\n        'push',\n        'log'\n    ];\n    a0_0x5904 = function () {\n        return _0x71fd2d;\n    };\n    return a0_0x5904();\n}", "test_cases": [["2\n10\n30\n0", "1\n4\n27"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   var coin=[\"\"];\n   for(var i=1;i<=17;i++)coin.push(i*i);\n   var dp=[];\n   for(var i=0;i<=17;i++){\n      dp[i]=[];\n      for(var j=0;j<=n;j++){\n         dp[i][j]=0;\n      }\n   }\n   dp[0][0]=1;\n   for(var i=1;i<=17;i++){\n      for(var j=0;j<=n;j++){\n        var k=0;\n         while(coin[i]*k+j<=n){\n            dp[i][coin[i]*k+j]+=dp[i-1][j];\n            k++;\n         }\n      }\n   }\n   console.log(dp[17][n]);\n}", "language": "JavaScript"}
{"filename": "p00803_1", "type": "JavaScript", "obfuscated": "var a0_0x516ef2 = a0_0x1ded;\nvar input = require('fs')[a0_0x516ef2(0x0)](a0_0x516ef2(0x1), 'utf8');\nfunction a0_0x1ded(cFTAcU, key) {\n    var stringArray = a0_0x3764();\n    a0_0x1ded = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ded(cFTAcU, key);\n}\nvar arr = input[a0_0x516ef2(0x2)]()[a0_0x516ef2(0x3)]('\\x0a')[a0_0x516ef2(0x4)](Number);\nfunction a0_0x3764() {\n    var _0x5e46e2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map'\n    ];\n    a0_0x3764 = function () {\n        return _0x5e46e2;\n    };\n    return a0_0x3764();\n}\nwhile (!![]) {\n    var n = arr['shift']();\n    if (n == 0x0)\n        break;\n    var max = 0x0;\n    for (var i = 0x0; i <= 0x36; i++) {\n        for (var j = 0x0; j <= 0x60; j++) {\n            var sum = i * i * i + j * (j + 0x1) * (j + 0x2) / 0x6;\n            if (n >= sum)\n                max = Math['max'](max, sum);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["100\n64\n50\n20\n151200\n0", "99\n64\n47\n20\n151200"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   var max=0;\n   for(var i=0;i<=54;i++){\n      for(var j=0;j<=96;j++){\n         var sum=i*i*i+(j*(j+1)*(j+2))/6;\n         if(n>=sum)max=Math.max(max,sum);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00811_1", "type": "JavaScript", "obfuscated": "var a0_0x39ad41 = a0_0x16e3;\nfunction a0_0x16e3(OAeMmx, key) {\n    var stringArray = a0_0x406d();\n    a0_0x16e3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16e3(OAeMmx, key);\n}\nfunction prime(max) {\n    var _0x5f007c = a0_0x16e3;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math[_0x5f007c(0x0)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result[_0x5f007c(0x1)](arr[i]);\n    }\n    return result;\n}\nvar PRIME = prime(0x186a0);\nvar input = require('fs')[a0_0x39ad41(0x2)]('/dev/stdin', a0_0x39ad41(0x3));\nvar arr = input[a0_0x39ad41(0x4)]()['split']('\\x0a');\narr[a0_0x39ad41(0x5)](function (v) {\n    var _0x285b1f = a0_0x16e3;\n    if (v == _0x285b1f(0x6))\n        return !![];\n    var mab = v[_0x285b1f(0x7)]('\\x20')[_0x285b1f(0x8)](Number);\n    var m = mab[0x0];\n    var a = mab[0x1];\n    var b = mab[0x2];\n    var ans = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (var p = 0x0; p < PRIME['length']; p++) {\n        for (var q = p; q < PRIME[_0x285b1f(0x9)]; q++) {\n            var pq = PRIME[p] * PRIME[q];\n            if (pq > m)\n                break;\n            if (PRIME[q] * a <= PRIME[p] * b && ans[0x2] < pq)\n                ans = [\n                    PRIME[p],\n                    PRIME[q],\n                    pq\n                ];\n        }\n    }\n    console[_0x285b1f(0xa)](ans[0x0] + '\\x20' + ans[0x1]);\n});\nfunction a0_0x406d() {\n    var _0xb885e7 = [\n        'sqrt',\n        'push',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'some',\n        '0\\x200\\x200',\n        'split',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x406d = function () {\n        return _0xb885e7;\n    };\n    return a0_0x406d();\n}", "test_cases": [["5 1 2\n99999 999 999\n1680 5 16\n1970 1 1\n2002 4 11\n0 0 0", "2 2\n313 313\n23 73\n43 43\n37 53"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar PRIME=prime(100000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.some(function(v){\n   if(v==\"0 0 0\")return true;\n   var mab=v.split(\" \").map(Number);\n   var m=mab[0];\n   var a=mab[1];\n   var b=mab[2];\n   var ans=[0,0,0];\n   for(var p=0;p<PRIME.length;p++){\n      for(var q=p;q<PRIME.length;q++){\n         var pq=PRIME[p]*PRIME[q];\n         if(pq>m)break;\n         if(PRIME[q]*a <= PRIME[p]*b && ans[2]<pq)ans=[PRIME[p],PRIME[q],pq]\n      }\n   }\n   console.log(ans[0]+\" \"+ans[1]);\n});", "language": "JavaScript"}
{"filename": "p00819_1", "type": "JavaScript", "obfuscated": "var a0_0x39b6fe = a0_0x3f9e;\nvar input = require('fs')[a0_0x39b6fe(0x0)](a0_0x39b6fe(0x1), 'utf8');\nfunction a0_0x228b() {\n    var _0x1ea282 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'reverse',\n        'shift',\n        'forEach',\n        'slice',\n        'join',\n        'replace'\n    ];\n    a0_0x228b = function () {\n        return _0x1ea282;\n    };\n    return a0_0x228b();\n}\nvar Arr = input[a0_0x39b6fe(0x2)]()[a0_0x39b6fe(0x3)]('\\x0a');\nfunction a0_0x3f9e(CwQyJv, key) {\n    var stringArray = a0_0x228b();\n    a0_0x3f9e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f9e(CwQyJv, key);\n}\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr['shift']()[a0_0x39b6fe(0x3)]('')[a0_0x39b6fe(0x4)]();\n    var str = Arr[a0_0x39b6fe(0x5)]();\n    var x = str['length'];\n    arr[a0_0x39b6fe(0x6)](function (v) {\n        var _0x12065d = a0_0x3f9e;\n        if (v == 'J')\n            str = str[_0x12065d(0x7)](-0x1) + str[_0x12065d(0x7)](0x0, -0x1);\n        else if (v == 'C')\n            str = str[_0x12065d(0x7)](0x1) + str[_0x12065d(0x7)](0x0, 0x1);\n        else if (v == 'E' && x % 0x2 == 0x0)\n            str = str[_0x12065d(0x7)](x / 0x2, x) + str[_0x12065d(0x7)](0x0, x / 0x2);\n        else if (v == 'E' && x % 0x2 == 0x1)\n            str = str['slice'](~~(x / 0x2) + 0x1, x) + str[~~(x / 0x2)] + str['slice'](0x0, ~~(x / 0x2));\n        else if (v == 'A')\n            str = str[_0x12065d(0x3)]('')['reverse']()[_0x12065d(0x8)]('');\n        else if (v == 'P')\n            str = str['replace'](/\\d/g, function (s) {\n                return s == '0' ? '9' : s - 0x0 - 0x1;\n            });\n        else if (v == 'M')\n            str = str[_0x12065d(0x9)](/\\d/g, function (s) {\n                return s == '9' ? '0' : s - 0x0 + 0x1;\n            });\n    });\n    console['log'](str);\n}", "test_cases": [["5\nAJMP\naB23d\nE\n86AE\nAM\n6\nJPEM\nWaEaETC302Q\nCP\nrTurnAGundam1isdefferentf", "32Bad\nAE86\n7\nEC302QTWaEa\nTurnAGundam0isdefferentfr"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=Arr.shift().split(\"\").reverse();\n   var str=Arr.shift();\n   var x=str.length;\n   arr.forEach(function(v){\n      if(v==\"J\")str=str.slice(-1)+str.slice(0,-1);\n      else if(v==\"C\")str=str.slice(1)+str.slice(0,1);\n      else if(v==\"E\" && x%2==0)str=str.slice(x/2,x)+str.slice(0,x/2);\n      else if(v==\"E\" && x%2==1)str=str.slice(~~(x/2)+1,x)+str[~~(x/2)]+str.slice(0,~~(x/2));\n      else if(v==\"A\")str=str.split(\"\").reverse().join(\"\");\n      else if(v==\"P\")str=str.replace(/\\d/g,function(s){return (s==\"0\")?\"9\":(s-0)-1;});\n      else if(v==\"M\")str=str.replace(/\\d/g,function(s){return (s==\"9\")?\"0\":(s-0)+1;});\n   });\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00820_1", "type": "JavaScript", "obfuscated": "var a0_0x5f59a3 = a0_0x3c8c;\nfunction a0_0x2258() {\n    var _0x4d95b1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'some',\n        'log'\n    ];\n    a0_0x2258 = function () {\n        return _0x4d95b1;\n    };\n    return a0_0x2258();\n}\nvar input = require('fs')[a0_0x5f59a3(0x0)](a0_0x5f59a3(0x1), a0_0x5f59a3(0x2));\nvar arr = input[a0_0x5f59a3(0x3)]()[a0_0x5f59a3(0x4)]('\\x0a')[a0_0x5f59a3(0x5)](Number);\nfunction a0_0x3c8c(XSFSva, key) {\n    var stringArray = a0_0x2258();\n    a0_0x3c8c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c8c(XSFSva, key);\n}\narr[a0_0x5f59a3(0x6)](function (v) {\n    var _0x1cb1e3 = a0_0x3c8c;\n    if (v == 0x0)\n        return !![];\n    var cnt = 0x0;\n    for (var a = 0x1; a <= 0xb5; a++) {\n        var A = a * a;\n        if (v < A)\n            break;\n        if (A == v)\n            cnt++;\n        for (var b = a; b <= 0xb5; b++) {\n            var B = A + b * b;\n            if (v < B)\n                break;\n            if (B == v)\n                cnt++;\n            for (var c = b; c <= 0xb5; c++) {\n                var C = B + c * c;\n                if (v < C)\n                    break;\n                if (C == v)\n                    cnt++;\n                for (var d = c; d <= 0xb5; d++) {\n                    var D = C + d * d;\n                    if (v < D)\n                        break;\n                    if (D == v)\n                        cnt++;\n                }\n            }\n        }\n    }\n    console[_0x1cb1e3(0x7)](cnt);\n});", "test_cases": [["1\n25\n2003\n211\n20007\n0", "1\n3\n48\n7\n738"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\narr.some(function(v){\n   if(v==0)return true;\n   var cnt=0;\n   for(var a=1;a<=181;a++){\n      var A=a*a;\n      if(v<A)break;\n      if(A==v)cnt++;\n      for(var b=a;b<=181;b++){\n         var B=A+b*b;\n         if(v<B)break;\n         if(B==v)cnt++;\n         for(var c=b;c<=181;c++){\n            var C=B+c*c;\n            if(v<C)break;\n            if(C==v)cnt++;\n            for(var d=c;d<=181;d++){\n               var D=C+d*d;\n               if(v<D)break;\n               if(D==v)cnt++;\n   }}}}\n   console.log(cnt);\n});", "language": "JavaScript"}
{"filename": "p00836_1", "type": "JavaScript", "obfuscated": "var a0_0x287ce = a0_0x2d2d;\nfunction a0_0x2d2d(DzXnCj, key) {\n    var stringArray = a0_0x345c();\n    a0_0x2d2d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2d2d(DzXnCj, key);\n}\nfunction prime(max) {\n    var _0x1f5515 = a0_0x2d2d;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math[_0x1f5515(0x0)](Math[_0x1f5515(0x1)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x2710);\nvar input = require('fs')[a0_0x287ce(0x2)](a0_0x287ce(0x3), a0_0x287ce(0x4));\nvar arr = input['trim']()['split']('\\x0a')[a0_0x287ce(0x5)](Number);\nvar cnt = [];\nfor (var i = 0x0; i <= 0x2710; i++)\n    cnt[i] = 0x0;\nfunction a0_0x345c() {\n    var _0x20f44f = [\n        'floor',\n        'sqrt',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'some',\n        'log'\n    ];\n    a0_0x345c = function () {\n        return _0x20f44f;\n    };\n    return a0_0x345c();\n}\np['forEach'](function (v, index) {\n    cnt[v]++;\n    for (var i = index + 0x1; i < p['length']; i++) {\n        v += p[i];\n        if (v > 0x2710)\n            break;\n        cnt[v]++;\n    }\n});\narr[a0_0x287ce(0x6)](function (v) {\n    var _0x532fce = a0_0x2d2d;\n    if (v == 0x0)\n        return !![];\n    console[_0x532fce(0x7)](cnt[v]);\n});", "test_cases": [["2\n3\n17\n41\n20\n666\n12\n53\n0", "1\n1\n2\n3\n0\n0\n1\n2"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(10000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar cnt=[];\nfor(var i=0;i<=10000;i++)cnt[i]=0;\np.forEach(function(v,index){\n   cnt[v]++;\n   for(var i=index+1;i<p.length;i++){\n      v+=p[i];\n      if(v>10000)break;\n      cnt[v]++;\n   }\n});\narr.some(function(v){\n   if(v==0)return true;\n   console.log(cnt[v]);\n});", "language": "JavaScript"}
{"filename": "p00855_1", "type": "JavaScript", "obfuscated": "var a0_0x5d420b = a0_0x2bbf;\nfunction prime(max) {\n    var _0x88c43c = a0_0x2bbf;\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math[_0x88c43c(0x0)](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = i + i; j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (arr[i] !== ![])\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x13d4fd);\nfunction a0_0x3626() {\n    var _0x4641b9 = [\n        'sqrt',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x3626 = function () {\n        return _0x4641b9;\n    };\n    return a0_0x3626();\n}\nvar input = require('fs')[a0_0x5d420b(0x1)](a0_0x5d420b(0x2), a0_0x5d420b(0x3));\nvar Arr = input['trim']()[a0_0x5d420b(0x4)]('\\x0a')[a0_0x5d420b(0x5)](Number);\nfunction a0_0x2bbf(FJjiGY, key) {\n    var stringArray = a0_0x3626();\n    a0_0x2bbf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2bbf(FJjiGY, key);\n}\nfor (var i = 0x0; i < Arr[a0_0x5d420b(0x6)]; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    for (var j = 0x0; j < p[a0_0x5d420b(0x6)]; j++) {\n        if (p[j] == a) {\n            console[a0_0x5d420b(0x7)](0x0);\n            break;\n        }\n        if (p[j] > a) {\n            console['log'](p[j] - p[j - 0x1]);\n            break;\n        }\n    }\n}", "test_cases": [["10\n11\n27\n2\n492170\n0", "4\n0\n6\n0\n114"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(1299709);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   for(var j=0;j<p.length;j++){\n      if(p[j]==a){console.log(0);break;}\n      if(p[j]>a){console.log(p[j]-p[j-1]);break;}\n   }\n}", "language": "JavaScript"}
{"filename": "p00874_1", "type": "JavaScript", "obfuscated": "var a0_0x1a2af0 = a0_0x32c8;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x1a2af0(0x0));\nfunction a0_0x32c8(EVRRUU, key) {\n    var stringArray = a0_0x3aa4();\n    a0_0x32c8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x32c8(EVRRUU, key);\n}\nvar arr = input[a0_0x1a2af0(0x1)]()[a0_0x1a2af0(0x2)]('\\x0a');\nwhile (!![]) {\n    var wd = arr[a0_0x1a2af0(0x3)]();\n    if (wd == a0_0x1a2af0(0x4))\n        break;\n    var W = arr[a0_0x1a2af0(0x3)]()[a0_0x1a2af0(0x2)]('\\x20')[a0_0x1a2af0(0x5)](Number);\n    var D = arr[a0_0x1a2af0(0x3)]()[a0_0x1a2af0(0x2)]('\\x20')['map'](Number);\n    var sum = W['reduce'](function (a, b) {\n        return a + b;\n    });\n    D[a0_0x1a2af0(0x6)](function (v) {\n        var index = W['indexOf'](v);\n        if (index != -0x1)\n            W[index] = '';\n        else\n            sum += v;\n    });\n    console['log'](sum);\n}\nfunction a0_0x3aa4() {\n    var _0x2ef16e = [\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'forEach'\n    ];\n    a0_0x3aa4 = function () {\n        return _0x2ef16e;\n    };\n    return a0_0x3aa4();\n}", "test_cases": [["5 5\n1 2 3 4 5\n1 2 3 4 5\n5 5\n2 5 4 1 3\n4 1 5 3 2\n5 5\n1 2 3 4 5\n3 3 3 4 5\n3 3\n7 7 7\n7 7 7\n3 3\n4 4 4\n4 3 4\n4 3\n4 2 2 4\n4 2 1\n4 4\n2 8 8 8\n2 3 8 3\n10 10\n9 9 9 9 9 9 9 9 9 9\n9 9 9 9 9 9 9 9 9 9\n10 9\n20 1 20 20 20 20 20 18 20 20\n20 20 20 20 7 20 20 20 20\n0 0", "15\n15\n21\n21\n15\n13\n32\n90\n186"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wd=arr.shift();\n   if(wd==\"0 0\")break;\n   var W=arr.shift().split(\" \").map(Number);\n   var D=arr.shift().split(\" \").map(Number);\n   var sum=W.reduce(function(a,b){return a+b;});\n   D.forEach(function(v){\n      var index=W.indexOf(v);\n      if(index!=-1)W[index]=\"\";\n      else sum+=v;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00875_1", "type": "JavaScript", "obfuscated": "function a0_0x1d87() {\n    var _0xc4c0ba = [\n        'length',\n        'log',\n        'includes',\n        'replace',\n        'trim',\n        'shift',\n        'slice',\n        'split'\n    ];\n    a0_0x1d87 = function () {\n        return _0xc4c0ba;\n    };\n    return a0_0x1d87();\n}\nvar a0_0x3a8d59 = a0_0x22ff;\nfunction a0_0x22ff(sEOeWI, key) {\n    var stringArray = a0_0x1d87();\n    a0_0x22ff = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x22ff(sEOeWI, key);\n}\nfunction BFS() {\n    var _0x42d4d4 = a0_0x22ff;\n    var bfs = [[\n            s0,\n            0x0\n        ]];\n    while (!![]) {\n        if (bfs[_0x42d4d4(0x0)] == 0x0)\n            break;\n        var [leaf, cnt] = bfs['shift']();\n        if (leaf == s1) {\n            flag = !![];\n            console[_0x42d4d4(0x1)](cnt);\n            break;\n        }\n        ab['forEach'](v => {\n            var _0x4800ce = a0_0x22ff;\n            if (leaf[_0x4800ce(0x2)](v[0x0])) {\n                var re = new RegExp(v[0x0], 'g');\n                var str = leaf[_0x4800ce(0x3)](re, v[0x1]);\n                if (str['length'] <= 0xa)\n                    bfs['push']([\n                        str,\n                        cnt + 0x1\n                    ]);\n            }\n        });\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input[a0_0x3a8d59(0x4)]()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x3a8d59(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var ab = arr[a0_0x3a8d59(0x6)](0x0, n)['map'](v => v[a0_0x3a8d59(0x7)]('\\x20'));\n    ;\n    arr = arr['slice'](n);\n    var s0 = arr[a0_0x3a8d59(0x5)]();\n    var s1 = arr[a0_0x3a8d59(0x5)]();\n    var flag = ![];\n    BFS();\n    if (!flag)\n        console[a0_0x3a8d59(0x1)](-0x1);\n}", "test_cases": [["2\na bb\nb aa\na\nbbbbbbbb\n1\na aa\na\naaaaa\n3\nab aab\nabc aadc\nad dee\nabc\ndeeeeeeeec\n10\na abc\nb bai\nc acf\nd bed\ne abh\nf fag\ng abe\nh bag\ni aaj\nj bbb\na\nabacfaabe\n0", "3\n-1\n7\n4"]], "original": "function BFS(){\n   var bfs=[[s0,0]];\n   while(true){\n      if(bfs.length==0)break;\n      var [leaf,cnt]=bfs.shift();\n      if(leaf==s1){\n         flag=true;\n         console.log(cnt);\n         break;\n      }\n      ab.forEach(v=>{\n         if(leaf.includes(v[0])){\n            var re = new RegExp(v[0], \"g\");\n            var str = leaf.replace(re,v[1]);\n            if(str.length<=10)bfs.push([str,cnt+1]);\n         }\n      });\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ab=arr.slice(0,n).map(v=> v.split(\" \"));;\n   arr=arr.slice(n);\n   var s0=arr.shift();\n   var s1=arr.shift();\n   var flag=false;\n   BFS();\n   if(!flag)console.log(-1);\n}\n", "language": "JavaScript"}
{"filename": "p00914_1", "type": "JavaScript", "obfuscated": "var a0_0x3b4622 = a0_0x440f;\nfunction kumiawase(start, end, len) {\n    var ans = [];\n    var loop = function (a, arr) {\n        var _0x43fce6 = a0_0x440f;\n        if (arr['length'] == len)\n            ans['push'](arr);\n        else {\n            if (_0x43fce6(0x0) !== _0x43fce6(0x0)) {\n                return a + b;\n            } else {\n                for (var i = a; i <= end; i++)\n                    loop(i + 0x1, arr[_0x43fce6(0x1)](i));\n            }\n        }\n    };\n    loop(start, []);\n    return ans;\n}\nvar input = require('fs')[a0_0x3b4622(0x2)](a0_0x3b4622(0x3), 'utf8');\nvar arr = input[a0_0x3b4622(0x4)]()[a0_0x3b4622(0x5)]('\\x0a');\nfunction a0_0x440f(dwawIq, key) {\n    var stringArray = a0_0x1d93();\n    a0_0x440f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x440f(dwawIq, key);\n}\narr[a0_0x3b4622(0x6)](function (v, i) {\n    var _0x52e4a0 = a0_0x440f;\n    if (v == _0x52e4a0(0x7))\n        return !![];\n    var nks = v['split']('\\x20')['map'](Number);\n    var ary = kumiawase(0x1, nks[0x0], nks[0x1]);\n    var cnt = 0x0;\n    ary['forEach'](function (v) {\n        var _0x511698 = a0_0x440f;\n        if (_0x511698(0x8) === 'WAlNw') {\n            if (arr[_0x511698(0x9)] == len)\n                ans[_0x511698(0xa)](arr);\n            else {\n                for (var i = a; i <= end; i++)\n                    loop(i + 0x1, arr[_0x511698(0x1)](i));\n            }\n        } else {\n            var sum = v[_0x511698(0xb)](function (a, b) {\n                return a + b;\n            });\n            if (sum == nks[0x2])\n                cnt++;\n        }\n    });\n    console[_0x52e4a0(0xc)](cnt);\n});\nfunction a0_0x1d93() {\n    var _0x21e789 = [\n        'vDFwK',\n        'concat',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'some',\n        '0\\x200\\x200',\n        'xwqHD',\n        'length',\n        'push',\n        'reduce',\n        'log'\n    ];\n    a0_0x1d93 = function () {\n        return _0x21e789;\n    };\n    return a0_0x1d93();\n}", "test_cases": [["9 3 23\n9 3 22\n10 3 28\n16 10 107\n20 8 102\n20 10 105\n20 10 155\n3 4 3\n4 2 11\n0 0 0", "1\n2\n0\n20\n1542\n5448\n1\n0\n0"]], "original": "function kumiawase(start,end,len){\n   var ans=[];\n   var loop=function(a,arr){\n      if(arr.length==len)ans.push(arr);\n      else{\n         for(var i=a;i<=end;i++)loop(i+1,arr.concat(i));\n      }\n   }\n   loop(start,[]);\n   return ans;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.some(function(v,i){\n   if(v==\"0 0 0\")return true;\n   var nks=v.split(\" \").map(Number);\n   var ary=kumiawase(1,nks[0],nks[1]);\n   var cnt=0;\n   ary.forEach(function(v){\n      var sum=v.reduce(function(a,b){return a+b;});\n      if(sum==nks[2])cnt++;\n   });\n   console.log(cnt);\n});", "language": "JavaScript"}
{"filename": "p00926_1", "type": "JavaScript", "obfuscated": "var a0_0x52dcf9 = a0_0x1f20;\nvar n, m;\nvar x = [];\nfunction main() {\n    n = scan();\n    m = scan();\n    rep(n, function (i) {\n        x[i] = 0x0;\n    });\n    rep(m, function (i) {\n        var c = scan();\n        var d = scan();\n        x[c] += 0x1;\n        x[d] -= 0x1;\n    });\n    rep(0x1, n, function (i) {\n        x[i] += x[i - 0x1];\n    });\n    var c = 0x0;\n    rep(n, function (i) {\n        var _0x4fefa5 = a0_0x1f20;\n        if (_0x4fefa5(0x0) === _0x4fefa5(0x0)) {\n            if (x[i] > 0x0) {\n                ++c;\n            }\n        } else {\n            return +input[_0x4fefa5(0x1)]();\n        }\n    });\n    print(c * 0x2 + n + 0x1);\n}\nfunction a0_0x5822() {\n    var _0x35c55c = [\n        'YAOqC',\n        'pop',\n        'log',\n        'stdin',\n        'setEncoding',\n        'utf8',\n        'data',\n        'end',\n        'trim',\n        'reverse'\n    ];\n    a0_0x5822 = function () {\n        return _0x35c55c;\n    };\n    return a0_0x5822();\n}\nfunction rep(a, b, c) {\n    if (c === undefined) {\n        c = b;\n        b = a;\n        a = 0x0;\n    }\n    for (var i = a; i < b; ++i) {\n        if (c(i) === ![]) {\n            break;\n        }\n    }\n}\nfunction a0_0x1f20(rCoJaQ, key) {\n    var stringArray = a0_0x5822();\n    a0_0x1f20 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1f20(rCoJaQ, key);\n}\nvar input = '';\nfunction scan() {\n    var _0x176274 = a0_0x1f20;\n    return +input[_0x176274(0x1)]();\n}\nfunction scan_string() {\n    var _0xedc8e2 = a0_0x1f20;\n    return input[_0xedc8e2(0x1)]();\n}\nfunction print(val) {\n    var _0x11a189 = a0_0x1f20;\n    console[_0x11a189(0x2)](val);\n}\nprocess[a0_0x52dcf9(0x3)]['resume']();\nprocess[a0_0x52dcf9(0x3)][a0_0x52dcf9(0x4)](a0_0x52dcf9(0x5));\nprocess['stdin']['on'](a0_0x52dcf9(0x6), function (chunk) {\n    input += chunk;\n});\nprocess[a0_0x52dcf9(0x3)]['on'](a0_0x52dcf9(0x7), function () {\n    var _0x3602ab = a0_0x1f20;\n    input = input[_0x3602ab(0x8)]()['split'](/\\s+/)[_0x3602ab(0x9)]();\n    main();\n});", "test_cases": [["10 3\n3 7\n8 9\n2 5", "23"], ["10 3\n8 9\n6 7\n2 4", "19"], ["10 0", "11"], ["10 6\n6 7\n4 5\n2 5\n6 9\n3 5\n6 8", "23"], ["1000 8\n3 4\n6 1000\n5 1000\n7 1000\n8 1000\n4 1000\n9 1000\n1 2", "2997"]], "original": "var n, m;\nvar x = [];\n\nfunction main(){\n\tn = scan();\n\tm = scan();\n\trep(n, function(i){\n\t\tx[i] = 0;\n\t});\n\trep(m, function(i){\n\t\tvar c = scan();\n\t\tvar d = scan();\n\t\tx[c] += 1;\n\t\tx[d] -= 1;\n\t});\n\trep(1, n, function(i){\n\t\tx[i] += x[i - 1];\n\t});\n\tvar c = 0;\n\trep(n, function(i){\n\t\tif(x[i] > 0){\n\t\t\t++c;\n\t\t}\n\t});\n\tprint(c * 2 + n + 1);\n}\n\nfunction rep(a, b, c){\n\tif(c === undefined){\n\t\tc = b;\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tfor(var i = a; i < b; ++i){\n\t\tif(c(i) === false){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvar input = '';\n\nfunction scan(){\n\treturn +input.pop();\n}\nfunction scan_string(){\n\treturn input.pop();\n} \nfunction print(val){\n\tconsole.log(val);\n}\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.trim().split(/\\s+/).reverse();\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00935_1", "type": "JavaScript", "obfuscated": "var a0_0x573528 = a0_0x21e6;\nfunction a0_0x1775() {\n    var _0x2ecc7a = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'replace',\n        'split',\n        'shift',\n        'log'\n    ];\n    a0_0x1775 = function () {\n        return _0x2ecc7a;\n    };\n    return a0_0x1775();\n}\nvar input = require('fs')['readFileSync'](a0_0x573528(0x0), a0_0x573528(0x1));\nvar arr = input[a0_0x573528(0x2)]()[a0_0x573528(0x3)](/\\n/g, '\\x20')[a0_0x573528(0x4)]('\\x20');\nvar n = arr[a0_0x573528(0x5)]() - 0x0;\nvar a = [];\nfunction a0_0x21e6(AXYLTI, key) {\n    var stringArray = a0_0x1775();\n    a0_0x21e6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x21e6(AXYLTI, key);\n}\nfor (var i = 0x0; i < 0x2710; i++)\n    a[i] = ![];\nfor (var i = 0x0; i < n; i++) {\n    a[arr[i] - 0x0] = !![];\n    if (i + 0x1 < n)\n        a[arr[i] + arr[i + 0x1] - 0x0] = !![];\n    if (i + 0x2 < n)\n        a[arr[i] + arr[i + 0x1] + arr[i + 0x2] - 0x0] = !![];\n    if (i + 0x3 < n)\n        a[arr[i] + arr[i + 0x1] + arr[i + 0x2] + arr[i + 0x3] - 0x0] = !![];\n}\nfor (var i = 0x0; i < 0x2710; i++) {\n    if (a[i] == ![]) {\n        console[a0_0x573528(0x6)](i);\n        break;\n    }\n}", "test_cases": [["3\n3 0 1", "2"], ["11\n9 8 7 6 5 4 3 2 1 1 0", "12"], ["10\n9 0 8 7 6 5 4 3 2 1", "10"], ["100\n3 6 7 5 3 5 6 2 9 1 2 7 0 9 3 6 0 6 2\n6 1 8 7 9 2 0 2 3 7 5 9 2 2 8 9 7 3 6\n1 2 9 3 1 9 4 7 8 4 5 0 3 6 1 0 6 3 2\n0 6 1 5 5 4 7 6 5 6 9 3 7 4 5 2 5 4 7\n4 4 3 0 7 8 6 8 8 4 3 1 4 9 2 0 6 8 9\n2 6 6 4 9", "11"], ["100\n7 2 7 5 4 7 4 4 5 8 1 5 7 7 0 5 6 2 0\n4 3 4 1 1 0 6 1 6 6 2 1 7 9 2 4 6 9 3\n6 2 8 0 5 9 7 6 3 1 4 9 1 9 1 2 6 4 2\n9 7 8 3 9 5 5 2 3 3 8 4 0 6 8 2 5 5 0\n6 7 1 8 5 1 4 8 1 3 7 3 3 5 3 0 6 0 6\n5 3 2 2 2", "86"], ["1\n3", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().replace(/\\n/g, \" \").split(\" \");\nvar n = arr.shift() - 0;\nvar a = [];\nfor (var i = 0; i < 10000; i++) a[i] = false;\nfor (var i = 0; i < n; i++) {\n    a[arr[i] - 0] = true;\n    if (i + 1 < n) a[(arr[i] + arr[i + 1]) - 0] = true;\n    if (i + 2 < n) a[(arr[i] + arr[i + 1] + arr[i + 2]) - 0] = true;\n    if (i + 3 < n) a[(arr[i] + arr[i + 1] + arr[i + 2] + arr[i + 3]) - 0] = true;\n}\nfor (var i = 0; i < 10000; i++) {\n    if (a[i] == false) {\n        console.log(i);\n        break;\n    }\n}", "language": "JavaScript"}
{"filename": "p01048_1", "type": "JavaScript", "obfuscated": "function a0_0x2185(Xfwmiw, key) {\n    var stringArray = a0_0x37a5();\n    a0_0x2185 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2185(Xfwmiw, key);\n}\nvar a0_0x383000 = a0_0x2185;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x383000(0x0));\nvar n = input['trim']() - 0x0;\nvar ans = [\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0\n];\nfunction a0_0x37a5() {\n    var _0x5880d2 = [\n        'utf8',\n        'includes'\n    ];\n    a0_0x37a5 = function () {\n        return _0x5880d2;\n    };\n    return a0_0x37a5();\n}\nvar i = 0x0;\nwhile (!![]) {\n    i++;\n    var cnt = 0x0;\n    for (var j = i; j >= 0x1; j--) {\n        if (i % j == 0x0)\n            cnt++;\n    }\n    if (ans[cnt - 0x1] == 0x0) {\n        ans[cnt - 0x1] = i;\n        if (!ans[a0_0x383000(0x1)](0x0))\n            break;\n    }\n}\nconsole['log'](ans[n - 0x1]);", "test_cases": [["1", "1"], ["2", "2"], ["3", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar n = input.trim() - 0;\nvar ans = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nvar i = 0;\nwhile (true) {\n   i++;\n   var cnt = 0;\n   for (var j = i; j >= 1; j--) {\n      if (i % j == 0) cnt++;\n   }\n   if (ans[cnt - 1] == 0) {\n      ans[cnt - 1] = i;\n      if (!ans.includes(0)) break;\n   }\n}\nconsole.log(ans[n-1]);\n", "language": "JavaScript"}
{"filename": "p01050_1", "type": "JavaScript", "obfuscated": "var a0_0x31efea = a0_0x3aab;\nvar input = require('fs')[a0_0x31efea(0x0)](a0_0x31efea(0x1), 'utf8');\nvar s = input[a0_0x31efea(0x2)]();\nvar len = s[a0_0x31efea(0x3)];\nfunction a0_0x429d() {\n    var _0x2c40a4 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'length',\n        '0123456789AabcdefghijklmnopqrstuvwxyzA',\n        'replace',\n        'log'\n    ];\n    a0_0x429d = function () {\n        return _0x2c40a4;\n    };\n    return a0_0x429d();\n}\nvar abc = a0_0x31efea(0x4)['split']('');\nvar sum = 0x0;\nwhile (!![]) {\n    if (s == '')\n        break;\n    var cnt = 0x0;\n    var flag = ![];\n    abc['forEach'](v => {\n        var _0x3b9c9d = a0_0x3aab;\n        var re = new RegExp(v);\n        if (re['test'](s)) {\n            if (flag)\n                cnt++;\n            flag = !![];\n            s = s[_0x3b9c9d(0x5)](re, '');\n        } else {\n            if (cnt >= 0x3)\n                sum += cnt - 0x2;\n            cnt = 0x0;\n            flag = ![];\n        }\n    });\n}\nfunction a0_0x3aab(AgWcYT, key) {\n    var stringArray = a0_0x429d();\n    a0_0x3aab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3aab(AgWcYT, key);\n}\nconsole[a0_0x31efea(0x6)](len - sum);", "test_cases": [["0ig3he12fz99", "9"], ["1122334455", "6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim();\nvar len=s.length;\nvar abc=\"0123456789AabcdefghijklmnopqrstuvwxyzA\".split(\"\");\nvar sum=0;\nwhile(true){\n   if(s==\"\")break;\n   var cnt=0;\n   var flag=false;\n   abc.forEach(v=>{\n      var re = new RegExp( v );\n      if(re.test(s)){\n         if(flag)cnt++;\n         flag=true;\n         s=s.replace(re,\"\");\n      }else{\n         if(cnt>=3)sum+=cnt-2;\n         cnt=0;\n         flag=false;\n      }\n   });\n}\nconsole.log(len-sum);\n", "language": "JavaScript"}
{"filename": "p01086_1", "type": "JavaScript", "obfuscated": "function a0_0x39c8() {\n    var _0x10f6b6 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'length'\n    ];\n    a0_0x39c8 = function () {\n        return _0x10f6b6;\n    };\n    return a0_0x39c8();\n}\nfunction a0_0x1199(mdYXJu, key) {\n    var stringArray = a0_0x39c8();\n    a0_0x1199 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1199(mdYXJu, key);\n}\nvar a0_0xae1d8d = a0_0x1199;\nvar input = require('fs')['readFileSync'](a0_0xae1d8d(0x0), 'utf8');\nvar arr = input[a0_0xae1d8d(0x1)]()[a0_0xae1d8d(0x2)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0xae1d8d(0x3)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var Arr = arr['splice'](0x0, n);\n    Arr = Arr[a0_0xae1d8d(0x4)](function (v) {\n        var _0x2f6677 = a0_0x1199;\n        return v[_0x2f6677(0x5)];\n    });\n    for (var i = 0x0; i < Arr[a0_0xae1d8d(0x5)]; i++) {\n        var good = [\n            0x5,\n            0x7,\n            0x5,\n            0x7,\n            0x7\n        ];\n        var sum = 0x0;\n        for (var j = i; j < Arr[a0_0xae1d8d(0x5)]; j++) {\n            if (good[a0_0xae1d8d(0x5)] == 0x0)\n                break;\n            sum += Arr[j];\n            if (good[0x0] > sum)\n                continue;\n            else if (good[0x0] < sum)\n                break;\n            else if (good[0x0] == sum) {\n                good[a0_0xae1d8d(0x3)]();\n                sum = 0x0;\n            }\n        }\n        if (good[a0_0xae1d8d(0x5)] == 0x0) {\n            console['log'](i + 0x1);\n            break;\n        }\n    }\n}", "test_cases": [["9\ndo\nthe\nbest\nand\nenjoy\ntoday\nat\nacm\nicpc\n14\noh\nyes\nby\nfar\nit\nis\nwow\nso\nbad\nto\nme\nyou\nknow\nhey\n15\nabcde\nfghijkl\nmnopq\nrstuvwx\nyzz\nabcde\nfghijkl\nmnopq\nrstuvwx\nyz\nabcde\nfghijkl\nmnopq\nrstuvwx\nyz\n0", "1\n2\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var Arr = arr.splice(0, n);\n   Arr = Arr.map(function(v) {\n      return v.length;\n   });\n   for (var i = 0; i < Arr.length; i++) {\n      var good = [5, 7, 5, 7, 7];\n      var sum = 0;\n      for (var j = i; j < Arr.length; j++) {\n         if (good.length == 0) break;\n         sum += Arr[j];\n         if (good[0] > sum) continue;\n         else if (good[0] < sum) break;\n         else if (good[0] == sum) {\n            good.shift();\n            sum = 0;\n         }\n      }\n      if (good.length == 0) {\n         console.log(i + 1);\n         break;\n      }\n   }\n}", "language": "JavaScript"}
{"filename": "p01094_1", "type": "JavaScript", "obfuscated": "function a0_0x5a23(YZEKEz, key) {\n    var stringArray = a0_0x2ac2();\n    a0_0x5a23 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a23(YZEKEz, key);\n}\nvar a0_0x52686b = a0_0x5a23;\nvar input = require('fs')[a0_0x52686b(0x0)](a0_0x52686b(0x1), a0_0x52686b(0x2));\nvar arr = input['trim']()[a0_0x52686b(0x3)]('\\x0a');\nvar ans = '';\nwhile (arr[a0_0x52686b(0x4)]() != 0x0) {\n    var a = arr['shift']()[a0_0x52686b(0x3)]('\\x20');\n    var obj = {};\n    for (var i = 0x0; i < a[a0_0x52686b(0x5)]; i++) {\n        obj[a[i]] = obj[a[i]] + 0x1 || 0x1;\n        var s = [];\n        for (var k in obj)\n            s[a0_0x52686b(0x6)]([\n                obj[k],\n                k\n            ]);\n        s[a0_0x52686b(0x7)](function (a, b) {\n            return b[0x0] - a[0x0];\n        });\n        if (s[a0_0x52686b(0x5)] == 0x1)\n            s[0x1] = [0x0];\n        if (s[0x0][0x0] > s[0x1][0x0] + a[a0_0x52686b(0x5)] - (i + 0x1)) {\n            ans += s[0x0][0x1] + '\\x20' + (i + 0x1) + '\\x0a';\n            break;\n        }\n    }\n    if (i == a[a0_0x52686b(0x5)])\n        ans += a0_0x52686b(0x8) + '\\x0a';\n}\nconsole['log'](ans['trim']());\nfunction a0_0x2ac2() {\n    var _0x565aa7 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'length',\n        'push',\n        'sort',\n        'TIE'\n    ];\n    a0_0x2ac2 = function () {\n        return _0x565aa7;\n    };\n    return a0_0x2ac2();\n}", "test_cases": [["1\nA\n4\nA A B B\n5\nL M N L N\n6\nK K K K K K\n6\nX X X Y Z X\n10\nA A A B A C A C C B\n10\nU U U U U V V W W W\n0", "A 1\nTIE\nTIE\nK 4\nX 5\nA 7\nU 8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar ans = \"\";\nwhile (arr.shift() != 0) {\n   var a = arr.shift().split(\" \");\n   var obj = {};\n   for (var i = 0; i < a.length; i++) {\n      obj[a[i]] = obj[a[i]] + 1 || 1;\n      var s = [];\n      for (var k in obj) s.push([obj[k], k]);\n      s.sort(function(a, b) {\n         return b[0] - a[0];\n      });\n      if (s.length == 1) s[1] = [0];\n      if (s[0][0] > s[1][0] + a.length - (i + 1)) {\n         ans+=s[0][1]+\" \"+ (i + 1)+\"\\n\";\n         break;\n      }\n   }\n   if (i == a.length) ans+=\"TIE\"+\"\\n\";\n}\nconsole.log(ans.trim());", "language": "JavaScript"}
{"filename": "p01111_1", "type": "JavaScript", "obfuscated": "function a0_0x4d93() {\n    const _0x126d60 = [\n        'data',\n        'end',\n        'stdout',\n        'split',\n        'map',\n        'SRQge',\n        'hUQLs',\n        'JlWgg',\n        'pERKA',\n        'write'\n    ];\n    a0_0x4d93 = function () {\n        return _0x126d60;\n    };\n    return a0_0x4d93();\n}\nfunction a0_0x22ba(fDSwnU, key) {\n    const stringArray = a0_0x4d93();\n    a0_0x22ba = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x22ba(fDSwnU, key);\n}\nnew Promise(function (resolve, reject) {\n    const _0x53e417 = a0_0x22ba;\n    let cin = '';\n    process['stdin']['on'](_0x53e417(0x0), chunk => {\n        cin += chunk;\n    })['on'](_0x53e417(0x1), () => {\n        const _0x34c156 = a0_0x22ba;\n        resolve([\n            cin,\n            process[_0x34c156(0x2)]\n        ]);\n    });\n})['then'](function ([cin, cout]) {\n    const _0x37eaba = a0_0x22ba;\n    for (const b of cin[_0x37eaba(0x3)](/[ \\n]/)[_0x37eaba(0x4)](elt => parseInt(elt))) {\n        if (_0x37eaba(0x5) === _0x37eaba(0x6)) {\n            opt = det / (0x2 * m) + '\\x20' + m + '\\x0a';\n        } else {\n            if (b === 0x0) {\n                if ('udgJc' === _0x37eaba(0x7)) {\n                    cin += chunk;\n                } else {\n                    break;\n                }\n            }\n            let opt = '\\x0a';\n            for (let m = 0x1; m * (m - 0x1) < 0x2 * b; ++m) {\n                if (_0x37eaba(0x8) !== _0x37eaba(0x8)) {\n                    const det = 0x2 * b - m * (m - 0x1);\n                    if (det % (0x2 * m) === 0x0) {\n                        opt = det / (0x2 * m) + '\\x20' + m + '\\x0a';\n                    }\n                } else {\n                    const det = 0x2 * b - m * (m - 0x1);\n                    if (det % (0x2 * m) === 0x0) {\n                        opt = det / (0x2 * m) + '\\x20' + m + '\\x0a';\n                    }\n                }\n            }\n            cout[_0x37eaba(0x9)](opt);\n        }\n    }\n});", "test_cases": [["15\n16\n2\n3\n9699690\n223092870\n847288609\n900660121\n987698769\n999999999\n0", "1 5\n16 1\n2 1\n1 2\n16 4389\n129 20995\n4112949 206\n15006 30011\n46887 17718\n163837 5994"]], "original": "new Promise(function(resolve, reject) {\n    let cin = \"\";\n    process.stdin\n        .on(\"data\", chunk => { cin += chunk; })\n        .on(\"end\", () => { resolve([cin, process.stdout]); });\n}).then(function([cin, cout]) {\n    for (const b of cin.split(/[ \\n]/).map(elt => parseInt(elt))) {\n        if (b === 0) {\n            break ;\n        }\n        let opt = \"\\n\";\n        for (let m = 1; m * (m - 1) < 2 * b; ++m) {\n            const det = 2 * b - m * (m - 1);\n            if (det % (2 * m) === 0) {\n                opt = `${det / (2 * m)} ${m}\\n`;\n            }\n        }\n        cout.write(opt);\n    }\n});\n\n", "language": "JavaScript"}
{"filename": "p01117_1", "type": "JavaScript", "obfuscated": "function a0_0x298f(vSrPpm, key) {\n    var stringArray = a0_0x302f();\n    a0_0x298f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x298f(vSrPpm, key);\n}\nvar a0_0x32676d = a0_0x298f;\nvar input = require('fs')[a0_0x32676d(0x0)](a0_0x32676d(0x1), a0_0x32676d(0x2));\nvar arr = input[a0_0x32676d(0x3)]()[a0_0x32676d(0x4)]('\\x0a');\nwhile (!![]) {\n    var [n, m] = arr[a0_0x32676d(0x5)]()[a0_0x32676d(0x4)]('\\x20')[a0_0x32676d(0x6)](Number);\n    if (n == 0x0 && m == 0x0)\n        break;\n    var h = [];\n    for (var i = 0x0; i < n; i++)\n        h[i] = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var p = arr['shift']()[a0_0x32676d(0x4)]('\\x20')[a0_0x32676d(0x6)](Number);\n        h = p['map']((v, i) => h[i] + v);\n    }\n    console[a0_0x32676d(0x7)](Math[a0_0x32676d(0x8)](...h));\n}\nfunction a0_0x302f() {\n    var _0x722626 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'max'\n    ];\n    a0_0x302f = function () {\n        return _0x722626;\n    };\n    return a0_0x302f();\n}", "test_cases": [["5 2\n10 20 30 40 50\n15 25 35 45 55\n6 3\n10 20 30 15 25 35\n21 34 11 52 20 18\n31 15 42 10 21 19\n4 2\n0 0 0 0\n0 0 0 0\n0 0", "105\n83\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,m]=arr.shift().split(\" \").map(Number);\n   if(n==0 && m==0)break;\n   var h=[];\n   for(var i=0;i<n;i++)h[i]=0;\n   for(var i=0;i<m;i++){\n      var p=arr.shift().split(\" \").map(Number);\n      h=p.map((v,i)=>h[i]+v);\n   }\n   console.log(Math.max(...h));\n}\n", "language": "JavaScript"}
{"filename": "p01118_1", "type": "JavaScript", "obfuscated": "function a0_0x5071(RRXEAq, key) {\n    var stringArray = a0_0x2046();\n    a0_0x5071 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5071(RRXEAq, key);\n}\nvar a0_0x2b3a21 = a0_0x5071;\nvar input = require('fs')[a0_0x2b3a21(0x0)](a0_0x2b3a21(0x1), a0_0x2b3a21(0x2));\nfunction a0_0x2046() {\n    var _0x2130aa = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'map',\n        'shift',\n        'forEach',\n        'abs',\n        'log'\n    ];\n    a0_0x2046 = function () {\n        return _0x2130aa;\n    };\n    return a0_0x2046();\n}\nvar arr = input['trim']()[a0_0x2b3a21(0x3)]('\\x0a');\nwhile (!![]) {\n    var [h, w] = arr['shift']()[a0_0x2b3a21(0x3)]('\\x20')[a0_0x2b3a21(0x4)](Number);\n    if (h == 0x0 && w == 0x0)\n        break;\n    var k = {};\n    for (var i = 0x0; i < h; i++) {\n        var r = arr['shift']()[a0_0x2b3a21(0x3)]('');\n        for (var j = 0x0; j < w; j++) {\n            k[r[j]] = [\n                i,\n                j\n            ];\n        }\n    }\n    var [s, sum, y, x] = [\n        arr[a0_0x2b3a21(0x5)]()[a0_0x2b3a21(0x3)](''),\n        0x0,\n        0x0,\n        0x0\n    ];\n    s[a0_0x2b3a21(0x6)](v => {\n        var _0x2e4984 = a0_0x5071;\n        sum += Math[_0x2e4984(0x7)](y - k[v][0x0]) + Math['abs'](x - k[v][0x1]) + 0x1;\n        [y, x] = [\n            k[v][0x0],\n            k[v][0x1]\n        ];\n    });\n    console[a0_0x2b3a21(0x8)](sum);\n}", "test_cases": [["3 9\nABCDEFGHI\nJKLMNOPQR\nSTUVWXYZ_\nICPC\n5 11\n___________\n____A______\n________M__\n___________\n_C_________\nACM\n4 21\n1_2_3_4_5_6_7_8_9_0_-\nQqWwEeRrTtYyUuIiOoPp@\nAaSsDdFfGgHhJjKkLl;_:\nZzXxCcVvBbNnMm,_._/__\nICPC2019,AsiaYokohamaRegional,QualificationRound\n0 0", "28\n23\n493"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [h,w]=arr.shift().split(\" \").map(Number);\n   if(h==0 && w==0)break;\n   var k={};\n   for(var i=0;i<h;i++){\n      var r=arr.shift().split(\"\");\n      for(var j=0;j<w;j++){\n         k[r[j]]=[i,j];\n      }\n   }\n   var [s,sum,y,x]=[arr.shift().split(\"\"),0,0,0];\n   s.forEach(v=>{\n      sum+=Math.abs(y-k[v][0])+Math.abs(x- k[v][1])+1;\n      [y,x]=[k[v][0],k[v][1]];\n   });\n   console.log(sum);\n}\n", "language": "JavaScript"}
{"filename": "p01136_1", "type": "JavaScript", "obfuscated": "function a0_0x18c0() {\n    var _0x3a5cc9 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'map',\n        'split',\n        'slice',\n        'push',\n        'includes',\n        'filter',\n        'indexOf',\n        'forEach',\n        'log'\n    ];\n    a0_0x18c0 = function () {\n        return _0x3a5cc9;\n    };\n    return a0_0x18c0();\n}\nvar a0_0x1942a9 = a0_0x2eb0;\nvar input = require('fs')[a0_0x1942a9(0x0)](a0_0x1942a9(0x1), a0_0x1942a9(0x2));\nvar arr = input[a0_0x1942a9(0x3)]()['split']('\\x0a');\nfunction a0_0x2eb0(WEmGno, key) {\n    var stringArray = a0_0x18c0();\n    a0_0x2eb0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2eb0(WEmGno, key);\n}\nwhile (!![]) {\n    var n = arr[a0_0x1942a9(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = arr['slice'](0x0, n);\n    ary = ary[a0_0x1942a9(0x5)](v => v[a0_0x1942a9(0x6)]('\\x20')[a0_0x1942a9(0x5)](Number)[a0_0x1942a9(0x7)](0x1));\n    var flag = !![];\n    var h = [];\n    for (var i = 0x0; i < n; i++)\n        h[a0_0x1942a9(0x8)]([i]);\n    for (var i = 0x1; i <= 0x1e; i++) {\n        var a = [];\n        ary['forEach']((v, j) => {\n            var _0x4af224 = a0_0x2eb0;\n            if (v[_0x4af224(0x9)](i))\n                a[_0x4af224(0x8)](j);\n        });\n        var b = [];\n        a['forEach'](v => b['push'](...h[v]));\n        b = b[a0_0x1942a9(0xa)]((x, i, self) => self[a0_0x1942a9(0xb)](x) == i);\n        if (b['length'] == n) {\n            flag = ![];\n            console['log'](i);\n            break;\n        }\n        a[a0_0x1942a9(0xc)](v => h[v] = b);\n    }\n    if (flag)\n        console[a0_0x1942a9(0xd)](-0x1);\n    arr = arr[a0_0x1942a9(0x7)](n);\n}", "test_cases": [["4\n1 1\n2 2 3\n2 1 2\n3 3 4 5\n0", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=arr.slice(0,n);\n   ary=ary.map(v=> v.split(\" \").map(Number).slice(1));\n   var flag=true;\n   var h=[];\n   for(var i=0;i<n;i++)h.push([i]);\n   for(var i=1;i<=30;i++){\n      var a=[];\n      ary.forEach((v,j)=>{\n         if(v.includes(i))a.push(j);\n      });\n      var b=[];\n      a.forEach(v=>b.push(...h[v]));\n      b= b.filter((x, i, self) => self.indexOf(x) == i);\n      if(b.length==n){\n         flag=false;\n         console.log(i);\n         break;\n      }\n      a.forEach(v=> h[v]=b);\n   }\n   if(flag)console.log(-1);\n   arr=arr.slice(n);\n}\n", "language": "JavaScript"}
{"filename": "p01139_1", "type": "JavaScript", "obfuscated": "function a0_0x16d9(gLJOEe, key) {\n    var stringArray = a0_0xc456();\n    a0_0x16d9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16d9(gLJOEe, key);\n}\nvar a0_0x3d945f = a0_0x16d9;\nfunction bomb(y, x) {\n    var _0x39604f = a0_0x16d9;\n    cnt++;\n    var dx = [\n        0x0,\n        -0x1,\n        0x1,\n        0x0\n    ];\n    var dy = [\n        -0x1,\n        0x0,\n        0x0,\n        0x1\n    ];\n    for (var i = 0x0; i < 0x4; i++) {\n        var X = x + dx[i];\n        var Y = y + dy[i];\n        if (Y >= h || Y < 0x0 || X >= w || X < 0x0)\n            continue;\n        if (yx[Y][X] == 'S')\n            continue;\n        else if (yx[Y][X] == '.') {\n            yx[Y][X] = 'S';\n            bomb(Y, X);\n        } else {\n            if (color == '' || color == yx[Y][X])\n                color = yx[Y][X];\n            else\n                color = _0x39604f(0x0);\n        }\n    }\n}\nfunction a0_0xc456() {\n    var _0x4664ed = [\n        'bad',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        '0\\x200',\n        'map',\n        'push',\n        'log'\n    ];\n    a0_0xc456 = function () {\n        return _0x4664ed;\n    };\n    return a0_0xc456();\n}\nvar input = require('fs')['readFileSync'](a0_0x3d945f(0x1), a0_0x3d945f(0x2));\nvar arr = input[a0_0x3d945f(0x3)]()[a0_0x3d945f(0x4)]('\\x0a');\nwhile (!![]) {\n    var wh = arr[a0_0x3d945f(0x5)]();\n    if (wh == a0_0x3d945f(0x6))\n        break;\n    wh = wh[a0_0x3d945f(0x4)]('\\x20')[a0_0x3d945f(0x7)](Number);\n    var w = wh[0x0];\n    var h = wh[0x1];\n    var yx = [];\n    for (var i = 0x0; i < h; i++)\n        yx[a0_0x3d945f(0x8)](arr[a0_0x3d945f(0x5)]()[a0_0x3d945f(0x4)](''));\n    var ans = [\n        0x0,\n        0x0\n    ];\n    for (var y = 0x0; y < h; y++) {\n        for (var x = 0x0; x < w; x++) {\n            var color = '';\n            var cnt = 0x0;\n            if (yx[y][x] == '.') {\n                yx[y][x] = 'S';\n                bomb(y, x);\n            }\n            if (color == 'B')\n                ans[0x0] += cnt;\n            else if (color == 'W')\n                ans[0x1] += cnt;\n        }\n    }\n    console[a0_0x3d945f(0x9)](ans[0x0] + '\\x20' + ans[0x1]);\n}", "test_cases": [["10 10\n.....W....\n....W.W...\n...W...W..\n....W...W.\n.....W...W\n......W.W.\nBBB....W..\n..B..BBBBB\n..B..B....\n..B..B..W.\n5 3\n...B.\n...BB\n.....\n1 1\n.\n0 0", "6 21\n12 0\n0 0"]], "original": "function bomb(y,x){\n   cnt++;\n   var dx=[0,-1,1,0];\n   var dy=[-1,0,0,1];\n   for(var i=0;i<4;i++){\n      var X=x+dx[i];\n      var Y=y+dy[i];\n      if(Y>=h || Y<0 || X>=w || X<0)continue;\n      if(yx[Y][X]==\"S\")continue;\n      else if(yx[Y][X]==\".\"){yx[Y][X]=\"S\";bomb(Y,X);}\n      else {\n         if(color==\"\" || color==yx[Y][X])color=yx[Y][X];\n         else color=\"bad\";\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var yx=[];\n   for(var i=0;i<h;i++)yx.push(arr.shift().split(\"\"));\n   var ans=[0,0];\n   for(var y=0;y<h;y++){\n      for(var x=0;x<w;x++){\n         var color=\"\";\n         var cnt=0;\n         if(yx[y][x]==\".\"){yx[y][x]=\"S\";bomb(y,x);}\n         if(color==\"B\")ans[0]+=cnt;\n         else if(color==\"W\")ans[1]+=cnt;\n      }\n   }\n   console.log(ans[0]+\" \"+ans[1]);\n}", "language": "JavaScript"}
{"filename": "p01144_1", "type": "JavaScript", "obfuscated": "var a0_0x398d9a = a0_0xbec0;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x398d9a(0x0));\nvar Arr = input[a0_0x398d9a(0x1)]()[a0_0x398d9a(0x2)]('\\x0a');\nwhile (!![]) {\n    var nm = Arr[a0_0x398d9a(0x3)]()['split']('\\x20')[a0_0x398d9a(0x4)](Number);\n    if (nm[0x0] == 0x0 && nm[0x1] == 0x0)\n        break;\n    var M = nm[0x1];\n    var DP = [];\n    for (var i = 0x0; i < nm[0x0]; i++) {\n        var dp = Arr[a0_0x398d9a(0x3)]()['split']('\\x20')[a0_0x398d9a(0x4)](Number);\n        DP[a0_0x398d9a(0x5)](dp);\n    }\n    DP[a0_0x398d9a(0x6)](function (a, b) {\n        return b[0x1] - a[0x1];\n    });\n    var sum = 0x0;\n    DP[a0_0x398d9a(0x7)](function (v) {\n        var d = v[0x0];\n        var p = v[0x1];\n        while (!![]) {\n            if (M == 0x0 || d == 0x0)\n                break;\n            M--;\n            d--;\n        }\n        sum += d * p;\n    });\n    console[a0_0x398d9a(0x8)](sum);\n}\nfunction a0_0xbec0(OdTnNI, key) {\n    var stringArray = a0_0xc27c();\n    a0_0xbec0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xbec0(OdTnNI, key);\n}\nfunction a0_0xc27c() {\n    var _0x356aa2 = [\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'sort',\n        'forEach',\n        'log'\n    ];\n    a0_0xc27c = function () {\n        return _0x356aa2;\n    };\n    return a0_0xc27c();\n}", "test_cases": [["2 8\n5 6\n4 5\n3 1\n5 10\n5 10\n5 10\n0 0", "5\n140"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=(Arr.shift()).split(\" \").map(Number);\n   if(nm[0]==0 && nm[1]==0)break;\n   var M=nm[1];\n   var DP=[];\n   for(var i=0;i<nm[0];i++){\n      var dp=(Arr.shift()).split(\" \").map(Number);\n      DP.push(dp);\n   }\n   DP.sort(function(a,b){return b[1]-a[1]});\n   var sum=0;\n   DP.forEach(function(v){\n      var d=v[0];\n      var p=v[1];\n      while(true){\n         if(M==0 || d==0)break;\n         M--;\n         d--;\n      }\n      sum+=d*p;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01149_1", "type": "JavaScript", "obfuscated": "var a0_0x52eb53 = a0_0x3c44;\nvar input = require('fs')[a0_0x52eb53(0x0)]('/dev/stdin', a0_0x52eb53(0x1));\nfunction a0_0x3c44(fBtCDH, key) {\n    var stringArray = a0_0x2208();\n    a0_0x3c44 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3c44(fBtCDH, key);\n}\ninput = input[a0_0x52eb53(0x2)](/T|J|Q|K/g, '10');\ninput = input['replace'](/A/g, '11');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr[a0_0x52eb53(0x3)]() - 0x0;\nwhile (n--) {\n    var a = arr['shift']()[a0_0x52eb53(0x4)]('\\x20')[a0_0x52eb53(0x5)](Number);\n    var b = arr['shift']()[a0_0x52eb53(0x4)]('\\x20')['map'](Number);\n    var flag = ![];\n    var sum = a[0x0] + a[0x1];\n    if (a[0x0] == 0xb || a[0x1] == 0xb)\n        flag = !![];\n    if (sum == 0x15) {\n        console[a0_0x52eb53(0x6)](a0_0x52eb53(0x7));\n        continue;\n    }\n    var ans = '';\n    for (var i = 0x0; i < b[a0_0x52eb53(0x8)]; i++) {\n        if (sum <= 0x10) {\n            if (b[i] == 0xb)\n                flag = !![];\n            if (b[i] == 0xb && sum + 0xb > 0x15)\n                b[i] = 0x1;\n            sum += b[i];\n        } else if (sum == 0x11 && flag) {\n            if (b[i] == 0xb)\n                flag = !![];\n            if (b[i] == 0xb && sum + 0xb > 0x15)\n                b[i] = 0x1;\n            sum += b[i];\n        } else {\n            break;\n        }\n    }\n    if (sum > 0x15)\n        sum = a0_0x52eb53(0x9);\n    console[a0_0x52eb53(0x6)](sum);\n}\nfunction a0_0x2208() {\n    var _0x1d029b = [\n        'readFileSync',\n        'utf8',\n        'replace',\n        'shift',\n        'split',\n        'map',\n        'log',\n        'blackjack',\n        'length',\n        'bust'\n    ];\n    a0_0x2208 = function () {\n        return _0x1d029b;\n    };\n    return a0_0x2208();\n}", "test_cases": [["4\n5 4\n9 2 8 3 7 4 6 5\nA J\nK Q J T 9 8 7 6\nT 4\n7 J A 6 Q T K 7\n2 2\n2 3 4 K 2 3 4 K", "18\nblackjack\n21\nbust"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.replace(/T|J|Q|K/g,\"10\");\ninput=input.replace(/A/g,\"11\");\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var a=arr.shift().split(\" \").map(Number);\n   var b=arr.shift().split(\" \").map(Number);\n   var flag=false;\n   var sum=a[0]+a[1];\n   if(a[0]==11 || a[1]==11)flag=true;\n   if(sum==21){console.log(\"blackjack\");continue;}\n   var ans=\"\";\n   for(var i=0;i<b.length;i++){\n      if(sum<=16){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else if(sum==17 && flag){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else {\n         break;\n      }\n   }\n   if(sum>21)sum=\"bust\";\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01155_1", "type": "JavaScript", "obfuscated": "function a0_0x5a23(nRWRTa, key) {\n    var stringArray = a0_0x1e09();\n    a0_0x5a23 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5a23(nRWRTa, key);\n}\nvar a0_0x19cf86 = a0_0x5a23;\nvar input = require('fs')[a0_0x19cf86(0x0)](a0_0x19cf86(0x1), a0_0x19cf86(0x2));\nfunction a0_0x1e09() {\n    var _0x460071 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'map',\n        '0\\x200',\n        'push',\n        'sqrt',\n        'forEach',\n        'RdQqo',\n        'dNccj',\n        'sort',\n        'AdRlC',\n        'min',\n        'log'\n    ];\n    a0_0x1e09 = function () {\n        return _0x460071;\n    };\n    return a0_0x1e09();\n}\nvar arr = input[a0_0x19cf86(0x3)]()['split']('\\x0a');\nwhile (!![]) {\n    var ab = arr[a0_0x19cf86(0x4)]()['split']('\\x20')[a0_0x19cf86(0x5)](Number);\n    if (ab['join']('\\x20') == a0_0x19cf86(0x6))\n        break;\n    var a = ab[0x0];\n    var b = ab[0x1];\n    var A = [];\n    var B = [];\n    for (i = 0x1; i <= Math['sqrt'](a); i++) {\n        if (a % i == 0x0)\n            A[a0_0x19cf86(0x7)]([\n                a / i,\n                i\n            ]);\n    }\n    for (i = 0x1; i <= Math[a0_0x19cf86(0x8)](b); i++) {\n        if (b % i == 0x0)\n            B[a0_0x19cf86(0x7)]([\n                b / i,\n                i\n            ]);\n    }\n    var min = Infinity;\n    A[a0_0x19cf86(0x9)](function (va) {\n        B['forEach'](function (vb) {\n            var _0x43489c = a0_0x5a23;\n            if (_0x43489c(0xa) === _0x43489c(0xb)) {\n                return a - b;\n            } else {\n                var c = [\n                    va[0x0],\n                    va[0x1],\n                    vb[0x0],\n                    vb[0x1]\n                ];\n                c[_0x43489c(0xc)](function (a, b) {\n                    var _0x5a9d70 = a0_0x5a23;\n                    if (_0x5a9d70(0xd) === 'qtWjk') {\n                        if (b % i == 0x0)\n                            B['push']([\n                                b / i,\n                                i\n                            ]);\n                    } else {\n                        return a - b;\n                    }\n                });\n                min = Math[_0x43489c(0xe)](min, Math['pow'](c[0x0] - c[0x1], 0x2) + Math['pow'](c[0x1] - c[0x2], 0x2) + Math['pow'](c[0x2] - c[0x3], 0x2));\n            }\n        });\n    });\n    console[a0_0x19cf86(0xf)](min);\n}", "test_cases": [["33 40\n57 144\n0 0", "22\n94"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var ab=arr.shift().split(\" \").map(Number);\n   if(ab.join(\" \")==\"0 0\")break;\n   var a=ab[0];\n   var b=ab[1];\n   var A=[];\n   var B=[];\n   for(i=1;i<=Math.sqrt(a);i++){\n      if(a%i==0)A.push([a/i,i]);\n   }\n   for(i=1;i<=Math.sqrt(b);i++){\n      if(b%i==0)B.push([b/i,i]);\n   }\n   var min=Infinity;\n   A.forEach(function(va){\n      B.forEach(function(vb){\n         var c=[va[0],va[1],vb[0],vb[1]];\n         c.sort(function(a,b){return a-b;});\n         min=Math.min(min,Math.pow(c[0]-c[1],2)+Math.pow(c[1]-c[2],2)+Math.pow(c[2]-c[3],2));\n      });\n   });\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01223_1", "type": "JavaScript", "obfuscated": "var a0_0x59ee6a = a0_0x1ec4;\nvar input = require('fs')['readFileSync'](a0_0x59ee6a(0x0), a0_0x59ee6a(0x1));\nvar Arr = input[a0_0x59ee6a(0x2)]()[a0_0x59ee6a(0x3)]('\\x0a');\nfunction a0_0x1ec4(rUqpnS, key) {\n    var stringArray = a0_0x2a41();\n    a0_0x1ec4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ec4(rUqpnS, key);\n}\nvar t = Arr[a0_0x59ee6a(0x4)]() - 0x0;\nfunction a0_0x2a41() {\n    var _0x5f3fce = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'max',\n        'min',\n        'log',\n        'abs'\n    ];\n    a0_0x2a41 = function () {\n        return _0x5f3fce;\n    };\n    return a0_0x2a41();\n}\nfor (var i = 0x0; i < t; i++) {\n    var n = Arr[a0_0x59ee6a(0x4)]() - 0x0;\n    var arr = Arr[a0_0x59ee6a(0x4)]()['split']('\\x20')[a0_0x59ee6a(0x5)](Number);\n    var max = 0x0;\n    var min = 0x0;\n    var m = arr[0x0];\n    for (var j = 0x1; j < n; j++) {\n        max = Math[a0_0x59ee6a(0x6)](arr[j] - m, max);\n        min = Math[a0_0x59ee6a(0x7)](arr[j] - m, min);\n        m = arr[j];\n    }\n    console[a0_0x59ee6a(0x8)](max + '\\x20' + Math[a0_0x59ee6a(0x9)](min));\n}", "test_cases": [["5\n5\n10 70 30 50 90\n2\n20 100\n2\n100 30\n3\n50 50 50\n7\n123 45 678 901 234 567 890", "60 40\n80 0\n0 70\n0 0\n633 667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar t=Arr.shift()-0;\nfor(var i=0;i<t;i++){\n   var n=Arr.shift()-0;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var max=0;\n   var min=0;\n   var m=arr[0];\n   for(var j=1;j<n;j++){\n      max=Math.max(arr[j]-m,max);\n      min=Math.min(arr[j]-m,min);\n      m=arr[j];\n   }\n   console.log(max+\" \"+Math.abs(min));\n}", "language": "JavaScript"}
{"filename": "p01224_1", "type": "JavaScript", "obfuscated": "var a0_0x57ad83 = a0_0xc920;\nfunction a0_0x199d() {\n    var _0x1e89a7 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'sqrt',\n        'perfect\\x20number',\n        'abundant\\x20number'\n    ];\n    a0_0x199d = function () {\n        return _0x1e89a7;\n    };\n    return a0_0x199d();\n}\nvar input = require('fs')[a0_0x57ad83(0x0)](a0_0x57ad83(0x1), a0_0x57ad83(0x2));\nvar arr = input[a0_0x57ad83(0x3)]()[a0_0x57ad83(0x4)]('\\x0a');\nfunction a0_0xc920(SWhhbx, key) {\n    var stringArray = a0_0x199d();\n    a0_0xc920 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xc920(SWhhbx, key);\n}\nwhile (!![]) {\n    var n = arr[a0_0x57ad83(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var sum = n != 0x1 ? 0x1 : 0x0;\n    var sqrt = Math[a0_0x57ad83(0x6)](n);\n    for (var i = 0x2; i < sqrt; i++) {\n        if (n % i == 0x0)\n            sum += i + n / i;\n    }\n    if (n % sqrt == 0x0 && sqrt != 0x1)\n        sum += sqrt;\n    var ans;\n    if (n == sum)\n        ans = a0_0x57ad83(0x7);\n    else if (n > sum)\n        ans = 'deficient\\x20number';\n    else if (n < sum)\n        ans = a0_0x57ad83(0x8);\n    console['log'](ans);\n}", "test_cases": [["1\n2\n3\n4\n6\n12\n16\n28\n33550336\n99999998\n99999999\n100000000\n0", "deficient number\ndeficient number\ndeficient number\ndeficient number\nperfect number\nabundant number\ndeficient number\nperfect number\nperfect number\ndeficient number\ndeficient number\nabundant number"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var sum=(n!=1)?1:0;\n   var sqrt=Math.sqrt(n);\n   for(var i=2;i<sqrt;i++){\n      if(n%i==0)sum+=i+n/i;\n   }\n   if(n%sqrt==0 && sqrt!=1)sum+=sqrt;\n   var ans;\n   if(n==sum)ans=\"perfect number\";\n   else if(n>sum)ans=\"deficient number\";\n   else if(n<sum)ans=\"abundant number\";\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p01294_1", "type": "JavaScript", "obfuscated": "var a0_0xb57c31 = a0_0x319f;\nvar input = require('fs')[a0_0xb57c31(0x0)](a0_0xb57c31(0x1), a0_0xb57c31(0x2));\nfunction a0_0x4009() {\n    var _0x2cccb6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'reduce',\n        'length',\n        'max',\n        'min',\n        'log',\n        'Yes'\n    ];\n    a0_0x4009 = function () {\n        return _0x2cccb6;\n    };\n    return a0_0x4009();\n}\nvar arr = input[a0_0xb57c31(0x3)]()[a0_0xb57c31(0x4)]('\\x0a');\nfunction a0_0x319f(vCAdNs, key) {\n    var stringArray = a0_0x4009();\n    a0_0x319f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x319f(vCAdNs, key);\n}\nwhile (!![]) {\n    var [n, d] = arr[a0_0xb57c31(0x5)]()[a0_0xb57c31(0x4)]('\\x20')[a0_0xb57c31(0x6)](Number);\n    if (n == 0x0 && d == 0x0)\n        break;\n    var S = [];\n    var C = [];\n    for (var i = 0x0; i < n; i++) {\n        var mc = arr[i][a0_0xb57c31(0x4)]('\\x20');\n        mc['shift']();\n        var c = mc[a0_0xb57c31(0x6)](Number)['reverse']();\n        var sum = c['length'] != 0x0 ? c[a0_0xb57c31(0x7)]((a, b) => a + b) : 0x0;\n        S[i] = sum;\n        C[i] = c;\n    }\n    while (!![]) {\n        var f = ![];\n        for (var i = 0x0; i < S[a0_0xb57c31(0x8)]; i++) {\n            if (S[i] == 0x0)\n                continue;\n            S[i] -= C[i][0x0];\n            if (Math[a0_0xb57c31(0x9)](...S) - Math[a0_0xb57c31(0xa)](...S) <= d) {\n                C[i]['shift']();\n                f = !![];\n                break;\n            } else {\n                S[i] += C[i][0x0];\n            }\n        }\n        if (f == ![])\n            break;\n    }\n    var sum = S[a0_0xb57c31(0x7)]((a, b) => a + b);\n    if (sum == 0x0)\n        console[a0_0xb57c31(0xb)](a0_0xb57c31(0xc));\n    else\n        console['log']('No');\n    arr = arr['slice'](n);\n}", "test_cases": [["3 3\n3 4 1 1\n2 1 5\n2 3 3\n3 3\n3 2 3 1\n2 1 5\n2 3 3\n0 0", "Yes\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,d]=arr.shift().split(\" \").map(Number);\n   if(n==0 && d==0)break;\n   var S=[];\n   var C=[];\n   for(var i=0;i<n;i++){\n      var mc=arr[i].split(\" \");\n      mc.shift();\n      var c=mc.map(Number).reverse();\n      var sum= (c.length!=0)?c.reduce((a,b)=> a+b):0;\n      S[i]=sum;\n      C[i]=c;\n   }\n   while(true){ \n      var f=false;\n      for(var i=0;i<S.length;i++){\n         if(S[i]==0)continue;\n         S[i] -= C[i][0];\n         if(Math.max(...S) - Math.min(...S) <=d){\n            C[i].shift();\n            f=true;\n            break;\n         }else{\n            S[i] +=C[i][0];\n         }\n      }\n      if(f==false)break;\n   }\n   var sum=S.reduce((a,b)=> a+b);\n   if(sum==0)console.log(\"Yes\");\n   else console.log(\"No\");\n   arr=arr.slice(n);\n}\n", "language": "JavaScript"}
{"filename": "p01303_1", "type": "JavaScript", "obfuscated": "var a0_0x313b76 = a0_0x10d3;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x313b76(0x0));\nvar Arr = input['replace'](/\\n$/, '')[a0_0x313b76(0x1)]('\\x0a');\nvar N = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < N; I++) {\n    var xywh = Arr[a0_0x313b76(0x2)]()['split']('\\x20')[a0_0x313b76(0x3)](Number);\n    var x1 = xywh[0x0];\n    var x2 = xywh[0x0] + xywh[0x2];\n    var y1 = xywh[0x1];\n    var y2 = xywh[0x1] + xywh[0x3];\n    var n = Arr[a0_0x313b76(0x2)]() - 0x0;\n    var cnt = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var XY = Arr['shift']()['split']('\\x20')[a0_0x313b76(0x3)](Number);\n        var X = XY[0x0];\n        var Y = XY[0x1];\n        if (x1 <= X && x2 >= X && y1 <= Y && y2 >= Y)\n            cnt++;\n    }\n    console['log'](cnt);\n}\nfunction a0_0x10d3(tHKHgE, key) {\n    var stringArray = a0_0x43ac();\n    a0_0x10d3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x10d3(tHKHgE, key);\n}\nfunction a0_0x43ac() {\n    var _0x1a15ed = [\n        'utf8',\n        'split',\n        'shift',\n        'map'\n    ];\n    a0_0x43ac = function () {\n        return _0x1a15ed;\n    };\n    return a0_0x43ac();\n}", "test_cases": [["2\n1 3 20 10\n4\n21 13\n1 15\n10 10\n25 10\n1 3 20 10\n4\n21 13\n1 15\n10 10\n25 10", "2\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar N=Arr.shift()-0;\nfor(var I=0;I<N;I++){\n   var xywh=(Arr.shift()).split(\" \").map(Number);\n   var x1=xywh[0];\n   var x2=xywh[0]+xywh[2];\n   var y1=xywh[1];\n   var y2=xywh[1]+xywh[3];\n   var n=Arr.shift()-0;\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      var XY=(Arr.shift()).split(\" \").map(Number);\n      var X=XY[0];\n      var Y=XY[1];\n      if(x1<=X && x2>=X && y1<=Y && y2>=Y)cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01315_1", "type": "JavaScript", "obfuscated": "var a0_0x4d6ef9 = a0_0x170d;\nfunction a0_0x15c4() {\n    var _0xf88b9b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'unshift',\n        'push',\n        'sort',\n        'toString',\n        'forEach',\n        'log'\n    ];\n    a0_0x15c4 = function () {\n        return _0xf88b9b;\n    };\n    return a0_0x15c4();\n}\nvar input = require('fs')[a0_0x4d6ef9(0x0)](a0_0x4d6ef9(0x1), a0_0x4d6ef9(0x2));\nvar Arr = input[a0_0x4d6ef9(0x3)]()[a0_0x4d6ef9(0x4)]('\\x0a');\nfunction a0_0x170d(sZGTLw, key) {\n    var stringArray = a0_0x15c4();\n    a0_0x170d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x170d(sZGTLw, key);\n}\nwhile (!![]) {\n    var n = Arr[a0_0x4d6ef9(0x5)]() - 0x0;\n    if (n === 0x0)\n        break;\n    var ans = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x4d6ef9(0x5)]()[a0_0x4d6ef9(0x4)]('\\x20');\n        var name = arr[a0_0x4d6ef9(0x5)]();\n        arr = arr[a0_0x4d6ef9(0x6)](Number);\n        arr[a0_0x4d6ef9(0x7)](name);\n        (function (L, P, A, B, C, D, E, F, S, M) {\n            var _0x176991 = a0_0x170d;\n            var time = A + B + C + (D + E) * M;\n            var money = F * S * M - P;\n            ans[_0x176991(0x8)]([\n                L,\n                money / time\n            ]);\n        }['apply'](null, arr));\n    }\n    ans[a0_0x4d6ef9(0x9)](function (a, b) {\n        var _0x14392b = a0_0x170d;\n        if (a[0x1] == b[0x1])\n            return a[0x0][_0x14392b(0xa)]() > b[0x0][_0x14392b(0xa)]() ? 0x1 : -0x1;\n        else\n            return b[0x1] - a[0x1];\n    });\n    ans[a0_0x4d6ef9(0xb)](function (v) {\n        var _0xd447f4 = a0_0x170d;\n        console[_0xd447f4(0xc)](v[0x0]);\n    });\n    console[a0_0x4d6ef9(0xc)]('#');\n}", "test_cases": [["5\napple 1 1 1 1 1 1 1 10 1\nbanana 1 2 2 2 2 2 1 10 1\ncarrot 1 2 2 2 2 2 1 10 2\ndurian 1 3 3 3 3 3 1 10 1\neggplant 1 3 3 3 3 3 1 100 1\n4\nenoki 1 3 3 3 3 3 1 10 1\ntomato 1 3 3 3 3 3 1 10 1\npotato 1 3 3 3 3 3 1 10 1\nonion 1 3 3 3 3 3 1 10 1\n3\na 10 1 1 1 1 1 1 10 1\nb 10 2 2 2 2 2 2 10 1\nc 10 2 2 2 2 2 2 10 1\n0", "eggplant\napple\ncarrot\nbanana\ndurian\n#\nenoki\nonion\npotato\ntomato\n#\nb\nc\na\n#"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n===0)break;\n   var ans=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var name=arr.shift();\n      arr=arr.map(Number);\n      arr.unshift(name);\n      (function(L, P, A, B, C, D, E, F, S, M){\n         var time=A+B+C+((D+E)*M);\n         var money=(F*S*M)-P;\n         ans.push([L,money/time]);\n      }).apply(null,arr);\n   }\n   ans.sort(function(a,b){\n      if(a[1]==b[1])return (a[0].toString()>b[0].toString())?1:-1;\n      else return b[1]-a[1];\n   });\n   ans.forEach(function(v){console.log(v[0]);});\n   console.log(\"#\");\n}", "language": "JavaScript"}
{"filename": "p01321_1", "type": "JavaScript", "obfuscated": "function a0_0x589f() {\n    var _0x41b4cb = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'reduce',\n        'push',\n        'sort',\n        'log'\n    ];\n    a0_0x589f = function () {\n        return _0x41b4cb;\n    };\n    return a0_0x589f();\n}\nfunction a0_0x5e6a(fBUulw, key) {\n    var stringArray = a0_0x589f();\n    a0_0x5e6a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e6a(fBUulw, key);\n}\nvar a0_0x2d7183 = a0_0x5e6a;\nvar input = require('fs')['readFileSync'](a0_0x2d7183(0x0), a0_0x2d7183(0x1));\nvar Arr = input[a0_0x2d7183(0x2)]()[a0_0x2d7183(0x3)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x2d7183(0x4)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var S = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x2d7183(0x4)]()[a0_0x2d7183(0x3)]('\\x20')[a0_0x2d7183(0x5)](Number);\n        var sum = arr[a0_0x2d7183(0x6)](function (a, b) {\n            return a + b;\n        });\n        S[a0_0x2d7183(0x7)](sum);\n    }\n    S[a0_0x2d7183(0x8)](function (a, b) {\n        return b - a;\n    });\n    console[a0_0x2d7183(0x9)](S[0x0] + '\\x20' + S[S['length'] - 0x1]);\n}", "test_cases": [["3\n49 50 87 78 41\n27 61 100 45 84\n28 88 40 95 66\n2\n100 100 100 100 100\n0 0 0 0 0\n1\n89 90 85 93 82\n0", "317 305\n500 0\n439 439"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var S=[];\n   for(var i=0;i<n;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n      var sum=arr.reduce(function(a,b){return a+b;});\n      S.push(sum);\n   }\n   S.sort(function(a,b){return b-a;});\n   console.log(S[0]+\" \"+S[S.length-1]);\n}", "language": "JavaScript"}
{"filename": "p01322_1", "type": "JavaScript", "obfuscated": "var a0_0x417188 = a0_0x5772;\nfunction a0_0x2c69() {\n    var _0x231a1c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'replace',\n        'slice',\n        'length'\n    ];\n    a0_0x2c69 = function () {\n        return _0x231a1c;\n    };\n    return a0_0x2c69();\n}\nvar input = require('fs')[a0_0x417188(0x0)](a0_0x417188(0x1), a0_0x417188(0x2));\nfunction a0_0x5772(pOcvfh, key) {\n    var stringArray = a0_0x2c69();\n    a0_0x5772 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5772(pOcvfh, key);\n}\nvar Arr = input[a0_0x417188(0x3)]()[a0_0x417188(0x4)]('\\x0a');\nwhile (!![]) {\n    var nm = Arr[a0_0x417188(0x5)]()[a0_0x417188(0x4)]('\\x20')[a0_0x417188(0x6)](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0)\n        break;\n    var obj = {};\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr[a0_0x417188(0x5)]()['split']('\\x20');\n        var v = arr[0x0][a0_0x417188(0x7)](/\\*/g, '');\n        obj[v] = arr[0x1] - 0x0;\n    }\n    var sum = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var v = Arr['shift']();\n        for (var k in obj) {\n            if (k == v[a0_0x417188(0x8)](-0x1 * k[a0_0x417188(0x9)]))\n                sum += obj[k];\n        }\n    }\n    console['log'](sum);\n}", "test_cases": [["3 3\n*******1 100\n******22 1000\n11111112 1000000\n01203291\n02382022\n11111111\n10 10\n****3228 149416\n****3992 198635\n****4286 77783\n****4843 225244\n***49835 231046\n***59393 379996\n*5763748 437345\n*6726222 58054\n*8117882 16375\n*9244339 537727\n77885716\n96726222\n26971031\n66652868\n89599648\n37772338\n64679621\n65479161\n92959393\n57855682\n0 0", "1200\n438050"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=(Arr.shift()).split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   if(n==0)break;\n   var obj={};\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var v=arr[0].replace(/\\*/g,\"\");\n      obj[v]=arr[1]-0;\n   }\n   var sum=0;\n   for(var i=0;i<m;i++){\n      var v=Arr.shift();\n      for(var k in obj){\n         if(k==v.slice(-1*k.length))sum+=obj[k];\n      }\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01333_1", "type": "JavaScript", "obfuscated": "function a0_0x53ff() {\n    var _0x141fac = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'log'\n    ];\n    a0_0x53ff = function () {\n        return _0x141fac;\n    };\n    return a0_0x53ff();\n}\nvar a0_0x594a67 = a0_0x4089;\nvar input = require('fs')['readFileSync'](a0_0x594a67(0x0), a0_0x594a67(0x1));\nvar Arr = input[a0_0x594a67(0x2)]()['split']('\\x0a');\nfunction a0_0x4089(QoyTxm, key) {\n    var stringArray = a0_0x53ff();\n    a0_0x4089 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4089(QoyTxm, key);\n}\nwhile (!![]) {\n    var ab = Arr[a0_0x594a67(0x3)]()['split']('\\x20');\n    ;\n    if (ab[0x0] == 0x0 && ab[0x1] == 0x0)\n        break;\n    var m = ab[0x1] - ab[0x0];\n    var arr = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    while (m >= 0x3e8) {\n        m -= 0x3e8;\n        arr[0x2]++;\n    }\n    while (m >= 0x1f4) {\n        m -= 0x1f4;\n        arr[0x1]++;\n    }\n    while (m >= 0x64) {\n        m -= 0x64;\n        arr[0x0]++;\n    }\n    console[a0_0x594a67(0x4)](arr['join']('\\x20'));\n}", "test_cases": [["500 1000\n100 10000\n400 700\n600 5000\n10000 10000\n0 0", "0 1 0\n4 1 9\n3 0 0\n4 0 4\n0 0 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var ab=(Arr.shift()).split(\" \");;\n   if(ab[0]==0 && ab[1]==0)break;\n   var m=ab[1]-ab[0];\n   var arr=[0,0,0];\n   while(m>=1000){\n      m-=1000;\n      arr[2]++;\n   }\n   while(m>=500){\n      m-=500;\n      arr[1]++;\n   }\n   while(m>=100){\n      m-=100;\n      arr[0]++;\n   }\n   console.log(arr.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p01334_1", "type": "JavaScript", "obfuscated": "var a0_0x5de5b8 = a0_0x264e;\nfunction bomb(y, x) {\n    var _0x2a1b64 = a0_0x264e;\n    var Y = yx[y][x][0x1];\n    var X = yx[y][x][0x0];\n    if (ring[_0x2a1b64(0x0)](Y + ',' + X)) {\n        if (_0x2a1b64(0x1) !== _0x2a1b64(0x2)) {\n            var flag = !![];\n            for (var k in ring) {\n                if (obj[_0x2a1b64(0x0)](k))\n                    flag = ![];\n                obj[k] = !![];\n            }\n            if (flag)\n                cnt++;\n        } else {\n            ring[Y + ',' + X] = !![];\n            bomb(Y, X);\n        }\n    } else {\n        if (_0x2a1b64(0x3) === 'yuPmc') {\n            if (obj['hasOwnProperty'](k))\n                flag = ![];\n            obj[k] = !![];\n        } else {\n            ring[Y + ',' + X] = !![];\n            bomb(Y, X);\n        }\n    }\n}\nfunction a0_0x264e(DjEGpi, key) {\n    var stringArray = a0_0xba91();\n    a0_0x264e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x264e(DjEGpi, key);\n}\nvar input = require('fs')[a0_0x5de5b8(0x4)]('/dev/stdin', a0_0x5de5b8(0x5));\nvar arr = input[a0_0x5de5b8(0x6)]()[a0_0x5de5b8(0x7)]('\\x0a');\nwhile (!![]) {\n    var n = arr[a0_0x5de5b8(0x8)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        var tile = arr[a0_0x5de5b8(0x8)]()['split']('\\x20')[a0_0x5de5b8(0x9)](Number);\n        var t = [];\n        for (var j = 0x0; j < n; j++)\n            t[j] = [\n                tile[a0_0x5de5b8(0x8)](),\n                tile[a0_0x5de5b8(0x8)]()\n            ];\n        yx[a0_0x5de5b8(0xa)](t);\n    }\n    var obj = {};\n    var cnt = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            if (obj[a0_0x5de5b8(0x0)](i + ',' + j))\n                continue;\n            var ring = {};\n            ring[i + ',' + j] = !![];\n            bomb(i, j);\n        }\n    }\n    console[a0_0x5de5b8(0xb)](cnt);\n}\nfunction a0_0xba91() {\n    var _0x14c07e = [\n        'hasOwnProperty',\n        'rryDP',\n        'HpeOJ',\n        'WsBUS',\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'push',\n        'log'\n    ];\n    a0_0xba91 = function () {\n        return _0x14c07e;\n    };\n    return a0_0xba91();\n}", "test_cases": [["1\n0 0\n2\n1 1 0 1\n1 0 0 0\n2\n1 1 0 1\n1 1 1 0\n3\n0 1 2 2 2 1\n0 2 1 2 2 1\n0 0 0 1 1 1\n4\n3 2 2 0 3 2 2 1\n1 1 0 3 1 1 3 1\n0 3 2 3 3 0 2 3\n1 1 1 1 3 2 1 3\n0", "1\n2\n1\n2\n3"]], "original": "function bomb(y,x){\n   var Y=yx[y][x][1];\n   var X=yx[y][x][0];\n   if(ring.hasOwnProperty(Y+\",\"+X)){\n      var flag=true;\n      for(var k in ring){\n         if(obj.hasOwnProperty(k))flag=false;\n         obj[k]=true;     \n      } \n      if(flag)cnt++;\n   }else{\n      ring[Y+\",\"+X]=true;\n      bomb(Y,X);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      var tile=arr.shift().split(\" \").map(Number);\n      var t=[];\n      for(var j=0;j<n;j++)t[j]=[tile.shift(),tile.shift()];\n      yx.push(t);\n   }\n   var obj={};\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         if(obj.hasOwnProperty(i+\",\"+j))continue;\n         var ring={};\n         ring[i+\",\"+j]=true;\n         bomb(i,j);\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01415_1", "type": "JavaScript", "obfuscated": "function a0_0x5c25() {\n    var _0x4b69b7 = [\n        'readFileSync',\n        'split',\n        'shift',\n        'hasOwnProperty',\n        'log',\n        'toFixed'\n    ];\n    a0_0x5c25 = function () {\n        return _0x4b69b7;\n    };\n    return a0_0x5c25();\n}\nvar a0_0x1e5e12 = a0_0x7fc1;\nvar input = require('fs')[a0_0x1e5e12(0x0)]('/dev/stdin', 'utf8');\nvar Arr = input['trim']()[a0_0x1e5e12(0x1)]('\\x0a');\nvar NKTUVL = Arr[a0_0x1e5e12(0x2)]()[a0_0x1e5e12(0x1)]('\\x20')['map'](Number);\nvar N = NKTUVL[0x0];\nvar K = NKTUVL[0x1];\nvar T = NKTUVL[0x2];\nvar U = NKTUVL[0x3];\nfunction a0_0x7fc1(jVErdN, key) {\n    var stringArray = a0_0x5c25();\n    a0_0x7fc1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x7fc1(jVErdN, key);\n}\nvar V = NKTUVL[0x4];\nvar L = NKTUVL[0x5];\nvar time = 0x0;\nvar obj = {};\nfor (var i = 0x0; i < N; i++)\n    obj[Arr['shift']() - 0x0] = !![];\nvar fast = 0x0;\nvar stock = 0x0;\nfor (var i = 0x0; i < L; i++) {\n    var now = obj[a0_0x1e5e12(0x3)](i) ? !![] : ![];\n    if (fast == 0x0 && now == !![]) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        continue;\n    }\n    if (fast == 0x0 && now == ![] && stock == 0x0) {\n        time += 0x1 / U;\n        continue;\n    }\n    if (fast == 0x0 && now == ![] && stock > 0x0) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        stock--;\n        continue;\n    }\n    if (fast > 0x0 && now == ![]) {\n        time += 0x1 / V;\n        fast--;\n        continue;\n    }\n    if (fast > 0x0 && now == !![] && stock + 0x1 <= K) {\n        time += 0x1 / V;\n        fast--;\n        stock++;\n        continue;\n    }\n    if (fast > 0x0 && now == !![] && stock + 0x1 > K) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        continue;\n    }\n}\nconsole[a0_0x1e5e12(0x4)](time[a0_0x1e5e12(0x5)](0x9));", "test_cases": [["1 1 1 2 3 100\n50", "49.500000000"], ["3 1 1 2 3 100\n49\n50\n51", "48.666666667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar NKTUVL=(Arr.shift()).split(\" \").map(Number);\nvar N=NKTUVL[0];\nvar K=NKTUVL[1];\nvar T=NKTUVL[2];\nvar U=NKTUVL[3];\nvar V=NKTUVL[4];\nvar L=NKTUVL[5];\nvar time=0;\nvar obj={};\nfor(var i=0;i<N;i++)obj[Arr.shift()-0]=true;\nvar fast=0;\nvar stock=0;\nfor(var i=0;i<L;i++){\n   var now=(obj.hasOwnProperty(i))?true:false;\n   if(fast==0 && now==true){time+=1/V;fast=(T*V-1);continue;}\n   if(fast==0 && now==false && stock==0){time+=1/U;continue;}\n   if(fast==0 && now==false && stock>0){time+=1/V;fast=(T*V-1);stock--;continue;}\n   if(fast>0 && now==false){time+=1/V;fast--;continue;}\n   if(fast>0 && now==true && stock+1<=K){time+=1/V;fast--;stock++;continue;}\n   if(fast>0 && now==true && stock+1>K){time+=1/V;fast=(T*V-1);continue;}\n}\nconsole.log(time.toFixed(9));", "language": "JavaScript"}
{"filename": "p01531_1", "type": "JavaScript", "obfuscated": "var a0_0x123b1a = a0_0x58c8;\nvar input = require('fs')[a0_0x123b1a(0x0)](a0_0x123b1a(0x1), a0_0x123b1a(0x2));\nvar arr = input[a0_0x123b1a(0x3)]()[a0_0x123b1a(0x4)]('');\nvar x = '';\nfunction a0_0x58c8(jbOzLa, key) {\n    var stringArray = a0_0x427d();\n    a0_0x58c8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x58c8(jbOzLa, key);\n}\narr['forEach'](function (v) {\n    if (v == '0')\n        x += 'w';\n    if (v == '1')\n        x += '';\n    if (v == '2')\n        x += 'k';\n    if (v == '3')\n        x += 's';\n    if (v == '4')\n        x += 't';\n    if (v == '5')\n        x += 'n';\n    if (v == '6')\n        x += 'h';\n    if (v == '7')\n        x += 'm';\n    if (v == '8')\n        x += 'y';\n    if (v == '9')\n        x += 'r';\n    if (v == 'T')\n        x += 'a';\n    if (v == 'L')\n        x += 'i';\n    if (v == 'U')\n        x += 'u';\n    if (v == 'R')\n        x += 'e';\n    if (v == 'D')\n        x += 'o';\n});\nfunction a0_0x427d() {\n    var _0x5335c3 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'replace'\n    ];\n    a0_0x427d = function () {\n        return _0x5335c3;\n    };\n    return a0_0x427d();\n}\nx = x[a0_0x123b1a(0x5)](/wu/g, 'nn');\nconsole['log'](x);", "test_cases": [["5R2D", "neko"], ["8U9U6U0T", "yuruhuwa"], ["9L4U7R1L2D0U4R3U4D", "ritumeikonntesuto"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\");\nvar x=\"\";\narr.forEach(function(v){\nif(v==\"0\")x+=\"w\";\nif(v==\"1\")x+=\"\";\nif(v==\"2\")x+=\"k\";\nif(v==\"3\")x+=\"s\";\nif(v==\"4\")x+=\"t\";\nif(v==\"5\")x+=\"n\";\nif(v==\"6\")x+=\"h\";\nif(v==\"7\")x+=\"m\";\nif(v==\"8\")x+=\"y\";\nif(v==\"9\")x+=\"r\";\nif(v==\"T\")x+=\"a\";\nif(v==\"L\")x+=\"i\";\nif(v==\"U\")x+=\"u\";\nif(v==\"R\")x+=\"e\";\nif(v==\"D\")x+=\"o\";\n});\nx=x.replace(/wu/g,\"nn\");\nconsole.log(x);", "language": "JavaScript"}
{"filename": "p01620_1", "type": "JavaScript", "obfuscated": "var a0_0x400200 = a0_0x3e60;\nfunction a0_0x3b23() {\n    var _0x352824 = [\n        'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n        'split',\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'map',\n        'indexOf',\n        'length',\n        'log',\n        'join'\n    ];\n    a0_0x3b23 = function () {\n        return _0x352824;\n    };\n    return a0_0x3b23();\n}\nvar abc = a0_0x400200(0x0)[a0_0x400200(0x1)]('');\nfunction a0_0x3e60(gxoaGg, key) {\n    var stringArray = a0_0x3b23();\n    a0_0x3e60 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e60(gxoaGg, key);\n}\nvar input = require('fs')[a0_0x400200(0x2)](a0_0x400200(0x3), 'utf8');\nvar Arr = input[a0_0x400200(0x4)]()[a0_0x400200(0x1)]('\\x0a');\nwhile (!![]) {\n    var n = Arr[a0_0x400200(0x5)]() - 0x0;\n    if (n == 0x0)\n        break;\n    var k = Arr[a0_0x400200(0x5)]()[a0_0x400200(0x1)]('\\x20')[a0_0x400200(0x6)](Number);\n    var arr = Arr[a0_0x400200(0x5)]()['split']('');\n    var j = 0x0;\n    for (var i = 0x0; i < arr['length']; i++) {\n        var num = abc[a0_0x400200(0x7)](arr[i]) - k[i % k[a0_0x400200(0x8)]];\n        if (num < 0x0)\n            num += abc['length'];\n        arr[i] = abc[num];\n    }\n    console[a0_0x400200(0x9)](arr[a0_0x400200(0xa)](''));\n}", "test_cases": [["2\n1 2\nbdd\n3\n3 2 1\nDDDA\n5\n3 1 4 5 3\ndcdkIlkP\n0", "abc\nABCx\nabZfFijL"]], "original": "var abc=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var k=(Arr.shift()).split(\" \").map(Number);\n   var arr=(Arr.shift()).split(\"\");\n   var j=0;\n   for(var i=0;i<arr.length;i++){\n      var num=abc.indexOf(arr[i])-k[i%k.length];\n      if(num<0)num+=abc.length;\n      arr[i]=abc[num];\n   }\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p01688_1", "type": "JavaScript", "obfuscated": "var a0_0x568615 = a0_0x6ad8;\nvar input = require('fs')[a0_0x568615(0x0)]('/dev/stdin', a0_0x568615(0x1));\nvar Arr = input['trim']()[a0_0x568615(0x2)]('\\x0a');\nvar D = Arr['shift']() - 0x0;\nvar x = Arr['shift']() - 0x0;\nvar X = [];\nfunction a0_0x6ad8(uzRBMX, key) {\n    var stringArray = a0_0x3c3f();\n    a0_0x6ad8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x6ad8(uzRBMX, key);\n}\nfor (var i = 0x0; i < x; i++) {\n    var v = Arr[a0_0x568615(0x3)]()[a0_0x568615(0x2)]('\\x20');\n    if (v[0x0] == 'D')\n        X['push'](v[0x1] - 0x0);\n}\nX[a0_0x568615(0x4)](function (a, b) {\n    return b - a;\n});\nfunction a0_0x3c3f() {\n    var _0x4390b6 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'sort',\n        'push',\n        'length',\n        'log'\n    ];\n    a0_0x3c3f = function () {\n        return _0x4390b6;\n    };\n    return a0_0x3c3f();\n}\nvar y = Arr[a0_0x568615(0x3)]() - 0x0;\nvar Y = [];\nfor (var i = 0x0; i < y; i++) {\n    var v = Arr['shift']()[a0_0x568615(0x2)]('\\x20');\n    if (v[0x0] == 'DD')\n        Y[a0_0x568615(0x5)](v[0x1] - 0x0);\n}\nY['sort'](function (a, b) {\n    return b - a;\n});\nvar max = 0x0;\nfor (var x = 0x0; x <= X[a0_0x568615(0x6)]; x++) {\n    for (var y = 0x0; y <= Y[a0_0x568615(0x6)]; y++) {\n        if (D < x + y * 0x2)\n            break;\n        var sum = 0x0;\n        for (var i = 0x0; i < x; i++)\n            sum += X[i];\n        for (var i = 0x0; i < y; i++)\n            sum += Y[i];\n        max = Math['max'](max, sum);\n    }\n}\nconsole[a0_0x568615(0x7)](max);", "test_cases": [["2\n3\nD 30\nD 50\nD 20\n0", "80"], ["4\n0\n2\nDB 60\nDD 40", "40"], ["13\n2\nC 15\nA 23\n2\nBD 42\nEE 20", "0"], ["3\n3\nD 10\nD 15\nD 45\n1\nDD 30", "75"], ["3\n3\nD 25\nD 20\nD 25\n1\nDD 30", "70"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar D=Arr.shift()-0;\nvar x=Arr.shift()-0;\nvar X=[];\nfor(var i=0;i<x;i++){\n   var v=Arr.shift().split(\" \");\n   if(v[0]==\"D\")X.push(v[1]-0);\n}\nX.sort(function(a,b){return b-a;});\nvar y=Arr.shift()-0;\nvar Y=[];\nfor(var i=0;i<y;i++){\n   var v=Arr.shift().split(\" \");\n   if(v[0]==\"DD\")Y.push(v[1]-0);\n}\nY.sort(function(a,b){return b-a;});\nvar max=0;\nfor(var x=0;x<=X.length;x++){\n   for(var y=0;y<=Y.length;y++){\n      if(D<x+(y*2))break;\n      var sum=0;\n      for(var i=0;i<x;i++)sum+=X[i];\n      for(var i=0;i<y;i++)sum+=Y[i];\n      max=Math.max(max,sum);\n   }\n}\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p01760_1", "type": "JavaScript", "obfuscated": "var a0_0x37d6b2 = a0_0x50ac;\nvar input = require('fs')[a0_0x37d6b2(0x0)](a0_0x37d6b2(0x1), a0_0x37d6b2(0x2));\nvar arr = input[a0_0x37d6b2(0x3)]()['split']('\\x0a');\nfunction a0_0x50ac(jhikSz, key) {\n    var stringArray = a0_0x23c6();\n    a0_0x50ac = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x50ac(jhikSz, key);\n}\nvar TD = arr[a0_0x37d6b2(0x4)]()['split']('\\x20')[a0_0x37d6b2(0x5)](Number);\nvar T = TD[0x0];\nvar D = TD[0x1];\nvar t = arr[a0_0x37d6b2(0x4)]()[a0_0x37d6b2(0x6)]('\\x20')[a0_0x37d6b2(0x5)](Number);\nfunction a0_0x23c6() {\n    var _0x305c55 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'map',\n        'split',\n        'min',\n        'abs',\n        'log',\n        'toFixed'\n    ];\n    a0_0x23c6 = function () {\n        return _0x305c55;\n    };\n    return a0_0x23c6();\n}\nvar tA = t[0x0];\nvar tB = t[0x1];\nvar d = arr['shift']()[a0_0x37d6b2(0x6)]('\\x20')[a0_0x37d6b2(0x5)](Number);\nvar dA = d[0x0];\nvar dB = d[0x1];\nvar min = Infinity;\nvar i = 0x0;\nwhile (!![]) {\n    var vA = i * dA;\n    if (vA > D)\n        break;\n    var j = 0x0;\n    while (!![]) {\n        var vB = j * dB;\n        if (vA + vB > D)\n            break;\n        if (vA + vB != 0x0) {\n            var c = T - (tA * vA + tB * vB) / (vA + vB);\n            min = Math[a0_0x37d6b2(0x7)](min, Math[a0_0x37d6b2(0x8)](c));\n        }\n        j++;\n    }\n    i++;\n}\nconsole[a0_0x37d6b2(0x9)](min[a0_0x37d6b2(0xa)](0xa));", "test_cases": [["40 1000\n80 20\n100 100", "0.0000000000"], ["38 1000\n80 20\n100 95", "0.2222222222"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar TD=arr.shift().split(\" \").map(Number);\nvar T=TD[0];\nvar D=TD[1];\nvar t=arr.shift().split(\" \").map(Number);\nvar tA=t[0];\nvar tB=t[1];\nvar d=arr.shift().split(\" \").map(Number);\nvar dA=d[0];\nvar dB=d[1];\nvar min=Infinity;\nvar i=0;\nwhile(true){\n   var vA=i*dA;\n   if(vA>D)break;\n   var j=0;\n   while(true){\n      var vB=j*dB;\n      if(vA+vB>D)break;\n      if(vA+vB!=0){\n         var c=T-(tA * vA + tB * vB) / (vA + vB);\n         min=Math.min(min,Math.abs(c));\n      }\n      j++;\n   }\n   i++;\n}\nconsole.log(min.toFixed(10));", "language": "JavaScript"}
{"filename": "p01761_1", "type": "JavaScript", "obfuscated": "var a0_0x323577 = a0_0x16cc;\nvar input = require('fs')[a0_0x323577(0x0)]('/dev/stdin', a0_0x323577(0x1));\nvar arr = input[a0_0x323577(0x2)]()[a0_0x323577(0x3)]('\\x0a');\nfunction a0_0x16cc(yqHQik, key) {\n    var stringArray = a0_0x121f();\n    a0_0x16cc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x16cc(yqHQik, key);\n}\nvar n = arr[a0_0x323577(0x4)]() - 0x0;\nfunction a0_0x121f() {\n    var _0x400b49 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'log',\n        'getTime',\n        'forEach',\n        'test',\n        'bGVBA',\n        'TqqSA',\n        'push'\n    ];\n    a0_0x121f = function () {\n        return _0x400b49;\n    };\n    return a0_0x121f();\n}\nvar book = [];\nfor (var i = 0x0; i < n; i++)\n    book[i] = arr['shift']();\nvar q = arr[a0_0x323577(0x4)]() - 0x0;\nfor (var i = 0x0; i < q; i++) {\n    if (i != 0x0)\n        console[a0_0x323577(0x5)]('');\n    var ans = [];\n    var v = arr[a0_0x323577(0x4)]()['split']('\\x20');\n    var a = v[0x0];\n    var b = v[0x1];\n    var c = v[0x2] != '*' ? new Date(v[0x2])[a0_0x323577(0x6)]() : '*';\n    var d = v[0x3] != '*' ? new Date(v[0x3])[a0_0x323577(0x6)]() : '*';\n    book[a0_0x323577(0x7)](function (V) {\n        var _0x7dccaf = a0_0x16cc;\n        V = V[_0x7dccaf(0x3)]('\\x20');\n        var A = V[0x0];\n        var B = V[0x1];\n        var C = new Date(V[0x2])[_0x7dccaf(0x6)]();\n        var flag = !![];\n        if (a != '*') {\n            var regex = new RegExp(a);\n            if (regex[_0x7dccaf(0x8)](A) == ![])\n                flag = ![];\n        }\n        if (b != '*') {\n            if ('bGVBA' === _0x7dccaf(0x9)) {\n                var regex = new RegExp(b);\n                if (regex[_0x7dccaf(0x8)](B) == ![])\n                    flag = ![];\n            } else {\n                var regex = new RegExp(a);\n                if (regex[_0x7dccaf(0x8)](A) == ![])\n                    flag = ![];\n            }\n        }\n        if (c != '*') {\n            if (_0x7dccaf(0xa) === 'TqqSA') {\n                if (c > C)\n                    flag = ![];\n            } else {\n                console['log'](value);\n            }\n        }\n        if (d != '*') {\n            if (d < C)\n                flag = ![];\n        }\n        if (flag)\n            ans[_0x7dccaf(0xb)](A);\n    });\n    ans[a0_0x323577(0x7)](function (value) {\n        var _0x4ce412 = a0_0x16cc;\n        console[_0x4ce412(0x5)](value);\n    });\n}", "test_cases": [["6\nantbook iwiWataKitamasa 2012/01/28\nhogebook foo 2000/01/01\nhugabook bar 2000/01/01\ncheeterbook chokudai 2012/09/29\naojbook YutakaWatanabe 2014/06/28\npiyobook buz 2000/01/01\n4\na * * *\n* chokudai * *\n* Chokudai * *\n* * 2014/01/01 2014/12/31", "antbook\nhugabook\naojbook\n\ncheeterbook\n\n\naojbook"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar book=[];\nfor(var i=0;i<n;i++)book[i]=arr.shift();\nvar q=arr.shift()-0;\nfor(var i=0;i<q;i++){\n   if(i!=0)console.log(\"\");\n   var ans=[];\n   var v=arr.shift().split(\" \");\n   var a=v[0];\n   var b=v[1];\n   var c=(v[2]!=\"*\")?(new Date(v[2])).getTime():\"*\";\n   var d=(v[3]!=\"*\")?(new Date(v[3])).getTime():\"*\";\n   book.forEach(function(V){\n      V=V.split(\" \");\n      var A=V[0];\n      var B=V[1];\n      var C=(new Date(V[2])).getTime();\n      var flag=true;\n      if(a!=\"*\"){\n         var regex = new RegExp(a);\n         if(regex.test(A)==false)flag=false;\n      }\n      if(b!=\"*\"){\n         var regex = new RegExp(b);\n         if(regex.test(B)==false)flag=false;\n      }\n      if(c!=\"*\"){\n         if(c>C)flag=false;\n      }\n      if(d!=\"*\"){\n         if(d<C)flag=false;\n      }\n      if(flag)ans.push(A);\n   });\n   ans.forEach(function(value){\n       console.log(value);\n   });\n}", "language": "JavaScript"}
{"filename": "p01772_1", "type": "JavaScript", "obfuscated": "var a0_0x3de134 = a0_0x2ef6;\nvar input = require('fs')[a0_0x3de134(0x0)](a0_0x3de134(0x1), a0_0x3de134(0x2));\nfunction a0_0x2ef6(GIqHDA, key) {\n    var stringArray = a0_0x4589();\n    a0_0x2ef6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2ef6(GIqHDA, key);\n}\nvar str = input[a0_0x3de134(0x3)]();\nvar a = ![];\nvar ans = '';\nfunction a0_0x4589() {\n    var _0x1c2ef1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'length',\n        'log'\n    ];\n    a0_0x4589 = function () {\n        return _0x1c2ef1;\n    };\n    return a0_0x4589();\n}\nfor (var i = 0x0; i < str[a0_0x3de134(0x4)]; i++) {\n    if (str[i] == 'A')\n        a = !![];\n    if (str[i] == 'Z' && a == !![]) {\n        a = ![];\n        ans += 'AZ';\n    }\n}\nif (ans == '')\n    ans = -0x1;\nconsole[a0_0x3de134(0x5)](ans);", "test_cases": [["AIZUNYANPEROPERO", "AZ"], ["AZAZ", "AZAZ"], ["ZDDYAZAWABDDZAZPIDDA", "AZAZAZ"], ["ZZZZAAAAAA", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str=input.trim();\nvar a=false;\nvar ans=\"\";\nfor(var i=0;i<str.length;i++){\n   if(str[i]==\"A\")a=true;\n   if(str[i]==\"Z\" && a==true){a=false;ans+=\"AZ\";}\n}\nif(ans==\"\")ans=-1;\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p01846_1", "type": "JavaScript", "obfuscated": "function a0_0x1aac(BegqxP, key) {\n    var stringArray = a0_0x136e();\n    a0_0x1aac = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1aac(BegqxP, key);\n}\nfunction a0_0x136e() {\n    var _0x242530 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'replace',\n        'repeat',\n        'map',\n        'join',\n        'log'\n    ];\n    a0_0x136e = function () {\n        return _0x242530;\n    };\n    return a0_0x136e();\n}\nvar a0_0x4ebfa2 = a0_0x1aac;\nvar input = require('fs')[a0_0x4ebfa2(0x0)](a0_0x4ebfa2(0x1), a0_0x4ebfa2(0x2));\nvar data = input['trim']()[a0_0x4ebfa2(0x3)]('\\x0a');\nwhile (!![]) {\n    var str = data[a0_0x4ebfa2(0x4)]();\n    if (str == '#')\n        break;\n    str = str[a0_0x4ebfa2(0x5)](/\\d/g, function (v) {\n        var _0x41140b = a0_0x1aac;\n        return 'n'[_0x41140b(0x6)](v - 0x0);\n    });\n    var arr = str[a0_0x4ebfa2(0x3)]('/');\n    arr = arr[a0_0x4ebfa2(0x7)](v => v[a0_0x4ebfa2(0x3)](''));\n    var [a, b, c, d] = data[a0_0x4ebfa2(0x4)]()[a0_0x4ebfa2(0x3)]('\\x20')[a0_0x4ebfa2(0x7)](Number);\n    arr[a - 0x1][b - 0x1] = 'n';\n    arr[c - 0x1][d - 0x1] = 'b';\n    arr = arr['map'](v => v['join'](''));\n    str = arr[a0_0x4ebfa2(0x8)]('/');\n    str = str[a0_0x4ebfa2(0x5)](/n+/g, function (v) {\n        return v['length'];\n    });\n    console[a0_0x4ebfa2(0x9)](str);\n}", "test_cases": [["b1/1b\n1 1 1 2\nb5/bbbbbb\n2 4 1 4\nb2b2b/7\n1 4 2 4\n#", "1b/1b\nb2b2/bbb1bb\nb5b/3b3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar data = input.trim().split(\"\\n\");\nwhile (true) {\n   var str = data.shift();\n   if(str==\"#\")break;\n   str=str.replace(/\\d/g,function(v){\n      return \"n\".repeat(v-0);\n   });\n   var arr = str.split(\"/\");\n   arr = arr.map(v=> v.split(\"\"));\n   var [a,b,c,d] = data.shift().split(\" \").map(Number);\n   arr[a-1][b-1]=\"n\";\n   arr[c-1][d-1]=\"b\";\n   arr = arr.map(v=> v.join(\"\"));\n   str = arr.join(\"/\");\n   str=str.replace(/n+/g,function(v){\n      return v.length;\n   });\n   console.log(str);\n}\n", "language": "JavaScript"}
{"filename": "p01872_1", "type": "JavaScript", "obfuscated": "var a0_0x35567a = a0_0x76ee;\nvar input = require('fs')[a0_0x35567a(0x0)](a0_0x35567a(0x1), a0_0x35567a(0x2));\nfunction a0_0x1a32() {\n    var _0x808963 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'replace',\n        'split',\n        'map',\n        'reverse',\n        'length',\n        'log',\n        'MULTIPLE'\n    ];\n    a0_0x1a32 = function () {\n        return _0x808963;\n    };\n    return a0_0x1a32();\n}\nvar str = input[a0_0x35567a(0x3)]();\nvar ans = '';\nfor (var j = 0x0; j <= 0x9; j++) {\n    var arr = str[a0_0x35567a(0x4)](/\\?/, j)[a0_0x35567a(0x5)]('')[a0_0x35567a(0x6)](Number)[a0_0x35567a(0x7)]();\n    var sum = 0x0;\n    for (var i = 0x1; i <= 0x6; i++)\n        sum += arr[i] * (i + 0x1);\n    for (var i = 0x7; i <= 0xb; i++)\n        sum += arr[i] * (i - 0x5);\n    var p = 0xb - sum % 0xb;\n    if (sum % 0xb <= 0x1)\n        p = 0x0;\n    ans += p == arr[0x0] ? j : '';\n}\nfunction a0_0x76ee(fJbxwj, key) {\n    var stringArray = a0_0x1a32();\n    a0_0x76ee = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x76ee(fJbxwj, key);\n}\nif (ans[a0_0x35567a(0x8)] == 0x1)\n    console[a0_0x35567a(0x9)](ans[0x0]);\nelse\n    console['log'](a0_0x35567a(0xa));", "test_cases": [["?12345678901", "4"], ["2016030810?0", "MULTIPLE"], ["20160308100?", "0"], ["0012300?0450", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str = input.trim();\nvar ans = \"\";\nfor(var j=0;j<=9;j++){\n   var arr = str.replace(/\\?/,j).split(\"\").map(Number).reverse();\n   var sum = 0;\n   for(var i=1;i<=6;i++) sum+=arr[i]*(i+1);\n   for(var i=7;i<=11;i++)sum+=arr[i]*(i-5);\n   var p =11-(sum%11);\n   if(sum%11<=1)p=0;\n   ans += (p==arr[0])? j : \"\";\n}\nif(ans.length==1)console.log(ans[0]);\nelse console.log(\"MULTIPLE\");\n", "language": "JavaScript"}
{"filename": "p01898_1", "type": "JavaScript", "obfuscated": "var a0_0x4d1af8 = a0_0x595b;\nvar input = require('fs')['readFileSync'](a0_0x4d1af8(0x0), 'utf8');\nvar arr = input[a0_0x4d1af8(0x1)]()[a0_0x4d1af8(0x2)]('\\x0a');\nvar [m, n] = arr['shift']()[a0_0x4d1af8(0x2)]('\\x20')[a0_0x4d1af8(0x3)](Number);\nvar yx = [];\nfunction a0_0x5b09() {\n    var _0x4ee0e4 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'push',\n        'shift',\n        'forEach',\n        'log',\n        'join',\n        'length'\n    ];\n    a0_0x5b09 = function () {\n        return _0x4ee0e4;\n    };\n    return a0_0x5b09();\n}\nfor (var i = 0x0; i < m; i++)\n    yx[a0_0x4d1af8(0x4)](arr[a0_0x4d1af8(0x5)]()[a0_0x4d1af8(0x2)](''));\nfunction a0_0x595b(USLJRt, key) {\n    var stringArray = a0_0x5b09();\n    a0_0x595b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x595b(USLJRt, key);\n}\nvar memo = [];\nfor (var i = 0x0; i < m; i++) {\n    for (var j = 0x0; j < n; j++) {\n        if (i == 0x0)\n            memo[a0_0x4d1af8(0x4)]([\n                i,\n                j\n            ]);\n        if (yx[i][j] == 'o') {\n            [\n                [\n                    0x0,\n                    -0x1\n                ],\n                [\n                    0x0,\n                    0x1\n                ]\n            ][a0_0x4d1af8(0x6)](v => {\n                var _0x3869fd = a0_0x595b;\n                var y = i + v[0x0];\n                var x = j + v[0x1];\n                if ((y < 0x0 || x < 0x0 || y >= m || x >= n) == ![])\n                    memo[_0x3869fd(0x4)]([\n                        y,\n                        x\n                    ]);\n            });\n        } else if (yx[i][j] == 'x') {\n            for (var ii = -0x1; ii <= 0x1; ii++)\n                for (var jj = -0x1; jj <= 0x1; jj++) {\n                    if (ii == 0x0 && jj == 0x0)\n                        continue;\n                    var y = i + ii;\n                    var x = j + jj;\n                    if (y < 0x0 || x < 0x0 || y >= m || x >= n)\n                        continue;\n                    memo[a0_0x4d1af8(0x4)]([\n                        y,\n                        x\n                    ]);\n                }\n        }\n    }\n}\nmemo[a0_0x4d1af8(0x6)](v => {\n    yx[v[0x0]][v[0x1]] = 'b';\n});\nconsole[a0_0x4d1af8(0x7)](yx[a0_0x4d1af8(0x8)]('')['replace'](/[^-]/g, '')[a0_0x4d1af8(0x9)]);", "test_cases": [["5 5\n--o--\n--xo-\n--x--\no---x\n--xoo", "3"], ["2 6\n--oooo\nx--o--", "1"], ["3 5\n-----\n-----\n-----", "10"], ["4 6\no-oxoo\noo-ooo\noooxo-\no-ooox", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar [m,n]=arr.shift().split(\" \").map(Number);\nvar yx=[];\nfor(var i=0;i<m;i++)yx.push(arr.shift().split(\"\"));\nvar memo=[];\nfor(var i=0;i<m;i++){\n   for(var j=0;j<n;j++){\n      if(i==0)memo.push([i,j]);\n      if(yx[i][j]==\"o\"){\n         [[0,-1],[0,1]].forEach(v=>{\n            var y=i+v[0];\n            var x=j+v[1];\n            if((y<0 || x<0 || y>=m || x>=n)==false)memo.push([y,x]);\n         });\n      }else if(yx[i][j]==\"x\"){\n         for(var ii=-1;ii<=1;ii++)for(var jj=-1;jj<=1;jj++){\n            if(ii==0 && jj==0)continue;\n            var y=i+ii;\n            var x=j+jj;\n            if(y<0 || x<0 || y>=m || x>=n)continue;\n            memo.push([y,x]);\n         }\n      }\n   }\n}\nmemo.forEach(v=>{\n   yx[v[0]][v[1]]=\"b\";\n});\nconsole.log(yx.join(\"\").replace(/[^-]/g,\"\").length);\n", "language": "JavaScript"}
{"filename": "p01899_1", "type": "JavaScript", "obfuscated": "var a0_0x22f0b0 = a0_0x4abd;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x22f0b0(0x0));\nvar arr = input[a0_0x22f0b0(0x1)]()['split']('\\x0a');\nfunction a0_0x4abd(iIySVC, key) {\n    var stringArray = a0_0x1f04();\n    a0_0x4abd = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4abd(iIySVC, key);\n}\nvar [n, d] = arr['shift']()['split']('\\x20')['map'](Number);\nvar p = arr[a0_0x22f0b0(0x2)]()[a0_0x22f0b0(0x3)]('\\x20')[a0_0x22f0b0(0x4)](Number);\nvar sum = 0x0;\np[a0_0x22f0b0(0x5)](v => {\n    var _0x189985 = a0_0x4abd;\n    sum += Math[_0x189985(0x6)](0x0, v - d);\n});\nfunction a0_0x1f04() {\n    var _0x2ca5d2 = [\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'max',\n        'log',\n        'kusoge'\n    ];\n    a0_0x1f04 = function () {\n        return _0x2ca5d2;\n    };\n    return a0_0x1f04();\n}\nconsole[a0_0x22f0b0(0x7)](sum == 0x0 ? a0_0x22f0b0(0x8) : sum);", "test_cases": [["5 130\n130 170 100 120 140", "50"], ["3 100\n100 90 65", "kusoge"], ["6 210\n300 270 400 330 250 370", "660"], ["4 540\n100 460 320 280", "kusoge"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar [n,d]=arr.shift().split(\" \").map(Number);\nvar p=arr.shift().split(\" \").map(Number);\nvar sum=0;\np.forEach(v=>{\n   sum+=Math.max(0,v-d);\n});\nconsole.log((sum==0)?\"kusoge\":sum);\n", "language": "JavaScript"}
{"filename": "p01916_1", "type": "JavaScript", "obfuscated": "var a0_0x297c32 = a0_0x4de5;\nfunction a0_0x4de5(CADJCP, key) {\n    var stringArray = a0_0x24e7();\n    a0_0x4de5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4de5(CADJCP, key);\n}\nvar input = require('fs')[a0_0x297c32(0x0)](a0_0x297c32(0x1), 'utf8');\nvar arr = input['trim']()[a0_0x297c32(0x2)]('\\x0a');\nvar s = arr[0x0][a0_0x297c32(0x2)]('');\nfor (var i = 0x0; i < s['length']; i++) {\n    for (var j = i + 0x1; j < s[a0_0x297c32(0x3)]; j++) {\n        if (s[i] == s[j]) {\n            s[i] = '';\n            s[j] = '';\n            break;\n        }\n    }\n}\nvar n = s[a0_0x297c32(0x4)]('')[a0_0x297c32(0x3)];\nfunction a0_0x24e7() {\n    var _0x1fa8a9 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'length',\n        'join'\n    ];\n    a0_0x24e7 = function () {\n        return _0x1fa8a9;\n    };\n    return a0_0x24e7();\n}\nif (n == 0x0 || n == 0x1)\n    console['log'](0x0);\nelse if (n % 0x2 == 0x0)\n    console['log'](n / 0x2);\nelse\n    console['log']((n - 0x1) / 0x2);", "test_cases": [["hcpc", "1"], ["ritscamp", "4"], ["nakawawakana", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar s=arr[0].split(\"\");\n\nfor(var i=0;i<s.length;i++){\nfor(var j=i+1;j<s.length;j++){\n   if(s[i]==s[j]){\n      s[i]=\"\";\n      s[j]=\"\";\n      break;\n   }\n}\n}\nvar n=s.join(\"\").length;\nif(n==0 || n==1)console.log(0);\nelse if(n%2==0)console.log(n/2);\nelse console.log((n-1)/2);\n", "language": "JavaScript"}
{"filename": "p01923_1", "type": "JavaScript", "obfuscated": "var a0_0xba455a = a0_0x2f31;\nfunction a0_0x2f31(QqIdTc, key) {\n    var stringArray = a0_0x42c2();\n    a0_0x2f31 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f31(QqIdTc, key);\n}\nvar input = require('fs')[a0_0xba455a(0x0)](a0_0xba455a(0x1), a0_0xba455a(0x2));\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (arr[0x0] == a0_0xba455a(0x3))\n        break;\n    var nm = arr[a0_0xba455a(0x4)]()['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var max = [];\n    for (var i = 0x0; i < m; i++)\n        max[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var dv = arr[a0_0xba455a(0x4)]()[a0_0xba455a(0x5)]('\\x20')[a0_0xba455a(0x6)](Number);\n        var d = dv[0x0] - 0x1;\n        var v = dv[0x1];\n        if (max[d] < v)\n            max[d] = v;\n    }\n    var sum = 0x0;\n    for (var i = 0x0; i < m; i++)\n        sum += max[i];\n    console[a0_0xba455a(0x7)](sum);\n}\nfunction a0_0x42c2() {\n    var _0x535921 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        '0\\x200',\n        'shift',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x42c2 = function () {\n        return _0x535921;\n    };\n    return a0_0x42c2();\n}", "test_cases": [["5 3\n1 1\n2 3\n3 2\n3 5\n2 1\n4 2\n1 7\n2 1\n1 3\n1 5\n6 1\n1 3\n1 2\n1 8\n1 2\n1 7\n1 6\n20 9\n4 10\n2 4\n5 3\n6 6\n6 3\n7 4\n8 10\n4 6\n7 5\n1 8\n5 7\n1 5\n6 6\n9 9\n5 8\n6 7\n1 4\n6 4\n7 10\n3 5\n19 6\n4 1\n6 5\n5 10\n1 10\n3 10\n4 6\n2 3\n5 4\n2 10\n1 8\n3 4\n3 1\n5 4\n1 10\n1 3\n5 6\n5 2\n1 10\n2 3\n0 0", "9\n8\n8\n71\n51"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   if (arr[0] == \"0 0\") break;\n   var nm = arr.shift().split(\" \").map(Number);\n   var n = nm[0];\n   var m = nm[1];\n   var max = [];\n   for (var i = 0; i < m; i++) max[i] = 0;\n   for (var i = 0; i < n; i++) {\n      var dv = arr.shift().split(\" \").map(Number);\n      var d = dv[0] - 1;\n      var v = dv[1];\n      if (max[d] < v) max[d] = v;\n   }\n   var sum = 0;\n   for (var i = 0; i < m; i++) sum += max[i];\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01925_1", "type": "JavaScript", "obfuscated": "function a0_0x2994(SweHaK, key) {\n    var stringArray = a0_0x277d();\n    a0_0x2994 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2994(SweHaK, key);\n}\nvar a0_0x1de81d = a0_0x2994;\nvar input = require('fs')[a0_0x1de81d(0x0)](a0_0x1de81d(0x1), 'utf8');\nvar arr = input[a0_0x1de81d(0x2)]()[a0_0x1de81d(0x3)]('\\x0a');\nfunction a0_0x277d() {\n    var _0x54b195 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        '0\\x200',\n        'shift',\n        'map',\n        'forEach',\n        'max',\n        'log'\n    ];\n    a0_0x277d = function () {\n        return _0x54b195;\n    };\n    return a0_0x277d();\n}\nwhile (!![]) {\n    if (arr[0x0] == a0_0x1de81d(0x4))\n        break;\n    var nm = arr['shift']()[a0_0x1de81d(0x3)]('\\x20')['map'](Number);\n    var point = [];\n    for (var i = 0x0; i < nm[0x0]; i++)\n        point[i] = [\n            0x0,\n            0x0\n        ];\n    for (var i = 0x0; i < nm[0x1]; i++) {\n        var c = arr[a0_0x1de81d(0x5)]()['split']('\\x20')[a0_0x1de81d(0x6)](Number);\n        var s = c[a0_0x1de81d(0x5)]();\n        var k = c[a0_0x1de81d(0x5)]();\n        if (k == 0x1)\n            point[c[0x0] - 0x1][0x0] += s;\n        c[a0_0x1de81d(0x7)](function (v, i) {\n            point[v - 0x1][0x1] += s;\n        });\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < nm[0x0]; i++) {\n        for (var j = 0x0; j < nm[0x0]; j++) {\n            if (i == j)\n                continue;\n            max = Math[a0_0x1de81d(0x8)](max, point[i][0x1] - point[j][0x0]);\n        }\n    }\n    console[a0_0x1de81d(0x9)](max + 0x1);\n}", "test_cases": [["3 2\n5 2 1 3\n8 2 2 3\n2 3\n8 2 1 2\n3 1 1\n5 1 2\n2 5\n100 1 1\n100 1 1\n100 1 1\n100 1 1\n100 1 1\n3 4\n5 1 1\n5 1 2\n100 2 1 3\n100 2 2 3\n0 0", "14\n11\n501\n196"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   if (arr[0] == \"0 0\") break;\n   var nm = arr.shift().split(\" \").map(Number);\n   var point = [];\n   for (var i = 0; i < nm[0]; i++) point[i] = [0, 0];\n   for (var i = 0; i < nm[1]; i++) {\n      var c = arr.shift().split(\" \").map(Number);\n      var s = c.shift();\n      var k = c.shift();\n      if (k == 1) point[c[0] - 1][0] += s;\n      c.forEach(function(v, i) {\n         point[v - 1][1] += s;\n      });\n   }\n   var max = 0;\n   for (var i = 0; i < nm[0]; i++) {\n      for (var j = 0; j < nm[0]; j++) {\n         if (i == j) continue;\n         max = Math.max(max, point[i][1] - point[j][0]);\n      }\n   }\n   console.log(max + 1);\n}", "language": "JavaScript"}
{"filename": "p01938_1", "type": "JavaScript", "obfuscated": "var a0_0x2f0a57 = a0_0x3e8f;\nvar input = require('fs')['readFileSync'](a0_0x2f0a57(0x0), a0_0x2f0a57(0x1));\nvar s = input['trim']()[a0_0x2f0a57(0x2)]('');\nfunction a0_0x1e8b() {\n    var _0x566cdd = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x1e8b = function () {\n        return _0x566cdd;\n    };\n    return a0_0x1e8b();\n}\nvar abc = a0_0x2f0a57(0x3)['split']('');\nfunction a0_0x3e8f(uxCjhq, key) {\n    var stringArray = a0_0x1e8b();\n    a0_0x3e8f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3e8f(uxCjhq, key);\n}\ns = s[a0_0x2f0a57(0x4)](v => abc['indexOf'](v));\nvar cnt = 0x0;\nvar memo = 0x0;\ns[a0_0x2f0a57(0x5)](v => {\n    if (memo >= v)\n        cnt++;\n    memo = v;\n});\nconsole[a0_0x2f0a57(0x6)](cnt);", "test_cases": [["AIZU", "2"], ["HOKKAIDO", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim().split(\"\");\nvar abc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\ns = s.map(v=> abc.indexOf(v));\nvar cnt = 0;\nvar memo = 0;\ns.forEach(v=>{\n   if(memo >= v)cnt++;\n   memo = v;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p01967_1", "type": "JavaScript", "obfuscated": "var a0_0x38a240 = a0_0x1041;\nvar input = require('fs')[a0_0x38a240(0x0)](a0_0x38a240(0x1), a0_0x38a240(0x2));\nvar arr = input[a0_0x38a240(0x3)]()['split']('\\x0a');\nfunction a0_0x1041(ZttAJn, key) {\n    var stringArray = a0_0x11b0();\n    a0_0x1041 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1041(ZttAJn, key);\n}\narr = arr[a0_0x38a240(0x4)](v => v['split']('\\x20')[a0_0x38a240(0x4)](Number));\nvar n = arr[a0_0x38a240(0x5)]();\nvar c = arr['shift']();\nfunction a0_0x11b0() {\n    var _0x5d5040 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'map',\n        'shift',\n        'length',\n        'log'\n    ];\n    a0_0x11b0 = function () {\n        return _0x5d5040;\n    };\n    return a0_0x11b0();\n}\nvar q = arr[a0_0x38a240(0x5)]();\nvar apple = [];\nfor (var i = 0x0; i <= n; i++)\n    apple[i] = 0x0;\nvar ans = 0x0;\nfor (var i = 0x0; i < arr[a0_0x38a240(0x6)]; i++) {\n    var [t, x, d] = arr[i];\n    if (t == 0x1) {\n        apple[x] += d;\n        if (c[x - 0x1] < apple[x]) {\n            ans = x;\n            break;\n        }\n    } else {\n        if (apple[x] < d) {\n            ans = x;\n            break;\n        } else {\n            apple[x] -= d;\n        }\n    }\n}\nconsole[a0_0x38a240(0x7)](ans);", "test_cases": [["2\n3 3\n4\n1 1 2\n1 2 3\n2 1 3\n2 2 3", "1"], ["2\n3 3\n4\n1 1 3\n2 1 2\n1 2 3\n1 1 3", "1"], ["3\n3 4 5\n4\n1 1 3\n1 2 3\n1 3 5\n2 2 2", "0"], ["6\n28 56 99 3 125 37\n10\n1 1 10\n1 1 14\n1 3 90\n1 5 10\n2 3 38\n2 1 5\n1 3 92\n1 6 18\n2 5 9\n2 1 4", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\narr=arr.map(v=>v.split(\" \").map(Number));\nvar n = arr.shift();\nvar c=arr.shift();\nvar q = arr.shift();\nvar apple = [];\nfor(var i=0;i<=n;i++)apple[i]=0;\nvar ans=0;\nfor(var i=0;i<arr.length;i++){\n   var [t,x,d]=arr[i];\n   if(t==1){\n      apple[x]+=d;\n      if(c[x - 1] <apple[x]){\n         ans=x;\n         break;\n      }\n   } else {\n      if(apple[x]<d){\n         ans=x;\n         break;\n      }else{\n         apple[x]-=d;\n      }\n   }\n}\nconsole.log(ans);\n\n", "language": "JavaScript"}
{"filename": "p01981_1", "type": "JavaScript", "obfuscated": "function a0_0x5ee2(UQdOpx, key) {\n    var stringArray = a0_0x498d();\n    a0_0x5ee2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ee2(UQdOpx, key);\n}\nvar a0_0x2b3efa = a0_0x5ee2;\nvar input = require('fs')[a0_0x2b3efa(0x0)](a0_0x2b3efa(0x1), a0_0x2b3efa(0x2));\nvar arr = input[a0_0x2b3efa(0x3)]()[a0_0x2b3efa(0x4)]('\\x0a');\nfunction a0_0x498d() {\n    var _0x1a797c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x498d = function () {\n        return _0x1a797c;\n    };\n    return a0_0x498d();\n}\nwhile (!![]) {\n    var gymd = arr['shift']();\n    if (gymd == '#')\n        break;\n    var [g, y, m, d] = gymd[a0_0x2b3efa(0x4)]('\\x20');\n    [y, m, d] = [\n        y - 0x0,\n        m - 0x0,\n        d - 0x0\n    ];\n    if (y <= 0x1e || y == 0x1f && m <= 0x4)\n        console['log'](gymd);\n    else {\n        y = y - 0x1e;\n        console[a0_0x2b3efa(0x5)]('?\\x20' + y + '\\x20' + m + '\\x20' + d);\n    }\n}", "test_cases": [["HEISEI 1 1 8\nHEISEI 31 4 30\nHEISEI 31 5 1\nHEISEI 99 12 31\nHEISEI 38 8 30\nHEISEI 98 2 22\nHEISEI 2 3 26\nHEISEI 28 4 23\n#", "HEISEI 1 1 8\nHEISEI 31 4 30\n? 1 5 1\n? 69 12 31\n? 8 8 30\n? 68 2 22\nHEISEI 2 3 26\nHEISEI 28 4 23"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nwhile(true){\n   var gymd = arr.shift();\n   if(gymd==\"#\")break;\n   var [g, y, m, d]=gymd.split(\" \");\n   [y,m,d]=[y-0,m-0,d-0];\n   if(y<=30 || y==31 && m<=4)console.log(gymd);\n   else {\n      y=y-30;\n      console.log(\"? \"+y+\" \"+m+\" \"+d);\n   }\n}\n", "language": "JavaScript"}
{"filename": "p01982_1", "type": "JavaScript", "obfuscated": "var a0_0x1ce7cb = a0_0x4e71;\nvar input = require('fs')[a0_0x1ce7cb(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x2f3b() {\n    var _0x261acb = [\n        'readFileSync',\n        'trim',\n        'split',\n        'join',\n        '000',\n        'push',\n        'shift',\n        'length',\n        'log'\n    ];\n    a0_0x2f3b = function () {\n        return _0x261acb;\n    };\n    return a0_0x2f3b();\n}\nvar arr = input[a0_0x1ce7cb(0x1)]()[a0_0x1ce7cb(0x2)]('\\x0a');\nfunction a0_0x4e71(oRRmgo, key) {\n    var stringArray = a0_0x2f3b();\n    a0_0x4e71 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4e71(oRRmgo, key);\n}\nwhile (!![]) {\n    var nlr = arr['shift']()['split']('\\x20')['map'](Number);\n    if (nlr[a0_0x1ce7cb(0x3)]('') == a0_0x1ce7cb(0x4))\n        break;\n    var [n, l, r] = [\n        nlr[0x0],\n        nlr[0x1],\n        nlr[0x2]\n    ];\n    var A = [];\n    for (var i = 0x0; i < n; i++)\n        A[a0_0x1ce7cb(0x5)](arr[a0_0x1ce7cb(0x6)]() - 0x0);\n    var cnt = 0x0;\n    for (var x = l; x <= r; x++) {\n        var flag = !![];\n        for (var i = 0x0; i < A[a0_0x1ce7cb(0x7)]; i++) {\n            if (x % A[i] == 0x0) {\n                flag = ![];\n                if ((i + 0x1) % 0x2 != 0x0)\n                    cnt++;\n                break;\n            }\n        }\n        if (flag && n % 0x2 == 0x0)\n            cnt++;\n    }\n    console[a0_0x1ce7cb(0x8)](cnt);\n}", "test_cases": [["3 1988 2014\n400\n100\n4\n1 1000 1999\n1\n2 1111 3333\n2\n2\n6 2000 3000\n5\n7\n11\n9\n3\n13\n0 0 0", "7\n1000\n2223\n785"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nlr=arr.shift().split(\" \").map(Number);\n   if(nlr.join(\"\")==\"000\")break;\n   var [n,l,r]=[nlr[0],nlr[1],nlr[2]];\n   var A = [];\n   for(var i=0;i<n;i++) A.push(arr.shift()-0);\n   var cnt=0;\n   for(var x=l;x<=r;x++){\n      var flag=true;\n      for(var i=0;i<A.length;i++){\n         if(x%A[i]==0){\n            flag=false;\n            if ((i+1)%2!=0)cnt++;\n            break;\n         }\n      }\n      if(flag && n%2==0)cnt++;\n   }  \n   console.log(cnt);\n}\n", "language": "JavaScript"}
{"filename": "p02017_1", "type": "JavaScript", "obfuscated": "function a0_0x3da4() {\n    var _0x2a8153 = [\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x3da4 = function () {\n        return _0x2a8153;\n    };\n    return a0_0x3da4();\n}\nvar a0_0x35e2d7 = a0_0x485d;\nfunction a0_0x485d(aBSgPf, key) {\n    var stringArray = a0_0x3da4();\n    a0_0x485d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x485d(aBSgPf, key);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x35e2d7(0x0));\nvar [a, b, c, d] = input[a0_0x35e2d7(0x1)]()[a0_0x35e2d7(0x2)]('\\x20')[a0_0x35e2d7(0x3)](Number);\nif (a * b % 0x2 != 0x0 && (c + d) % 0x2 != 0x0)\n    console[a0_0x35e2d7(0x4)]('No');\nelse\n    console['log']('Yes');", "test_cases": [["3 5 1 4", "No"], ["3 5 2 4", "Yes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,c,d] = input.trim().split(\" \").map(Number);\nif((a*b)%2!=0 && (c+d)%2!=0)console.log(\"No\");\nelse console.log(\"Yes\");\n\n", "language": "JavaScript"}
{"filename": "p02018_1", "type": "JavaScript", "obfuscated": "var a0_0x5128fa = a0_0x8039;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x5128fa(0x0));\ninput = input[a0_0x5128fa(0x1)]()['split']('\\x0a');\narr = input[0x1][a0_0x5128fa(0x2)]('\\x20')[a0_0x5128fa(0x3)](Number);\nfunction a0_0x5d31() {\n    var _0x163458 = [\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'filter',\n        'log',\n        'length'\n    ];\n    a0_0x5d31 = function () {\n        return _0x163458;\n    };\n    return a0_0x5d31();\n}\narr = arr[a0_0x5128fa(0x4)](v => v % 0x2 == 0x0);\nfunction a0_0x8039(FvBPWz, key) {\n    var stringArray = a0_0x5d31();\n    a0_0x8039 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x8039(FvBPWz, key);\n}\nconsole[a0_0x5128fa(0x5)](arr[a0_0x5128fa(0x6)]);", "test_cases": [["5\n4 3 5 2 6", "3"], ["3\n2 2 2", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput = input.trim().split(\"\\n\")\narr = input[1].split(\" \").map(Number);\narr = arr.filter(v=> v%2==0);\nconsole.log(arr.length);\n", "language": "JavaScript"}
{"filename": "p02019_1", "type": "JavaScript", "obfuscated": "var a0_0x46c6b2 = a0_0x5e1b;\nvar input = require('fs')[a0_0x46c6b2(0x0)](a0_0x46c6b2(0x1), 'utf8');\nvar [n, a, b, c] = input['trim']()[a0_0x46c6b2(0x2)]('\\x20')[a0_0x46c6b2(0x3)](Number);\nconsole[a0_0x46c6b2(0x4)](n - a - b + c);\nfunction a0_0x5e1b(PwSCRa, key) {\n    var stringArray = a0_0x4cc5();\n    a0_0x5e1b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e1b(PwSCRa, key);\n}\nfunction a0_0x4cc5() {\n    var _0x267564 = [\n        'readFileSync',\n        '/dev/stdin',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x4cc5 = function () {\n        return _0x267564;\n    };\n    return a0_0x4cc5();\n}", "test_cases": [["6 3 2 1", "2"], ["10 9 9 9", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,a,b,c]= input.trim().split(\" \").map(Number);\nconsole.log(n-a-b+c);\n", "language": "JavaScript"}
{"filename": "p02020_1", "type": "JavaScript", "obfuscated": "function a0_0x41bc(ATRXjC, key) {\n    var stringArray = a0_0x12d4();\n    a0_0x41bc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x41bc(ATRXjC, key);\n}\nvar a0_0x15732a = a0_0x41bc;\nvar input = require('fs')['readFileSync'](a0_0x15732a(0x0), 'utf8');\nvar [n, arr] = input[a0_0x15732a(0x1)]()[a0_0x15732a(0x2)]('\\x0a');\narr = arr[a0_0x15732a(0x2)]('\\x20')[a0_0x15732a(0x3)](Number);\narr[a0_0x15732a(0x4)](function (a, b) {\n    return a - b;\n});\nfunction a0_0x12d4() {\n    var _0x2285a1 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'map',\n        'sort',\n        'log'\n    ];\n    a0_0x12d4 = function () {\n        return _0x2285a1;\n    };\n    return a0_0x12d4();\n}\nvar sum = arr['reduce'](function (a, b) {\n    return a + b;\n});\nif (sum % 0x2 == 0x0)\n    console[a0_0x15732a(0x5)](sum / 0x2);\nelse {\n    for (var i = 0x0; i < arr['length']; i++) {\n        if (arr[i] % 0x2 == 0x1) {\n            console[a0_0x15732a(0x5)]((sum - arr[i]) / 0x2);\n            break;\n        }\n    }\n}", "test_cases": [["5\n2 3 5 6 7", "10"], ["4\n3 5 6 8", "11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,arr]= input.trim().split(\"\\n\");\narr=arr.split(\" \").map(Number);\narr.sort(function(a,b){\n   return a-b;\n});\nvar sum = arr.reduce(function(a,b){\n   return a+b;\n});\nif(sum%2==0)console.log(sum/2);\nelse {\n   for(var i=0;i<arr.length;i++){\n      if(arr[i]%2==1){\n         console.log((sum-arr[i])/2);\n         break;\n      }\n   }\n}\n", "language": "JavaScript"}
{"filename": "p02021_1", "type": "JavaScript", "obfuscated": "var a0_0x5177f6 = a0_0xaf1c;\nfunction a0_0xaf1c(WfmmDA, key) {\n    var stringArray = a0_0x1c5c();\n    a0_0xaf1c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xaf1c(WfmmDA, key);\n}\nvar input = require('fs')[a0_0x5177f6(0x0)](a0_0x5177f6(0x1), a0_0x5177f6(0x2));\nvar [n, arr] = input[a0_0x5177f6(0x3)]()[a0_0x5177f6(0x4)]('\\x0a');\narr = arr['split']('\\x20')[a0_0x5177f6(0x5)](Number);\nfor (var i = 0x1; i <= 0x64; i++) {\n    var sum = 0x0;\n    var flag = arr['every'](v => {\n        sum = sum + v - i;\n        return sum >= 0x0;\n    });\n    if (!flag)\n        break;\n}\nfunction a0_0x1c5c() {\n    var _0x267507 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x1c5c = function () {\n        return _0x267507;\n    };\n    return a0_0x1c5c();\n}\nconsole[a0_0x5177f6(0x6)](i - 0x1);", "test_cases": [["5\n4 2 5 3 1", "3"], ["5\n9 9 1 9 9", "6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,arr]= input.trim().split(\"\\n\");\narr=arr.split(\" \").map(Number);\nfor(var i=1;i<=100;i++){\n  var sum=0;\n  var flag = arr.every(v=>{\n     sum = sum + v - i;\n     return  (sum >= 0);\n  });\n  if(!flag)break;\n}\nconsole.log(i-1);\n", "language": "JavaScript"}
{"filename": "p02022_1", "type": "JavaScript", "obfuscated": "var a0_0x373509 = a0_0x1b12;\nvar input = require('fs')['readFileSync'](a0_0x373509(0x0), a0_0x373509(0x1));\nvar arr = input['trim']()['split']('\\x0a');\nfunction a0_0xb922() {\n    var _0x45aca8 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'reduce',\n        'map',\n        'log'\n    ];\n    a0_0xb922 = function () {\n        return _0x45aca8;\n    };\n    return a0_0xb922();\n}\nvar A = arr[0x1][a0_0x373509(0x2)]('\\x20')['map'](Number)[a0_0x373509(0x3)]((a, b) => a + b);\nfunction a0_0x1b12(dmOkIN, key) {\n    var stringArray = a0_0xb922();\n    a0_0x1b12 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b12(dmOkIN, key);\n}\nvar B = arr[0x2][a0_0x373509(0x2)]('\\x20')[a0_0x373509(0x4)](Number)['reduce']((a, b) => a + b);\nconsole[a0_0x373509(0x5)](A * B);", "test_cases": [["3 2\n3 1 5\n2 4", "54"], ["10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10", "3025"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar A= arr[1].split(\" \").map(Number).reduce((a,b)=>a+b);\nvar B= arr[2].split(\" \").map(Number).reduce((a,b)=>a+b);\nconsole.log(A*B);\n", "language": "JavaScript"}
{"filename": "p02044_1", "type": "JavaScript", "obfuscated": "function a0_0x227b(gHqDHh, key) {\n    var stringArray = a0_0x32e1();\n    a0_0x227b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x227b(gHqDHh, key);\n}\nvar a0_0x129831 = a0_0x227b;\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [n, m] = arr[a0_0x129831(0x0)]()[a0_0x129831(0x1)]('\\x20')[a0_0x129831(0x2)](Number);\n    if (n == 0x0 && m == 0x0)\n        break;\n    var x = m / n;\n    var sum = 0x0;\n    var a = arr[a0_0x129831(0x0)]()[a0_0x129831(0x1)]('\\x20')[a0_0x129831(0x2)](Number);\n    a[a0_0x129831(0x3)](v => {\n        if (v >= x)\n            sum += x;\n        else\n            sum += v;\n    });\n    console[a0_0x129831(0x4)](sum);\n}\nfunction a0_0x32e1() {\n    var _0x35fd3c = [\n        'shift',\n        'split',\n        'map',\n        'forEach',\n        'log'\n    ];\n    a0_0x32e1 = function () {\n        return _0x35fd3c;\n    };\n    return a0_0x32e1();\n}", "test_cases": [["3 300\n120 100 80\n3 30\n10 20 5\n4 1000\n100 200 300 400\n5 5\n2523 8430 3 4199 632\n0 0", "280\n25\n800\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,m]=arr.shift().split(\" \").map(Number);\n   if(n==0 && m==0)break;\n   var x=m/n;\n   var sum=0;\n   var a=arr.shift().split(\" \").map(Number);\n   a.forEach(v=>{\n      if(v>=x)sum+=x;\n      else sum+=v;\n   });\n   console.log(sum);\n}\n", "language": "JavaScript"}
{"filename": "p02052_1", "type": "JavaScript", "obfuscated": "function a0_0x42be(CjNFoI, key) {\n    var stringArray = a0_0x173b();\n    a0_0x42be = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x42be(CjNFoI, key);\n}\nvar a0_0x1bcb7c = a0_0x42be;\nvar input = require('fs')[a0_0x1bcb7c(0x0)](a0_0x1bcb7c(0x1), a0_0x1bcb7c(0x2));\nfunction a0_0x173b() {\n    var _0x1ee7f6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'push',\n        'length',\n        'abs',\n        'max',\n        'log'\n    ];\n    a0_0x173b = function () {\n        return _0x1ee7f6;\n    };\n    return a0_0x173b();\n}\nvar arr = input[a0_0x1bcb7c(0x3)]()[a0_0x1bcb7c(0x4)]('\\x0a');\nvar [h, w] = arr[a0_0x1bcb7c(0x5)]()['split']('\\x20')[a0_0x1bcb7c(0x6)](Number);\nvar b = [];\nfor (var i = 0x0; i < h; i++) {\n    arr[a0_0x1bcb7c(0x5)]()['split']('')[a0_0x1bcb7c(0x7)]((v, j) => {\n        var _0xb29e92 = a0_0x42be;\n        if (v == 'B')\n            b[_0xb29e92(0x8)]([\n                i,\n                j\n            ]);\n    });\n}\nvar max = 0x0;\nfor (var i = 0x0; i < b[a0_0x1bcb7c(0x9)]; i++) {\n    for (var j = i + 0x1; j < b[a0_0x1bcb7c(0x9)]; j++) {\n        var d = Math[a0_0x1bcb7c(0xa)](b[i][0x0] - b[j][0x0]) + Math[a0_0x1bcb7c(0xa)](b[i][0x1] - b[j][0x1]);\n        max = Math[a0_0x1bcb7c(0xb)](max, d);\n    }\n}\nconsole[a0_0x1bcb7c(0xc)](max);", "test_cases": [["3 3\nB.B\n..B\n.BB", "4"], ["4 3\nB..\nB..\n...\n...", "1"], ["6 6\n...B..\nB.B.B.\n.B.B.B\n...B.B\n.B..B.\n..B...", "7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar b=[];\nfor(var i=0;i<h;i++){\n   arr.shift().split(\"\").forEach((v,j)=>{\n      if(v==\"B\")b.push([i,j]);\n   });\n}\nvar max=0;\nfor(var i=0;i<b.length;i++){\n   for(var j=i+1;j<b.length;j++){\n      var d=Math.abs(b[i][0]-b[j][0])+Math.abs(b[i][1]-b[j][1]);\n      max=Math.max(max,d);\n   }\n}\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02053_1", "type": "JavaScript", "obfuscated": "var a0_0x560f65 = a0_0x2605;\nfunction a0_0x2141() {\n    var _0x2bc067 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'forEach',\n        'push',\n        'length',\n        'abs',\n        'max',\n        'log'\n    ];\n    a0_0x2141 = function () {\n        return _0x2bc067;\n    };\n    return a0_0x2141();\n}\nvar input = require('fs')[a0_0x560f65(0x0)](a0_0x560f65(0x1), a0_0x560f65(0x2));\nvar arr = input[a0_0x560f65(0x3)]()[a0_0x560f65(0x4)]('\\x0a');\nvar [h, w] = arr[a0_0x560f65(0x5)]()[a0_0x560f65(0x4)]('\\x20')[a0_0x560f65(0x6)](Number);\nfunction a0_0x2605(xWhNph, key) {\n    var stringArray = a0_0x2141();\n    a0_0x2605 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2605(xWhNph, key);\n}\nvar b = [];\nfor (var i = 0x0; i < h; i++) {\n    var two = [];\n    arr[i][a0_0x560f65(0x4)]('')[a0_0x560f65(0x7)]((v, j) => {\n        var _0x1a8c60 = a0_0x2605;\n        if (v == 'B')\n            two[_0x1a8c60(0x8)]([\n                i,\n                j\n            ]);\n    });\n    if (two[a0_0x560f65(0x9)] == 0x1)\n        b[a0_0x560f65(0x8)](two[0x0]);\n    else if (two[a0_0x560f65(0x9)] >= 0x2)\n        b[a0_0x560f65(0x8)](two[0x0], two[two['length'] - 0x1]);\n}\nvar max = 0x0;\nfor (var i = 0x0; i < b[a0_0x560f65(0x9)]; i++) {\n    for (var j = i + 0x1; j < b[a0_0x560f65(0x9)]; j++) {\n        var d = Math[a0_0x560f65(0xa)](b[i][0x0] - b[j][0x0]) + Math['abs'](b[i][0x1] - b[j][0x1]);\n        max = Math[a0_0x560f65(0xb)](max, d);\n    }\n}\nconsole[a0_0x560f65(0xc)](max);", "test_cases": [["3 3\nB.B\n..B\n.BB", "4"], ["4 3\nB..\nB..\n...\n...", "1"], ["6 6\n...B..\nB.B.B.\n.B.B.B\n...B.B\n.B..B.\n..B...", "7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar b=[];\nfor(var i=0;i<h;i++){\n   var two=[];\n   arr[i].split(\"\").forEach((v,j)=>{\n      if(v==\"B\")two.push([i,j]);\n   });\n   if(two.length==1)b.push(two[0]);\n   else if(two.length>=2)b.push(two[0],two[two.length-1]);\n}\nvar max=0;\nfor(var i=0;i<b.length;i++){\n   for(var j=i+1;j<b.length;j++){\n      var d=Math.abs(b[i][0]-b[j][0])+Math.abs(b[i][1]-b[j][1]);\n      max=Math.max(max,d);\n   }\n}\nconsole.log(max);\n\n", "language": "JavaScript"}
{"filename": "p02060_1", "type": "JavaScript", "obfuscated": "var a0_0x1673f2 = a0_0x15f4;\nfunction a0_0x28ab() {\n    var _0x3ed221 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'min',\n        'log'\n    ];\n    a0_0x28ab = function () {\n        return _0x3ed221;\n    };\n    return a0_0x28ab();\n}\nvar input = require('fs')[a0_0x1673f2(0x0)]('/dev/stdin', a0_0x1673f2(0x1));\nvar arr = input['trim']()[a0_0x1673f2(0x2)]('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar p = arr[a0_0x1673f2(0x3)]()[a0_0x1673f2(0x2)]('\\x20')['map'](Number);\nvar t = arr[a0_0x1673f2(0x3)]()[a0_0x1673f2(0x2)]('\\x20')[a0_0x1673f2(0x4)](Number);\nvar s = [];\nfor (var i = 0x0; i <= 0xc8; i++)\n    s[i] = Infinity;\ns[0x0] = 0x0;\nfor (var i = 0x0; i <= 0x64; i++) {\n    if (s[i] == Infinity)\n        continue;\n    s[i + t[0x0]] = Math['min'](s[i] + p[0x0], s[i + t[0x0]]);\n    s[i + t[0x1]] = Math[a0_0x1673f2(0x5)](s[i] + p[0x1], s[i + t[0x1]]);\n    s[i + t[0x2]] = Math[a0_0x1673f2(0x5)](s[i] + p[0x2], s[i + t[0x2]]);\n    s[i + t[0x3]] = Math[a0_0x1673f2(0x5)](s[i] + p[0x3], s[i + t[0x3]]);\n}\nvar min = Infinity;\nfunction a0_0x15f4(ADhJfK, key) {\n    var stringArray = a0_0x28ab();\n    a0_0x15f4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x15f4(ADhJfK, key);\n}\nfor (var i = n; i <= 0xc8; i++)\n    min = Math[a0_0x1673f2(0x5)](min, s[i]);\nconsole[a0_0x1673f2(0x6)](min);", "test_cases": [["10\n1 2 3 4\n1 2 4 8", "6"], ["5\n2 9 9 8\n1 4 5 100", "8"], ["24\n2 3 4 7\n7 9 11 20", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar p=arr.shift().split(\" \").map(Number);\nvar t=arr.shift().split(\" \").map(Number);\nvar s=[];\nfor(var i=0;i<=200;i++)s[i]=Infinity;\ns[0]=0;\nfor(var i=0;i<=100;i++){\n   if(s[i]==Infinity)continue; \n   s[i+t[0]]=Math.min(s[i]+p[0],s[i+t[0]]);\n   s[i+t[1]]=Math.min(s[i]+p[1],s[i+t[1]]);\n   s[i+t[2]]=Math.min(s[i]+p[2],s[i+t[2]]);\n   s[i+t[3]]=Math.min(s[i]+p[3],s[i+t[3]]);\n}\nvar min=Infinity;\nfor(var i=n;i<=200;i++)min=Math.min(min,s[i]);\nconsole.log(min);\n", "language": "JavaScript"}
{"filename": "p02099_1", "type": "JavaScript", "obfuscated": "var a0_0x2a14ac = a0_0x4be9;\nvar input = require('fs')[a0_0x2a14ac(0x0)]('/dev/stdin', a0_0x2a14ac(0x1));\nvar arr = input[a0_0x2a14ac(0x2)]()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nfunction a0_0x4be9(ECbYCu, key) {\n    var stringArray = a0_0x2f84();\n    a0_0x4be9 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4be9(ECbYCu, key);\n}\narr = arr[a0_0x2a14ac(0x3)](v => v[a0_0x2a14ac(0x4)]('.', ''))['map'](Number);\nvar a = [];\nfor (var i = 0x0; i <= 0xfa0; i++)\n    a[i] = 0x0;\narr[a0_0x2a14ac(0x5)](v => a[v]++);\nvar ans = [];\nvar s = [];\ns[0x0] = a[0x0];\nfor (var i = 0x1; i <= 0xfa0; i++)\n    s[i] = s[i - 0x1] + a[i];\nfunction a0_0x2f84() {\n    var _0x5cca03 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'map',\n        'replace',\n        'forEach',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x2f84 = function () {\n        return _0x5cca03;\n    };\n    return a0_0x2f84();\n}\narr[a0_0x2a14ac(0x5)](v => {\n    var _0x3a7c73 = a0_0x4be9;\n    var point = 0x0;\n    point += a[v] - 0x1;\n    if (v != 0x0)\n        point += s[v - 0x1] * 0x3;\n    ans[_0x3a7c73(0x6)](point);\n});\nconsole[a0_0x2a14ac(0x7)](ans[a0_0x2a14ac(0x8)]('\\x0a'));", "test_cases": [["3\n1.000\n3.000\n3.000", "0\n4\n4"], ["3\n1.000\n2.000\n3.000", "0\n3\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\narr=arr.map(v=> v.replace(\".\",\"\")).map(Number);\nvar a=[];\nfor(var i=0;i<=4000;i++)a[i]=0;\narr.forEach(v=> a[v]++);\nvar ans=[];\nvar s=[];\ns[0]=a[0];\nfor(var i=1;i<=4000;i++)s[i]=s[i-1]+a[i];\narr.forEach(v=>{\n   var point=0;\n   point+=a[v]-1;\n   if(v!=0)point+=s[v-1]*3;\n   ans.push(point);\n});\nconsole.log(ans.join(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02111_1", "type": "JavaScript", "obfuscated": "function a0_0x5317(FbSOte, key) {\n    var stringArray = a0_0x3976();\n    a0_0x5317 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5317(FbSOte, key);\n}\nfunction a0_0x3976() {\n    var _0x452954 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'log'\n    ];\n    a0_0x3976 = function () {\n        return _0x452954;\n    };\n    return a0_0x3976();\n}\nvar a0_0x5e199c = a0_0x5317;\nvar input = require('fs')[a0_0x5e199c(0x0)]('/dev/stdin', a0_0x5e199c(0x1));\nvar x = input[a0_0x5e199c(0x2)]() - 0x0;\nvar time = 0xc * 0x3c / 0x168 * x;\nvar h = (time - time % 0x3c) / 0x3c;\nvar m = time % 0x3c;\nconsole[a0_0x5e199c(0x3)](h + '\\x20' + m);", "test_cases": [["0", "0 0"], ["45", "1 30"], ["100", "3 20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim()-0;\nvar time = 12*60/360 * x;\nvar h = (time - time%60) / 60;\nvar m = time % 60;\nconsole.log(h +\" \"+ m);\n", "language": "JavaScript"}
{"filename": "p02115_1", "type": "JavaScript", "obfuscated": "var a0_0x15f005 = a0_0x3136;\nvar input = require('fs')[a0_0x15f005(0x0)]('/dev/stdin', 'utf8');\nvar arr = input[a0_0x15f005(0x1)]()[a0_0x15f005(0x2)]('\\x0a')[a0_0x15f005(0x3)](Number);\nvar n = arr[a0_0x15f005(0x4)]();\nvar a = arr['shift']();\nfunction a0_0x5532() {\n    var _0x363114 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'map',\n        'shift',\n        'forEach',\n        'max'\n    ];\n    a0_0x5532 = function () {\n        return _0x363114;\n    };\n    return a0_0x5532();\n}\nvar cnt = 0x1;\nfunction a0_0x3136(MbkVDT, key) {\n    var stringArray = a0_0x5532();\n    a0_0x3136 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3136(MbkVDT, key);\n}\nvar max = 0x1;\nvar memo = 0x0;\narr[a0_0x15f005(0x5)](v => {\n    var _0x5c7f44 = a0_0x3136;\n    if (a > v) {\n        if (memo == 0x1)\n            cnt = 0x2;\n        else\n            cnt++;\n        memo = -0x1;\n    } else if (a < v) {\n        if (memo == -0x1)\n            cnt = 0x2;\n        else\n            cnt++;\n        memo = 0x1;\n    }\n    max = Math[_0x5c7f44(0x6)](max, cnt);\n    a = v;\n});\nconsole['log'](max);", "test_cases": [["3\n2\n5\n1", "2"], ["5\n4\n5\n2\n1\n3", "3"], ["3\n4\n4\n4", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar n=arr.shift();\nvar a=arr.shift();\nvar cnt=1;\nvar max=1;\nvar memo=0;\narr.forEach(v=>{\n   if(a>v){\n      if(memo == 1)cnt=2;\n      else cnt++;\n      memo=-1;\n   }else if(a<v){\n      if(memo == -1)cnt=2;\n      else cnt++;      \n      memo=1;\n   }\n   max=Math.max(max,cnt);\n   a=v;\n});\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02124_1", "type": "JavaScript", "obfuscated": "var a0_0x2f355c = a0_0x3ae4;\nvar input = require('fs')['readFileSync'](a0_0x2f355c(0x0), 'utf8');\nfunction a0_0x3ae4(XVGDHB, key) {\n    var stringArray = a0_0x2086();\n    a0_0x3ae4 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3ae4(XVGDHB, key);\n}\nvar arr = input[a0_0x2f355c(0x1)]()['split']('\\x0a');\nvar x = arr[a0_0x2f355c(0x2)]() - 0x0;\nconsole[a0_0x2f355c(0x3)](a0_0x2f355c(0x4) + '3'[a0_0x2f355c(0x5)](x / 0x64));\nfunction a0_0x2086() {\n    var _0x28d5f5 = [\n        '/dev/stdin',\n        'trim',\n        'shift',\n        'log',\n        'ai1333',\n        'repeat'\n    ];\n    a0_0x2086 = function () {\n        return _0x28d5f5;\n    };\n    return a0_0x2086();\n}", "test_cases": [["0", "ai1333"], ["300", "ai1333333"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar x = arr.shift()-0;\nconsole.log(\"ai1333\" + \"3\".repeat(x/100));\n", "language": "JavaScript"}
{"filename": "p02126_1", "type": "JavaScript", "obfuscated": "var a0_0xc37b3c = a0_0x151d;\nvar input = require('fs')[a0_0xc37b3c(0x0)](a0_0xc37b3c(0x1), a0_0xc37b3c(0x2));\nvar arr = input[a0_0xc37b3c(0x3)]()['split']('\\x0a');\nvar [n, m, c] = arr[a0_0xc37b3c(0x4)]()[a0_0xc37b3c(0x5)]('\\x20')[a0_0xc37b3c(0x6)](Number);\nfunction a0_0x3cc6() {\n    var _0x2d9a6b = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'sort',\n        'log'\n    ];\n    a0_0x3cc6 = function () {\n        return _0x2d9a6b;\n    };\n    return a0_0x3cc6();\n}\nvar L = arr[a0_0xc37b3c(0x4)]()[a0_0xc37b3c(0x5)]('\\x20')[a0_0xc37b3c(0x6)](Number);\nvar cw = arr[a0_0xc37b3c(0x6)](v => v[a0_0xc37b3c(0x5)]('\\x20')[a0_0xc37b3c(0x6)](Number));\nfunction a0_0x151d(rmVSjV, key) {\n    var stringArray = a0_0x3cc6();\n    a0_0x151d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x151d(rmVSjV, key);\n}\ncw[a0_0xc37b3c(0x7)](function (a, b) {\n    return b[0x1] - a[0x1];\n});\nvar sum = 0x0;\nfor (var i = 0x0; i < cw['length']; i++) {\n    if (m == 0x0)\n        break;\n    var max = L[cw[i][0x0] - 0x1];\n    if (max > 0x0) {\n        sum += cw[i][0x1];\n        L[cw[i][0x0] - 0x1]--;\n        m--;\n    }\n}\nconsole[a0_0xc37b3c(0x8)](sum);", "test_cases": [["3 3 2\n1 1\n1 1\n1 100\n2 10", "110"], ["3 3 3\n1 0 1\n1 1\n2 100\n3 1", "2"], ["22 7 26\n11 14 15 3 11 7 16 17 1 4 2 19 4 14 16 16 3 13 17 12 7 11 2 20 12 22\n6 10\n1 3\n13 1\n16 5\n4 1\n20 7\n18 4\n26 6\n9 1\n12 2\n21 1\n21 7\n18 1\n14 5\n24 5\n6 1\n3 1\n2 5\n21 2\n7 6\n10 9\n15 7", "52"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar [n,m,c]=arr.shift().split(\" \").map(Number);\nvar L=arr.shift().split(\" \").map(Number);\nvar cw = arr.map(v => v.split(\" \").map(Number));\ncw.sort(function(a,b){\n   return b[1] - a[1];\n});\nvar sum=0;\nfor(var i=0;i<cw.length;i++){\n   if(m==0)break;\n   var max = L[cw[i][0]-1];\n   if(max>0){\n      sum+=cw[i][1];\n      L[cw[i][0]-1]--;\n      m--;\n   }\n}\nconsole.log(sum);\n", "language": "JavaScript"}
{"filename": "p02137_1", "type": "JavaScript", "obfuscated": "var a0_0x1d16e9 = a0_0x176b;\nvar input = require('fs')[a0_0x1d16e9(0x0)](a0_0x1d16e9(0x1), a0_0x1d16e9(0x2));\nvar p = input[a0_0x1d16e9(0x3)]() - 0x0;\nfunction a0_0x176b(mBmklf, key) {\n    var stringArray = a0_0x23e3();\n    a0_0x176b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x176b(mBmklf, key);\n}\nconsole['log'](p - p % 0x1f4);\nfunction a0_0x23e3() {\n    var _0xae82e1 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x23e3 = function () {\n        return _0xae82e1;\n    };\n    return a0_0x23e3();\n}", "test_cases": [["5700", "5500"], ["1333", "1000"], ["100000", "100000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar p= input.trim()-0;\nconsole.log(p-(p%500));\n", "language": "JavaScript"}
{"filename": "p02149_1", "type": "JavaScript", "obfuscated": "var a0_0x5dc02d = a0_0x1d84;\nvar input = require('fs')['readFileSync'](a0_0x5dc02d(0x0), 'utf8');\nvar arr = input[a0_0x5dc02d(0x1)]()[a0_0x5dc02d(0x2)]('\\x20')['map'](Number);\nfunction a0_0x1d84(xvhMmS, key) {\n    var stringArray = a0_0x4c92();\n    a0_0x1d84 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1d84(xvhMmS, key);\n}\nvar max = Math['max'](...arr);\nconsole[a0_0x5dc02d(0x3)]([\n    'A',\n    'B',\n    'C'\n][arr['indexOf'](max)]);\nfunction a0_0x4c92() {\n    var _0x1ece48 = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'log'\n    ];\n    a0_0x4c92 = function () {\n        return _0x1ece48;\n    };\n    return a0_0x4c92();\n}", "test_cases": [["1000 900 850", "A"], ["1000 800 1200", "C"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\" \").map(Number);\nvar max=Math.max(...arr);\nconsole.log([\"A\",\"B\",\"C\"][arr.indexOf(max)]);\n", "language": "JavaScript"}
{"filename": "p02162_1", "type": "JavaScript", "obfuscated": "var a0_0x3a205e = a0_0x3eba;\nfunction a0_0x3eba(lumWIh, key) {\n    var stringArray = a0_0x325f();\n    a0_0x3eba = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3eba(lumWIh, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x3a205e(0x0), a0_0x3a205e(0x1));\nfunction a0_0x325f() {\n    var _0x2b334b = [\n        '/dev/stdin',\n        'utf8',\n        'map',\n        'log',\n        'Bob',\n        'Alice',\n        'Draw'\n    ];\n    a0_0x325f = function () {\n        return _0x2b334b;\n    };\n    return a0_0x325f();\n}\nvar [t, tt, r, rr] = input['trim']()['split']('\\x20')[a0_0x3a205e(0x2)](Number);\nif (r == -0x1 || rr == -0x1) {\n    if (t > tt)\n        console[a0_0x3a205e(0x3)](a0_0x3a205e(0x4));\n    else if (t < tt)\n        console['log'](a0_0x3a205e(0x5));\n    else if (t == tt)\n        console[a0_0x3a205e(0x3)](a0_0x3a205e(0x6));\n} else if (r > rr)\n    console[a0_0x3a205e(0x3)]('Alice');\nelse if (r < rr)\n    console['log'](a0_0x3a205e(0x4));\nelse if (r == rr)\n    console[a0_0x3a205e(0x3)](a0_0x3a205e(0x6));", "test_cases": [["9 8 1000 999", "Alice"], ["9 8 1000 1000", "Draw"], ["9 8 2849 -1", "Bob"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [t,tt,r,rr]=input.trim().split(\" \").map(Number);\nif(r==-1 || rr==-1){\n  if(t>tt)console.log(\"Bob\");\n  else if(t<tt)console.log(\"Alice\");\n  else if(t==tt)console.log(\"Draw\");\n}\nelse if(r>rr)console.log(\"Alice\");\nelse if(r<rr)console.log(\"Bob\");\nelse if(r==rr)console.log(\"Draw\");\n", "language": "JavaScript"}
{"filename": "p02163_1", "type": "JavaScript", "obfuscated": "var a0_0x239726 = a0_0x403a;\nvar input = require('fs')['readFileSync'](a0_0x239726(0x0), a0_0x239726(0x1));\nvar arr = input['trim']()[a0_0x239726(0x2)]('\\x0a');\nvar n = arr[a0_0x239726(0x3)]() - 0x0;\nvar [a, b] = [\n    0x0,\n    0x1\n];\narr['forEach'](v => {\n    var _0x51137a = a0_0x403a;\n    var [q, x] = v[_0x51137a(0x2)]('\\x20')[_0x51137a(0x4)](Number);\n    if (q == 0x1) {\n        b *= x;\n        a *= x;\n    } else if (q == 0x2)\n        a -= x;\n    else if (q == 0x3)\n        a += x;\n});\nfunction a0_0x5d8e() {\n    var _0x181abd = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x5d8e = function () {\n        return _0x181abd;\n    };\n    return a0_0x5d8e();\n}\nfunction a0_0x403a(MTNELC, key) {\n    var stringArray = a0_0x5d8e();\n    a0_0x403a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x403a(MTNELC, key);\n}\nconsole[a0_0x239726(0x5)](a + '\\x20' + b);", "test_cases": [["3\n1 2\n2 10\n3 8", "-2 2"], ["10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10", "0 10000000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar [a,b]=[0,1];\narr.forEach(v=>{\n   var [q,x]=v.split(\" \").map(Number);\n   if(q==1){\n      b*=x;\n      a*=x;\n   }\n   else if(q==2)a-=x;\n   else if(q==3)a+=x;\n});\nconsole.log(a+\" \"+b);\n", "language": "JavaScript"}
{"filename": "p02182_1", "type": "JavaScript", "obfuscated": "var a0_0x1a8616 = a0_0x2e56;\nvar input = require('fs')[a0_0x1a8616(0x0)](a0_0x1a8616(0x1), a0_0x1a8616(0x2));\nvar arr = input['trim']()[a0_0x1a8616(0x3)]('\\x0a');\nfunction a0_0x2e56(KLivyZ, key) {\n    var stringArray = a0_0x5ba5();\n    a0_0x2e56 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2e56(KLivyZ, key);\n}\nvar [n, m] = arr[a0_0x1a8616(0x4)]()[a0_0x1a8616(0x3)]('\\x20')[a0_0x1a8616(0x5)](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    var s = arr[i];\n    var t = arr[i + n];\n    for (var j = 0x0; j < m; j++) {\n        if (s[j] != t[j])\n            cnt++;\n    }\n}\nfunction a0_0x5ba5() {\n    var _0x561565 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x5ba5 = function () {\n        return _0x561565;\n    };\n    return a0_0x5ba5();\n}\nconsole[a0_0x1a8616(0x6)](cnt);", "test_cases": [["2 3\n..#\n##.\n.##\n#..", "2"], ["7 28\n............................\n...#.....###...####....###..\n..#.#...#...#..#...#..#...#.\n.#...#..#......####...#.....\n.#####..#...#..#......#...#.\n.#...#...###...#.......###..\n............................\n............................\n..###....###.....##....###..\n.#...#..#...#...#.#...#...#.\n...##...#...#.....#....####.\n..#.....#...#.....#.......#.\n.#####...###....####...###..\n............................", "40"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,m]=arr.shift().split(\" \").map(Number);\nvar cnt=0;\nfor(var i=0;i<n;i++){\n   var s=arr[i];\n   var t=arr[i+n];\n   for(var j=0;j<m;j++){\n      if(s[j]!=t[j])cnt++;\n   }\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02189_1", "type": "JavaScript", "obfuscated": "var a0_0x136db8 = a0_0x4455;\nfunction a0_0x4455(lCRePX, key) {\n    var stringArray = a0_0x2e25();\n    a0_0x4455 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4455(lCRePX, key);\n}\nvar input = require('fs')[a0_0x136db8(0x0)](a0_0x136db8(0x1), 'utf8');\nvar arr = input[a0_0x136db8(0x2)]()[a0_0x136db8(0x3)]('\\x0a');\nvar n = arr[a0_0x136db8(0x4)]() - 0x0;\nvar a = arr[a0_0x136db8(0x4)]()[a0_0x136db8(0x3)]('\\x20')[a0_0x136db8(0x5)](Number);\nvar min = Infinity;\nvar ans = -0x1;\nfor (var i = 0x0; i < n; i++) {\n    if (min > a[i]) {\n        ans = i;\n        min = a[i];\n    }\n}\nfunction a0_0x2e25() {\n    var _0x4782b2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x2e25 = function () {\n        return _0x4782b2;\n    };\n    return a0_0x2e25();\n}\nconsole[a0_0x136db8(0x6)](ans + 0x1);", "test_cases": [["6\n8 6 9 1 2 1", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar min=Infinity;\nvar ans=-1;\nfor(var i=0;i<n;i++){\n   if(min>a[i]){\n      ans=i;\n      min=a[i];\n   }\n}\nconsole.log(ans+1);\n", "language": "JavaScript"}
{"filename": "p02190_1", "type": "JavaScript", "obfuscated": "function a0_0x2b29(HRhvjT, key) {\n    var stringArray = a0_0x2791();\n    a0_0x2b29 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2b29(HRhvjT, key);\n}\nvar a0_0xad45e1 = a0_0x2b29;\nvar input = require('fs')[a0_0xad45e1(0x0)](a0_0xad45e1(0x1), a0_0xad45e1(0x2));\nvar arr = input[a0_0xad45e1(0x3)]()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr[a0_0xad45e1(0x4)]()[a0_0xad45e1(0x5)]('\\x20')[a0_0xad45e1(0x6)](Number);\nvar s = new Set();\nfunction a0_0x2791() {\n    var _0x215c0c = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'add',\n        'log',\n        'size'\n    ];\n    a0_0x2791 = function () {\n        return _0x215c0c;\n    };\n    return a0_0x2791();\n}\na['forEach'](v => s[a0_0xad45e1(0x7)](v));\nconsole[a0_0xad45e1(0x8)](s[a0_0xad45e1(0x9)]);", "test_cases": [["6\n8 6 9 1 2 1", "5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar s= new Set();\na.forEach(v=>s.add(v));\nconsole.log(s.size);\n", "language": "JavaScript"}
{"filename": "p02191_1", "type": "JavaScript", "obfuscated": "var a0_0x22d233 = a0_0x13dc;\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input[a0_0x22d233(0x0)]()[a0_0x22d233(0x1)]('\\x0a');\nvar [n, q] = arr[a0_0x22d233(0x2)]()[a0_0x22d233(0x1)]('\\x20')[a0_0x22d233(0x3)](Number);\nvar ary = arr['shift']()['split']('\\x20')['map'](Number);\nary[a0_0x22d233(0x4)]((a, b) => a - b);\nvar tansaku = function (x, str) {\n    var _0x57c32b = a0_0x13dc;\n    var first = -0x1;\n    var last = ary[_0x57c32b(0x5)];\n    while (last - first > 0x1) {\n        var mid = first + Math[_0x57c32b(0x6)]((last - first) / 0x2);\n        if (ary[mid] < x)\n            first = mid;\n        else if (str == _0x57c32b(0x7) && ary[mid] == x)\n            first = mid;\n        else\n            last = mid;\n    }\n    return last;\n};\nfunction a0_0x13dc(KPPEMz, key) {\n    var stringArray = a0_0x5062();\n    a0_0x13dc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x13dc(KPPEMz, key);\n}\nvar ans = [];\narr[a0_0x22d233(0x8)](v => {\n    var _0x1a9289 = a0_0x13dc;\n    var [l, r] = v[_0x1a9289(0x1)]('\\x20')[_0x1a9289(0x3)](Number);\n    ans[_0x1a9289(0x9)](tansaku(r, _0x1a9289(0x7)) - tansaku(l, 'izyou'));\n});\nconsole[a0_0x22d233(0xa)](ans[a0_0x22d233(0xb)]('\\x0a'));\nfunction a0_0x5062() {\n    var _0x230fd4 = [\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'sort',\n        'length',\n        'floor',\n        'ookii',\n        'forEach',\n        'push',\n        'log',\n        'join'\n    ];\n    a0_0x5062 = function () {\n        return _0x230fd4;\n    };\n    return a0_0x5062();\n}", "test_cases": [["6 3\n8 6 9 1 2 1\n2 8\n1 7\n3 5", "3\n4\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,q]=arr.shift().split(\" \").map(Number);\nvar ary=arr.shift().split(\" \").map(Number);\nary.sort((a,b)=>a-b);\nvar tansaku=function(x,str){\n    var first=-1;\n    var last=ary.length;\n    while (last-first>1){\n        var mid=first+Math.floor((last-first)/2);\n        if(ary[mid]<x)first=mid;\n        else if(str==\"ookii\" && ary[mid]==x)first=mid;\n        else last=mid;\n    }\n    return last;\n};\nvar ans=[];\narr.forEach(v=>{\n   var [l,r]=v.split(\" \").map(Number);\n   ans.push(tansaku(r,\"ookii\")-tansaku(l,\"izyou\"));\n});\nconsole.log(ans.join(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02198_1", "type": "JavaScript", "obfuscated": "var a0_0x1b628d = a0_0x56d3;\nvar input = require('fs')['readFileSync'](a0_0x1b628d(0x0), 'utf8');\nvar [a, b] = input['trim']()[a0_0x1b628d(0x1)]('\\x20')[a0_0x1b628d(0x2)](Number);\nfunction a0_0x56d3(RhPNGN, key) {\n    var stringArray = a0_0x535f();\n    a0_0x56d3 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x56d3(RhPNGN, key);\n}\nfunction a0_0x535f() {\n    var _0x1f6bf6 = [\n        '/dev/stdin',\n        'split',\n        'map'\n    ];\n    a0_0x535f = function () {\n        return _0x1f6bf6;\n    };\n    return a0_0x535f();\n}\nconsole['log'](a * b);", "test_cases": [["3 4", "12"], ["7 7", "49"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]=input.trim().split(\" \").map(Number);\nconsole.log(a*b);\n", "language": "JavaScript"}
{"filename": "p02199_1", "type": "JavaScript", "obfuscated": "var a0_0x568129 = a0_0x5e9f;\nvar input = require('fs')['readFileSync'](a0_0x568129(0x0), a0_0x568129(0x1));\nvar arr = input[a0_0x568129(0x2)]()['split']('\\x0a');\nvar [a, b] = arr[a0_0x568129(0x3)]()[a0_0x568129(0x4)]('\\x20')[a0_0x568129(0x5)](Number);\nfunction a0_0x5e9f(vsTvsW, key) {\n    var stringArray = a0_0xac4d();\n    a0_0x5e9f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5e9f(vsTvsW, key);\n}\nvar [p, q, r] = arr[a0_0x568129(0x3)]()['split']('\\x20')[a0_0x568129(0x5)](Number);\nvar hanareta = b * p;\nvar tikaduita = (b - a) * q;\nfunction a0_0xac4d() {\n    var _0x3417d4 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'log',\n        'toFixed'\n    ];\n    a0_0xac4d = function () {\n        return _0x3417d4;\n    };\n    return a0_0xac4d();\n}\nvar d = hanareta - tikaduita;\nconsole[a0_0x568129(0x6)]((d / (q + r) + b)[a0_0x568129(0x7)](0xc));", "test_cases": [["14 86\n9 1 20", "119.428571428571"], ["1 4\n15 9 2", "7.000000000000"], ["67 87 \n7 4 51", "96.618181818182"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [a,b]=arr.shift().split(\" \").map(Number);\nvar [p,q,r]=arr.shift().split(\" \").map(Number);\nvar hanareta=b*p;\nvar tikaduita=(b-a)*q;\nvar d=hanareta-tikaduita;\nconsole.log((d/(q+r)+b).toFixed(12));\n", "language": "JavaScript"}
{"filename": "p02200_1", "type": "JavaScript", "obfuscated": "function a0_0x43de(toMLws, key) {\n    var stringArray = a0_0xb1bf();\n    a0_0x43de = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x43de(toMLws, key);\n}\nvar a0_0x2697b2 = a0_0x43de;\nvar input = require('fs')[a0_0x2697b2(0x0)](a0_0x2697b2(0x1), a0_0x2697b2(0x2));\nvar arr = input[a0_0x2697b2(0x3)]()[a0_0x2697b2(0x4)]('\\x0a');\nvar n = arr[a0_0x2697b2(0x5)]() - 0x0;\nvar a = arr['shift']()[a0_0x2697b2(0x4)]('\\x20')[a0_0x2697b2(0x6)](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i < n - 0x1; i++) {\n    if (a[i] < a[i + 0x1])\n        cnt++;\n}\nconsole[a0_0x2697b2(0x7)](cnt);\nfunction a0_0xb1bf() {\n    var _0x2a71d0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0xb1bf = function () {\n        return _0x2a71d0;\n    };\n    return a0_0xb1bf();\n}", "test_cases": [["5\n8 6 9 1 20", "2"], ["6\n3 3 4 3 3 4", "2"], ["10\n10 9 8 7 6 5 4 3 2 1", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar cnt=0;\nfor(var i=0;i<n-1;i++){\n   if(a[i]<a[i+1])cnt++;\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02201_1", "type": "JavaScript", "obfuscated": "function a0_0x1b2d(pWegUT, key) {\n    var stringArray = a0_0x396e();\n    a0_0x1b2d = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1b2d(pWegUT, key);\n}\nvar a0_0x590a0f = a0_0x1b2d;\nvar input = require('fs')[a0_0x590a0f(0x0)](a0_0x590a0f(0x1), a0_0x590a0f(0x2));\nvar arr = input['trim']()[a0_0x590a0f(0x3)]('\\x0a');\nvar n = arr[a0_0x590a0f(0x4)]() - 0x0;\nvar cnt = 0x0;\narr[a0_0x590a0f(0x5)](v => {\n    var _0x54d186 = a0_0x1b2d;\n    if (v == _0x54d186(0x6))\n        cnt++;\n});\nconsole['log'](cnt);\nfunction a0_0x396e() {\n    var _0x526ee6 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'forEach',\n        'E869120'\n    ];\n    a0_0x396e = function () {\n        return _0x526ee6;\n    };\n    return a0_0x396e();\n}", "test_cases": [["5\nE869120\nTMJN\nE869120\nTAISA\nYNYMXIAOLONGBAO", "2"], ["3\nSQUARE1001\nMENCOTTON\nB2563125", "0"], ["6\nE8691200\nE869121\nE869122\nE869123\nE869124\nE869125", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar cnt=0;\narr.forEach(v=>{\n   if(v==\"E869120\")cnt++;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02202_1", "type": "JavaScript", "obfuscated": "var a0_0x5cdbb4 = a0_0x5eb8;\nvar input = require('fs')[a0_0x5cdbb4(0x0)](a0_0x5cdbb4(0x1), a0_0x5cdbb4(0x2));\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar v = arr[a0_0x5cdbb4(0x3)]()[a0_0x5cdbb4(0x4)]('\\x20')[a0_0x5cdbb4(0x5)](Number);\nfunction a0_0x5eb8(eeJjfi, key) {\n    var stringArray = a0_0x3058();\n    a0_0x5eb8 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5eb8(eeJjfi, key);\n}\nvar sum = 0x0;\nfunction a0_0x3058() {\n    var _0x11e816 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'shift',\n        'split',\n        'map',\n        'log'\n    ];\n    a0_0x3058 = function () {\n        return _0x11e816;\n    };\n    return a0_0x3058();\n}\nfor (var i = 0x0; i < n; i++) {\n    sum += v[i] - (i + 0x1);\n}\nconsole[a0_0x5cdbb4(0x6)](sum);", "test_cases": [["1\n59549", "59548"], ["5\n2 1 8 5 7", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar v=arr.shift().split(\" \").map(Number);\nvar sum=0;\nfor(var i=0;i<n;i++){\n   sum+=v[i]-(i+1);\n}\nconsole.log(sum);\n", "language": "JavaScript"}
{"filename": "p02203_1", "type": "JavaScript", "obfuscated": "function a0_0x57f7(jMedxl, key) {\n    var stringArray = a0_0x461e();\n    a0_0x57f7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x57f7(jMedxl, key);\n}\nvar a0_0x1d2205 = a0_0x57f7;\nvar input = require('fs')['readFileSync'](a0_0x1d2205(0x0), 'utf8');\nvar arr = input[a0_0x1d2205(0x1)]()[a0_0x1d2205(0x2)]('\\x0a');\nvar n = arr[a0_0x1d2205(0x3)]() - 0x0;\nvar v = arr['shift']()[a0_0x1d2205(0x2)]('\\x20')[a0_0x1d2205(0x4)](Number);\nvar cnt = 0x1;\nfor (var i = 0x0; i < n - 0x1; i++) {\n    if (v[i] >= v[i + 0x1])\n        cnt++;\n}\nfunction a0_0x461e() {\n    var _0x4486fc = [\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x461e = function () {\n        return _0x4486fc;\n    };\n    return a0_0x461e();\n}\nconsole['log'](cnt);\nconsole[a0_0x1d2205(0x5)](n);", "test_cases": [["5\n8 6 9 1 20", "3\n5"], ["6\n3 3 4 3 3 4", "4\n6"], ["8\n5 5 4 4 3 3 2 2", "8\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar v=arr.shift().split(\" \").map(Number);\nvar cnt=1;\nfor(var i=0;i<n-1;i++){\n   if(v[i]>=v[i+1])cnt++;\n}\nconsole.log(cnt);\nconsole.log(n);\n", "language": "JavaScript"}
{"filename": "p02204_1", "type": "JavaScript", "obfuscated": "function a0_0x5ab2(ehKBug, key) {\n    var stringArray = a0_0x3b80();\n    a0_0x5ab2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5ab2(ehKBug, key);\n}\nvar a0_0xac368e = a0_0x5ab2;\nvar input = require('fs')[a0_0xac368e(0x0)]('/dev/stdin', a0_0xac368e(0x1));\nvar arr = input[a0_0xac368e(0x2)]()[a0_0xac368e(0x3)]('\\x0a');\nvar [m, n] = arr[a0_0xac368e(0x4)]()[a0_0xac368e(0x3)]('\\x20')[a0_0xac368e(0x5)](Number);\nfunction a0_0x3b80() {\n    var _0x37f5f5 = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log',\n        'min'\n    ];\n    a0_0x3b80 = function () {\n        return _0x37f5f5;\n    };\n    return a0_0x3b80();\n}\nvar a = arr[a0_0xac368e(0x4)]()['split']('\\x20');\nif (m == 0x2) {\n    var cnt = [\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < n; i++) {\n        if (a[i] - 0x1 == i % 0x2)\n            cnt[0x0]++;\n        if (a[i] - 0x1 == (i + 0x1) % 0x2)\n            cnt[0x1]++;\n    }\n    console[a0_0xac368e(0x6)](Math[a0_0xac368e(0x7)](...cnt));\n} else {\n    var cnt = 0x0;\n    for (var i = 0x1; i < n; i++) {\n        if (a[i - 0x1] == a[i]) {\n            cnt++;\n            i++;\n        }\n    }\n    console[a0_0xac368e(0x6)](cnt);\n}", "test_cases": [["2 3\n2 2 1", "1"], ["3 6\n1 1 1 2 2 3", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [m,n]=arr.shift().split(\" \").map(Number);\nvar a=arr.shift().split(\" \");\nif(m==2){\n   var cnt=[0,0];\n   for(var i=0;i<n;i++){\n      if(a[i]-1==i%2)cnt[0]++;\n      if(a[i]-1==(i+1)%2)cnt[1]++;\n   }\n   console.log(Math.min(...cnt));\n}else{\n   var cnt=0;\n   for(var i=1;i<n;i++){\n      if(a[i-1] == a[i]){\n         cnt++;\n         i++;\n      }\n   }\n   console.log(cnt);\n}\n", "language": "JavaScript"}
{"filename": "p02212_1", "type": "JavaScript", "obfuscated": "var a0_0x49274a = a0_0x2006;\nvar input = require('fs')[a0_0x49274a(0x0)]('/dev/stdin', a0_0x49274a(0x1));\nvar arr = input[a0_0x49274a(0x2)]()[a0_0x49274a(0x3)]('\\x20')['map'](Number);\nvar [a, b, c, d] = arr[a0_0x49274a(0x4)]((a, b) => b - a);\nconsole[a0_0x49274a(0x5)](Math[a0_0x49274a(0x6)](a + d - (b + c)));\nfunction a0_0x2006(FmxnqT, key) {\n    var stringArray = a0_0x59e8();\n    a0_0x2006 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2006(FmxnqT, key);\n}\nfunction a0_0x59e8() {\n    var _0x238f2f = [\n        'readFileSync',\n        'utf8',\n        'trim',\n        'split',\n        'sort',\n        'log',\n        'abs'\n    ];\n    a0_0x59e8 = function () {\n        return _0x238f2f;\n    };\n    return a0_0x59e8();\n}", "test_cases": [["2 1 3 4", "0"], ["64 224 239 1024", "625"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\" \").map(Number);\nvar [a,b,c,d]=arr.sort((a,b)=>b-a);\nconsole.log(Math.abs((a+d)-(b+c)));\n", "language": "JavaScript"}
{"filename": "p02439_1", "type": "JavaScript", "obfuscated": "var a0_0x25eb1c = a0_0x65cf;\nfunction a0_0x65cf(hTDsZN, key) {\n    var stringArray = a0_0x3f69();\n    a0_0x65cf = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x65cf(hTDsZN, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x25eb1c(0x0), a0_0x25eb1c(0x1));\nvar [a, b, c] = input[a0_0x25eb1c(0x2)]()[a0_0x25eb1c(0x3)]('\\x20')[a0_0x25eb1c(0x4)](Number);\nfunction a0_0x3f69() {\n    var _0x2d3952 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'log',\n        'min',\n        'max'\n    ];\n    a0_0x3f69 = function () {\n        return _0x2d3952;\n    };\n    return a0_0x3f69();\n}\nconsole[a0_0x25eb1c(0x5)](Math[a0_0x25eb1c(0x6)](a, b, c) + '\\x20' + Math[a0_0x25eb1c(0x7)](a, b, c));", "test_cases": [["4 5 3", "3 5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,c]=input.trim().split(\" \").map(Number);\nconsole.log(Math.min(a,b,c)+\" \"+Math.max(a,b,c));\n", "language": "JavaScript"}
{"filename": "p02441_1", "type": "JavaScript", "obfuscated": "var a0_0x4d419d = a0_0x4dd5;\nfunction a0_0x545a() {\n    var _0x466ef1 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'map',\n        'shift',\n        'log',\n        'trim'\n    ];\n    a0_0x545a = function () {\n        return _0x466ef1;\n    };\n    return a0_0x545a();\n}\nvar input = require('fs')[a0_0x4d419d(0x0)]('/dev/stdin', a0_0x4d419d(0x1));\nvar arr = input['trim']()[a0_0x4d419d(0x2)]('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()[a0_0x4d419d(0x2)]('\\x20')[a0_0x4d419d(0x3)](Number);\nfunction a0_0x4dd5(qtqBbV, key) {\n    var stringArray = a0_0x545a();\n    a0_0x4dd5 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4dd5(qtqBbV, key);\n}\nvar q = arr[a0_0x4d419d(0x4)]() - 0x0;\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var [b, e, k] = arr[i]['split']('\\x20')[a0_0x4d419d(0x3)](Number);\n    var cnt = 0x0;\n    for (var j = b; j < e; j++) {\n        if (a[j] == k)\n            cnt++;\n    }\n    s += cnt + '\\x0a';\n}\nconsole[a0_0x4d419d(0x5)](s[a0_0x4d419d(0x6)]());", "test_cases": [["9\n1 4 1 4 2 1 3 5 6\n3\n0 9 1\n1 6 1\n3 7 5", "3\n2\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [b,e,k]=arr[i].split(\" \").map(Number);\n   var cnt = 0;\n   for(var j=b;j<e;j++){\n      if(a[j]==k)cnt++;\n   }\n   s+=cnt+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02442_1", "type": "JavaScript", "obfuscated": "var a0_0x4cb20e = a0_0x59d7;\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()[a0_0x4cb20e(0x0)]('\\x0a');\nvar n = arr[a0_0x4cb20e(0x1)]() - 0x0;\nfunction a0_0x59d7(mBPVNV, key) {\n    var stringArray = a0_0x49da();\n    a0_0x59d7 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x59d7(mBPVNV, key);\n}\nvar a = arr['shift']()[a0_0x4cb20e(0x0)]('\\x20')[a0_0x4cb20e(0x2)](Number);\nvar m = arr[a0_0x4cb20e(0x1)]() - 0x0;\nvar b = arr['shift']()[a0_0x4cb20e(0x0)]('\\x20')[a0_0x4cb20e(0x2)](Number);\nfor (var i = 0x0; i < m; i++) {\n    if (a[a0_0x4cb20e(0x3)] - 0x1 < i || b[i] > a[i]) {\n        console[a0_0x4cb20e(0x4)](0x1);\n        break;\n    } else if (b[i] < a[i]) {\n        console['log'](0x0);\n        break;\n    }\n}\nif (i == m)\n    console[a0_0x4cb20e(0x4)](0x0);\nfunction a0_0x49da() {\n    var _0x8a7301 = [\n        'split',\n        'shift',\n        'map',\n        'length',\n        'log'\n    ];\n    a0_0x49da = function () {\n        return _0x8a7301;\n    };\n    return a0_0x49da();\n}", "test_cases": [["3\n1 2 3\n2\n2 4", "1"], ["4\n5 4 7 0\n5\n1 2 3 4 5", "0"], ["3\n1 1 2\n4\n1 1 2 2", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar m=arr.shift()-0;\nvar b=arr.shift().split(\" \").map(Number);\nfor(var i=0;i<m;i++){\n   if(a.length-1<i || b[i]>a[i]){\n      console.log(1);\n      break;\n   }else if(b[i]<a[i]){\n      console.log(0);\n      break;\n   }\n}\nif(i==m)console.log(0);\n", "language": "JavaScript"}
{"filename": "p02443_1", "type": "JavaScript", "obfuscated": "var a0_0x497f21 = a0_0x5640;\nvar input = require('fs')[a0_0x497f21(0x0)]('/dev/stdin', 'utf8');\nfunction a0_0x4302() {\n    var _0x83274 = [\n        'readFileSync',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'slice',\n        'reverse',\n        'concat'\n    ];\n    a0_0x4302 = function () {\n        return _0x83274;\n    };\n    return a0_0x4302();\n}\nfunction a0_0x5640(sGaDlg, key) {\n    var stringArray = a0_0x4302();\n    a0_0x5640 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5640(sGaDlg, key);\n}\nvar arr = input[a0_0x497f21(0x1)]()[a0_0x497f21(0x2)]('\\x0a');\nvar n = arr[a0_0x497f21(0x3)]() - 0x0;\nvar a = arr[a0_0x497f21(0x3)]()[a0_0x497f21(0x2)]('\\x20')['map'](Number);\nvar q = arr[a0_0x497f21(0x3)]() - 0x0;\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var [b, e] = arr[i]['split']('\\x20')[a0_0x497f21(0x4)](Number);\n    var x = a['slice'](0x0, b);\n    var y = a[a0_0x497f21(0x5)](b, e)[a0_0x497f21(0x6)]();\n    var z = a['slice'](e);\n    a = x[a0_0x497f21(0x7)](y, z);\n}\nconsole['log'](a['join']('\\x20'));", "test_cases": [["8\n1 2 3 4 5 6 7 8\n2\n1 6\n3 8", "1 6 5 8 7 2 3 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [b,e]=arr[i].split(\" \").map(Number);\n   var x=a.slice(0,b);\n   var y=a.slice(b,e).reverse();\n   var z=a.slice(e);\n   a = x.concat(y,z);\n}\nconsole.log(a.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02445_1", "type": "JavaScript", "obfuscated": "var a0_0x3854db = a0_0x3161;\nfunction a0_0x3161(QWRtpV, key) {\n    var stringArray = a0_0x243d();\n    a0_0x3161 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3161(QWRtpV, key);\n}\nvar input = require('fs')[a0_0x3854db(0x0)](a0_0x3854db(0x1), a0_0x3854db(0x2));\nvar arr = input[a0_0x3854db(0x3)]()['split']('\\x0a');\nvar n = arr[a0_0x3854db(0x4)]() - 0x0;\nvar a = arr[a0_0x3854db(0x4)]()[a0_0x3854db(0x5)]('\\x20')[a0_0x3854db(0x6)](Number);\nvar q = arr[a0_0x3854db(0x4)]() - 0x0;\nfor (var i = 0x0; i < q; i++) {\n    var [b, e, t] = arr[i][a0_0x3854db(0x5)]('\\x20')[a0_0x3854db(0x6)](Number);\n    var k = e - b;\n    for (var j = 0x0; j < k; j++) {\n        [a[b + j], a[t + j]] = [\n            a[t + j],\n            a[b + j]\n        ];\n    }\n}\nconsole[a0_0x3854db(0x7)](a[a0_0x3854db(0x8)]('\\x20'));\nfunction a0_0x243d() {\n    var _0x35aac0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'shift',\n        'split',\n        'map',\n        'log',\n        'join'\n    ];\n    a0_0x243d = function () {\n        return _0x35aac0;\n    };\n    return a0_0x243d();\n}", "test_cases": [["11\n1 2 3 4 5 6 7 8 9 10 11\n1\n1 4 7", "1 8 9 10 5 6 7 2 3 4 11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nfor(var i=0;i<q;i++){\n   var [b,e,t]=arr[i].split(\" \").map(Number);\n   var k=e-b;\n   for(var j=0;j<k;j++){\n      [a[b+j],a[t+j]]= [a[t+j], a[b+j]];\n   }\n}\nconsole.log(a.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02446_1", "type": "JavaScript", "obfuscated": "var a0_0x5ba649 = a0_0x185a;\nvar input = require('fs')[a0_0x5ba649(0x0)](a0_0x5ba649(0x1), a0_0x5ba649(0x2));\nfunction a0_0x185a(TVbhWp, key) {\n    var stringArray = a0_0x9d3e();\n    a0_0x185a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x185a(TVbhWp, key);\n}\nvar arr = input['trim']()[a0_0x5ba649(0x3)]('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr[a0_0x5ba649(0x4)]()[a0_0x5ba649(0x3)]('\\x20')['map'](Number);\nvar b = [];\nfunction a0_0x9d3e() {\n    var _0x1792b0 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'shift',\n        'length',\n        'log',\n        'join'\n    ];\n    a0_0x9d3e = function () {\n        return _0x1792b0;\n    };\n    return a0_0x9d3e();\n}\nvar memo = '';\nfor (var i = 0x0; i < a[a0_0x5ba649(0x5)]; i++) {\n    if (a[i] !== memo)\n        b['push'](a[i]);\n    memo = a[i];\n}\nconsole[a0_0x5ba649(0x6)](b[a0_0x5ba649(0x7)]('\\x20'));", "test_cases": [["4\n1 2 2 4", "1 2 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar b=[];\nvar memo=\"\";\nfor(var i=0;i<a.length;i++){\n   if(a[i]!==memo)b.push(a[i]);\n   memo=a[i];\n}\nconsole.log(b.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02447_1", "type": "JavaScript", "obfuscated": "var a0_0x1b5408 = a0_0x2f61;\nfunction a0_0x16f5() {\n    var _0x1ef69e = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'push',\n        'sort',\n        'log',\n        'replace'\n    ];\n    a0_0x16f5 = function () {\n        return _0x1ef69e;\n    };\n    return a0_0x16f5();\n}\nvar input = require('fs')[a0_0x1b5408(0x0)](a0_0x1b5408(0x1), 'utf8');\nvar arr = input[a0_0x1b5408(0x2)]()[a0_0x1b5408(0x3)]('\\x0a');\nvar n = arr[a0_0x1b5408(0x4)]() - 0x0;\nvar a = [];\nfunction a0_0x2f61(nGTYZC, key) {\n    var stringArray = a0_0x16f5();\n    a0_0x2f61 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x2f61(nGTYZC, key);\n}\nfor (var i = 0x0; i < n; i++)\n    a[a0_0x1b5408(0x5)](arr[i][a0_0x1b5408(0x3)]('\\x20')['map'](Number));\na[a0_0x1b5408(0x6)](function (a, b) {\n    if (a[0x0] != b[0x0])\n        return a[0x0] - b[0x0];\n    else\n        return a[0x1] - b[0x1];\n});\nconsole[a0_0x1b5408(0x7)](a['join']('\\x0a')[a0_0x1b5408(0x8)](/,/g, '\\x20'));", "test_cases": [["5\n4 7\n5 5\n2 3\n6 8\n2 1", "2 1\n2 3\n4 7\n5 5\n6 8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=[];\nfor(var i=0;i<n;i++)a.push(arr[i].split(\" \").map(Number));\na.sort(function(a,b){\n   if(a[0]!=b[0]) return a[0]-b[0];\n   else return a[1]-b[1];\n});\nconsole.log(a.join(\"\\n\").replace(/,/g,\" \"));\n", "language": "JavaScript"}
{"filename": "p02451_1", "type": "JavaScript", "obfuscated": "var a0_0x1321d3 = a0_0x23ad;\nvar input = require('fs')[a0_0x1321d3(0x0)](a0_0x1321d3(0x1), 'utf8');\nvar arr = input[a0_0x1321d3(0x2)]()[a0_0x1321d3(0x3)]('\\x0a');\nvar n = arr[a0_0x1321d3(0x4)]() - 0x0;\nvar a = arr[a0_0x1321d3(0x4)]()[a0_0x1321d3(0x3)]('\\x20');\nvar myMap = new Map();\nfor (var i = 0x0; i < n; i++) {\n    myMap[a0_0x1321d3(0x5)](a[i], 0x0);\n}\nfunction a0_0x40c5() {\n    var _0x4153f2 = [\n        'readFileSync',\n        '/dev/stdin',\n        'trim',\n        'split',\n        'shift',\n        'set',\n        'log'\n    ];\n    a0_0x40c5 = function () {\n        return _0x4153f2;\n    };\n    return a0_0x40c5();\n}\nvar q = arr[a0_0x1321d3(0x4)]();\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    s += (myMap['has'](arr[i]) ? 0x1 : 0x0) + '\\x0a';\n}\nfunction a0_0x23ad(EetHjQ, key) {\n    var stringArray = a0_0x40c5();\n    a0_0x23ad = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23ad(EetHjQ, key);\n}\nconsole[a0_0x1321d3(0x6)](s[a0_0x1321d3(0x2)]());", "test_cases": [["4\n1 2 2 4\n3\n2\n3\n5", "1\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \");\nvar myMap = new Map();\nfor(var i=0;i<n;i++){\n   myMap.set(a[i], 0);\n}\nvar q=arr.shift();\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   s+=((myMap.has(arr[i]))?1:0)+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02452_1", "type": "JavaScript", "obfuscated": "var a0_0x5ac2de = a0_0x40ed;\nvar input = require('fs')[a0_0x5ac2de(0x0)](a0_0x5ac2de(0x1), a0_0x5ac2de(0x2));\nvar arr = input[a0_0x5ac2de(0x3)]()[a0_0x5ac2de(0x4)]('\\x0a');\nvar n = arr[a0_0x5ac2de(0x5)]() - 0x0;\nvar a = arr[a0_0x5ac2de(0x5)]()['split']('\\x20')[a0_0x5ac2de(0x6)](Number);\nvar m = arr[a0_0x5ac2de(0x5)]() - 0x0;\nvar b = arr['shift']()['split']('\\x20')['map'](Number);\nfunction a0_0x40ed(pHdmCG, key) {\n    var stringArray = a0_0x2dc4();\n    a0_0x40ed = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x40ed(pHdmCG, key);\n}\nvar memo = 0x0;\nfunction a0_0x2dc4() {\n    var _0x1c04b7 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'map',\n        'log'\n    ];\n    a0_0x2dc4 = function () {\n        return _0x1c04b7;\n    };\n    return a0_0x2dc4();\n}\nvar cnt = 0x0;\nfor (var i = 0x0; i < m; i++) {\n    var num = b[i];\n    for (var j = memo; j < n; j++) {\n        memo = j;\n        if (num == a[j]) {\n            cnt++;\n            break;\n        }\n    }\n}\nconsole[a0_0x5ac2de(0x7)](cnt == m ? 0x1 : 0x0);", "test_cases": [["4\n1 2 3 4\n2\n2 4", "1"], ["4\n1 2 3 4\n3\n1 2 5", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar m=arr.shift()-0;\nvar b=arr.shift().split(\" \").map(Number);\nvar memo=0;\nvar cnt = 0;\nfor(var i=0;i<m;i++){\n   var num=b[i];\n   for(var j=memo;j<n;j++){\n      memo=j;\n      if(num==a[j]){\n         cnt++;\n         break;\n      }\n   }\n}\nconsole.log((cnt==m)?1:0);\n", "language": "JavaScript"}
{"filename": "p02455_1", "type": "JavaScript", "obfuscated": "function a0_0x1e16() {\n    var _0x3ed4fa = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'size',\n        'has',\n        'log',\n        'trim'\n    ];\n    a0_0x1e16 = function () {\n        return _0x3ed4fa;\n    };\n    return a0_0x1e16();\n}\nvar a0_0x4c30a2 = a0_0x5614;\nvar input = require('fs')[a0_0x4c30a2(0x0)]('/dev/stdin', a0_0x4c30a2(0x1));\nvar arr = input['trim']()[a0_0x4c30a2(0x2)]('\\x0a');\nvar q = arr[a0_0x4c30a2(0x3)]() - 0x0;\nvar str = '';\nvar set = new Set();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b] = arr[i][a0_0x4c30a2(0x2)]('\\x20');\n    if (a == '0') {\n        set['add'](b);\n        str += set[a0_0x4c30a2(0x4)] + '\\x0a';\n    } else {\n        str += (set[a0_0x4c30a2(0x5)](b) ? 0x1 : 0x0) + '\\x0a';\n    }\n}\nfunction a0_0x5614(xaYLCp, key) {\n    var stringArray = a0_0x1e16();\n    a0_0x5614 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5614(xaYLCp, key);\n}\nconsole[a0_0x4c30a2(0x6)](str[a0_0x4c30a2(0x7)]());", "test_cases": [["7\n0 1\n0 2\n0 3\n0 2\n0 4\n1 3\n1 10", "1\n2\n3\n3\n4\n1\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar  set = new Set();\nfor(var i=0;i<q;i++){\n   var [a,b]=arr[i].split(\" \");\n   if(a==\"0\"){\n      set.add(b);\n      str+=set.size+\"\\n\";\n   }else {\n      str+=((set.has(b))?1:0)+\"\\n\";\n   }\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02456_1", "type": "JavaScript", "obfuscated": "var a0_0x1284aa = a0_0x45e2;\nfunction a0_0x45e2(llWzSi, key) {\n    var stringArray = a0_0x4aed();\n    a0_0x45e2 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x45e2(llWzSi, key);\n}\nvar input = require('fs')[a0_0x1284aa(0x0)]('/dev/stdin', a0_0x1284aa(0x1));\nvar arr = input['trim']()[a0_0x1284aa(0x2)]('\\x0a');\nvar q = arr[a0_0x1284aa(0x3)]() - 0x0;\nvar str = '';\nvar set = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b] = arr[i][a0_0x1284aa(0x2)]('\\x20');\n    if (a == '0') {\n        set[a0_0x1284aa(0x4)](b, 0x0);\n        str += set[a0_0x1284aa(0x5)] + '\\x0a';\n    } else if (a == '1') {\n        str += (set[a0_0x1284aa(0x6)](b) ? 0x1 : 0x0) + '\\x0a';\n    } else {\n        set[a0_0x1284aa(0x7)](b);\n    }\n}\nconsole[a0_0x1284aa(0x8)](str[a0_0x1284aa(0x9)]());\nfunction a0_0x4aed() {\n    var _0x4c4760 = [\n        'readFileSync',\n        'utf8',\n        'split',\n        'shift',\n        'set',\n        'size',\n        'has',\n        'delete',\n        'log',\n        'trim'\n    ];\n    a0_0x4aed = function () {\n        return _0x4c4760;\n    };\n    return a0_0x4aed();\n}", "test_cases": [["8\n0 1\n0 2\n0 3\n2 2\n1 1\n1 2\n1 3\n0 2", "1\n2\n3\n1\n0\n1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar  set = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b]=arr[i].split(\" \");\n   if(a==\"0\"){\n      set.set(b,0);\n      str+=set.size+\"\\n\";\n   }else if(a==\"1\") {\n      str+=((set.has(b))?1:0)+\"\\n\";\n   } else{\n      set.delete(b);\n   }\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02459_1", "type": "JavaScript", "obfuscated": "var a0_0x2d6980 = a0_0x5f1e;\nvar input = require('fs')[a0_0x2d6980(0x0)](a0_0x2d6980(0x1), a0_0x2d6980(0x2));\nvar arr = input[a0_0x2d6980(0x3)]()[a0_0x2d6980(0x4)]('\\x0a');\nvar q = arr[a0_0x2d6980(0x5)]() - 0x0;\nfunction a0_0x5f1e(UNeEdg, key) {\n    var stringArray = a0_0x5e05();\n    a0_0x5f1e = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f1e(UNeEdg, key);\n}\nvar str = '';\nvar map = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b, c] = arr[i][a0_0x2d6980(0x4)]('\\x20');\n    if (a == '0')\n        map[a0_0x2d6980(0x6)](b, c);\n    else\n        str += map[a0_0x2d6980(0x7)](b) + '\\x0a';\n}\nfunction a0_0x5e05() {\n    var _0x2209f5 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'set',\n        'get',\n        'log'\n    ];\n    a0_0x5e05 = function () {\n        return _0x2209f5;\n    };\n    return a0_0x5e05();\n}\nconsole[a0_0x2d6980(0x8)](str[a0_0x2d6980(0x3)]());", "test_cases": [["7\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n0 black 8\n1 black", "1\n4\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar map = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b,c]=arr[i].split(\" \");\n   if(a==\"0\")map.set(b,c);\n   else str+=map.get(b) + \"\\n\";\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02460_1", "type": "JavaScript", "obfuscated": "function a0_0x9c2d() {\n    var _0x2be824 = [\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'set',\n        'has',\n        'get',\n        'log'\n    ];\n    a0_0x9c2d = function () {\n        return _0x2be824;\n    };\n    return a0_0x9c2d();\n}\nvar a0_0x487179 = a0_0xa436;\nvar input = require('fs')['readFileSync'](a0_0x487179(0x0), a0_0x487179(0x1));\nvar arr = input[a0_0x487179(0x2)]()[a0_0x487179(0x3)]('\\x0a');\nvar q = arr[a0_0x487179(0x4)]() - 0x0;\nvar str = '';\nvar map = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b, c] = arr[i][a0_0x487179(0x3)]('\\x20');\n    if (a == '0')\n        map[a0_0x487179(0x5)](b, c);\n    else if (a == '1')\n        str += (map[a0_0x487179(0x6)](b) ? map[a0_0x487179(0x7)](b) : '0') + '\\x0a';\n    else\n        map['delete'](b);\n}\nfunction a0_0xa436(TUIWtc, key) {\n    var stringArray = a0_0x9c2d();\n    a0_0xa436 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xa436(TUIWtc, key);\n}\nconsole[a0_0x487179(0x8)](str[a0_0x487179(0x2)]());", "test_cases": [["8\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n2 red\n1 black\n1 red", "1\n4\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar map = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b,c]=arr[i].split(\" \");\n   if(a==\"0\")map.set(b,c);\n   else if(a==\"1\")str+=((map.has(b)) ? map.get(b) : \"0\") + \"\\n\";\n   else map.delete(b);\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02471_1", "type": "JavaScript", "obfuscated": "var a0_0x262448 = a0_0x24a0;\nfunction euc(a, b) {\n    var _0x2c71a4 = a0_0x24a0;\n    var r0 = a;\n    var r1 = b;\n    var x0 = 0x1;\n    var x1 = 0x0;\n    var y0 = 0x0;\n    var y1 = 0x1;\n    while (r1 > 0x0) {\n        var q = Math[_0x2c71a4(0x0)](r0 / r1);\n        var r2 = r0 % r1;\n        var x2 = x0 - q * x1;\n        var y2 = y0 - q * y1;\n        r0 = r1;\n        r1 = r2;\n        x0 = x1;\n        x1 = x2;\n        y0 = y1;\n        y1 = y2;\n    }\n    return [\n        x0,\n        y0\n    ];\n}\nvar input = require('fs')[a0_0x262448(0x1)](a0_0x262448(0x2), a0_0x262448(0x3))[a0_0x262448(0x4)]();\nvar nums = input[a0_0x262448(0x5)]('\\x20')[a0_0x262448(0x6)](function (num) {\n    return +num;\n});\nvar a = nums[0x0];\nfunction a0_0x2105() {\n    var _0xc20cb1 = [\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'map',\n        'join'\n    ];\n    a0_0x2105 = function () {\n        return _0xc20cb1;\n    };\n    return a0_0x2105();\n}\nvar b = nums[0x1];\nfunction a0_0x24a0(tryjgz, key) {\n    var stringArray = a0_0x2105();\n    a0_0x24a0 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x24a0(tryjgz, key);\n}\nconsole['log'](euc(a, b)[a0_0x262448(0x7)]('\\x20'));", "test_cases": [["4 12", "1 0"], ["3 8", "3 -1"]], "original": "function euc(a, b) {\n    var r0 = a;\n    var r1 = b;\n    var x0 = 1;\n    var x1 = 0;\n    var y0 = 0;\n    var y1 = 1;\n\n    while (r1 > 0) {\n        var q = Math.floor(r0 / r1);\n        var r2 = r0 % r1;\n        var x2 = x0 - q * x1;\n        var y2 = y0 - q * y1;\n\n        r0 = r1;\n        r1 = r2;\n        x0 = x1;\n        x1 = x2;\n        y0 = y1;\n        y1 = y2;\n    }\n    return [x0, y0];\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar nums = input.split(' ').map(function(num){return +num;});\nvar a = nums[0];\nvar b = nums[1];\n\nconsole.log(euc(a, b).join(' '));", "language": "JavaScript"}
{"filename": "p02697_1", "type": "JavaScript", "obfuscated": "const a0_0x1b641c = a0_0x1ad3;\nconst processData = lines => {\n    const _0x5e458a = a0_0x1ad3;\n    let [n, m] = lines[0x0][_0x5e458a(0x0)]('\\x20')[_0x5e458a(0x1)](x => +x);\n    if (n % 0x2 === 0x1) {\n        let end = n - 0x1;\n        let start = 0x1;\n        while (m) {\n            console[_0x5e458a(0x2)](start++ + '\\x20' + end--);\n            m--;\n        }\n    } else {\n        let end = n / 0x2 + 0x1;\n        let start = n / 0x2;\n        while (m) {\n            console[_0x5e458a(0x2)](start-- + '\\x20' + end++);\n            m--;\n        }\n    }\n};\nfunction a0_0x1ad3(gfHyez, key) {\n    const stringArray = a0_0x14c2();\n    a0_0x1ad3 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ad3(gfHyez, key);\n}\nfunction a0_0x14c2() {\n    const _0x19b54c = [\n        'split',\n        'map',\n        'log',\n        'data',\n        'end'\n    ];\n    a0_0x14c2 = function () {\n        return _0x19b54c;\n    };\n    return a0_0x14c2();\n}\nlet i = '';\nprocess['stdin']['on'](a0_0x1b641c(0x3), c => i += c);\nprocess['stdin']['on'](a0_0x1b641c(0x4), () => {\n    const {EOL: EOL} = require('os');\n    const lines = i['split'](EOL);\n    processData(lines);\n});", "test_cases": [["4 1", "2 3"], ["7 3", "1 6\n2 5\n3 4"]], "original": "const processData = (lines) => {\n  let [n, m] = lines[0].split(' ').map(x => +x)\n  if (n%2 === 1) {\n    let end = n - 1\n    let start = 1\n    while (m) {\n      console.log(`${start++} ${end--}`)\n      m--\n    }\n  } else {\n    let end = n/2+1\n    let start = n/2\n    while (m) {\n      console.log(`${start--} ${end++}`)\n      m--\n    }\n  }\n}\n\nlet i = ''\nprocess.stdin.on('data', c => i += c)\nprocess.stdin.on('end', () => {\n  const {EOL} = require('os')\n  const lines = i.split(EOL) /*your input text, split by lines*/\n  processData(lines)\n})\n", "language": "JavaScript"}
{"filename": "p02882_1", "type": "JavaScript", "obfuscated": "var a0_0x326be9 = a0_0x1db6;\ninp = require('fs')[a0_0x326be9(0x0)](a0_0x326be9(0x1), a0_0x326be9(0x2))[a0_0x326be9(0x3)]()[a0_0x326be9(0x4)]('\\x0a');\nfunction a0_0x1db6(WgsiNu, key) {\n    var stringArray = a0_0x5d64();\n    a0_0x1db6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1db6(WgsiNu, key);\n}\nl = inp[a0_0x326be9(0x5)]()[a0_0x326be9(0x4)]('\\x20');\na = l[a0_0x326be9(0x5)]() * 0x1;\nb = l[a0_0x326be9(0x5)]() * 0x1;\nx = l['shift']() * 0x1;\nfunction a0_0x5d64() {\n    var _0x1428a8 = [\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim',\n        'split',\n        'shift',\n        'tan',\n        'log',\n        'toFixed'\n    ];\n    a0_0x5d64 = function () {\n        return _0x1428a8;\n    };\n    return a0_0x5d64();\n}\nl = 0x0;\nr = 0x5a;\nmid = 0x2d;\nc = 0x0;\nS = a * a * b;\nif (S / 0x2 < x) {\n    while (l < r) {\n        s = S - a * a * Math[a0_0x326be9(0x6)](mid / 0xb4 * Math['PI']) / 0x2 * a;\n        if (x < s) {\n            l = mid;\n        } else {\n            r = mid;\n        }\n        mid = (l + r) / 0x2;\n        c++;\n        if (c > 0xc8) {\n            break;\n        }\n    }\n    console[a0_0x326be9(0x7)](mid['toFixed'](0xa));\n} else {\n    while (l < r) {\n        s = b * b * Math[a0_0x326be9(0x6)](mid / 0xb4 * Math['PI']) / 0x2 * a;\n        if (x < s) {\n            r = mid;\n        } else {\n            l = mid;\n        }\n        mid = (l + r) / 0x2;\n        c++;\n        if (c > 0xc8) {\n            break;\n        }\n    }\n    console['log']((0x5a - mid)[a0_0x326be9(0x8)](0xa));\n}", "test_cases": [["2 2 4", "45.0000000000"], ["12 21 10", "89.7834636934"], ["3 1 8", "4.2363947991"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\na = l.shift() * 1\nb = l.shift() * 1 \nx = l.shift() * 1\nl = 0\nr = 90\nmid = 45\nc = 0\nS = a * a * b\nif (S / 2 < x) {\n    while (l<r) {\n        s = S - (a * a * Math.tan(mid / 180 * Math.PI)) / 2 * a\n        if (x < s) {\n            l = mid\n        } else {\n            r = mid\n        }\n        mid = (l + r) / 2\n        c++\n        if (c>200) {\n            break;\n        }\n    }    \n    console.log(mid.toFixed(10))\n} else {\n    while (l<r) {\n        s = (b * b * Math.tan(mid / 180 * Math.PI)) / 2 * a\n        if (x < s) {\n            r = mid\n        } else {\n            l = mid\n        }\n        mid = (l + r) / 2\n        c++\n        if (c>200) {\n            break;\n        }\n    }  \n    console.log((90 - mid).toFixed(10))\n}", "language": "JavaScript"}
{"filename": "p02902_1", "type": "JavaScript", "obfuscated": "var a0_0x5e793e = a0_0x500f;\nfunction a0_0x353f() {\n    var _0x3c5efb = [\n        'length',\n        'pop',\n        'split',\n        'push',\n        'QcluP',\n        'concat',\n        'forEach',\n        'slice',\n        'lqkiF',\n        'shift',\n        'log',\n        'nSxaq',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x353f = function () {\n        return _0x3c5efb;\n    };\n    return a0_0x353f();\n}\nfunction Main(input) {\n    var _0x23ced3 = a0_0x500f;\n    input = input['split']('\\x0a');\n    if (input[input[_0x23ced3(0x0)] - 0x1] === '') {\n        input[_0x23ced3(0x1)]();\n    }\n    const N = input[0x0][_0x23ced3(0x2)]('\\x20')[0x0] - 0x0;\n    const M = input[0x0][_0x23ced3(0x2)]('\\x20')[0x1] - 0x0;\n    var direct = [];\n    for (var i = 0x0; i <= N; i++) {\n        direct[_0x23ced3(0x3)]([]);\n    }\n    for (var i = 0x1; i < input[_0x23ced3(0x0)]; i++) {\n        if (_0x23ced3(0x4) === 'QcluP') {\n            direct[input[i][_0x23ced3(0x2)]('\\x20')[0x0] - 0x0][_0x23ced3(0x3)](input[i][_0x23ced3(0x2)]('\\x20')[0x1] - 0x0);\n        } else {\n            temp['push'](e[_0x23ced3(0x5)]([f]));\n        }\n    }\n    var memo = [];\n    for (var i = 0x1; i <= N; i++) {\n        memo[_0x23ced3(0x3)]([i]);\n    }\n    var temp;\n    var str;\n    while (memo['length'] > 0x0) {\n        str = '';\n        temp = [];\n        memo[_0x23ced3(0x6)](e => {\n            var _0x26abef = a0_0x500f;\n            direct[e[e[_0x26abef(0x0)] - 0x1]]['forEach'](f => {\n                var _0x3ba123 = a0_0x500f;\n                temp[_0x3ba123(0x3)](e[_0x3ba123(0x5)]([f]));\n            });\n        });\n        memo = temp[_0x23ced3(0x7)]();\n        memo[_0x23ced3(0x6)](e => {\n            var _0x2cea37 = a0_0x500f;\n            if (e[e[_0x2cea37(0x0)] - 0x1] === e[0x0]) {\n                if (_0x2cea37(0x8) === _0x2cea37(0x8)) {\n                    temp = e[_0x2cea37(0x7)]();\n                    temp[_0x2cea37(0x9)]();\n                    str = temp[_0x2cea37(0x0)] + '\\x0a' + temp['join']('\\x0a');\n                } else {\n                    console[_0x2cea37(0xa)](str);\n                    return;\n                }\n            }\n        });\n        if (str !== '') {\n            if (_0x23ced3(0xb) !== 'RPvTm') {\n                console[_0x23ced3(0xa)](str);\n                return;\n            } else {\n                if (e[e[_0x23ced3(0x0)] - 0x1] === e[0x0]) {\n                    temp = e[_0x23ced3(0x7)]();\n                    temp[_0x23ced3(0x9)]();\n                    str = temp[_0x23ced3(0x0)] + '\\x0a' + temp['join']('\\x0a');\n                }\n            }\n        }\n    }\n    console[_0x23ced3(0xa)](-0x1);\n}\nfunction a0_0x500f(ZZCaBs, key) {\n    var stringArray = a0_0x353f();\n    a0_0x500f = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x500f(ZZCaBs, key);\n}\nMain(require('fs')[a0_0x5e793e(0xc)](a0_0x5e793e(0xd), a0_0x5e793e(0xe)));", "test_cases": [["4 5\n1 2\n2 3\n2 4\n4 1\n4 3", "3\n1\n2\n4"], ["4 5\n1 2\n2 3\n2 4\n1 4\n4 3", "-1"], ["6 9\n1 2\n2 3\n3 4\n4 5\n5 6\n5 1\n5 2\n6 1\n6 2", "4\n2\n3\n4\n5"]], "original": "\n\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  var direct=[];\n  for(var i=0;i<=N;i++){\n    direct.push([]);\n  }\n  for(var i=1;i<input.length;i++){\n    direct[input[i].split(' ')[0]-0].push(input[i].split(' ')[1]-0);\n  }\n  var memo=[];\n  for(var i=1;i<=N;i++){\n    memo.push([i]);\n  }\n  var temp;\n  var str;\n  while(memo.length>0){\n    str='';\n    temp=[];\n    memo.forEach(e=>{\n      direct[e[e.length-1]].forEach(f=>{\n        temp.push(e.concat([f]));\n      });\n    });\n    memo=temp.slice();\n    memo.forEach(e=>{\n      if(e[e.length-1]===e[0]){\n        temp=e.slice();\n        temp.shift();\n        str=temp.length+\"\\n\"+temp.join(\"\\n\");\n      }\n    });\n    if(str!==''){\n      console.log(str);\n      return;\n    }\n  }\n  console.log(-1);\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03043_1", "type": "JavaScript", "obfuscated": "var a0_0x5ca8c5 = a0_0x49cb;\nfunction main(input) {\n    var _0x3fc8ed = a0_0x49cb;\n    input = input[_0x3fc8ed(0x0)]('\\x20')[_0x3fc8ed(0x1)](Number);\n    const N = input[0x0];\n    const K = input[0x1];\n    var result = 0x0;\n    for (i = 0x1; i <= N; i++) {\n        var tmp = 0x1 / N;\n        var now = i;\n        while (now < K) {\n            now *= 0x2;\n            tmp /= 0x2;\n        }\n        result += tmp;\n    }\n    console[_0x3fc8ed(0x2)](result[_0x3fc8ed(0x3)]()[_0x3fc8ed(0x4)](0x0, 0xe));\n}\nfunction a0_0x194a() {\n    var _0x30eb98 = [\n        'split',\n        'map',\n        'log',\n        'toString',\n        'slice',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x194a = function () {\n        return _0x30eb98;\n    };\n    return a0_0x194a();\n}\nfunction a0_0x49cb(iMsswp, key) {\n    var stringArray = a0_0x194a();\n    a0_0x49cb = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x49cb(iMsswp, key);\n}\nmain(require('fs')[a0_0x5ca8c5(0x5)](a0_0x5ca8c5(0x6), 'utf8'));", "test_cases": [["3 10", "0.145833333333"], ["100000 5", "0.999973749998"]], "original": "function main(input){\n  input = input.split(' ').map(Number);\n  const N = input[0];\n  const K = input[1];\n  \n  var result = 0;\n  \n  for(i = 1;i <= N;i++){\n    var tmp = 1/N;\n  \tvar now = i;\n  \twhile(now < K){\n      now *= 2;\n      tmp /= 2;\n    }\n    result += tmp;\n  }\n  \n  console.log(result.toString().slice(0,14));\n}\nmain(require('fs').readFileSync('/dev/stdin','utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03454_1", "type": "JavaScript", "obfuscated": "function a0_0x3bea() {\n    var _0x4378a3 = [\n        'pow',\n        'floor',\n        'readFileSync',\n        '/dev/stdin'\n    ];\n    a0_0x3bea = function () {\n        return _0x4378a3;\n    };\n    return a0_0x3bea();\n}\nvar a0_0x2302b3 = a0_0x5f6c;\nfunction Main(input) {\n    var _0xa75c75 = a0_0x5f6c;\n    const S = parseInt(input);\n    const MOD = 0x3b9aca00 + 0x7;\n    var upr = 0x0, i = 0x1;\n    do {\n        if (S <= Math[_0xa75c75(0x0)](0xa, i - 0x1) * 0x9 * i)\n            upr = i;\n        i++;\n    } while (!upr);\n    i = Math[_0xa75c75(0x1)](S / upr);\n    var ans = 0x0;\n    var l = Math[_0xa75c75(0x0)](0xa, upr - 0x1), r = l + i - 0x1;\n    var flr = i * f(l);\n    do {\n        if (S % i)\n            ans++;\n        else\n            ans += powmod(0xa, S / i - 0x1, MOD) * 0x9 - i + 0x1;\n    } while (--i);\n    while (--l) {\n        flr += f(l);\n        if (flr > S)\n            flr -= f(r--);\n        if (flr === S)\n            ans++;\n    }\n    console['log']((ans + MOD) % MOD);\n}\nfunction a0_0x5f6c(PoiCsR, key) {\n    var stringArray = a0_0x3bea();\n    a0_0x5f6c = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x5f6c(PoiCsR, key);\n}\nfunction powmod(a, b, c) {\n    var _0x22ff56 = a0_0x5f6c;\n    const N = 0x2710;\n    var rt = 0x1;\n    while (b) {\n        if (b & 0x1)\n            rt = (Math[_0x22ff56(0x1)](a / N) * rt % c * N + a % N * rt) % c;\n        a = (Math[_0x22ff56(0x1)](a / N) * a % c * N + a % N * a) % c;\n        b >>>= 0x1;\n    }\n    return rt;\n}\nfunction f(n) {\n    if (n < 0xa)\n        return 0x1;\n    if (n < 0x64)\n        return 0x2;\n    if (n < 0x3e8)\n        return 0x3;\n    if (n < 0x2710)\n        return 0x4;\n    if (n < 0x186a0)\n        return 0x5;\n    if (n < 0xf4240)\n        return 0x6;\n    if (n < 0x989680)\n        return 0x7;\n    return 0x8;\n}\nMain(require('fs')[a0_0x2302b3(0x2)](a0_0x2302b3(0x3), 'utf8'));", "test_cases": [["1", "9"], ["2", "98"], ["123", "460191684"], ["36018", "966522825"], ["1000", "184984484"]], "original": "function Main(input) {\n\tconst S = parseInt(input);\n\tconst MOD = 1e9 + 7;\n\tvar upr = 0, i = 1;\n\tdo{\n\t\tif(S <= Math.pow(10, i - 1) * 9 * i)upr = i;\n\t\ti++;\n\t}while(!upr)\n\t\n\ti = Math.floor(S / upr);\n\tvar ans = 0;\n\tvar l = Math.pow(10, upr - 1), r = l + i - 1;\n\tvar flr = i * f(l);\n\tdo{\n\t\tif(S % i)ans++;\n\t\telse ans += powmod(10, S / i - 1, MOD) * 9 - i + 1;\n\t}while(--i)\n\t\n\twhile(--l){\n\t\tflr += f(l);\n\t\tif(flr > S)flr -= f(r--);\n\t\tif(flr === S)ans++;\n\t}\n\t\n\tconsole.log((ans + MOD) % MOD);\n}\n\nfunction powmod(a, b, c){//a^b%c\n\tconst N = 1e4;//オーバーフロー防止\n\tvar rt = 1;\n\twhile(b){\n\t\tif(b & 1) rt = (Math.floor(a / N) * rt % c * N + a % N * rt) % c;\n\t\ta = (Math.floor(a / N) * a % c * N + a % N * a) % c\n\t\tb >>>= 1;\n\t}\n\treturn rt;\n}\n\nfunction f(n){\n\tif(n < 10)return 1;\n\tif(n < 100)return 2;\n\tif(n < 1000)return 3;\n\tif(n < 10000)return 4;\n\tif(n < 100000)return 5;\n\tif(n < 1000000)return 6;\n\tif(n < 10000000)return 7;\n\treturn 8;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03459_1", "type": "JavaScript", "obfuscated": "var a0_0x44374d = a0_0x27d6;\nvar GET = (function () {\n    var _0x155f0b = a0_0x27d6;\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        var _0x4c0299 = a0_0x27d6;\n        if (_0x4c0299(0x0) === 'lFdgQ') {\n            this['_s'] = s[_0x4c0299(0x1)]()[_0x4c0299(0x2)]('\\x0a');\n            this['_y'] = 0x0;\n        } else {\n            return new g(s);\n        }\n    }\n    g[_0x155f0b(0x3)]['a'] = function (f) {\n        var _0x1e7d42 = a0_0x27d6;\n        var s = this['_s'], y = this['_y'], r;\n        if (typeof s[y] === _0x1e7d42(0x4))\n            s[y] = s[y][_0x1e7d42(0x2)]('\\x20')['reverse']();\n        r = s[y]['pop']();\n        if (!s[y]['length'])\n            this['_y']++;\n        return f ? r : +r;\n    };\n    g[_0x155f0b(0x3)]['l'] = function (f) {\n        var _0x22abf0 = a0_0x27d6;\n        var s = this['_s'][this['_y']++][_0x22abf0(0x2)]('\\x20');\n        return f ? s : s[_0x22abf0(0x5)](a => +a);\n    };\n    g[_0x155f0b(0x3)]['m'] = function (n, f) {\n        var _0x559af1 = a0_0x27d6;\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)[_0x559af1(0x5)](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a[_0x559af1(0x5)](a => +a));\n    };\n    g[_0x155f0b(0x3)]['r'] = function (n, f) {\n        var _0x4c4dfe = a0_0x27d6;\n        if (_0x4c4dfe(0x6) !== _0x4c4dfe(0x6)) {\n            this['_s'] = s[_0x4c4dfe(0x1)]()[_0x4c4dfe(0x2)]('\\x0a');\n            this['_y'] = 0x0;\n        } else {\n            var r = this['_s'][_0x4c4dfe(0x7)](this['_y'], this['_y'] += n);\n            return f ? r : r[_0x4c4dfe(0x5)](a => +a);\n        }\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync'](a0_0x44374d(0x8), a0_0x44374d(0x9)));\nfunction a0_0x27d6(wapJWd, key) {\n    var stringArray = a0_0x56b5();\n    a0_0x27d6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x27d6(wapJWd, key);\n}\nconsole[a0_0x44374d(0xa)](main());\nfunction a0_0x56b5() {\n    var _0x5d124a = [\n        'lFdgQ',\n        'trim',\n        'split',\n        'prototype',\n        'string',\n        'map',\n        'GAZTV',\n        'slice',\n        '/dev/stdin',\n        'utf8',\n        'log',\n        'bshkw',\n        'pop',\n        'length',\n        'abs',\n        'Yes'\n    ];\n    a0_0x56b5 = function () {\n        return _0x5d124a;\n    };\n    return a0_0x56b5();\n}\nfunction main() {\n    var _0xa6d3c = a0_0x27d6;\n    var n = o['a']();\n    var m = o['m'](n);\n    var t = 0x0, x = 0x0, y = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        if (_0xa6d3c(0xb) !== _0xa6d3c(0xb)) {\n            var s = this['_s'], y = this['_y'], r;\n            if (typeof s[y] === _0xa6d3c(0x4))\n                s[y] = s[y]['split']('\\x20')['reverse']();\n            r = s[y][_0xa6d3c(0xc)]();\n            if (!s[y][_0xa6d3c(0xd)])\n                this['_y']++;\n            return f ? r : +r;\n        } else {\n            var dxy = Math[_0xa6d3c(0xe)](x - m[i][0x1]);\n            dxy += Math[_0xa6d3c(0xe)](y - m[i][0x2]);\n            var dt = m[i][0x0] - t;\n            if (dxy > dt || dxy % 0x2 !== dt % 0x2)\n                return 'No';\n            x = m[i][0x1];\n            y = m[i][0x2];\n            t = m[i][0x0];\n        }\n    }\n    return _0xa6d3c(0xf);\n}", "test_cases": [["2\n3 1 2\n6 1 1", "Yes"], ["1\n2 100 100", "No"], ["2\n5 1 1\n100 1 1", "No"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var m = o.m(n);\n  var t = 0, x = 0, y = 0;\n  for(var i = 0; i < n; i++){\n    var dxy = Math.abs(x - m[i][1]);\n    dxy += Math.abs(y - m[i][2]);\n    var dt = m[i][0] - t;\n    if(dxy > dt || dxy % 2 !== dt % 2)return \"No\";\n    x = m[i][1]; y = m[i][2]; t = m[i][0];\n  }\n  return \"Yes\";\n}", "language": "JavaScript"}
{"filename": "p03552_1", "type": "JavaScript", "obfuscated": "const a0_0x122ddb = a0_0x11dc;\nfunction Main(input) {\n    const _0x42ca87 = a0_0x11dc;\n    input = input['split']('\\x0a');\n    if (input[input[_0x42ca87(0x0)] - 0x1] === '') {\n        input[_0x42ca87(0x1)]();\n    }\n    const N = input[0x0][_0x42ca87(0x2)]('\\x20')[0x0] - 0x0;\n    const Z = input[0x0][_0x42ca87(0x2)]('\\x20')[0x1] - 0x0;\n    const W = input[0x0]['split']('\\x20')[0x2] - 0x0;\n    const a = input[0x1][_0x42ca87(0x2)]('\\x20')['map'](e => {\n        return e - 0x0;\n    });\n    if (a[_0x42ca87(0x0)] === 0x1) {\n        console[_0x42ca87(0x3)](Math[_0x42ca87(0x4)](W - a[0x0]));\n        return;\n    }\n    var x, y;\n    x = new Array(N);\n    y = new Array(N);\n    for (var i = N - 0x1; i >= 0x0; i--) {\n        if (i === N - 0x1) {\n            y[i] = Math[_0x42ca87(0x4)](a[N - 0x1] - a[N - 0x2]);\n            x[i] = Math[_0x42ca87(0x4)](a[N - 0x1] - a[N - 0x2]);\n            continue;\n        }\n        y[i] = Math['min'](...x[_0x42ca87(0x5)](i + 0x1), i !== 0x0 ? Math[_0x42ca87(0x4)](a[i - 0x1] - a[N - 0x1]) : Math[_0x42ca87(0x4)](Z - a[N - 0x1]));\n        x[i] = Math['max'](...y[_0x42ca87(0x5)](i + 0x1), i !== 0x0 ? Math['abs'](a[i - 0x1] - a[N - 0x1]) : Math[_0x42ca87(0x4)](W - a[N - 0x1]));\n    }\n    console[_0x42ca87(0x3)](Math[_0x42ca87(0x6)](...x));\n}\nfunction a0_0x11dc(XLIGQP, key) {\n    const stringArray = a0_0x559f();\n    a0_0x11dc = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x11dc(XLIGQP, key);\n}\nMain(require('fs')[a0_0x122ddb(0x7)]('/dev/stdin', a0_0x122ddb(0x8)));\nfunction a0_0x559f() {\n    const _0x4ba641 = [\n        'length',\n        'pop',\n        'split',\n        'log',\n        'abs',\n        'slice',\n        'max',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x559f = function () {\n        return _0x4ba641;\n    };\n    return a0_0x559f();\n}", "test_cases": [["3 100 100\n10 1000 100", "900"], ["3 100 1000\n10 100 100", "900"], ["5 1 1\n1 1 1 1 1", "0"], ["1 1 1\n1000000000", "999999999"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const Z=input[0].split(' ')[1]-0;\n  const W=input[0].split(' ')[2]-0;\n  const a=input[1].split(' ').map(e=>{\n    return e-0;\n  });\n  if(a.length===1){\n    console.log(Math.abs(W-a[0]));\n    return;\n  }\n  var x,y;\n  x=new Array(N);\n  y=new Array(N);\n  for(var i=N-1;i>=0;i--){\n    if(i===N-1){\n      y[i]=Math.abs(a[N-1]-a[N-2]);\n      x[i]=Math.abs(a[N-1]-a[N-2]);\n      continue;\n    }\n    y[i]=Math.min(...x.slice(i+1),i!==0?Math.abs(a[i-1]-a[N-1]):Math.abs(Z-a[N-1]));\n    x[i]=Math.max(...y.slice(i+1),i!==0?Math.abs(a[i-1]-a[N-1]):Math.abs(W-a[N-1]));\n  }\n  console.log(Math.max(...x));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03626_1", "type": "JavaScript", "obfuscated": "var a0_0x4baeb7 = a0_0xb26b;\nfunction a0_0x248c() {\n    var _0x45dae7 = [\n        'split',\n        'zRWVL',\n        'GgnkS',\n        'joFRA',\n        'FSadO',\n        'eQjHW',\n        'seqfb',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x248c = function () {\n        return _0x45dae7;\n    };\n    return a0_0x248c();\n}\nfunction main(input) {\n    var _0x1b474e = a0_0xb26b;\n    var tmp = input[_0x1b474e(0x0)](/\\r\\n|\\r|\\n/);\n    var N = Number(tmp[0x0]);\n    var S = tmp[0x1][_0x1b474e(0x0)]('');\n    var res;\n    var i = 0x0;\n    var isYoko;\n    if (S[i] == S[i + 0x1]) {\n        res = 0x6;\n        i = i + 0x2;\n        isYoko = !![];\n    } else {\n        res = 0x3;\n        i++;\n        isYoko = ![];\n    }\n    for (; i < N - 0x1; i++) {\n        if (S[i] == S[i + 0x1]) {\n            if (isYoko) {\n                if (_0x1b474e(0x1) === _0x1b474e(0x2)) {\n                    if (isYoko) {\n                        res = res * 0x3;\n                    } else {\n                        res = res * 0x2;\n                    }\n                    i++;\n                    isYoko = !![];\n                } else {\n                    res = res * 0x3;\n                }\n            } else {\n                res = res * 0x2;\n            }\n            i++;\n            isYoko = !![];\n        } else {\n            if (!isYoko) {\n                if ('joFRA' !== _0x1b474e(0x3)) {\n                    res = res * 0x2;\n                } else {\n                    res = res * 0x2;\n                }\n            }\n            isYoko = ![];\n        }\n    }\n    if (i < N) {\n        if ('Vcfdh' === _0x1b474e(0x4)) {\n            if (!isYoko) {\n                res = res * 0x2;\n            }\n            isYoko = ![];\n        } else {\n            if (!isYoko) {\n                if (_0x1b474e(0x5) === _0x1b474e(0x6)) {\n                    res = res * 0x2;\n                } else {\n                    res = res * 0x2;\n                }\n            }\n        }\n    }\n    console[_0x1b474e(0x7)](res % 0x3b9aca07);\n}\nfunction a0_0xb26b(xxciMX, key) {\n    var stringArray = a0_0x248c();\n    a0_0xb26b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xb26b(xxciMX, key);\n}\nmain(require('fs')[a0_0x4baeb7(0x8)](a0_0x4baeb7(0x9), a0_0x4baeb7(0xa)));", "test_cases": [["3\naab\nccb", "6"], ["1\nZ\nZ", "3"], ["52\nRvvttdWIyyPPQFFZZssffEEkkaSSDKqcibbeYrhAljCCGGJppHHn\nRLLwwdWIxxNNQUUXXVVMMooBBaggDKqcimmeYrhAljOOTTJuuzzn", "958681902"]], "original": "function main(input){\n    var tmp = input.split(/\\r\\n|\\r|\\n/);\n    var N = Number(tmp[0]);\n    var S = tmp[1].split('');\n    //console.log(N, S);\n\n    var res;\n    var i = 0;\n    var isYoko;\n    if(S[i]==S[i+1]){\n        res = 6;\n        i = i+2;\n        isYoko = true;\n    }else{\n        res = 3;\n        i++;\n        isYoko = false;\n    }\n\n    for(; i<N-1; i++){\n        if(S[i]==S[i+1]){\n            if(isYoko){\n                res = res * 3;\n            }else{\n                res = res * 2;\n            }\n            i++;\n            isYoko = true;\n        }else{\n            if(!isYoko){\n                res = res * 2;\n            }\n            isYoko = false;\n        }\n    }\n\n    if(i<N){\n        if(!isYoko){\n            res = res * 2;\n        }\n    }\n\n    console.log(res%1000000007);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03740_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x3f267e = a0_0x1ed1;\nfunction a0_0x1ed1(MVfpWt, key) {\n    var stringArray = a0_0x2c1b();\n    a0_0x1ed1 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x1ed1(MVfpWt, key);\n}\nvar input = require('fs')['readFileSync'](a0_0x3f267e(0x0), a0_0x3f267e(0x1));\nvar cin = input[a0_0x3f267e(0x2)](/ |\\n/), cid = 0x0;\nfunction a0_0x2c1b() {\n    var _0x58bfb3 = [\n        '/dev/stdin',\n        'utf8',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        'Array(a[',\n        ']).fill().map(x=>{return\\x20',\n        ';})',\n        ']).fill().map(x=>',\n        'log'\n    ];\n    a0_0x2c1b = function () {\n        return _0x58bfb3;\n    };\n    return a0_0x2c1b();\n}\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0x2dfda1 = a0_0x1ed1;\n    return a ? cin[_0x2dfda1(0x3)](cid, cid += n) : cin[_0x2dfda1(0x3)](cid, cid += n)[_0x2dfda1(0x4)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x2974f1 = a0_0x1ed1;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x2974f1(0x5)](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin[_0x2974f1(0x3)](cid, cid += w)[_0x2974f1(0x4)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0xbd837f = a0_0x1ed1;\n    var a = arguments, l = a[_0xbd837f(0x6)], r = _0xbd837f(0x7) + --l + _0xbd837f(0x8) + v + _0xbd837f(0x9);\n    while (--l)\n        r = _0xbd837f(0x7) + l + _0xbd837f(0xa) + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x3f267e(0xb)](String(myOut));\nfunction main() {\n    var x = nextbig(), y = nextbig();\n    if (x - y < 0x2 && y - x < 0x2)\n        return 'Brown';\n    return 'Alice';\n}", "test_cases": [["2 1", "Brown"], ["5 0", "Alice"], ["0 0", "Brown"], ["4 8", "Alice"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var x = nextbig(), y = nextbig();\n  if(x-y < 2 && y-x < 2)return \"Brown\";\n  return \"Alice\";\n}", "language": "JavaScript"}
{"filename": "p03781_1", "type": "JavaScript", "obfuscated": "var a0_0x1e69f8 = a0_0xdfb6;\nfunction Main(input) {\n    var _0x38f735 = a0_0xdfb6;\n    input = input[_0x38f735(0x0)]('\\x0a');\n    var X = input[0x0] - 0x0;\n    console[_0x38f735(0x1)](Math[_0x38f735(0x2)]((0x2 * Math[_0x38f735(0x3)](X) + 0x1 / 0x4) ** (0x1 / 0x2) - 0x1 / 0x2));\n}\nfunction a0_0xdfb6(oSUHWn, key) {\n    var stringArray = a0_0x2906();\n    a0_0xdfb6 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xdfb6(oSUHWn, key);\n}\nMain(require('fs')[a0_0x1e69f8(0x4)](a0_0x1e69f8(0x5), a0_0x1e69f8(0x6)));\nfunction a0_0x2906() {\n    var _0x282076 = [\n        'split',\n        'log',\n        'ceil',\n        'abs',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2906 = function () {\n        return _0x282076;\n    };\n    return a0_0x2906();\n}", "test_cases": [["6", "3"], ["2", "2"], ["11", "5"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var X=input[0]-0;\n\n  console.log(Math.ceil((2*Math.abs(X)+1/4)**(1/2)-1/2));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03791_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x84e3c2 = a0_0x4c15;\nvar input = require('fs')[a0_0x84e3c2(0x0)]('/dev/stdin', 'utf8');\nvar cin = input[a0_0x84e3c2(0x1)](/ |\\n/), cid = 0x0;\nfunction next(a) {\n    return a ? cin[cid++] : +cin[cid++];\n}\nfunction nexts(n, a) {\n    var _0x36af30 = a0_0x4c15;\n    return a ? cin[_0x36af30(0x2)](cid, cid += n) : cin[_0x36af30(0x2)](cid, cid += n)[_0x36af30(0x3)](a => +a);\n}\nfunction nextm(h, w, a) {\n    var _0x1f2602 = a0_0x4c15;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x1f2602(0x4)](cin[_0x1f2602(0x2)](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x1f2602(0x4)](cin['slice'](cid, cid += w)[_0x1f2602(0x3)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x190cdb = a0_0x4c15;\n    var a = arguments, l = a[_0x190cdb(0x5)], r = _0x190cdb(0x6) + --l + ']).fill().map(x=>{return\\x20' + v + _0x190cdb(0x7);\n    while (--l)\n        r = 'Array(a[' + l + _0x190cdb(0x8) + r + ')';\n    return eval(r);\n}\nvar mod = 0x3b9aca00 + 0x7;\nfunction mul() {\n    var _0x455f05 = a0_0x4c15;\n    for (var a = arguments, r = a[0x0], i = a[_0x455f05(0x5)]; --i;)\n        r = ((r >> 0x10) * a[i] % mod * 0x10000 + (r & 0xffff) * a[i]) % mod;\n    return r;\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction a0_0x4c15(vTexGU, key) {\n    var stringArray = a0_0x2b29();\n    a0_0x4c15 = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x4c15(vTexGU, key);\n}\nfunction a0_0x2b29() {\n    var _0x4939a3 = [\n        'readFileSync',\n        'split',\n        'slice',\n        'map',\n        'push',\n        'length',\n        'Array(a[',\n        ';})',\n        ']).fill().map(x=>',\n        'KMNUT',\n        ']).fill().map(x=>{return\\x20'\n    ];\n    a0_0x2b29 = function () {\n        return _0x4939a3;\n    };\n    return a0_0x2b29();\n}\nfunction main() {\n    var _0x5443cd = a0_0x4c15;\n    var n = next();\n    var x = nexts(n);\n    var ans = 0x1, id = 0x1, rem = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        rem++;\n        ans = mul(ans, rem);\n        if (x[i] < id) {\n            if (_0x5443cd(0x9) === 'mfjiQ') {\n                var a = arguments, l = a[_0x5443cd(0x5)], r = _0x5443cd(0x6) + --l + _0x5443cd(0xa) + v + _0x5443cd(0x7);\n                while (--l)\n                    r = _0x5443cd(0x6) + l + _0x5443cd(0x8) + r + ')';\n                return eval(r);\n            } else {\n                rem--;\n            }\n        } else {\n            id += 0x2;\n        }\n    }\n    return ans;\n}", "test_cases": [["3\n1 2 3", "4"], ["3\n2 3 4", "6"], ["8\n1 2 3 5 7 11 13 17", "10080"], ["13\n4 6 8 9 10 12 14 15 16 18 20 21 22", "311014372"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(a){return a?cin[cid++]:+cin[cid++];}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar mod = 1e9+7;\nfunction mul(){for(var a=arguments,r=a[0],i=a.length;--i;)r=((r>>16)*a[i]%mod*65536+(r&65535)*a[i])%mod;return r;}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(myOut);\n\nfunction main(){\n  var n = next();\n  var x = nexts(n);\n  var ans = 1, id = 1, rem = 0;\n  for(var i = 0; i < n; i++){\n    rem++;\n    ans = mul(ans,rem);\n    if(x[i] < id){\n      rem--;\n    }else{\n      id += 2;\n    }\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03819_1", "type": "JavaScript", "obfuscated": "var a0_0x462f08 = a0_0x3f3b;\nfunction Main(input) {\n    var _0x3b8033 = a0_0x3f3b;\n    input = input[_0x3b8033(0x0)]('\\x0a');\n    var N = input[0x0][_0x3b8033(0x0)]('\\x20')[0x0] - 0x0;\n    var M = input[0x0][_0x3b8033(0x0)]('\\x20')[0x1] - 0x0;\n    var answer = new Array(M + 0x1);\n    answer['fill'](0x0);\n    var line;\n    for (var i = 0x1; i < input[_0x3b8033(0x1)]; i++) {\n        line = input[i][_0x3b8033(0x0)]('\\x20');\n        line[0x1] -= 0x0;\n        line[0x0] -= 0x0;\n        for (var j = 0x1; j <= M; j++) {\n            if (!(line[0x1] - line[0x0] < j - 0x1 && line[0x1] % j >= line[0x0] % j && line[0x0] % j > 0x0)) {\n                answer[j]++;\n            }\n        }\n    }\n    answer['shift']();\n    console[_0x3b8033(0x2)](answer['join']('\\x0a'));\n}\nMain(require('fs')[a0_0x462f08(0x3)]('/dev/stdin', a0_0x462f08(0x4)));\nfunction a0_0x3f3b(rHpSNW, key) {\n    var stringArray = a0_0x552a();\n    a0_0x3f3b = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x3f3b(rHpSNW, key);\n}\nfunction a0_0x552a() {\n    var _0x43c736 = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x552a = function () {\n        return _0x43c736;\n    };\n    return a0_0x552a();\n}", "test_cases": [["3 3\n1 2\n2 3\n3 3", "3\n2\n2"], ["7 9\n1 7\n5 9\n5 7\n5 9\n1 1\n6 8\n3 4", "7\n6\n6\n5\n4\n5\n5\n3\n2"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var N=input[0].split(\" \")[0]-0;\n  var M=input[0].split(\" \")[1]-0;\n  \n  var answer=new Array(M+1);\n  answer.fill(0);\n  var line;\n  for(var i=1;i<input.length;i++){\n    line=input[i].split(\" \");\n    line[1]-=0;\n    line[0]-=0;\n    for(var j=1;j<=M;j++){\n      if(!(line[1]-line[0]<j-1&&line[1]%j>=line[0]%j&&line[0]%j>0)){\n        answer[j]++;\n      }\n    }\n  }\n  answer.shift();\n  console.log(answer.join(\"\\n\"));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03822_1", "type": "JavaScript", "obfuscated": "var a0_0x27a056 = a0_0x56fc;\nvar tmp = {};\nfunction main(chunk) {\n    var _0x1e900d = a0_0x56fc;\n    var lines = chunk['split']('\\x0a');\n    var n = Number(lines[0x0]);\n    var map = {};\n    for (var i = 0x2; i < n + 0x1; i++) {\n        if (_0x1e900d(0x0) !== _0x1e900d(0x0)) {\n            var p = map[n]['p'][i];\n            if (map[p]) {\n                ans = Math[_0x1e900d(0x1)](ans, map[p]['t'] + calc(map, p));\n            }\n        } else {\n            var a = Number(lines[i - 0x1]);\n            if (map[a]) {\n                map[a]['t']++;\n                map[a]['p'][_0x1e900d(0x2)](i);\n            } else {\n                map[a] = {};\n                map[a]['t'] = 0x1;\n                map[a]['p'] = [i];\n            }\n        }\n    }\n    console[_0x1e900d(0x3)](calc(map, 0x1) + 0x1);\n}\nfunction calc(map, n) {\n    var _0x2e6286 = a0_0x56fc;\n    if (tmp[n]) {\n        return tmp[n];\n    }\n    var ans = 0x0;\n    for (var i in map[n]['p']) {\n        var p = map[n]['p'][i];\n        if (map[p]) {\n            if (_0x2e6286(0x4) !== _0x2e6286(0x4)) {\n                var a = Number(lines[i - 0x1]);\n                if (map[a]) {\n                    map[a]['t']++;\n                    map[a]['p']['push'](i);\n                } else {\n                    map[a] = {};\n                    map[a]['t'] = 0x1;\n                    map[a]['p'] = [i];\n                }\n            } else {\n                ans = Math['max'](ans, map[p]['t'] + calc(map, p));\n            }\n        }\n    }\n    tmp[n] = ans;\n    return ans;\n}\nfunction a0_0x56fc(DPiseP, key) {\n    var stringArray = a0_0x20ab();\n    a0_0x56fc = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x56fc(DPiseP, key);\n}\nmain(require('fs')['readFileSync'](a0_0x27a056(0x5), a0_0x27a056(0x6)));\nfunction a0_0x20ab() {\n    var _0x3a8afb = [\n        'nHUmm',\n        'max',\n        'push',\n        'log',\n        'hGiZh',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x20ab = function () {\n        return _0x3a8afb;\n    };\n    return a0_0x20ab();\n}", "test_cases": [["5\n1\n1\n2\n4", "3"], ["7\n1\n2\n1\n3\n1\n4", "3"], ["4\n4\n4\n1", "3"]], "original": "\nvar tmp = {};\nfunction main(chunk){\n    var lines = chunk.split(\"\\n\");\n    var n = Number(lines[0]);\n    \n    var map = {};\n    for(var i=2;i<n+1;i++){\n        var a = Number(lines[i-1]);\n        if(map[a]){\n            map[a].t++;\n            map[a].p.push(i);\n        }else{\n            map[a] = {};\n            map[a].t = 1;\n            map[a].p = [i];\n        }\n    }\n    console.log(calc(map,1)+1);\n}\n\nfunction calc(map,n){\n    if(tmp[n]){\n        return tmp[n];\n    }\n    var ans = 0;\n    for(var i in map[n].p){\n        var p = map[n].p[i];\n        if(map[p]){\n            ans = Math.max(ans,map[p].t + calc(map,p));\n        }\n    }\n    tmp[n] = ans;\n    return ans;\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03863_1", "type": "JavaScript", "obfuscated": "const a0_0x16a4cf = a0_0x275a;\nfunction a0_0x275a(TkNoBd, key) {\n    const stringArray = a0_0x60fa();\n    a0_0x275a = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x275a(TkNoBd, key);\n}\nfunction a0_0x60fa() {\n    const _0x64d9bf = [\n        'trim',\n        'length',\n        'First',\n        'log',\n        'Second',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x60fa = function () {\n        return _0x64d9bf;\n    };\n    return a0_0x60fa();\n}\nfunction Main(s) {\n    const _0x481ea0 = a0_0x275a;\n    s = s[_0x481ea0(0x0)]();\n    const l = s[_0x481ea0(0x1)];\n    if (l & 0x1 ^ s[0x0] === s[l - 0x1])\n        console['log'](_0x481ea0(0x2));\n    else\n        console[_0x481ea0(0x3)](_0x481ea0(0x4));\n}\nMain(require('fs')[a0_0x16a4cf(0x5)](a0_0x16a4cf(0x6), a0_0x16a4cf(0x7)));", "test_cases": [["aba", "Second"], ["abc", "First"], ["abcab", "First"]], "original": "function Main(s) {\n  s = s.trim();\n  const l = s.length;\n  if((l & 1) ^ (s[0] === s[l-1]))\n    console.log(\"First\");\n  else console.log(\"Second\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03888_1", "type": "JavaScript", "obfuscated": "const a0_0x180ab7 = a0_0x1e99;\nfunction Main(inputData) {\n    init(inputData);\n    var a = inI();\n    var b = inI();\n    outln((a * b / (a + b))['toFixed'](0xa));\n}\nvar input, inputCnt;\nfunction debug() {\n    const _0x556339 = a0_0x1e99;\n    Main(document[_0x556339(0x0)](_0x556339(0x1))[_0x556339(0x2)]);\n}\nfunction a0_0x1824() {\n    const _0x36ef2e = [\n        'getElementById',\n        'input',\n        'value',\n        'replace',\n        'split',\n        'log',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x1824 = function () {\n        return _0x36ef2e;\n    };\n    return a0_0x1824();\n}\nfunction init(inputData) {\n    const _0x12a13a = a0_0x1e99;\n    input = inputData[_0x12a13a(0x3)](/\\n/g, '\\x20');\n    input = input[_0x12a13a(0x4)]('\\x20');\n    inputCnt = 0x0;\n}\nconst out = output => {\n    const _0x5e2a5a = a0_0x1e99;\n    console[_0x5e2a5a(0x5)](output);\n};\nconst outln = output => {\n    const _0x308c9d = a0_0x1e99;\n    console[_0x308c9d(0x5)](output + '\\x0a');\n};\nconst inS = () => {\n    return input[inputCnt++];\n};\nconst inI = () => {\n    return parseInt(inS(), 0xa);\n};\nconst inF = () => {\n    return parseFloat(inS());\n};\nfunction a0_0x1e99(swoxYU, key) {\n    const stringArray = a0_0x1824();\n    a0_0x1e99 = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x1e99(swoxYU, key);\n}\nMain(require('fs')['readFileSync'](a0_0x180ab7(0x6), a0_0x180ab7(0x7)));", "test_cases": [["2 3", "1.2000000000"], ["100 99", "49.7487437186"]], "original": "\nfunction Main(inputData) {\n\tinit(inputData);\n\t\n\tvar a = inI();\n\tvar b = inI();\n\n\toutln(((a*b)/(a+b)).toFixed(10));\n\t\n}\n\n////////////////////////////////////////////////////////////////////////////////////\nvar input,inputCnt;\n\n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n\tMain(document.getElementById(\"input\").value);\n}\n\nfunction init(inputData){\n    //配列inputに順番に代入\n\tinput = inputData.replace( /\\n/g , \" \" );\n\tinput = input.split(\" \");\n\tinputCnt = 0;\n}\n//output\nconst out = (output) => { console.log(output) }\nconst outln = (output) => { console.log(output+\"\\n\") }\n\n//input\nconst inS = () => {return input[inputCnt++]};\nconst inI = () => {return parseInt(inS(), 10)};\nconst inF = () => {return parseFloat(inS())};\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03947_1", "type": "JavaScript", "obfuscated": "function a0_0x38ff(nJIMui, key) {\n    var stringArray = a0_0x2b3c();\n    a0_0x38ff = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x38ff(nJIMui, key);\n}\nvar a0_0x2b5d67 = a0_0x38ff;\nfunction a0_0x2b3c() {\n    var _0x3a121d = [\n        'split',\n        'length',\n        'log',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8'\n    ];\n    a0_0x2b3c = function () {\n        return _0x3a121d;\n    };\n    return a0_0x2b3c();\n}\nfunction Main(input) {\n    var _0x32eb58 = a0_0x38ff;\n    var counter = function (str, seq) {\n        var _0x3214f2 = a0_0x38ff;\n        return str[_0x3214f2(0x0)](seq)[_0x3214f2(0x1)] - 0x1;\n    };\n    lines = input[_0x32eb58(0x0)]('\\x0a');\n    var s = lines[0x0];\n    var bw = counter(s, 'BW');\n    var wb = counter(s, 'WB');\n    console[_0x32eb58(0x2)](bw + wb);\n}\nMain(require('fs')[a0_0x2b5d67(0x3)](a0_0x2b5d67(0x4), a0_0x2b5d67(0x5)));", "test_cases": [["BBBWW", "1"], ["WWWWWW", "0"], ["WBWBWBWBWB", "9"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\nvar counter = function(str,seq){\n    return str.split(seq).length - 1;\n};\n\tlines = input.split(\"\\n\"); // 1行目がinput[0], 2行目がinput[1], …に入る\n\tvar s = lines[0];\n\tvar bw = counter(s,\"BW\");\n\tvar wb = counter(s,\"WB\");\n\tconsole.log(bw+wb);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03954_1", "type": "JavaScript", "obfuscated": "var a0_0x1cc6da = a0_0xf34a;\nfunction a0_0x9c43() {\n    var _0x540c7d = [\n        'split',\n        'length',\n        'ujHXM',\n        'sort',\n        'BoYER',\n        'toGwX',\n        'slice',\n        'ooSJZ',\n        'log',\n        'readFileSync',\n        'utf8'\n    ];\n    a0_0x9c43 = function () {\n        return _0x540c7d;\n    };\n    return a0_0x9c43();\n}\nfunction a0_0xf34a(hidvxI, key) {\n    var stringArray = a0_0x9c43();\n    a0_0xf34a = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0xf34a(hidvxI, key);\n}\nfunction Main(input) {\n    var _0x5030cc = a0_0xf34a;\n    input = input[_0x5030cc(0x0)]('\\x0a');\n    tmp = input[0x1][_0x5030cc(0x0)]('\\x20');\n    var N = parseInt(input[0x0], 0xa);\n    var array_N = new Array(0x2 * N - 0x1);\n    for (var i = 0x0; i < array_N[_0x5030cc(0x1)]; i++) {\n        array_N[i] = parseInt(tmp[i], 0xa);\n    }\n    function getArrayNext(array_i) {\n        var _0x102d09 = a0_0xf34a;\n        if ('ujHXM' === _0x102d09(0x2)) {\n            array_i_next = new Array(array_i['length'] - 0x2);\n            for (var j = 0x0; j < array_i_next[_0x102d09(0x1)]; j++) {\n                var small_array = array_i['slice'](j, j + 0x3);\n                array_i_next[j] = small_array[_0x102d09(0x3)](function (a, b) {\n                    var _0x3d1510 = a0_0xf34a;\n                    if (_0x3d1510(0x4) !== _0x3d1510(0x5)) {\n                        return a < b ? -0x1 : 0x1;\n                    } else {\n                        array_i_next = new Array(array_i[_0x3d1510(0x1)] - 0x2);\n                        for (var j = 0x0; j < array_i_next['length']; j++) {\n                            var small_array = array_i[_0x3d1510(0x6)](j, j + 0x3);\n                            array_i_next[j] = small_array['sort'](function (a, b) {\n                                return a < b ? -0x1 : 0x1;\n                            })[0x1];\n                        }\n                        return array_i_next;\n                    }\n                })[0x1];\n            }\n            return array_i_next;\n        } else {\n            array_i = getArrayNext(array_i);\n        }\n    }\n    var array_i = array_N;\n    while (array_i[_0x5030cc(0x1)] > 0x1) {\n        if (_0x5030cc(0x7) !== _0x5030cc(0x7)) {\n            var small_array = array_i['slice'](j, j + 0x3);\n            array_i_next[j] = small_array['sort'](function (a, b) {\n                return a < b ? -0x1 : 0x1;\n            })[0x1];\n        } else {\n            array_i = getArrayNext(array_i);\n        }\n    }\n    console[_0x5030cc(0x8)](array_i[0x0]);\n}\nMain(require('fs')[a0_0x1cc6da(0x9)]('/dev/stdin', a0_0x1cc6da(0xa)));", "test_cases": [["4\n1 6 3 7 4 5 2", "4"], ["2\n1 2 3", "2"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\ttmp = input[1].split(\" \");\n\n\tvar N = parseInt(input[0], 10);\n    var array_N = new Array(2*N-1);\n\n    for(var i=0;i< array_N.length;i++){\n        array_N[i] = parseInt(tmp[i],10);\n    }\n\n    function getArrayNext(array_i){\n        array_i_next = new Array(array_i.length-2);\n        for(var j=0;j<array_i_next.length;j++){\n            var small_array = array_i.slice(j,j+3);\n            array_i_next[j] = small_array.sort(\n              function(a,b){\n                return (a < b ? -1 : 1);\n              }\n            )[1];\n        }\n        return array_i_next;\n    }\n    var array_i = array_N;\n    while(array_i.length > 1){\n\n        array_i = getArrayNext(array_i);\n    }\n\tconsole.log(array_i[0]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03973_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar a0_0x2c4f82 = a0_0x23ab;\nvar input = require('fs')['readFileSync']('/dev/stdin', a0_0x2c4f82(0x0));\nfunction a0_0x23ab(tjukde, key) {\n    var stringArray = a0_0x1ba2();\n    a0_0x23ab = function (index, key) {\n        index = index - 0x0;\n        var value = stringArray[index];\n        return value;\n    };\n    return a0_0x23ab(tjukde, key);\n}\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    var _0x2afd70 = a0_0x23ab;\n    return a ? cin[_0x2afd70(0x1)](cid, cid += n) : cin[_0x2afd70(0x1)](cid, cid += n)['map'](a => +a);\n}\nfunction a0_0x1ba2() {\n    var _0x284a53 = [\n        'utf8',\n        'slice',\n        'push',\n        'map',\n        'length',\n        'Array(a[',\n        ';})',\n        ']).fill().map(x=>',\n        'log',\n        'vOSKK',\n        'TDsjA',\n        ']).fill().map(x=>{return\\x20',\n        'max'\n    ];\n    a0_0x1ba2 = function () {\n        return _0x284a53;\n    };\n    return a0_0x1ba2();\n}\nfunction nextm(h, w, a) {\n    var _0x4a31e0 = a0_0x23ab;\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r[_0x4a31e0(0x2)](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r[_0x4a31e0(0x2)](cin['slice'](cid, cid += w)[_0x4a31e0(0x3)](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var _0x2ebc9d = a0_0x23ab;\n    var a = arguments, l = a[_0x2ebc9d(0x4)], r = _0x2ebc9d(0x5) + --l + ']).fill().map(x=>{return\\x20' + v + _0x2ebc9d(0x6);\n    while (--l)\n        r = 'Array(a[' + l + _0x2ebc9d(0x7) + r + ')';\n    return eval(r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console[a0_0x2c4f82(0x8)](String(myOut));\nfunction main() {\n    var _0x5c4275 = a0_0x23ab;\n    var n = next();\n    var ans = 0x0, mn = 0x1;\n    for (var i = 0x0; i < n; i++) {\n        if (_0x5c4275(0x9) !== 'fvhbV') {\n            var t = next() - 0x1;\n            if (t < mn) {\n                if (_0x5c4275(0xa) !== _0x5c4275(0xa)) {\n                    var a = arguments, l = a[_0x5c4275(0x4)], r = _0x5c4275(0x5) + --l + _0x5c4275(0xb) + v + _0x5c4275(0x6);\n                    while (--l)\n                        r = _0x5c4275(0x5) + l + _0x5c4275(0x7) + r + ')';\n                    return eval(r);\n                } else {\n                    mn = Math[_0x5c4275(0xc)](mn, t + 0x2);\n                }\n            } else {\n                ans += t / mn | 0x0;\n                mn = Math['max'](0x2, mn);\n            }\n        } else {\n            var t = next() - 0x1;\n            if (t < mn) {\n                mn = Math[_0x5c4275(0xc)](mn, t + 0x2);\n            } else {\n                ans += t / mn | 0x0;\n                mn = Math[_0x5c4275(0xc)](0x2, mn);\n            }\n        }\n    }\n    return ans;\n}", "test_cases": [["3\n3\n2\n5", "3"], ["15\n3\n1\n4\n1\n5\n9\n2\n6\n5\n3\n5\n8\n9\n7\n9", "18"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var ans = 0, mn = 1;\n  for(var i = 0; i < n; i++){\n    var t = next()-1;\n    if(t < mn){\n      mn = Math.max(mn,t+2);\n    }else{\n      ans += t/mn|0;\n      mn = Math.max(2,mn);\n    }\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p04014_1", "type": "JavaScript", "obfuscated": "const a0_0x21eeb4 = a0_0x358c;\nfunction Main(s) {\n    const _0x4eac50 = a0_0x358c;\n    s = s[_0x4eac50(0x0)]('\\x0a')['map'](a => parseInt(a));\n    const n = s[0x0];\n    s = s[0x1];\n    const sn = Math['ceil'](Math[_0x4eac50(0x1)](n));\n    if (s === n) {\n        console[_0x4eac50(0x2)](n + 0x1);\n        return;\n    }\n    for (var b = 0x2; b < sn; b++) {\n        if (s === f(b, n)) {\n            console[_0x4eac50(0x2)](b);\n            return;\n        }\n    }\n    var p = Math[_0x4eac50(0x3)]((n - s) / (sn - 0x1));\n    for (; p > 0x0; p--) {\n        b = Math[_0x4eac50(0x3)]((n - s) / p + 0x1);\n        if (s === f(b, n)) {\n            console[_0x4eac50(0x2)](b);\n            return;\n        }\n    }\n    console['log'](-0x1);\n}\nfunction a0_0x4ef0() {\n    const _0x6fe25a = [\n        'split',\n        'sqrt',\n        'log',\n        'floor',\n        'readFileSync',\n        '/dev/stdin',\n        'utf8',\n        'trim'\n    ];\n    a0_0x4ef0 = function () {\n        return _0x6fe25a;\n    };\n    return a0_0x4ef0();\n}\nfunction a0_0x358c(nWxUAr, key) {\n    const stringArray = a0_0x4ef0();\n    a0_0x358c = function (index, key) {\n        index = index - 0x0;\n        let value = stringArray[index];\n        return value;\n    };\n    return a0_0x358c(nWxUAr, key);\n}\nfunction f(b, n) {\n    const _0x4edd59 = a0_0x358c;\n    if (n < b)\n        return n;\n    return f(b, Math[_0x4edd59(0x3)](n / b)) + n % b;\n}\nMain(require('fs')[a0_0x21eeb4(0x4)](a0_0x21eeb4(0x5), a0_0x21eeb4(0x6))[a0_0x21eeb4(0x7)]());", "test_cases": [["87654\n30", "10"], ["87654\n138", "100"], ["87654\n45678", "-1"], ["31415926535\n1", "31415926535"], ["1\n31415926535", "-1"]], "original": "function Main(s) {\n\ts = s.split(\"\\n\").map(a => parseInt(a));\n\tconst n = s[0];\n\ts = s[1];\n\tconst sn = Math.ceil(Math.sqrt(n));\n\tif(s === n){console.log(n+1);return;}\n\tfor(var b = 2; b < sn; b++){\n\t\tif(s === f(b, n)){\n          console.log(b);\n          return;\n        }\n\t}\n\tvar p = Math.floor((n - s) / (sn - 1));\n\tfor(; p > 0; p--){\n\t\tb = Math.floor((n - s) / p + 1);\n\t\tif(s === f(b, n)){\n          console.log(b);\n          return;\n        }\n\t}\n\t\n\tconsole.log(-1);\n}\nfunction f(b, n){\n\tif(n < b) return n;\n\treturn f(b, Math.floor(n / b)) + n % b;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
