{"filename": "p02288_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const oZCiQh = {\n        'WIwpn': function (callee, param1) {\n            return callee(param1);\n        },\n        'Wvvbl': '/dev/stdin',\n        'HltKM': 'utf8',\n        'lxpOI': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const lines = oZCiQh['WIwpn'](require, 'fs')['readFileSync'](oZCiQh['Wvvbl'], oZCiQh['HltKM'])['trim']()['split']('\\x0a');\n    lines['shift']();\n    const arr = lines['shift']()['split']('\\x20')['map'](Number);\n    oZCiQh['lxpOI'](buildMaxHeap, arr);\n    console['log'](arr['reduce']((s, e) => s += '\\x20' + e, ''));\n}());\nfunction buildMaxHeap(arr) {\n    const ITfFVx = {\n        'LPtxI': function (x, y) {\n            return x * y;\n        },\n        'IBQPX': function (x, y) {\n            return x + y;\n        },\n        'IQslD': function (x, y) {\n            return x * y;\n        },\n        'fcEKe': function (x, y) {\n            return x < y;\n        },\n        'vTxbr': function (x, y) {\n            return x > y;\n        },\n        'bbCdO': function (x, y) {\n            return x < y;\n        },\n        'TeuZe': function (x, y) {\n            return x != y;\n        },\n        'CvKZt': function (x, y) {\n            return x >= y;\n        },\n        'rZvFW': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const n = arr['length'];\n    const maxHeapify = i => {\n        let left, right, largest;\n        left = ITfFVx['LPtxI'](0x2, i) + 0x1;\n        right = ITfFVx['IBQPX'](ITfFVx['IQslD'](0x2, i), 0x2);\n        largest = ITfFVx['fcEKe'](left, n) && ITfFVx['vTxbr'](arr[left], arr[i]) ? left : i;\n        if (ITfFVx['bbCdO'](right, n) && ITfFVx['vTxbr'](arr[right], arr[largest]))\n            largest = right;\n        if (ITfFVx['TeuZe'](largest, i)) {\n            arr[largest] = [\n                arr[i],\n                arr[i] = arr[largest]\n            ][0x0];\n            maxHeapify(largest);\n        }\n    };\n    for (let i = Math['floor'](arr['length'] / 0x2); ITfFVx['CvKZt'](i, 0x0); i--)\n        ITfFVx['rZvFW'](maxHeapify, i);\n}", "test_cases": [["10\n4 1 3 2 16 9 10 14 8 7", "16 14 10 8 7 9 3 2 4 1"]], "original": "(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  lines.shift();\n  const arr = lines.shift().split(' ').map(Number);\n  buildMaxHeap(arr);\n  console.log(arr.reduce((s, e) => s += ` ${e}`, ''));\n})();\n\nfunction buildMaxHeap(arr) {\n  const n = arr.length;\n  const maxHeapify = (i) => {\n    let left, right, largest;\n    left = 2 * i + 1;\n    right = 2 * i + 2;\n    largest = left < n && arr[left] > arr[i] ? left : i;\n    if (right < n && arr[right] > arr[largest]) largest = right;\n    if (largest != i) {\n      arr[largest] = [arr[i], arr[i] = arr[largest]][0];\n      maxHeapify(largest);\n    }\n  };\n\n  for (let i = Math.floor(arr.length / 2); i >= 0; i--) maxHeapify(i);\n}\n\n", "language": "JavaScript"}
{"filename": "p02772_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const rhiONX = {\n        'LWgyU': function (x, y) {\n            return x % y;\n        },\n        'vTRAD': function (x, y) {\n            return x != y;\n        },\n        'lgUyg': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = input['shift']();\n    const A = input['map'](v => parseInt(v));\n    f = ![];\n    for (i = 0x0; i < A['length']; i++) {\n        if (rhiONX['LWgyU'](A[i], 0x2) == 0x0) {\n            if (rhiONX['vTRAD'](A[i] % 0x3, 0x0) && rhiONX['vTRAD'](rhiONX['lgUyg'](A[i], 0x5), 0x0)) {\n                f = !![];\n            }\n        }\n    }\n    if (f) {\n        console['log']('DENIED');\n    } else {\n        console['log']('APPROVED');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n6 7 9 10 31", "APPROVED"], ["3\n28 27 24", "DENIED"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  const N = input.shift();\n  const A = input.map(v => parseInt(v));\n  f = false;\n  for (i = 0; i < A.length; i++) {\n    if (A[i] % 2 == 0) {\n      if (A[i] % 3 != 0 && A[i] % 5 != 0) {\n        f = true;\n      }\n    }\n  }\n  if (f) {\n    console.log(\"DENIED\");\n  } else {\n    console.log(\"APPROVED\");\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02622_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var FePort = {\n        'xfGaN': '4|0|3|5|2|1',\n        'LiuhX': function (x, y) {\n            return x != y;\n        },\n        'XVQkF': function (x, y) {\n            return x + y;\n        }\n    };\n    var FeXuxK = FePort['xfGaN']['split']('|');\n    var koxRRZ = 0x0;\n    while (!![]) {\n        switch (FeXuxK[koxRRZ++]) {\n        case '0':\n            t = input[0x0]['split']('');\n            continue;\n        case '1':\n            console['log'](result);\n            continue;\n        case '2':\n            for (var i = 0x0; i < s['length']; i++) {\n                if (FePort['LiuhX'](s[i], t[i])) {\n                    result = FePort['XVQkF'](result, 0x1);\n                } else {\n                }\n            }\n            continue;\n        case '3':\n            s = input[0x1]['split']('');\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        case '5':\n            var result = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["cupofcoffee\ncupofhottea", "4"], ["abcde\nbcdea", "5"], ["apple\napple", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tt = input[0].split(\"\");\n\ts = input[1].split(\"\");\n\t\n\tvar result = 0\n\tfor (var i = 0; i < s.length; i++) {\n\tif  (s[i] != t[i]) {\n\tresult = result + 1;\n\t} else {\n\t}\n\t}\n\t\n\tconsole.log(result);\n\t}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02755_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const KnEwUY = {\n        'AeOnn': function (callee, param1) {\n            return callee(param1);\n        },\n        'sWKHw': function (x, y) {\n            return x <= y;\n        },\n        'Hoqbn': function (x, y) {\n            return x * y;\n        },\n        'sPrJU': function (x, y) {\n            return x === y;\n        },\n        'qXbtP': function (x, y) {\n            return x === y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const A = KnEwUY['AeOnn'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const B = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    for (let i = 0x1; KnEwUY['sWKHw'](i, 0x2710); i++) {\n        const temp1 = Math['floor'](KnEwUY['Hoqbn'](i, 0.08));\n        const temp2 = Math['floor'](i * 0.1);\n        if (KnEwUY['sPrJU'](temp1, A) && KnEwUY['qXbtP'](temp2, B)) {\n            console['log'](i);\n            return;\n        }\n    }\n    console['log'](-0x1);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2", "25"], ["8 10", "100"], ["19 99", "-1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const A = parseInt(arg[0].split(\" \")[0]);\n    const B = parseInt(arg[0].split(\" \")[1]);\n    \n    // X * 0.08 = A;\n    // X * 0.1  = B;\n    \n    // const X = A / 0.08;\n    \n    // if(X % 1 !== 0) {\n    //     console.log(-1);\n    //     return;\n    // }\n    \n    // const temp1 = Math.floor(X * 0.08);\n    // const temp2 = Math.floor(X * 0.1);\n    \n    // console.log(temp2)\n    \n    // if(temp1 === A && temp2 === B) {\n    //     console.log(X);\n    //     return;\n    // }\n    \n    // console.log(-1);\n\n    for(let i=1; i<=10000; i++) {\n        const temp1 = Math.floor(i * 0.08);\n        const temp2 = Math.floor(i * 0.1);\n        \n        if(temp1 === A && temp2 === B) {\n            console.log(i);\n            return;\n        }\n    }\n    \n    console.log(-1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02888_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var abDJIO = {\n        'vOhLG': '5|2|6|0|7|1|3|4',\n        'tsMMw': function (x, y) {\n            return x - y;\n        },\n        'sqeZE': function (x, y) {\n            return x + y;\n        },\n        'zGalV': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'yQjug': function (x, y) {\n            return x + y;\n        }\n    };\n    var VbvHyt = abDJIO['vOhLG']['split']('|');\n    var UdeyAT = 0x0;\n    while (!![]) {\n        switch (VbvHyt[UdeyAT++]) {\n        case '0':\n            var L = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '1':\n            L['sort'](function (a, b) {\n                return EoqhfX['PAfKp'](b, a);\n            });\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            for (var i = 0x0; i < abDJIO['tsMMw'](N, 0x1); i++) {\n                for (var j = abDJIO['sqeZE'](i, 0x1); j < N; j++) {\n                    var fzgszE = '0|1|3|4|2'['split']('|');\n                    var gDeiaB = 0x0;\n                    while (!![]) {\n                        switch (fzgszE[gDeiaB++]) {\n                        case '0':\n                            var tag = L[i] - L[j];\n                            continue;\n                        case '1':\n                            var arr = L['slice'](0x0, L['length']);\n                            continue;\n                        case '2':\n                            sum += abDJIO['tsMMw'](arr['length'], abDJIO['zGalV'](caninsert, arr, tag));\n                            continue;\n                        case '3':\n                            arr['splice'](0x0, abDJIO['yQjug'](j, 0x1));\n                            continue;\n                        case '4':\n                            arr['reverse']();\n                            continue;\n                        }\n                        break;\n                    }\n                }\n            }\n            continue;\n        case '4':\n            console['log'](sum);\n            continue;\n        case '5':\n            var EoqhfX = {\n                'PAfKp': function (x, y) {\n                    return abDJIO['tsMMw'](x, y);\n                }\n            };\n            continue;\n        case '6':\n            var N = input[0x0];\n            continue;\n        case '7':\n            var sum = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction caninsert(array, value) {\n    var hNCtAx = {\n        'kYGYC': '4|2|1|3|0',\n        'dTVNj': function (x, y) {\n            return x < y;\n        },\n        'FwGXK': function (x, y) {\n            return x + y;\n        },\n        'gDpdQ': function (x, y) {\n            return x / y;\n        },\n        'YfYHN': function (x, y) {\n            return x - y;\n        },\n        'drjXx': function (x, y) {\n            return x <= y;\n        }\n    };\n    var FTZirA = hNCtAx['kYGYC']['split']('|');\n    var bViBLI = 0x0;\n    while (!![]) {\n        switch (FTZirA[bViBLI++]) {\n        case '0':\n            return lower;\n        case '1':\n            var upper = array['length'];\n            continue;\n        case '2':\n            var lower = 0x0;\n            continue;\n        case '3':\n            while (hNCtAx['dTVNj'](lower, upper)) {\n                var mid = Math['floor'](hNCtAx['FwGXK'](lower, hNCtAx['gDpdQ'](hNCtAx['YfYHN'](upper, lower), 0x2)));\n                if (hNCtAx['drjXx'](array[mid], value)) {\n                    lower = hNCtAx['FwGXK'](mid, 0x1);\n                } else {\n                    upper = mid;\n                }\n            }\n            continue;\n        case '4':\n            value += 0.1;\n            continue;\n        }\n        break;\n    }\n}\n;", "test_cases": [["4\n3 4 2 1", "1"], ["3\n1 1000 1", "0"], ["7\n218 786 704 233 645 728 389", "23"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = input[0];\n  var L = input[1].split(\" \").map(Number);\n  var sum = 0;\n  L.sort(function(a,b){return b-a;});\n  for(var i=0;i<N-1;i++){\n    for(var j=i+1;j<N;j++){\n      var tag = L[i]-L[j];\n      var arr = L.slice(0,L.length);\n      arr.splice(0,j+1);\n      arr.reverse();\n      sum += arr.length-caninsert(arr,tag);\n    //  console.log(tag,caninsert(arr,tag),arr)\n    }\n  }\n  console.log(sum);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n//以下写経。C++なら関数が用意されてるし多少はね…？\nfunction caninsert(array, value){\n  value += 0.1\n    var lower = 0;\n    var upper = array.length;\n\n    while ( lower < upper ) {\n\n        var mid = Math.floor(lower + (upper - lower) / 2);\n\n        if ( array[mid] <= value ) {\n            lower = mid + 1;\n        } else {\n            upper = mid;\n        }\n\n    }\n    return lower;\n\n};", "language": "JavaScript"}
{"filename": "p02917_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var zwXWYz = {\n        'jYpLv': function (x, y) {\n            return x < y;\n        },\n        'pHoDn': function (x, y) {\n            return x - y;\n        },\n        'QYWzP': function (x, y) {\n            return x + y;\n        },\n        'atGLz': function (x, y) {\n            return x + y;\n        }\n    };\n    const list = lines[0x1]['split']('\\x20')['map'](v => v - 0x0);\n    let ans = 0x0;\n    for (let i = 0x0; zwXWYz['jYpLv'](i, zwXWYz['pHoDn'](list['length'], 0x1)); i++) {\n        ans += Math['min'](list[i], list[zwXWYz['QYWzP'](i, 0x1)]);\n    }\n    ans += zwXWYz['atGLz'](list[zwXWYz['pHoDn'](list['length'], 0x1)], list[0x0]);\n    console['log'](ans);\n});", "test_cases": [["3\n2 5", "9"], ["2\n3", "6"], ["6\n0 153 10 10 23", "53"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const list = lines[1].split(\" \").map(v=>v-0);\n    let ans = 0;\n    for(let i=0;i<list.length-1;i++){\n        ans+=Math.min(list[i],list[i+1])\n    }\n    ans += list[list.length-1] + list[0];\n    console.log(ans);\n});\n", "language": "JavaScript"}
{"filename": "p02405_1", "type": "JavaScript", "obfuscated": "(function () {\n    var SRRpjD = {\n        'oOAkm': function (x, y) {\n            return x >= y;\n        },\n        'eVjzH': function (x, y) {\n            return x % y;\n        },\n        'VBmXs': function (x, y) {\n            return x === y;\n        },\n        'ZwEvt': function (x, y) {\n            return x - y;\n        },\n        'IgJAM': function (x, y) {\n            return x + y;\n        },\n        'wbCwZ': function (x, y) {\n            return x * y;\n        },\n        'aymlk': function (x, y) {\n            return x - y;\n        },\n        'Czacd': function (callee, param1) {\n            return callee(param1);\n        },\n        'Ufczv': '/dev/stdin',\n        'kmVrR': 'ascii',\n        'IYzvL': '0\\x200',\n        'AhiCs': function (x, y) {\n            return x + y;\n        },\n        'UXzqM': function (x, y) {\n            return x % y;\n        },\n        'HOKYH': function (x, y) {\n            return x < y;\n        }\n    };\n    var max, max_log2, series, col, j, str, i, line, hw, even, odd;\n    max = 0x12c;\n    max_log2 = SRRpjD['ZwEvt'](max['toString'](0x2)['length'], 0x1);\n    series = [\n        0x1,\n        0x2\n    ];\n    col = [\n        '#',\n        '#.'\n    ];\n    j = 0x2;\n    str = '#.';\n    for (i = 0x2; i <= max_log2; i++) {\n        series['push'](j *= 0x2);\n        col['push'](str = SRRpjD['IgJAM'](str, str));\n    }\n    series['push'](SRRpjD['wbCwZ'](series[SRRpjD['aymlk'](series['length'], 0x1)], 0x2));\n    function get_column(w) {\n        var i, res;\n        res = '';\n        for (i = 0x1; i < series['length']; i++) {\n            if (w < series[i])\n                break;\n            if (SRRpjD['oOAkm'](SRRpjD['eVjzH'](w, series[i + 0x1]), series[i]))\n                res = res + col[i];\n        }\n        if (SRRpjD['VBmXs'](w % 0x2, 0x1))\n            res = res + '#';\n        return res;\n    }\n    line = SRRpjD['Czacd'](require, 'fs')['readFileSync'](SRRpjD['Ufczv'], SRRpjD['kmVrR'])['split']('\\x0a');\n    for (i in line) {\n        if (line[i] === SRRpjD['IYzvL'])\n            break;\n        hw = line[i]['split']('\\x20')['map'](Number);\n        even = get_column(hw[0x1]);\n        odd = SRRpjD['AhiCs'](even['slice'](0x1), SRRpjD['VBmXs'](SRRpjD['UXzqM'](hw[0x1], 0x2), 0x0) ? '#' : '.');\n        for (j = 0x0; SRRpjD['HOKYH'](j, hw[0x0]); j++) {\n            if (SRRpjD['VBmXs'](SRRpjD['UXzqM'](j, 0x2), 0x0))\n                console['log'](even);\n            else\n                console['log'](odd);\n        }\n        console['log']('');\n    }\n}());", "test_cases": [["3 4\n5 6\n3 3\n2 2\n1 1\n0 0", "#.#.\n.#.#\n#.#.\n\n#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#\n#.#.#.\n\n#.#\n.#.\n#.#\n\n#.\n.#\n\n#"]], "original": "(function () {\n\tvar max, max_log2, series, col, j, str, i, line, hw, even, odd;\n\t\n\tmax = 300;\n\tmax_log2 = max.toString(2).length - 1;\n\n\tseries = [1, 2];\n\tcol = ['#', '#.'];\n\tj = 2;\n\tstr = '#.';\n\tfor (i = 2; i <= max_log2; i++) {\n\t\tseries.push(j *= 2);\n\t\tcol.push(str = str + str);\n\t}\n\tseries.push(series[series.length-1] * 2);\n\n\tfunction get_column(w) {\n\t\tvar i, res;\n\t\tres = \"\";\n\t\tfor (i = 1; i < series.length; i++) {\n\t\t\tif (w < series[i]) break;\n\t\t\tif (w % series[i+1] >= series[i])\n\t\t\t\tres = res + col[i];\n\t\t}\n\t\tif (w % 2 === 1) res = res + '#';\n\t\treturn res;\n\t}\n\n\tline = require('fs').readFileSync('/dev/stdin', 'ascii').split('\\n');\n\tfor (i in line) {\n\t\tif (line[i] === '0 0') break;\n\t\thw = line[i].split(' ').map(Number);\n\t\teven = get_column(hw[1]);\n\t\todd = even.slice(1) + ((hw[1] % 2 === 0) ? '#' : '.');\n\t\tfor (j = 0; j < hw[0]; j++) {\n\t\t\tif (j % 2 === 0) console.log(even);\n\t\t\telse console.log(odd);\n\t\t}\n\t\tconsole.log(\"\");\n\t}\n}) ();", "language": "JavaScript"}
{"filename": "p02602_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TOzLtM = {\n        'FyyIm': function (callee, param1) {\n            return callee(param1);\n        },\n        'bTTOa': function (x, y) {\n            return x < y;\n        },\n        'Inper': function (x, y) {\n            return x - y;\n        },\n        'KAlJe': function (x, y) {\n            return x < y;\n        },\n        'cAOxP': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var VQcucU = '0|1|2|5|4|3'['split']('|');\n    var hcztbw = 0x0;\n    while (!![]) {\n        switch (VQcucU[hcztbw++]) {\n        case '0':\n            input = input['replace'](/\\n/g, '\\x20');\n            continue;\n        case '1':\n            input = input['split']('\\x20');\n            continue;\n        case '2':\n            var A = TOzLtM['FyyIm'](Number, input[0x0]);\n            continue;\n        case '3':\n            for (var i = 0x0; TOzLtM['bTTOa'](i, TOzLtM['Inper'](input['length'], B)); i++) {\n                if (TOzLtM['KAlJe'](TOzLtM['FyyIm'](Number, input[i]), TOzLtM['cAOxP'](Number, input[i + B]))) {\n                    console['log']('Yes');\n                } else {\n                    console['log']('No');\n                }\n            }\n            continue;\n        case '4':\n            input = input['slice'](0x2);\n            continue;\n        case '5':\n            var B = TOzLtM['cAOxP'](Number, input[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n96 98 95 100 20", "Yes\nNo"], ["3 2\n1001 869120 1001", "No"], ["15 7\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9", "Yes\nYes\nNo\nYes\nYes\nNo\nYes\nYes"]], "original": "function Main(input) {\n  input = input.replace(/\\n/g, ' ');\n  input = input.split(\" \");\n  var A = Number(input[0]);\n  var B = Number(input[1]);\n  input = input.slice(2)\n  for(var i=0;i<input.length-B;i++){\n    if(Number(input[i])<Number(input[i+B])){\n      console.log(\"Yes\");\n    }else{\n      console.log(\"No\");\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02607_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    const GMhSiI = {\n        'HpOKc': function (x, y) {\n            return x < y;\n        },\n        'nUVwb': function (x, y) {\n            return x % y;\n        },\n        'zvWuV': function (x, y) {\n            return x + y;\n        },\n        'dGDpD': function (x, y) {\n            return x === y;\n        }\n    };\n    let a = arg['trim']()['split']('\\x0a')[0x1]['split']('\\x20')['map'](Number);\n    let N = a['length'];\n    let ans = 0x0;\n    for (let i = 0x0; GMhSiI['HpOKc'](i, N); i++) {\n        if (GMhSiI['nUVwb'](GMhSiI['zvWuV'](i, 0x1), 0x2) === 0x0) {\n            continue;\n        }\n        if (GMhSiI['dGDpD'](a[i] % 0x2, 0x0)) {\n            continue;\n        }\n        ans++;\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 3 4 5 7", "2"], ["15\n13 76 46 15 50 98 93 77 31 43 84 90 6 24 14", "3"]], "original": "\"use strict\"\nfunction main(arg) {\n    let a = arg.trim().split(\"\\n\")[1].split(\" \").map(Number)\n    let N = a.length\n    let ans = 0\n    for (let i = 0; i < N; i++) {\n        if ((i+1) % 2 === 0) {\n            continue\n        }\n        if (a[i] % 2 === 0) {\n            continue\n        }\n        ans++\n        // console.log(i)\n    }\n    console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02683_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const bMwxfz = {\n        'CEUiM': function (x, y) {\n            return x < y;\n        },\n        'MrmNe': function (callee, param1) {\n            return callee(param1);\n        },\n        'zVHZT': function (x, y) {\n            return x + y;\n        },\n        'DFAGy': function (x, y) {\n            return x + y;\n        },\n        'QpxDs': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'hSBFD': function (callee, param1) {\n            return callee(param1);\n        },\n        'yZdTz': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const lines = input['trim']()['split']('\\x0a');\n    const [N, M, X] = bMwxfz['MrmNe'](splitN, lines[0x0]);\n    const costs = [];\n    const options = [...bMwxfz['hSBFD'](Array, N)['keys']()];\n    bMwxfz['yZdTz'](select, options);\n    function select(options, cost = 0x0, aList = []) {\n        for (let i = 0x0; bMwxfz['CEUiM'](i, options['length']); i++) {\n            const _options = [...options], [s] = _options['splice'](i, 0x1), [c, ...a] = bMwxfz['MrmNe'](splitN, lines[bMwxfz['zVHZT'](s, 0x1)]), _cost = bMwxfz['DFAGy'](cost, c), _aList = a['map']((v, i) => v + (aList[i] || 0x0));\n            if (_aList['every'](v => v >= X)) {\n                costs['push'](_cost);\n                continue;\n            }\n            bMwxfz['QpxDs'](select, _options, _cost, _aList);\n        }\n    }\n    console['log'](costs['length'] ? Math['min'](...costs) : -0x1);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction splitN(s) {\n    return s['split']('\\x20')['map'](Number);\n}", "test_cases": [["3 3 10\n60 2 2 4\n70 8 7 9\n50 2 3 9", "120"], ["3 3 10\n100 3 1 4\n100 1 5 9\n100 2 6 5", "-1"], ["8 5 22\n100 3 7 5 3 1\n164 4 5 2 7 8\n334 7 2 7 2 9\n234 4 7 2 8 2\n541 5 4 3 3 6\n235 4 8 6 9 7\n394 3 6 1 6 2\n872 8 4 3 7 2", "1067"]], "original": "function main(input) {\n  const lines = input.trim().split(\"\\n\");\n  const [N, M, X] = splitN(lines[0]);\n\n  const costs = [];\n  const options = [...Array(N).keys()];\n  select(options);\n\n  function select(options, cost = 0, aList = []) {\n    for (let i = 0; i < options.length; i++) {\n      const\n        _options = [...options],\n        [s] = _options.splice(i, 1),\n        [c, ...a] = splitN(lines[s+1]),\n        _cost = cost + c,\n        _aList = a.map((v, i) => v + (aList[i] || 0));\n      \n      if (_aList.every(v => v >= X)) {\n        costs.push(_cost);\n        continue;\n      }\n      select(_options, _cost, _aList);\n    }\n  }\n\n  console.log(costs.length ? Math.min(...costs) : -1);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n\nfunction splitN(s) {\n  return s.split(' ').map(Number);\n}", "language": "JavaScript"}
{"filename": "p02691_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction main() {\n    const xnyAva = {\n        'nVwjl': function (callee, param1) {\n            return callee(param1);\n        },\n        'zUURx': function (x, y) {\n            return x + y;\n        },\n        'evIom': function (x, y) {\n            return x + y;\n        },\n        'cgQJE': function (x, y) {\n            return x + y;\n        },\n        'AUBlN': function (x, y) {\n            return x - y;\n        },\n        'OkIsB': function (x, y) {\n            return x + y;\n        },\n        'TRSAx': function (x, y) {\n            return x * y;\n        }\n    };\n    let n = +cin['shift']();\n    let B = {};\n    let C = {};\n    cin['forEach']((v, i) => {\n        let x = +v;\n        B[xnyAva['nVwjl'](String, xnyAva['zUURx'](i, x))] = xnyAva['evIom'](B[xnyAva['nVwjl'](String, xnyAva['cgQJE'](i, x))], 0x1) || 0x1;\n        C[xnyAva['nVwjl'](String, xnyAva['AUBlN'](i, x))] = xnyAva['OkIsB'](C[xnyAva['nVwjl'](String, i - x)], 0x1) || 0x1;\n    });\n    let keys = Object['keys'](B);\n    let ans = 0x0;\n    keys['forEach'](i => {\n        ans += xnyAva['TRSAx'](B[i], C[i]) || 0x0;\n    });\n    return ans;\n}", "test_cases": [["6\n2 3 3 1 3 1", "3"], ["6\n5 2 4 2 8 8", "0"], ["32\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5", "22"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar cin = input.split(/ |\\n/), cid = 0;\n\nvar myOut = main();\nif (myOut !== undefined) console.log(myOut);\n\nfunction main() {\n    //console.log(cin);\n    //   cin = cin.map(i => +i);\n    let n = +cin.shift();\n    let B = {};\n    let C = {};\n    cin.forEach((v, i) => {\n        let x = +v;\n        B[String(i + x)] = B[String(i + x)] + 1 || 1;\n        C[String(i - x)] = C[String(i - x)] + 1 || 1;\n    });\n    //console.log({ B, C })\n    let keys = Object.keys(B);\n    let ans = 0;\n    keys.forEach(i => {\n        ans += (B[i] * C[i] || 0);\n        //console.log(i, B[i], C[i]);\n    });\n\n\n    return ans;\n}", "language": "JavaScript"}
{"filename": "p02696_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    ABN = input['split']('\\x20')['map'](item => parseInt(item));\n    console['log'](F(ABN[0x0], ABN[0x1], ABN[0x2]));\n};\nconst F = (A, B, N) => {\n    const ZQmdOe = {\n        'qetDC': function (x, y) {\n            return x <= y;\n        },\n        'XqApe': function (x, y) {\n            return x / y;\n        },\n        'LEAwj': function (x, y) {\n            return x * y;\n        },\n        'iQAau': function (x, y) {\n            return x == y;\n        },\n        'TJPfu': function (x, y) {\n            return x > y;\n        }\n    };\n    max = 0x0;\n    count = 0x0;\n    count0 = 0x0;\n    for (x = 0x0; ZQmdOe['qetDC'](x, N); x++) {\n        result = Math['floor'](ZQmdOe['XqApe'](A * x, B)) - ZQmdOe['LEAwj'](A, Math['floor'](ZQmdOe['XqApe'](x, B)));\n        if (ZQmdOe['iQAau'](result, 0x0)) {\n            count0++;\n        }\n        if (ZQmdOe['TJPfu'](count0, 0x2)) {\n            break;\n        }\n        if (ZQmdOe['TJPfu'](result, max)) {\n            max = result;\n            count = x;\n        }\n    }\n    return max;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 7 4", "2"], ["11 10 9", "9"]], "original": "const Main = (input) => {\n    // array = input.split('\\n')\n    // ABN = array.shift().split(' ').map(item => parseInt(item))\n    ABN = input.split(' ').map(item => parseInt(item))\n    // array.pop()\n    // console.log(array)\n    // arrayInt = array.map(item => item.split(' ').map(value => parseInt(value)))\n    // console.log(arrayInt)\n    // arrayInt = array.map(item => parseInt(item))\n    console.log(F(ABN[0], ABN[1], ABN[2]))\n}\n\nconst F = (A, B, N) => {\n    max = 0\n    count = 0\n    count0 = 0\n    for (x = 0; x <= N; x++) {\n        result = Math.floor(A * x / B) - A * Math.floor(x / B)\n        if (result == 0) {\n            count0++\n        }\n        if (count0 > 2) {\n            break\n        }\n        // console.log(x, result, max)\n        if (result > max) {\n            max = result\n            count = x\n        }\n    }\n    return max\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02743_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\na = l['shift']() * 0x1;\nb = l['shift']() * 0x1;\nc = l['shift']() * 0x1;\nconsole['log'](Math['sqrt'](a) + Math['sqrt'](b) < Math['sqrt'](c) ? 'Yes' : 'No');", "test_cases": [["2 3 9", "No"], ["2 3 10", "Yes"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\na = l.shift() * 1\nb = l.shift() * 1 \nc = l.shift() * 1 \nconsole.log(Math.sqrt(a)+Math.sqrt(b)<Math.sqrt(c) ? \"Yes\": \"No\")", "language": "JavaScript"}
{"filename": "p02924_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var nGPrZP = {\n        'RuocL': '0|3|2|1|4',\n        'AScdp': function (x, y) {\n            return x != y;\n        },\n        'DuzrK': function (x, y) {\n            return x < y;\n        },\n        'iYpcP': function (x, y) {\n            return x % y;\n        },\n        'cHEWs': function (x, y) {\n            return x + y;\n        },\n        'iAbCR': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var MSGdRA = nGPrZP['RuocL']['split']('|');\n    var vFfIJm = 0x0;\n    while (!![]) {\n        switch (MSGdRA[vFfIJm++]) {\n        case '0':\n            input = input['split']('\\x0a');\n            continue;\n        case '1':\n            if (nGPrZP['AScdp'](n, 0x1)) {\n                for (var i = 0x1; nGPrZP['DuzrK'](i, n); i++) {\n                    count += nGPrZP['iYpcP'](i, nGPrZP['cHEWs'](i, 0x1));\n                }\n            }\n            continue;\n        case '2':\n            var count = 0x0;\n            continue;\n        case '3':\n            var n = nGPrZP['iAbCR'](parseInt, input[0x0], 0xa);\n            continue;\n        case '4':\n            console['log']('%s', count);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2", "1"], ["13", "78"], ["1", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0], 10);\n    var count = 0;\n    if (n != 1) {\n        for (var i = 1; i < n; i++ ) {\n            count += i % (i + 1);\n        }\n    }\n    //出力\n    console.log('%s',count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02975_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var MtoADR = {\n        'Oedqd': function (x, y) {\n            return x < y;\n        },\n        'DsCsT': function (x, y) {\n            return x - y;\n        },\n        'pguMk': function (x, y) {\n            return x === y;\n        },\n        'PAQfU': function (x, y) {\n            return x - y;\n        },\n        'Fnibh': function (x, y) {\n            return x + y;\n        },\n        'FbZrF': 'Yes'\n    };\n    input = input['split']('\\x0a');\n    var N = input[0x0];\n    var a = input[0x1]['split']('\\x20');\n    var flag = !![];\n    a = a['map'](x => parseInt(x));\n    for (var i = 0x0; MtoADR['Oedqd'](i, MtoADR['DsCsT'](N, 0x2)); i++) {\n        var x = MtoADR['pguMk'](i, 0x0) ? MtoADR['DsCsT'](N, 0x1) : MtoADR['PAQfU'](i, 0x1);\n        if ((a[MtoADR['Fnibh'](i, 0x1)] ^ a[x]) !== a[i]) {\n            flag = ![];\n            break;\n        }\n    }\n    var str = MtoADR['pguMk'](flag, !![]) ? MtoADR['FbZrF'] : 'No';\n    console['log']('%s', str);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3", "Yes"], ["4\n1 2 4 8", "No"]], "original": "function Main(input) {\n  input = input.split('\\n')\n  var N = input[0]\n  var a = input[1].split(' ')\n  var flag = true\n  a = a.map(x => parseInt(x))\n\n  for (var i = 0; i < N - 2; i++) {\n    var x = i === 0 ? N - 1 : i - 1\n    if ((a[i + 1] ^ a[x]) !== a[i]) {\n      flag = false\n      break\n    }\n  }\n\n  var str = flag === true ? 'Yes' : 'No'\n\n  console.log('%s', str)\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02988_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = arg => {\n    const ZerUie = {\n        'CUyqG': function (x, y) {\n            return x < y;\n        },\n        'mMaHt': function (x, y) {\n            return x - y;\n        },\n        'mJcNd': function (x, y) {\n            return x < y;\n        },\n        'LGsMz': function (x, y) {\n            return x + y;\n        },\n        'ijcXo': function (x, y) {\n            return x < y;\n        }\n    };\n    let input = arg['trim']()['split']('\\x0a');\n    let n = parseInt(input[0x0]);\n    let pArr = input[0x1]['split']('\\x20')['map'](Number);\n    let count = 0x0;\n    for (let i = 0x1; ZerUie['CUyqG'](ZerUie['mMaHt'](i, 0x1), n); i++) {\n        if (ZerUie['CUyqG'](pArr[ZerUie['mMaHt'](i, 0x1)], pArr[i]) && ZerUie['mJcNd'](pArr[i], pArr[ZerUie['LGsMz'](i, 0x1)]) || pArr[ZerUie['LGsMz'](i, 0x1)] < pArr[i] && ZerUie['ijcXo'](pArr[i], pArr[ZerUie['mMaHt'](i, 0x1)])) {\n            count += 0x1;\n        }\n    }\n    console['log'](count);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 3 5 4 2", "2"], ["9\n9 6 3 2 5 8 7 4 1", "5"]], "original": "'use strict'\nconst Main = (arg) => {\n  let input = arg.trim().split('\\n');\n  let n = parseInt(input[0]);\n  let pArr = input[1].split(' ').map(Number);\n  // console.log({ n, pArr });\n  let count = 0;\n  for (let i = 1; i - 1 < n; i++) {\n    if ((pArr[i - 1] < pArr[i] && pArr[i] < pArr[i + 1])\n      || (pArr[i + 1] < pArr[i] && pArr[i] < pArr[i - 1])) {\n      count += 1;\n    }\n  }\n  console.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03037_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(stdin) {\n    const CQrXOO = {\n        'fMUtV': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = stdin['split']('\\x0a');\n    const N = input['shift']()['split']('\\x20')['map'](v => parseInt(v, 0xa))[0x0];\n    const gates = input['map'](g => g['split']('\\x20')['map'](v => parseInt(v, 0xa)));\n    const cards = new Array(N)['fill'](!![]);\n    gates['forEach'](g => {\n        for (let i = 0x0; i < CQrXOO['fMUtV'](g[0x0], 0x1); ++i) {\n            cards[i] = ![];\n        }\n        for (let i = g[0x1]; i < N; ++i) {\n            cards[i] = ![];\n        }\n    });\n    console['log'](cards['filter'](c => c)['length']);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 2\n1 3\n2 4", "2"], ["10 3\n3 6\n5 7\n6 9", "1"], ["100000 1\n1 100000", "100000"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  const N = input.shift().split(' ').map(v => parseInt(v, 10))[0];\n  const gates = input.map(g => g.split(' ').map(v => parseInt(v, 10)));\n  const cards = new Array(N).fill(true);\n\n  gates.forEach(g => {\n    for (let i = 0; i < g[0] - 1; ++i) {\n      cards[i] = false;\n    }\n\n    for (let i = g[1]; i < N; ++i) {\n      cards[i] = false;\n    }\n  });\n\n  console.log(cards.filter(c => c).length);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03073_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var IOIriW = {\n        'lijTV': function (x, y) {\n            return x < y;\n        },\n        'zOdIZ': function (x, y) {\n            return x != y;\n        },\n        'kKXpO': function (callee, param1) {\n            return callee(param1);\n        },\n        'sPcEe': function (x, y) {\n            return x % y;\n        },\n        'TJCXq': function (x, y) {\n            return x - y;\n        }\n    };\n    var cnt = 0x0;\n    for (var i = 0x0; IOIriW['lijTV'](i, input['length']); i++) {\n        if (IOIriW['zOdIZ'](IOIriW['kKXpO'](parseInt, input[i]), IOIriW['sPcEe'](i, 0x2)))\n            cnt++;\n    }\n    console['log'](IOIriW['kKXpO'](parseInt, Math['min'](cnt, IOIriW['TJCXq'](input['length'], cnt))));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["000", "1"], ["10010010", "3"], ["0", "0"]], "original": "function Main(input) {\n  var cnt = 0;\n  for(var i=0; i<input.length; i++){\n  \tif(parseInt(input[i])!=i%2)cnt++;\n  }\n  console.log(parseInt(Math.min(cnt, input.length-cnt)));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03147_1", "type": "JavaScript", "obfuscated": "function search(h) {\n    var ZJomGu = {\n        'wMhiE': function (x, y) {\n            return x < y;\n        },\n        'QWRrj': function (x, y) {\n            return x == y;\n        }\n    };\n    var is_start = ![];\n    for (var i = 0x0; ZJomGu['wMhiE'](i, h['length']); i++) {\n        if (is_start) {\n            if (ZJomGu['QWRrj'](h[i], 0x0)) {\n                break;\n            }\n            h[i] -= 0x1;\n        } else {\n            if (h[i] == 0x0) {\n                continue;\n            }\n            is_start = !![];\n            h[i] -= 0x1;\n        }\n    }\n    return h;\n}\nfunction main(arg) {\n    var AdqBCE = {\n        'PiiGu': function (callee, param1) {\n            return callee(param1);\n        },\n        'yRePf': function (x, y) {\n            return x == y;\n        }\n    };\n    var h = arg['split']('\\x0a')[0x1]['split']('\\x20')['map'](e => Number(e));\n    var arr = [];\n    var i = 0x0;\n    for (i = 0x1;; i++) {\n        h = AdqBCE['PiiGu'](search, h);\n        if (AdqBCE['yRePf'](h[0x0], 0x0)) {\n            var b = h['filter']((x, i, self) => self['indexOf'](x) === i);\n            if (AdqBCE['yRePf'](b['length'], 0x1)) {\n                break;\n            }\n        }\n    }\n    console['log'](i);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 2 2 1", "2"], ["5\n3 1 2 3 1", "5"], ["8\n4 23 75 0 23 96 50 100", "221"]], "original": "function search(h) {\n    var is_start = false;\n    for (var i = 0; i < h.length; i++) {\n        if (is_start) {\n            if (h[i] == 0) {\n                break\n            }\n            h[i] -= 1\n\n        } else {\n            if (h[i] == 0) {\n                continue;\n            }\n\n            is_start = true;\n            h[i] -= 1\n        }\n    }\n    return h\n}\n\nfunction main(arg) {\n\tvar h = arg.split(\"\\n\")[1].split(\" \").map(e => Number(e))\n\tvar arr = []\n\n    var i = 0;\n\n    for (i = 1;;i++) {\n        h = search(h)\n        if (h[0] == 0) {\n            var b = h.filter((x, i, self) => self.indexOf(x) === i);\n            if (b.length == 1) {\n                break\n            }\n        }\n    }\n\t console.log(i)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03240_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const dURmRc = {\n        'qQlAW': function (callee, param1) {\n            return callee(param1);\n        },\n        'koMuD': function (x, y) {\n            return x <= y;\n        },\n        'jVfrk': function (x, y) {\n            return x + y;\n        },\n        'lcOyB': function (x, y) {\n            return x + y;\n        },\n        'PgmiN': function (x, y) {\n            return x - y;\n        },\n        'fdJxe': function (x, y) {\n            return x !== y;\n        },\n        'IUdzG': function (x, y) {\n            return x === y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = dURmRc['qQlAW'](parseInt, input[0x0]);\n    let X = [];\n    let Y = [];\n    let Z = [];\n    input['slice'](0x1, N + 0x1)['forEach'](v => {\n        let tmp = v['split']('\\x20')['map'](j => parseInt(j));\n        X['push'](tmp[0x0]);\n        Y['push'](tmp[0x1]);\n        Z['push'](tmp[0x2]);\n    });\n    const MAX = 0x64;\n    for (let y = 0x0; dURmRc['koMuD'](y, MAX); y++) {\n        for (let x = 0x0; dURmRc['koMuD'](x, MAX); x++) {\n            let needH = -0x1;\n            for (let i = 0x0; i < N; i++) {\n                let tmp = dURmRc['jVfrk'](dURmRc['lcOyB'](Z[i], Math['abs'](Y[i] - y)), Math['abs'](dURmRc['PgmiN'](X[i], x)));\n                if (needH === -0x1) {\n                    needH = tmp;\n                } else if (dURmRc['fdJxe'](needH, tmp)) {\n                    needH = -0x2;\n                    break;\n                }\n            }\n            if (dURmRc['IUdzG'](needH, -0x2))\n                continue;\n            console['log']('%d\\x20%d\\x20%d', x, y, needH);\n        }\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["4\n2 3 5\n2 1 5\n1 2 5\n3 2 5", "2 2 6"], ["2\n0 0 100\n1 1 98", "0 0 100"], ["3\n99 1 191\n100 1 192\n99 0 192", "100 0 193"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0])\n    let X = []\n    let Y = []\n    let Z = []\n    input.slice(1, N + 1).forEach(v => {\n        let tmp = v.split(' ').map(j => parseInt(j))\n        X.push(tmp[0])\n        Y.push(tmp[1])\n        Z.push(tmp[2])\n    })\n\n    const MAX = 100\n    for(let y = 0; y <= MAX; y++){\n        for(let x = 0; x <= MAX; x++){\n            let needH = -1\n            for(let i = 0; i < N; i++){\n                let tmp = Z[i] + Math.abs(Y[i] - y) + Math.abs(X[i] - x)\n                if(needH === -1){\n                    needH = tmp\n                }else if(needH !== tmp){\n                    needH = -2\n                    break\n                }\n            }\n            if(needH === -2) continue\n            console.log('%d %d %d', x, y, needH)\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03324_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const uArrvg = {\n        'izdWw': function (callee, param1) {\n            return callee(param1);\n        },\n        'KRmyG': function (x, y) {\n            return x * y;\n        },\n        'PPybq': function (x, y) {\n            return x + y;\n        },\n        'Ajmag': function (x, y) {\n            return x !== y;\n        },\n        'phXji': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const D = uArrvg['izdWw'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const N = uArrvg['izdWw'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    let temp = [...Array(uArrvg['KRmyG'](D, 0x2))]['fill'](0x0);\n    let answer = uArrvg['izdWw'](parseInt, uArrvg['PPybq'](N, String(temp['join'](''))));\n    let plus = uArrvg['izdWw'](parseInt, uArrvg['PPybq'](0x1, uArrvg['izdWw'](String, temp['join'](''))));\n    console['log'](uArrvg['Ajmag'](N, 0x64) ? answer : uArrvg['phXji'](answer, plus));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["0 5", "5"], ["1 11", "1100"], ["2 85", "850000"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const D = parseInt(arg[0].split(\" \")[0]);\n    const N = parseInt(arg[0].split(\" \")[1]);\n    \n    let temp = [...Array(D * 2)].fill(0);\n    let answer = parseInt(N + String(temp.join(\"\")));\n    let plus  = parseInt(1 + String(temp.join(\"\")));\n    \n    console.log(N !== 100 ? answer : answer + plus);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02289_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')['readFileSync'](config['input'], 'ascii')['split'](config['newline']);\nS = [];\nfor (i in line) {\n    ary = line[i]['split']('\\x20');\n    if (ary[0x0] === 'insert')\n        S['push'](parseInt(ary[0x1], 0xa));\n    else if (ary[0x0] === 'extract') {\n        S['sort'](function (a, b) {\n            var fLjxqS = {\n                'SnmdR': function (x, y) {\n                    return x - y;\n                }\n            };\n            return fLjxqS['SnmdR'](a, b);\n        });\n        console['log'](S['pop']());\n    }\n}", "test_cases": [["insert 8\ninsert 2\nextract\ninsert 10\nextract\ninsert 11\nextract\nextract\nend", "8\n10\n11\n2"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline);\n\nS = [];\n\nfor (i in line) {\n  ary = line[i].split(' ');\n  if (ary[0] === 'insert') S.push(parseInt(ary[1], 10));\n  else if (ary[0] === 'extract') {\n    S.sort(function (a, b) { return a - b; });\n    console.log(S.pop());\n  }\n}", "language": "JavaScript"}
{"filename": "p02406_1", "type": "JavaScript", "obfuscated": "var readable = process['stdin'];\nreadable['resume']();\nreadable['setEncoding']('utf-8');\nreadable['on']('data', function (chunk) {\n    var LwQwNQ = {\n        'wgPCo': function (x, y) {\n            return x == y;\n        },\n        'sMzlt': function (x, y) {\n            return x % y;\n        },\n        'tvETK': function (x, y) {\n            return x + y;\n        },\n        'YZRmb': function (x, y) {\n            return x == y;\n        },\n        'idCaL': function (x, y) {\n            return x + y;\n        },\n        'JHXQX': function (x, y) {\n            return x <= y;\n        }\n    };\n    var n = parseInt(chunk);\n    var i = 0x1;\n    var output = [];\n    do {\n        var x = i;\n        if (LwQwNQ['wgPCo'](0x0, LwQwNQ['sMzlt'](x, 0x3))) {\n            output['push'](LwQwNQ['tvETK']('\\x20', i));\n        } else {\n            do {\n                if (LwQwNQ['YZRmb'](0x3, LwQwNQ['sMzlt'](x, 0xa))) {\n                    output['push'](LwQwNQ['idCaL']('\\x20', i));\n                    break;\n                } else {\n                    x /= 0xa;\n                }\n            } while (x);\n        }\n    } while (LwQwNQ['JHXQX'](++i, n));\n    console['log'](output['join'](''));\n});", "test_cases": [["30", "3 6 9 12 13 15 18 21 23 24 27 30"]], "original": "var readable = process.stdin;\nreadable.resume();\nreadable.setEncoding( 'utf-8' );\nreadable.on( 'data', function( chunk ) {\n  var n = parseInt( chunk );\n  var i = 1;\n  var output = [];\n  do{\n    var x = i;\n    if( 0 == x%3 ) {\n      output.push( \" \"+i );\n    } else {\n      do {\n        if( 3 == x%10 ) {\n          output.push( \" \"+i );\n          break;\n        } else {\n          x /= 10;\n        }\n      } while( x );\n    }\n  } while( ++i <= n );\n  \n  console.log( output.join( '' ) );\n});", "language": "JavaScript"}
{"filename": "p02642_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var hSaqmV = {\n        'NdIap': function (x, y) {\n            return x + y;\n        },\n        'PCJtD': function (x, y) {\n            return x ** y;\n        },\n        'AKSGU': function (x, y) {\n            return x <= y;\n        },\n        'WEFsG': function (x, y) {\n            return x === y;\n        },\n        'rCQYN': function (x, y) {\n            return x + y;\n        },\n        'WChBU': function (x, y) {\n            return x !== y;\n        }\n    };\n    var a = input[0x1]['trim']()['split']('\\x20')['map'](e => parseInt(e, 0xa));\n    var a_max = hSaqmV['NdIap'](hSaqmV['PCJtD'](0xa, 0x6), 0x1);\n    var dp = new Array(a_max + 0x1)['fill'](0x0);\n    for (var i of a) {\n        dp[i]++;\n    }\n    for (var i = 0x1; hSaqmV['AKSGU'](i, a_max); i++) {\n        if (hSaqmV['WEFsG'](dp[i], 0x0)) {\n            continue;\n        }\n        for (var j = hSaqmV['rCQYN'](i, i); j <= a_max; j += i) {\n            if (hSaqmV['WChBU'](dp[j], 0x0)) {\n                dp[j] = 0x0;\n            }\n        }\n    }\n    console['log'](dp['filter'](function (x) {\n        return x == 0x1;\n    })['length']);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["5\n24 11 8 3 16", "3"], ["4\n5 5 5 5", "0"], ["10\n33 18 45 28 8 19 89 86 2 4", "5"]], "original": "function main(input) {\n  var a = input[1].trim().split(\" \").map(e => parseInt(e, 10));\n  var a_max = 10**6+1;\n  var dp = new Array(a_max+1).fill(0);\n  for(var i of a){\n    dp[i]++;\n  }\n \n  for(var i=1;i<=a_max;i++){\n    if(dp[i]===0){ \n      continue;\n    }\n    for(var j=i+i;j<=a_max;j+=i){\n      if(dp[j]!==0){\n        dp[j]=0;\n      }\n    }\n  }\n  console.log(dp.filter(function(x){return x==1}).length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02646_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const ifYmVp = {\n        'dXZxP': function (callee, param1) {\n            return callee(param1);\n        },\n        'ptUAc': function (x, y) {\n            return x * y;\n        },\n        'dpEhQ': function (x, y) {\n            return x - y;\n        },\n        'JblNC': 'YES'\n    };\n    const arr = input['trim']()['split']('\\x0a');\n    const AV = arr[0x0]['split']('\\x20')['map'](Number);\n    const BW = arr[0x1]['split']('\\x20')['map'](Number);\n    const T = ifYmVp['dXZxP'](Number, arr[0x2]);\n    if (Math['abs'](AV[0x0] - BW[0x0]) < ifYmVp['ptUAc'](T, ifYmVp['dpEhQ'](AV[0x1], BW[0x1]))) {\n        console['log'](ifYmVp['JblNC']);\n    } else {\n        console['log']('NO');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 2\n3 1\n3", "YES"], ["1 2\n3 2\n3", "NO"], ["1 2\n3 3\n3", "NO"]], "original": "function Main(input){\n    const arr = input.trim().split(\"\\n\");\n    const AV = arr[0].split(\" \").map(Number);\n    const BW = arr[1].split(\" \").map(Number);\n    const T  = Number(arr[2]);\n    if(Math.abs(AV[0]-BW[0]) < T*(AV[1] - BW[1])){\n        console.log(\"YES\");\n    } else{\n        console.log(\"NO\");\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02687_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const NOwnkm = {\n        'jhlBR': 'ABC',\n        'IaQWk': 'ARC'\n    };\n    if (input === NOwnkm['jhlBR']) {\n        console['log'](NOwnkm['IaQWk']);\n    } else {\n        console['log'](NOwnkm['jhlBR']);\n    }\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["ABC", "ARC"]], "original": "\"use strict\";\nconst Main = input => {\n    if(input === \"ABC\") {\n        console.log(\"ARC\");\n    } else {\n        console.log(\"ABC\");\n    }\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02689_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst inputs = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\ninputs['shift']();\nconst heights = inputs['shift']()['split']('\\x20')['map'](v => parseInt(v, 0xa));\nconst towers = new Array(heights['length'])['fill']()['map'](_ => new Array());\ninputs['forEach'](v => {\n    const splited = v['split']('\\x20')['map'](w => parseInt(w, 0xa) - 0x1);\n    towers[splited[0x0]]['push'](splited[0x1]);\n    towers[splited[0x1]]['push'](splited[0x0]);\n});\nlet result = 0x0;\ntowers['forEach']((t, i) => {\n    const JNZCSc = {\n        'yveLa': function (x, y) {\n            return x <= y;\n        }\n    };\n    let good = !![];\n    if (t['length']) {\n        t['forEach'](t2 => {\n            if (JNZCSc['yveLa'](heights[i], heights[t2])) {\n                good = ![];\n            }\n        });\n    }\n    if (good) {\n        ++result;\n    }\n});\nconsole['log'](result);", "test_cases": [["4 3\n1 2 3 4\n1 3\n2 3\n2 4", "2"], ["6 5\n8 6 9 1 2 1\n1 3\n4 2\n4 3\n4 6\n4 6", "3"]], "original": "'use strict';\n\nconst inputs = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n');\ninputs.shift();\n\nconst heights = inputs.shift().split(' ').map(v => parseInt(v, 10));\nconst towers = new Array(heights.length).fill().map(_ => new Array());\n\ninputs.forEach(v => {\n  const splited = v.split(' ').map(w => parseInt(w, 10) - 1);\n\n  towers[splited[0]].push(splited[1]);\n  towers[splited[1]].push(splited[0]);\n});\n\nlet result = 0;\ntowers.forEach((t, i) => {\n  let good = true;\n\n  if (t.length) {\n    t.forEach(t2 => {\n      if (heights[i] <= heights[t2]) {\n        good = false;\n      }\n    });\n  }\n\n  if (good) {\n    ++result;\n  }\n});\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02766_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const rajoIN = {\n        'Gzzzt': function (callee, param1) {\n            return callee(param1);\n        },\n        'PuERh': function (x, y) {\n            return x < y;\n        },\n        'VoNCk': function (x, y) {\n            return x ** y;\n        }\n    };\n    let line = input['split'](/\\r?\\n/g);\n    let arr = line[0x0]['split']('\\x20');\n    const N = rajoIN['Gzzzt'](parseInt, arr[0x0]), K = rajoIN['Gzzzt'](parseInt, arr[0x1]);\n    let cnt = 0x1;\n    while (rajoIN['PuERh'](rajoIN['VoNCk'](K, cnt), N))\n        cnt++;\n    console['log'](cnt);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["11 2", "4"], ["1010101 10", "7"], ["314159265 3", "18"]], "original": "\"use strict\";\nfunction main(input) {\n    let line = input.split(/\\r?\\n/g);\n    let arr = line[0].split(\" \");\n    const N = parseInt(arr[0]), K = parseInt(arr[1]);\n    let cnt = 1;\n    while (K ** cnt < N) cnt++;\n    console.log(cnt);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02778_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var bKVwYv = {\n        'ZlPkv': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var x = 'x';\n    var output = bKVwYv['ZlPkv'](Array, input['length'])['fill'](x);\n    console['log'](output['join'](''));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["sardine", "xxxxxxx"], ["xxxx", "xxxx"], ["gone", "xxxx"]], "original": "function main(input) \n{\n    var x = \"x\";\n    var output = Array(input.length).fill(x);\n    console.log(output.join(\"\"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03000_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var xPVbgT = {\n        'VgFEZ': '0|3|2|8|5|6|7|1|4',\n        'ptwsi': function (x, y) {\n            return x < y;\n        },\n        'qhNga': function (x, y) {\n            return x <= y;\n        }\n    };\n    var Jyeppt = xPVbgT['VgFEZ']['split']('|');\n    var irMUYd = 0x0;\n    while (!![]) {\n        switch (Jyeppt[irMUYd++]) {\n        case '0':\n            lines = input['split']('\\x0a');\n            continue;\n        case '1':\n            for (i = 0x0; xPVbgT['ptwsi'](i, N); i++) {\n                distanceTravelled += +secondLine[i];\n                if (xPVbgT['qhNga'](distanceTravelled, X)) {\n                    numBounces += 0x1;\n                }\n            }\n            continue;\n        case '2':\n            N = +firstLine[0x0];\n            continue;\n        case '3':\n            firstLine = lines[0x0]['split']('\\x20');\n            continue;\n        case '4':\n            console['log'](numBounces);\n            continue;\n        case '5':\n            secondLine = lines[0x1]['split']('\\x20');\n            continue;\n        case '6':\n            distanceTravelled = 0x0;\n            continue;\n        case '7':\n            numBounces = 0x1;\n            continue;\n        case '8':\n            X = +firstLine[0x1];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 6\n3 4 5", "2"], ["4 9\n3 3 3 3", "4"]], "original": "function Main(input) {\n  //入力から変数を全て定義\n  lines = input.split(\"\\n\");\n  firstLine = lines[0].split(\" \");\n  N = +firstLine[0];\n  X = +firstLine[1];\n  secondLine = lines[1].split(\" \");\n  \n  //跳ねた距離がX以下かどうか判定するための変数\n  distanceTravelled = 0;\n  //跳ねた回数を記録するための変数（初期値が１なのは、最初に０地点でバウンスするのを先に含めているから）\n  numBounces= 1;\n  \n  //distanceTravelledに毎回バウンスする距離を足していき、\n  //もし跳ねた先がまだX以下の距離ならカウントを足す。これをN回やる。\n  for(i=0;i<N; i++){\n    distanceTravelled += +secondLine[i];\n    \n    if(distanceTravelled <= X){\n      numBounces += 1;\n    }\n  }\n  \n  console.log(numBounces);\n  \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03038_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', x => {\n    lines['push'](x);\n});\nvar A;\nrl['on']('close', () => {\n    var iqNmlb = {\n        'HcHdG': function (callee, param1) {\n            return callee(param1);\n        },\n        'ZXecH': function (x, y) {\n            return x < y;\n        },\n        'rZtjR': function (x, y) {\n            return x < y;\n        },\n        'QAomM': function (x, y) {\n            return x < y;\n        }\n    };\n    var N = iqNmlb['HcHdG'](Number, lines[0x0]['split']('\\x20')[0x0]);\n    var M = Number(lines[0x0]['split']('\\x20')[0x1]);\n    A = lines[0x1]['split']('\\x20')['map'](i => Number(i));\n    lines['shift']();\n    lines['shift']();\n    var BC = lines['map'](i => i['split']('\\x20')['map'](i => Number(i)));\n    A['sort']((a, b) => a - b);\n    BC['sort']((a, b) => b[0x1] - a[0x1]);\n    var k = 0x0;\n    var ans = 0x0;\n    for (var i = 0x0; iqNmlb['ZXecH'](i, M); i++) {\n        var b = BC[i][0x0];\n        var c = BC[i][0x1];\n        var cnt = 0x1;\n        for (var j = k; iqNmlb['ZXecH'](j, N); j++) {\n            if (iqNmlb['rZtjR'](b, cnt)) {\n                k = j;\n                break;\n            }\n            if (iqNmlb['QAomM'](A[j], c)) {\n                ans += c;\n            } else {\n                for (var x = j; iqNmlb['QAomM'](x, N); x++) {\n                    ans += A[x];\n                }\n                console['log'](ans);\n                return 0x0;\n            }\n            cnt++;\n        }\n    }\n    for (var x = j; x < N; x++) {\n        ans += A[x];\n    }\n    console['log'](ans);\n});", "test_cases": [["3 2\n5 1 4\n2 3\n1 5", "14"], ["10 3\n1 8 5 7 100 4 52 33 13 5\n3 10\n4 30\n1 4", "338"], ["3 2\n100 100 100\n3 99\n3 99", "300"], ["11 3\n1 1 1 1 1 1 1 1 1 1 1\n3 1000000000\n4 1000000000\n3 1000000000", "10000000001"]], "original": "var lines = [];\n\nvar readline = require('readline')\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\n\nrl.on('line', (x) => {\n    lines.push(x)\n});\n\nvar A;\nrl.on('close', () => {\n    var N = Number(lines[0].split(\" \")[0])\n    var M = Number(lines[0].split(\" \")[1])\n    A = lines[1].split(\" \").map(i => Number(i));\n\n    lines.shift(); lines.shift()\n\n    var BC = lines.map(i => i.split(\" \").map(i => Number(i)));\n\n    A.sort((a, b) => a - b);\n    BC.sort((a, b) => b[1] - a[1]);\n\n    var k = 0; var ans = 0;\n    for (var i = 0; i < M; i++) {\n        var b = BC[i][0]; var c = BC[i][1];\n        var cnt = 1;\n\n        for (var j = k; j < N; j++) {\n            if (b < cnt) { k = j; break; }\n\n            if (A[j] < c) { ans += c; }\n            else { for (var x = j; x < N; x++) { ans += A[x] } console.log(ans); return (0) }\n\n            cnt++;\n        }\n    }\n    for (var x = j; x < N; x++) { ans += A[x] } console.log(ans);\n\n});\n\n\n\n", "language": "JavaScript"}
{"filename": "p03072_1", "type": "JavaScript", "obfuscated": "input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlines = input['split']('\\x0a');\nN = lines['shift']() * 0x1;\nA = lines['shift']()['split']('\\x20');\nh = 0x0;\ncnt = 0x0;\nfor (i = 0x0; i < N; i++) {\n    if (h <= A[i]) {\n        cnt++;\n        h = A[i];\n    }\n}\nconsole['log'](cnt);", "test_cases": [["4\n6 5 6 8", "3"], ["5\n4 5 3 5 4", "3"], ["5\n9 5 6 8 4", "1"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nA = lines.shift().split(' ')\n\nh = 0\ncnt = 0\nfor (i=0; i<N; i++) {\n    if (h<=A[i]) {\n        cnt++\n        h = A[i]\n    }\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p03109_1", "type": "JavaScript", "obfuscated": "let lines = [];\nlet reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    lines['push'](line);\n});\nreader['on']('close', function () {\n    const frlMgN = {\n        'xXlCw': function (x, y) {\n            return x === y;\n        },\n        'lXLOh': 'Heisei',\n        'tblnc': 'TBD'\n    };\n    if (frlMgN['xXlCw'](lines['length'], 0x1)) {\n        let date_int = lines[0x0]['replace'](/\\//g, '');\n        if (date_int <= 0x13414de) {\n            console['log'](frlMgN['lXLOh']);\n            return;\n        }\n    }\n    console['log'](frlMgN['tblnc']);\n});", "test_cases": [["2019/04/30", "Heisei"], ["2019/11/01", "TBD"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nreader.on('line', function (line) {\n    lines.push(line);\n});\n\nreader.on('close', function () {\n    if (lines.length === 1) {\n        let date_int = lines[0].replace(/\\//g, '');\n        if (date_int <= 20190430) {\n            console.log('Heisei');\n            return;\n        }\n    }\n    console.log('TBD');\n});", "language": "JavaScript"}
{"filename": "p03127_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var ATVJnc = { 'wvSww': '3|1|4|2|0' };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var Zbjnzh = ATVJnc['wvSww']['split']('|');\n        var oNhtat = 0x0;\n        while (!![]) {\n            switch (Zbjnzh[oNhtat++]) {\n            case '0':\n                return f ? r : +r;\n            case '1':\n                if (typeof s[y] === 'string')\n                    s[y] = s[y]['split']('\\x20')['reverse']();\n                continue;\n            case '2':\n                if (!s[y]['length'])\n                    this['_y']++;\n                continue;\n            case '3':\n                var s = this['_s'], y = this['_y'], r;\n                continue;\n            case '4':\n                r = s[y]['pop']();\n                continue;\n            }\n            break;\n        }\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction gcd(a, b) {\n    var RVCvMA = {\n        'TSoXd': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'znzdb': function (x, y) {\n            return x % y;\n        }\n    };\n    return b ? RVCvMA['TSoXd'](gcd, b, RVCvMA['znzdb'](a, b)) : a;\n}\nconsole['log'](main());\nfunction main() {\n    var gnJyPF = {\n        'tDEFZ': '2|0|1|4|3',\n        'bWpJl': function (x, y) {\n            return x < y;\n        }\n    };\n    var ONuuXv = gnJyPF['tDEFZ']['split']('|');\n    var nRibLR = 0x0;\n    while (!![]) {\n        switch (ONuuXv[nRibLR++]) {\n        case '0':\n            var a = o['l']();\n            continue;\n        case '1':\n            var ans = a[0x0];\n            continue;\n        case '2':\n            var n = o['a']();\n            continue;\n        case '3':\n            return ans;\n        case '4':\n            for (var i = 0x1; gnJyPF['bWpJl'](i, n); i++) {\n                ans = gcd(ans, a[i]);\n            }\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["4\n2 10 8 40", "2"], ["4\n5 13 8 1000000000", "1"], ["3\n1000000000 1000000000 1000000000", "1000000000"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\nfunction gcd(a,b){return b?gcd(b,a%b):a;}\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var a = o.l();\n  var ans = a[0];\n  for(var i = 1; i < n; i++){\n    ans = gcd(ans, a[i]);\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03200_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const inputs = input['split']('\\x0a')['filter'](x => x !== '');\n    const s = inputs[0x0];\n    const result = s['split']('')['map']((input, index) => input === 'W' ? index : -0x1)['filter'](x => x !== -0x1)['reduce']((acc, cur, index) => acc + cur - index, 0x0);\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["BBW", "2"], ["BWBWBW", "6"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n  const s = inputs[0];\n\n  const result = s\n    .split(\"\")\n    .map((input, index) => (input === \"W\" ? index : -1))\n    .filter(x => x !== -1)\n    .reduce((acc, cur, index) => acc + cur - index, 0);\n\n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03244_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const qGssJh = {\n        'tsLJK': function (x, y) {\n            return x - y;\n        },\n        'nlBvT': function (x, y) {\n            return x < y;\n        },\n        'ogjOp': function (x, y) {\n            return x == y;\n        },\n        'BsrRq': function (x, y) {\n            return x + y;\n        },\n        'wwAdD': function (x, y) {\n            return x != y;\n        }\n    };\n    let lines = input['split']('\\x0a');\n    let N = qGssJh['tsLJK'](lines['shift'](), 0x0);\n    let V = lines['shift']()['split'](/\\s/)['map'](v => v - 0x0);\n    let ans = 0x0;\n    for (let n = 0x0; qGssJh['nlBvT'](n, qGssJh['tsLJK'](N, 0x2)); n++) {\n        if (qGssJh['ogjOp'](V[n], V[qGssJh['BsrRq'](n, 0x1)]))\n            ans += 0x1;\n        if (qGssJh['wwAdD'](V[n], V[qGssJh['BsrRq'](n, 0x2)]))\n            ans += 0x1;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n3 1 3 2", "1"], ["6\n105 119 105 119 105 119", "0"], ["4\n1 1 1 1", "2"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let N = lines.shift() - 0;\n    let V = lines.shift().split(/\\s/).map((v) => v - 0);\n    let ans = 0;\n    for (let n = 0; n < N - 2; n++) {\n        if (V[n] == V[n+1]) ans += 1;\n        if (V[n] != V[n+2]) ans += 1;\n    }\n    console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03250_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var nGcQNB = {\n        'ylNKd': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'muKZK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'QRluk': function (x, y) {\n            return x + y;\n        }\n    };\n    abc = input['split']('\\x20');\n    abc = abc['sort']();\n    a = '';\n    a += abc[0x2];\n    a += abc[0x1];\n    a = nGcQNB['ylNKd'](parseInt, a, 0xa);\n    b = nGcQNB['muKZK'](parseInt, abc[0x0], 0xa);\n    console['log'](nGcQNB['QRluk'](a, b));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 5 2", "53"], ["9 9 9", "108"], ["6 6 7", "82"]], "original": "\nfunction main(input){\n    abc=input.split(' ');\n    abc=abc.sort()\n    a=''\n    a+=abc[2]\n    a+=abc[1]\n    a=parseInt(a,10)\n    b=parseInt(abc[0],10)\n    console.log(a+b)\n    \n\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03274_1", "type": "JavaScript", "obfuscated": "function get_run_length(min, max) {\n    var JIvZvi = {\n        'GHcDz': function (x, y) {\n            return x >= y;\n        },\n        'TmhWp': function (x, y) {\n            return x <= y;\n        },\n        'jeJha': function (x, y) {\n            return x > y;\n        },\n        'ipaWO': function (x, y) {\n            return x + y;\n        },\n        'ummVQ': function (x, y) {\n            return x + y;\n        },\n        'fbpSv': function (x, y) {\n            return x * y;\n        }\n    };\n    var zsLEit = '1|4|0|3|2'['split']('|');\n    var oaXnNb = 0x0;\n    while (!![]) {\n        switch (zsLEit[oaXnNb++]) {\n        case '0':\n            if (JIvZvi['GHcDz'](min, 0x0)) {\n                result = max;\n            }\n            continue;\n        case '1':\n            var result = 0x0;\n            continue;\n        case '2':\n            return result;\n        case '3':\n            if (JIvZvi['TmhWp'](max, 0x0)) {\n                result = Math['abs'](min);\n            }\n            continue;\n        case '4':\n            if (JIvZvi['jeJha'](max, Math['abs'](min))) {\n                result = JIvZvi['ipaWO'](Math['abs'](min * 0x2), max);\n            } else {\n                result = JIvZvi['ummVQ'](Math['abs'](min), JIvZvi['fbpSv'](max, 0x2));\n            }\n            continue;\n        }\n        break;\n    }\n}\nfunction main(input) {\n    var FnUxvW = {\n        'NMveX': function (callee, param1) {\n            return callee(param1);\n        },\n        'VpthT': function (x, y) {\n            return x < y;\n        },\n        'yxlZZ': function (x, y) {\n            return x - y;\n        },\n        'XmAza': function (x, y) {\n            return x + y;\n        },\n        'lSlJg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = FnUxvW['NMveX'](parseInt, lines[0x0]['split']('\\x20')[0x0]);\n    const K = parseInt(lines[0x0]['split']('\\x20')[0x1]);\n    const Xs = lines[0x1]['split']('\\x20')['map'](x => parseInt(x));\n    var result = 0x989680;\n    for (var i = 0x0; FnUxvW['VpthT'](i, N - K + 0x1); i++) {\n        var min = Xs[i];\n        var max = Xs[FnUxvW['yxlZZ'](FnUxvW['XmAza'](i, K), 0x1)];\n        var tmp = FnUxvW['lSlJg'](get_run_length, min, max);\n        result = Math['min'](tmp, result);\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n-30 -10 10 20 50", "40"], ["3 2\n10 20 30", "20"], ["1 1\n0", "0"], ["8 5\n-9 -7 -4 -3 1 2 3 4", "10"]], "original": "function get_run_length(min, max){\n  var result = 0;\n\n  if(max > Math.abs(min)){\n    result = Math.abs(min*2) + max;\n  }else{\n    result = Math.abs(min) + max*2;\n  }\n\n  if(min>=0){result = max;}\n  if(max<=0){result = Math.abs(min);}\n\n  return result;\n}\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = parseInt(lines[0].split(' ')[0]);\n  const K = parseInt(lines[0].split(' ')[1]);\n  const Xs = lines[1].split(' ').map(x => parseInt(x))\n\n  var result = 1e7;\n  for(var i=0;i<N-K+1;i++){\n    var min = Xs[i];\n    var max = Xs[i+K-1];\n\n   var tmp = get_run_length(min, max);\n    result = Math.min(tmp, result);\n    //console.log([i,result,min,max]);\n  }\n\n  console.log(result);\n}\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03338_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const NNDlnz = {\n        'nwNMR': function (callee, param1) {\n            return callee(param1);\n        },\n        'Jxvqk': function (x, y) {\n            return x !== y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = NNDlnz['nwNMR'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const S = arg[0x1]['split']('');\n    const charset = new Set(S);\n    const chars = [...charset];\n    let answer = 0x0;\n    for (let i in S) {\n        const first = S['slice'](0x0, i);\n        const last = S['slice'](i, S['length']);\n        let temp = 0x0;\n        for (let j in chars) {\n            if (NNDlnz['Jxvqk'](first['indexOf'](chars[j]), -0x1) && last['indexOf'](chars[j]) !== -0x1) {\n                temp++;\n            }\n        }\n        answer = Math['max'](answer, temp);\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\naabbca", "2"], ["10\naaaaaaaaaa", "1"], ["45\ntgxgdqkyjzhyputjjtllptdfxocrylqfqjynmfbfucbir", "9"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const S = arg[1].split(\"\");\n    \n    const charset = new Set(S);\n    const chars = [...charset];\n    \n    let answer = 0;\n    \n    for(let i in S) {\n        const first = S.slice(0, i);\n        const last  = S.slice(i, S.length);\n        \n        let temp = 0;\n        \n        for(let j in chars) {\n            if(first.indexOf(chars[j]) !== -1 && last.indexOf(chars[j]) !== -1) {\n                temp++;\n            } \n        }\n        \n        // console.log(first);\n        // console.log(last);\n        // console.log(\"---\");\n        answer = Math.max(answer, temp);\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03495_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const oAUgPg = {\n        'TZDey': function (callee, param1) {\n            return callee(param1);\n        },\n        'Fqmcw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    s = s['split']('\\x0a');\n    const K = oAUgPg['TZDey'](Number, s[0x0]['split']('\\x20')[0x1]);\n    const balls = s[0x1]['split']('\\x20')['map'](el => Number(el));\n    const countBucket = [...oAUgPg['Fqmcw'](Array, 0x30d41)]['fill'](0x0);\n    for (const num of balls) {\n        countBucket[num] += 0x1;\n    }\n    countBucket['sort']((a, b) => b - a);\n    const answer = countBucket['slice'](K)['reduce']((a, b) => a + b);\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2\n1 1 2 2 5", "1"], ["4 4\n1 1 2 2", "0"], ["10 3\n5 1 3 2 4 1 1 2 3 4", "3"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n  const K = Number(s[0].split(' ')[1]);\n  const balls = s[1].split(' ').map(el => Number(el));\n  const countBucket = [...Array(200001)].fill(0);\n\n  for (const num of balls) {\n    countBucket[num] += 1;\n  }\n\n  countBucket.sort((a, b) => b - a);\n\n  const answer = countBucket.slice(K).reduce((a, b) => a + b);\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03962_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst lines = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('');\nif (lines[0x0] === lines[0x1] && lines[0x1] === lines[0x2]) {\n    console['log'](0x1);\n}\nif (lines[0x0] === lines[0x1] && lines[0x1] !== lines[0x2]) {\n    console['log'](0x2);\n}\nif (lines[0x0] === lines[0x2] && lines[0x0] !== lines[0x1]) {\n    console['log'](0x2);\n}\nif (lines[0x1] === lines[0x2] && lines[0x0] !== lines[0x1]) {\n    console['log'](0x2);\n}\nif (lines[0x0] !== lines[0x1] && lines[0x1] !== lines[0x2] && lines[0x2] !== lines[0x0]) {\n    console['log'](0x3);\n}", "test_cases": [["3 1 4", "3"], ["3 3 33", "2"]], "original": "'use strict';\n\nconst lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\");\n\nif (lines[0]===lines[1] && lines[1]===lines[2]){\n  console.log(1);\n}\nif (lines[0]===lines[1] && lines[1]!==lines[2]){\n  console.log(2);\n}\nif (lines[0]===lines[2] && lines[0]!==lines[1]){\n  console.log(2);\n}\nif (lines[1]===lines[2] && lines[0]!==lines[1]){\n  console.log(2);\n}\nif (lines[0]!==lines[1] && lines[1]!==lines[2] && lines[2]!==lines[0]) {\n  console.log(3);\n}", "language": "JavaScript"}
{"filename": "p02623_1", "type": "JavaScript", "obfuscated": "function compareFunc(a, b) {\n    const BIgYbs = {\n        'doMBy': function (x, y) {\n            return x - y;\n        }\n    };\n    return BIgYbs['doMBy'](a, b);\n}\nfunction main(input) {\n    const SaBclW = {\n        'Gprfw': function (x, y) {\n            return x < y;\n        },\n        'Ltscd': function (x, y) {\n            return x >= y;\n        },\n        'gLdkD': function (x, y) {\n            return x * y;\n        }\n    };\n    let args = input['split'](/\\n/);\n    let books = [\n        ...args[0x1]['split'](/\\s/),\n        ...args[0x2]['split'](/\\s/)\n    ];\n    let time = args[0x0]['split'](/\\s/)[0x2];\n    let result = 0x0;\n    books['sort'](compareFunc);\n    for (let i = 0x0; SaBclW['Gprfw'](i, books['length']); i++) {\n        if (SaBclW['Ltscd'](time, SaBclW['gLdkD'](books[i], 0x1))) {\n            time -= books[i];\n            result++;\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4 240\n60 90 120\n80 150 80 150", "3"], ["3 4 730\n60 90 120\n80 150 80 150", "7"], ["5 4 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000", "0"]], "original": "function compareFunc(a, b) {\n  return a - b;\n}\n\nfunction main(input) {\n  let args = input.split(/\\n/);\n  let books = [...args[1].split(/\\s/), ...args[2].split(/\\s/)];\n  let time = args[0].split(/\\s/)[2];\n  let result = 0;\n  books.sort(compareFunc);\n  for (let i = 0;i < books.length;i++) {\n    if (time >= books[i] * 1) {\n      time -= books[i];\n      result++;\n    }\n  }\n  console.log(result);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02732_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst combi = function (n) {\n    const slMtXq = {\n        'nCEzg': function (x, y) {\n            return x * y;\n        }\n    };\n    return slMtXq['nCEzg'](n, n - 0x1) / 0x2;\n};\nconst main = arg => {\n    const KcvICy = {\n        'jjcXG': function (callee, param1) {\n            return callee(param1);\n        },\n        'HACbp': function (x, y) {\n            return x < y;\n        },\n        'KaPWI': function (x, y) {\n            return x < y;\n        },\n        'RETbn': function (callee, param1) {\n            return callee(param1);\n        },\n        'DLcyb': function (x, y) {\n            return x < y;\n        },\n        'sIvlk': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    const N = KcvICy['jjcXG'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n    const A = input[0x1]['split']('\\x20')['map'](n => parseInt(n));\n    let m = {};\n    for (let i = 0x0; KcvICy['HACbp'](i, A['length']); i++) {\n        if (!m[A[i]])\n            m[A[i]] = 0x1;\n        else\n            m[A[i]]++;\n    }\n    let orgCnt = 0x0;\n    let keys = Object['keys'](m);\n    for (let i = 0x0; KcvICy['KaPWI'](i, keys['length']); i++) {\n        orgCnt = orgCnt + KcvICy['RETbn'](combi, m[keys[i]]);\n    }\n    for (let i = 0x0; KcvICy['DLcyb'](i, A['length']); i++) {\n        let num = m[A[i]];\n        const diff = KcvICy['jjcXG'](combi, num) - KcvICy['jjcXG'](combi, KcvICy['sIvlk'](num, 0x1));\n        console['log'](orgCnt - diff);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 1 2 1 2", "2\n2\n3\n2\n3"], ["4\n1 2 3 4", "0\n0\n0\n0"], ["5\n3 3 3 3 3", "6\n6\n6\n6\n6"], ["8\n1 2 1 4 2 1 4 1", "5\n7\n5\n7\n7\n5\n7\n5"]], "original": "\"use strict\";\nconst combi = function(n){\n    return n*(n-1)/2\n}\n\nconst main = arg => {\n    const input = arg.trim().split(\"\\n\");\n\n    const N = parseInt(input[0].split(\" \")[0]);\n    const A = input[1].split(\" \").map(n => parseInt(n));\n\n    let m = {}\n    for(let i = 0; i<A.length; i++){\n        if(!m[A[i]]) m[A[i]] = 1\n        else m[A[i]]++\n    }\n    let orgCnt = 0\n    let keys = Object.keys(m)\n    for(let i = 0; i<keys.length; i++){\n        orgCnt = orgCnt + combi(m[keys[i]])\n    }\n\n    for(let i = 0; i<A.length; i++){\n        let num = m[A[i]]\n        const diff = combi(num) - combi(num-1)\n        console.log(orgCnt-diff)\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02767_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TwNqVz = {\n        'UmHfU': function (callee, param1) {\n            return callee(param1);\n        },\n        'avocG': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var inputs = input[0x1]['split']('\\x20');\n    function avg(args) {\n        var num = 0x0;\n        for (var n of args) {\n            num += TwNqVz['UmHfU'](Number, n);\n        }\n        return num / args['length'];\n    }\n    var average = Math['round'](TwNqVz['UmHfU'](avg, inputs));\n    var useStamina = 0x0;\n    for (var point of inputs) {\n        useStamina += Math['pow'](TwNqVz['avocG'](average, point), 0x2);\n    }\n    console['log'](useStamina);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 4", "5"], ["7\n14 14 2 13 56 2 37", "2354"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  var inputs = input[1].split(\" \");\n\n  // argsは配列\n  function avg(args) {\n    var num = 0;\n    for(var n of args) {\n      num += Number(n);\n    }\n    return num / args.length;\n  }\n  var average = Math.round(avg(inputs));\n  // console.log(average);\n\n  var useStamina = 0;\n  for(var point of inputs) {\n    useStamina += Math.pow(average - point, 2);\n  }\n  console.log(useStamina);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main('2\\n1 4');\n// Main('7\\n14 14 2 13 56 2 37');\n", "language": "JavaScript"}
{"filename": "p02802_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const dLOjDM = {\n        'jpeYL': function (x, y) {\n            return x === y;\n        },\n        'wwaRw': function (x, y) {\n            return x < y;\n        },\n        'qgnNj': function (x, y) {\n            return x == y;\n        },\n        'KUsnA': function (x, y) {\n            return x + y;\n        }\n    };\n    let lines = input['split']('\\x0a');\n    let numInfo = lines['shift']()['split']('\\x20')[0x1];\n    let ansObj = {};\n    for (let i = 0x0; i < numInfo; i++) {\n        let quesNum = lines[i]['split']('\\x20')[0x0];\n        let ansKind = lines[i]['split']('\\x20')[0x1];\n        if (dLOjDM['jpeYL'](ansObj[quesNum], undefined)) {\n            ansObj[quesNum] = '' + ansKind;\n        } else {\n            ansObj[quesNum] += ',' + ansKind;\n        }\n    }\n    let WANum = 0x0;\n    let ACNum = 0x0;\n    let ansObjKeys = Object['keys'](ansObj);\n    for (let i = 0x0; dLOjDM['wwaRw'](i, ansObjKeys['length']); i++) {\n        let targetKey = ansObjKeys[i];\n        let target = ansObj[targetKey]['split'](',');\n        for (let j = 0x0; dLOjDM['wwaRw'](j, target['length']); j++) {\n            if (dLOjDM['qgnNj'](target[j], 'AC')) {\n                ACNum++;\n                break;\n            } else {\n                WANum++;\n            }\n        }\n    }\n    console['log'](dLOjDM['KUsnA'](ACNum, '\\x20') + WANum);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA", "2 2"], ["100000 3\n7777 AC\n7777 AC\n7777 AC", "1 0"], ["6 0", "0 0"]], "original": "\"use strict\";\n\nfunction Main(input) {\n  let lines = input.split(\"\\n\");\n  let numInfo = lines.shift().split(\" \")[1];\n  // 答えを調べる用のMap\n  let ansObj = {};\n  for(let i = 0; i < numInfo;i++){\n    \tlet quesNum = lines[i].split(\" \")[0];\n    \tlet ansKind = lines[i].split(\" \")[1];\n    \tif(ansObj[quesNum] === undefined){\n          ansObj[quesNum] = `${ansKind}`;\n        } else {\n        ansObj[quesNum] += `,${ansKind}`;\n        }\n  }\n  let WANum = 0;\n  let ACNum = 0;\n  // objectは直接要素数は取れないらしい\n  // 直線状に解いてるのが良くなかったのでは？\n  let ansObjKeys = Object.keys(ansObj);\n    for(let i = 0; i < ansObjKeys.length; i++){\n      let targetKey = ansObjKeys[i];\n      // 対象を配列として切り出したもの\n      let target = ansObj[targetKey].split(\",\");\n        for(let j = 0; j < target.length; j++){\n          if(target[j] == 'AC') {\n            ACNum++;\n            break;\n          } else {\n            WANum++;\n          } \n        }\n    }\n  console.log(ACNum + \" \" + WANum);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02812_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const Cmwzoq = {\n        'XowRH': function (x, y) {\n            return x <= y;\n        },\n        'oDQlY': function (x, y) {\n            return x - y;\n        },\n        'Miivv': function (x, y) {\n            return x == y;\n        },\n        'pVeSf': function (x, y) {\n            return x + y;\n        },\n        'gbztl': function (x, y) {\n            return x + y;\n        },\n        'mzfMW': function (x, y) {\n            return x + y;\n        },\n        'ewigh': 'ABC'\n    };\n    let xs = input['trim']()['split']('\\x0a');\n    let N = Number(xs[0x0]);\n    let S = xs[0x1]['split']('');\n    let ans = 0x0;\n    for (let i = 0x0; Cmwzoq['XowRH'](i, Cmwzoq['oDQlY'](N, 0x3)); i++) {\n        if (Cmwzoq['Miivv'](Cmwzoq['pVeSf'](Cmwzoq['gbztl'](S[i], S[Cmwzoq['mzfMW'](i, 0x1)]), S[i + 0x2]), Cmwzoq['ewigh'])) {\n            ans++;\n        }\n    }\n    console['log'](ans);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10\nZABCDBABCQ", "2"], ["19\nTHREEONEFOURONEFIVE", "0"], ["33\nABCCABCBABCCABACBCBBABCBCBCBCABCB", "5"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0]);\n   let S = xs[1].split('');\n   let ans = 0;\n   for(let i=0; i<=N-3; i++){\n   \tif(S[i]+S[i+1]+S[i+2]=='ABC'){\n   \t  ans++\n    }\n   }\n   console.log(ans);\n\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02900_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lGSgyI = {\n        'YBXKC': function (x, y) {\n            return x == y;\n        },\n        'nxbFX': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'SMnbT': function (x, y) {\n            return x % y;\n        },\n        'epbXw': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'REArS': function (x, y) {\n            return x < y;\n        },\n        'oQOTv': function (x, y) {\n            return x * y;\n        },\n        'LxFRd': function (x, y) {\n            return x === y;\n        },\n        'XBoaC': function (x, y) {\n            return x !== y;\n        }\n    };\n    input = input['split']('\\x20')['map'](x => x * 0x1);\n    function gcd(a1, a2) {\n        return lGSgyI['YBXKC'](a2, 0x0) ? a1 : lGSgyI['nxbFX'](gcd, a2, lGSgyI['SMnbT'](a1, a2));\n    }\n    var result = lGSgyI['epbXw'](gcd, input[0x0], input[0x1]);\n    var answer = 0x1;\n    for (var i = 0x2; lGSgyI['REArS'](lGSgyI['oQOTv'](i, i), result); i++) {\n        if (lGSgyI['LxFRd'](result % i, 0x0)) {\n            answer++;\n            while (lGSgyI['LxFRd'](lGSgyI['SMnbT'](result, i), 0x0)) {\n                result /= i;\n            }\n        }\n    }\n    if (lGSgyI['XBoaC'](result, 0x1)) {\n        answer++;\n    }\n    console['log'](answer);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["12 18", "3"], ["420 660", "4"], ["1 2019", "1"]], "original": "function Main(input) {\n  input = input.split(' ').map(x => x*1);\n   \n  // Eulidean Algorithm\n  function gcd(a1, a2) {\n    return a2 == 0 ? a1 : gcd(a2, a1 % a2);\n  }\n\n  var result = gcd(input[0], input[1]);\n  var answer = 1;\n\n  for(var i = 2; i * i < result; i++) {\n    if(result % i === 0) {\n      answer++;\n      while(result % i === 0) {\n        result /= i;\n      }\n    }\n  }\n  if( result !== 1) {\n    answer++;\n  }\n\n  console.log(answer);\n\n\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf-8'));\n", "language": "JavaScript"}
{"filename": "p02923_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const FevhfV = {\n        'vsDlt': function (callee, param1) {\n            return callee(param1);\n        },\n        'jdqag': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const N = FevhfV['vsDlt'](Number, input[0x0]);\n    const H = input[0x1]['trim']()['split']('\\x20')['map'](Number);\n    let ret = 0x0;\n    let move = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        if (H[i] >= H[FevhfV['jdqag'](i, 0x1)]) {\n            move += 0x1;\n        } else {\n            ret = Math['max'](ret, move);\n            move = 0x0;\n        }\n    }\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n10 4 8 7 3", "2"], ["7\n4 4 5 6 6 5 5", "3"], ["4\n1 2 3 4", "0"]], "original": "\"use strict\"\n \nfunction Main(input) {\n  input = input.trim().split('\\n');\n  const N = Number(input[0]);\n  const H = input[1].trim().split(' ').map(Number);\n\n  let ret = 0;\n  let move = 0;\n  \n  for(let i=0; i<N; i++){\n    if (H[i] >= H[i+1]) {\n      move += 1;\n    } else {\n      ret = Math.max(ret, move);\n      move = 0;\n    }\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02934_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var qmobgr = {\n        'EVZqH': function (x, y) {\n            return x < y;\n        },\n        'VPxgN': function (x, y) {\n            return x / y;\n        },\n        'FSIPj': function (x, y) {\n            return x / y;\n        }\n    };\n    var input = input['split']('\\x0a');\n    const num = input[0x0];\n    const arr = input[0x1]['split']('\\x20');\n    var a = 0x1;\n    var b = 0x0;\n    arr['forEach'](i => a *= i);\n    for (var i = 0x0; qmobgr['EVZqH'](i, arr['length']); i++) {\n        b += qmobgr['VPxgN'](a, arr[i]);\n    }\n    console['log'](qmobgr['FSIPj'](a, b));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n10 30", "7.5"], ["3\n200 200 200", "66.66666666666667"], ["1\n1000", "1000"]], "original": "function Main(input) {\n    var input = input.split(\"\\n\");\n    const num = input[0];\n    const arr = input[1].split(\" \");\n    var a = 1;\n    var b = 0;\n    arr.forEach(i => a *= i);\n    for(var i=0; i<arr.length; i++){\n        b += a / arr[i];\n    }\n    console.log(a/b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02939_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var qDpuCO = {\n        'TThlw': function (x, y) {\n            return x - y;\n        },\n        'zldDe': function (x, y) {\n            return x >= y;\n        },\n        'cqyNa': function (x, y) {\n            return x == y;\n        },\n        'zoLBT': function (x, y) {\n            return x - y;\n        },\n        'KypwQ': function (x, y) {\n            return x + y;\n        },\n        'wlNQW': function (x, y) {\n            return x - y;\n        },\n        'KBdxm': function (x, y) {\n            return x == y;\n        }\n    };\n    var output = 0x0;\n    var list = [];\n    var output = input['length'];\n    var tmp = '';\n    for (var i = qDpuCO['TThlw'](input['length'], 0x1); qDpuCO['zldDe'](i, 0x0); i--) {\n        var tmp2 = input['slice'](i, i + 0x1);\n        if (qDpuCO['cqyNa'](list['length'], 0x0)) {\n            list['push'](tmp2);\n            continue;\n        } else {\n            var tmp1 = list[qDpuCO['zoLBT'](list['length'], 0x1)];\n            if (qDpuCO['cqyNa'](tmp1, tmp2)) {\n                list['push'](qDpuCO['KypwQ'](input['slice'](qDpuCO['wlNQW'](i, 0x1), i), tmp2));\n                i--;\n            } else {\n                list['push'](tmp2);\n            }\n        }\n    }\n    output = list['length'];\n    var first = input['slice'](0x0, 0x1);\n    var second = input['slice'](0x1, 0x2);\n    if (qDpuCO['KBdxm'](first, second)) {\n        output--;\n    }\n    console['log'](output['toString']());\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["aabbaa", "4"], ["aaaccacabaababc", "12"]], "original": "function Main(input) {\n  var output = 0;\n  var list = [];\n  var output = input.length;\n  var tmp = \"\";\n  for(var i = input.length - 1; i >= 0; i--){\n    var tmp2 = input.slice(i, i + 1);\n    if(list.length == 0){\n      list.push(tmp2);\n      continue;\n    }else{\n      var tmp1 = list[list.length - 1];\n      if(tmp1 == tmp2){\n         list.push(input.slice(i - 1, i) + tmp2);\n        i--;\n      }else{\n        list.push(tmp2);\n      }\n    }\n  }\n  output = list.length;\n  var first = input.slice(0, 1);\n  var second = input.slice(1, 2);\n  if(first == second){\n     output--;\n  }\n  \n  console.log(output.toString());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02959_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var JJUQJQ = {\n        'mXJyQ': function (x, y) {\n            return x < y;\n        },\n        'xCkgr': function (x, y) {\n            return x + y;\n        },\n        'bIPjy': function (x, y) {\n            return x + y;\n        },\n        'mfusF': function (x, y) {\n            return x - y;\n        },\n        'Qqogx': function (x, y) {\n            return x < y;\n        },\n        'ABoso': function (x, y) {\n            return x + y;\n        },\n        'sRtdY': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var iNJXiE = '4|8|6|3|7|1|5|2|0'['split']('|');\n    var NlIaoT = 0x0;\n    while (!![]) {\n        switch (iNJXiE[NlIaoT++]) {\n        case '0':\n            console['log'](count);\n            continue;\n        case '1':\n            b = b['map'](str => parseInt(str, 0xa));\n            continue;\n        case '2':\n            for (var i = 0x0; JJUQJQ['mXJyQ'](i, n); i++) {\n                var atarget = JJUQJQ['xCkgr'](a[i], a[JJUQJQ['bIPjy'](i, 0x1)]);\n                var rest = JJUQJQ['mfusF'](atarget, b[i]);\n                if (JJUQJQ['Qqogx'](rest, 0x0)) {\n                    count += atarget;\n                    a[JJUQJQ['ABoso'](i, 0x1)] = 0x0;\n                } else {\n                    count += b[i];\n                    a[i + 0x1] = Math['min'](rest, a[JJUQJQ['bIPjy'](i, 0x1)]);\n                }\n            }\n            continue;\n        case '3':\n            a = a['map'](str => parseInt(str, 0xa));\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        case '5':\n            var count = 0x0;\n            continue;\n        case '6':\n            var a = input[0x1]['split']('\\x20');\n            continue;\n        case '7':\n            var b = input[0x2]['split']('\\x20');\n            continue;\n        case '8':\n            var n = JJUQJQ['sRtdY'](parseInt, input[0x0], 0xa);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n3 5 2\n4 5", "9"], ["3\n5 6 3 8\n5 100 8", "22"], ["2\n100 1 1\n1 100", "3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0], 10);\n    var a = input[1].split(\" \");\n    a = a.map(str => parseInt(str, 10));\n    var b = input[2].split(\" \");\n    b = b.map(str => parseInt(str, 10));\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        var atarget = a[i] + a[i+1];\n        var rest = atarget - b[i];\n        if(rest < 0){\n            count += atarget;\n            a[i+1] = 0;\n        }else{\n            count += b[i];\n            a[i+1] = Math.min(rest,a[i+1]); \n        }\n    }\n\t//出力\n\tconsole.log(count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02983_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const zBnBrr = {\n        'OQeFx': function (x, y) {\n            return x > y;\n        },\n        'czNxy': function (x, y) {\n            return x % y;\n        },\n        'ucmkd': function (x, y) {\n            return x < y;\n        },\n        'DFUub': function (x, y) {\n            return x + y;\n        },\n        'bdWWc': function (x, y) {\n            return x < y;\n        },\n        'HbvRw': function (x, y) {\n            return x + y;\n        },\n        'Ntdxi': function (x, y) {\n            return x % y;\n        },\n        'Dycuo': function (x, y) {\n            return x * y;\n        },\n        'MmyPC': function (x, y) {\n            return x === y;\n        },\n        'uUsym': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a');\n    inputStr = input[0x0]['split']('\\x20');\n    const L = Number['parseInt'](inputStr[0x0]);\n    const R = Number['parseInt'](inputStr[0x1]);\n    var min = 0x7e2;\n    if (zBnBrr['OQeFx'](L * R, 0x7e3)) {\n        if (R - L < 0x7e3) {\n            const L2 = zBnBrr['czNxy'](L, 0x7e3);\n            const R2 = R % 0x7e3;\n            for (var i1 = L2; zBnBrr['ucmkd'](i1, R2); i1++) {\n                for (var i2 = zBnBrr['DFUub'](i1, 0x1); zBnBrr['bdWWc'](i2, zBnBrr['HbvRw'](R2, 0x1)); i2++) {\n                    min = Math['min'](min, zBnBrr['Ntdxi'](zBnBrr['Dycuo'](i1, i2), 0x7e3));\n                    if (zBnBrr['MmyPC'](min, 0x0)) {\n                        break;\n                    }\n                }\n            }\n            console['log'](min);\n        } else {\n            console['log'](0x0);\n        }\n    } else {\n        console['log'](zBnBrr['uUsym'](L, zBnBrr['HbvRw'](L, 0x1)));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2020 2040", "2"], ["4 5", "20"]], "original": "function Main(input){\n  input = input.split(\"\\n\");\n  inputStr = input[0].split(\" \");\n  const L = Number.parseInt(inputStr[0]);\n  const R = Number.parseInt(inputStr[1]);\n  \n  var min = 2018;  \n  if ( L * R > 2019){\n    if ( R - L < 2019) {\n      const L2 = L % 2019;\n      const R2 = R % 2019;\n       \n      for(var i1 = L2; i1 < R2; i1++){\n        for(var i2 = i1+1 ; i2 < R2+1 ; i2++){\n          min = Math.min(min,i1 * i2 % 2019);\n          if(min === 0) { break; }\n        }\n      }\n\t  console.log(min);\n    } else {\n      console.log(0);\n    }\n  } else {\n    //LとRの積が2019を超えないなら計算する必要がない\n    console.log(L * (L+1));\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03012_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst INF = 0x3333333333333;\nfunction mapint(temp) {\n    return temp['split']('\\x20')['map'](v => parseInt(v));\n}\nfunction Main(input) {\n    const ImqZwh = {\n        'bVymy': function (callee, param1) {\n            return callee(param1);\n        },\n        'wnJcu': function (x, y) {\n            return x < y;\n        },\n        'bWmBA': function (x, y) {\n            return x - y;\n        },\n        'miBhb': function (x, y) {\n            return x < y;\n        }\n    };\n    let temp = input['trim']()['split']('\\x0a');\n    let n = ImqZwh['bVymy'](parseInt, temp[0x0]);\n    let w = mapint(temp[0x1]);\n    let s1 = w[0x0];\n    let s2 = 0x0;\n    for (let i = 0x1; ImqZwh['wnJcu'](i, n); i++) {\n        s2 += w[i];\n    }\n    let sa = Math['abs'](ImqZwh['bWmBA'](s1, s2));\n    let sa2;\n    for (let i = 0x1; ImqZwh['miBhb'](i, n); i++) {\n        s1 += w[i];\n        s2 -= w[i];\n        sa = Math['min'](sa, Math['abs'](ImqZwh['bWmBA'](s1, s2)));\n    }\n    console['log'](sa);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3", "0"], ["4\n1 3 1 1", "2"], ["8\n27 23 76 2 3 5 62 52", "2"]], "original": "'use strict'\n\nconst INF = 900719925474099;\nfunction mapint(temp){\n    return temp.split(' ').map((v)=>parseInt(v));\n}\n\nfunction Main(input){\n    let temp = input.trim().split('\\n');\n    let n = parseInt(temp[0]);\n    let w = mapint(temp[1]);\n\n    let s1 = w[0];\n    let s2 = 0;\n    for(let i=1;i<n;i++){\n        s2+=w[i];\n    }\n    let sa = Math.abs(s1-s2);\n    let sa2;\n    for(let i=1;i<n;i++){\n        s1+=w[i];\n        s2-=w[i];\n\n        sa = Math.min(sa,Math.abs(s1-s2));\n    }\n    console.log(sa);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03053_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    var GsQBnX = {\n        'EmvNc': '8|5|9|7|4|0|6|3|11|2|1|10',\n        'hUYGG': function (x, y) {\n            return x < y;\n        },\n        'ldfpG': function (x, y) {\n            return x === y;\n        },\n        'TxNAQ': function (x, y) {\n            return x + y;\n        },\n        'guHKo': function (x, y) {\n            return x - y;\n        }\n    };\n    var kLlNya = GsQBnX['EmvNc']['split']('|');\n    var UchxCG = 0x0;\n    while (!![]) {\n        switch (kLlNya[UchxCG++]) {\n        case '0':\n            for (var i = 0x0; GsQBnX['hUYGG'](i, arg['length']); i++) {\n                m1['push'](arg[i]['split'](''));\n            }\n            continue;\n        case '1':\n            for (var y = 0x0; GsQBnX['hUYGG'](y, H); y++)\n                for (var x = 0x0; x < W; x++) {\n                    if (GsQBnX['ldfpG'](m1[y][x], '.')) {\n                        var minD = Number['MAX_SAFE_INTEGER'];\n                        for (var i = 0x0; GsQBnX['hUYGG'](i, slist['length']); i++) {\n                            var _y = slist[i][0x0];\n                            var _x = slist[i][0x1];\n                            var d = GsQBnX['TxNAQ'](Math['abs'](GsQBnX['guHKo'](_y, y)), Math['abs'](GsQBnX['guHKo'](_x, x)));\n                            if (d < minD) {\n                                minD = d;\n                            }\n                        }\n                        tmp['push'](minD);\n                    }\n                }\n            continue;\n        case '2':\n            var tmp = [];\n            continue;\n        case '3':\n            var slist = [];\n            continue;\n        case '4':\n            var m1 = [];\n            continue;\n        case '5':\n            arg['shift']();\n            continue;\n        case '6':\n            var i = 0x0;\n            continue;\n        case '7':\n            var W = arg[0x0]['length'];\n            continue;\n        case '8':\n            arg = arg['trim']()['split']('\\x0a');\n            continue;\n        case '9':\n            var H = arg['length'];\n            continue;\n        case '10':\n            console['log'](Math['max'](...tmp));\n            continue;\n        case '11':\n            for (var y = 0x0; GsQBnX['hUYGG'](y, H); y++)\n                for (var x = 0x0; GsQBnX['hUYGG'](x, W); x++) {\n                    if (m1[y][x] === '#') {\n                        slist['push']([\n                            y,\n                            x\n                        ]);\n                    }\n                }\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n...\n.#.\n...", "2"], ["6 6\n..#..#\n......\n#..#..\n......\n.#....\n....#.", "3"]], "original": "\"use strict\"\n\nfunction main(arg) {\n    arg = arg.trim().split(\"\\n\")\n    arg.shift()\n    var H = arg.length\n    var W = arg[0].length\n    var m1 = []\n    for (var i = 0; i < arg.length; i++) {\n        m1.push(arg[i].split(''))\n    }\n    var i = 0\n    var slist = []\n    for (var y = 0; y < H; y++) for (var x = 0; x < W; x++) {\n        if (m1[y][x] === '#') {\n            slist.push([y, x])\n        }\n    }\n    var tmp = []\n    for (var y = 0; y < H; y++) for (var x = 0; x < W; x++) {\n        if (m1[y][x] === '.') {\n            var minD = Number.MAX_SAFE_INTEGER\n            for (var i = 0; i < slist.length; i++) {\n                var _y = slist[i][0]\n                var _x = slist[i][1]\n                var d = Math.abs(_y - y) + Math.abs(_x - x)\n                if (d < minD) {\n                    minD = d\n                }\n            }\n            tmp.push(minD)\n        }\n    }\n    console.log(Math.max(...tmp))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03080_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const HusQpE = {\n        'nmfKX': function (x, y) {\n            return x < y;\n        },\n        'HeFMK': function (x, y) {\n            return x === y;\n        },\n        'jyQjZ': 'Yes'\n    };\n    let Red = 0x0;\n    let Blue = 0x0;\n    const input_line = input['split']('\\x0a');\n    inputS = input_line[0x1]['split']('');\n    for (i = 0x0; HusQpE['nmfKX'](i, inputS['length']); i++) {\n        if (HusQpE['HeFMK'](inputS[i], 'R')) {\n            Red++;\n        } else {\n            Blue++;\n        }\n    }\n    console['log'](Red > Blue ? HusQpE['jyQjZ'] : 'No');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\nRRBR", "Yes"], ["4\nBRBR", "No"]], "original": "function Main(input){\n  let Red = 0;\n  let Blue = 0;\n  const input_line = input.split('\\n');\n  inputS = input_line[1].split('');\n  for (i = 0; i < inputS.length; i++) {\n    if (inputS[i] === 'R'){\n      Red++;\n    }else {\n      Blue++;\n    }\n  }\n//  inputS.forEach((s) => {\n//    if (s === 'R'){\n//      console.log(\"Red++\");\n//      Red++;\n//    } else {\n//      console.log(\"Blue++\");\n//      Blue++;\n//    }\n//  });\n  console.log(Red > Blue ? \"Yes\" : \"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03161_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const fPVLnA = {\n        'RNgXA': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'FZgzl': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'dJdwN': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        }\n    };\n    input = input['split']('\\x0a');\n    const [N, K] = input[0x0]['split']('\\x20')['map'](n => {\n        return fPVLnA['RNgXA'](parseInt, n, 0xa);\n    });\n    const hn = input[0x1]['split']('\\x20')['map'](n => {\n        return fPVLnA['FZgzl'](parseInt, n, 0xa);\n    });\n    const h_max = Math['pow'](0xa, 0x9);\n    console['log'](fPVLnA['dJdwN'](dp, N, K, hn, h_max));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction dp(N, K, hn, h_max) {\n    const mViuIb = {\n        'JaSAh': function (x, y) {\n            return x <= y;\n        },\n        'PDMrm': function (x, y) {\n            return x - y;\n        },\n        'XhEst': function (x, y) {\n            return x - y;\n        }\n    };\n    const dp = [];\n    let dp_work = [];\n    dp[0x0] = 0x0;\n    for (var i = 0x1; i < N; i++) {\n        dp['push'](h_max);\n        dp_work = [];\n        dp_work['push'](dp[i]);\n        for (var dp_work_i = 0x1; mViuIb['JaSAh'](dp_work_i, K); dp_work_i++) {\n            if (mViuIb['PDMrm'](i, dp_work_i) < 0x0)\n                continue;\n            dp_work['push'](dp[mViuIb['XhEst'](i, dp_work_i)] + Math['abs'](hn[mViuIb['XhEst'](i, dp_work_i)] - hn[i]));\n        }\n        dp[i] = Math['min'](...dp_work);\n    }\n    return dp[mViuIb['XhEst'](N, 0x1)];\n}", "test_cases": [["5 3\n10 30 40 50 20", "30"], ["3 1\n10 20 10", "20"], ["2 100\n10 10", "0"], ["10 4\n40 10 20 70 80 10 20 70 80 60", "40"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  const [N,K] = input[0].split(' ').map((n) => {\n    return parseInt(n, 10);\n  });\n  const hn = input[1].split(' ').map((n) => {\n    return parseInt(n, 10);\n  });\n  const h_max = Math.pow(10,9);\n  console.log(dp(N,K,hn,h_max));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction dp(N,K,hn,h_max) {\n  const dp = [];\n  let dp_work = [];\n  dp[0] = 0;\n  for (var i = 1; i < N; i++) {\n    dp.push(h_max);\n    dp_work = [];\n    dp_work.push(dp[i]);\n    for (var dp_work_i = 1; dp_work_i <= K; dp_work_i++) {\n      if (i-dp_work_i < 0) continue;\n      dp_work.push(dp[i-dp_work_i] + Math.abs(hn[i-dp_work_i] - hn[i]));\n    }\n    dp[i] = Math.min(...dp_work);\n  }\n  return dp[N-1];\n}\n", "language": "JavaScript"}
{"filename": "p03292_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const nums = s['split']('\\x0a')[0x0]['split']('\\x20')['map'](n => Number(n));\n    const ans = Math['max'](...nums) - Math['min'](...nums);\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 6 3", "5"], ["11 5 5", "6"], ["100 100 100", "0"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const nums = s.split('\\n')[0].split(' ').map(n => Number(n));\n  const ans = Math.max(...nums) - Math.min(...nums);\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03339_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var sLFASx = {\n        'sltjf': function (callee, param1) {\n            return callee(param1);\n        },\n        'zMWIy': function (x, y) {\n            return x < y;\n        },\n        'LdLvR': function (x, y) {\n            return x == y;\n        },\n        'ZCOje': function (x, y) {\n            return x == y;\n        },\n        'xlMxy': function (x, y) {\n            return x - y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = sLFASx['sltjf'](parseInt, lines[0x0]);\n    const S = lines[0x1]['split']('');\n    var result = Math['pow'](0xa, 0x8);\n    var current_count = 0x0;\n    for (var i = 0x0; sLFASx['zMWIy'](i, N); i++) {\n        if (sLFASx['LdLvR'](S[i], 'E')) {\n            current_count++;\n        }\n    }\n    result = current_count;\n    for (var i = 0x1; sLFASx['zMWIy'](i, N); i++) {\n        if (S[i] == 'E') {\n            current_count--;\n        }\n        if (sLFASx['ZCOje'](S[sLFASx['xlMxy'](i, 0x1)], 'W')) {\n            current_count++;\n        }\n        result = Math['min'](result, current_count);\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\nWEEWW", "1"], ["12\nWEWEWEEEWWWE", "4"], ["8\nWWWWWEEE", "3"]], "original": "function main(input){\n  const lines = input.split('\\n');\n\n  const N = parseInt(lines[0]);\n  const S = lines[1].split('');\n\n  \n  var result = Math.pow(10, 8);\n  var current_count = 0;\n  for(var i=0;i<N;i++){\n    if(S[i]=='E'){current_count++;}\n  }\n  result = current_count;\n\n//    console.log(current_count);\n  for(var i=1;i<N;i++){\n    if(S[i]=='E'){current_count--;}\n    if(S[i-1]=='W'){current_count++;}\n    result = Math.min(result, current_count);\n//    console.log(current_count);\n  }\n//    console.log('---');\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02595_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const jNgnYC = {\n        'RpQyA': function (x, y) {\n            return x <= y;\n        },\n        'mHyei': function (x, y) {\n            return x + y;\n        },\n        'HVJvx': function (x, y) {\n            return x ** y;\n        },\n        'SNiXQ': function (x, y) {\n            return x ** y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const [N, D] = input[0x0]['split']('\\x20')['map'](Number);\n    const [, ...points] = input;\n    let ans = 0x0;\n    for (let v of points) {\n        const [x, y] = v['split']('\\x20')['map'](Number);\n        if (jNgnYC['RpQyA'](Math['sqrt'](jNgnYC['mHyei'](jNgnYC['HVJvx'](x, 0x2), jNgnYC['SNiXQ'](y, 0x2))), D))\n            ans++;\n    }\n    return console['log'](ans);\n};\nprocess['env']['MYTEST'] ? test() : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5\n0 5\n-2 4\n3 4\n4 -4", "3"], ["12 3\n1 1\n1 1\n1 1\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3", "7"], ["20 100000\n14309 -32939\n-56855 100340\n151364 25430\n103789 -113141\n147404 -136977\n-37006 -30929\n188810 -49557\n13419 70401\n-88280 165170\n-196399 137941\n-176527 -61904\n46659 115261\n-153551 114185\n98784 -6820\n94111 -86268\n-30401 61477\n-55056 7872\n5901 -163796\n138819 -185986\n-69848 -96669", "6"]], "original": "const main = (input) => {\n  input = input.trim().split('\\n')\n  const [N, D] = input[0].split(' ').map(Number)\n  const [, ...points] = input\n\n  let ans = 0\n\n  for (let v of points) {\n    const [x, y] = v.split(' ').map(Number)\n\n    if (Math.sqrt(x**2 + y**2) <= D) ans++\n  }\n\n  return console.log(ans)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02597_1", "type": "JavaScript", "obfuscated": "function MainD(input) {\n    const DaEkPa = {\n        'oNPUN': function (x, y) {\n            return x < y;\n        },\n        'cvQpU': function (x, y) {\n            return x === y;\n        },\n        'kkBzA': function (x, y) {\n            return x - y;\n        },\n        'UrPfr': function (x, y) {\n            return x === y;\n        }\n    };\n    const arr = input['split']('\\x0a');\n    const N = arr[0x0];\n    const Ci = arr[0x1]['split']('');\n    let answer = 0x0;\n    let Wnum = 0x0;\n    for (let i = 0x0; DaEkPa['oNPUN'](i, Ci['length']); i++) {\n        if (Ci[i] === 'W') {\n            Wnum++;\n        }\n    }\n    if (DaEkPa['cvQpU'](Wnum, 0x0))\n        return console['log'](0x0);\n    for (let i = DaEkPa['kkBzA'](Wnum, 0x1); DaEkPa['oNPUN'](i, Ci['length']); i++) {\n        if (DaEkPa['UrPfr'](Ci[i], 'R')) {\n            answer++;\n        }\n    }\n    console['log'](answer);\n}\nMainD(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\nWWRR", "2"], ["2\nRR", "0"], ["8\nWRWWRWRR", "3"]], "original": "function MainD(input){\n    const arr = input.split('\\n');\n    const N = arr[0];\n    const Ci = arr[1].split('');\n    let answer = 0;\n\n    // Wの数を数える\n    let Wnum = 0;\n    for(let i=0; i<Ci.length; i++){\n        if(Ci[i] === 'W'){\n            Wnum++;\n        }\n    }\n    if(Wnum===0) return console.log(0); // Wが現れなかったら0を出力\n\n    // Wの数以降のRの数を数える\n    for(let i=Wnum-1; i<Ci.length; i++){\n        if(Ci[i] === 'R'){\n            answer++;\n        }\n    }\n    console.log(answer);\n}\nMainD(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02707_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    const uxqKiq = {\n        'vmkTF': function (x, y) {\n            return x - y;\n        },\n        'JNGtN': function (x, y) {\n            return x > y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a');\n    const employees = parseInt(tmp[0x0]);\n    const subordinateArray = tmp[0x1]['split']('\\x20');\n    const subordinateCount = {};\n    const distinctSubordinate = subordinateArray['filter']((x, i, self) => self['indexOf'](x) === i);\n    subordinateArray['forEach'](elem => {\n        subordinateCount[elem] = subordinateCount[elem] ? subordinateCount[elem] + 0x1 : 0x1;\n    });\n    let result = [];\n    distinctSubordinate['forEach'](elem => {\n        return result['push'](subordinateCount[elem]);\n    });\n    const zeroCount = uxqKiq['vmkTF'](employees, distinctSubordinate['length']);\n    if (uxqKiq['JNGtN'](zeroCount, 0x0)) {\n        for (let index = 0x0; index < zeroCount; index++) {\n            result['push'](0x0);\n        }\n    }\n    result = result['join']('\\x0a');\n    console['log'](result);\n    return result;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 1 2 2", "2\n2\n0\n0\n0"], ["10\n1 1 1 1 1 1 1 1 1", "9\n0\n0\n0\n0\n0\n0\n0\n0\n0"], ["7\n1 2 3 4 5 6", "1\n1\n1\n1\n1\n1\n0"]], "original": "const Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const employees = parseInt(tmp[0])\n  const subordinateArray = tmp[1].split(' ')\n\n  const subordinateCount = {}\n\n  const distinctSubordinate = subordinateArray.filter(\n    (x, i, self) => self.indexOf(x) === i\n  )\n\n  subordinateArray.forEach((elem) => {\n    subordinateCount[elem] = subordinateCount[elem]\n      ? subordinateCount[elem] + 1\n      : 1\n  })\n\n  let result = []\n  distinctSubordinate.forEach((elem) => {\n    return result.push(subordinateCount[elem])\n  })\n\n  const zeroCount = employees - distinctSubordinate.length\n\n  if (zeroCount > 0) {\n    for (let index = 0; index < zeroCount; index++) {\n      result.push(0)\n    }\n  }\n\n  result = result.join('\\n')\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02756_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    'use strict';\n    const uAOIRi = {\n        'xcrgS': function (callee, param1) {\n            return callee(param1);\n        },\n        'bkCdg': function (x, y) {\n            return x < y;\n        },\n        'VDbQW': function (x, y) {\n            return x == y;\n        },\n        'cSvDj': function (x, y) {\n            return x + y;\n        },\n        'aFayg': function (x, y) {\n            return x == y;\n        }\n    };\n    const temp = input['split']('\\x0a');\n    const s = temp['shift']()['split']();\n    const q = uAOIRi['xcrgS'](parseInt, temp['shift']());\n    const queries = temp['map'](query => query['split']('\\x20'));\n    let reverse_flag = 0x0;\n    for (let i = 0x0; uAOIRi['bkCdg'](i, q); i++) {\n        const query = queries[i];\n        if (uAOIRi['VDbQW'](query['length'], 0x1))\n            reverse_flag = uAOIRi['cSvDj'](reverse_flag, 0x1) % 0x2;\n        else if (uAOIRi['VDbQW'](query['length'], 0x3)) {\n            if (uAOIRi['aFayg'](reverse_flag + parseInt(query[0x1]) % 0x2, 0x0))\n                s['push'](query[0x2]);\n            else\n                s['unshift'](query[0x2]);\n        }\n    }\n    if (reverse_flag)\n        console['log'](uAOIRi['cSvDj'](s['reverse']()['join'](''), '\\x0a'));\n    else\n        console['log'](uAOIRi['cSvDj'](s['join'](''), '\\x0a'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["a\n4\n2 1 p\n1\n2 2 c\n1", "cpa"], ["a\n6\n2 2 a\n2 1 b\n1\n2 2 c\n1\n1", "aabc"], ["y\n1\n2 1 x", "xy"]], "original": "function Main(input) {\n  \"use strict\"\n  const temp = input.split(\"\\n\");\n\n  const s = temp.shift().split()\n  const q = parseInt(temp.shift());\n  const queries = temp.map(query => query.split(\" \"));\n  let reverse_flag = 0\n\n  // queries.forEach( query => {\n  //   if(query.length == 1) reverse_flag = (reverse_flag + 1) % 2\n  //   else if(query.length == 3){\n  //     if((reverse_flag + parseInt(query[1]) % 2 == 0)) s.push(query[2])\n  //     else s.unshift(query[2])\n  //   }\n  // })\n\n  for(let i = 0; i < q; i++){\n    const query = queries[i]\n    if(query.length == 1) reverse_flag = (reverse_flag + 1) % 2\n    else if(query.length == 3){\n      if((reverse_flag + parseInt(query[1]) % 2 == 0)) s.push(query[2])\n      else s.unshift(query[2])\n    }\n  }\n  \n  if(reverse_flag) console.log(s.reverse().join(\"\") + \"\\n\");\n  else console.log(s.join(\"\") + \"\\n\");\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02760_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var wdaaTg = {\n        'LMYpc': function (x, y) {\n            return x < y;\n        },\n        'BlEzE': function (x, y) {\n            return x + y;\n        },\n        'TCyeJ': function (x, y) {\n            return x - y;\n        }\n    };\n    var qiNspa = '12|7|0|3|1|13|6|2|10|9|14|8|11|4|5'['split']('|');\n    var qbBMps = 0x0;\n    while (!![]) {\n        switch (qiNspa[qbBMps++]) {\n        case '0':\n            var chk = [];\n            continue;\n        case '1':\n            var map = [\n                input[0x0]['split']('\\x20')['map'](v => chk['indexOf'](v - 0x0) >= 0x0),\n                input[0x1]['split']('\\x20')['map'](v => chk['indexOf'](v - 0x0) >= 0x0),\n                input[0x2]['split']('\\x20')['map'](v => chk['indexOf'](v - 0x0) >= 0x0)\n            ];\n            continue;\n        case '2':\n            if (map[0x1][0x0] && map[0x1][0x1] && map[0x1][0x2])\n                flg = !![];\n            continue;\n        case '3':\n            for (var i = 0x4; wdaaTg['LMYpc'](i, wdaaTg['BlEzE'](n, 0x4)); i++) {\n                chk['push'](wdaaTg['TCyeJ'](input[i], 0x0));\n            }\n            continue;\n        case '4':\n            if (map[0x0][0x2] && map[0x1][0x1] && map[0x2][0x0])\n                flg = !![];\n            continue;\n        case '5':\n            console['log'](flg ? 'Yes' : 'No');\n            continue;\n        case '6':\n            if (map[0x0][0x0] && map[0x0][0x1] && map[0x0][0x2])\n                flg = !![];\n            continue;\n        case '7':\n            var ansmap = [\n                [\n                    ![],\n                    ![],\n                    ![]\n                ],\n                [\n                    ![],\n                    ![],\n                    ![]\n                ],\n                [\n                    ![],\n                    ![],\n                    ![]\n                ]\n            ];\n            continue;\n        case '8':\n            if (map[0x0][0x2] && map[0x1][0x2] && map[0x2][0x2])\n                flg = !![];\n            continue;\n        case '9':\n            if (map[0x0][0x0] && map[0x1][0x0] && map[0x2][0x0])\n                flg = !![];\n            continue;\n        case '10':\n            if (map[0x2][0x0] && map[0x2][0x1] && map[0x2][0x2])\n                flg = !![];\n            continue;\n        case '11':\n            if (map[0x0][0x0] && map[0x1][0x1] && map[0x2][0x2])\n                flg = !![];\n            continue;\n        case '12':\n            var n = input[0x3];\n            continue;\n        case '13':\n            var flg = ![];\n            continue;\n        case '14':\n            if (map[0x0][0x1] && map[0x1][0x1] && map[0x2][0x1])\n                flg = !![];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30", "Yes"], ["41 7 46\n26 89 2\n78 92 8\n5\n6\n45\n16\n57\n17", "No"], ["60 88 34\n92 41 43\n65 73 48\n10\n60\n43\n88\n11\n48\n73\n65\n41\n92\n34", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var n = input[3];\n    var ansmap = [\n        [false,false,false],\n        [false,false,false],\n        [false,false,false]];\n    var chk = [];\n    for(var i=4;i<n+4;i++){\n        chk.push(input[i]-0);\n    }\n    var map = [\n        input[0].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n        input[1].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n        input[2].split(\" \").map(v=>chk.indexOf(v-0)>=0),\n    ];\n    var flg = false;\n    if(map[0][0]&&map[0][1]&&map[0][2]) flg = true;\n    if(map[1][0]&&map[1][1]&&map[1][2]) flg = true;\n    if(map[2][0]&&map[2][1]&&map[2][2]) flg = true;\n    if(map[0][0]&&map[1][0]&&map[2][0]) flg = true;\n    if(map[0][1]&&map[1][1]&&map[2][1]) flg = true;\n    if(map[0][2]&&map[1][2]&&map[2][2]) flg = true;\n    if(map[0][0]&&map[1][1]&&map[2][2]) flg = true;\n    if(map[0][2]&&map[1][1]&&map[2][0]) flg = true;\n    console.log(flg?\"Yes\":\"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03017_1", "type": "JavaScript", "obfuscated": "debug = ![];\nfunction log(...args) {\n    if (debug) {\n        console['log'](...args);\n    }\n}\nfunction Main(input) {\n    var mAXSZw = {\n        'UCdlc': function (x, y) {\n            return x * y;\n        },\n        'fQMHR': function (x, y) {\n            return x * y;\n        },\n        'IHMiG': function (x, y) {\n            return x > y;\n        },\n        'ICzaz': function (x, y) {\n            return x <= y;\n        },\n        'voGmn': function (x, y) {\n            return x - y;\n        },\n        'PjGWq': function (x, y) {\n            return x == y;\n        },\n        'YuWbR': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'vprvK': function (x, y) {\n            return x - y;\n        },\n        'HrtOV': function (x, y) {\n            return x + y;\n        },\n        'gBcFk': function (callee, param1) {\n            return callee(param1);\n        },\n        'hNdtz': function (x, y) {\n            return x - y;\n        },\n        'pfWGL': function (x, y) {\n            return x - y;\n        },\n        'lsZQD': function (x, y) {\n            return x - y;\n        },\n        'aSPtZ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'AhFOF': 'Yes'\n    };\n    lines = input['split']('\\x0a');\n    f = lines[0x0]['split']('\\x20');\n    N = f[0x0];\n    A = mAXSZw['UCdlc'](f[0x1], 0x1);\n    B = f[0x2] * 0x1;\n    C = mAXSZw['fQMHR'](f[0x3], 0x1);\n    D = f[0x4] * 0x1;\n    s = lines[0x1];\n    log(N, A, B, C, D, s);\n    bool = !![];\n    if (mAXSZw['IHMiG'](C, D)) {\n        end = D;\n        if (mAXSZw['ICzaz'](mAXSZw['voGmn'](C, D), 0x2)) {\n            end = C;\n        }\n        s2 = s;\n        if (mAXSZw['PjGWq'](s[mAXSZw['voGmn'](D, 0x2)], '#')) {\n            mAXSZw['YuWbR'](log, s2, s2[mAXSZw['voGmn'](D, 0x1)]);\n            s2[mAXSZw['vprvK'](D, 0x1)] = '#';\n            s2 = mAXSZw['HrtOV'](s2['slice'](0x0, D - 0x1), '#') + s2['slice'](D);\n        }\n        mAXSZw['gBcFk'](log, s2);\n        str = s2['slice'](mAXSZw['hNdtz'](B, 0x1), end);\n        mAXSZw['YuWbR'](log, str, bool);\n        bool = bool && /\\.\\.\\./['test'](str);\n        log(str, bool);\n    }\n    str = s['slice'](mAXSZw['pfWGL'](A, 0x1), C);\n    bool = bool && !/##/['test'](str);\n    mAXSZw['YuWbR'](log, str, bool);\n    str = s['slice'](mAXSZw['lsZQD'](B, 0x1), D);\n    bool = bool && !/##/['test'](str);\n    mAXSZw['aSPtZ'](log, str, bool);\n    ans = bool ? mAXSZw['AhFOF'] : 'No';\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 1 3 6 7\n.#..#..", "Yes"], ["7 1 3 7 6\n.#..#..", "No"], ["15 1 3 15 13\n...#.#...#.#...", "Yes"]], "original": "debug = false\nfunction log(...args) {\n  if (debug) {\n    console.log(...args)\n  }\n}\n\nfunction Main(input) {\n  lines = input.split(\"\\n\")\n  f = lines[0].split(\" \")\n  N = f[0]\n  A = f[1] * 1\n  B = f[2] * 1\n  C = f[3] * 1\n  D = f[4] * 1\n  s = lines[1]\n  log(N, A, B, C, D, s)\n\n  bool = true\n  if (C > D) {\n    end = D\n    if (C - D <= 2) {\n      end = C\n    }\n    s2 = s\n    if (s[D - 2] == '#') {\n      log(s2, s2[D - 1])\n      s2[D - 1] = '#'\n      s2 = s2.slice(0, D - 1) + '#' + s2.slice(D)\n    }\n    log(s2)\n    str = s2.slice(B - 1, end)\n    log(str, bool)\n    bool = bool && (/\\.\\.\\./).test(str)\n    log(str, bool)\n  }\n  str = s.slice(A - 1, C)\n  bool = bool && !(/##/).test(str)\n  log(str, bool)\n  str = s.slice(B - 1, D)\n  bool = bool && !(/##/).test(str)\n  log(str, bool)\n\n  ans = bool ? 'Yes' : 'No'\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03085_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    input = input['split']('\\x0a');\n    input = input[0x0];\n    switch (input) {\n    case 'A': {\n            console['log']('T');\n            return;\n        }\n    case 'T': {\n            console['log']('A');\n            return;\n        }\n    case 'C': {\n            console['log']('G');\n            return;\n        }\n    case 'G': {\n            console['log']('C');\n            return;\n        }\n    default: {\n            return;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["A", "T"], ["G", "C"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    input = input[0]\n    switch(input) {\n        case 'A': {\n            console.log('T');\n            return;\n        }\n        case 'T': {\n            console.log('A');\n            return;\n        }\n        case 'C': {\n            console.log('G');\n            return;\n        }\n        case 'G': {\n            console.log('C');\n            return;\n        }\n        default: {\n            return;\n        }\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03087_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['split']('\\x0a');\nvar nq = arr[0x0]['split']('\\x20')['map'](Number);\nvar str = arr[0x1];\nvar a = [\n    0x0,\n    0x0\n];\nvar cnt = 0x0;\nfor (var i = 0x1; i < str['length']; i++) {\n    if (str[i] == 'C' && str[i - 0x1] == 'A')\n        cnt++;\n    a['push'](cnt);\n}\nvar ans = [];\nfor (var i = 0x2, len = nq[0x1] + 0x2; i < len; i++) {\n    var lr = arr[i]['split']('\\x20');\n    ans['push'](a[lr[0x1] - 0x0] - a[lr[0x0] - 0x0]);\n}\nconsole['log'](ans['join']('\\x0a'));", "test_cases": [["8 3\nACACTACG\n3 7\n2 3\n1 8", "2\n0\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.split(\"\\n\");\nvar nq=arr[0].split(\" \").map(Number);\nvar str = arr[1];\nvar a=[0,0];\nvar cnt=0;\nfor(var i=1;i<str.length;i++){\n   if(str[i]==\"C\" && str[i-1]==\"A\")cnt++;\n   a.push(cnt);\n}\nvar ans=[];\nfor(var i=2,len=nq[1]+2;i<len;i++){\n   var lr=arr[i].split(\" \");\n   ans.push(a[lr[1]-0]-a[lr[0]-0]);\n}\nconsole.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03108_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['map'](line => line['split']('\\x20')['map'](val => parseInt(val), 0xa));\nconst N = input[0x0][0x0];\nconst M = input[0x0][0x1];\nconst ans = [];\nconst par = [];\nfor (let i = 0x1; i <= N; i++) {\n    par[i] = -0x1;\n}\nfunction root(x) {\n    const oCRhyB = {\n        'DYrgH': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    if (par[x] < 0x0) {\n        return x;\n    }\n    return par[x] = oCRhyB['DYrgH'](root, par[x]);\n}\nfunction unite(x, y) {\n    const HzNQyr = {\n        'PtKrx': function (callee, param1) {\n            return callee(param1);\n        },\n        'jSbbA': function (x, y) {\n            return x === y;\n        }\n    };\n    const rx = HzNQyr['PtKrx'](root, x);\n    const ry = root(y);\n    if (HzNQyr['jSbbA'](rx, ry)) {\n        return;\n    }\n    par[ry] += par[rx];\n    par[rx] = ry;\n}\nfunction isSame(x, y) {\n    const dZGOQO = {\n        'Gywaw': function (x, y) {\n            return x === y;\n        },\n        'gvfpY': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return dZGOQO['Gywaw'](root(x), dZGOQO['gvfpY'](root, y));\n}\nfunction getSize(x) {\n    return -par[root(x)];\n}\nans[M] = N * (N - 0x1) / 0x2;\nfor (let i = M; i > 0x1; i--) {\n    const x = input[i][0x0];\n    const y = input[i][0x1];\n    if (isSame(x, y)) {\n        ans[i - 0x1] = ans[i];\n        continue;\n    }\n    ans[i - 0x1] = ans[i] - getSize(x) * getSize(y);\n    unite(x, y);\n}\nfor (let i = 0x1; i <= M; i++) {\n    console['log'](ans[i]);\n}", "test_cases": [["4 5\n1 2\n3 4\n1 3\n2 3\n1 4", "0\n0\n4\n5\n6"], ["6 5\n2 3\n1 2\n5 6\n3 4\n4 5", "8\n9\n12\n14\n15"], ["2 1\n1 2", "1"]], "original": "\"use strict\";\n\n// read lines from stdin\nconst input = require(\"fs\")\n  .readFileSync(\"/dev/stdin\", \"utf8\")\n  .trim()\n  .split(\"\\n\")\n  .map((line) => line.split(\" \").map((val) => parseInt(val), 10));\n\nconst N = input[0][0];\nconst M = input[0][1];\n\nconst ans = [];\n\n// Union-Find\n\nconst par = [];\n\nfor (let i = 1; i <= N; i++) {\n  par[i] = -1;\n}\n\nfunction root(x) {\n  if (par[x] < 0) { return x; }\n  return par[x] = root(par[x]);\n}\n\nfunction unite(x, y) {\n  const rx = root(x);\n  const ry = root(y);\n  if (rx === ry) { return; }\n\n  par[ry] += par[rx];\n  par[rx] = ry;\n}\n\nfunction isSame(x, y) {\n  return root(x) === root(y);\n}\n\nfunction getSize(x) {\n  return -par[root(x)];\n}\n\n// end Union-Find\n\nans[M] = N * (N - 1) / 2;\n\nfor (let i = M; i > 1; i--) {\n  const x = input[i][0];\n  const y = input[i][1];\n\n  if (isSame(x, y)) {\n    ans[i - 1] = ans[i];\n    continue;\n  }\n\n  ans[i - 1] = ans[i] - (getSize(x) * getSize(y));\n  unite(x, y);\n}\n\nfor (let i = 1; i <= M; i++) {\n  console.log(ans[i]);\n}\n", "language": "JavaScript"}
{"filename": "p03137_1", "type": "JavaScript", "obfuscated": "var readline = require('readline');\nvar lines = [];\nvar result = 0x0;\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var vCCJTg = {\n        'MQItz': function (x, y) {\n            return x < y;\n        },\n        'wfTPX': function (callee, param1) {\n            return callee(param1);\n        },\n        'NoKPq': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var FgtIOn = '2|4|8|7|3|5|6|1|0'['split']('|');\n    var ihFMHC = 0x0;\n    while (!![]) {\n        switch (FgtIOn[ihFMHC++]) {\n        case '0':\n            console['log'](result);\n            continue;\n        case '1':\n            for (var i = N - 0x1; vCCJTg['MQItz'](i, M); i++) {\n                result += sum[i];\n            }\n            continue;\n        case '2':\n            var N = Number(lines[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '3':\n            var sum = vCCJTg['wfTPX'](Array, M)['fill'](0x0);\n            continue;\n        case '4':\n            var M = vCCJTg['NoKPq'](Number, lines[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '5':\n            for (var i = 0x1; vCCJTg['MQItz'](i, M); i++) {\n                sum[i] = X[i] - X[i - 0x1];\n            }\n            continue;\n        case '6':\n            sum['sort']((a, b) => b - a);\n            continue;\n        case '7':\n            X['sort']((a, b) => a - b);\n            continue;\n        case '8':\n            var X = lines[0x1]['split']('\\x20')['map'](value => Number(value));\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["2 5\n10 12 1 2 14", "5"], ["3 7\n-10 -3 0 9 -100 2 17", "19"], ["100 1\n-100000", "0"]], "original": "var readline = require('readline');\nvar lines = []; var result = 0;\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var M = Number(lines[0].split(\" \")[1]);\n    var X = lines[1].split(\" \").map(value => Number(value));\n\n    X.sort((a, b) => a - b);\n\n    var sum = Array(M).fill(0);\n    for (var i = 1; i < M; i++) { sum[i] = X[i] - X[i - 1]; }\n\n    sum.sort((a, b) => b - a);\n\n    for (var i = N - 1; i < M; i++) { result += sum[i] }\n    \n    console.log(result);\n});\n", "language": "JavaScript"}
{"filename": "p03328_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bGJpgh = {\n        'hgasf': '8|0|5|7|2|10|3|1|6|9|4',\n        'Wnkqt': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'BqOcK': function (x, y) {\n            return x > y;\n        },\n        'gzojj': function (x, y) {\n            return x == y;\n        },\n        'zPgyr': function (x, y) {\n            return x - y;\n        }\n    };\n    var Dpfcyt = bGJpgh['hgasf']['split']('|');\n    var GMWMFd = 0x0;\n    while (!![]) {\n        switch (Dpfcyt[GMWMFd++]) {\n        case '0':\n            var a = bGJpgh['Wnkqt'](parseInt, input[0x0], 0xa);\n            continue;\n        case '1':\n            var ans = 0x0;\n            continue;\n        case '2':\n            var b_real = 0x1;\n            continue;\n        case '3':\n            var b_count = 0x1;\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        case '5':\n            var b = bGJpgh['Wnkqt'](parseInt, input[0x1], 0xa);\n            continue;\n        case '6':\n            while (!![]) {\n                while (!![]) {\n                    a_count++;\n                    a_real += a_count;\n                    b_count++;\n                    b_real += b_count;\n                    if (a_real > a) {\n                        break;\n                    }\n                }\n                while (!![]) {\n                    b_count++;\n                    b_real += b_count;\n                    if (bGJpgh['BqOcK'](b_real, b)) {\n                        break;\n                    }\n                }\n                if (bGJpgh['gzojj'](bGJpgh['zPgyr'](a_real, a), bGJpgh['zPgyr'](b_real, b))) {\n                    break;\n                }\n            }\n            continue;\n        case '7':\n            var a_real = 0x1;\n            continue;\n        case '8':\n            input = input['split']('\\x20');\n            continue;\n        case '9':\n            ans = bGJpgh['zPgyr'](a_real, a);\n            continue;\n        case '10':\n            var a_count = 0x1;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8 13", "2"], ["54 65", "1"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    input = input.split(' ');\n    //文字列から10進数に変換するときはparseIntを使います\n    var a = parseInt(input[0], 10);\n    var b = parseInt(input[1], 10);\n    \n    var a_real = 1;\n    var b_real = 1;\n    var a_count = 1\n    var b_count = 1\n    var ans = 0;\n    while ( true ) {\n        while ( true ) {\n            a_count++;\n            a_real += a_count;\n            b_count++;\n            b_real += b_count;\n            if (a_real > a) {\n                break;\n            }\n        }\n        while ( true ) {\n            b_count++;\n            b_real += b_count;\n            if (b_real > b) {\n                break;\n            }\n        }\n        if ( (a_real - a) == (b_real - b)) {\n            break;\n        }\n    }\n    ans = a_real - a;\n    console.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03363_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const BlafPW = {\n        'ifWbZ': function (x, y) {\n            return x / y;\n        },\n        'WsRnY': function (x, y) {\n            return x * y;\n        },\n        'VnjXW': function (x, y) {\n            return x - y;\n        },\n        'ihlBE': function (x, y) {\n            return x * y;\n        },\n        'hXPey': function (x, y) {\n            return x < y;\n        },\n        'mmRVi': function (x, y) {\n            return x + y;\n        },\n        'ZTlnB': function (x, y) {\n            return x - y;\n        },\n        'ZNcPh': function (x, y) {\n            return x < y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = BlafPW['ihlBE'](arg[0x0], 0x1);\n    const nums = arg[0x1]['split']('\\x20')['map'](x => x * 0x1);\n    const totalSum = new Array(N)['fill'](0x0);\n    for (let i = 0x0; BlafPW['hXPey'](i, N); i++) {\n        totalSum[i] += BlafPW['mmRVi'](totalSum[BlafPW['ZTlnB'](i, 0x1)] || 0x0, nums[i]);\n    }\n    let accumObj = {};\n    accumObj[0x0] = 0x1;\n    for (let i = 0x0; BlafPW['ZNcPh'](i, N); i++) {\n        accumObj[totalSum[i]] = BlafPW['mmRVi'](accumObj[totalSum[i]] || 0x0, 0x1);\n    }\n    let ans = 0x0;\n    Object['keys'](accumObj)['forEach'](x => {\n        ans += BlafPW['ifWbZ'](BlafPW['WsRnY'](accumObj[x], BlafPW['VnjXW'](accumObj[x], 0x1)), 0x2);\n    });\n    console['log'](ans);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n1 3 -4 2 2 -2", "3"], ["7\n1 -1 1 -1 1 -1 1", "12"], ["5\n1 -2 3 -4 5", "0"]], "original": "\"use strict\";\n// 人様のコード参照\nconst main = arg => {\n  \t// お決まりの処理たち\n    arg = arg.trim().split(\"\\n\");\n    const N = arg[0] * 1;\n    const nums = arg[1].split(\" \").map(x => x*1);\n  \t// とりあえず累積和出してみる\n  \tconst totalSum = new Array(N).fill(0);\n   \t// forEachよくないんじゃないか説\n  \tfor(let i = 0; i < N; i++){\n      totalSum[i] += (totalSum[i - 1] || 0) + nums[i];\n    }\n  \n  \t// それぞれの組み合わせがいくつずつかを調べていく\n  \t// そのためにオブジェクト化\n  \tlet accumObj = {};\n  \t// accumObj[0]は必ず存在している体で（理由は不明確）\n  \taccumObj[0] = 1;\n  \tfor(let i = 0; i < N; i++){\n      accumObj[totalSum[i]] = (accumObj[totalSum[i]] || 0) + 1;\n    }\n  \tlet ans = 0;\n  \t// それぞれのエンティティで2つとってくる値を計算する\n  \tObject.keys(accumObj).forEach((x)=> {\n    \tans += accumObj[x]*(accumObj[x]-1)/2\n    })\n  \n  \tconsole.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02266_1", "type": "JavaScript", "obfuscated": "const calc = str => {\n    const MqlYzk = {\n        'xMjsp': function (x, y) {\n            return x === y;\n        },\n        'ZpNrx': function (x, y) {\n            return x > y;\n        },\n        'YeNaY': function (x, y) {\n            return x - y;\n        },\n        'cqIjJ': function (x, y) {\n            return x - y;\n        },\n        'NXRGe': function (x, y) {\n            return x > y;\n        },\n        'Thyzp': function (x, y) {\n            return x > y;\n        },\n        'LfMPS': function (x, y) {\n            return x - y;\n        },\n        'oVUTL': function (x, y) {\n            return x - y;\n        }\n    };\n    const areas = [];\n    const depthIndexes = [];\n    let sum = 0x0;\n    for (let i = 0x0; i < str['length']; i++) {\n        const char = str[i];\n        if (MqlYzk['xMjsp'](char, '\\x5c')) {\n            depthIndexes['push'](i);\n            continue;\n        }\n        if (char === '/' && MqlYzk['ZpNrx'](depthIndexes['length'], 0x0)) {\n            const j = depthIndexes['pop']();\n            sum += MqlYzk['YeNaY'](i, j);\n            let currentArea = MqlYzk['cqIjJ'](i, j);\n            while (MqlYzk['NXRGe'](areas['length'], 0x0) && MqlYzk['Thyzp'](areas[MqlYzk['LfMPS'](areas['length'], 0x1)]['depth'], j)) {\n                currentArea += areas[MqlYzk['oVUTL'](areas['length'], 0x1)]['area'];\n                areas['pop']();\n            }\n            areas['push']({\n                'depth': j,\n                'area': currentArea\n            });\n        }\n    }\n    console['log'](sum);\n    if (MqlYzk['xMjsp'](areas['length'], 0x0)) {\n        console['log'](0x0);\n        return;\n    }\n    console['log'](areas['length'] + '\\x20' + areas['map'](obj => obj['area'])['join']('\\x20'));\n};\nlet inputStr = '';\nprocess['stdin']['on']('data', input => {\n    inputStr += String['raw']`${ input }`;\n});\nprocess['stdin']['on']('end', () => {\n    calc(inputStr);\n});", "test_cases": [["\\\\//", "4\n1 4"], ["\\\\///\\_/\\/\\\\\\\\/_/\\\\///__\\\\\\_\\\\/_\\/_/\\", "35\n5 4 2 1 19 9"]], "original": "const calc = (str) => {\n  const areas = [];\n  const depthIndexes = [];\n  let sum = 0;\n\n  for (let i=0; i<str.length; i++) {\n    const char = str[i];\n\n    if (char === '\\\\') {\n      depthIndexes.push(i);\n      continue;\n    }\n\n    if (char === '/' && depthIndexes.length > 0) {\n      const j = depthIndexes.pop();\n      sum += i - j;\n      let currentArea = i - j;\n      while (areas.length > 0 && areas[areas.length-1].depth > j) {\n        currentArea += areas[areas.length-1].area;\n        areas.pop();\n      }\n      areas.push({\n        depth: j,\n        area: currentArea,\n      });\n    }\n  }\n\n\n\n  console.log(sum);\n  if (areas.length === 0) {\n    console.log(0);\n    return;\n  }\n  console.log(`${areas.length} ${areas.map(obj => obj.area).join(' ')}`);\n};\n\n\nlet inputStr = '';\nprocess.stdin.on('data', (input) => { inputStr += String.raw`${input}` });\n\nprocess.stdin.on('end', () => { calc(inputStr); });\n", "language": "JavaScript"}
{"filename": "p02268_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nconst binarySearch = (key, arr, N) => {\n    const APgMdZ = {\n        'jjVbc': function (x, y) {\n            return x < y;\n        },\n        'SXYSg': function (x, y) {\n            return x + y;\n        },\n        'roWhb': function (x, y) {\n            return x > y;\n        }\n    };\n    let mid;\n    let left = 0x0;\n    let right = N;\n    while (APgMdZ['jjVbc'](left, right)) {\n        mid = Math['floor'](APgMdZ['SXYSg'](left, right) / 0x2);\n        if (APgMdZ['jjVbc'](key, arr[mid]))\n            right = mid;\n        else if (APgMdZ['roWhb'](key, arr[mid]))\n            left = mid + 0x1;\n        else\n            return 0x1;\n    }\n    return 0x0;\n};\n(function () {\n    const N1 = Number(Arr[0x0]);\n    const arr1 = Arr[0x1]['split']('\\x20')['map'](Number);\n    const arr2 = Arr[0x3]['split']('\\x20')['map'](Number);\n    console['log'](arr2['map'](e => binarySearch(e, arr1, N1))['reduce']((a, b) => a + b, 0x0));\n}());", "test_cases": [["5\n1 2 3 4 5\n3\n3 4 1", "3"], ["3\n1 2 3\n1\n5", "0"], ["5\n1 1 2 2 3\n2\n1 2", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr = (input.trim()).split(\"\\n\");\n\nconst binarySearch = (key, arr, N) => {\n  let mid;\n  let left = 0;\n  let right = N;\n  while (left < right) {\n    mid = Math.floor((left + right) / 2);\n    if (key < arr[mid]) right = mid;\n    else if (key > arr[mid]) left = mid + 1;\n    else return 1;\n  }\n  return 0;\n}\n\n\n(function() {\n  const N1 = Number(Arr[0]);\n  const arr1 = Arr[1].split(\" \").map(Number);\n  // const N2 = Number(Arr[2]);\n  const arr2 = Arr[3].split(\" \").map(Number);\n  console.log(arr2.map(e => binarySearch(e, arr1, N1)).reduce((a, b) => a + b, 0));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02271_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const rkMQIP = {\n        'WUjAJ': function (x, y) {\n            return x == y;\n        },\n        'qwYDs': function (x, y) {\n            return x + y;\n        },\n        'Zwncc': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'poOSQ': function (x, y) {\n            return x - y;\n        },\n        'wjFwY': function (callee, param1) {\n            return callee(param1);\n        },\n        'puyPI': '/dev/stdin',\n        'hxWOX': 'utf8'\n    };\n    const lines = rkMQIP['wjFwY'](require, 'fs')['readFileSync'](rkMQIP['puyPI'], rkMQIP['hxWOX'])['trim']()['split']('\\x0a');\n    const n1 = rkMQIP['wjFwY'](Number, lines['shift']());\n    const arr1 = lines['shift']()['split']('\\x20')['map'](Number);\n    const n2 = rkMQIP['wjFwY'](Number, lines['shift']());\n    const arr2 = lines['shift']()['split']('\\x20')['map'](Number);\n    const solve = (i, m) => {\n        if (rkMQIP['WUjAJ'](m, 0x0))\n            return !![];\n        if (i >= n1)\n            return ![];\n        return solve(rkMQIP['qwYDs'](i, 0x1), m) || rkMQIP['Zwncc'](solve, rkMQIP['qwYDs'](i, 0x1), rkMQIP['poOSQ'](m, arr1[i]));\n    };\n    arr2['map'](m => solve(0x0, m) ? 'yes' : 'no')['forEach'](res => console['log'](res));\n}());", "test_cases": [["5\n1 5 7 10 21\n8\n2 4 17 8 22 21 100 35", "no\nno\nyes\nyes\nyes\nyes\nno\nno"]], "original": "(function main() {\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n1 = Number(lines.shift());\n  const arr1 = lines.shift().split(' ').map(Number);\n  const n2 = Number(lines.shift());\n  const arr2 = lines.shift().split(' ').map(Number);\n\n  const solve = (i, m) => {\n    if (m == 0) return true;\n    if (i >= n1) return false;\n    return solve(i + 1, m) || solve(i + 1, m - arr1[i]);\n  };\n\n  arr2.map(m => solve(0, m) ? 'yes' : 'no').forEach(res => console.log(res));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02404_1", "type": "JavaScript", "obfuscated": "let content = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', buf => {\n    content += buf;\n});\nprocess['stdin']['on']('end', () => {\n    const atrBbt = {\n        'tVMVf': function (x, y) {\n            return x !== y;\n        },\n        'qMHJw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const rects = content['trim']()['split']('\\x0a')['map'](line => line['split']('\\x20')['map'](n => parseInt(n, 0xa)));\n    for (const rect of rects) {\n        if (atrBbt['tVMVf'](rect[0x0], 0x0) || rect[0x1] !== 0x0) {\n            console['log'](atrBbt['qMHJw'](drawReact, rect));\n        }\n    }\n});\nconst drawReact = ([h, w]) => {\n    const dHfPSR = {\n        'oIpff': function (x, y) {\n            return x + y;\n        },\n        'FEgVs': function (x, y) {\n            return x - y;\n        },\n        'dviqo': function (x, y) {\n            return x - y;\n        }\n    };\n    const hline = dHfPSR['oIpff']('#'['repeat'](w), '\\x0a');\n    return dHfPSR['oIpff'](hline + ('#' + '.'['repeat'](dHfPSR['FEgVs'](w, 0x2)) + '#\\x0a')['repeat'](dHfPSR['dviqo'](h, 0x2)), hline);\n};", "test_cases": [["3 4\n5 6\n3 3\n0 0", "####\n#..#\n####\n\n######\n#....#\n#....#\n#....#\n######\n\n###\n#.#\n###"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\nprocess.stdin.on('end', () => {\n  const rects = content\n    .trim()\n    .split('\\n')\n    .map(line => line.split(' ').map(n => parseInt(n, 10)));\n\n  for (const rect of rects) {\n    if (rect[0] !== 0 || rect[1] !== 0) {\n      console.log(drawReact(rect));\n    }\n  }\n});\n\nconst drawReact = ([h, w]) => {\n  const hline = '#'.repeat(w) + '\\n';\n  return hline + `#${'.'.repeat(w - 2)}#\\n`.repeat(h - 2) + hline;\n};\n", "language": "JavaScript"}
{"filename": "p02577_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const FilCCh = {\n        'aakIg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'DvPOH': function (x, y) {\n            return x <= y;\n        },\n        'ooByx': function (x, y) {\n            return x * y;\n        },\n        'zCmow': function (x, y) {\n            return x === y;\n        },\n        'GKqyi': 'Yes'\n    };\n    let num = FilCCh['aakIg'](parseInt, input, 0xa);\n    let sum = 0x0;\n    let tmp = 0x0;\n    for (let i = input['length'] - 0x1; FilCCh['DvPOH'](0x0, i); i--) {\n        tmp = Math['floor'](num / Math['pow'](0xa, i));\n        sum += tmp;\n        num -= FilCCh['ooByx'](tmp, Math['pow'](0xa, i));\n    }\n    const ans = FilCCh['zCmow'](sum % 0x9, 0x0) ? FilCCh['GKqyi'] : 'No';\n    console['log'](ans);\n}\n;\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["123456789", "Yes"], ["0", "Yes"], ["31415926535897932384626433832795028841971693993751058209749445923078164062862089986280", "No"]], "original": "function Main(input) {\n\tlet num = parseInt(input, 10);\n\tlet sum = 0;\n\tlet tmp = 0;\n\tfor(let i = input.length - 1; 0 <= i; i--) {\n\t\ttmp = Math.floor(num / Math.pow(10, i));\n\t\tsum += tmp;\n\t\tnum -= tmp * Math.pow(10, i);\n\t}\n\tconst ans = sum % 9 === 0 ? 'Yes' : 'No'\n\tconsole.log(ans);\n};\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02578_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var VngMDr = {\n        'QdeUG': function (x, y) {\n            return x < y;\n        },\n        'gszoW': function (x, y) {\n            return x - y;\n        },\n        'oTeYU': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var VmLPGA = '2|1|4|0|3'['split']('|');\n    var XLizmg = 0x0;\n    while (!![]) {\n        switch (VmLPGA[XLizmg++]) {\n        case '0':\n            for (var i = 0x0; VngMDr['QdeUG'](i, N); i++) {\n                var Ai = parseInt(lines[0x1]['split']('\\x20')[i]);\n                MaxNum = Math['max'](MaxNum, Ai);\n                sum += VngMDr['gszoW'](MaxNum, Ai);\n            }\n            continue;\n        case '1':\n            var sum = 0x0;\n            continue;\n        case '2':\n            var N = VngMDr['oTeYU'](parseInt, lines[0x0]);\n            continue;\n        case '3':\n            console['log'](sum);\n            continue;\n        case '4':\n            var MaxNum = 0x0;\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["5\n2 1 5 4 3", "4"], ["5\n3 3 3 3 3", "0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var N = parseInt(lines[0]);\n \n  var sum = 0;\n  var MaxNum = 0;\n  for (var i = 0; i < N; i++) {\n    var Ai = parseInt(lines[1].split(' ')[i]);\n\tMaxNum = Math.max(MaxNum, Ai);\n    sum += MaxNum - Ai;\n  }\n  \n  console.log(sum);\n});", "language": "JavaScript"}
{"filename": "p02613_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const [n, ...rows] = input['trim']()['split']('\\x0a');\n    const k = [\n        'AC',\n        'WA',\n        'TLE',\n        'RE'\n    ];\n    const ans = {};\n    for (let v of k)\n        ans[v] = 0x0;\n    for (let r of rows)\n        ans[r] += 0x1;\n    for (let v of k)\n        console['log'](v + '\\x20x\\x20' + ans[v]);\n};\nprocess['env']['MYTEST'] ? test() : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\nAC\nTLE\nAC\nAC\nWA\nTLE", "AC x 3\nWA x 1\nTLE x 2\nRE x 0"], ["10\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC", "AC x 10\nWA x 0\nTLE x 0\nRE x 0"]], "original": "const main = (input) => {\n  const [n, ...rows] = input.trim().split('\\n')\n  const k = ['AC', 'WA', 'TLE', 'RE']\n  const ans = {}\n  for (let v of k) ans[v] = 0\n\n  for (let r of rows) ans[r] += 1\n\n  for (let v of k) console.log(`${v} x ${ans[v]}`)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02615_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const TecDlL = {\n        'OojcE': function (x, y) {\n            return x - y;\n        },\n        'RGcye': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'qlYLo': function (x, y) {\n            return x >= y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    let n = TecDlL['OojcE'](TecDlL['RGcye'](parseInt, input[0x0], 0xa), 0x2);\n    const nums = input[0x1]['split']('\\x20')['map'](Number)['sort']((a, b) => b - a);\n    let r = [0x1];\n    for (n; TecDlL['qlYLo'](n, 0x2); n -= 0x2)\n        r['push'](0x2);\n    r['push'](n);\n    return console['log'](r['reduce']((a, b, i) => a + b * nums[i], 0x0));\n};\nprocess['env']['MYTEST'] ? test() : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n2 2 1 3", "7"], ["7\n1 1 1 1 1 1 1", "6"]], "original": "const main = (input) => {\n\n  input = input.trim().split('\\n')\n  let n = parseInt(input[0], 10) - 2\n  const nums = input[1].split(' ').map(Number).sort((a, b) => b - a)\n\n  let r = [1]\n  for (n; n >= 2; n-=2) r.push(2)\n  r.push(n)\n\n  return console.log(r.reduce((a, b, i) => a + (b * nums[i]), 0))\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02628_1", "type": "JavaScript", "obfuscated": "function main(lines) {\n    const jCNEwv = {\n        'bUUgA': function (callee, param1) {\n            return callee(param1);\n        },\n        'RLNjv': function (callee, param1) {\n            return callee(param1);\n        },\n        'fKmEV': function (x, y) {\n            return x < y;\n        }\n    };\n    const [N, K] = jCNEwv['bUUgA'](parseNumberLine, lines[0x0]);\n    const prices = jCNEwv['RLNjv'](parseNumberLine, lines[0x1])['sort']((a, b) => a - b);\n    let total = 0x0;\n    for (let i = 0x0; jCNEwv['fKmEV'](i, K); ++i) {\n        total += prices[i];\n    }\n    console['log'](total);\n}\nfunction parseNumberLine(line, radix = 0xa) {\n    return line['split'](/\\s+/)['map'](_ => parseInt(_, radix));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["5 3\n50 100 80 120 80", "210"], ["1 1\n1000", "1000"]], "original": "function main(lines) {\n    const [N, K] = parseNumberLine(lines[0])\n    const prices = parseNumberLine(lines[1])\n    \t.sort((a, b) => a - b)\n\n    let total = 0\n    for (let i = 0; i < K; ++i) {\n      total += prices[i]\n    }\n    console.log(total)\n}\n\nfunction parseNumberLine(line, radix = 10) {\n    return line.split(/\\s+/).map(_ => parseInt(_, radix))\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02675_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var JglyEO = {\n        'ViUuw': function (x, y) {\n            return x + y;\n        },\n        'hwzDa': function (x, y) {\n            return x + y;\n        },\n        'Hhsga': function (x, y) {\n            return x - y;\n        },\n        'WCrfY': function (x, y) {\n            return x == y;\n        },\n        'fYZzc': function (x, y) {\n            return x == y;\n        },\n        'LcJWX': function (x, y) {\n            return x == y;\n        },\n        'lgNWj': function (x, y) {\n            return x == y;\n        },\n        'DagSv': 'pon'\n    };\n    input = JglyEO['ViUuw'](JglyEO['hwzDa']('', input), '');\n    input = input['substr'](JglyEO['Hhsga'](input['length'], 0x1), 0x1);\n    var d = '';\n    if (JglyEO['WCrfY'](input, 0x2) || JglyEO['WCrfY'](input, 0x4) || input == 0x5 || JglyEO['WCrfY'](input, 0x7) || JglyEO['fYZzc'](input, 0x9)) {\n        d = 'hon';\n    }\n    if (JglyEO['LcJWX'](input, 0x0) || JglyEO['WCrfY'](input, 0x1) || JglyEO['WCrfY'](input, 0x6) || JglyEO['lgNWj'](input, 0x8)) {\n        d = JglyEO['DagSv'];\n    }\n    if (input == 0x3) {\n        d = 'bon';\n    }\n    console['log'](d);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["16", "pon"], ["2", "hon"], ["183", "bon"]], "original": "function Main(input)\n{\n\tinput = \"\"+input+\"\";\n\tinput = input.substr(input.length - 1, 1);\n\tvar d = \"\";\n\n\tif (input == 2 || input == 4 || input == 5 ||input == 7 ||input == 9 )\n\t{\n\t\td = \"hon\";\n\t}\n\n\tif (input == 0 || input == 1 || input == 6 ||input == 8)\n\t{\n\t\td = \"pon\";\n\t}\n\n\tif (input == 3 )\n\t{\n\t\td = \"bon\";\n\t}\n\n\tconsole.log(d);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02830_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const HzAASL = {\n        'UYYRE': function (callee, param1) {\n            return callee(param1);\n        },\n        'cHfsI': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const N = HzAASL['UYYRE'](parseInt, input[0x0]);\n    const array = input[0x1]['split']('\\x20');\n    const S = array[0x0];\n    const T = array[0x1];\n    let ans = '';\n    for (let i = 0x0; HzAASL['cHfsI'](i, N); ++i) {\n        ans += S[i];\n        ans += T[i];\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\nip cc", "icpc"], ["8\nhmhmnknk uuuuuuuu", "humuhumunukunuku"], ["5\naaaaa aaaaa", "aaaaaaaaaa"]], "original": "function Main(input) {\n  input = input.trim().split('\\n')\n  const N = parseInt(input[0])\n  const array = input[1].split(' ')\n  const S = array[0]\n  const T = array[1]\n  let ans = ''\n  for(let i = 0; i < N; ++i) {\n    ans += S[i]\n    ans += T[i]\n  }\n \n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02848_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const QNCcvY = {\n        'RCFEQ': function (x, y) {\n            return x > y;\n        },\n        'iZgBQ': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const inputs = input['split']('\\x0a')['filter'](v => v);\n    const n = QNCcvY['iZgBQ'](Number, inputs[0x0]);\n    const strs = inputs[0x1]['split']('');\n    console['log'](strs['map'](function (s) {\n        let c = s['charCodeAt']() + n;\n        if (QNCcvY['RCFEQ'](c, 0x5a)) {\n            c -= 0x1a;\n        }\n        return String['fromCharCode'](c);\n    })['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\nABCXYZ", "CDEZAB"], ["0\nABCXYZ", "ABCXYZ"], ["13\nABCDEFGHIJKLMNOPQRSTUVWXYZ", "NOPQRSTUVWXYZABCDEFGHIJKLM"]], "original": "function Main(input) {\n  const inputs = input.split('\\n')\n    .filter(v => v);\n  const n = Number(inputs[0]);\n  const strs = inputs[1]\n    .split('');\n  \n  console.log(strs.map(function(s) {\n    let c = s.charCodeAt() + n;\n    if (c > 90) {\n      c -= 26;\n    }\n    return String.fromCharCode(c)\n  }).join(''));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02952_1", "type": "JavaScript", "obfuscated": "function keta(num) {\n    var eXmXuc = {\n        'syoVf': function (x, y) {\n            return x <= y;\n        }\n    };\n    for (var i = 0x1; eXmXuc['syoVf'](i, 0x6); i++) {\n        if (num < 0xa ** i)\n            return i % 0x2;\n    }\n}\nfunction Main(input) {\n    var fMYKAv = {\n        'gvSkm': function (x, y) {\n            return x <= y;\n        },\n        'hPLoT': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var ans = 0x0;\n    var cnt = 0x1;\n    while (fMYKAv['gvSkm'](cnt, input)) {\n        ans += fMYKAv['hPLoT'](keta, cnt);\n        cnt++;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["11", "9"], ["136", "46"], ["100000", "90909"]], "original": "function keta(num) {\n    for(var i=1; i<=6; i++) {\n        if(num < 10**i) return i%2;\n    }\n}\n\nfunction Main(input) {\n    var ans = 0;\n    var cnt = 1;\n    while(cnt <= input) {\n        ans += keta(cnt);\n        cnt++;\n    }\n    console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02987_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const WePgyw = {\n        'jyliC': function (x, y) {\n            return x === y;\n        }\n    };\n    const inputList = input['split']('');\n    const list = [];\n    inputList['forEach'](il => {\n        if (!list['some'](l => l === il)) {\n            list['push'](il);\n        }\n    });\n    const result = WePgyw['jyliC'](list['length'], 0x2) ? 'Yes' : 'No';\n    console['log'](result);\n}\n;\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["ASSA", "Yes"], ["STOP", "No"], ["FFEE", "Yes"], ["FREE", "No"]], "original": "function main(input) {\n  // 入力値（文字列）を改行で区切る\n  const inputList = input.split('');\n  const list = [];\n  inputList.forEach(il => {\n    if (!list.some(l => l === il)) {\n      list.push(il);\n    }\n  });\n  const result = list.length === 2 ? 'Yes' : 'No';\n  console.log(result);\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03036_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (input) {\n    const HwWWBf = {\n        'xZCMU': function (x, y) {\n            return x < y;\n        },\n        'TvwJi': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['trim']()['split'](/\\s+/)['map'](x => x - 0x0);\n    const r = input[0x0];\n    const D = input[0x1];\n    let x = input[0x2];\n    let ans = new Array(0xa);\n    for (let i = 0x0; HwWWBf['xZCMU'](i, 0xa); i++) {\n        x = HwWWBf['TvwJi'](r, x) - D;\n        ans[i] = x;\n    }\n    console['log'](ans['join']('\\x0a'));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 10 20", "30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250"], ["4 40 60", "200\n760\n3000\n11960\n47800\n191160\n764600\n3058360\n12233400\n48933560"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const r=input[0];\n  const D=input[1];\n  let x=input[2];\n  let ans=new Array(10);\n  for(let i=0;i<10;i++){\n    x=r*x-D;\n    ans[i]=x;\n  }\n  \n  console.log(ans.join('\\n'));\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03048_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var udXUUk = {\n        'uiHuZ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'WgNfn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HmDFR': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'GIAEA': function (x, y) {\n            return x <= y;\n        },\n        'WZnTw': function (x, y) {\n            return x | y;\n        },\n        'ugtVZ': function (x, y) {\n            return x / y;\n        },\n        'FCdwJ': function (x, y) {\n            return x <= y;\n        },\n        'rRwTq': function (x, y) {\n            return x | y;\n        },\n        'OrluD': function (x, y) {\n            return x / y;\n        },\n        'hIiHm': function (x, y) {\n            return x | y;\n        },\n        'sEXIr': function (x, y) {\n            return x * y;\n        },\n        'FPEHm': function (x, y) {\n            return x >= y;\n        },\n        'vyzvC': function (x, y) {\n            return x == y;\n        },\n        'DlMph': function (x, y) {\n            return x + y;\n        },\n        'euaPY': function (x, y) {\n            return x + y;\n        },\n        'rMUIp': function (x, y) {\n            return x * y;\n        },\n        'yAhdR': function (x, y) {\n            return x * y;\n        },\n        'lvBsr': function (x, y) {\n            return x * y;\n        }\n    };\n    const args = input['split']('\\x20');\n    const R = udXUUk['uiHuZ'](parseInt, args[0x0], 0xa), G = udXUUk['uiHuZ'](parseInt, args[0x1], 0xa), B = udXUUk['WgNfn'](parseInt, args[0x2], 0xa), N = udXUUk['HmDFR'](parseInt, args[0x3], 0xa);\n    var s = 0x0;\n    var k = 0x0;\n    for (var i = 0x0; udXUUk['GIAEA'](i, udXUUk['WZnTw'](udXUUk['ugtVZ'](N, R), 0x0)); ++i) {\n        for (var j = 0x0; udXUUk['FCdwJ'](j, udXUUk['rRwTq'](udXUUk['OrluD'](N, G), 0x0)); ++j) {\n            k = udXUUk['hIiHm'](udXUUk['ugtVZ'](N - udXUUk['sEXIr'](i, R) - udXUUk['sEXIr'](j, G), B), 0x0);\n            if (udXUUk['FPEHm'](k, 0x0) && udXUUk['vyzvC'](udXUUk['DlMph'](udXUUk['euaPY'](udXUUk['rMUIp'](i, R), udXUUk['yAhdR'](j, G)), udXUUk['lvBsr'](k, B)), N))\n                ++s;\n        }\n    }\n    console['log'](s);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 2 3 4", "4"], ["13 1 4 3000", "87058"]], "original": "function main(input){\n  const args = input.split(' ');\n  const R = parseInt(args[0], 10),\n        G = parseInt(args[1], 10),\n        B = parseInt(args[2], 10),\n        N = parseInt(args[3], 10);\n  \n  var s = 0;\n  var k = 0;\n  for (var i = 0; i <= (N / R | 0); ++i){\n    for (var j = 0; j <= (N / G | 0); ++j){\n      k = ((N - i*R - j*G) / B) | 0;\n      if (k >= 0 && i*R + j*G + k*B == N) ++s;\n    }\n  }\n  console.log(s);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03060_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var PkCPhA = {\n        'yDAms': '3|6|5|0|1|2|4',\n        'jPnYB': function (x, y) {\n            return x - y;\n        },\n        'CExny': function (x, y) {\n            return x >= y;\n        },\n        'YqdnS': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var XiuQvV = PkCPhA['yDAms']['split']('|');\n    var HPyLqx = 0x0;\n    while (!![]) {\n        switch (XiuQvV[HPyLqx++]) {\n        case '0':\n            C = input[0x2]['split']('\\x20')['map'](Number);\n            continue;\n        case '1':\n            var Y = 0x0;\n            continue;\n        case '2':\n            for (var i = 0x0; i < n; i++) {\n                y = PkCPhA['jPnYB'](V[i], C[i]);\n                if (PkCPhA['CExny'](y, 0x0)) {\n                    Y = Y + y;\n                }\n            }\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            console['log'](Y);\n            continue;\n        case '5':\n            V = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '6':\n            n = PkCPhA['YqdnS'](Number, input[0x0]['split']('\\x20'));\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n10 2 5\n6 3 4", "5"], ["4\n13 21 6 19\n11 30 6 15", "6"], ["1\n1\n50", "0"]], "original": "//   2次配列のよみこみ\n\nfunction Main(input) {\n    input = input.split(\"\\n\");\n  \tn = Number(input[0].split(\" \"));\n    V = input[1].split(\" \").map(Number);\n    C = input[2].split(\" \").map(Number);\n    \n  //  console.log(n);\n  //  console.log(V);\n  //  console.log(C);\n    \n    \n  \tvar Y = 0;\n  \tfor(var i=0; i<n; i++){y = V[i]-C[i];\n                             if ( y >= 0){Y = Y + y;}\n                                      }\n   console.log(Y);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03145_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var EhmWmV = {\n        'oYuso': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'pokXe': function (x, y) {\n            return x / y;\n        },\n        'DNnhw': function (x, y) {\n            return x * y;\n        }\n    };\n    var inputs = input['split']('\\x20');\n    var ab = EhmWmV['oYuso'](parseInt, inputs[0x0], 0xa);\n    var bc = EhmWmV['oYuso'](parseInt, inputs[0x1], 0xa);\n    console['log'](EhmWmV['pokXe'](EhmWmV['DNnhw'](ab, bc), 0x2));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4 5", "6"], ["5 12 13", "30"], ["45 28 53", "630"]], "original": "function Main(input){ \n  var inputs = input.split(\" \");\n  var ab = parseInt(inputs[0],10);\n  var bc = parseInt(inputs[1],10);\n  console.log(ab*bc/2); \n  \n}\n    Main(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03327_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const sEYutY = {\n        'wJsJN': function (callee, param1) {\n            return callee(param1);\n        },\n        'ofAsR': function (x, y) {\n            return x <= y;\n        }\n    };\n    const N = sEYutY['wJsJN'](Number, input);\n    if (sEYutY['ofAsR'](N, 0x3e7)) {\n        console['log']('ABC');\n    } else {\n        console['log']('ABD');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["999", "ABC"], ["1000", "ABD"], ["1481", "ABD"]], "original": "'use strict'\n\nfunction Main(input) {\n  const N = Number(input);\n\n  if(N <= 999) {\n    console.log('ABC');\n  } else {\n    console.log('ABD');\n  }\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03360_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const acGyyM = {\n        'yicNf': function (callee, param1) {\n            return callee(param1);\n        },\n        'ZZotb': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const nums = input[0x0]['split']('\\x20')['map'](i => parseInt(i));\n    const K = acGyyM['yicNf'](parseInt, input[0x1]);\n    nums['sort']((a, b) => a - b);\n    let n = nums['pop']();\n    n = acGyyM['ZZotb'](n, Math['pow'](0x2, K));\n    nums['push'](n);\n    console['log'](nums['reduce']((p, c) => p + c));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["5 3 11\n1", "30"], ["3 3 4\n2", "22"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const nums = input[0].split(' ').map(i => parseInt(i))\n    const K = parseInt(input[1])\n\n    nums.sort((a, b) => a - b)\n    let n = nums.pop()\n    n = n * Math.pow(2, K)\n    nums.push(n)\n    console.log(nums.reduce((p, c) => p + c))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03473_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var UFVPRW = {\n        'guzWs': function (x, y) {\n            return x + y;\n        },\n        'lTcyH': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']();\n    console['log'](UFVPRW['guzWs'](0x18, UFVPRW['lTcyH'](0x18, input)));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["21", "27"], ["12", "36"]], "original": "function Main(input) {\n  input = input.trim()\n//  input = input.split(\" \").map(Number);\nconsole.log(24+(24-input))\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03574_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const SSVWzq = {\n        'jOUed': function (x, y) {\n            return x === y;\n        },\n        'VTWlr': function (x, y) {\n            return x < y;\n        },\n        'ANXld': function (x, y) {\n            return x <= y;\n        },\n        'dPedA': function (x, y) {\n            return x < y;\n        },\n        'DFqRM': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const hw = input['shift']()['split']('\\x20')['map'](str => Number(str));\n    const H = hw[0x0], W = hw[0x1];\n    const data = input['map'](ls => ls['split'](''));\n    const hy = [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    const wx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    for (let i = 0x0; i < H; i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (SSVWzq['jOUed'](data[i][j], '#'))\n                continue;\n            let count = 0x0;\n            for (let k = 0x0; SSVWzq['VTWlr'](k, 0x8); k++) {\n                const y = i + hy[k], x = j + wx[k];\n                if (y < 0x0 || SSVWzq['ANXld'](H, y))\n                    continue;\n                if (SSVWzq['dPedA'](x, 0x0) || SSVWzq['DFqRM'](W, x))\n                    continue;\n                if (SSVWzq['jOUed'](data[y][x], '#')) {\n                    count += 0x1;\n                }\n            }\n            data[i][j] = count;\n        }\n    }\n    const result = data['map'](ls => ls['join'](''))['join']('\\x0a');\n    console['log'](result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 5\n.....\n.#.#.\n.....", "11211\n1#2#1\n11211"], ["3 5\n#####\n#####\n#####", "#####\n#####\n#####"], ["6 6\n#####.\n#.#.##\n####.#\n.#..#.\n#.##..\n#.#...", "#####3\n#8#7##\n####5#\n4#65#2\n#5##21\n#4#310"]], "original": "'use strict'\nfunction Main(input){\n  input = input.trim().split('\\n');\n  const hw = input.shift().split(' ').map((str)=> Number(str));\n  const H  = hw[0], W = hw[1];  \n  const data = input.map(ls => ls.split(''));\n  \n  const hy = [-1, -1, -1, 0, 0, 1, 1, 1];\n  const wx = [-1, 0, 1, -1, 1, -1, 0, 1];\n  \n  for(let i = 0; i < H; i++){\n    for(let j = 0; j < W; j++){\n      \n      if(data[i][j] === '#') continue;\n      \n      let count = 0;\n      for(let k = 0; k < 8; k++){\n        const y = i + hy[k] , x = j + wx[k]; \n        if(y < 0 || H <= y) continue;\n        if(x < 0 || W <= x) continue;\n        \n        if(data[y][x] === '#') {\n          count += 1;\n        }\n      }\n      data[i][j] = count;\n    }\n  }\n  const result = data.map(ls => ls.join('')).join('\\n');\n  console.log(result);\n}\n\n//固定\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04045_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var zqoxtc = {\n        'DCXhR': '4|1|2|3|0',\n        'hZNbA': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var YTsSRw = zqoxtc['DCXhR']['split']('|');\n    var KlZorb = 0x0;\n    while (!![]) {\n        switch (YTsSRw[KlZorb++]) {\n        case '0':\n            return money;\n        case '1':\n            var money = inputs[0x0]['split']('\\x20')[0x0];\n            continue;\n        case '2':\n            var kRegexp = new RegExp(inputs[0x1]['replace']('\\x20', '|'));\n            continue;\n        case '3':\n            while (kRegexp['test'](zqoxtc['hZNbA'](String, money))) {\n                money++;\n            }\n            continue;\n        case '4':\n            var inputs = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nconsole['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["1000 8\n1 3 4 5 6 7 8 9", "2000"], ["9999 1\n0", "9999"]], "original": "function main(input) {\n\tvar inputs = input.split(\"\\n\");\n\tvar money = inputs[0].split(\" \")[0];\n    var kRegexp = new RegExp(inputs[1].replace(\" \",\"|\"));\n    while(kRegexp.test(String(money))){\n    \tmoney++;\n    }\n    return money;\n}\n\nconsole.log(main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")));", "language": "JavaScript"}
{"filename": "p02571_1", "type": "JavaScript", "obfuscated": "(input => {\n    const BsqjqN = {\n        'oWgMZ': function (x, y) {\n            return x < y;\n        },\n        'RPOka': function (x, y) {\n            return x + y;\n        },\n        'KFzJF': function (x, y) {\n            return x < y;\n        },\n        'ugwWJ': function (x, y) {\n            return x !== y;\n        },\n        'JOBJu': function (x, y) {\n            return x > y;\n        }\n    };\n    const [S, T] = input['trim']()['split']('\\x0a');\n    const sl = S['length'];\n    const tl = T['length'];\n    const range = sl - tl;\n    let min = tl;\n    for (let i = 0x0; BsqjqN['oWgMZ'](i, range); i++) {\n        const target = S['slice'](i, BsqjqN['RPOka'](tl, i));\n        let diff = 0x0;\n        for (let j = 0x0; BsqjqN['KFzJF'](j, tl); j++) {\n            if (BsqjqN['ugwWJ'](target[j], T[j]))\n                diff += 0x1;\n        }\n        if (BsqjqN['JOBJu'](min, diff)) {\n            min = diff;\n        }\n    }\n    console['log'](min);\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["cabacc\nabc", "1"], ["codeforces\natcoder", "6"]], "original": "((input) => {\n  const [S, T] = input.trim().split('\\n');\n  const sl = S.length;\n  const tl = T.length;\n  const range = sl - tl;\n  let min = tl;\n\n  for (let i = 0; i < range; i++) {\n    const target = S.slice(i, tl + i);\n    let diff = 0;\n    for (let j = 0; j < tl; j++) {\n      if (target[j] !== T[j]) diff += 1;\n    }\n    if (min > diff) {\n      min = diff;\n    }\n   }\n\n  console.log(min);\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02608_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const skavdF = {\n        'GpcFU': function (callee, param1) {\n            return callee(param1);\n        },\n        'HHAZs': function (x, y) {\n            return x <= y;\n        },\n        'oPoYW': function (x, y) {\n            return x ** y;\n        },\n        'uSdjH': function (x, y) {\n            return x > y;\n        },\n        'ctfHG': function (x, y) {\n            return x + y;\n        },\n        'DiJHK': function (x, y) {\n            return x <= y;\n        },\n        'hLZmP': function (x, y) {\n            return x ** y;\n        },\n        'BQSzk': function (x, y) {\n            return x ** y;\n        },\n        'ueJdn': function (x, y) {\n            return x * y;\n        },\n        'BrBAG': function (x, y) {\n            return x * y;\n        },\n        'obbrb': function (x, y) {\n            return x - y;\n        }\n    };\n    const N = skavdF['GpcFU'](Number, input);\n    let fn = new Array(N)['fill'](0x0);\n    for (let x = 0x1; skavdF['HHAZs'](skavdF['oPoYW'](x, 0x2), N); x++) {\n        for (let y = 0x1; skavdF['HHAZs'](skavdF['oPoYW'](y, 0x2), N); y++) {\n            if (skavdF['uSdjH'](skavdF['ctfHG'](x, y), N))\n                break;\n            for (let z = 0x1; skavdF['DiJHK'](skavdF['hLZmP'](z, 0x2), N); z++) {\n                const i = skavdF['ctfHG'](skavdF['ctfHG'](skavdF['ctfHG'](skavdF['ctfHG'](skavdF['ctfHG'](skavdF['hLZmP'](x, 0x2), skavdF['hLZmP'](y, 0x2)), skavdF['BQSzk'](z, 0x2)), skavdF['ueJdn'](x, y)), skavdF['BrBAG'](y, z)), skavdF['ueJdn'](z, x));\n                if (i > N)\n                    break;\n                fn[skavdF['obbrb'](i, 0x1)]++;\n            }\n        }\n    }\n    console['log'](fn['join']('\\x0a'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["20", "0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n3\n3\n0\n0"]], "original": "// 一回計算した結果を全て持っておく\nfunction Main(input){\n    const N = Number(input);\n    let fn = new Array(N).fill(0);\n    for(let x=1; x**2<=N; x++){\n        for(let y=1; y**2<=N; y++){\n            if(x+y > N) break;\n            for(let z=1; z**2<=N; z++){\n                const i = x**2 + y**2 + z**2 + x*y + y*z + z*x;\n                if(i >N) break;\n                fn[i-1]++\n            }\n        }\n    }\n    console.log(fn.join('\\n'));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02712_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const JVGwJh = {\n        'DMFMP': function (x, y) {\n            return x + y;\n        },\n        'ntswX': function (x, y) {\n            return x <= y;\n        },\n        'iOIBT': function (x, y) {\n            return x % y;\n        },\n        'zDSAi': function (x, y) {\n            return x !== y;\n        }\n    };\n    inputs = input['split']('\\x0a');\n    const N = Number(inputs[0x0]);\n    const arr = [];\n    for (let i = 0x1; JVGwJh['ntswX'](i, N); i++) {\n        if (JVGwJh['iOIBT'](i, 0x3) !== 0x0 && JVGwJh['zDSAi'](JVGwJh['iOIBT'](i, 0x5), 0x0)) {\n            arr['push'](i);\n        }\n    }\n    const sum = arr['reduce']((prev, current) => {\n        return JVGwJh['DMFMP'](prev, current);\n    });\n    console['log'](sum);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["15", "60"], ["1000000", "266666333332"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  inputs = input.split(\"\\n\");\n  \n  const N = Number(inputs[0]);\n  const arr = [];\n  for( let i = 1 ; i  <= N ; i++ ){\n    if( i % 3 !== 0 && i % 5 !== 0){\n      arr.push(i);\n    }\n  }\n\n  const sum = arr.reduce( (prev,current) => {\n    return prev + current;\n  });\n\n  console.log(sum);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02754_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const dkwyBG = {\n        'PorRo': function (callee, param1) {\n            return callee(param1);\n        },\n        'uliSN': function (x, y) {\n            return x === y;\n        },\n        'qQpKj': function (x, y) {\n            return x < y;\n        },\n        'twHxO': function (x, y) {\n            return x % y;\n        },\n        'ATUZC': function (x, y) {\n            return x + y;\n        },\n        'CmpSh': function (x, y) {\n            return x * y;\n        },\n        'NMCpl': function (x, y) {\n            return x % y;\n        },\n        'hiagw': function (x, y) {\n            return x / y;\n        }\n    };\n    let kari = input[0x0]['trim']()['split']('\\x20');\n    let n = parseInt(kari[0x0]);\n    let a = dkwyBG['PorRo'](parseInt, kari[0x1]);\n    let b = parseInt(kari[0x2]);\n    let c = a + b;\n    let ans = 0x0;\n    if (dkwyBG['uliSN'](a, 0x0)) {\n        console['log'](0x0);\n    } else if (b === 0x0) {\n        console['log'](n);\n    } else {\n        if (dkwyBG['qQpKj'](dkwyBG['twHxO'](n, c), a)) {\n            ans = dkwyBG['ATUZC'](dkwyBG['CmpSh'](Math['floor'](n / c), a), dkwyBG['NMCpl'](n, c));\n        } else {\n            ans = dkwyBG['CmpSh'](Math['floor'](dkwyBG['hiagw'](n, c)), a) + a;\n        }\n        console['log'](ans);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["8 3 4", "4"], ["8 0 4", "0"], ["6 2 4", "2"]], "original": "\"use strict\";\nfunction main(input) {\n  let kari = input[0].trim().split(\" \");\n \n  let n = parseInt(kari[0]);\n  let a = parseInt(kari[1]);\n  let b = parseInt(kari[2]);\n \n  let c = a + b;\n  let ans = 0;\n\n  if(a === 0){\n    console.log(0);\n  }else if(b === 0){\n    console.log(n);\n  }else{\n    if(n%c < a){\n      ans = Math.floor(n/c)*a + n%c;\n    }else{\n      ans = Math.floor(n/c)*a + a;\n    }\n    console.log(ans);\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02773_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const ZISajQ = {\n        'UZznX': function (x, y) {\n            return x < y;\n        },\n        'GpEhs': function (x, y) {\n            return x > y;\n        },\n        'Kemui': function (x, y) {\n            return x == y;\n        },\n        'KClBu': function (x, y) {\n            return x * y;\n        }\n    };\n    const rows = arg['trim']()['split']('\\x0a');\n    const N = rows['shift']();\n    let wordsObj = {};\n    rows['forEach'](row => {\n        if (wordsObj[row]) {\n            wordsObj[row]++;\n        } else {\n            wordsObj[row] = 0x1;\n        }\n    });\n    let ansArr = [];\n    let max = 0x0;\n    let output = w => {\n        console['log'](w);\n    };\n    for (let i = 0x0; ZISajQ['UZznX'](i, Object['keys'](wordsObj)['length']); i++) {\n        if (wordsObj[Object['keys'](wordsObj)[i]] < max) {\n            continue;\n        } else if (ZISajQ['GpEhs'](wordsObj[Object['keys'](wordsObj)[i]], max)) {\n            ansArr = [];\n            ansArr['push'](Object['keys'](wordsObj)[i]);\n            max = wordsObj[Object['keys'](wordsObj)[i]];\n        } else if (ZISajQ['Kemui'](ZISajQ['KClBu'](wordsObj[Object['keys'](wordsObj)[i]], 0x1), max)) {\n            ansArr['push'](Object['keys'](wordsObj)[i]);\n        }\n    }\n    ansArr['sort']();\n    ansArr['forEach'](output);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet", "beet\nvet"], ["8\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo\nbuffalo", "buffalo"], ["7\nbass\nbass\nkick\nkick\nbass\nkick\nkick", "kick"], ["4\nushi\ntapu\nnichia\nkun", "kun\nnichia\ntapu\nushi"]], "original": "\"use strict\";\nconst main = arg => {\n  \tconst rows = arg.trim().split(\"\\n\");\n  \tconst N = rows.shift();\n  \tlet wordsObj = {};\n  \trows.forEach(row => {\n    \tif(wordsObj[row]){\n        \twordsObj[row]++;\n        } else {\n        \twordsObj[row] = 1;\n        }\n    })\n  \tlet ansArr = [];\n  \tlet max = 0;\n  \tlet output = (w) => {console.log(w)};\n  \tfor(let i = 0; i < Object.keys(wordsObj).length; i++){\n    \tif(wordsObj[Object.keys(wordsObj)[i]] < max){\t\n          continue;\n        } else if(wordsObj[Object.keys(wordsObj)[i]] > max){\t\n          \tansArr = [];\n        \tansArr.push(Object.keys(wordsObj)[i]);\n          \tmax = wordsObj[Object.keys(wordsObj)[i]];\n        } else if(wordsObj[Object.keys(wordsObj)[i]]*1 == max){\n        \tansArr.push(Object.keys(wordsObj)[i])\n        }\n    }\n\tansArr.sort();\n  \tansArr.forEach(output);\n  \t\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02891_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const cLYzoI = {\n        'vDmql': function (callee, param1) {\n            return callee(param1);\n        },\n        'kMYmk': function (x, y) {\n            return x < y;\n        },\n        'FBnyK': function (x, y) {\n            return x === y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    const K = cLYzoI['vDmql'](parseInt, arg[0x1]);\n    let streakS = 0x0;\n    for (let i = 0x1; cLYzoI['kMYmk'](i, S['length']); i++) {\n        if (cLYzoI['FBnyK'](S[i], S[i - 0x1])) {\n            streakS++;\n            S[i] = '@';\n        }\n    }\n    console['log'](S['length'] === 0x1 ? Math['floor'](K / 0x2) : streakS * K);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["issii\n2", "4"], ["qq\n81", "81"], ["cooooooooonteeeeeeeeeest\n999993333", "8999939997"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    const K = parseInt(arg[1]);\n\n    let streakS = 0;\n    \n    // まずSの連続箇所を調べる\n    for(let i=1; i<S.length; i++) {\n        // 連続している\n        if(S[i] === S[i-1]) {\n            streakS++;\n            S[i] = \"@\";\n        }\n    }\n    \n    console.log(S.length === 1 ? Math.floor(K / 2) : streakS * K);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02898_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const Vxmsut = {\n        'xwySk': function (callee, param1) {\n            return callee(param1);\n        },\n        'WzlPy': function (callee, param1) {\n            return callee(param1);\n        },\n        'PJbjN': function (x, y) {\n            return x < y;\n        },\n        'hQskZ': function (x, y) {\n            return x > y;\n        }\n    };\n    let pass_friend_num = Vxmsut['xwySk'](parseInt, input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    const pass_height = Vxmsut['WzlPy'](parseInt, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    const friend_height_data = input['split']('\\x0a')[0x1]['split']('\\x20');\n    for (let i = 0x0; Vxmsut['PJbjN'](i, friend_height_data['length']); i++) {\n        if (Vxmsut['hQskZ'](pass_height, Vxmsut['WzlPy'](parseInt, friend_height_data[i]))) {\n            pass_friend_num--;\n        }\n    }\n    console['log'](pass_friend_num);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8'));", "test_cases": [["4 150\n150 140 100 200", "2"], ["1 500\n499", "0"], ["5 1\n100 200 300 400 500", "5"]], "original": "\"use strict\";\n\nfunction main(input) {\n  let pass_friend_num = parseInt(input.split(\"\\n\")[0].split(\" \")[0]);\n  const pass_height = parseInt(input.split(\"\\n\")[0].split(\" \")[1]);\n\n  const friend_height_data = input.split(\"\\n\")[1].split(\" \");\n\n  for (let i = 0; i < friend_height_data.length; i++) {\n    if (pass_height > parseInt(friend_height_data[i])) {\n      pass_friend_num--;\n    }\n  }\n\n  console.log(pass_friend_num);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\"));\n", "language": "JavaScript"}
{"filename": "p02909_1", "type": "JavaScript", "obfuscated": "function Main(arg) {\n    var qiKUaa = {\n        'qyiwq': function (x, y) {\n            return x === y;\n        },\n        'tDaUm': 'Sunny',\n        'JRVim': 'Cloudy',\n        'OAyVS': function (x, y) {\n            return x === y;\n        },\n        'UpWZm': 'Rainy'\n    };\n    var N = arg['split']('\\x0a')[0x0];\n    if (qiKUaa['qyiwq'](N, qiKUaa['tDaUm'])) {\n        console['log'](qiKUaa['JRVim']);\n    } else if (qiKUaa['OAyVS'](N, qiKUaa['JRVim'])) {\n        console['log']('Rainy');\n    } else if (qiKUaa['qyiwq'](N, qiKUaa['UpWZm'])) {\n        console['log'](qiKUaa['tDaUm']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["Sunny", "Cloudy"], ["Rainy", "Sunny"]], "original": "\nfunction Main(arg) {\n \n    var N = arg.split(\"\\n\")[0];\n\n    if (N === \"Sunny\") {\n       console.log(\"Cloudy\");\n    }\n    else if (N === \"Cloudy\") {\n        console.log(\"Rainy\");\n    }\n    else if (N === \"Rainy\") {\n        console.log(\"Sunny\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02911_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet arg_str = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\narg_str = arg_str['split']('\\x0a');\nconst arg_str_0 = arg_str[0x0]['split']('\\x20');\nconst N = arg_str_0[0x0];\nconst K = arg_str_0[0x1];\nconst Q = arg_str_0[0x2];\nconst A_array = arg_str['slice'](0x1);\nlet result_val = [];\nfor (let i = 0x0; i < N; i++) {\n    result_val[i] = K;\n}\nA_array['forEach']((item, index) => {\n    const NWtyZM = {\n        'lOonh': function (x, y) {\n            return x < y;\n        },\n        'oiybh': function (x, y) {\n            return x != y;\n        },\n        'bPVYL': function (x, y) {\n            return x - y;\n        }\n    };\n    for (let i = 0x0; NWtyZM['lOonh'](i, N); i++) {\n        if (NWtyZM['oiybh'](NWtyZM['bPVYL'](item, 0x1), i)) {\n            result_val[i]--;\n        }\n    }\n});\nresult_val['map'](x => x > 0x0 ? console['log']('Yes') : console['log']('No'));", "test_cases": [["6 3 4\n3\n1\n3\n2", "No\nNo\nYes\nNo\nNo\nNo"], ["6 5 4\n3\n1\n3\n2", "Yes\nYes\nYes\nYes\nYes\nYes"], ["10 13 15\n3\n1\n4\n1\n5\n9\n2\n6\n5\n3\n5\n8\n9\n7\n9", "No\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nYes\nNo"]], "original": "\"use strict\"\n \nlet arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\narg_str = arg_str.split('\\n')\nconst arg_str_0 = arg_str[0].split(' ')\nconst N = arg_str_0[0]\nconst K = arg_str_0[1]\nconst Q = arg_str_0[2]\n \nconst A_array = arg_str.slice(1)\n \nlet result_val = []\n \nfor(let i=0;i<N;i++){\n  result_val[i] = K\n}\n \nA_array.forEach((item, index)=>{\n  for(let i=0;i<N;i++){\n    if(item - 1 != i){\n        result_val[i]--\n    }\n  }\n})\n \nresult_val.map(x=>x>0 ? console.log('Yes') : console.log('No'))\n", "language": "JavaScript"}
{"filename": "p02982_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var Jdeooi = {\n        'mKJaw': function (x, y) {\n            return x < y;\n        },\n        'wpXbV': function (x, y) {\n            return x + y;\n        },\n        'NrBdq': function (x, y) {\n            return x - y;\n        },\n        'xwCOz': function (x, y) {\n            return x == y;\n        },\n        'dETgi': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'QeAnM': function (x, y) {\n            return x < y;\n        },\n        'lQKSf': function (x, y) {\n            return x + y;\n        },\n        'tuROK': function (x, y) {\n            return x < y;\n        },\n        'UtjVk': function (x, y) {\n            return x + y;\n        }\n    };\n    const args = input['split']('\\x0a');\n    const aiueo = args[0x0]['split']('\\x20');\n    const N = Jdeooi['dETgi'](parseInt, aiueo[0x0], 0xa);\n    const D = Jdeooi['dETgi'](parseInt, aiueo[0x1], 0xa);\n    var arr = [];\n    for (var i = 0x0; Jdeooi['QeAnM'](i, N); i++) {\n        arr[i] = [];\n        var subArgs = args[Jdeooi['lQKSf'](i, 0x1)]['split']('\\x20');\n        for (var j = 0x0; Jdeooi['tuROK'](j, Jdeooi['lQKSf'](D, 0x1)); j++) {\n            arr[i]['push'](Jdeooi['dETgi'](parseInt, subArgs[j], 0xa));\n        }\n    }\n    var kakunin = 0x0;\n    function kyori(arr1, arr2) {\n        var sum = 0x0;\n        for (var i = 0x0; Jdeooi['mKJaw'](i, D); i++) {\n            sum = Jdeooi['wpXbV'](sum, Math['pow'](Jdeooi['NrBdq'](arr1[i], arr2[i]), 0x2));\n        }\n        if (Jdeooi['xwCOz'](Number['isInteger'](Math['sqrt'](sum)), !![])) {\n            return !![];\n        } else {\n            return ![];\n        }\n    }\n    for (var i = 0x0; Jdeooi['mKJaw'](i, N); i++) {\n        for (var j = Jdeooi['UtjVk'](i, 0x1); j < N; j++) {\n            if (Jdeooi['xwCOz'](Jdeooi['dETgi'](kyori, arr[i], arr[j]), !![])) {\n                kakunin++;\n            }\n        }\n    }\n    console['log'](kakunin);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n1 2\n5 5\n-2 8", "1"], ["3 4\n-3 7 8 2\n-12 1 10 2\n-2 8 9 3", "2"], ["5 1\n1\n2\n3\n4\n5", "10"]], "original": "function main(input){\n  const args=input.split(\"\\n\");\n  const aiueo=args[0].split(\" \");\n  const N=parseInt(aiueo[0],10);\n  const D=parseInt(aiueo[1],10);\n\n  //入力された二次元配列を、javascriptで使える形にする\n  //中身はconsole.log(arr)で確認できる\n  var arr=[]\n  for(var i=0; i<N; i++){\n    arr[i]=[];\n    var subArgs= args[i+1].split(\" \")\n    for(var j=0; j<D+1; j++){\n      arr[i].push(parseInt(subArgs[j],10))\n    }\n  }\n\n  var kakunin=0;\n\n  //二点間の距離を出す関数\n  function kyori(arr1,arr2){\n    var sum=0;\n    for(var i=0; i<D; i++){\n      sum=sum+Math.pow(arr1[i]-arr2[i],2)\n    }\n    //console.log(\"距離の二乗は\"+sum+\"です\")\n    if(Number.isInteger(Math.sqrt(sum))==true){\n      return true\n    }else{\n      return false\n    }\n  }\n\n  //以下は判定用のfor文。距離が整数ならkakunin++する。\n  for(var i=0; i<N; i++){\n    for(var j=i+1; j<N; j++){\n      if(kyori(arr[i],arr[j])==true){\n        kakunin++\n      }\n    }\n  }\n  console.log(kakunin)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03049_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction counter(str, seq) {\n    return str['split'](seq)['length'] - 0x1;\n}\nfunction main(stdin) {\n    const mGQwKQ = {\n        'IkTll': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'OpVFj': function (x, y) {\n            return x === y;\n        },\n        'qCfqa': function (x, y) {\n            return x === y;\n        },\n        'BLFVs': function (x, y) {\n            return x - y;\n        },\n        'fDMCi': function (x, y) {\n            return x === y;\n        },\n        'fYZFl': function (x, y) {\n            return x - y;\n        },\n        'VkUFk': function (x, y) {\n            return x !== y;\n        }\n    };\n    const input = stdin['split']('\\x0a');\n    input['shift']();\n    let ans = 0x0;\n    let startsB = 0x0;\n    let endsA = 0x0;\n    let startsBandEndsA = 0x0;\n    input['forEach'](s => {\n        ans += mGQwKQ['IkTll'](counter, s, 'AB');\n        if (mGQwKQ['OpVFj'](s['charAt'](0x0), 'B')) {\n            if (mGQwKQ['qCfqa'](s['charAt'](mGQwKQ['BLFVs'](s['length'], 0x1)), 'A')) {\n                ++startsBandEndsA;\n            } else {\n                ++startsB;\n            }\n        } else if (mGQwKQ['fDMCi'](s['charAt'](mGQwKQ['BLFVs'](s['length'], 0x1)), 'A')) {\n            ++endsA;\n        }\n    });\n    const smaller = Math['min'](startsB, endsA);\n    const bigger = Math['max'](startsB, endsA);\n    const shortage = mGQwKQ['fYZFl'](bigger, smaller);\n    let extra = Math['max'](0x0, mGQwKQ['fYZFl'](startsBandEndsA, shortage));\n    if (mGQwKQ['qCfqa'](shortage, 0x0) && mGQwKQ['VkUFk'](extra, 0x0))\n        --extra;\n    ans += smaller;\n    ans += Math['min'](shortage, startsBandEndsA);\n    ans += extra;\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\nABCA\nXBAZ\nBAD", "2"], ["9\nBEWPVCRWH\nZZNQYIJX\nBAVREA\nPA\nHJMYITEOX\nBCJHMRMNK\nBP\nQVFABZ\nPRGKSPUNA", "4"], ["7\nRABYBBE\nJOZ\nBMHQUVA\nBPA\nISU\nMCMABAOBHZ\nSZMEHMA", "4"]], "original": "'use strict';\n\nfunction counter(str,seq) {\n    return str.split(seq).length - 1;\n}\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  input.shift();\n\n  let ans = 0;\n  let startsB = 0;\n  let endsA = 0;\n  let startsBandEndsA = 0;\n\n  input.forEach(s => {\n    ans += counter(s, 'AB');\n\n    if (s.charAt(0) === 'B') {\n      if (s.charAt(s.length - 1) === 'A') {\n        ++startsBandEndsA;\n      } else {\n        ++startsB;\n      }\n    } else if (s.charAt(s.length - 1) === 'A') {\n      ++endsA;\n    }\n  });\n\n  const smaller = Math.min(startsB, endsA);\n  const bigger = Math.max(startsB, endsA);\n  const shortage = bigger - smaller;\n  let extra = Math.max(0, startsBandEndsA - shortage);\n  if (shortage === 0 && extra !== 0) --extra;\n  \n\n  ans += smaller;\n  ans += Math.min(shortage, startsBandEndsA);\n  ans += extra;\n\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03069_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    'use strict';\n    const iADzjZ = {\n        'vfzeW': function (x, y) {\n            return x < y;\n        },\n        'wOfYg': function (x, y) {\n            return x === y;\n        },\n        'QgFtj': function (x, y) {\n            return x === y;\n        },\n        'rxZUj': function (x, y) {\n            return x === y;\n        },\n        'wlcOB': function (x, y) {\n            return x <= y;\n        }\n    };\n    const elements = input['split']('\\x0a');\n    let blackFlag = ![];\n    let numBlack = 0x0;\n    let numWhiteAfterBlack = 0x0;\n    for (let i = 0x0; iADzjZ['vfzeW'](i, elements[0x0]); i++) {\n        if (iADzjZ['wOfYg'](blackFlag, ![]) && iADzjZ['QgFtj'](elements[0x1][i], '#')) {\n            blackFlag = !![];\n        }\n        if (iADzjZ['QgFtj'](blackFlag, !![]) && elements[0x1][i] === '.') {\n            numWhiteAfterBlack++;\n        }\n        if (iADzjZ['QgFtj'](elements[0x1][i], '#')) {\n            numBlack++;\n        }\n    }\n    if (iADzjZ['wOfYg'](numWhiteAfterBlack, 0x0) && iADzjZ['rxZUj'](blackFlag, ![])) {\n        console['log']('0');\n    } else if (iADzjZ['QgFtj'](numWhiteAfterBlack, 0x0) && iADzjZ['rxZUj'](blackFlag, !![])) {\n        console['log'](numBlack);\n    } else if (iADzjZ['wlcOB'](numBlack, numWhiteAfterBlack)) {\n        console['log'](numBlack);\n    } else {\n        console['log'](numWhiteAfterBlack);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["3\n#.#", "1"], ["5\n#.##.", "2"], ["9\n.........", "0"]], "original": "function Main(input) {\n    \"use strict\";\n    const elements = input.split('\\n');\n    let blackFlag = false;\n    let numBlack = 0;\n    let numWhiteAfterBlack = 0;\n\n    for (let i = 0; i < elements[0]; i++) {\n        if (blackFlag === false && elements[1][i] === '#') {\n            blackFlag = true;\n        }\n        if (blackFlag === true && elements[1][i] === '.') {\n            numWhiteAfterBlack++;\n        }\n        if (elements[1][i] === '#') {\n            numBlack++;\n        }\n    }\n\n    if (numWhiteAfterBlack === 0 && blackFlag === false) {\n        console.log('0');\n    } else if(numWhiteAfterBlack === 0 && blackFlag === true){\n        console.log(numBlack);\n    }else if (numBlack <= numWhiteAfterBlack) {\n        console.log(numBlack);\n    } else {\n        console.log(numWhiteAfterBlack);\n    }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf-8'));", "language": "JavaScript"}
{"filename": "p03076_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const DLlcGm = {\n        'bSwUy': function (x, y) {\n            return x < y;\n        },\n        'wKFDn': function (callee, param1) {\n            return callee(param1);\n        },\n        'kxsdo': function (callee, param1) {\n            return callee(param1);\n        },\n        'SbvDs': function (x, y) {\n            return x !== y;\n        },\n        'mRDZX': function (x, y) {\n            return x !== y;\n        },\n        'KJbbS': function (callee, param1) {\n            return callee(param1);\n        },\n        'qTgSq': function (x, y) {\n            return x - y;\n        }\n    };\n    const times = arg['trim']()['split']('\\x0a')['map'](n => parseInt(n));\n    let min = 0xa;\n    let sum = 0x0;\n    for (let i = 0x0; DLlcGm['bSwUy'](i, times['length']); i++) {\n        let digitOne = DLlcGm['wKFDn'](String, times[i])['split']('');\n        digitOne = DLlcGm['wKFDn'](parseInt, digitOne[digitOne['length'] - 0x1]);\n        let digitMinus = 0xa - digitOne;\n        sum += DLlcGm['kxsdo'](parseInt, times[i]);\n        if (DLlcGm['SbvDs'](digitMinus, 0xa)) {\n            sum += digitMinus;\n        }\n        if (DLlcGm['mRDZX'](digitMinus, 0xa) && DLlcGm['bSwUy'](digitOne, min)) {\n            min = digitOne;\n        }\n    }\n    console['log'](DLlcGm['KJbbS'](parseInt, sum - DLlcGm['qTgSq'](0xa, min)));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["29\n20\n7\n35\n120", "215"], ["101\n86\n119\n108\n57", "481"], ["123\n123\n123\n123\n123", "643"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const times = arg.trim().split(\"\\n\").map(n=>parseInt(n));\n    let min = 10;\n    \n    let sum = 0;\n    \n    for(let i=0; i<times.length; i++) {\n        let digitOne   = String(times[i]).split(\"\");\n        digitOne = parseInt(digitOne[digitOne.length - 1]);\n        \n        let digitMinus = 10 - digitOne;\n        sum += parseInt(times[i]);\n        \n        if(digitMinus !== 10) {\n            sum += digitMinus;\n        }\n        \n        if(digitMinus !== 10 && digitOne < min) {\n            min = digitOne;\n        }\n    }\n\n    console.log(parseInt(sum - (10 - min)));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03103_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var LDVFFu = {\n        'KhSNA': function (x, y) {\n            return x + y;\n        },\n        'BJTcW': function (x, y) {\n            return x < y;\n        },\n        'QoASm': function (x, y) {\n            return x > y;\n        },\n        'OLuMx': function (callee, param1) {\n            return callee(param1);\n        },\n        'kshpo': function (callee, param1) {\n            return callee(param1);\n        },\n        'BKqfh': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a');\n    inputStr = input[0x0]['split']('\\x20');\n    var N = Number['parseInt'](inputStr[0x0]);\n    var M = Number['parseInt'](inputStr[0x1]);\n    var tmp = [];\n    var array = [];\n    var buycnt = 0x0;\n    var okane = 0x0;\n    var mokori = M;\n    for (i = 0x0; i < N; i++) {\n        tmp = input[i + 0x1]['split']('\\x20');\n        array[i] = tmp['map'](tmp => parseInt(tmp, 0xa));\n        array[i][0x0] = LDVFFu['KhSNA']('0000000000', array[i][0x0])['substr'](-0xa);\n    }\n    array['sort']();\n    for (i = 0x0; LDVFFu['BJTcW'](i, N); i++) {\n        if (LDVFFu['QoASm'](mokori, LDVFFu['OLuMx'](parseInt, array[i][0x1]))) {\n            okane += parseInt(array[i][0x0]) * LDVFFu['kshpo'](parseInt, array[i][0x1]);\n            mokori -= LDVFFu['OLuMx'](parseInt, array[i][0x1]);\n        } else {\n            okane += LDVFFu['BKqfh'](LDVFFu['kshpo'](parseInt, array[i][0x0]), mokori);\n            break;\n        }\n    }\n    console['log'](okane);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 5\n4 9\n2 4", "12"], ["4 30\n6 18\n2 5\n3 10\n7 9", "130"], ["1 100000\n1000000000 100000", "100000000000000"]], "original": "function Main(input){\n  input = input.split(\"\\n\");\n  inputStr = input[0].split(\" \");\n  var N = Number.parseInt(inputStr[0]);\n  var M = Number.parseInt(inputStr[1]);\n  var tmp = [];\n  var array = [];\n  var buycnt = 0;\n  var okane = 0;\n  var mokori = M;\n  //配列に数値化して溜め込む\n  for (i=0;i<N;i++){\n    tmp = input[i+1].split(\" \");\n    array[i] = tmp.map( tmp => parseInt(tmp,10) )\n    array[i][0] = ( \"0000000000\" + array[i][0] ).substr(-10);\n  }\n  //ソートする\n  array.sort();\n  //数値変換しつつ必要本数を買い込む\n  for (i=0 ; i<N ; i++){\n    if (mokori > parseInt(array[i][1])){\n      okane += parseInt(array[i][0]) * parseInt(array[i][1]);\n      mokori -= parseInt(array[i][1]);\n    } else {\n      okane += parseInt(array[i][0]) * mokori;\n      break;\n    }\n  }\n  console.log(okane);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03105_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const WJgxZx = {\n        'jACJd': function (x, y) {\n            return x > y;\n        },\n        'OUVcs': function (x, y) {\n            return x / y;\n        },\n        'wIHvK': function (x, y) {\n            return x >= y;\n        }\n    };\n    const In = input['split']('\\x20')['map'](n => Number(n));\n    const o1 = WJgxZx['jACJd'](In[0x0], In[0x1]) ? 0x0 : WJgxZx['OUVcs'](In[0x1], In[0x0]);\n    console['log'](WJgxZx['wIHvK'](o1, In[0x2]) ? In[0x2] : o1);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 11 4", "4"], ["3 9 5", "3"], ["100 1 10", "0"]], "original": "const main = input =>{\n    const In = input.split(' ').map(n=>Number(n));\n    const o1 = In[0] > In[1] ? 0 : In[1]/In[0];\n    console.log(o1 >= In[2] ? In[2] : o1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03219_1", "type": "JavaScript", "obfuscated": "const rl = require('readline')['createInterface']({ 'input': process['stdin'] });\nrl['on']('line', line => {\n    const PWXcau = {\n        'pPvnn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'REKAN': function (callee, param1) {\n            return callee(param1);\n        },\n        'GIDyP': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const param = line['split']('\\x20');\n    PWXcau['pPvnn'](solve, PWXcau['REKAN'](Number, param[0x0]), PWXcau['GIDyP'](Number, param[0x1]));\n    rl['close']();\n});\nfunction solve(x, y) {\n    const ngFjHZ = {\n        'jyhco': function (x, y) {\n            return x + y;\n        },\n        'Cvbbh': function (x, y) {\n            return x / y;\n        }\n    };\n    console['log'](ngFjHZ['jyhco'](x, ngFjHZ['Cvbbh'](y, 0x2)));\n}", "test_cases": [["81 58", "110"], ["4 54", "31"]], "original": "const rl = require('readline')\n    .createInterface({\n        input: process.stdin,\n    });\n\nrl.on('line', (line) => {\n    const param = line.split(\" \");\n    solve(Number(param[0]), Number(param[1]));\n    rl.close();\n});\n\nfunction solve(x,y){\n    console.log(x+y/2);\n}\n", "language": "JavaScript"}
{"filename": "p03221_1", "type": "JavaScript", "obfuscated": "function fillZero(l, num) {\n    var KfyJbg = {\n        'QuiER': function (x, y) {\n            return x < y;\n        }\n    };\n    num = String(num);\n    for (var i = num['length']; KfyJbg['QuiER'](i, l); i++) {\n        num = '0' + num;\n    }\n    return num;\n}\nfunction main(arg) {\n    var IvqPdH = {\n        'LCfwz': function (callee, param1) {\n            return callee(param1);\n        },\n        'jTLew': function (x, y) {\n            return x < y;\n        },\n        'HgmpM': function (x, y) {\n            return x === y;\n        },\n        'hvMTo': function (x, y) {\n            return x + y;\n        },\n        'XuWAn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'AEsMw': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'dbwCe': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    arg[0x0] = arg[0x0]['split']('\\x20');\n    var N = Number(arg[0x0][0x0]);\n    var M = IvqPdH['LCfwz'](Number, arg[0x0][0x1]);\n    arg['shift']();\n    var p_master = {};\n    for (var i = 0x0; i < arg['length']; i++) {\n        var tmp = arg[i]['split']('\\x20')['map'](e => Number(e));\n        arg[i] = tmp;\n        if (!p_master[tmp[0x0]]) {\n            p_master[tmp[0x0]] = [];\n        }\n        p_master[tmp[0x0]]['push'](tmp[0x1]);\n    }\n    for (key in p_master) {\n        p_master[key]['sort']();\n    }\n    for (var i = 0x0; i < arg['length']; i++) {\n        var _p = arg[i][0x0];\n        var j = 0x0;\n        for (var j = 0x0; IvqPdH['jTLew'](j, p_master[_p]['length']); j++) {\n            if (IvqPdH['HgmpM'](p_master[_p][j], arg[i][0x1])) {\n                break;\n            }\n        }\n        console['log'](IvqPdH['hvMTo'](IvqPdH['XuWAn'](fillZero, 0x6, _p), IvqPdH['AEsMw'](fillZero, 0x6, IvqPdH['dbwCe'](j, 0x1))));\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3\n1 32\n2 63\n1 12", "000001000002\n000002000001\n000001000001"], ["2 3\n2 55\n2 77\n2 99", "000002000001\n000002000002\n000002000003"]], "original": "function fillZero(l,num) {\n\tnum = String(num)\n\tfor (var i = num.length; i < l; i++) {\n\t\tnum = \"0\" + num\n\t}\n\treturn num\n}\n\nfunction main(arg) {\n\targ = arg.trim().split(\"\\n\")\n\targ[0] = arg[0].split(\" \")\n\tvar N = Number(arg[0][0])\n\tvar M = Number(arg[0][1])\n\n\targ.shift()\n\n\tvar p_master = {}\n\n\tfor (var i = 0; i < arg.length; i++) {\n\t\tvar tmp = arg[i].split(\" \").map(e => Number(e))\n\t\targ[i] = tmp\n\n\t\t// p_mastre.push(tmp[0])\n\t\tif (!p_master[tmp[0]]) {\n\t\t\tp_master[tmp[0]] = []\n\t\t}\n\t\tp_master[tmp[0]].push(tmp[1])\n\t}\n\n\tfor (key in p_master) {\n\t\tp_master[key].sort()\n\t}\n\t// console.log(JSON.stringify(p_master))\n\n\tfor (var i = 0; i < arg.length; i++) {\n\t\tvar _p = arg[i][0]\n\n\t\tvar j = 0;\n\t\tfor (var j = 0; j < p_master[_p].length; j++) {\n\t\t\tif (p_master[_p][j] === arg[i][1]) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tconsole.log(fillZero(6,_p) + fillZero(6, j+1))\n\t}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03337_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const laKmtm = {\n        'pIJSs': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'GTmyo': function (x, y) {\n            return x + y;\n        },\n        'gMtDC': function (x, y) {\n            return x - y;\n        },\n        'JPntA': function (x, y) {\n            return x * y;\n        }\n    };\n    const a = laKmtm['pIJSs'](parseInt, input['split']('\\x20')[0x0], 0xa);\n    const b = laKmtm['pIJSs'](parseInt, input['split']('\\x20')[0x1], 0xa);\n    ptnAdd = laKmtm['GTmyo'](a, b);\n    ptnSub = laKmtm['gMtDC'](a, b);\n    ptnMul = laKmtm['JPntA'](a, b);\n    ans = Math['max']['apply'](null, [\n        ptnAdd,\n        ptnSub,\n        ptnMul\n    ]);\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 1", "4"], ["4 -2", "6"], ["0 0", "0"]], "original": "function main (input) {\n  const a = parseInt(input.split(' ')[0],10);\n  const b = parseInt(input.split(' ')[1],10);\n\n  ptnAdd = a + b;\n  ptnSub = a - b;\n  ptnMul = a * b;\n\n  ans = Math.max.apply(null,[ptnAdd,ptnSub,ptnMul]);\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03400_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lBHKDq = {\n        'JsNwk': function (x, y) {\n            return x < y;\n        },\n        'MiMnx': function (x, y) {\n            return x >= y;\n        },\n        'efxCp': function (x, y) {\n            return x + y;\n        },\n        'mXCHi': function (x, y) {\n            return x * y;\n        },\n        'WUfEZ': function (x, y) {\n            return x + y;\n        },\n        'qrCBR': function (x, y) {\n            return x - y;\n        },\n        'zqeTp': function (callee, param1) {\n            return callee(param1);\n        },\n        'SqFoJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'NECWp': function (callee, param1) {\n            return callee(param1);\n        },\n        'BkZBR': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var DnGYPq = '1|7|3|6|4|2|5|0|8'['split']('|');\n    var qBTtza = 0x0;\n    while (!![]) {\n        switch (DnGYPq[qBTtza++]) {\n        case '0':\n            for (var j = 0x0; j < array['length']; j++) {\n                for (var k = 0x1; lBHKDq['JsNwk'](k, 0x64); k++) {\n                    if (lBHKDq['MiMnx'](d, lBHKDq['efxCp'](lBHKDq['mXCHi'](k, array[j]), 0x1))) {\n                        total['push'](lBHKDq['WUfEZ'](lBHKDq['mXCHi'](k, array[j]), 0x1));\n                    }\n                }\n            }\n            continue;\n        case '1':\n            input = input['split']('\\x0a');\n            continue;\n        case '2':\n            for (var i = 0x0; i < lBHKDq['qrCBR'](input['length'], 0x2); i++) {\n                array['push'](lBHKDq['zqeTp'](Number, input[lBHKDq['WUfEZ'](i, 0x2)]));\n            }\n            continue;\n        case '3':\n            var d = lBHKDq['SqFoJ'](Number, input[0x1]['split']('\\x20')[0x0]);\n            continue;\n        case '4':\n            var array = [];\n            continue;\n        case '5':\n            var total = [];\n            continue;\n        case '6':\n            var x = lBHKDq['NECWp'](Number, input[0x1]['split']('\\x20')[0x1]);\n            continue;\n        case '7':\n            var n = lBHKDq['BkZBR'](Number, input[0x0]);\n            continue;\n        case '8':\n            console['log'](total['length'] + n + x);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n7 1\n2\n5\n10", "8"], ["2\n8 20\n1\n10", "29"], ["5\n30 44\n26\n18\n81\n18\n6", "56"]], "original": "function Main(input) {\ninput = input.split(\"\\n\");\n\nvar n =Number(input[0]);\nvar d =Number(input[1].split(\" \")[0]);\nvar x =Number(input[1].split(\" \")[1]);\nvar array=[];\nfor(var i =0; i<input.length-2; i++){\n    array.push(Number(input[i+2]));\n}\n\nvar total=[]\nfor(var j =0; j<array.length; j++){\n\n    for(var k=1; k<100;k++){\n    if(d>=k*array[j]+1){\n        total.push(k*array[j]+1);\n}\n    }\n}\n\nconsole.log(total.length+n+x);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03470_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var qdObVt = {\n        'WmYui': '1|3|0|2|5|4',\n        'kyvxk': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var DzzVHT = qdObVt['WmYui']['split']('|');\n    var sqbIRg = 0x0;\n    while (!![]) {\n        switch (DzzVHT[sqbIRg++]) {\n        case '0':\n            lines['shift']();\n            continue;\n        case '1':\n            var NlFCfK = {\n                'VgkzN': function (x, y) {\n                    return x === y;\n                }\n            };\n            continue;\n        case '2':\n            var D = lines['map'](i => Number(i));\n            continue;\n        case '3':\n            var N = qdObVt['kyvxk'](Number, lines[0x0]);\n            continue;\n        case '4':\n            console['log'](D['length']);\n            continue;\n        case '5':\n            D = D['filter']((value, index, array) => {\n                return NlFCfK['VgkzN'](array['indexOf'](value), index);\n            });\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["4\n10\n8\n8\n6", "3"], ["3\n15\n15\n15", "1"], ["7\n50\n30\n50\n100\n50\n80\n30", "4"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]); lines.shift();\n    var D = lines.map(i => Number(i));\n\n    D = D.filter((value, index, array) => {\n        return (array.indexOf(value) === index)\n    })\n\n    console.log(D.length)\n\n});", "language": "JavaScript"}
{"filename": "p03632_1", "type": "JavaScript", "obfuscated": "function Main(inp) {\n    var kBFmhE = {\n        'zcAnO': function (callee, param1) {\n            return callee(param1);\n        },\n        'GGusy': function (x, y) {\n            return x - y;\n        }\n    };\n    var input = inp['split']('\\x0a')[0x0]['split']('\\x20')['map'](function (n) {\n        return kBFmhE['zcAnO'](Number, n);\n    });\n    var start = Math['max'](input[0x0], input[0x2]);\n    var end = Math['min'](input[0x1], input[0x3]);\n    var overlap = Math['max'](0x0, kBFmhE['GGusy'](end, start));\n    console['log'](overlap);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["0 75 25 100", "50"], ["0 33 66 99", "0"], ["10 90 20 80", "60"]], "original": "function Main(inp) {\n    var input = inp.split('\\n')[0].split(' ').map(function(n) {\n        return Number(n);\n    });\n    var start = Math.max(input[0], input[2]);\n    var end = Math.min(input[1], input[3]);\n    var overlap = Math.max(0, end - start);\n    console.log(overlap);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03679_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = INPUT => {\n    const kPeWym = {\n        'JqGSO': function (x, y) {\n            return x - y;\n        },\n        'yyrCk': 'delicious',\n        'KuhWD': function (x, y) {\n            return x < y;\n        },\n        'YPJRU': function (x, y) {\n            return x - y;\n        },\n        'FjrSK': function (x, y) {\n            return x <= y;\n        },\n        'omxCi': 'safe',\n        'SwFGg': 'dangerous'\n    };\n    const input = INPUT['split']('\\x0a')[0x0];\n    const [X, A, B] = input['split']('\\x20')['map'](n => Number(n));\n    if (kPeWym['JqGSO'](A, B) >= 0x0) {\n        console['log'](kPeWym['yyrCk']);\n    } else if (kPeWym['KuhWD'](kPeWym['YPJRU'](A, B), 0x0) && kPeWym['FjrSK'](Math['abs'](kPeWym['YPJRU'](A, B)), X)) {\n        console['log'](kPeWym['omxCi']);\n    } else {\n        console['log'](kPeWym['SwFGg']);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3 6", "safe"], ["6 5 1", "delicious"], ["3 7 12", "dangerous"]], "original": "'use strict'\n\nconst main = (INPUT) => {\n  const input = INPUT.split('\\n')[0]\n  const [X, A, B] = input.split(' ').map(n => Number(n))\n  if (A - B >= 0) {\n    console.log('delicious')\n  } else if (A - B < 0 && Math.abs(A - B) <= X) {\n    console.log('safe')\n  } else {\n    console.log('dangerous')\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03721_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const HzzGxQ = {\n        'BoKsx': function (x, y) {\n            return x < y;\n        },\n        'DMSXS': function (x, y) {\n            return x - y;\n        }\n    };\n    const args = input['trim']()['split']('\\x0a')['map'](_ => _['split']('\\x20')['map'](x => parseInt(x, 0xa)));\n    const k = args[0x0][0x1];\n    const arr = args['slice'](0x1);\n    let cnt = 0x0;\n    let i = 0x0;\n    while (HzzGxQ['BoKsx'](cnt, k)) {\n        cnt += arr[i][0x1];\n        i++;\n    }\n    console['log'](arr[HzzGxQ['DMSXS'](i, 0x1)][0x0]);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4\n1 1\n2 2\n3 3", "3"], ["10 500000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000", "1"]], "original": "\"use strict\";\n\nfunction main(input){\n  const args = input.trim().split('\\n').map(_=>_.split(' ').map(x=>parseInt(x,10)));\n  const k = args[0][1];\n  const arr = args.slice(1);\n  \n  let cnt = 0;\n  let i = 0;\n  while(cnt < k){\n    cnt += arr[i][1];\n    i++;\n  }\n  \n  console.log(arr[i-1][0]);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));  ", "language": "JavaScript"}
{"filename": "p02401_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var ibklik = {\n        'uurpa': function (callee, param1) {\n            return callee(param1);\n        },\n        'rfpsI': function (callee, param1) {\n            return callee(param1);\n        },\n        'ncbxp': function (x, y) {\n            return x == y;\n        },\n        'BxZWj': function (x, y) {\n            return x + y;\n        },\n        'pombS': function (x, y) {\n            return x == y;\n        },\n        'tfmuf': function (x, y) {\n            return x - y;\n        },\n        'JypIj': function (x, y) {\n            return x * y;\n        },\n        'JoZQB': function (x, y) {\n            return x / y;\n        },\n        'dYLaA': function (x, y) {\n            return x < y;\n        },\n        'lthpl': function (callee, param1) {\n            return callee(param1);\n        },\n        'YJdFH': function (x, y) {\n            return x !== y;\n        }\n    };\n    var input = chunk['split']('\\x0a');\n    var output = '';\n    for (var i = 0x0; ibklik['dYLaA'](i, input['length']); i++) {\n        var r = ibklik['lthpl'](calc, input[i]);\n        if (ibklik['YJdFH'](r, ![])) {\n            console['log'](r);\n        }\n    }\n    function calc(input) {\n        var nums = input['split']('\\x20');\n        nums[0x0] = ibklik['uurpa'](Number, nums[0x0]);\n        nums[0x2] = ibklik['rfpsI'](Number, nums[0x2]);\n        if (ibklik['ncbxp'](nums[0x1], '+')) {\n            return ibklik['BxZWj'](nums[0x0], nums[0x2]);\n        } else if (ibklik['pombS'](nums[0x1], '-')) {\n            return ibklik['tfmuf'](nums[0x0], nums[0x2]);\n        } else if (nums[0x1] == '*') {\n            return ibklik['JypIj'](nums[0x0], nums[0x2]);\n        } else if (ibklik['pombS'](nums[0x1], '/')) {\n            return ibklik['JoZQB'](nums[0x0], nums[0x2]);\n        } else if (ibklik['ncbxp'](nums[0x1], '?')) {\n            return ![];\n        }\n    }\n});", "test_cases": [["1 + 2\n56 - 18\n13 * 2\n100 / 10\n27 + 81\n0 ? 0", "3\n38\n26\n10\n108"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (chunk) {\n    var input = chunk.split(\"\\n\");\n    var output = \"\";\n    \n    for(var i = 0; i < input.length; i ++){\n        var r = calc(input[i]);\n        if(r !== false){\n            console.log(r);\n        }\n    }\n    \n    function calc(input){\n        var nums = input.split(\" \");\n        nums[0] = Number(nums[0]);\n        nums[2] = Number(nums[2]);\n        if(nums[1] == \"+\"){\n            return nums[0] + nums[2];\n        }\n        else if(nums[1] == \"-\"){\n            return nums[0] - nums[2];\n        }\n        else if(nums[1] == \"*\"){\n            return nums[0] * nums[2];\n        }\n        else if(nums[1] == \"/\"){\n            return nums[0] / nums[2];\n        }\n        else if(nums[1] == \"?\"){\n            return false;\n        }\n        \n    }\n});", "language": "JavaScript"}
{"filename": "p02630_1", "type": "JavaScript", "obfuscated": "function main(lines) {\n    const WYBqhM = {\n        'zXdiG': function (callee, param1) {\n            return callee(param1);\n        },\n        'CsMHE': function (x, y) {\n            return x < y;\n        }\n    };\n    const [N] = parseNumberLine(lines[0x0]);\n    const numbers = WYBqhM['zXdiG'](parseNumberLine, lines[0x1]);\n    const [Q] = parseNumberLine(lines[0x2]);\n    const operationLines = lines['slice'](0x3);\n    let result = numbers['reduce']((t, v) => t + v, 0x0);\n    for (let i = 0x0; i < Q; ++i) {\n        const [B, C] = WYBqhM['zXdiG'](parseNumberLine, operationLines[i]);\n        while (!![]) {\n            const index = numbers['indexOf'](B);\n            if (WYBqhM['CsMHE'](index, 0x0))\n                break;\n            numbers[index] = C;\n            result += C - B;\n        }\n        console['log'](result);\n    }\n}\nfunction parseNumberLine(line, radix = 0xa) {\n    return line['split'](/\\s+/)['map'](_ => parseInt(_, radix));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["4\n1 2 3 4\n3\n1 2\n3 4\n2 4", "11\n12\n16"], ["4\n1 1 1 1\n3\n1 2\n2 1\n3 5", "8\n4\n4"], ["2\n1 2\n3\n1 100\n2 100\n100 1000", "102\n200\n2000"]], "original": "\nfunction main(lines) {\n    const [N] = parseNumberLine(lines[0])\n    const numbers = parseNumberLine(lines[1])\n    const [Q] = parseNumberLine(lines[2])\n    const operationLines = lines.slice(3)\n\n    let result = numbers.reduce((t, v) => t + v, 0)\n    for (let i = 0; i < Q; ++i) {\n        const [B, C] = parseNumberLine(operationLines[i])\n\n        while (true) {\n            const index = numbers.indexOf(B)\n            if (index < 0) break\n\n            numbers[index] = C\n            result += C - B\n        }\n\n        console.log(result)\n    }\n}\n\nfunction parseNumberLine(line, radix = 10) {\n    return line.split(/\\s+/).map(_ => parseInt(_, radix))\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02639_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const idx = input['trim']()['split']('\\x20')['map'](el => parseInt(el, 0xa))['findIndex'](el => el === 0x0);\n    console['log'](idx + 0x1);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["0 2 3 4 5", "1"], ["1 2 0 4 5", "3"]], "original": "function main(input) {\n  const idx = input.trim().split(' ').map(el => parseInt(el, 10)).findIndex(el => el === 0)\n  console.log(idx + 1);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02676_1", "type": "JavaScript", "obfuscated": "const main = arg => {\n    const zgAwAV = {\n        'clLZQ': function (x, y) {\n            return x <= y;\n        },\n        'xcMlA': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const k = arg[0x0];\n    const s = arg[0x1];\n    if (zgAwAV['clLZQ'](s['length'], k))\n        console['log'](s);\n    else\n        console['log'](zgAwAV['xcMlA'](s['slice'](0x0, k), '...'));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\nnikoandsolstice", "nikoand..."], ["40\nferelibenterhominesidquodvoluntcredunt", "ferelibenterhominesidquodvoluntcredunt"]], "original": "const main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const k = arg[0]\n    const s = arg[1]\n    if(s.length <= k) console.log(s)\n    else console.log(s.slice(0, k) + '...')\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02701_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const bakMTe = {\n        'SAdJR': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    const setItems = new Set(input);\n    console['log'](bakMTe['SAdJR'](setItems['size'], 0x1));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\napple\norange\napple", "2"], ["5\ngrape\ngrape\ngrape\ngrape\ngrape", "1"], ["4\naaaa\na\naaa\naa", "4"]], "original": "'use strict';\nconst main = arg => {\n  const input = arg.trim().split('\\n');\n\n  const setItems = new Set(input);\n  console.log(setItems.size - 1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02784_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var gYBEUt = {\n        'aYGLo': function (x, y) {\n            return x / y;\n        },\n        'ecoxZ': 'Yes'\n    };\n    var line = input['split'](/\\r?\\n/g);\n    var arr = line[0x0]['split']('\\x20');\n    const H = arr[0x0], N = arr[0x1];\n    var A = line[0x1]['split']('\\x20')['map'](Number);\n    A = A['reduce']((A, x) => A + x);\n    console['log'](0x1 < Math['ceil'](gYBEUt['aYGLo'](H, A)) ? 'No' : gYBEUt['ecoxZ']);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 3\n4 5 6", "Yes"], ["20 3\n4 5 6", "No"], ["210 5\n31 41 59 26 53", "Yes"], ["211 5\n31 41 59 26 53", "No"]], "original": "function main(input) {\n    var line = input.split(/\\r?\\n/g);\n    var arr = line[0].split(\" \");\n    const H = arr[0], N = arr[1];\n    var A = line[1].split(\" \").map(Number);\n    A = A.reduce((A, x) => A + x)\n    console.log(1 < Math.ceil(H / A) ? \"No\" : \"Yes\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02790_1", "type": "JavaScript", "obfuscated": "function Main(arg) {\n    var skXuOv = {\n        'LojRJ': function (x, y) {\n            return x - y;\n        }\n    };\n    var a = skXuOv['LojRJ'](arg['split']('\\x0a')[0x0]['split']('\\x20')[0x0], 0x0);\n    var b = skXuOv['LojRJ'](arg['split']('\\x0a')[0x0]['split']('\\x20')[0x1], 0x0);\n    if (a < b) {\n        console['log'](a['toString']()['repeat'](b));\n    } else {\n        console['log'](b['toString']()['repeat'](a));\n    }\n    return;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3", "3333"], ["7 7", "7777777"]], "original": "function Main(arg)\n{\n  var a = arg.split(\"\\n\")[0].split(\" \")[0]-0;\n  var b = arg.split(\"\\n\")[0].split(\" \")[1]-0;\n \n  if (a < b) {\n    console.log(a.toString().repeat(b));\n  }\n  else {\n    console.log(b.toString().repeat(a));\n  }\n\n  return;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02791_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(s) {\n    const nFMTMa = {\n        'MVdLx': function (callee, param1) {\n            return callee(param1);\n        },\n        'xjbNT': function (x, y) {\n            return x <= y;\n        },\n        'bCGPG': function (x, y) {\n            return x < y;\n        },\n        'IgpDi': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['trim']()['split']('\\x0a');\n    const n = nFMTMa['MVdLx'](Number, s[0x0]);\n    const p = s[0x1]['trim']()['split']('\\x20')['map'](Number);\n    let cnt = 0x0;\n    for (let i = 0x1; nFMTMa['xjbNT'](i, n); i++) {\n        let flg = !![];\n        let t = p['slice'](0x0, i);\n        let x = 0x0;\n        while (nFMTMa['bCGPG'](x, t['length'] - 0x1)) {\n            if (t[x] < p[nFMTMa['IgpDi'](i, 0x1)])\n                flg = ![];\n            x++;\n        }\n        if (flg)\n            cnt++;\n    }\n    console['log'](cnt);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n4 2 5 1 3", "3"], ["4\n4 3 2 1", "4"], ["6\n1 2 3 4 5 6", "1"], ["8\n5 7 4 2 6 8 1 3", "4"], ["1\n1", "1"]], "original": "\"use strict\"\n \nfunction Main(s) {\n  s = s.trim().split('\\n');\n  const n = Number(s[0]);\n  const p = s[1].trim().split(' ').map(Number);\n \n  let cnt=0;\n  for(let i=1; i<=n; i++){\n    let flg = true;\n \n    let t = p.slice(0, i);\n    let x = 0;\n    while(x < t.length-1) {\n      if(t[x] < p[i-1]) flg=false;\n      x++;\n    }\n \n    if(flg)cnt++;\n  }\n  console.log(cnt);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02801_1", "type": "JavaScript", "obfuscated": "Main(myin());\nfunction myin() {\n    var ZcoSqy = {\n        'qPyHx': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return ZcoSqy['qPyHx'](require, 'fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myerr(t) {\n    console['error'](t);\n}\nfunction myconv(i, no) {\n    switch (no) {\n    case 0x1:\n        return parseInt(i);\n    case 0x2:\n        return i['split']('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i['split']('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i['split']('\\x0a')['map'](a => Number(a));\n    case 0x6:\n        return i['split']('');\n    case 0x7:\n        return i['split']('')['map'](a => Number(a));\n    case 0x8:\n        return i['join']('\\x20');\n    case 0x9:\n        return i['join']('\\x0a');\n    case 0x0:\n        return i['join']('');\n    default:\n        return i;\n    }\n}\nfunction Main(input) {\n    var Uiolue = {\n        'GqHOb': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'OmNVQ': 'abcdefghijklmnopqrstivwxyz'\n    };\n    input = Uiolue['GqHOb'](myconv, input, null);\n    var list = Uiolue['OmNVQ']['split']('');\n    myout(list[list['indexOf'](input) + 0x1]);\n}", "test_cases": [["a", "b"], ["y", "z"]], "original": "Main(myin());\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\nfunction myerr(t){console.error(t);}//standard error\n//[no]param\n//不明値:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\n//8:半角SPで結合　9:改行で結合　0:文字なしで結合\nfunction myconv(i,no){switch(no){case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));case 8:return i.join(\" \");case 9:return i.join(\"\\n\");case 0:return i.join(\"\");default:return i;}}\nfunction Main(input) {\n  input = myconv(input,null);\n  var list = \"abcdefghijklmnopqrstivwxyz\".split(\"\");\n  myout(list[list.indexOf(input)+1]);\n}", "language": "JavaScript"}
{"filename": "p02912_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst arg_str = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nconst args_lines = arg_str['split']('\\x0a');\nconst n_m = args_lines[0x0]['split']('\\x20');\nconst N = n_m[0x0];\nconst M = n_m[0x1];\nlet A_array = args_lines[0x1]['split']('\\x20');\nA_array = A_array['map'](x => parseInt(x));\nfor (let i = 0x0; i < M; i++) {\n    const max_value = Math['max']['apply'](null, A_array);\n    const max_index = A_array['indexOf'](max_value);\n    A_array[max_index] = A_array[max_index] / 0x2;\n}\nconst result = A_array['map'](x => Math['floor'](x))['reduce']((a, x) => a += x, 0x0);\nconsole['log'](result);", "test_cases": [["3 3\n2 13 8", "9"], ["4 4\n1 9 3 5", "6"], ["1 100000\n1000000000", "0"], ["10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "9500000000"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args_lines = arg_str.split('\\n')\nconst n_m = args_lines[0].split(' ')\nconst N = n_m[0]\nconst M = n_m[1]\nlet A_array = args_lines[1].split(' ')\nA_array = A_array.map(x=>parseInt(x))\n\nfor(let i=0;i<M;i++){\n  const max_value = Math.max.apply(null,A_array)\n    const max_index = A_array.indexOf(max_value)\n\n    A_array[max_index] = A_array[max_index] / 2\n}\n\nconst result = A_array.map(x=>Math.floor(x)).reduce((a,x) => a+=x,0)\nconsole.log(result)\n", "language": "JavaScript"}
{"filename": "p02915_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var gJfkaU = {\n        'eZpaP': '1|3|4|0|2',\n        'QzyEA': function (x, y) {\n            return x === y;\n        },\n        'askfG': 'string'\n    };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var RTXKMX = gJfkaU['eZpaP']['split']('|');\n        var jELcGr = 0x0;\n        while (!![]) {\n            switch (RTXKMX[jELcGr++]) {\n            case '0':\n                if (!s[y]['length'])\n                    this['_y']++;\n                continue;\n            case '1':\n                var s = this['_s'], y = this['_y'], r;\n                continue;\n            case '2':\n                return f ? r : +r;\n            case '3':\n                if (gJfkaU['QzyEA'](typeof s[y], gJfkaU['askfG']))\n                    s[y] = s[y]['split']('\\x20')['reverse']();\n                continue;\n            case '4':\n                r = s[y]['pop']();\n                continue;\n            }\n            break;\n        }\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction xArray(v) {\n    var UVtdMY = {\n        'YPfCC': function (x, y) {\n            return x + y;\n        },\n        'exHRi': function (x, y) {\n            return x + y;\n        },\n        'VNgLg': 'Array(a[',\n        'gVdik': ']).fill(0).map(x=>{return\\x20',\n        'SzCyL': ';})',\n        'EASql': function (x, y) {\n            return x + y;\n        },\n        'Qurty': function (x, y) {\n            return x + y;\n        },\n        'Ovedl': ']).fill(0).map(x=>',\n        'hxWtv': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = UVtdMY['YPfCC'](UVtdMY['exHRi'](UVtdMY['VNgLg'], --l), UVtdMY['gVdik']) + v + UVtdMY['SzCyL'];\n    while (--l)\n        r = UVtdMY['EASql'](UVtdMY['exHRi'](UVtdMY['EASql'](UVtdMY['Qurty'](UVtdMY['VNgLg'], l), UVtdMY['Ovedl']), r), ')');\n    return UVtdMY['hxWtv'](eval, r);\n}\nconsole['log'](main());\nfunction main() {\n    var n = o['a']();\n    return n * n * n;\n}", "test_cases": [["2", "8"], ["1", "1"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill(0).map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill(0).map(x=>\"+r+\")\";return eval(r);}\n\nconsole.log(main());\nfunction main(){\n  var n=o.a();\n  return n*n*n;\n}", "language": "JavaScript"}
{"filename": "p02935_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var UCIvGk = {\n        'fCOqB': function (callee, param1) {\n            return callee(param1);\n        },\n        'EXOEa': function (callee, param1) {\n            return callee(param1);\n        },\n        'lgHBQ': function (x, y) {\n            return x < y;\n        },\n        'kClBg': function (x, y) {\n            return x - y;\n        },\n        'wROwh': function (x, y) {\n            return x + y;\n        }\n    };\n    var n = UCIvGk['EXOEa'](Number, lines[0x0]);\n    var v = lines[0x1]['split']('\\x20');\n    v = v['map'](function (str) {\n        return UCIvGk['fCOqB'](Number, str);\n    });\n    for (i = 0x0; UCIvGk['lgHBQ'](i, UCIvGk['kClBg'](n, 0x1)); i++) {\n        var min1 = v['sort']((a, b) => a - b)[0x0];\n        v['splice'](0x0, 0x1);\n        var min2 = v[0x0];\n        v['splice'](0x0, 0x1);\n        var a = UCIvGk['wROwh'](min1, min2) / 0x2;\n        if (v['length'] == 0x0) {\n            break;\n        }\n        v['push'](a);\n    }\n    console['log'](a);\n});", "test_cases": [["2\n3 4", "3.5"], ["3\n500 300 200", "375"], ["5\n138 138 138 138 138", "138"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = []\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on('line', (line) => {\n  lines.push(line);\n});\n\nreader.on('close', () => {\n var n = Number(lines[0]);\n var v = lines[1].split(' ');\n v = v.map(function(str) { return Number(str)});\n\n for(i=0; i<n-1; i++){\n   var min1 = v.sort((a, b)=> a - b)[0];\n   v.splice(0,1);\n   var min2 = v[0];\n   v.splice(0,1);\n   var a = (min1 + min2)/2;\n   if(v.length == 0){\n     break;\n   }\n   v.push(a);\n }\n console.log(a);\n});", "language": "JavaScript"}
{"filename": "p02993_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var jCAmIz = {\n        'AgAlm': '3|2|6|4|5|8|1|7|0',\n        'tbDJi': function (x, y) {\n            return x == y;\n        },\n        'DYsGA': 'Bad',\n        'jfaLd': 'Good',\n        'lTHFo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var xgLQXJ = jCAmIz['AgAlm']['split']('|');\n    var OLujNf = 0x0;\n    while (!![]) {\n        switch (xgLQXJ[OLujNf++]) {\n        case '0':\n            if (jCAmIz['tbDJi'](a, b)) {\n                console['log']('Bad');\n            } else if (jCAmIz['tbDJi'](b, c)) {\n                console['log'](jCAmIz['DYsGA']);\n            } else if (c == d) {\n                console['log'](jCAmIz['DYsGA']);\n            } else {\n                console['log'](jCAmIz['jfaLd']);\n            }\n            continue;\n        case '1':\n            var c = jCAmIz['lTHFo'](parseInt, arr[0x2], 0xa);\n            continue;\n        case '2':\n            var tem = input;\n            continue;\n        case '3':\n            input = input['split']('\\x20');\n            continue;\n        case '4':\n            var arr = String(tem)['split']('');\n            continue;\n        case '5':\n            var a = parseInt(arr[0x0], 0xa);\n            continue;\n        case '6':\n            var beforeText = tem;\n            continue;\n        case '7':\n            var d = jCAmIz['lTHFo'](parseInt, arr[0x3], 0xa);\n            continue;\n        case '8':\n            var b = jCAmIz['lTHFo'](parseInt, arr[0x1], 0xa);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3776", "Bad"], ["8080", "Good"], ["1333", "Bad"], ["0024", "Bad"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t\tinput = input.split(\" \");\n\t\t\n\t\tvar tem = input;\n \n  \n\t\n\t//文字列から10進数に変換するときはparseIntを使います\n\t //   var tem = parseInt(input[0], 10);\n  \n  // 分割する数値\nvar beforeText = tem;\n// 数値を文字列に変換して、一文字ずつ分割\nvar arr = String(tem).split('');\n\nvar a = parseInt(arr[0], 10);\nvar b = parseInt(arr[1], 10);\nvar c = parseInt(arr[2], 10);\nvar d = parseInt(arr[3], 10);\n\n//console.log(arr); \n//console.log(a,b,c,d); \n\nif (a == b){console.log('Bad');}\n      else if (b == c){console.log('Bad');}\n             else if (c == d){console.log('Bad');}\n                             else {console.log('Good');}\n                             \n                      \n                             \n        \n\n\n  \n   \t   }    //    1    \n     \n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03011_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const FiHwsm = {\n        'gRzgp': function (callee, param1) {\n            return callee(param1);\n        },\n        'KXrYv': function (callee, param1) {\n            return callee(param1);\n        },\n        'SIfOj': function (x, y) {\n            return x - y;\n        },\n        'aWIFG': function (x, y) {\n            return x + y;\n        }\n    };\n    const P = FiHwsm['gRzgp'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    const Q = Number(input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    const R = FiHwsm['KXrYv'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x2]);\n    const max = Math['max'](P, Q, R);\n    console['log'](FiHwsm['SIfOj'](FiHwsm['aWIFG'](P + Q, R), max));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["1 3 4", "4"], ["3 2 3", "5"]], "original": "'use strict'\n\nfunction Main(input) {\n  const P = Number(input.split(\"\\n\")[0].split(\" \")[0])\n  const Q = Number(input.split(\"\\n\")[0].split(\" \")[1])\n  const R = Number(input.split(\"\\n\")[0].split(\" \")[2])\n\n  const max = Math.max(P, Q, R)\n  console.log(P + Q + R - max)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim())\n", "language": "JavaScript"}
{"filename": "p03077_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const SXAKJT = {\n        'xLFjM': function (callee, param1) {\n            return callee(param1);\n        },\n        'IcsOw': function (callee, param1) {\n            return callee(param1);\n        },\n        'cwfEf': function (x, y) {\n            return x + y;\n        },\n        'MwaUJ': function (x, y) {\n            return x / y;\n        }\n    };\n    const args = input['split']('\\x0a');\n    const N = SXAKJT['xLFjM'](parseInt, args[0x0]);\n    const A = SXAKJT['IcsOw'](parseInt, args[0x1]);\n    const B = SXAKJT['IcsOw'](parseInt, args[0x2]);\n    const C = SXAKJT['xLFjM'](parseInt, args[0x3]);\n    const D = parseInt(args[0x4]);\n    const E = SXAKJT['xLFjM'](parseInt, args[0x5]);\n    const station = [\n        A,\n        B,\n        C,\n        D,\n        E\n    ];\n    let max_traf = Math['min'](...station);\n    console['log'](SXAKJT['cwfEf'](Math['ceil'](SXAKJT['MwaUJ'](N, max_traf)), 0x4));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n3\n2\n4\n3\n5", "7"], ["10\n123\n123\n123\n123\n123", "5"], ["10000000007\n2\n3\n5\n7\n11", "5000000008"]], "original": "\"use strict\";\nfunction main(input) {\n    const args = input.split('\\n');\n\n    const N = parseInt(args[0]);\n    const A = parseInt(args[1]);\n    const B = parseInt(args[2]);\n    const C = parseInt(args[3]);\n    const D = parseInt(args[4]);\n    const E = parseInt(args[5]);\n\n    const station = [A, B, C, D, E];\n    let max_traf = Math.min(...station);\n    console.log(Math.ceil(N / max_traf) + 4);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03086_1", "type": "JavaScript", "obfuscated": "input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlines = input['split']('\\x0a');\nS = lines['shift']();\nmax = 0x0;\ncnt = 0x0;\nfor (i = 0x0; i < S['length']; i++) {\n    if (/[AGCT]/['test'](S[i])) {\n        cnt++;\n    } else {\n        if (max < cnt) {\n            max = cnt;\n        }\n        cnt = 0x0;\n    }\n}\nconsole['log'](max);", "test_cases": [["ATCODER", "3"], ["HATAGAYA", "5"], ["SHINJUKU", "0"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nS = lines.shift()\nmax = 0\ncnt = 0\nfor(i=0;i < S.length; i++) {\n    if (/[AGCT]/.test(S[i])) {\n       cnt++ \n    } else {\n        if (max < cnt) {\n            max = cnt\n        }\n        cnt = 0\n    }\n}\nconsole.log(max)", "language": "JavaScript"}
{"filename": "p03107_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var UZRcuR = {\n        'rBDCQ': '4|3|2|6|5|1|0',\n        'QKoCG': function (x, y) {\n            return x * y;\n        },\n        'Nxtyt': function (x, y) {\n            return x === y;\n        }\n    };\n    var lrHycv = UZRcuR['rBDCQ']['split']('|');\n    var GNEvfM = 0x0;\n    while (!![]) {\n        switch (lrHycv[GNEvfM++]) {\n        case '0':\n            console['log'](UZRcuR['QKoCG'](Math['min'](zero, one), 0x2));\n            continue;\n        case '1':\n            while (input['length']) {\n                if (UZRcuR['Nxtyt'](input['pop'](), '0'))\n                    zero++;\n                else\n                    one++;\n            }\n            continue;\n        case '2':\n            var height = input['length'];\n            continue;\n        case '3':\n            input = input['replace'](/\\s+/, '')['split']('');\n            continue;\n        case '4':\n            input = input['trim']();\n            continue;\n        case '5':\n            var zero = 0x0;\n            continue;\n        case '6':\n            var one = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["0011", "4"], ["11011010001011", "12"], ["0", "0"]], "original": "\"use strict\"\nfunction Main(input){\n  input=input.trim();\n  input=input.replace(/\\s+/,\"\").split(\"\");\n  var height=input.length;\n  var one=0;\n  var zero=0;\n  while(input.length){\n    if(input.pop()===\"0\")zero++;\n    else one++;\n  }\n  console.log(Math.min(zero,one)*2);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03126_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var iVODka = { 'lJHsb': '3|2|0|1|5|7|4|6' };\n    var PByHcQ = iVODka['lJHsb']['split']('|');\n    var NIrHTh = 0x0;\n    while (!![]) {\n        switch (PByHcQ[NIrHTh++]) {\n        case '0':\n            input['shift']();\n            continue;\n        case '1':\n            var arr = new Array(0x23)['fill'](0x0);\n            continue;\n        case '2':\n            var m = input[0x0]['split']('\\x20')['map'](Number);\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            arr['forEach'](function (val) {\n                if (val == m[0x0])\n                    ans++;\n            });\n            continue;\n        case '5':\n            input['forEach'](function (val) {\n                var mem = val['split']('\\x20')['map'](Number);\n                mem['shift']();\n                mem['forEach'](function (p) {\n                    arr[p]++;\n                });\n            });\n            continue;\n        case '6':\n            console['log'](ans);\n            continue;\n        case '7':\n            var ans = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3 4\n2 1 3\n3 1 2 3\n2 3 2", "1"], ["5 5\n4 2 3 4 5\n4 1 3 4 5\n4 1 2 4 5\n4 1 2 3 5\n4 1 2 3 4", "0"], ["1 30\n3 5 10 30", "3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var m = input[0].split(\" \").map(Number);\n    input.shift();\n    var arr = new Array(35).fill(0);\n    input.forEach(function(val){\n        var mem = val.split(\" \").map(Number);\n        mem.shift();\n        mem.forEach(function(p){\n            arr[p]++;\n        });\n    })\n    var ans = 0;\n    arr.forEach(function(val){\n      if(val==m[0]) ans++;  \n    })\n    console.log(ans);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03207_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const AvgOso = {\n        'XFxfn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'Yhzgn': function (x, y) {\n            return x / y;\n        },\n        'yqtRX': function (x, y) {\n            return x < y;\n        }\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const N = AvgOso['XFxfn'](parseInt, args[0x0][0x0], 0xa);\n    const p = args['slice'](0x1, N + 0x1)['map'](arg => parseInt(arg[0x0], 0xa))['sort']((a, b) => b - a);\n    let sum = AvgOso['Yhzgn'](p[0x0], 0x2);\n    for (let i = 0x1; AvgOso['yqtRX'](i, N); i++) {\n        sum += p[i];\n    }\n    console['log'](sum);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n4980\n7980\n6980", "15950"], ["4\n4320\n4320\n4320\n4320", "15120"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst N = parseInt(args[0][0], 10)\n\tconst p = args.slice(1, N + 1).map(arg => parseInt(arg[0], 10)).sort((a, b) => b - a)\n\tlet sum = p[0] / 2\n\n\tfor (let i = 1; i < N; i++) {\n\t\tsum += p[i]\n\t}\n\n\tconsole.log(sum)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03220_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var UxcjPO = {\n        'PDuyh': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, v = rest[0x0];\n    for (var i = 0x1; UxcjPO['PDuyh'](i, rest['length']); i++)\n        if (UxcjPO['PDuyh'](rest[i], v))\n            v = rest[i];\n    return v;\n}\nfunction max() {\n    var wfrUHL = {\n        'zXeHm': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, v = rest[0x0];\n    for (var i = 0x1; wfrUHL['zXeHm'](i, rest['length']); i++)\n        if (rest[i] > v)\n            v = rest[i];\n    return v;\n}\nfunction gcd() {\n    var QSHJUe = {\n        'kfnUC': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, v = rest[0x0], temp = (a, b) => b ? temp(b, a % b) : a;\n    for (var i = 0x1; QSHJUe['kfnUC'](i, rest['length']); i++)\n        v = temp(v, rest[i]);\n    return v;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var ELRuTT = {\n        'waZye': function (callee, param1) {\n            return callee(param1);\n        },\n        'FEnJe': function (x, y) {\n            return x < y;\n        },\n        'JosHe': function (callee, param1) {\n            return callee(param1);\n        },\n        'IMpIL': function (x, y) {\n            return x - y;\n        },\n        'ibnKW': function (x, y) {\n            return x - y;\n        },\n        'DklZG': function (x, y) {\n            return x < y;\n        },\n        'ELCbS': function (x, y) {\n            return x * y;\n        },\n        'TXrAE': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var uHcVhb = '0|1|7|8|6|9|5|4|2|3'['split']('|');\n    var YqhkSG = 0x0;\n    while (!![]) {\n        switch (uHcVhb[YqhkSG++]) {\n        case '0':\n            var input = input['split']('\\x0a');\n            continue;\n        case '1':\n            var n = ELRuTT['waZye'](toInt, input[0x0]);\n            continue;\n        case '2':\n            for (var i = 0x1; ELRuTT['FEnJe'](i, n); i++) {\n                y = ELRuTT['JosHe'](abs, ELRuTT['IMpIL'](ELRuTT['ibnKW'](t, a), 0.006 * hs[i]));\n                if (ELRuTT['DklZG'](y, x)) {\n                    ans = i + 0x1;\n                    x = y;\n                }\n            }\n            continue;\n        case '3':\n            console['log'](ans);\n            continue;\n        case '4':\n            var x = ELRuTT['waZye'](abs, t - a - ELRuTT['ELCbS'](0.006, hs[0x0])), y;\n            continue;\n        case '5':\n            var ans = 0x1;\n            continue;\n        case '6':\n            var t = ta[0x0];\n            continue;\n        case '7':\n            var ta = ELRuTT['TXrAE'](toIntArr, input[0x1]['split']('\\x20'));\n            continue;\n        case '8':\n            var hs = ELRuTT['JosHe'](toIntArr, input[0x2]['split']('\\x20'));\n            continue;\n        case '9':\n            var a = ta[0x1];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n12 5\n1000 2000", "1"], ["3\n21 -11\n81234 94124 52141", "3"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest=arguments,v=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<v)v=rest[i];return v}\nfunction max(){var rest=arguments,v=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>v)v=rest[i];return v}\nfunction gcd(){var rest=arguments,v=rest[0],temp=(a,b)=>b?temp(b,a%b):a;for(var i=1;i<rest.length;i++)v=temp(v,rest[i]);return v}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar ta = toIntArr(input[1].split(' '));\n\tvar hs = toIntArr(input[2].split(' '));\n\tvar t = ta[0];\n\tvar a = ta[1];\n\n\tvar ans = 1;\n\tvar x =abs(t-a-0.006*hs[0]) ,y;\n\tfor(var i = 1; i < n; i++){\n\t\ty = abs(t-a-0.006*hs[i]);\n\t\t//console.log(i,x,y)\n\t\tif(y<x){\n\t\t\tans = i+1;\n\t\t\tx = y;\n\t\t}\n\t}\n\n\tconsole.log(ans);\n\n}\n\n", "language": "JavaScript"}
{"filename": "p03309_1", "type": "JavaScript", "obfuscated": "function myin() {\n    var BgREqs = {\n        'vxwWm': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return BgREqs['vxwWm'](require, 'fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myconv(i, no) {\n    var ZiLCDL = {\n        'AMIgh': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return ZiLCDL['AMIgh'](parseInt, i);\n    case 0x2:\n        return i['split']('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i['split']('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i['split']('\\x0a')['map'](a => Number(a));\n    case 0x6:\n        return i['split']('');\n    case 0x7:\n        return i['split']('')['map'](a => Number(a));\n    }\n}\nfunction Main(input) {\n    var ItXjtU = {\n        'KeTWA': function (x, y) {\n            return x - y;\n        },\n        'oYlxb': function (callee, param1) {\n            return callee(param1);\n        },\n        'ZaNMg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HwKPd': function (x, y) {\n            return x < y;\n        },\n        'Vsjlj': function (x, y) {\n            return x - y;\n        },\n        'MSxiq': function (x, y) {\n            return x + y;\n        },\n        'Ooclg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'cWhYm': function (x, y) {\n            return x < y;\n        },\n        'uMvWo': function (x, y) {\n            return x + y;\n        }\n    };\n    var ujibZW = '0|9|2|6|4|5|3|8|7|10|1'['split']('|');\n    var BlsGJN = 0x0;\n    while (!![]) {\n        switch (ujibZW[BlsGJN++]) {\n        case '0':\n            var KGjuGa = {\n                'eAoKP': function (x, y) {\n                    return ItXjtU['KeTWA'](x, y);\n                }\n            };\n            continue;\n        case '1':\n            ItXjtU['oYlxb'](myout, output);\n            continue;\n        case '2':\n            var N = ItXjtU['ZaNMg'](myconv, input[0x0], 0x1);\n            continue;\n        case '3':\n            tmpList['sort'](function (a, b) {\n                return KGjuGa['eAoKP'](a, b);\n            });\n            continue;\n        case '4':\n            var tmpList = [];\n            continue;\n        case '5':\n            for (var i = 0x0; ItXjtU['HwKPd'](i, N); i++) {\n                tmpList['push'](ItXjtU['Vsjlj'](list[i], ItXjtU['MSxiq'](i, 0x1)));\n            }\n            continue;\n        case '6':\n            var list = ItXjtU['ZaNMg'](myconv, input[0x1], 0x4);\n            continue;\n        case '7':\n            var output = 0x0;\n            continue;\n        case '8':\n            var b = tmpList[ItXjtU['Ooclg'](myconv, tmpList['length'] / 0x2, 0x1)];\n            continue;\n        case '9':\n            input = ItXjtU['ZaNMg'](myconv, input, 0x3);\n            continue;\n        case '10':\n            for (var i = 0x0; ItXjtU['cWhYm'](i, N); i++) {\n                output += Math['abs'](ItXjtU['KeTWA'](list[i], b + ItXjtU['uMvWo'](i, 0x1)));\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(myin());", "test_cases": [["5\n2 2 3 5 5", "2"], ["9\n1 2 3 4 5 6 7 8 9", "0"], ["6\n6 5 4 3 2 1", "18"], ["7\n1 1 1 1 2 3 4", "6"]], "original": "function myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  var N = myconv(input[0],1);\n  var list = myconv(input[1],4);\n  \n  var tmpList = [];\n  for(var i = 0; i < N; i++){\n    tmpList.push(list[i] - (i + 1));\n  }\n  \n  tmpList.sort(function(a,b){\n  \treturn a-b;\n  });\n  \n  var b = tmpList[myconv(tmpList.length / 2,1)];\n  var output = 0;\n  for(var i = 0; i < N; i++){\n    output += Math.abs(list[i] - (b + (i + 1)));\n  }\n  myout(output);\n}\n\nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03719_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const KbJXaW = {\n        'khrYK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'vjrsb': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'cJWGY': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'fzLuI': function (x, y) {\n            return x >= y;\n        },\n        'ONJcr': function (x, y) {\n            return x <= y;\n        },\n        'uLdsx': 'Yes'\n    };\n    const args = input['trim']()['split']('\\x20');\n    const a = KbJXaW['khrYK'](parseInt, args[0x0], 0xa);\n    const b = KbJXaW['vjrsb'](parseInt, args[0x1], 0xa);\n    const c = KbJXaW['cJWGY'](parseInt, args[0x2], 0xa);\n    if (KbJXaW['fzLuI'](c, a) && KbJXaW['ONJcr'](c, b))\n        console['log'](KbJXaW['uLdsx']);\n    else\n        console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 3 2", "Yes"], ["6 5 4", "No"], ["2 2 2", "Yes"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.trim().split(' ')\n\tconst a = parseInt(args[0], 10)\n\tconst b = parseInt(args[1], 10)\n\tconst c = parseInt(args[2], 10)\n\tif (c >= a && c <= b) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03852_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const sBUoYb = {\n        'mAMql': 'aeiou',\n        'Hzhry': 'consonant'\n    };\n    c = input;\n    const vowel = sBUoYb['mAMql'];\n    console['log'](vowel['indexOf'](c) !== -0x1 ? 'vowel' : sBUoYb['Hzhry']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["a", "vowel"], ["z", "consonant"], ["s", "consonant"]], "original": "function Main(input) {\n\tc = input;\n\tconst vowel = 'aeiou';\n  \tconsole.log(vowel.indexOf(c)!==-1 ? \"vowel\" : \"consonant\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02573_1", "type": "JavaScript", "obfuscated": "const processData = lines => {\n    const fHiXgo = {\n        'Qrqhq': function (x, y) {\n            return x + y;\n        }\n    };\n    const [n, m] = lines[0x0]['split']('\\x20')['map'](x => +x);\n    let friendships = {};\n    for (let i = 0x0; i < m; i++) {\n        const f = lines[fHiXgo['Qrqhq'](i, 0x1)]['split']('\\x20')['map'](x => +x);\n        let friendItem = friendships[f[0x0]] || friendships[f[0x1]] || {};\n        friendships[f[0x0]] = friendItem;\n        friendships[f[0x1]] = friendItem;\n        friendItem[f[0x0]] = !![];\n        friendItem[f[0x1]] = !![];\n    }\n    let maxCount = 0x1;\n    for (let p in friendships) {\n        let count = 0x0;\n        for (let t2 in friendships[p]) {\n            count++;\n        }\n        maxCount = Math['max'](maxCount, count);\n    }\n    console['log'](maxCount);\n};\nlet i = '';\nprocess['stdin']['on']('data', c => i += c);\nprocess['stdin']['on']('end', () => {\n    const JlKSNK = {\n        'tVSna': function (callee, param1) {\n            return callee(param1);\n        },\n        'JvJBE': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const {EOL: EOL} = JlKSNK['tVSna'](require, 'os');\n    const lines = i['split'](EOL);\n    JlKSNK['JvJBE'](processData, lines);\n});", "test_cases": [["5 3\n1 2\n3 4\n5 1", "3"], ["4 10\n1 2\n2 1\n1 2\n2 1\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4", "4"], ["10 4\n3 1\n4 1\n5 9\n2 6", "3"]], "original": "const processData = (lines) => {\n    const [n, m] = lines[0].split(' ').map( x => +x)\n    let friendships = {}\n    for (let i=0; i<m; i++) {\n        const f = lines[i+1].split(' ').map(x => +x)\n        let friendItem = friendships[f[0]] || friendships[f[1]] || {}\n        friendships[f[0]] = friendItem\n        friendships[f[1]] = friendItem\n\n        friendItem[f[0]] = true\n        friendItem[f[1]] = true\n    }\n    \n    let maxCount = 1\n    for (let p in friendships) {\n        let count = 0\n        for (let t2 in friendships[p]) {\n            count++\n        }\n        maxCount = Math.max(maxCount, count)\n    }\n\n    console.log(maxCount)\n}\n\nlet i = ''\nprocess.stdin.on('data', c => i += c)\nprocess.stdin.on('end', () => {\n    const {EOL} = require('os')\n    const lines = i.split(EOL) /*your input text, split by lines*/\n    processData(lines)\n})\n", "language": "JavaScript"}
{"filename": "p02594_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const fJDYOb = {\n        'lgVFW': function (callee, param1) {\n            return callee(param1);\n        },\n        'fAnxL': function (x, y) {\n            return x >= y;\n        },\n        'nhCrv': 'Yes'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = fJDYOb['lgVFW'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    console['log'](fJDYOb['fAnxL'](N, 0x1e) ? fJDYOb['nhCrv'] : 'No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["25", "No"], ["30", "Yes"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n\n    console.log(N >= 30 ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02601_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const MHONlB = {\n        'MvQQP': function (callee, param1) {\n            return callee(param1);\n        },\n        'RrMOJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'MVMgN': function (x, y) {\n            return x < y;\n        },\n        'lunrg': function (x, y) {\n            return x >= y;\n        },\n        'WEybE': function (x, y) {\n            return x * y;\n        },\n        'KDIQR': function (x, y) {\n            return x >= y;\n        },\n        'umIud': function (x, y) {\n            return x < y;\n        },\n        'FeJmW': function (x, y) {\n            return x < y;\n        },\n        'ymhZV': 'Yes'\n    };\n    input = input['trim']()['split']('\\x0a');\n    const line_one = input[0x0]['split']('\\x20');\n    const K = MHONlB['MvQQP'](parseInt, input[0x1]);\n    let line_one_arr = [];\n    for (let i in line_one) {\n        line_one_arr['push'](MHONlB['RrMOJ'](parseInt, line_one[i]));\n    }\n    for (let i = 0x0; MHONlB['MVMgN'](i, K); i++) {\n        if (MHONlB['lunrg'](line_one_arr[0x0], line_one_arr[0x1])) {\n            line_one_arr[0x1] = MHONlB['WEybE'](line_one_arr[0x1], 0x2);\n            continue;\n        }\n        if (MHONlB['KDIQR'](line_one_arr[0x1], line_one_arr[0x2])) {\n            line_one_arr[0x2] = line_one_arr[0x2] * 0x2;\n        }\n    }\n    if (MHONlB['umIud'](line_one_arr[0x0], line_one_arr[0x1]) && MHONlB['FeJmW'](line_one_arr[0x1], line_one_arr[0x2])) {\n        console['log'](MHONlB['ymhZV']);\n    } else {\n        console['log']('No');\n    }\n}\nfunction numberSort(array) {\n    array['sort'](f);\n    return array;\n}\nvar f = function (a, b) {\n    const RUtlHf = {\n        'VxyJG': function (x, y) {\n            return x - y;\n        }\n    };\n    return RUtlHf['VxyJG'](a, b);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["7 2 5\n3", "Yes"], ["7 4 2\n3", "No"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\"\\n\");\n  const line_one = input[0].split(\" \");\n  const K = parseInt(input[1]);\n  let line_one_arr = [];\n\n  for (let i in line_one) {\n    line_one_arr.push(parseInt(line_one[i]));\n  }\n\n  for (let i = 0; i < K; i++) {\n    if (line_one_arr[0] >= line_one_arr[1]) {\n      line_one_arr[1] = line_one_arr[1] * 2;\n      continue;\n    }\n    if (line_one_arr[1] >= line_one_arr[2]) {\n      line_one_arr[2] = line_one_arr[2] * 2;\n    }\n  }\n\n  if (line_one_arr[0] < line_one_arr[1] && line_one_arr[1] < line_one_arr[2]) {\n    console.log(\"Yes\");\n  } else {\n    console.log(\"No\");\n  }\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02647_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var AzLwnz = {\n        'LCxmR': function (x, y) {\n            return x < y;\n        },\n        'ZIxMK': '4|5|1|3|0|2',\n        'wsgIq': function (x, y) {\n            return x > y;\n        },\n        'ywqUH': function (x, y) {\n            return x - y;\n        },\n        'gQDgG': function (x, y) {\n            return x + y;\n        },\n        'tAkaC': function (x, y) {\n            return x <= y;\n        },\n        'SaxIx': function (x, y) {\n            return x - y;\n        },\n        'ZPPcK': function (x, y) {\n            return x < y;\n        },\n        'NCuGO': function (x, y) {\n            return x != y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var mem = input[0x0]['split']('\\x20');\n    var arr = input[0x1]['split']('\\x20')['map'](Number);\n    for (var p = 0x0; p < mem[0x1]; p++) {\n        var tmp = new Array(arr['length'])['fill'](0x0);\n        for (var i = 0x0; AzLwnz['LCxmR'](i, arr['length']); i++) {\n            var mYRvla = AzLwnz['ZIxMK']['split']('|');\n            var XxtmAS = 0x0;\n            while (!![]) {\n                switch (mYRvla[XxtmAS++]) {\n                case '0':\n                    if (AzLwnz['wsgIq'](max, AzLwnz['ywqUH'](arr['length'], 0x1)))\n                        max = arr['length'] - 0x1;\n                    continue;\n                case '1':\n                    var max = AzLwnz['gQDgG'](i, n);\n                    continue;\n                case '2':\n                    for (var j = min; AzLwnz['tAkaC'](j, max); j++) {\n                        tmp[j]++;\n                    }\n                    continue;\n                case '3':\n                    if (AzLwnz['LCxmR'](min, 0x0))\n                        min = 0x0;\n                    continue;\n                case '4':\n                    var n = arr[i];\n                    continue;\n                case '5':\n                    var min = AzLwnz['SaxIx'](i, n);\n                    continue;\n                }\n                break;\n            }\n        }\n        var flag = !![];\n        for (var i = 0x0; AzLwnz['ZPPcK'](i, arr['length']); i++) {\n            if (AzLwnz['NCuGO'](arr[i], tmp[i]))\n                flag = ![];\n            arr[i] = tmp[i];\n        }\n        if (flag)\n            break;\n    }\n    console['log'](arr['join']('\\x20'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["5 1\n1 0 0 1 0", "1 2 2 1 2"], ["5 2\n1 0 0 1 0", "3 3 4 4 3"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var mem = input[0].split(\" \");\n    var arr = input[1].split(\" \").map(Number);\n    for(var p=0;p<mem[1];p++){\n        var tmp = new Array(arr.length).fill(0);\n        for (var i = 0; i < arr.length; i++) {\n            var n = arr[i];\n          //  console.log(i,n)\n            var min = i - n;\n            var max = i + n;\n            if (min < 0) min = 0;\n            if (max > arr.length-1) max = arr.length-1;\n            for (var j = min; j <= max; j++) {\n                tmp[j]++;\n            }\n          //  console.log(max,min,tmp)\n        }\n      //  console.log(arr)\n        var flag = true;\n      //  console.log(arr.length)\n        for (var i = 0; i < arr.length; i++) {\n            if(arr[i]!=tmp[i]) flag = false;\n            arr[i] = tmp[i];\n        }\n     //   console.log(arr.join(\" \"));\n        if(flag) break;\n    }\n    console.log(arr.join(\" \"));\n} Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p02681_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const wauguV = {\n        'bBlFf': 'Yes',\n        'VwbOd': function (x, y) {\n            return x === y;\n        },\n        'YyIcW': function (x, y) {\n            return x === y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a');\n    const S = tmp[0x0];\n    const T = tmp[0x1];\n    let result = wauguV['bBlFf'];\n    const tmpStr = T['replace'](S, '');\n    if (wauguV['VwbOd'](T['slice'](-0x1), tmpStr) && wauguV['YyIcW'](tmpStr['length'], 0x1)) {\n        result = wauguV['bBlFf'];\n    } else {\n        result = 'No';\n    }\n    console['log'](result);\n    return result;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["chokudai\nchokudaiz", "Yes"], ["snuke\nsnekee", "No"], ["a\naa", "Yes"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const S = tmp[0]\n  const T = tmp[1]\n\n  let result = 'Yes'\n\n  const tmpStr = T.replace(S, '')\n\n  if (T.slice(-1) === tmpStr && tmpStr.length === 1) {\n    result = 'Yes'\n  } else {\n    result = 'No'\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02761_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var sNnSKk = {\n        'GvDFi': '4|11|0|9|13|6|12|2|8|14|5|7|10|1|3',\n        'hpArP': function (callee, param1) {\n            return callee(param1);\n        },\n        'lIuls': function (x, y) {\n            return x == y;\n        },\n        'kSIlt': function (x, y) {\n            return x - y;\n        },\n        'tXrFS': function (x, y) {\n            return x - y;\n        },\n        'ZnHaf': '1$1'\n    };\n    var gWTekw = sNnSKk['GvDFi']['split']('|');\n    var khOUlT = 0x0;\n    while (!![]) {\n        switch (gWTekw[khOUlT++]) {\n        case '0':\n            tmp = input['shift']();\n            continue;\n        case '1':\n            A = sNnSKk['hpArP'](parseInt, A);\n            continue;\n        case '2':\n            flag = !![];\n            continue;\n        case '3':\n            if (flag && sNnSKk['lIuls']((A + '')['length'], N)) {\n                console['log'](A);\n            } else {\n                console['log'](-0x1);\n            }\n            continue;\n        case '4':\n            var NphRfX = {\n                'lsoAi': function (x, y) {\n                    return sNnSKk['kSIlt'](x, y);\n                },\n                'OUyPU': function (x, y) {\n                    return sNnSKk['kSIlt'](x, y);\n                },\n                'JCFVk': function (x, y) {\n                    return sNnSKk['tXrFS'](x, y);\n                }\n            };\n            continue;\n        case '5':\n            A = A['replace'](/^nn([0-9])/, '10$1');\n            continue;\n        case '6':\n            S = input;\n            continue;\n        case '7':\n            A = A['replace'](/^n([0-9])/, sNnSKk['ZnHaf']);\n            continue;\n        case '8':\n            S['forEach'](v => {\n                t = v['split']('\\x20')['map'](v => parseInt(v));\n                if (A[NphRfX['lsoAi'](t[0x0], 0x1)] != 'n' && A[NphRfX['OUyPU'](t[0x0], 0x1)] != t[0x1])\n                    flag = ![];\n                A[NphRfX['JCFVk'](t[0x0], 0x1)] = t[0x1];\n            });\n            continue;\n        case '9':\n            N = parseInt(tmp['split']('\\x20')[0x0]);\n            continue;\n        case '10':\n            A = A['replace'](/n/g, '0');\n            continue;\n        case '11':\n            input = input['split']('\\x0a');\n            continue;\n        case '12':\n            A = 'n'['repeat'](N)['split']('');\n            continue;\n        case '13':\n            M = tmp['split']('\\x20')[0x1];\n            continue;\n        case '14':\n            A = A['join']('');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n1 7\n3 2\n1 7", "702"], ["3 2\n2 1\n2 3", "-1"], ["3 1\n1 0", "-1"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  tmp = input.shift();\n  N = parseInt(tmp.split(\" \")[0]);\n  M = tmp.split(\" \")[1];\n  S = input;\n  A = \"n\".repeat(N).split(\"\");\n  flag = true;\n  S.forEach(v => {\n    t = v.split(\" \").map(v => parseInt(v));\n    if (A[t[0] - 1] != \"n\" && A[t[0] - 1] != t[1]) flag = false;\n    A[t[0] - 1] = t[1];\n  });\n\n  A = A.join(\"\");\n  A = A.replace(/^nn([0-9])/, \"10$1\");\n  A = A.replace(/^n([0-9])/, \"1$1\");\n  A = A.replace(/n/g, \"0\");\n  A = parseInt(A);\n  if (flag && (A + \"\").length == N) {\n    console.log(A);\n  } else {\n    console.log(-1);\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02885_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var EZgpqi = {\n        'Hycah': '2|1|4|3|0',\n        'khLzD': function (x, y) {\n            return x * y;\n        },\n        'drlEv': function (x, y) {\n            return x <= y;\n        }\n    };\n    var BihBJi = EZgpqi['Hycah']['split']('|');\n    var TciTTX = 0x0;\n    while (!![]) {\n        switch (BihBJi[TciTTX++]) {\n        case '0':\n            console['log'](ans);\n            continue;\n        case '1':\n            var nums = EZgpqi['khLzD'](args[0x1], 0x2);\n            continue;\n        case '2':\n            var args = input['trim']()['split']('\\x20')['map'](Number);\n            continue;\n        case '3':\n            if (EZgpqi['drlEv'](nums, args[0x0])) {\n                ans = args[0x0] - nums;\n            }\n            continue;\n        case '4':\n            var ans = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["12 4", "4"], ["20 15", "0"], ["20 30", "0"]], "original": "function Main(input) {\n    var args = input.trim().split(' ').map(Number);\n    var nums = args[1] * 2\n    var ans = 0;\n    if(nums <= args[0]) {\n      ans = args[0] - nums;\n    }\n    console.log(ans);\n }\n \n/* var input = `12 11`;\nMain(input);\n */ \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02899_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var aNWjle = {\n        'lHyrR': '3|5|2|1|6|8|7|0|4',\n        'nDSRD': function (x, y) {\n            return x < y;\n        },\n        'Ldbad': function (x, y) {\n            return x < y;\n        },\n        'LFwnJ': function (x, y) {\n            return x + y;\n        }\n    };\n    var aYnTKD = aNWjle['lHyrR']['split']('|');\n    var fTCTmg = 0x0;\n    while (!![]) {\n        switch (aYnTKD[fTCTmg++]) {\n        case '0':\n            for (i = 0x0; aNWjle['nDSRD'](i, N['length']); i++) {\n                ans += N[i][0x1];\n                ans += '\\x20';\n            }\n            continue;\n        case '1':\n            var arr = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            var N = [];\n            continue;\n        case '3':\n            var smuzst = {\n                'OLiiS': function (x, y) {\n                    return x - y;\n                }\n            };\n            continue;\n        case '4':\n            console['log'](ans['trim']());\n            continue;\n        case '5':\n            input = input['split']('\\x0a');\n            continue;\n        case '6':\n            for (var i = 0x0; aNWjle['Ldbad'](i, arr['length']); i++) {\n                N['push']([\n                    arr[i],\n                    aNWjle['LFwnJ'](i, 0x1)\n                ]);\n            }\n            continue;\n        case '7':\n            var ans = '';\n            continue;\n        case '8':\n            N = N['sort'](function (a, b) {\n                return smuzst['OLiiS'](a[0x0], b[0x0]);\n            });\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n2 3 1", "3 1 2"], ["5\n1 2 3 4 5", "1 2 3 4 5"], ["8\n8 2 7 3 4 5 6 1", "8 2 4 5 6 7 3 1"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var N = [];\n    var arr = input[1].split(\" \").map(Number);\n    for(var i=0;i<arr.length;i++){\n        N.push([arr[i],i+1]);\n    }\n    N = N.sort(function(a,b){return a[0]-b[0]});\n    var ans = \"\";\n    for(i=0;i<N.length;i++){\n        ans+=N[i][1]\n        ans+=\" \";\n    }\n   // console.log(N)\n    console.log(ans.trim());\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p02916_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var dpENFF = {\n        'fHrbs': '2|5|4|3|1|0|7|6',\n        'Faxii': function (callee, param1) {\n            return callee(param1);\n        },\n        'RrQQh': function (x, y) {\n            return x === y;\n        },\n        'xlPhY': function (x, y) {\n            return x - y;\n        }\n    };\n    var XseYbc = dpENFF['fHrbs']['split']('|');\n    var SvibUD = 0x0;\n    while (!![]) {\n        switch (XseYbc[SvibUD++]) {\n        case '0':\n            var count = 0x0;\n            continue;\n        case '1':\n            c = input[0x3]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            b = input[0x2]['split']('\\x20')['map'](Number);\n            continue;\n        case '4':\n            a = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '5':\n            n = dpENFF['Faxii'](Number, input[0x0]['split']('\\x20'));\n            continue;\n        case '6':\n            console['log'](count);\n            continue;\n        case '7':\n            for (var i = 0x0; i < n; i++) {\n                count += b[a[i] - 0x1];\n                if (dpENFF['RrQQh'](a[i], a[i - 0x1] + 0x1)) {\n                    count += c[dpENFF['xlPhY'](a[i], 0x2)];\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n3 1 2\n2 5 4\n3 6", "14"], ["4\n2 3 4 1\n13 5 8 24\n45 9 15", "74"], ["2\n1 2\n50 50\n50", "150"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n  \tn = Number(input[0].split(\" \"));\n    a = input[1].split(\" \").map(Number);\n    b = input[2].split(\" \").map(Number);\n    c = input[3].split(\" \").map(Number);\n  \tvar count = 0;\n  \tfor(var i=0; i<n; i++){\n      count += b[a[i]-1];\n      if(a[i] === a[i-1]+1){\n      \tcount += c[a[i]-2];\n      }\n    }\n  console.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02945_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const cyQuUC = {\n        'IYpLu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'LaDsh': function (x, y) {\n            return x + y;\n        },\n        'yZOGo': function (x, y) {\n            return x - y;\n        },\n        'kCDKM': function (x, y) {\n            return x * y;\n        }\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const A = parseInt(args[0x0][0x0], 0xa);\n    const B = cyQuUC['IYpLu'](parseInt, args[0x0][0x1], 0xa);\n    console['log'](cyQuUC['LaDsh'](Math['max'](A + B, cyQuUC['yZOGo'](A, B), cyQuUC['kCDKM'](A, B)), 0x0));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["-13 3", "-10"], ["1 -33", "34"], ["13 3", "39"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst A = parseInt(args[0][0], 10)\n\tconst B = parseInt(args[0][1], 10)\n\tconsole.log(Math.max(A + B, A - B, A * B) + 0)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02989_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const jIjVXP = {\n        'qaaWw': function (x, y) {\n            return x - y;\n        },\n        'fgMfu': function (x, y) {\n            return x / y;\n        },\n        'qNWtt': function (x, y) {\n            return x / y;\n        }\n    };\n    var d = input[0x1]['split']('\\x20')['map'](p => parseInt(p, 0xa))['sort']((p, q) => p > q ? 0x1 : -0x1);\n    console['log'](jIjVXP['qaaWw'](d[jIjVXP['fgMfu'](d['length'], 0x2)], d[jIjVXP['qaaWw'](jIjVXP['qNWtt'](d['length'], 0x2), 0x1)]));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["6\n9 1 4 4 6 7", "2"], ["8\n9 1 14 5 5 4 4 14", "0"], ["14\n99592 10342 29105 78532 83018 11639 92015 77204 30914 21912 34519 80835 100000 1", "42685"]], "original": "const main = input => {\n    var d = input[1].split(' ').map(p => parseInt(p, 10)).sort((p,q) => p>q?1:-1);\n    console.log(d[d.length/2]-d[d.length/2-1]);   \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));\n", "language": "JavaScript"}
{"filename": "p02999_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const FlMKiK = {\n        'gKRmi': function (callee, param1) {\n            return callee(param1);\n        },\n        'HsBMB': function (x, y) {\n            return x < y;\n        }\n    };\n    var result;\n    const X = FlMKiK['gKRmi'](parseInt, input[0x0]);\n    const A = FlMKiK['gKRmi'](parseInt, input[0x1]);\n    result = FlMKiK['HsBMB'](X, A) ? 0x0 : 0xa;\n    console['log'](result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/\\n|\\s/));", "test_cases": [["3 5", "0"], ["7 5", "10"], ["6 6", "10"]], "original": "function Main(input) {\n    var result;\n    const X = parseInt(input[0])\n    const A = parseInt(input[1])\n    \n    result = X < A ? 0 : 10;\n    console.log(result);\n}\n\n// 1行入力の場合\n// Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n\n// 改行で分割\n// Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n/));\n\n// 改行・空白で分割\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n|\\s/));", "language": "JavaScript"}
{"filename": "p03031_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var dUHnSp = {\n        'TjMLd': function (x, y) {\n            return x * y;\n        },\n        'LEkHn': function (x, y) {\n            return x - y;\n        },\n        'qwtVF': function (x, y) {\n            return x < y;\n        },\n        'ZgXTG': function (x, y) {\n            return x << y;\n        },\n        'gEBTT': function (x, y) {\n            return x * y;\n        },\n        'QsEuC': function (x, y) {\n            return x != y;\n        }\n    };\n    lines = input['split']('\\x0a');\n    lines = input['split']('\\x0a');\n    n = dUHnSp['TjMLd'](lines[0x0]['split']('\\x20')[0x0], 0x1);\n    m = lines[0x0]['split']('\\x20')[0x1] * 0x1;\n    ps = lines[dUHnSp['LEkHn'](lines['length'], 0x1)]['split']('\\x20');\n    lines = lines['slice'](0x1, -0x1)['map'](function (l) {\n        return l['split']('\\x20')['slice'](0x1);\n    });\n    ans = 0x0;\n    for (i = 0x0; dUHnSp['qwtVF'](i, dUHnSp['ZgXTG'](0x1, n)); i++) {\n        s = ('0000000000' + i['toString'](0x2))['slice'](dUHnSp['gEBTT'](-0x1, n));\n        flg = !![];\n        for (j = 0x0; j < lines['length']; j++) {\n            on = 0x0;\n            if (!flg)\n                break;\n            for (k = 0x0; dUHnSp['qwtVF'](k, lines[j]['length']); k++) {\n                on += s[dUHnSp['LEkHn'](n, lines[j][k])] * 0x1;\n            }\n            if (dUHnSp['QsEuC'](on % 0x2, ps[j])) {\n                flg = ![];\n            }\n        }\n        if (flg) {\n            ans++;\n        }\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2\n2 1 2\n1 2\n0 1", "1"], ["2 3\n2 1 2\n1 1\n1 2\n0 0 1", "0"], ["5 2\n3 1 2 5\n2 2 3\n1 0", "8"]], "original": "function Main(input) {\n  lines = input.split(\"\\n\")\n  lines = input.split(\"\\n\")\n  n = lines[0].split(\" \")[0] * 1\n  m = lines[0].split(\" \")[1] * 1\n  ps = lines[lines.length - 1].split(\" \")\n  lines = lines.slice(1, -1).map(function(l) { return l.split(' ').slice(1) })\n  ans = 0\n  for (i = 0; i < (1 << n);i++) {\n    s = (\"0000000000\" + i.toString(2)).slice(-1 * n)\n    flg = true\n    for(j = 0; j < lines.length; j++) {\n      on = 0\n      if (!flg) break;\n      for(k = 0; k < lines[j].length; k++) {\n        on += s[n - lines[j][k]] * 1\n      }\n      if (on % 2 != ps[j]) {\n        flg = false\n      }\n    }\n    if (flg) {\n      ans++\n    }\n  }\n  console.log(ans) \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03061_1", "type": "JavaScript", "obfuscated": "function gcd(arr) {\n    var zZBMnD = {\n        'dSOgv': function (x, y) {\n            return x < y;\n        }\n    };\n    var f = (a, b) => b ? f(b, a % b) : a;\n    var ans = arr[0x0];\n    for (var i = 0x1; zZBMnD['dSOgv'](i, arr['length']); i++) {\n        ans = f(ans, arr[i]);\n    }\n    return ans;\n}\nfunction getExcep(c) {\n    var jAdUcp = {\n        'SSPww': function (x, y) {\n            return x < y;\n        },\n        'bVOFi': function (x, y) {\n            return x === y;\n        }\n    };\n    var QTmYtA = '5|4|0|1|2|7|6|3'['split']('|');\n    var SgoVyf = 0x0;\n    while (!![]) {\n        switch (QTmYtA[SgoVyf++]) {\n        case '0':\n            var mincount = 0x0;\n            continue;\n        case '1':\n            var maxcount = 0x0;\n            continue;\n        case '2':\n            var findValue = 0x0;\n            continue;\n        case '3':\n            for (var i = 0x0; i < c['length']; i++) {\n                if (c[i] === findValue) {\n                    return i;\n                }\n            }\n            continue;\n        case '4':\n            var max = Math['max'](...c);\n            continue;\n        case '5':\n            var min = Math['min'](...c);\n            continue;\n        case '6':\n            if (mincount === 0x1) {\n                findValue = min;\n            } else {\n                findValue = max;\n            }\n            continue;\n        case '7':\n            for (var i = 0x0; jAdUcp['SSPww'](i, c['length']); i++) {\n                if (jAdUcp['bVOFi'](c[i], min)) {\n                    mincount++;\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nfunction main(arg) {\n    var tUHWJw = {\n        'IewyR': function (x, y) {\n            return x + y;\n        },\n        'cgrkW': function (callee, param1) {\n            return callee(param1);\n        },\n        'pcZxh': function (x, y) {\n            return x < y;\n        },\n        'vcdpM': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var SPmWOf = '2|8|1|7|0|5|6|3|4'['split']('|');\n    var ShIcyW = 0x0;\n    while (!![]) {\n        switch (SPmWOf[ShIcyW++]) {\n        case '0':\n            var result = 0x0;\n            continue;\n        case '1':\n            var A = arg[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            arg = arg['trim']()['split']('\\x0a');\n            continue;\n        case '3':\n            A[idx] = A[tUHWJw['IewyR'](idx, 0x1)];\n            continue;\n        case '4':\n            console['log'](tUHWJw['cgrkW'](gcd, A));\n            continue;\n        case '5':\n            for (var i = 0x0; tUHWJw['pcZxh'](i, A['length']); i++) {\n                var _A = A['slice']();\n                _A['splice'](i, 0x1);\n                var n = tUHWJw['vcdpM'](gcd, _A);\n                c[i] = n;\n            }\n            continue;\n        case '6':\n            var idx = getExcep(c);\n            continue;\n        case '7':\n            var c = new Array(A['length'])['fill'](0x0);\n            continue;\n        case '8':\n            var N = Number(arg[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n7 6 8", "2"], ["3\n12 15 18", "6"], ["2\n1000000000 1000000000", "1000000000"]], "original": "function gcd(arr) {\n    var f = (a, b) => b ? f(b, a % b) : a\n    var ans = arr[0]\n    for (var i = 1; i < arr.length; i++) {\n        ans = f(ans, arr[i]); \n    }\n    return ans \n}\n\nfunction getExcep(c) {\n\tvar min = Math.min(...c)\n\tvar max = Math.max(...c)\n\tvar mincount = 0\n\tvar maxcount = 0\n\tvar findValue = 0\n\tfor (var i = 0; i < c.length; i++) {\n\t\tif (c[i] === min) {\n\t\t\tmincount++\n\t\t}\n\t}\n\tif (mincount === 1) {\n\t\tfindValue = min\n\t} else {\n\t\tfindValue = max\n\t}\n\t// console.log(findValue)\n\tfor (var i = 0; i < c.length; i++) {\n\t\tif (c[i] === findValue) {\n\t\t\treturn i\n\t\t}\n\t}\n}\n\nfunction main(arg) {\n\targ = arg.trim().split(\"\\n\")\n\tvar N = Number(arg[0])\n\tvar A = arg[1].split(\" \").map(Number)\n\tvar c = new Array(A.length).fill(0)\n\tvar result = 0\n\tfor (var i = 0; i < A.length;i ++) {\n\t\tvar _A = A.slice()\n\t\t_A.splice(i, 1)\n\t\tvar n = gcd(_A)\n\t\tc[i] = n\n\t\t// console.log(_A)\n\t}\n\tvar idx = getExcep(c)\n\tA[idx] = A[idx+1]\n\n\tconsole.log(gcd(A))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03163_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var ujihTd = {\n        'UZYuY': function (x, y) {\n            return x < y;\n        },\n        'fiXIk': function (x, y) {\n            return x + y;\n        },\n        'cnbvq': function (callee, param1) {\n            return callee(param1);\n        },\n        'pVqze': function (x, y) {\n            return x <= y;\n        },\n        'tIaqV': function (x, y) {\n            return x + y;\n        },\n        'grGiQ': function (x, y) {\n            return x > y;\n        },\n        'pnQZU': function (x, y) {\n            return x + y;\n        },\n        'ZgiDn': function (x, y) {\n            return x + y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const NW = lines['shift']()['split']('\\x20')['map'](x => parseInt(x));\n    const N = NW[0x0];\n    const W = NW[0x1];\n    const items = lines['map'](line => line['split']('\\x20')['map'](x => parseInt(x)));\n    dp = [];\n    for (var i = 0x0; ujihTd['UZYuY'](i, ujihTd['fiXIk'](W, 0x1)); i++) {\n        dp['push'](ujihTd['cnbvq'](Array, ujihTd['fiXIk'](N, 0x1))['fill'](0x0));\n    }\n    var result = 0x0;\n    for (var i = 0x0; ujihTd['UZYuY'](i, N); i++) {\n        for (var w = 0x0; ujihTd['pVqze'](w, W); w++) {\n            var weight = items[i][0x0];\n            var value = items[i][0x1];\n            if (ujihTd['pVqze'](weight, w)) {\n                dp[w][ujihTd['tIaqV'](i, 0x1)] = Math['max'](dp[w][i], ujihTd['fiXIk'](dp[w - weight][i], value));\n            } else {\n                dp[w][ujihTd['fiXIk'](i, 0x1)] = dp[w][i];\n            }\n            if (ujihTd['grGiQ'](dp[w][ujihTd['pnQZU'](i, 0x1)], result)) {\n                result = dp[w][ujihTd['ZgiDn'](i, 0x1)];\n            }\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 8\n3 30\n4 50\n5 60", "90"], ["5 5\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000", "5000000000"], ["6 15\n6 5\n5 6\n6 4\n6 6\n3 5\n7 2", "17"]], "original": "//他人のソース\nfunction main(input){\n  const lines = input.split('\\n');\n  const NW = lines.shift().split(' ').map(x => parseInt(x));\n  const N = NW[0]\n  const W = NW[1]\n  const items = lines.map(line => line.split(' ').map(x => parseInt(x)) );\n\n//console.log(N);\n//console.log(W);\n//console.log(items);\n\n  dp = []\n  for(var i=0;i<W+1;i++){\n    dp.push( Array(N+1).fill(0) );\n  }\n\n  var result = 0;\n  for(var i=0;i<N;i++){\n    for(var w=0;w<=W;w++){\n\n      var weight = items[i][0]\n      var value = items[i][1]\n\n      if(weight <= w){\n        dp[w][i+1] = Math.max(dp[w][i], dp[w-weight][i] + value);\n      }else{\n        dp[w][i+1] = dp[w][i];\n      }\n\n      if(dp[w][i+1] > result){result = dp[w][i+1];}\n\n    }\n  }\n\n//  const result = Math.max( ...dp.map(arr => Math.max(...arr)) )\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03208_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    const XyFaLe = {\n        'rSzTs': function (x, y) {\n            return x - y;\n        },\n        'mxIrR': function (callee, param1) {\n            return callee(param1);\n        },\n        'oQtVy': function (callee, param1) {\n            return callee(param1);\n        },\n        'weWqu': function (x, y) {\n            return x + y;\n        },\n        'VNtQT': function (x, y) {\n            return x - y;\n        },\n        'bLxoa': function (x, y) {\n            return x + y;\n        }\n    };\n    const inputs = arg['split']('\\x0a');\n    const N = XyFaLe['mxIrR'](parseInt, inputs[0x0]['split']('\\x20')[0x0]);\n    const K = XyFaLe['oQtVy'](parseInt, inputs[0x0]['split']('\\x20')[0x1]);\n    const list = inputs['slice'](0x1, XyFaLe['weWqu'](N, 0x1))['map'](x => parseInt(x))['sort']((a, b) => {\n        return XyFaLe['rSzTs'](a, b);\n    });\n    let i, sa = [];\n    for (i = 0x0; i < XyFaLe['VNtQT'](N, K) + 0x1; ++i)\n        sa['push'](list[XyFaLe['rSzTs'](XyFaLe['bLxoa'](i, K), 0x1)] - list[i]);\n    console['log'](Math['min'](...sa));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n10\n15\n11\n14\n12", "2"], ["5 3\n5\n7\n5\n7\n7", "0"]], "original": "\"use strict\";\nfunction main(arg) {\n    const inputs = arg.split(\"\\n\")\n    const N = parseInt(inputs[0].split(\" \")[0])\n    const K = parseInt(inputs[0].split(\" \")[1])\n    const list = inputs.slice(1,N+1).map((x)=>parseInt(x)).sort((a,b)=>{return a-b})\n    let i, sa = []\n    for(i=0; i<N-K+1; ++i)\n        sa.push(list[i+K-1] - list[i])\n    console.log(Math.min(...sa))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03211_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var vohpWp = {\n        'zZuqd': '2|1|0|3|4',\n        'thQWi': 'string'\n    };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var PMpbMf = vohpWp['zZuqd']['split']('|');\n        var RYvDkG = 0x0;\n        while (!![]) {\n            switch (PMpbMf[RYvDkG++]) {\n            case '0':\n                r = s[y]['pop']();\n                continue;\n            case '1':\n                if (typeof s[y] === vohpWp['thQWi'])\n                    s[y] = s[y]['split']('\\x20')['reverse']();\n                continue;\n            case '2':\n                var s = this['_s'], y = this['_y'], r;\n                continue;\n            case '3':\n                if (!s[y]['length'])\n                    this['_y']++;\n                continue;\n            case '4':\n                return f ? r : +r;\n            }\n            break;\n        }\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](main());\nfunction main() {\n    var ZSQJsy = {\n        'KPgSJ': function (x, y) {\n            return x < y;\n        },\n        'YnukM': function (x, y) {\n            return x + y;\n        },\n        'WefOA': function (x, y) {\n            return x - y;\n        },\n        'sSFGn': function (x, y) {\n            return x - y;\n        },\n        'HHMOE': function (x, y) {\n            return x - y;\n        }\n    };\n    var s = o['a'](0x1);\n    var ans = 0x3e7;\n    for (var i = 0x2; ZSQJsy['KPgSJ'](i, s['length']); i++) {\n        var t = ZSQJsy['YnukM'](s[ZSQJsy['WefOA'](i, 0x2)], s[ZSQJsy['sSFGn'](i, 0x1)]) + s[i];\n        t = Math['abs'](ZSQJsy['HHMOE'](t, 0x2f1));\n        if (ans > t)\n            ans = t;\n    }\n    return ans;\n}", "test_cases": [["1234567876", "34"], ["35753", "0"], ["1111111111", "642"]], "original": "var GET = (function(){\n  function f(s){return new g(s);}\n  function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}\n  g.prototype.a = function(f){\n    var s = this._s, y = this._y, r;\n    if(typeof s[y] === \"string\")s[y]=s[y].split(\" \").reverse();\n    r = s[y].pop();\n    if(!s[y].length)this._y++;\n    return f?r:+r;\n  }\n  g.prototype.l = function(f){\n    var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);\n  }\n  g.prototype.m = function(n,f){\n    var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));\n    return f?r:r.map(a=>a.map(a=>+a));\n  }\n  g.prototype.r = function(n,f){\n    var r = this._s.slice(this._y,this._y+=n);\n    return f?r:r.map(a=>+a);\n  }\n  return f;\n})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var s = o.a(1);\n  var ans = 999;\n  for(var i = 2; i < s.length; i++){\n    var t = s[i-2] + s[i-1] + s[i];\n    t = Math.abs(t - 753);\n    if(ans > t)ans = t;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03242_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    let n = input[0x0]['split']('');\n    console['log'](n['map'](val => val == '9' ? 0x1 + '' : 0x9 + '')['reduce']((acc, cur) => acc + cur));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["119", "991"], ["999", "111"]], "original": "'use strict';\nconst main = input => {\n  let n = input[0].split('');\n  console.log(n.map(val => val=='9'?1+'':9+'').reduce((acc, cur) => acc+cur));\n  \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));", "language": "JavaScript"}
{"filename": "p03243_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var APmzBN = {\n        'ieJIB': function (callee, param1) {\n            return callee(param1);\n        },\n        'vugGW': function (x, y) {\n            return x < y;\n        },\n        'KzGQB': function (x, y) {\n            return x - y;\n        },\n        'mErec': function (x, y) {\n            return x + y;\n        }\n    };\n    input = APmzBN['ieJIB'](parseInt, input['trim']());\n    var check = [\n        0x0,\n        0x6f,\n        0xde,\n        0x14d,\n        0x1bc,\n        0x22b,\n        0x29a,\n        0x309,\n        0x378,\n        0x3e7\n    ];\n    for (var i = 0x0; APmzBN['vugGW'](i, APmzBN['KzGQB'](check['length'], 0x1)); i++) {\n        if (APmzBN['vugGW'](check[i], input) && check[APmzBN['mErec'](i, 0x1)] > input) {\n            APmzBN['ieJIB'](myout, check[APmzBN['mErec'](i, 0x1)]);\n            return;\n        } else if (check[i] == input) {\n            myout(check[i]);\n            return;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["111", "111"], ["112", "222"], ["750", "777"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input.trim());\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var check = [000,111,222,333,444,555,666,777,888,999];\n  for(var i = 0; i < check.length - 1; i++){\n    if(check[i] < input && check[i + 1] > input){\n       myout(check[i + 1]);\n      return;\n       }else if(check[i] == input){\n             myout(check[i]);\n      return;   \n                }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03273_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const qkOkZC = {\n        'cvvqU': function (x, y) {\n            return x < y;\n        },\n        'yebZr': function (x, y) {\n            return x == y;\n        },\n        'JvtFU': function (x, y) {\n            return x < y;\n        },\n        'hynsK': function (callee, param1) {\n            return callee(param1);\n        },\n        'fthiq': function (x, y) {\n            return x < y;\n        },\n        'bwexK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'tgBOS': function (x, y) {\n            return x + y;\n        },\n        'XfTmX': function (x, y) {\n            return x != y;\n        }\n    };\n    input = input['split'](/\\s/);\n    let h = qkOkZC['hynsK'](parseInt, input[0x0]);\n    let w = qkOkZC['hynsK'](parseInt, input[0x1]);\n    let mp = [];\n    for (let i = 0x2; i < 0x2 + h; i++)\n        mp['push'](input[i]);\n    function check(x, y) {\n        let res = 0x0;\n        for (let i = 0x0; qkOkZC['cvvqU'](i, h); i++)\n            if (qkOkZC['yebZr'](mp[i][x], '#')) {\n                res++;\n                break;\n            }\n        for (let j = 0x0; qkOkZC['JvtFU'](j, w); j++)\n            if (mp[y][j] == '#') {\n                res++;\n                break;\n            }\n        return res == 0x2;\n    }\n    for (let i = 0x0; qkOkZC['fthiq'](i, h); i++) {\n        ans = '';\n        for (let j = 0x0; qkOkZC['fthiq'](j, w); j++)\n            if (qkOkZC['bwexK'](check, j, i))\n                ans = qkOkZC['tgBOS'](ans, mp[i][j]);\n        if (qkOkZC['XfTmX'](ans, ''))\n            console['log'](ans);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 4\n##.#\n....\n##.#\n.#.#", "###\n###\n.##"], ["3 3\n#..\n.#.\n..#", "#..\n.#.\n..#"], ["4 5\n.....\n.....\n..#..\n.....", "#"], ["7 6\n......\n....#.\n.#....\n..#...\n..#...\n......\n.#..#.", "..#\n#..\n.#.\n.#.\n#.#"]], "original": "\nfunction main(input){\n    input = input.split(/\\s/);\n    let h = parseInt(input[0]);\n    let w = parseInt(input[1]);\n    let mp = [];\n    for(let i = 2; i < 2 + h; i++) mp.push(input[i]);\n\n    function check(x, y){\n\tlet res = 0;\n\tfor(let i = 0;i < h;i++)\n\t    if(mp[i][x] == '#') {\n\t\tres++;\n\t\tbreak;\n\t    }\n\n\tfor(let j = 0;j < w;j++)\n\t    if(mp[y][j] == '#') {\n\t\tres++;\n\t\tbreak;\n\t    }\n\treturn res == 2;\n    }\n\n    for(let i = 0; i < h;i++){\n\tans = ''\n\tfor(let j = 0; j < w;j++)\n\t    if( check(j, i) ) ans = ans + mp[i][j];\n\tif(ans != '') console.log(ans);\n    }\n    \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03282_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const uflzlI = {\n        'rtnvo': function (callee, param1) {\n            return callee(param1);\n        },\n        'yMCJj': function (x, y) {\n            return x < y;\n        }\n    };\n    const S = input['split']('\\x0a')[0x0]['split']('');\n    const K = uflzlI['rtnvo'](parseInt, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    for (var i = 0x0; uflzlI['yMCJj'](i, S['length']); i++) {\n        if (S[i] != '1') {\n            console['log'](S[i]);\n            return;\n        }\n    }\n    console['log'](0x1);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1214\n4", "2"], ["3\n157", "3"], ["299792458\n9460730472580800", "2"]], "original": "function main(input){\n  const S = input.split('\\n')[0].split('');\n  const K = parseInt(input.split('\\n')[0].split(' ')[1]);\n\n  for(var i=0;i<S.length;i++){\n    if(S[i]!='1'){\n      console.log(S[i]);\n      return;\n    }\n  }\n  console.log(1);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03317_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var zViKAL = {\n        'gfWbK': function (x, y) {\n            return x > y;\n        },\n        'zabPC': function (x, y) {\n            return x < y;\n        },\n        'xqrtM': function (x, y) {\n            return x < y;\n        }\n    };\n    a = input['split']('\\x0a');\n    b = a[0x0]['split']('\\x20')['map'](Number);\n    c = a[0x1]['split']('\\x20')['map'](Number);\n    N = b[0x0], K = b[0x1], r = 0x0;\n    while (zViKAL['gfWbK'](c['length'], 0x1)) {\n        var YVmTUv = '4|0|1|3|2'['split']('|');\n        var BzGXPi = 0x0;\n        while (!![]) {\n            switch (YVmTUv[BzGXPi++]) {\n            case '0':\n                d = [];\n                continue;\n            case '1':\n                for (i = 0x0; zViKAL['zabPC'](i, K); i++) {\n                    d['push'](c[i]);\n                }\n                continue;\n            case '2':\n                c = c['join']('')['split']('')['map'](Number);\n                continue;\n            case '3':\n                for (i = 0x0; zViKAL['xqrtM'](i, K); i++) {\n                    if (d['sort']()[0x0] !== c[i]) {\n                        c[i] = '';\n                    }\n                }\n                continue;\n            case '4':\n                r++;\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](r);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3\n2 3 1 4", "2"], ["3 3\n1 2 3", "1"], ["8 3\n7 3 1 8 4 6 2 5", "4"]], "original": "function Main(input) {\n\ta=input.split('\\n');\n\tb=a[0].split(' ').map(Number);\n\tc=a[1].split(' ').map(Number);\n\n\tN=b[0], K=b[1], r=0;\n\n\twhile(c.length>1){\n\t\tr++;\n\t\td=[];\n\t\tfor(i=0;i<K;i++){\n\t\t\td.push(c[i]);\n\t\t}\n\n\t\tfor(i=0;i<K;i++){\n\t\t\tif(d.sort()[0]!==c[i]){\n\t\t\t\tc[i]='';\n\t\t\t}\n\t\t}\n\n\t\tc=c.join('').split('').map(Number);\n\t}\n\n\tconsole.log(r);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03469_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const date = input['split']('\\x0a')[0x0]['replace'](/^.{4}/, 0x7e2);\n    console['log'](date);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2017/01/07", "2018/01/07"], ["2017/01/31", "2018/01/31"]], "original": "// https://atcoder.jp/contests/abc085/tasks/abc085_a\n\"use strict\"\nfunction Main(input) {\n  const date = input.split(`\\n`)[0].replace(/^.{4}/, 2018 );\n  console.log(date);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03502_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uhHQdy = {\n        'eNFlI': '6|0|5|4|1|3|7|2',\n        'armSe': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'mJkUp': function (x, y) {\n            return x % y;\n        },\n        'zjwZF': 'Yes',\n        'dXNdF': function (x, y) {\n            return x >= y;\n        },\n        'GcFft': function (x, y) {\n            return x / y;\n        },\n        'WGGLA': function (x, y) {\n            return x / y;\n        },\n        'qjaKb': function (x, y) {\n            return x === y;\n        },\n        'jmXQb': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var gvxtnP = uhHQdy['eNFlI']['split']('|');\n    var UMLsgJ = 0x0;\n    while (!![]) {\n        switch (gvxtnP[UMLsgJ++]) {\n        case '0':\n            var N = uhHQdy['armSe'](parseInt, input[0x0], 0xa);\n            continue;\n        case '1':\n            var Mod = N;\n            continue;\n        case '2':\n            if (uhHQdy['mJkUp'](N, Sum) === 0x0) {\n                console['log'](uhHQdy['zjwZF']);\n            } else {\n                console['log']('No');\n            }\n            continue;\n        case '3':\n            for (var i = 0x5f5e100; uhHQdy['dXNdF'](i, 0xa); i = uhHQdy['GcFft'](i, 0xa)) {\n                Sum += parseInt(uhHQdy['WGGLA'](Mod, i));\n                Mod = uhHQdy['mJkUp'](Mod, i);\n            }\n            continue;\n        case '4':\n            var Sum = 0x0;\n            continue;\n        case '5':\n            if (uhHQdy['qjaKb'](uhHQdy['jmXQb'](parseInt, N / 0xa), 0x0)) {\n                console['log']('Yes');\n                return;\n            }\n            continue;\n        case '6':\n            input = input['split']('\\x0a');\n            continue;\n        case '7':\n            Sum += Mod;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["12", "Yes"], ["57", "No"], ["148", "No"]], "original": "    // inputに入力データ全体が入る\n    function Main(input) {\n    \tinput = input.split(\"\\n\");\n\n      var N = parseInt(input[0], 10);\n      \n      if (parseInt(N / 10) === 0){ // 1桁の時\n        console.log('Yes');\n        return;  \n      }\n\n      var Sum = 0;\n      var Mod = N; // 余り\n      for (var i = 100000000; i >= 10; i = i / 10){\n        Sum += parseInt(Mod / i);\n        Mod = Mod % i;\n        // console.log('%d', i);\n        // console.log('%d', Sum);\n        // console.log('%d', Mod);\n        // console.log('--');        \n      }\n      Sum += Mod;\n      // console.log('%d', Sum);\n      // console.log('%d', Mod);\n      // console.log('--');   \n\n      if( N % Sum === 0){\n      \tconsole.log('Yes');\n      }else{\n        console.log('No');\n      }\n    \n    }\n\n    Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03606_1", "type": "JavaScript", "obfuscated": "Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(args) {\n    var iivdSm = {\n        'SBoMq': function (callee, param1) {\n            return callee(param1);\n        },\n        'hERGZ': function (x, y) {\n            return x <= y;\n        },\n        'qlehV': function (x, y) {\n            return x + y;\n        },\n        'iLUIu': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = args['split']('\\x0a');\n    const N = iivdSm['SBoMq'](parseInt, input[0x0]);\n    var tmp;\n    var result = 0x0;\n    for (var i = 0x1; iivdSm['hERGZ'](i, N); i++) {\n        tmp = input[i]['split']('\\x20');\n        result += iivdSm['qlehV'](parseInt(tmp[0x1]) - iivdSm['iLUIu'](parseInt, tmp[0x0]), 0x1);\n    }\n    console['log'](result);\n}", "test_cases": [["1\n24 30", "7"], ["2\n6 8\n3 3", "4"]], "original": "Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction Main(args){\n    input = args.split(\"\\n\");\n    const N = parseInt(input[0]);\n    var tmp;\n    var result = 0;\n    \n    for(var i=1; i<=N; i++){\n        tmp = input[i].split(\" \");\n        result += (parseInt(tmp[1]) - parseInt(tmp[0]) + 1);\n    }\n\n    console.log(result);\n}", "language": "JavaScript"}
{"filename": "p03835_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const KqJliT = {\n        'LPwnL': function (callee, param1) {\n            return callee(param1);\n        },\n        'DeQXY': function (callee, param1) {\n            return callee(param1);\n        },\n        'uSIuK': function (x, y) {\n            return x <= y;\n        },\n        'zhAHC': function (x, y) {\n            return x === y;\n        }\n    };\n    let inputs = input['split']('\\x20');\n    let K = KqJliT['LPwnL'](Number, inputs[0x0]);\n    let S = KqJliT['DeQXY'](Number, inputs[0x1]);\n    let count = 0x0;\n    for (let X = 0x0; KqJliT['uSIuK'](X, K); X++) {\n        for (let Y = 0x0; KqJliT['uSIuK'](Y, K); Y++) {\n            for (let Z = 0x0; KqJliT['uSIuK'](Z, K); Z++) {\n                if (KqJliT['zhAHC'](X + Y + Z, S)) {\n                    count++;\n                }\n            }\n        }\n    }\n    console['log'](count);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2", "6"], ["5 15", "1"]], "original": "function Main(input) {\n  let inputs = input.split(' ');\n  let K = Number(inputs[0]);\n  let S = Number(inputs[1]);\n  let count = 0;\n  for(let X = 0; X <= K; X++) {\n    for(let Y = 0; Y <= K; Y++) {\n      for(let Z = 0; Z <= K; Z++) {\n        if (X + Y + Z === S) {\n          count++;\n        }\n      }\n    }\n  }\n  console.log(count);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04030_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const dljWdm = {\n        'kMwNY': function (x, y) {\n            return x === y;\n        }\n    };\n    const tape = input['split']('\\x0a')[0x0]['split']('');\n    const result = [];\n    for (const v of tape) {\n        if (dljWdm['kMwNY'](v, 'B')) {\n            result['pop']();\n        } else {\n            result['push'](v);\n        }\n    }\n    console['log'](result['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["01B0", "00"], ["0BB1", "1"]], "original": "'use strict'\n\nfunction Main(input) {\n    const tape = input.split('\\n')[0].split('');\n    const result = []\n\n    for (const v of tape) {\n        if (v === 'B') {\n            result.pop();\n        } else {\n            result.push(v);\n        }\n    }\n\n    console.log(result.join(''));\n}\n\n// input\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02398_1", "type": "JavaScript", "obfuscated": "var abc = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x20')['map'](Number);\nvar a = abc[0x0];\nvar b = abc[0x1];\nvar c = abc[0x2];\nvar i;\nvar result = 0x0;\nfor (i = a; i <= b; i++) {\n    if (c % i === 0x0) {\n        result++;\n    }\n}\nconsole['log'](result);", "test_cases": [["5 14 80", "3"]], "original": "var abc = require('fs').readFileSync('/dev/stdin', 'utf8').split(' ').map(Number);\nvar a = abc[0];\nvar b = abc[1];\nvar c = abc[2];\n\nvar i;\nvar result = 0;\nfor (i = a; i <= b; i++) {\n  if (c % i === 0) {\n    result++;\n  }\n}\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02419_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var lIJidy = { 'XAeie': 'END_OF_TEXT' };\n    var lines = stdin['toString']()['split']('\\x0a');\n    var result = function (word, data) {\n        return data['filter'](function (v) {\n            return v === word;\n        })['length'];\n    }(lines['shift']()['toLowerCase'](), lines['join']('')['split'](lIJidy['XAeie'])[0x0]['toLowerCase']()['trim']()['split']('\\x20'));\n    console['log'](result);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["computer\nNurtures computer scientists and highly-skilled computer engineers\nwho will create and exploit \"knowledge\" for the new era.\nProvides an outstanding computer environment.\nEND_OF_TEXT", "3"]], "original": "'use strict';\n(function(stdin) {\n  var lines = stdin.toString().split('\\n');\n\n  var result = (function(word,data) {\n    return data.filter(function(v) {\n      return v === word;\n    }).length;\n  }(\n    lines.shift().toLowerCase()\n    ,lines.join('').split('END_OF_TEXT')[0].toLowerCase().trim().split(' ')\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02572_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const VkRhBD = {\n        'WFBub': function (x, y) {\n            return x < y;\n        },\n        'bRUaq': function (x, y) {\n            return x == y;\n        },\n        'DiJwE': function (callee, param1) {\n            return callee(param1);\n        },\n        'Eqfgs': function (x, y) {\n            return x + y;\n        },\n        'IGAdt': function (x, y) {\n            return x < y;\n        },\n        'yHXYu': function (x, y) {\n            return x + y;\n        },\n        'hdOcU': function (x, y) {\n            return x * y;\n        },\n        'CLabv': function (callee, param1) {\n            return callee(param1);\n        },\n        'GZxVb': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const N = Number(input[0x0]);\n    const line2_arr = input[0x1]['split']('\\x20');\n    let ans = 0x0;\n    for (let i = 0x0; VkRhBD['WFBub'](i, N); i++) {\n        if (VkRhBD['bRUaq'](VkRhBD['DiJwE'](Number, line2_arr[i]), 0x0))\n            continue;\n        for (let j = VkRhBD['Eqfgs'](i, 0x1); VkRhBD['IGAdt'](j, N); j++) {\n            ans = VkRhBD['yHXYu'](ans, VkRhBD['hdOcU'](VkRhBD['DiJwE'](Number, line2_arr[i]), VkRhBD['CLabv'](Number, line2_arr[j])));\n        }\n    }\n    console['log'](VkRhBD['GZxVb'](ans, 0x3b9aca07));\n}\nfunction numberSort(array) {\n    array['sort'](f);\n    return array;\n}\nvar f = function (a, b) {\n    return a - b;\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["3\n1 2 3", "11"], ["4\n141421356 17320508 22360679 244949", "437235829"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\"\\n\");\n  const N = Number(input[0]);\n  const line2_arr = input[1].split(\" \");\n  let ans = 0;\n  for (let i = 0; i < N; i++) {\n    if (Number(line2_arr[i]) == 0) continue;\n    for (let j = i + 1; j < N; j++) {\n      ans = ans + Number(line2_arr[i]) * Number(line2_arr[j]);\n      // console.log(ans);\n    }\n  }\n  console.log(ans % 1000000007);\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02621_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\n(input => {\n    const mQPdko = {\n        'obCOQ': function (x, y) {\n            return x + y;\n        },\n        'yfJtK': function (x, y) {\n            return x * y;\n        },\n        'xgBUd': function (x, y) {\n            return x * y;\n        }\n    };\n    const a = input - 0x0;\n    console['log'](mQPdko['obCOQ'](a + mQPdko['yfJtK'](a, a), mQPdko['yfJtK'](mQPdko['xgBUd'](a, a), a)));\n})(input);", "test_cases": [["2", "14"], ["10", "1110"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n\n    const a = input - 0\n\n    console.log(a + a * a + a * a * a)\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02640_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf-8')['split']('\\x0a');\nconst [X, Y] = input[0x0]['split']('\\x20')['map'](Number);\nlet ans = 'No';\nif (X < Y) {\n    const r = Y - X * 0x2;\n    if (r % 0x2 === 0x0 && r / 0x2 <= X)\n        ans = 'Yes';\n}\nconsole['log'](ans);", "test_cases": [["3 8", "Yes"], ["2 100", "No"], ["1 2", "Yes"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf-8').split('\\n')\nconst [X, Y] = input[0].split(' ').map(Number)\nlet ans = 'No'\nif (X < Y) {\n  const r = Y - X * 2\n  if (r % 2 === 0 && r / 2 <= X) ans = 'Yes'\n}\nconsole.log(ans)\n", "language": "JavaScript"}
{"filename": "p02641_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const FjaSeL = {\n        'xgiuR': function (callee, param1) {\n            return callee(param1);\n        },\n        'yJIHM': function (callee, param1) {\n            return callee(param1);\n        },\n        'jfXPS': function (x, y) {\n            return x - y;\n        },\n        'GTiSo': function (x, y) {\n            return x <= y;\n        },\n        'QKUIw': function (x, y) {\n            return x == y;\n        },\n        'THUnl': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    let target = FjaSeL['xgiuR'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n    let zerocheck = FjaSeL['yJIHM'](parseInt, input[0x0]['split']('\\x20')[0x1]);\n    if (zerocheck == 0x0) {\n        console['log'](target);\n    } else {\n        let str = input[0x1]['split']('\\x20');\n        for (let i = 0x0; i < str['length']; i++) {\n            let num = parseInt(str[i]);\n            str[i] = FjaSeL['jfXPS'](target, num);\n        }\n        for (let ite = 0x1; FjaSeL['GTiSo'](ite, 0x64); ite++) {\n            const isp = str['indexOf'](ite);\n            const isn = str['indexOf'](-ite);\n            if (FjaSeL['QKUIw'](isp, -0x1)) {\n                console['log'](FjaSeL['jfXPS'](target, ite));\n                break;\n            }\n            if (isn == -0x1) {\n                console['log'](FjaSeL['THUnl'](target, ite));\n                break;\n            }\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 5\n4 7 10 6 5", "8"], ["10 5\n4 7 10 6 5", "9"], ["100 0", "100"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  let target = parseInt(input[0].split(\" \")[0]);\n  let zerocheck = parseInt(input[0].split(\" \")[1]);\n  if (zerocheck == 0) {\n    console.log(target);\n  } else {\n    let str = input[1].split(\" \");\n    for (let i = 0; i < str.length; i++) {\n      let num = parseInt(str[i]);\n      str[i] = target - num;\n    }\n    for (let ite = 1; ite <= 100; ite++) {\n      const isp = str.indexOf(ite);//小さい方\n      const isn = str.indexOf(-ite);//大きい方\n      if (isp == -1) {\n        console.log(target - ite);\n        break;\n      }\n      if (isn == -1) {\n        console.log(target + ite);\n        break;\n      }\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02682_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    const IcysuZ = {\n        'TYAeb': function (x, y) {\n            return x == y;\n        },\n        'oeyZT': function (x, y) {\n            return x - y;\n        },\n        'CQMuH': function (x, y) {\n            return x - y;\n        },\n        'tFLtb': function (x, y) {\n            return x > y;\n        },\n        'dTXaA': function (x, y) {\n            return x + y;\n        },\n        'Tzpdw': function (x, y) {\n            return x * y;\n        }\n    };\n    let getInt = arg['trim']()['split']('\\x20')[0x3];\n    let oneCount = arg['trim']()['split']('\\x20')[0x0];\n    let zeroCnt = arg['trim']()['split']('\\x20')[0x1];\n    let minusCnt = arg['trim']()['split']('\\x20')[0x2];\n    let result = 0x0;\n    if (IcysuZ['TYAeb'](oneCount, 0x0) && IcysuZ['TYAeb'](zeroCnt, 0x0) && IcysuZ['TYAeb'](minusCnt, 0x0)) {\n        console['log'](0x0);\n        return;\n    }\n    if (getInt > 0x0) {\n        if (getInt > oneCount) {\n            result = oneCount * 0x1;\n        } else {\n            result = getInt * 0x1;\n        }\n        getInt = IcysuZ['oeyZT'](getInt, oneCount);\n    }\n    if (getInt > 0x0) {\n        getInt = IcysuZ['CQMuH'](getInt, zeroCnt);\n    }\n    if (IcysuZ['tFLtb'](getInt, 0x0)) {\n        result = IcysuZ['dTXaA'](result, IcysuZ['Tzpdw'](getInt, -0x1));\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 1 1 3", "2"], ["1 2 3 4", "0"], ["2000000000 0 0 2000000000", "2000000000"]], "original": "\"use strict\"\nfunction main(arg) {\n    let getInt = arg.trim().split(\" \")[3];\n    let oneCount = arg.trim().split(\" \")[0];\n    let zeroCnt = arg.trim().split(\" \")[1];\n    let minusCnt = arg.trim().split(\" \")[2];\n\n    let result = 0;\n\n    if(oneCount == 0 && zeroCnt == 0 && minusCnt == 0){\n        console.log(0);\n        return;\n    }\n\n    if(getInt > 0){\n        \n        if(getInt > oneCount){\n            result = oneCount * 1;   \n        }else{\n            result = getInt * 1;\n        }\n        getInt = getInt - oneCount;\n    }\n\n    if(getInt > 0){\n        getInt = getInt - zeroCnt;\n    }\n\n    if(getInt > 0){\n        result = result + (getInt * - 1);\n    }\n\n    console.log(result);\n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02753_1", "type": "JavaScript", "obfuscated": "'use strict;';\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8')['trim']()['split']('\\x0a'));\nfunction main(input) {\n    const mwOJRb = {\n        'KGyop': function (x, y) {\n            return x > y;\n        },\n        'RuJVf': 'Yes'\n    };\n    input = input[0x0]['split']('');\n    let num = 0x2;\n    let isSame = !![];\n    while (mwOJRb['KGyop'](num, 0x0)) {\n        if (input[num] !== input[0x0]) {\n            isSame = ![];\n            break;\n        }\n        num--;\n    }\n    console['log'](isSame ? 'No' : mwOJRb['RuJVf']);\n}", "test_cases": [["ABA", "Yes"], ["BBA", "Yes"], ["BBB", "No"]], "original": "\"use strict;\";\nmain(\n  require(\"fs\")\n    .readFileSync(\"/dev/stdin\", \"UTF-8\")\n    .trim()\n    .split(\"\\n\")\n);\nfunction main(input) {\n  input = input[0].split(\"\");\n  let num = 2;\n  let isSame = true;\n  while (num > 0) {\n    if (input[num] !== input[0]) {\n      isSame = false;\n      break;\n    }\n    num--;\n  }\n  console.log(isSame ? \"No\" : \"Yes\");\n}\n", "language": "JavaScript"}
{"filename": "p02765_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var YXAklD = {\n        'jGoHH': '1|3|0|5|4|2|6',\n        'yiZGG': function (x, y) {\n            return x >= y;\n        },\n        'wawjY': function (x, y) {\n            return x - y;\n        },\n        'Yrpqq': function (x, y) {\n            return x + y;\n        },\n        'HxwTy': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var HwdTLz = YXAklD['jGoHH']['split']('|');\n    var TiAaLt = 0x0;\n    while (!![]) {\n        switch (HwdTLz[TiAaLt++]) {\n        case '0':\n            var n = parseInt(args[0x0], 0xa);\n            continue;\n        case '1':\n            var marginDelete = input['trim']();\n            continue;\n        case '2':\n            if (YXAklD['yiZGG'](n, 0xa)) {\n                hiddenRating = r;\n            } else {\n                var argument = 0x64 * YXAklD['wawjY'](0xa, n);\n                hiddenRating = YXAklD['Yrpqq'](r, argument);\n            }\n            continue;\n        case '3':\n            var args = marginDelete['split']('\\x20');\n            continue;\n        case '4':\n            var hiddenRating;\n            continue;\n        case '5':\n            var r = YXAklD['HxwTy'](parseInt, args[0x1], 0xa);\n            continue;\n        case '6':\n            return hiddenRating;\n        }\n        break;\n    }\n}\nconsole['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 2919", "3719"], ["22 3051", "3051"]], "original": "function main(input) {\n  var marginDelete = input.trim();\n  var args = marginDelete.split(' ');\n  var n = parseInt(args[0], 10);\n  var r = parseInt(args[1], 10);\n  var hiddenRating;\n  if ( n >= 10) {\n    hiddenRating = r;\n  } else {\n    var argument = 100*(10 - n);\n    hiddenRating = r + argument;\n  }\n  return hiddenRating;\n}\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02785_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const xzfgWU = {\n        'pNCMI': function (x, y) {\n            return x - y;\n        }\n    };\n    const args = input['split']('\\x0a'), K = parseInt(args[0x0]['split']('\\x20')[0x1]), H = args[0x1]['split']('\\x20');\n    var ans = H['sort']()['splice'](0x0, xzfgWU['pNCMI'](H['length'], K))['reduce']((a, x) => a + parseInt(x), 0x0);\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 1\n4 1 5", "5"], ["8 9\n7 9 3 2 3 8 4 6", "0"], ["3 0\n1000000000 1000000000 1000000000", "3000000000"]], "original": "'use strict';\n\nfunction main(input) {\n  const args = input.split('\\n'),\n        K = parseInt(args[0].split(' ')[1]),\n        H = args[1].split(' ');\n  var ans = H.sort().splice(0, H.length-K).reduce((a, x) => a + parseInt(x), 0);\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02831_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const kpLlxr = {\n        'MEbhp': function (x, y) {\n            return x >= y;\n        },\n        'uEeQO': function (x, y) {\n            return x > y;\n        },\n        'xBuqb': function (x, y) {\n            return x % y;\n        },\n        'Oomty': function (x, y) {\n            return x > y;\n        },\n        'aczYK': function (x, y) {\n            return x * y;\n        }\n    };\n    let xs = input['trim']()['split']('\\x20')['map'](v => parseInt(v, 0xa));\n    let m = xs[0x0];\n    let n = xs[0x1];\n    let r = 0x0;\n    let d = 0x0;\n    let x = m;\n    let y = n;\n    if (kpLlxr['MEbhp'](m, n)) {\n        while (kpLlxr['uEeQO'](n, 0x0)) {\n            let r = kpLlxr['xBuqb'](m, n);\n            m = n;\n            n = r;\n        }\n        d = m;\n    } else {\n        while (kpLlxr['Oomty'](m, 0x0)) {\n            r = kpLlxr['xBuqb'](n, m);\n            n = m;\n            m = r;\n        }\n        d = n;\n    }\n    let ans = kpLlxr['aczYK'](x, y) / d;\n    console['log'](ans);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3", "6"], ["123 456", "18696"], ["100000 99999", "9999900000"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split(' ').map(v=>parseInt(v,10));\n   let m = xs[0];\n   let n = xs[1];\n   let r = 0;\n   let d = 0;\n   let x = m;\n   let y = n;\n   if(m >= n) {\n        \twhile (n > 0) {\n        \t\tlet r = m % n; \n        \t\tm = n;     \n        \t\tn = r;     \n        \t}\n        \td = m;\n        }else{ \n        \twhile (m > 0) {\n        \t\tr = n % m; \n        \t\tn = m;     \n        \t\tm = r;     \n        \t}\n        \td = n;\n        }\n        let ans = x*y/d;\n        console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02836_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var rpcsNm = {\n        'Qejfg': '3|4|0|5|6|2|8|1|7',\n        'LMUSp': function (x, y) {\n            return x < y;\n        },\n        'qiYzB': function (x, y) {\n            return x - y;\n        },\n        'OyOXS': function (x, y) {\n            return x + y;\n        },\n        'kdmmg': function (x, y) {\n            return x % y;\n        },\n        'feEjl': function (x, y) {\n            return x / y;\n        }\n    };\n    var HHsKvL = rpcsNm['Qejfg']['split']('|');\n    var WcuCXO = 0x0;\n    while (!![]) {\n        switch (HHsKvL[WcuCXO++]) {\n        case '0':\n            var len = T['length'];\n            continue;\n        case '1':\n            for (i = 0x0; rpcsNm['LMUSp'](i, q); i++) {\n                if (T['substr'](i, 0x1) == T['substr'](rpcsNm['qiYzB'](rpcsNm['qiYzB'](len, 0x1), i), 0x1)) {\n                    cnt = rpcsNm['OyOXS'](cnt, 0x0);\n                } else {\n                    cnt++;\n                }\n            }\n            continue;\n        case '2':\n            cnt = 0x0;\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            T = input[0x0];\n            continue;\n        case '5':\n            var p = rpcsNm['kdmmg'](len, 0x2);\n            continue;\n        case '6':\n            q = Math['floor'](rpcsNm['feEjl'](len, 0x2));\n            continue;\n        case '7':\n            console['log'](cnt);\n            continue;\n        case '8':\n            i = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["redcoder", "1"], ["vvvvvv", "0"], ["abcdabc", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n    input = input.split(\"\\n\");\n    T = input[0];\n  // console.log(T);\n   \n    var len = T.length;\n  //console.log(len);\n var p = len%2;q = Math.floor(len/2);cnt=0;i=0;\n// console.log (p,q);\n //console.log(T.substr(i,1));\n// console.log(T.substr(len-1,1));\n  \n\t  for(i = 0;i<q;i++)\n\t  {if (T.substr(i,1)==T.substr(len-1-i,1)){cnt=cnt+0;}\n\t  else{cnt++;}\n\t\t  \n\t  }\n\t  console.log(cnt);\n\t\n\n\t\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02881_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const UAtiXL = {\n        'ouQLB': function (callee, param1) {\n            return callee(param1);\n        },\n        'VuPJV': function (x, y) {\n            return x - y;\n        },\n        'pwFkr': function (x, y) {\n            return x <= y;\n        },\n        'ONwtq': function (x, y) {\n            return x / y;\n        },\n        'mnXua': function (x, y) {\n            return x < y;\n        },\n        'JpSFC': function (x, y) {\n            return x + y;\n        },\n        'aRZim': function (x, y) {\n            return x - y;\n        }\n    };\n    const N = UAtiXL['ouQLB'](parseInt, input);\n    let distance = UAtiXL['VuPJV'](N, 0x1);\n    for (let a = 0x2; UAtiXL['pwFkr'](a, Math['sqrt'](N)); ++a) {\n        let b = UAtiXL['ONwtq'](N, a);\n        if (Number['isInteger'](b) && UAtiXL['mnXua'](UAtiXL['VuPJV'](UAtiXL['JpSFC'](a, b), 0x2), distance)) {\n            distance = UAtiXL['aRZim'](UAtiXL['JpSFC'](a, b), 0x2);\n        }\n    }\n    console['log'](distance);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "5"], ["50", "13"], ["10000000019", "10000000018"]], "original": "'use strict';\nfunction main(input) {\n  const N = parseInt(input);\n  let distance = N - 1;\n  for (let a = 2; a <= Math.sqrt(N); ++a) {\n    let b = N / a;\n    if (Number.isInteger(b) && a+b-2 < distance) {\n      distance = a+b-2;\n    }\n  }\n  console.log(distance);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03013_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const XIsURQ = {\n        'dzKnt': function (callee, param1) {\n            return callee(param1);\n        },\n        'YBufs': function (callee, param1) {\n            return callee(param1);\n        },\n        'dFSWs': function (x, y) {\n            return x + y;\n        },\n        'pViJN': function (x, y) {\n            return x <= y;\n        },\n        'kUXKq': function (x, y) {\n            return x % y;\n        },\n        'qrhmq': function (x, y) {\n            return x + y;\n        },\n        'yHhUp': function (x, y) {\n            return x - y;\n        },\n        'vHTic': function (x, y) {\n            return x - y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = XIsURQ['dzKnt'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const M = XIsURQ['YBufs'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    const dangers = arg['slice'](0x1, XIsURQ['dFSWs'](M, 0x1));\n    let answer = [...Array(N + 0x1)]['fill'](0x1);\n    let broken = -0x1;\n    let NG = ![];\n    for (let i in dangers) {\n        if (XIsURQ['dFSWs'](broken, 0x1) === dangers[i]) {\n            NG = !![];\n        }\n        answer[dangers[i]] = 0x0;\n        broken = dangers[i];\n    }\n    for (let i = 0x2; XIsURQ['pViJN'](i, N); i++) {\n        answer[i] = XIsURQ['kUXKq'](answer[i] * XIsURQ['qrhmq'](answer[XIsURQ['yHhUp'](i, 0x2)], answer[XIsURQ['vHTic'](i, 0x1)]), 0x3b9aca07);\n    }\n    console['log'](answer[N]);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 1\n3", "4"], ["10 2\n4\n5", "0"], ["100 5\n1\n23\n45\n67\n89", "608200469"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const M = parseInt(arg[0].split(\" \")[1]);\n    \n    const dangers = arg.slice(1, M + 1);\n    \n    let answer = [...Array(N + 1)].fill(1);\n    let broken = -1;\n    let NG     = false;\n    \n    for(let i in dangers) {\n        if(broken + 1 === dangers[i]) {\n            NG = true;\n        }\n        \n        answer[dangers[i]] = 0;\n        broken = dangers[i];\n    }\n    \n    for(let i=2; i<=N; i++) {\n        answer[i] = answer[i] * (answer[i - 2] + answer[i - 1]) % 1000000007;\n    }\n    \n    console.log(answer[N]);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03078_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    var rMfUOV = {\n        'OymfW': function (x, y) {\n            return x < y;\n        },\n        'tVGxu': function (x, y) {\n            return x < y;\n        },\n        'kqCtF': function (x, y) {\n            return x > y;\n        },\n        'wOrLl': function (x, y) {\n            return x * y;\n        },\n        'CcSoh': function (x, y) {\n            return x + y;\n        },\n        'DQKvl': function (x, y) {\n            return x + y;\n        }\n    };\n    var K = input['trim']()['split']('\\x0a')[0x0]['split']('\\x20')[0x3];\n    var x = input['trim']()['split']('\\x0a')[0x0]['split']('\\x20')[0x0];\n    var y = input['trim']()['split']('\\x0a')[0x0]['split']('\\x20')[0x1];\n    var z = input['trim']()['split']('\\x0a')[0x0]['split']('\\x20')[0x2];\n    var a = input['trim']()['split']('\\x0a')[0x1]['split']('\\x20')['sort']((a, b) => b - a)['map'](v => v - 0x0);\n    var b = input['trim']()['split']('\\x0a')[0x2]['split']('\\x20')['sort']((a, b) => b - a)['map'](v => v - 0x0);\n    var c = input['trim']()['split']('\\x0a')[0x3]['split']('\\x20')['sort']((a, b) => b - a)['map'](v => v - 0x0);\n    var anss = [];\n    var idxa = 0x0, idxb = 0x0, idxc = 0x0;\n    var min = 0x0;\n    for (var i = 0x0; rMfUOV['OymfW'](i, x); i++) {\n        for (var j = 0x0; rMfUOV['tVGxu'](j, y); j++) {\n            for (var k = 0x0; rMfUOV['tVGxu'](k, z); k++) {\n                if (rMfUOV['kqCtF'](rMfUOV['wOrLl'](rMfUOV['wOrLl'](i, j), k), K))\n                    break;\n                var sum = rMfUOV['CcSoh'](rMfUOV['DQKvl'](a[i], b[j]), c[k]);\n                anss['push'](sum);\n            }\n        }\n    }\n    console['log'](anss['sort']((a, b) => b - a)['filter']((v, i) => i < K)['join']('\\x0a'));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8'));", "test_cases": [["2 2 2 8\n4 6\n1 5\n3 8", "19\n17\n15\n14\n13\n12\n10\n8"], ["3 3 3 5\n1 10 100\n2 20 200\n1 10 100", "400\n310\n310\n301\n301"], ["10 10 10 20\n7467038376 5724769290 292794712 2843504496 3381970101 8402252870 249131806 6310293640 6690322794 6082257488\n1873977926 2576529623 1144842195 1379118507 6003234687 4925540914 3902539811 3326692703 484657758 2877436338\n4975681328 8974383988 2882263257 7690203955 514305523 6679823484 4263279310 585966808 3752282379 620585736", "23379871545\n22444657051\n22302177772\n22095691512\n21667941469\n21366963278\n21287912315\n21279176669\n21160477018\n21085311041\n21059876163\n21017997739\n20703329561\n20702387965\n20590247696\n20383761436\n20343962175\n20254073196\n20210218542\n20150096547"]], "original": "const main = (input) => {\n  var K = input.trim().split(\"\\n\")[0].split(\" \")[3];\n  var x = input.trim().split(\"\\n\")[0].split(\" \")[0];\n  var y = input.trim().split(\"\\n\")[0].split(\" \")[1];\n  var z = input.trim().split(\"\\n\")[0].split(\" \")[2];\n\n  var a = input.trim().split(\"\\n\")[1].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var b = input.trim().split(\"\\n\")[2].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var c = input.trim().split(\"\\n\")[3].split(\" \").sort((a,b)=>b-a).map(v=>v-0);\n  var anss = [];\n  var idxa=0,idxb=0,idxc=0;\n  var min = 0;\n  for(var i=0;i<x;i++){\n    for(var j=0;j<y;j++){\n      for(var k=0;k<z;k++){\n        if(i*j*k > K) break;\n        var sum = a[i]+b[j]+c[k];\n        anss.push(sum);\n      }\n    }\n  }\n  console.log(anss.sort((a,b)=>b-a).filter((v,i)=>i<K).join(\"\\n\"));\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));\n", "language": "JavaScript"}
{"filename": "p03095_1", "type": "JavaScript", "obfuscated": "function roop(depth, A, end) {\n    var erwwYB = {\n        'krgZj': function (x, y) {\n            return x < y;\n        },\n        'xsIqT': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'Nowpu': function (x, y) {\n            return x + y;\n        },\n        'ZpCJs': function (x, y) {\n            return x * y;\n        }\n    };\n    var ans = 0x0, i = 0x0;\n    if (erwwYB['krgZj'](depth, end)) {\n        for (i = depth; i < end; i++) {\n            ans += erwwYB['xsIqT'](roop, erwwYB['Nowpu'](i, 0x1), A, end);\n        }\n        return erwwYB['Nowpu'](A[depth], erwwYB['ZpCJs'](A[depth], ans));\n    } else {\n        return A[depth];\n    }\n}\nfunction main(input) {\n    var kpHLfw = {\n        'KLRQv': function (x, y) {\n            return x < y;\n        },\n        'sXhqM': function (x, y) {\n            return x - y;\n        },\n        'zlMah': function (x, y) {\n            return x % y;\n        }\n    };\n    var i, j, A, B, ans = 0x0, count = 0x0;\n    var inputs = input['split']('\\x0a');\n    var arg = Number(inputs[0x0]);\n    var str = inputs[0x1]['split']('');\n    A = {};\n    for (i = 0x0; kpHLfw['KLRQv'](i, arg); ++i) {\n        if (A[str[i]]) {\n            A[str[i]]++;\n        } else {\n            A[str[i]] = 0x1;\n            count++;\n        }\n    }\n    B = [];\n    for (key in A) {\n        B['push'](A[key]);\n    }\n    for (i = 0x0; i < count; ++i) {\n        ans += roop(i, B, kpHLfw['sXhqM'](count, 0x1));\n    }\n    ans = Math['round'](ans);\n    console['log'](kpHLfw['zlMah'](ans, 0x3b9aca07));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\nabcd", "15"], ["3\nbaa", "5"], ["5\nabcab", "17"]], "original": "function roop(depth, A, end){\n    var ans=0, i=0\n    if (depth < end){\n        for (i=depth;i<end;i++){\n            ans+=roop(i+1, A, end)\n        }\n        return A[depth] + A[depth] * ans\n    }else{\n        return A[depth]\n    }\n}\n\nfunction main(input) {\n    var i, j, A, B, ans=0, count=0\n    var inputs = input.split(\"\\n\")\n    var arg = Number(inputs[0])\n    var str = inputs[1].split(\"\")\n    //A=new Array(arg[0])\n    A={}\n    for (i=0;i<arg;++i){\n        if (A[str[i]]){\n            A[str[i]]++\n        }else{\n            A[str[i]]=1\n            count++\n        }\n    }\n    B=[]\n    for(key in A){\n        B.push(A[key])\n    }\n    for(i=0;i<count;++i){\n        ans+=roop(i, B, count-1)\n    }\n    ans=Math.round(ans)\n    console.log(ans%(1000000007))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03102_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var jHfNPr = {\n        'hJhZR': '2|0|6|8|7|3|4|1|5',\n        'VTGhW': function (x, y) {\n            return x < y;\n        },\n        'PUdTM': function (x, y) {\n            return x + y;\n        },\n        'OJYmK': function (x, y) {\n            return x * y;\n        },\n        'tCNwq': function (callee, param1) {\n            return callee(param1);\n        },\n        'yRuML': function (x, y) {\n            return x > y;\n        },\n        'MXwAE': function (x, y) {\n            return x + y;\n        },\n        'vAgIb': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var mPnkhG = jHfNPr['hJhZR']['split']('|');\n    var ilXWjq = 0x0;\n    while (!![]) {\n        switch (mPnkhG[ilXWjq++]) {\n        case '0':\n            tmp0 = input[0x0]['split']('\\x20');\n            continue;\n        case '1':\n            for (var i = 0x0; jHfNPr['VTGhW'](i, N); i++) {\n                A = input[jHfNPr['PUdTM'](0x2, i)]['split']('\\x20');\n                var tmpSum = 0x0;\n                for (var j = 0x0; jHfNPr['VTGhW'](j, M); j++) {\n                    tmpSum += jHfNPr['OJYmK'](jHfNPr['tCNwq'](Number, A[j]), jHfNPr['tCNwq'](Number, B[j]));\n                }\n                if (jHfNPr['yRuML'](jHfNPr['MXwAE'](tmpSum, C), 0x0)) {\n                    ans++;\n                }\n            }\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            B = input[0x1]['split']('\\x20');\n            continue;\n        case '4':\n            var ans = 0x0;\n            continue;\n        case '5':\n            console['log'](ans);\n            continue;\n        case '6':\n            N = jHfNPr['vAgIb'](Number, tmp0[0x0]);\n            continue;\n        case '7':\n            C = Number(tmp0[0x2]);\n            continue;\n        case '8':\n            M = Number(tmp0[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 -10\n1 2 3\n3 2 1\n1 2 2", "1"], ["5 2 -4\n-2 5\n100 41\n100 40\n-3 0\n-6 -2\n18 -13", "2"], ["3 3 0\n100 -100 0\n0 100 100\n100 100 100\n-100 100 100", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\")\n  tmp0 = input[0].split(\" \")\n  N = Number(tmp0[0])\n  M = Number(tmp0[1])\n  C = Number(tmp0[2])\n  B = input[1].split(\" \")\n\n  var ans = 0;\n  for(var i = 0; i < N; i++)\n  {\n    A = input[2 + i].split(\" \")\n    var tmpSum = 0\n    for(var j = 0; j < M; j++)\n    {\n      tmpSum += Number(A[j]) * Number(B[j])\n    }\n    if( (tmpSum+ C) > 0){\n      ans++;\n    }\n\n  }\n  console.log(ans)\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main(\"3 2\\n2 1\\n\")", "language": "JavaScript"}
{"filename": "p03146_1", "type": "JavaScript", "obfuscated": "const collatz = n => {\n    const rWMSGE = {\n        'QHHSt': function (x, y) {\n            return x === y;\n        },\n        'zqCQD': function (x, y) {\n            return x + y;\n        },\n        'BmmSb': function (x, y) {\n            return x * y;\n        }\n    };\n    if (rWMSGE['QHHSt'](n % 0x2, 0x0)) {\n        n /= 0x2;\n    } else {\n        n = rWMSGE['zqCQD'](rWMSGE['BmmSb'](0x3, n), 0x1);\n    }\n    return n;\n};\nconst main = stdin => {\n    const PQuICZ = {\n        'ZjzAu': function (callee, param1) {\n            return callee(param1);\n        },\n        'xXLpH': function (x, y) {\n            return x === y;\n        },\n        'TCOsL': function (x, y) {\n            return x === y;\n        },\n        'PttOA': function (x, y) {\n            return x === y;\n        },\n        'VDnfg': function (x, y) {\n            return x !== y;\n        }\n    };\n    const input = stdin['trim']()['split']('\\x0a');\n    const s = PQuICZ['ZjzAu'](parseInt, input[0x0]);\n    if (PQuICZ['xXLpH'](s, 0x1) || PQuICZ['TCOsL'](s, 0x2) || PQuICZ['TCOsL'](s, 0x4)) {\n        console['log'](0x4);\n        return;\n    }\n    let tmp = s;\n    let first = 0x0;\n    let second = 0x0;\n    for (let i = 0x1;; i++) {\n        if (PQuICZ['xXLpH'](tmp, 0x4) && first === 0x0) {\n            first = i;\n        } else if (PQuICZ['PttOA'](tmp, 0x4) && PQuICZ['VDnfg'](first, 0x0)) {\n            second = i;\n            break;\n        }\n        tmp = collatz(tmp);\n    }\n    console['log'](second);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8", "5"], ["7", "18"], ["54", "114"]], "original": "const collatz = (n) => {\n  if (n % 2 === 0) {\n    n /= 2\n  } else {\n    n = 3 * n + 1\n  }\n\n  return n\n}\n\nconst main = stdin => {\n  const input = stdin.trim().split('\\n')\n  const s = parseInt(input[0])\n\n  if (s === 1 || s === 2 || s === 4) {\n    console.log(4)\n    return\n  }\n\n  let tmp = s\n  let first = 0\n  let second = 0\n  for (let i = 1; ; i++) {\n    if (tmp === 4 && first === 0) {\n      first = i\n    } else if (tmp === 4 && first !== 0) {\n      second = i\n      break\n    }\n    tmp = collatz(tmp)\n  }\n\n  console.log(second)\n}\n// 標準入力\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03252_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var ceFzyl = {\n        'OPyqk': '0|4|2|1|3|5',\n        'NwFRI': 'Yes',\n        'KNCzn': function (x, y) {\n            return x == y;\n        },\n        'DWmUV': function (x, y) {\n            return x == y;\n        }\n    };\n    var NLymNp = ceFzyl['OPyqk']['split']('|');\n    var gkzpYI = 0x0;\n    while (!![]) {\n        switch (NLymNp[gkzpYI++]) {\n        case '0':\n            input = input['split']('\\x0a');\n            continue;\n        case '1':\n            var ans = ceFzyl['NwFRI'];\n            continue;\n        case '2':\n            var T = input[0x1];\n            continue;\n        case '3':\n            while (T['length'] != 0x0) {\n                for (i = 0x1; i < T['length']; i++) {\n                    if (ceFzyl['KNCzn'](T['substr'](0x0, 0x1), T['substr'](i, 0x1))) {\n                        if (S['substr'](0x0, 0x1) != S['substr'](i, 0x1)) {\n                            ans = 'No';\n                            break;\n                        }\n                    }\n                    if (S['substr'](0x0, 0x1) == S['substr'](i, 0x1)) {\n                        if (T['substr'](0x0, 0x1) != T['substr'](i, 0x1)) {\n                            ans = 'No';\n                            break;\n                        }\n                    }\n                }\n                if (ceFzyl['DWmUV'](ans, 'No')) {\n                    break;\n                }\n                S = S['substr'](0x1);\n                T = T['substr'](0x1);\n            }\n            continue;\n        case '4':\n            var S = input[0x0];\n            continue;\n        case '5':\n            console['log']('%s', ans);\n            continue;\n        }\n        break;\n    }\n}\nfunction debug() {\n    var KHxiiF = {\n        'lmVib': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var input = document['getElementById']('input')['value'];\n    KHxiiF['lmVib'](Main, input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["azzel\napple", "Yes"], ["chokudai\nredcoder", "No"], ["abcdefghijklmnopqrstuvwxyz\nibyhqfrekavclxjstdwgpzmonu", "Yes"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var S = input[0];\n  var T = input[1];\n  var ans=\"Yes\";\n  while(T.length!=0){\n    for(i=1;i<T.length;i++){\n      if(T.substr(0,1)==T.substr(i,1)){\n        if(S.substr(0,1)!=S.substr(i,1)){\n          ans=\"No\";\n          break;\n        }\n      }\n      if(S.substr(0,1)==S.substr(i,1)){\n        if(T.substr(0,1)!=T.substr(i,1)){\n          ans=\"No\";\n          break;\n        }\n      }\n    }\n    if(ans==\"No\"){\n      break;\n    }\n    S=S.substr(1);\n    T=T.substr(1);\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03272_1", "type": "JavaScript", "obfuscated": "a = require('fs')['readFileSync']('/dev/stdin', 'utf8')['match'](/\\d+/g);\nconsole['log'](a[0x0] - a[0x1] + 0x1);", "test_cases": [["4 2", "3"], ["1 1", "1"], ["15 11", "5"]], "original": "a=require('fs').readFileSync('/dev/stdin','utf8').match(/\\d+/g);console.log(a[0]-a[1]+1)", "language": "JavaScript"}
{"filename": "p03280_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nA = l[0x0] * 0x1 - 0x1;\nB = l[0x1] * 0x1 - 0x1;\nconsole['log'](A * B);", "test_cases": [["2 2", "1"], ["5 7", "24"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nA = l[0] * 1 - 1\nB = l[1] * 1 - 1\nconsole.log(A * B)", "language": "JavaScript"}
{"filename": "p03472_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const uXHQmC = {\n        'SBWJB': function (callee, param1) {\n            return callee(param1);\n        },\n        'LowbR': function (x, y) {\n            return x <= y;\n        },\n        'MSgyH': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = uXHQmC['SBWJB'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    let H = uXHQmC['SBWJB'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    let ab = arg['slice'](0x1, N + 0x1)['map'](n => n['split']('\\x20')['map'](l => parseInt(l)));\n    ab['sort']((a, b) => b[0x0] - a[0x0]);\n    const aMax = ab[0x0][0x0];\n    ab = ab['sort']((a, b) => b[0x1] - a[0x1])['filter'](n => n[0x1] > aMax);\n    let damage = 0x0;\n    let throwAttack = 0x0;\n    for (let i in ab) {\n        H -= ab[i][0x1];\n        throwAttack++;\n        if (uXHQmC['LowbR'](H, 0x0)) {\n            console['log'](throwAttack);\n            return;\n        }\n    }\n    const directAttack = Math['ceil'](H / aMax);\n    console['log'](uXHQmC['MSgyH'](throwAttack, directAttack));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 10\n3 5", "3"], ["2 10\n3 5\n2 6", "2"], ["4 1000000000\n1 1\n1 10000000\n1 30000000\n1 99999999", "860000004"], ["5 500\n35 44\n28 83\n46 62\n31 79\n40 43", "9"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N  = parseInt(arg[0].split(\" \")[0]);\n    let H  = parseInt(arg[0].split(\" \")[1]);\n    let ab = arg.slice(1, N + 1).map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    ab.sort((a,b)=>b[0] - a[0]);\n    \n    const aMax = ab[0][0];\n    \n    ab = ab.sort((a,b)=>b[1] - a[1]).filter(n=>n[1] > aMax);\n\n    let damage = 0;\n    let throwAttack = 0;\n    \n    for(let i in ab) {\n        H -= ab[i][1];\n        throwAttack++;\n        \n        if(H <= 0) {\n            console.log(throwAttack);\n            return;\n        }\n    }\n    \n    const directAttack = Math.ceil(H / aMax);\n    \n    console.log(throwAttack + directAttack);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03695_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar g_input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    g_input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var JzXcoi = {\n        'RthHE': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    JzXcoi['RthHE'](main, g_input['split'](/\\r?\\n/));\n});\nfunction main(inputs) {\n    var EiSnSt = {\n        'TLPus': function (callee, param1) {\n            return callee(param1);\n        },\n        'UaALm': function (x, y) {\n            return x < y;\n        },\n        'VaCUL': function (x, y) {\n            return x < y;\n        },\n        'yaYjv': function (x, y) {\n            return x * y;\n        },\n        'LSUlw': function (x, y) {\n            return x + y;\n        },\n        'niqUJ': function (x, y) {\n            return x == y;\n        },\n        'FPsUm': function (x, y) {\n            return x > y;\n        },\n        'czVDI': function (x, y) {\n            return x + y;\n        },\n        'vqQLX': function (x, y) {\n            return x + y;\n        }\n    };\n    var N = parseInt(inputs[0x0]);\n    var rs = inputs[0x1]['split']('\\x20')['map'](function (a) {\n        return EiSnSt['TLPus'](parseInt, a);\n    });\n    var a = new Array(0x7)['fill'](![]);\n    var a8 = 0x0;\n    var count = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        for (var j = 0x0; EiSnSt['UaALm'](j, 0x9); j++) {\n            if (j != 0x8) {\n                if (EiSnSt['VaCUL'](rs[i], EiSnSt['yaYjv'](EiSnSt['LSUlw'](j, 0x1), 0x190))) {\n                    if (!a[j]) {\n                        a[j] = !![];\n                        count += 0x1;\n                    }\n                    break;\n                }\n            } else {\n                a8 += 0x1;\n            }\n        }\n    }\n    var min = count;\n    if (EiSnSt['niqUJ'](min, 0x0) && EiSnSt['FPsUm'](N, 0x0)) {\n        min = 0x1;\n        if (EiSnSt['FPsUm'](a8, 0x0)) {\n            a8 -= 0x1;\n        }\n    }\n    var max = Math['min'](0x8, EiSnSt['LSUlw'](min, a8));\n    console['log'](EiSnSt['czVDI'](EiSnSt['vqQLX']('' + min, '\\x20'), max));\n}", "test_cases": [["4\n2100 2500 2700 2700", "2 2"], ["5\n1100 1900 2800 3200 3200", "3 5"], ["20\n800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990", "1 1"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\nprocess.stdin.on('end', function() {\n    main(g_input.split(/\\r?\\n/));\n});\n\nfunction main(inputs) {\n  var N = parseInt(inputs[0]);\n  var rs = inputs[1].split(\" \").map(function(a){return parseInt(a);});\n  var a = new Array(7).fill(false);\n  var a8 = 0;\n  var count = 0;\n  for(var i = 0; i < N; i++){\n    for(var j = 0; j < 9; j++){\n      if(j != 8){\n        if(rs[i] < (j+1)*400){\n          if(!a[j]){\n            a[j] = true;\n            count += 1;\n          }\n          break;\n        }\n      }else{\n        a8 += 1;\n      }\n    }\n  }\n  var min = count;\n  if(min == 0 && N>0){\n    min = 1;\n    if(a8>0){\n      a8 -=1;\n    }\n  }\n  var max = Math.min(8, min + a8);\n  console.log(\"\"+min+\" \"+max);\n}\n", "language": "JavaScript"}
{"filename": "p03777_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var dTOmRW = {\n        'FumME': function (callee, param1) {\n            return callee(param1);\n        },\n        'uolKI': function (x, y) {\n            return x === y;\n        }\n    };\n    input = input['split']('\\x20');\n    var a = String(input[0x0]);\n    var b = dTOmRW['FumME'](String, input[0x1]);\n    if (a === 'H' && b === 'H' || dTOmRW['uolKI'](a, 'D') && b === 'D') {\n        console['log']('H');\n    } else {\n        console['log']('D');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["H H", "H"], ["D H", "D"], ["D D", "H"]], "original": "function Main(input){\n  input = input.split(' ');\n  var a = String(input[0]);\n  var b = String(input[1]);\n\n  if( a === 'H' && b === 'H' || a === 'D' && b === 'D') {\n      console.log('H');\n  } else {\n    console.log('D');\n\n\n}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03854_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const UFcCnG = {\n        'optRr': 'dream',\n        'PWHyo': 'dreamer',\n        'aKCIG': 'erase',\n        'bDFZb': 'eraser',\n        'Exlft': function (callee, param1) {\n            return callee(param1);\n        },\n        'pNAOM': function (x, y) {\n            return x > y;\n        },\n        'EKHUj': function (x, y) {\n            return x == y;\n        },\n        'BkGmH': function (x, y) {\n            return x <= y;\n        },\n        'MoEUU': 'YES'\n    };\n    const arr = [\n        UFcCnG['optRr'],\n        UFcCnG['PWHyo'],\n        UFcCnG['aKCIG'],\n        UFcCnG['bDFZb']\n    ];\n    for (let i in arr) {\n        arr[i] = UFcCnG['Exlft'](reverse, arr[i]);\n    }\n    input = UFcCnG['Exlft'](reverse, input);\n    while (UFcCnG['pNAOM'](input['length'], 0x0)) {\n        let flag = ![];\n        for (let s of arr) {\n            if (UFcCnG['EKHUj'](input['slice'](0x0, s['length']), s)) {\n                input = input['substr'](s['length']);\n                flag = !![];\n            }\n        }\n        if (UFcCnG['EKHUj'](flag, ![]))\n            break;\n    }\n    if (UFcCnG['BkGmH'](input['length'], 0x0)) {\n        console['log'](UFcCnG['MoEUU']);\n    } else {\n        console['log']('NO');\n    }\n}\nfunction reverse(str) {\n    return str['split']('')['reverse']()['join']('');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["erasedream", "YES"], ["dreameraser", "YES"], ["dreamerer", "NO"]], "original": "\"use strict\";\nfunction Main(input) {\n  const arr = [\"dream\", \"dreamer\", \"erase\", \"eraser\"];\n\n  for (let i in arr) {\n    arr[i] = reverse(arr[i]);\n  }\n  input = reverse(input);\n  while (input.length > 0) {\n    let flag = false;\n    for (let s of arr) {\n      // console.log(\n      //   `input: ${input.slice(0, s.length)}, s: ${s}, length: ${s.length}`\n      // );\n      if (input.slice(0, s.length) == s) {\n        input = input.substr(s.length);\n        flag = true;\n      }\n    }\n    if (flag == false) break;\n  }\n  if (input.length <= 0) {\n    console.log(\"YES\");\n  } else {\n    console.log(\"NO\");\n  }\n}\n\nfunction reverse(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02265_1", "type": "JavaScript", "obfuscated": "const config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nconst line = require('fs')['readFileSync'](config['input'], 'utf-8')['split'](config['newline']);\nconst insert = (arr, x) => arr['unshift'](x);\nconst del = (arr, x) => {\n    const HjLWnF = {\n        'ErekA': function (x, y) {\n            return x < y;\n        }\n    };\n    for (var i = 0x0; HjLWnF['ErekA'](i, arr['length']); i++) {\n        if (x === arr[i])\n            break;\n    }\n    if (i !== arr['length'])\n        arr['splice'](i, 0x1);\n};\nconst delFirst = arr => arr['shift']();\nconst delLast = arr => arr['pop']();\nconst cmds = line['slice'](0x1);\nconst ans = cmds['reduce']((acc, x) => {\n    const mZqLLz = {\n        'EeNUo': 'insert',\n        'nyRhN': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'nnEob': function (callee, param1) {\n            return callee(param1);\n        },\n        'TOsAf': 'delete',\n        'zzrKd': 'deleteFirst',\n        'WrPZM': 'deleteLast'\n    };\n    const cmd = x['split']('\\x20');\n    switch (cmd[0x0]) {\n    case mZqLLz['EeNUo']:\n        mZqLLz['nyRhN'](insert, acc, mZqLLz['nnEob'](parseInt, cmd[0x1]));\n        break;\n    case mZqLLz['TOsAf']:\n        del(acc, parseInt(cmd[0x1]));\n        break;\n    case mZqLLz['zzrKd']:\n        mZqLLz['nnEob'](delFirst, acc);\n        break;\n    case mZqLLz['WrPZM']:\n        delLast(acc);\n        break;\n    }\n    return acc;\n}, [])['map'](x => x['toString']())['join']('\\x20');\nconsole['log'](ans);", "test_cases": [["7\ninsert 5\ninsert 2\ninsert 3\ninsert 1\ndelete 3\ninsert 6\ndelete 5", "6 1 2"], ["9\ninsert 5\ninsert 2\ninsert 3\ninsert 1\ndelete 3\ninsert 6\ndelete 5\ndeleteFirst\ndeleteLast", "1"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nconst insert = (arr, x) => arr.unshift(x);\nconst del = (arr, x) => {\n    for (var i = 0; i < arr.length; i++) {\n        if (x === arr[i]) break;\n    }\n    if (i !== arr.length) arr.splice(i, 1);\n};\nconst delFirst = arr => arr.shift();\nconst delLast = arr => arr.pop();\n\nconst cmds = line.slice(1);\nconst ans = cmds.reduce((acc, x) => {\n    const cmd = x.split(' ');\n    switch (cmd[0]) {\n        case 'insert':\n            insert(acc, parseInt(cmd[1]));\n            break;\n        case 'delete':\n            del(acc, parseInt(cmd[1]));\n            break;\n        case 'deleteFirst':\n            delFirst(acc);\n            break;\n        case 'deleteLast':\n            delLast(acc);\n            break;\n    }\n\n    return acc;\n}, []).map(x => x.toString()).join(' ');\n\nconsole.log(ans);\n\n", "language": "JavaScript"}
{"filename": "p02413_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var ripWek = {\n        'ROAYI': function (x, y) {\n            return x + y;\n        },\n        'TjIyq': '4|0|1|5|2|3',\n        'MtugF': function (x, y) {\n            return x < y;\n        }\n    };\n    function sumLine(a, b) {\n        return ripWek['ROAYI'](a, b);\n    }\n    function result(matrix) {\n        var rxErwC = ripWek['TjIyq']['split']('|');\n        var ncGAST = 0x0;\n        while (!![]) {\n            switch (rxErwC[ncGAST++]) {\n            case '0':\n                matrix['map'](function (v) {\n                    return v['push'](v['reduce'](sumLine));\n                });\n                continue;\n            case '1':\n                var sumColumn = [];\n                continue;\n            case '2':\n                matrix['push'](sumColumn);\n                continue;\n            case '3':\n                return matrix['join']('\\x0a')['replace'](/,/g, '\\x20');\n            case '4':\n                var size = matrix['shift']();\n                continue;\n            case '5':\n                for (var i = 0x0; ripWek['MtugF'](i, size[0x1] + 0x1); i++) {\n                    var sumValue = 0x0;\n                    for (var j = 0x0; j < size[0x0]; j++) {\n                        sumValue += matrix[j][i];\n                    }\n                    sumColumn['push'](sumValue);\n                }\n                continue;\n            }\n            break;\n        }\n    }\n    var inputs = stdin['toString']()['trim']()['split']('\\x0a');\n    var sheet = inputs['map'](function (v) {\n        return v['split']('\\x20')['map'](Number);\n    });\n    console['log'](result(sheet));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4 5\n1 1 3 4 5\n2 2 2 4 5\n3 3 0 1 1\n2 3 4 4 6", "1 1 3 4 5 14\n2 2 2 4 5 15\n3 3 0 1 1 8\n2 3 4 4 6 19\n8 9 9 13 17 56"]], "original": "'use strict';\n(function(stdin) {\n  //declare function\n  function sumLine(a, b) {\n    return a + b;\n  }\n\n  function result(matrix) {\n    var size = matrix.shift();\n    matrix.map(function(v) {\n      return v.push(v.reduce(sumLine));\n    });\n    var sumColumn = [];\n    for (var i = 0; i < size[1] + 1; i++) {\n      var sumValue = 0;\n      for (var j = 0; j < size[0]; j++) {\n        sumValue += matrix[j][i];\n      }\n      sumColumn.push(sumValue);\n    }\n    matrix.push(sumColumn);\n    return matrix.join('\\n').replace(/,/g, ' ');\n  }\n  //declare variable\n  var inputs = stdin.toString().trim().split('\\n');\n  var sheet = inputs.map(function(v) {\n    return v.split(' ').map(Number);\n  });\n  //main\n\n  //display\n  console.log(result(sheet));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02553_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar t = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var nCaepQ = {\n        'XZhfe': '10|0|1|6|5|13|12|7|3|9|11|2|8|4',\n        'cBGwC': function (callee, param1) {\n            return callee(param1);\n        },\n        'QzRnx': function (callee, param1) {\n            return callee(param1);\n        },\n        'GDUBP': function (x, y) {\n            return x * y;\n        },\n        'JtgYt': function (x, y) {\n            return x * y;\n        }\n    };\n    var UkyJYy = nCaepQ['XZhfe']['split']('|');\n    var nhSzYO = 0x0;\n    while (!![]) {\n        switch (UkyJYy[nhSzYO++]) {\n        case '0':\n            var a = nCaepQ['cBGwC'](parseInt, x[0x0]);\n            continue;\n        case '1':\n            var b = nCaepQ['QzRnx'](parseInt, x[0x1]);\n            continue;\n        case '2':\n            t['push'](bc);\n            continue;\n        case '3':\n            var bd = nCaepQ['GDUBP'](b, d);\n            continue;\n        case '4':\n            console['log'](Math['max']['apply'](null, t));\n            continue;\n        case '5':\n            var d = parseInt(x[0x3]);\n            continue;\n        case '6':\n            var c = parseInt(x[0x2]);\n            continue;\n        case '7':\n            var bc = b * c;\n            continue;\n        case '8':\n            t['push'](bd);\n            continue;\n        case '9':\n            t['push'](ac);\n            continue;\n        case '10':\n            var x = lines[0x0]['split']('\\x20');\n            continue;\n        case '11':\n            t['push'](ad);\n            continue;\n        case '12':\n            var ad = a * d;\n            continue;\n        case '13':\n            var ac = nCaepQ['JtgYt'](a, c);\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["1 2 1 1", "2"], ["3 5 -4 -2", "-6"], ["-1000000000 0 -1000000000 0", "1000000000000000000"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar lines = [];\nvar t = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var x = lines[0].split(' ');\n  var a = parseInt(x[0]);\n  var b= parseInt(x[1]);\n  var c = parseInt(x[2]);\n  var d = parseInt(x[3]);\n  var ac = a * c;\n  var ad = a * d;\n  var bc = b * c;\n  var bd = b * d;\n  t.push(ac);\n  t.push(ad);\n  t.push(bc);\n  t.push(bd);\n  console.log(Math.max.apply(null,t));\n});", "language": "JavaScript"}
{"filename": "p02576_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const WpmUrG = {\n        'VzEiM': function (callee, param1) {\n            return callee(param1);\n        },\n        'fhdfz': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['trim']()['split']('\\x20');\n    const N = WpmUrG['VzEiM'](Number, input[0x0]);\n    const X = WpmUrG['fhdfz'](Number, input[0x1]);\n    const T = Number(input[0x2]);\n    let ans = 0x0;\n    let i;\n    for (i = 0x0; ans < N; i++) {\n        ans += X;\n    }\n    console['log'](T * i);\n}\nfunction numberSort(array) {\n    array['sort'](f);\n    return array;\n}\nvar f = function (a, b) {\n    const eeIChv = {\n        'WnuEx': function (x, y) {\n            return x - y;\n        }\n    };\n    return eeIChv['WnuEx'](a, b);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["20 12 6", "12"], ["1000 1 1000", "1000000"]], "original": "\"use strict\";\n\nfunction main(input) {\n  input = input.trim().split(\" \");\n  const N = Number(input[0]);\n  const X = Number(input[1]);\n  const T = Number(input[2]);\n  let ans = 0;\n\n  let i;\n  for (i = 0; ans < N; i++) {\n    ans += X;\n  }\n\n  console.log(T * i);\n}\n\nfunction numberSort(array) {\n  array.sort(f);\n  return array;\n}\n\nvar f = function (a, b) {\n  return a - b;\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02614_1", "type": "JavaScript", "obfuscated": "const fs = require('fs');\nconst [h, w, k, ...m] = fs['readFileSync']('/dev/stdin', 'utf8')['split'](/\\s/);\nfunction solve(m, x = 0x0, y = 0x0, f) {\n    const ktJmDH = {\n        'UAUgj': function (x, y) {\n            return x === y;\n        },\n        'sCpXo': function (x, y) {\n            return x < y;\n        },\n        'RpmHV': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'QoKNW': function (x, y) {\n            return x + y;\n        }\n    };\n    if (ktJmDH['UAUgj'](m['length'], 0x0) || m[0x0]['length'] === 0x0) {\n        return 0x0;\n    }\n    const n = m['join']('')['replace'](/\\./g, '')['length'];\n    let a = 0x0;\n    if (n == k) {\n        a++;\n    }\n    if (ktJmDH['sCpXo'](n, k)) {\n        return a;\n    }\n    if (!f) {\n        for (let i = y; i < m['length']; i++) {\n            a += ktJmDH['RpmHV'](solve, [\n                ...m['slice'](0x0, i),\n                ...m['slice'](ktJmDH['QoKNW'](i, 0x1))\n            ], x, i < y ? y : i);\n        }\n    }\n    for (let i = x; ktJmDH['sCpXo'](i, m[0x0]['length']); i++) {\n        a += solve(m['map'](l => l['slice'](0x0, i) + l['slice'](i + 0x1)), i < x ? x : i, y, !![]);\n    }\n    return a;\n}\nconsole['log'](solve(m));", "test_cases": [["2 3 2\n..#\n###", "5"], ["2 3 4\n..#\n###", "1"], ["2 2 3\n##\n##", "0"], ["6 6 8\n..##..\n.#..#.\n#....#\n######\n#....#\n#....#", "208"]], "original": "const fs = require('fs');\nconst [h, w, k, ...m] = fs.readFileSync('/dev/stdin', 'utf8').split(/\\s/);\n\nfunction solve(m, x=0, y=0, f) {\n  if (m.length === 0 || m[0].length === 0) {\n    return 0;\n  }\n  const n = m.join('').replace(/\\./g, '').length;\n  let a = 0;\n  if (n == k) {\n    a++;\n  }\n  if (n < k) {\n\t  return a;\n  }\n  if (!f) {\n    for (let i = y; i < m.length; i++) {\n      a += solve([...m.slice(0, i), ...m.slice(i + 1)], x, i < y ? y : i);\n    }\n  }\n  for (let i = x; i < m[0].length; i++) {\n    a += solve(m.map(l => l.slice(0, i) + l.slice(i + 1)), i < x ? x : i, y, true);\n  }\n  return a;\n}\n\nconsole.log(solve(m));", "language": "JavaScript"}
{"filename": "p02627_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var aZBNPo = {\n        'Oubvw': function (x, y) {\n            return x == y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var answer = input[0x0];\n    var answerA = input[0x0]['toUpperCase']();\n    if (aZBNPo['Oubvw'](answer, answerA)) {\n        console['log']('A');\n    } else {\n        console['log']('a');\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["B", "A"], ["a", "a"]], "original": "function main(input){\n\tinput=input.split(\"\\n\");\nvar answer=input[0];\nvar answerA=input[0].toUpperCase();\n\nif(answer==answerA){console.log(\"A\")}else{console.log(\"a\")}\n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02684_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const pZMPlX = {\n        'ZRipa': function (callee, param1) {\n            return callee(param1);\n        },\n        'jxbci': function (x, y) {\n            return x > y;\n        },\n        'VkLbx': function (x, y) {\n            return x - y;\n        },\n        'tMmpC': function (callee, param1) {\n            return callee(param1);\n        },\n        'kHVaz': function (x, y) {\n            return x == y;\n        }\n    };\n    const lines = input['trim']()['split']('\\x0a');\n    let [n, k] = lines[0x0]['split']('\\x20');\n    n = +n;\n    k = pZMPlX['ZRipa'](BigInt, k);\n    const towns = lines[0x1]['split']('\\x20')['map'](Number);\n    const visited = new Map();\n    let pos = 0x1;\n    while (pZMPlX['jxbci'](k, 0x0)) {\n        const i = visited['get'](pos);\n        if (!i) {\n            visited['set'](pos, BigInt(visited['size']));\n            pos = towns[pZMPlX['VkLbx'](pos, 0x1)];\n            k--;\n        } else {\n            const cycle = pZMPlX['tMmpC'](BigInt, visited['size']) - i;\n            const rest = k % cycle;\n            for (let [key, value] of visited) {\n                if (pZMPlX['kHVaz'](value, i + rest)) {\n                    pos = key;\n                    break;\n                }\n            }\n            k = 0x0;\n        }\n    }\n    console['log'](pos);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5\n3 2 4 1", "4"], ["6 727202214173249351\n6 5 2 5 3 2", "2"]], "original": "function main(input) {\n  const lines = input.trim().split(\"\\n\");\n  let [n, k] = lines[0].split(' ');\n  n = +n;\n  k = BigInt(k);\n  const towns = lines[1].split(' ').map(Number);\n\n  const visited = new Map();\n  let pos = 1;\n  while (k > 0) {\n    const i = visited.get(pos);\n    if (!i) {\n      visited.set(pos, BigInt(visited.size));\n      pos = towns[pos - 1];\n      k--;\n    } else {\n      const cycle = BigInt(visited.size) - i;\n      const rest = k % cycle;\n      for (let [key, value] of visited) {\n        if (value == i + rest) {\n          pos = key;\n          break;\n        }\n      }\n      k = 0;\n    }\n  }\n  \n  console.log(pos);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02730_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst is_palindrome = s => {\n    const WruCoL = {\n        'rWWBA': function (x, y) {\n            return x < y;\n        },\n        'zExLW': function (x, y) {\n            return x !== y;\n        },\n        'ZBBHK': function (x, y) {\n            return x - y;\n        }\n    };\n    let n = s['length'];\n    for (let i = 0x0; WruCoL['rWWBA'](i, n); i++) {\n        if (WruCoL['zExLW'](s[i], s[WruCoL['ZBBHK'](n - i, 0x1)]))\n            return ![];\n    }\n    return !![];\n};\nconst main = input => {\n    const JVHWuA = {\n        'bawvm': function (callee, param1) {\n            return callee(param1);\n        },\n        'NbzEr': function (callee, param1) {\n            return callee(param1);\n        },\n        'xTOzJ': function (x, y) {\n            return x - y;\n        },\n        'ADWMq': function (x, y) {\n            return x + y;\n        },\n        'LTxAk': 'Yes'\n    };\n    const spi = input['split']('\\x0a');\n    const s = spi[0x0];\n    const n = s['length'];\n    if (JVHWuA['bawvm'](is_palindrome, s) && JVHWuA['NbzEr'](is_palindrome, s['substring'](0x0, JVHWuA['xTOzJ'](n, 0x1) / 0x2)) && JVHWuA['NbzEr'](is_palindrome, s['substr'](JVHWuA['ADWMq'](n, 0x3) / 0x2 - 0x1)))\n        console['log'](JVHWuA['LTxAk']);\n    else\n        console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["akasaka", "Yes"], ["level", "No"], ["atcoder", "No"]], "original": "\"use strict\";\n\nconst is_palindrome = s => {\n    let n = s.length;\n    for (let i = 0; i < n; i++) {\n        if (s[i] !== s[n - i - 1]) return false;\n    }\n\n    return true;\n}\n\nconst main = (input) => {\n    const spi = input.split('\\n');\n    const s = spi[0];\n    const n = s.length;\n\n    if (is_palindrome(s)\n        && is_palindrome(s.substring(0, (n-1)/2))\n        && is_palindrome(s.substr((n+3)/2-1)))\n        console.log(\"Yes\");\n    else\n        console.log(\"No\");\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02742_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const RKfMny = {\n        'DWosr': function (callee, param1) {\n            return callee(param1);\n        },\n        'bFOnO': function (x, y) {\n            return x != y;\n        },\n        'sZSSE': function (x, y) {\n            return x % y;\n        },\n        'RnIRX': function (x, y) {\n            return x % y;\n        },\n        'xrtPD': function (x, y) {\n            return x / y;\n        },\n        'ANPiR': function (x, y) {\n            return x * y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x20');\n    const H = parseInt(tmp[0x0]);\n    const W = RKfMny['DWosr'](parseInt, tmp[0x1]);\n    let result = 0x0;\n    if (RKfMny['bFOnO'](RKfMny['sZSSE'](H, 0x2), 0x0) && RKfMny['bFOnO'](RKfMny['RnIRX'](W, 0x2), 0x0)) {\n        result = Math['ceil'](RKfMny['xrtPD'](RKfMny['ANPiR'](H, W), 0x2));\n    } else {\n        result = RKfMny['xrtPD'](H * W, 0x2);\n    }\n    console['log'](result);\n    return result;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5", "10"], ["7 3", "11"], ["1000000000 1000000000", "500000000000000000"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split(' ')\n  const H = parseInt(tmp[0])\n  const W = parseInt(tmp[1])\n\n  let result = 0\n\n  if ((H % 2) != 0 && (W % 2) != 0) {\n    result = Math.ceil(H * W / 2)\n  } else {\n    result = H * W / 2\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02777_1", "type": "JavaScript", "obfuscated": "function Main(impu) {\n    const ShigJW = {\n        'GvRsC': function (x, y) {\n            return x === y;\n        },\n        'ZbWBB': function (x, y) {\n            return x + y;\n        }\n    };\n    let imput = impu['split']('\\x0a');\n    let name = imput[0x0]['split']('\\x20');\n    let count = imput[0x1]['split']('\\x20');\n    if (ShigJW['GvRsC'](name[0x0], imput[0x2]))\n        count[0x0]--;\n    else\n        count[0x1]--;\n    console['log'](ShigJW['ZbWBB'](count[0x0] + '\\x20', count[0x1]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["red blue\n3 4\nred", "2 4"], ["red blue\n5 5\nblue", "5 4"]], "original": "function Main(impu) {\n\tlet imput = impu.split(\"\\n\");\n\tlet name = imput[0].split(\" \");\n\tlet count = imput[1].split(\" \");\n\t\n\tif(name[0] === imput[2]) \n\t\tcount[0]--;\n\telse\n\t\tcount[1]--;\n\t\n\tconsole.log(count[0] + \" \" + count[1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02818_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(inputs) {\n    const xEmetO = {\n        'pbwIn': function (callee, param1) {\n            return callee(param1);\n        },\n        'ueBMj': function (callee, param1) {\n            return callee(param1);\n        },\n        'OXORu': function (callee, param1) {\n            return callee(param1);\n        },\n        'DEgxn': function (x, y) {\n            return x - y;\n        },\n        'jZzii': function (x, y) {\n            return x + y;\n        }\n    };\n    const input = inputs['split']('\\x0a');\n    const a = xEmetO['pbwIn'](Number, input[0x0]['split']('\\x20')[0x0]);\n    const b = xEmetO['ueBMj'](Number, input[0x0]['split']('\\x20')[0x1]);\n    const k = xEmetO['OXORu'](Number, input[0x0]['split']('\\x20')[0x2]);\n    console['log'](a > k ? xEmetO['DEgxn'](a, k) : 0x0, xEmetO['jZzii'](a, b) > k ? a + b - k : 0x0);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 3", "0 2"], ["500000000000 500000000000 1000000000000", "0 0"]], "original": "'use strict';\nfunction Main(inputs) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  const input = inputs.split(\"\\n\");\n  const a = Number(input[0].split(' ')[0]);\n  const b = Number(input[0].split(' ')[1]);\n  const k = Number(input[0].split(' ')[2]);\n\n  console.log((a > k ? a - k : 0), (a + b > k ? a + b - k : 0));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02832_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var zxhZVi = {\n        'STxTR': function (x, y) {\n            return x * y;\n        },\n        'eNkQH': function (x, y) {\n            return x + y;\n        },\n        'WNZnc': function (x, y) {\n            return x < y;\n        },\n        'BDCvm': function (x, y) {\n            return x == y;\n        },\n        'NobTJ': function (x, y) {\n            return x - y;\n        },\n        'gEBsM': function (x, y) {\n            return x - y;\n        },\n        'nYHrw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var count = lines[0x0];\n    var ary = lines[0x1]['split']('\\x20')['map'](x => Number(x));\n    var break_count = 0x0;\n    var tmp_count = 0x1;\n    var c = 0x0;\n    for (var i = 0x0; zxhZVi['WNZnc'](i, count); i++) {\n        if (zxhZVi['BDCvm'](ary[zxhZVi['NobTJ'](tmp_count, 0x1)], tmp_count)) {\n            c += tmp_count;\n            tmp_count++;\n        } else {\n            break_count++;\n            ary['splice'](zxhZVi['gEBsM'](tmp_count, 0x1), 0x1);\n        }\n    }\n    var judge = ![];\n    if (zxhZVi['BDCvm'](ary['length'], 0x0)) {\n        judge = !![];\n    }\n    if (zxhZVi['nYHrw'](sum, ary['length']) != c) {\n        judge = !![];\n    }\n    if (zxhZVi['BDCvm'](break_count, 0x0) && judge) {\n        console['log'](0x0);\n    } else {\n        if (judge) {\n            console['log'](-0x1);\n        } else {\n            console['log'](break_count);\n        }\n    }\n    function sum(n) {\n        return zxhZVi['STxTR'](zxhZVi['STxTR'](n, zxhZVi['eNkQH'](n, 0x1)), 0.5);\n    }\n});", "test_cases": [["3\n2 1 2", "1"], ["3\n2 2 2", "-1"], ["10\n3 1 4 1 5 9 2 6 5 3", "7"], ["1\n1", "0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n  var count = lines[0]\n  var ary = lines[1].split(\" \").map( x => Number(x) )\n  var break_count = 0\n  // 1から開始\n  var tmp_count = 1\n  var c = 0\n  for(var i = 0; i < count; i++) {\n    if (ary[tmp_count - 1] == tmp_count) {\n      c+=tmp_count\n      tmp_count++\n    } else {\n      break_count++\n      ary.splice(tmp_count - 1, 1)\n    }\n  }\n  // 順列になっているか\n  var judge = false\n  if (ary.length == 0) {\n    judge = true\n  }\n  if (sum(ary.length) != c) {\n    judge = true\n  }\n\n  // 順列になっているかつ 0 の時は0\n  if (break_count == 0 && judge) {\n    console.log(0)\n  } else {\n    if (judge) {\n      console.log(-1)\n    } else {\n      console.log(break_count)\n    }\n  }\n  \n  // 1~nの総和を求める関数\n  function sum(n) {\n    return (n * (n + 1) * 0.5)\n  }\n});\n", "language": "JavaScript"}
{"filename": "p02847_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var NiLWsq = {\n        'qrStj': 'SUN',\n        'vFmak': 'TUE',\n        'laliG': 'WED',\n        'dTwHO': 'THU',\n        'NSmcU': 'FRI',\n        'gkMft': 'SAT'\n    };\n    var result;\n    switch (input) {\n    case NiLWsq['qrStj']:\n        result = '7';\n        break;\n    case 'MON':\n        result = '6';\n        break;\n    case NiLWsq['vFmak']:\n        result = '5';\n        break;\n    case NiLWsq['laliG']:\n        result = '4';\n        break;\n    case NiLWsq['dTwHO']:\n        result = '3';\n        break;\n    case NiLWsq['NSmcU']:\n        result = '2';\n        break;\n    case NiLWsq['gkMft']:\n        result = '1';\n        break;\n    }\n    console['log'](result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["SAT", "1"], ["SUN", "7"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n  \tvar result;\n  \tswitch (input){\n        case 'SUN':\n        result = '7';\n        break;\n        case 'MON':\n        result = '6';\n        break;\n        case 'TUE':\n        result = '5';\n        break;\n        case 'WED':\n        result = '4';\n        break;\n        case 'THU':\n        result = '3';\n        break;\n        case 'FRI':\n        result = '2';\n        break;\n        case 'SAT':\n        result = '1';\n        break;\n    }\n\tconsole.log(result);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02886_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var pUYyNr = {\n        'JpJEV': function (callee, param1) {\n            return callee(param1);\n        },\n        'LnZAt': function (x, y) {\n            return x + y;\n        },\n        'OcyfT': function (x, y) {\n            return x < y;\n        },\n        'KQnuY': function (x, y) {\n            return x * y;\n        }\n    };\n    var input = input['split']('\\x0a');\n    const n = pUYyNr['JpJEV'](Number, input[0x0]);\n    const ocps = input[0x1]['split']('\\x20')['map'](ocp => Number(ocp));\n    var r = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = pUYyNr['LnZAt'](i, 0x1); pUYyNr['OcyfT'](j, n); j++) {\n            r += pUYyNr['KQnuY'](ocps[i], ocps[j]);\n        }\n    }\n    console['log'](r);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n3 1 2", "11"], ["7\n5 0 7 8 3 3 2", "312"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var input = input.split('\\n');\n  const n = Number(input[0])\n  const ocps = input[1].split(' ').map(ocp => Number(ocp));\n  var r = 0;\n  for (var i = 0; i < n; i++) {\n    for (var j = i+1; j < n; j++) {\n      r += ocps[i] * ocps[j]\n    }\n  }\n  console.log(r)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02887_1", "type": "JavaScript", "obfuscated": "function main(arg) {\n    var qJJHra = {\n        'VcXQk': '0|2|1|3|4',\n        'sifMX': 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n        'fpwji': function (x, y) {\n            return x < y;\n        },\n        'syZIp': function (x, y) {\n            return x + y;\n        }\n    };\n    var BzdVKo = qJJHra['VcXQk']['split']('|');\n    var QDKOHH = 0x0;\n    while (!![]) {\n        switch (BzdVKo[QDKOHH++]) {\n        case '0':\n            var arg2 = arg['split'](/\\n/g);\n            continue;\n        case '1':\n            var alphabet = qJJHra['sifMX'];\n            continue;\n        case '2':\n            var honbun = arg2[0x1];\n            continue;\n        case '3':\n            for (i = 0x0; qJJHra['fpwji'](i, alphabet['length']); i++) {\n                var iro = alphabet['substr'](i, 0x1);\n                var regkun = new RegExp(qJJHra['syZIp'](iro, '+'), 'g');\n                honbun = honbun['replace'](regkun, iro);\n            }\n            continue;\n        case '4':\n            console['log'](honbun['length']);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10\naabbbbaaca", "5"], ["5\naaaaa", "1"], ["20\nxxzaffeeeeddfkkkkllq", "10"]], "original": "function main(arg) {\n    var arg2 = arg.split(/\\n/g);\n\tvar honbun = arg2[1];\n\tvar alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\tfor(i=0;i<alphabet.length;i++){\n\t\tvar iro = alphabet.substr(i,1);\n\t\tvar regkun = new RegExp(iro+\"+\", 'g');\n\t\thonbun = honbun.replace(regkun,iro);\n\t}\n\tconsole.log(honbun.length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02922_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const wPpbSW = {\n        'HjwtZ': function (x, y) {\n            return x < y;\n        },\n        'PxcnX': function (x, y) {\n            return x * y;\n        },\n        'HcUKk': function (x, y) {\n            return x - y;\n        }\n    };\n    let xs = input['trim']()['split']('\\x20')['map'](v => parseInt(v, 0xa));\n    let a = xs[0x0];\n    let b = xs[0x1];\n    let ans = 0x1;\n    if (a >= b) {\n        ans = 0x1;\n    } else {\n        for (let i = 0x1; wPpbSW['HjwtZ'](wPpbSW['PxcnX'](wPpbSW['HcUKk'](a, 0x1), i) + 0x1, b); i++) {\n            ans += 0x1;\n        }\n    }\n    console['log'](ans);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 10", "3"], ["8 9", "2"], ["8 8", "1"]], "original": "\"use strict\"\nconst Main = (input) =>{\n\tlet xs = input.trim().split(' ').map(v=>parseInt(v,10));\n    let a = xs[0];\n    let b = xs[1];\n    let ans = 1;\n    if(a >= b){\n    ans = 1;\n    }else{ \n    \tfor(let i = 1; (a-1)*i+1 < b; i++){\n    \tans += 1;\n    \t}\n    }\n    console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p02946_1", "type": "JavaScript", "obfuscated": "var input = '\\x0a3\\x207\\x0a';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar k = arr[0x0]['split']('\\x20')[0x0] - 0x0;\nvar x = arr[0x0]['split']('\\x20')[0x1] - 0x0;\nvar a = [];\nfor (var i = x - k + 0x1; i < x + k; i++)\n    a['push'](i);\nconsole['log'](a['join']('\\x20'));", "test_cases": [["3 7", "5 6 7 8 9"], ["4 0", "-3 -2 -1 0 1 2 3"], ["1 100", "100"]], "original": "var input=`\n3 7\n`;\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar k=arr[0].split(\" \")[0]-0;\nvar x=arr[0].split(\" \")[1]-0;\nvar a=[];\nfor(var i=x-k+1;i<x+k;i++)a.push(i);\nconsole.log(a.join(\" \"));", "language": "JavaScript"}
{"filename": "p02947_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const aSmWpP = {\n        'RQcfV': function (x, y) {\n            return x < y;\n        },\n        'jfzKx': function (x, y) {\n            return x + y;\n        }\n    };\n    const list = input['split']('\\x0a')['slice'](0x1)['map'](s => Array['from'](s)['sort']()['join'](''));\n    let totalCount = 0x0;\n    const map = new Map();\n    for (let i = 0x0; aSmWpP['RQcfV'](i, list['length']); i++) {\n        if (!map['has'](list[i])) {\n            map['set'](list[i], 0x1);\n            continue;\n        }\n        totalCount += map['get'](list[i]);\n        map['set'](list[i], aSmWpP['jfzKx'](map['get'](list[i]), 0x1));\n    }\n    console['log'](totalCount);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\nacornistnt\npeanutbomb\nconstraint", "1"], ["2\noneplustwo\nninemodsix", "0"], ["5\nabaaaaaaaa\noneplustwo\naaaaaaaaba\ntwoplusone\naaaabaaaaa", "4"]], "original": "function main(input) {\n  const list = input.split(\"\\n\")\n    .slice(1)\n    .map(s => Array.from(s).sort().join(''))\n\n  let totalCount = 0\n  const map = new Map()\n  for (let i = 0; i < list.length; i++) {\n    if (!map.has(list[i])) {\n      map.set(list[i], 1)\n      continue;\n    }\n    totalCount += map.get(list[i])\n    map.set(list[i], map.get(list[i]) + 1)\n  }\n\n  console.log(totalCount)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02996_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const gJDnSs = {\n        'jgFgi': function (x, y) {\n            return x < y;\n        },\n        'oghKb': function (x, y) {\n            return x < y;\n        },\n        'dmRnS': function (x, y) {\n            return x > y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = parseInt(lines['shift']());\n    const tasks = [];\n    for (let i = 0x0; gJDnSs['jgFgi'](i, N); i++) {\n        tasks['push'](lines[i]['split']('\\x20')['map'](x => parseInt(x)));\n    }\n    tasks['sort']((a, b) => a[0x1] - b[0x1]);\n    let result = 'Yes';\n    let sum = 0x0;\n    for (let i = 0x0; gJDnSs['oghKb'](i, N); i++) {\n        sum += tasks[i][0x0];\n        if (gJDnSs['dmRnS'](sum, tasks[i][0x1])) {\n            result = 'No';\n            break;\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n2 4\n1 9\n1 8\n4 9\n3 12", "Yes"], ["3\n334 1000\n334 1000\n334 1000", "No"], ["30\n384 8895\n1725 9791\n170 1024\n4 11105\n2 6\n578 1815\n702 3352\n143 5141\n1420 6980\n24 1602\n849 999\n76 7586\n85 5570\n444 4991\n719 11090\n470 10708\n1137 4547\n455 9003\n110 9901\n15 8578\n368 3692\n104 1286\n3 4\n366 12143\n7 6649\n610 2374\n152 7324\n4 7042\n292 11386\n334 5720", "Yes"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = parseInt(lines.shift());\n  const tasks = []\n  for(let i=0;i<N;i++){\n    tasks.push( lines[i].split(' ').map( x => parseInt(x) ) );\n  }\n\n  tasks.sort( (a,b) => a[1]-b[1])\n\n  let result = 'Yes';\n  let sum = 0\n  for(let i=0;i<N;i++){\n    sum += tasks[i][0]\n    if(sum > tasks[i][1]){\n      result = 'No';\n      break;\n    }\n  }\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03029_1", "type": "JavaScript", "obfuscated": "(stdin => {\n    var GIsmBg = {\n        'aGEFM': function (x, y) {\n            return x / y;\n        },\n        'ijrtw': function (x, y) {\n            return x * y;\n        }\n    };\n    var lines = stdin['trim']()['split']('\\x0a');\n    var inputs = lines['shift']()['split']('\\x20')['map'](Number);\n    console['log'](Math['floor'](GIsmBg['aGEFM'](GIsmBg['ijrtw'](inputs[0x0], 0x3) + inputs[0x1], 0x2)));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 3", "3"], ["0 1", "0"], ["32 21", "58"]], "original": "((stdin) => {\n  var lines = stdin.trim().split('\\n');\n  var inputs = lines.shift().split(' ').map(Number);\n  console.log(Math.floor((inputs[0] * 3 + inputs[1]) / 2));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03035_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const PeiMZs = {\n        'mzzYZ': function (x, y) {\n            return x >= y;\n        },\n        'CYRys': function (x, y) {\n            return x / y;\n        }\n    };\n    const nums = input['split']('\\x20')['map'](num => parseInt(num, 0xa));\n    console['log'](PeiMZs['mzzYZ'](nums[0x0], 0xd) ? nums[0x1] : nums[0x0] >= 0x6 ? PeiMZs['CYRys'](nums[0x1], 0x2) : 0x0);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["30 100", "100"], ["12 100", "50"], ["0 100", "0"]], "original": "function main(input) {\n  const nums = input.split(\" \").map(num => parseInt(num, 10))\n  console.log(nums[0] >= 13 ? nums[1] : nums[0] >= 6 ? nums[1] / 2 : 0)\n}\n \nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03059_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var NDhLFk = {\n        'VmoZB': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'rFPac': function (x, y) {\n            return x * y;\n        },\n        'YBqQF': function (x, y) {\n            return x / y;\n        },\n        'ADtUY': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x20');\n    var a = parseInt(input[0x0], 0xa);\n    var b = NDhLFk['VmoZB'](parseInt, input[0x1], 0xa);\n    var t = parseInt(input[0x2], 0xa);\n    console['log']('%d', NDhLFk['rFPac'](Math['floor'](NDhLFk['YBqQF'](NDhLFk['ADtUY'](t, 0.5), a)), b));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 5 7", "10"], ["3 2 9", "6"], ["20 20 19", "0"]], "original": "function Main(input) {\n  input = input.split(\" \");\n  var a = parseInt(input[0], 10);\n  var b = parseInt(input[1], 10);\n  var t = parseInt(input[2], 10);\n  console.log('%d',Math.floor((t + 0.5) / a) * b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03062_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var ooMwyr = {\n        'obMnT': function (x, y) {\n            return x < y;\n        },\n        'kiQmF': function (x, y) {\n            return x == y;\n        },\n        'TcUBB': function (x, y) {\n            return x * y;\n        },\n        'SvUOV': function (x, y) {\n            return x + y;\n        },\n        'InhjB': function (x, y) {\n            return x - y;\n        },\n        'bsbZX': function (x, y) {\n            return x - y;\n        },\n        'ksBQL': function (x, y) {\n            return x - y;\n        },\n        'paMwV': function (x, y) {\n            return x - y;\n        }\n    };\n    const formatted_input = input['split']('\\x0a');\n    const N = parseInt(formatted_input[0x0], 0xa);\n    const As = formatted_input[0x1]['split']('\\x20')['map'](x => parseInt(x));\n    dp = [];\n    for (var i = 0x0; ooMwyr['obMnT'](i, N); i++) {\n        var results = [];\n        if (ooMwyr['kiQmF'](i, 0x0)) {\n            results = [\n                As[i],\n                ooMwyr['TcUBB'](As[i], -0x1)\n            ];\n        } else {\n            var not_flipped = Math['max'](ooMwyr['SvUOV'](dp[ooMwyr['InhjB'](i, 0x1)][0x0], As[i]), ooMwyr['bsbZX'](dp[ooMwyr['ksBQL'](i, 0x1)][0x1], As[i]));\n            var flipped = Math['max'](ooMwyr['bsbZX'](dp[i - 0x1][0x0], As[i]), ooMwyr['SvUOV'](dp[ooMwyr['paMwV'](i, 0x1)][0x1], As[i]));\n            results = [\n                not_flipped,\n                flipped\n            ];\n        }\n        dp['push'](results);\n    }\n    console['log'](dp[ooMwyr['InhjB'](N, 0x1)][0x0]);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n-10 5 -4", "19"], ["5\n10 -4 -8 -11 3", "30"], ["11\n-1000000000 1000000000 -1000000000 1000000000 -1000000000 0 1000000000 -1000000000 1000000000 -1000000000 1000000000", "10000000000"]], "original": "function main(input) {\n  const formatted_input = input.split('\\n');\n\n  const N = parseInt(formatted_input[0], 10);\n  const As = formatted_input[1].split(' ').map(x => parseInt(x));\n\n  dp = [];\n\n  for(var i=0;i<N;i++){\n    var results = [];\n    if(i==0){\n      results=[As[i], As[i]*-1]\n    }else{\n      var not_flipped = Math.max(dp[i-1][0] + As[i], dp[i-1][1] - As[i]);\n      var flipped = Math.max(dp[i-1][0] - As[i], dp[i-1][1] + As[i]);\n      results = [not_flipped, flipped]\n    }\n    dp.push(results);\n  }\n\n  //console.log(dp);\n  console.log(dp[N-1][0]);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n\n", "language": "JavaScript"}
{"filename": "p03081_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var mrHoLb = {\n        'pvCIg': function (x, y) {\n            return x < y;\n        },\n        'ZsJMF': '4|3|0|1|2',\n        'BawLi': function (x, y) {\n            return x == y;\n        },\n        'QWXDH': function (x, y) {\n            return x < y;\n        },\n        'LCkhO': function (x, y) {\n            return x != y;\n        },\n        'fmpLg': function (x, y) {\n            return x == y;\n        },\n        'GDfrP': function (x, y) {\n            return x - y;\n        },\n        'GZxqt': function (x, y) {\n            return x != y;\n        },\n        'XBRxC': function (x, y) {\n            return x == y;\n        },\n        'PLcem': function (x, y) {\n            return x + y;\n        }\n    };\n    var ary = [];\n    for (var i = 0x0; mrHoLb['pvCIg'](i, input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]); i++) {\n        ary['push'](0x1);\n    }\n    var str = input['split']('\\x0a')[0x1];\n    for (var i = 0x2; mrHoLb['pvCIg'](i, input['split']('\\x0a')['length']); i++) {\n        var Upcjpu = mrHoLb['ZsJMF']['split']('|');\n        var qOFdcS = 0x0;\n        while (!![]) {\n            switch (Upcjpu[qOFdcS++]) {\n            case '0':\n                for (var j = 0x0; mrHoLb['pvCIg'](j, ary['length']); j++) {\n                    newAry['push'](0x0);\n                }\n                continue;\n            case '1':\n                if (mrHoLb['BawLi'](jumon[0x1], 'L')) {\n                    for (var j = 0x0; mrHoLb['QWXDH'](j, str['length']); j++) {\n                        if (j != 0x0 || mrHoLb['LCkhO'](str[j], jumon[0x0]))\n                            newAry[mrHoLb['fmpLg'](str[j], jumon[0x0]) ? mrHoLb['GDfrP'](j, 0x1) : j] += ary[j];\n                    }\n                } else {\n                    for (var j = 0x0; mrHoLb['pvCIg'](j, str['length']); j++) {\n                        if (mrHoLb['LCkhO'](j, mrHoLb['GDfrP'](ary['length'], 0x1)) || mrHoLb['GZxqt'](str[j], jumon[0x0]))\n                            newAry[mrHoLb['XBRxC'](str[j], jumon[0x0]) ? mrHoLb['PLcem'](j, 0x1) : j] += ary[j];\n                    }\n                }\n                continue;\n            case '2':\n                ary = newAry['concat']();\n                continue;\n            case '3':\n                var newAry = [];\n                continue;\n            case '4':\n                var jumon = input['split']('\\x0a')[i]['split']('\\x20');\n                continue;\n            }\n            break;\n        }\n    }\n    var golems = 0x0;\n    for (var i of ary)\n        golems += i;\n    console['log'](golems);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4\nABC\nA L\nB L\nB R\nA R", "2"], ["8 3\nAABCBDBA\nA L\nB R\nA R", "5"], ["10 15\nSNCZWRCEWB\nB R\nR R\nE R\nW R\nZ L\nS R\nQ L\nW L\nB R\nC L\nA L\nN L\nE R\nZ L\nS L", "3"]], "original": "function Main(input){\n  var ary = [];\n  for(var i=0;i<input.split(\"\\n\")[0].split(\" \")[0];i++){\n  \tary.push(1);\n  }\n  var str = input.split(\"\\n\")[1];\n  for(var i=2;i<input.split(\"\\n\").length;i++){\n  \tvar jumon = input.split(\"\\n\")[i].split(\" \");\n    var newAry = [];\n    for(var j=0;j<ary.length;j++){\n        newAry.push(0);\n    }\n    if(jumon[1]==\"L\"){\n      for(var j=0;j<str.length;j++){\n        if(j!=0||str[j]!=jumon[0])newAry[str[j]==jumon[0]?j-1:j]+=ary[j];\n      }\n    }else{\n      for(var j=0;j<str.length;j++){\n        if(j!=ary.length-1||str[j]!=jumon[0])newAry[str[j]==jumon[0]?j+1:j]+=ary[j];\n      }\n    }\n    ary=newAry.concat();\n  }\n  var golems = 0;\n  for(var i of ary)golems+=i;\n  console.log(golems);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03141_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var IGkDfl = {\n        'SAATq': function (x, y) {\n            return x - y;\n        },\n        'SKQup': function (x, y) {\n            return x < y;\n        },\n        'AicJF': function (x, y) {\n            return x % y;\n        }\n    };\n    var lines = input['split']('\\x0a');\n    var N = lines['shift']() - 0x0;\n    var ryo = new Array(N);\n    for (var n = 0x0; IGkDfl['SKQup'](n, N); n++) {\n        var nums = lines[n]['split']('\\x20');\n        ryo[n] = {\n            'taka': IGkDfl['SAATq'](nums[0x0], 0x0),\n            'aoki': IGkDfl['SAATq'](nums[0x1], 0x0)\n        };\n        ryo[n]['sa'] = ryo[n]['aoki'] - ryo[n]['taka'];\n    }\n    ryo['sort'](function (a, b) {\n        return b['sa'] - a['sa'];\n    });\n    ryo['sort'](function (a, b) {\n        return IGkDfl['SAATq'](b['taka'], a['taka']);\n    });\n    var koufuku = 0x0;\n    for (var n = 0x0; IGkDfl['SKQup'](n, N); n++) {\n        if (IGkDfl['AicJF'](n, 0x2) == 0x0) {\n            koufuku += ryo[n]['taka'];\n            ryo[n]['taka'] = 0x0;\n        } else {\n            koufuku -= ryo[n]['aoki'];\n            ryo[n]['aoki'] = 0x0;\n        }\n    }\n    console['log'](koufuku);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n10 10\n20 20\n30 30", "20"], ["3\n20 10\n20 20\n20 30", "20"], ["6\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000", "-2999999997"]], "original": "\"use strict\";\nfunction Main(input) {\n    var lines = input.split(\"\\n\");\n    var N = lines.shift() - 0;\n    var ryo = new Array(N);\n    for (var n = 0; n < N; n++) {\n        var nums = lines[n].split(\" \");\n        ryo[n] = {\n            taka : nums[0] - 0,\n            aoki : nums[1] - 0,\n        };\n        ryo[n].sa = ryo[n].aoki - ryo[n].taka;\n    }\n    ryo.sort(function(a, b) { return b.sa - a.sa; });\n    ryo.sort(function(a, b) { return b.taka - a.taka; });\n    var koufuku = 0;\n    for (var n = 0; n < N; n++) {\n        if (n % 2 == 0) {\n            koufuku += ryo[n].taka;\n            ryo[n].taka = 0;\n        } else {\n            koufuku -= ryo[n].aoki;\n            ryo[n].aoki = 0;\n        }\n    }\n    console.log(koufuku);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03150_1", "type": "JavaScript", "obfuscated": "'use strict';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    const oNsBon = {\n        'SZJRz': 'keyence',\n        'UQQZK': function (x, y) {\n            return x != y;\n        },\n        'DKUaS': 'YES',\n        'uyFcN': function (x, y) {\n            return x < y;\n        },\n        'Usjxd': function (x, y) {\n            return x + y;\n        },\n        'klwvq': function (x, y) {\n            return x != y;\n        }\n    };\n    let word = line;\n    let arr = [\n        'k',\n        'e',\n        'y',\n        'e',\n        'n',\n        'c',\n        'e'\n    ];\n    let keyence = oNsBon['SZJRz'];\n    if (oNsBon['UQQZK'](word['indexOf']('keyence'), -0x1)) {\n        console['log'](oNsBon['DKUaS']);\n        return;\n    }\n    let str = '';\n    let ans = ![];\n    for (let i = 0x0; oNsBon['uyFcN'](i, 0x6); i++) {\n        str += arr['shift']();\n        let tmp = keyence['slice'](oNsBon['Usjxd'](i, 0x1));\n        if (oNsBon['UQQZK'](word['indexOf'](str), -0x1) && oNsBon['klwvq'](word['indexOf'](tmp), -0x1)) {\n            ans = !![];\n            break;\n        }\n    }\n    if (ans)\n        console['log'](oNsBon['DKUaS']);\n    else\n        console['log']('NO');\n});", "test_cases": [["keyofscience", "YES"], ["mpyszsbznf", "NO"], ["ashlfyha", "NO"], ["keyence", "YES"]], "original": "\"use strict\";\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\n\nvar reader = require(\"readline\").createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on(\"line\", line => {\n  let word = line;\n  let arr = [\"k\", \"e\", \"y\", \"e\", \"n\", \"c\", \"e\"];\n  let keyence = \"keyence\";\n\n  if (word.indexOf(\"keyence\") != -1) {\n    console.log(\"YES\");\n    return;\n  }\n\n  let str = \"\";\n  let ans = false;\n  for (let i = 0; i < 6; i++) {\n    str += arr.shift();\n    let tmp = keyence.slice(i + 1);\n    if (word.indexOf(str) != -1 && word.indexOf(tmp) != -1) {\n     ans = true;\n     break;\n    }\n  }\n\n  if (ans) console.log(\"YES\");\n  else console.log(\"NO\");\n});\n", "language": "JavaScript"}
{"filename": "p03162_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const TZVYAV = {\n        'KQYLi': function (x, y) {\n            return x < y;\n        },\n        'dYKye': function (x, y) {\n            return x < y;\n        },\n        'mNEZX': function (x, y) {\n            return x < y;\n        },\n        'daOUS': function (x, y) {\n            return x !== y;\n        },\n        'QaLTD': function (x, y) {\n            return x + y;\n        }\n    };\n    let tmp = input['split']('\\x0a');\n    let vacations = [];\n    for (let i = 0x1; TZVYAV['KQYLi'](i, tmp['length']); i++) {\n        let vacation = tmp[i]['split']('\\x20')['map'](element => parseInt(element, 0xa));\n        vacations['push'](vacation);\n    }\n    let dp = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let day = 0x0; TZVYAV['dYKye'](day, vacations['length']); day++) {\n        let vacation = vacations[day];\n        let new_dp = [\n            0x0,\n            0x0,\n            0x0\n        ];\n        for (let i = 0x0; TZVYAV['dYKye'](i, 0x3); i++) {\n            for (let j = 0x0; TZVYAV['mNEZX'](j, 0x3); j++) {\n                if (TZVYAV['daOUS'](i, j)) {\n                    new_dp[j] = Math['max'](new_dp[j], TZVYAV['QaLTD'](dp[i], vacation[j]));\n                }\n            }\n        }\n        dp = new_dp;\n    }\n    console['log'](Math['max'](dp[0x0], dp[0x1], dp[0x2]));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n10 40 70\n20 50 80\n30 60 90", "210"], ["1\n100 10 1", "100"], ["7\n6 7 8\n8 8 3\n2 5 2\n7 8 6\n4 6 8\n2 3 4\n7 5 1", "46"]], "original": "function main(input) {\n  let tmp = input.split(\"\\n\");\n  let vacations = [];\n  for (let i = 1; i < tmp.length; i++ ){\n    let vacation = tmp[i].split(\" \").map(element => parseInt(element, 10));\n    vacations.push(vacation);\n  }\n  let dp = [0, 0, 0];\n  for (let day = 0; day < vacations.length; day++) {\n    let vacation = vacations[day];\n    let new_dp = [0, 0, 0];\n    for (let i = 0; i < 3; i++) {\n      for(let j = 0; j < 3; j++) {\n        if (i !== j) {\n           new_dp[j] = Math.max(new_dp[j], dp[i] + vacation[j]);\n        }\n      }\n    }\n    dp = new_dp;\n  }\n  console.log(Math.max(dp[0], dp[1], dp[2]));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03206_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst i = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlet r = 'Christmas\\x20';\nswitch (i) {\ncase '22':\n    r = r + 'Eve\\x20Eve\\x20Eve';\n    break;\ncase '23':\n    r = r + 'Eve\\x20Eve';\n    break;\ncase '24':\n    r = r + 'Eve';\n    break;\ncase '25':\n    r = r;\n    break;\n}\nconsole['log'](r);", "test_cases": [["25", "Christmas"], ["22", "Christmas Eve Eve Eve"]], "original": "'use strict'\nconst i = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nlet r = 'Christmas ';\nswitch (i) {\n    case '22':\n        r = r + 'Eve Eve Eve';\n        break\n    case '23':\n        r = r + 'Eve Eve';\n        break\n    case '24':\n        r = r + 'Eve'\n        break\n    case '25':\n        r = r;\n        break\n}\nconsole.log(r);", "language": "JavaScript"}
{"filename": "p03210_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(INPUT) {\n    const yEgSJs = {\n        'Vhzkc': function (x, y) {\n            return x == y;\n        },\n        'qKMHg': function (x, y) {\n            return x == y;\n        },\n        'WjElx': 'YES'\n    };\n    const N = INPUT['split']('\\x0a')[0x0];\n    if (yEgSJs['Vhzkc'](N, 0x7) || yEgSJs['qKMHg'](N, 0x5) || yEgSJs['qKMHg'](N, 0x3)) {\n        console['log'](yEgSJs['WjElx']);\n    } else {\n        console['log']('NO');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5", "YES"], ["6", "NO"]], "original": "'use strict';\n\nfunction Main(INPUT) {\n    const N = INPUT.split(\"\\n\")[0];\n    if (N == 7 || N == 5 || N == 3) {\n        console.log(\"YES\");\n    } else {\n        console.log(\"NO\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03239_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar result = Infinity;\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var GPnfTT = {\n        'EmNaF': function (callee, param1) {\n            return callee(param1);\n        },\n        'czqFC': function (x, y) {\n            return x <= y;\n        },\n        'YuzhD': function (x, y) {\n            return x !== y;\n        },\n        'UsxYN': 'TLE'\n    };\n    var N = Number(lines[0x0]['split']('\\x20')[0x0]);\n    var T = GPnfTT['EmNaF'](Number, lines[0x0]['split']('\\x20')[0x1]);\n    lines['shift']();\n    var array = lines['map'](value => value['split']('\\x20')['map'](value => Number(value)));\n    for (var i of array) {\n        if (GPnfTT['czqFC'](i[0x1], T)) {\n            result = Math['min'](result, i[0x0]);\n        }\n    }\n    GPnfTT['YuzhD'](result, Infinity) ? console['log'](result) : console['log'](GPnfTT['UsxYN']);\n});", "test_cases": [["3 70\n7 60\n1 80\n4 50", "4"], ["4 3\n1 1000\n2 4\n3 1000\n4 500", "TLE"], ["5 9\n25 8\n5 9\n4 10\n1000 1000\n6 1", "5"]], "original": "var lines = []; var result = Infinity;\nvar readline = require('readline');\n\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var T = Number(lines[0].split(\" \")[1]);\n\n    lines.shift();\n\n    var array = lines.map(value => value.split(\" \").map(value => Number(value)));\n\n    for (var i of array) {\n        if (i[1] <= T) { result = Math.min(result, i[0]); }\n    }\n    result !== Infinity ? console.log(result): console.log(\"TLE\");\n});", "language": "JavaScript"}
{"filename": "p03308_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const xRqsSt = {\n        'yYgzY': function (callee, param1) {\n            return callee(param1);\n        },\n        'bDzMv': function (callee, param1) {\n            return callee(param1);\n        },\n        'RsmJy': function (x, y) {\n            return x - y;\n        }\n    };\n    const params = input['split']('\\x0a');\n    const n = xRqsSt['bDzMv'](Number, params[0x0]);\n    let max = 0x0;\n    let min = Math['pow'](0xa, 0xa);\n    params[0x1]['split']('\\x20')['forEach'](val => {\n        max = Math['max'](max, xRqsSt['yYgzY'](Number, val));\n        min = Math['min'](min, Number(val));\n    });\n    console['log'](xRqsSt['RsmJy'](max, min));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 4 6 3", "5"], ["2\n1000000000 1", "999999999"], ["5\n1 1 1 1 1", "0"]], "original": "// https://atcoder.jp/contests/abc102/tasks/abc102_b\n\"use strict\"\nfunction Main(input) {\n  const params = input.split('\\n')\n  const n = Number(params[0]);\n  let max = 0;\n  let min = Math.pow(10, 10);\n  params[1].split(' ').forEach(val => {\n    max = Math.max(max, Number(val));\n    min = Math.min(min, Number(val));\n  });\n  console.log(max -　min);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03325_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const mHuDLt = {\n        'knplA': function (x, y) {\n            return x === y;\n        },\n        'OjODh': function (x, y) {\n            return x % y;\n        },\n        'MHNIs': function (x, y) {\n            return x / y;\n        }\n    };\n    const a = s['split']('\\x0a')[0x1]['split']('\\x20')['map'](n => Number(n));\n    let ans = 0x0;\n    for (let n of a) {\n        while (mHuDLt['knplA'](mHuDLt['OjODh'](n, 0x2), 0x0)) {\n            n = mHuDLt['MHNIs'](n, 0x2);\n            ans += 0x1;\n        }\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n5 2 4", "3"], ["4\n631 577 243 199", "0"], ["10\n2184 2126 1721 1800 1024 2528 3360 1945 1280 1776", "39"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const a = s.split('\\n')[1].split(' ').map(n => Number(n));\n\n  let ans = 0;\n\n  for (let n of a) {\n    while (n % 2 === 0) {\n      n = n / 2;\n      ans += 1;\n    }\n  }\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03352_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const WbrQhf = {\n        'ILaln': function (callee, param1) {\n            return callee(param1);\n        },\n        'kyVMw': function (x, y) {\n            return x < y;\n        },\n        'BnnWK': function (x, y) {\n            return x - y;\n        }\n    };\n    const x = WbrQhf['ILaln'](Number, s);\n    const nums = [...WbrQhf['ILaln'](Array, 0x1f)]['map']((x, i) => i + 0x1);\n    nums['shift']();\n    const max_ary = [0x1];\n    for (let i = 0x0; WbrQhf['kyVMw'](i, nums['length']); i++) {\n        let j = 0x2;\n        let n = nums[i];\n        let max = Math['pow'](n, j);\n        if (max > x)\n            continue;\n        while (max <= x) {\n            j += 0x1;\n            max = Math['pow'](n, j);\n        }\n        max = Math['pow'](n, WbrQhf['BnnWK'](j, 0x1));\n        max_ary['push'](max);\n    }\n    const ans = Math['max'](...max_ary);\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "9"], ["1", "1"], ["999", "961"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const x = Number(s);\n  const nums = [...Array(31)].map((x, i) => i + 1);\n  nums.shift();\n  const max_ary = [1];\n\n  for (let i = 0; i < nums.length; i++) {\n    let j = 2;\n    let n = nums[i];\n    let max = Math.pow(n, j);\n    if (max > x) continue;\n    while (max <= x) {\n      j += 1;\n      max = Math.pow(n, j);\n    }\n    max = Math.pow(n, j - 1);\n    max_ary.push(max);\n  }\n\n  const ans = Math.max(...max_ary);\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03434_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const EjQGSf = {\n        'ljbNm': function (x, y) {\n            return x == y;\n        },\n        'xbiIt': function (x, y) {\n            return x % y;\n        },\n        'vSBKF': function (x, y) {\n            return x + y;\n        },\n        'CVBnh': function (x, y) {\n            return x - y;\n        }\n    };\n    const args = input['split']('\\x0a');\n    const N = parseInt(args[0x0], 0xa);\n    const sorted = args[0x1]['split']('\\x20')['map'](v => parseInt(v))['sort']((a, b) => b - a);\n    var alice = 0x0;\n    var bob = 0x0;\n    sorted['forEach']((v, i) => {\n        if (EjQGSf['ljbNm'](EjQGSf['xbiIt'](EjQGSf['vSBKF'](i, 0x1), 0x2), 0x0)) {\n            bob += v;\n        } else {\n            alice += v;\n        }\n    });\n    console['log'](EjQGSf['CVBnh'](alice, bob));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n3 1", "2"], ["3\n2 7 4", "5"], ["4\n20 18 2 18", "18"]], "original": "function main(input) {\n  const args = input.split('\\n');\n  const N = parseInt(args[0], 10);\n  const sorted = args[1].split(' ').map(v => parseInt(v)).sort((a, b) => b - a);\n  var alice = 0;\n  var bob = 0;\n  \n  sorted.forEach((v, i) => {\n    if ((i + 1) % 2 == 0) {\n      bob += v;\n    } else {\n      alice += v;\n    }\n  });\n  console.log(alice - bob);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03479_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var RnJtmZ = {\n        'xSPJi': function (x, y) {\n            return x < y;\n        },\n        'ErdUh': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; RnJtmZ['xSPJi'](i, rest['length']); i++)\n        if (RnJtmZ['ErdUh'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var WkZJoc = {\n        'baUHT': function (x, y) {\n            return x < y;\n        },\n        'IeVCS': function (x, y) {\n            return x > y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; WkZJoc['baUHT'](i, rest['length']); i++)\n        if (WkZJoc['IeVCS'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var EgSCmF = {\n        'mQJNb': '2|4|5|1|0|8|6|7|3',\n        'GqPeE': function (x, y) {\n            return x <= y;\n        }\n    };\n    var CocIQT = EgSCmF['mQJNb']['split']('|');\n    var GNbtJz = 0x0;\n    while (!![]) {\n        switch (CocIQT[GNbtJz++]) {\n        case '0':\n            var a = y / x;\n            continue;\n        case '1':\n            var y = nk[0x1];\n            continue;\n        case '2':\n            var input = input['split']('\\x0a');\n            continue;\n        case '3':\n            console['log'](ans);\n            continue;\n        case '4':\n            var nk = toIntArr(input[0x0]['split']('\\x20'));\n            continue;\n        case '5':\n            var x = nk[0x0];\n            continue;\n        case '6':\n            var ans = 0x0;\n            continue;\n        case '7':\n            while (EgSCmF['GqPeE'](temp, a)) {\n                temp *= 0x2;\n                ans++;\n            }\n            continue;\n        case '8':\n            var temp = 0x1;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3 20", "3"], ["25 100", "3"], ["314159265 358979323846264338", "31"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar nk = toIntArr(input[0].split(' '));\n\tvar x = nk[0];\n\tvar y = nk[1];\n\tvar a = y/x;\n  \tvar temp = 1;\n \tvar ans = 0;\n    while(temp<=a){\n    \ttemp *= 2;\n      \tans++;\n      //console.log(ans,temp)\n    }\n\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03493_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var BGSbZS = {\n        'WYopA': function (x, y) {\n            return x < y;\n        },\n        'mXRoj': function (x, y) {\n            return x == y;\n        },\n        'lysSn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var FRORcW = '5|3|4|2|0|1'['split']('|');\n    var OxXsAP = 0x0;\n    while (!![]) {\n        switch (FRORcW[OxXsAP++]) {\n        case '0':\n            for (var i = 0x0; BGSbZS['WYopA'](i, str['length']); i++) {\n                if (BGSbZS['mXRoj'](str[i], '1')) {\n                    count += 0x1;\n                }\n            }\n            continue;\n        case '1':\n            console['log'](count);\n            continue;\n        case '2':\n            var count = 0x0;\n            continue;\n        case '3':\n            var num = BGSbZS['lysSn'](parseInt, args[0x0], 0xa);\n            continue;\n        case '4':\n            var str = num['toString'](0xa);\n            continue;\n        case '5':\n            var args = input['split']('\\x20');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["101", "2"], ["000", "0"]], "original": "function Main(input){\n  \tvar args = input.split(\" \");\n  \tvar num = parseInt(args[0], 10); // 10進数\n\tvar str = num.toString(10);\n  \tvar count = 0;\n\tfor(var i=0; i<str.length; i++){\n      if(str[i]==\"1\"){\n        count += 1;\n      }\n    }\n  \tconsole.log(count);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03611_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const oefyOf = {\n        'PvRuh': function (callee, param1) {\n            return callee(param1);\n        },\n        'AbPtr': function (x, y) {\n            return x < y;\n        },\n        'aeOWY': function (x, y) {\n            return x < y;\n        },\n        'rVnNf': function (x, y) {\n            return x <= y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = oefyOf['PvRuh'](parseInt, arg[0x0]);\n    const a = arg[0x1]['split']('\\x20')['map'](n => parseInt(n))['sort']((a, b) => a - b);\n    const set = new Set();\n    let max = 0x0;\n    for (let i = 0x0; oefyOf['AbPtr'](i, N); i++) {\n        let cnt = 0x0;\n        if (set['has'](a[i])) {\n            continue;\n        }\n        set['add'](a[i]);\n        for (let j = 0x0; oefyOf['aeOWY'](j, N); j++) {\n            if (oefyOf['rVnNf'](Math['abs'](a[j] - a[i]), 0x1)) {\n                cnt++;\n            }\n        }\n        if (cnt > max) {\n            max = cnt;\n        }\n    }\n    console['log'](max);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\n3 1 4 1 5 9 2", "4"], ["10\n0 1 2 3 4 5 6 7 8 9", "3"], ["1\n99999", "1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const a = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>a-b);\n    \n    const set = new Set();\n    \n    let max = 0;\n    \n    for(let i=0; i<N; i++) {\n        let cnt = 0;\n        \n        if(set.has(a[i])) {\n            continue;\n        }\n        \n        set.add(a[i]);\n        \n        for(let j=0; j<N; j++) {\n            if(Math.abs(a[j] - a[i]) <= 1) {\n                cnt++;\n            }\n        }\n        \n        if(cnt > max) {\n            max = cnt;\n        }\n    }\n    \n    console.log(max);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03636_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var FSSPcz = {\n        'HdBdf': function (callee, param1) {\n            return callee(param1);\n        },\n        'DpSkI': function (x, y) {\n            return x - y;\n        },\n        'UkUnf': function (x, y) {\n            return x + y;\n        },\n        'dPCXM': function (x, y) {\n            return x + y;\n        }\n    };\n    input = FSSPcz['HdBdf'](String, input);\n    var len = input['length'];\n    var first = input['substring'](0x0, 0x1);\n    if (len < 0x4) {\n        var mid = 0x1;\n    } else {\n        var mid = len - 0x2;\n    }\n    var last = input['substring'](FSSPcz['DpSkI'](len, 0x1), len);\n    console['log']('%s', FSSPcz['UkUnf'](FSSPcz['dPCXM'](first, FSSPcz['HdBdf'](String, mid)), last));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["internationalization", "i18n"], ["smiles", "s4s"], ["xyz", "x1z"]], "original": "function Main(input){\n    input = String(input);\n\n    var len = input.length;\n    var first = input.substring(0,1);\n\n    if(len < 4){\n        var mid = 1;\n    }else{\n        var mid = len - 2;\n    }\n\n    var last = input.substring(len - 1, len);\n\n    console.log('%s', first + String(mid) + last);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03834_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('ascii');\nvar input_stdin = '';\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess['stdin']['on']('data', function (data) {\n    input_stdin += data;\n});\nprocess['stdin']['on']('end', function () {\n    var vMuAnE = {\n        'LQZQI': function (callee) {\n            return callee();\n        }\n    };\n    input_stdin_array = input_stdin['split']('\\x0a');\n    vMuAnE['LQZQI'](main);\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var CSACij = {\n        'dhqfy': function (callee) {\n            return callee();\n        }\n    };\n    var s = CSACij['dhqfy'](readLine);\n    s = s['split'](',');\n    s = s['join']('\\x20');\n    process['stdout']['write'](s);\n}", "test_cases": [["happy,newyear,enjoy", "happy newyear enjoy"], ["haiku,atcoder,tasks", "haiku atcoder tasks"], ["abcde,fghihgf,edcba", "abcde fghihgf edcba"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\n\nfunction main() {\n    var s = readLine();\n    s = s.split(\",\");\n    s = s.join(\" \");\n    \n    process.stdout.write(s);\n}\n", "language": "JavaScript"}
{"filename": "p04029_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const n = parseInt(input, 0xa);\n    let sum = 0x0;\n    for (let i = 0x1; i <= n; i++) {\n        sum += i;\n    }\n    console['log'](sum);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "6"], ["10", "55"], ["1", "1"]], "original": "function main(input) {\n  const n = parseInt(input, 10);\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  console.log(sum);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00002_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var SRyjwG = {\n        'soGcr': function (x, y) {\n            return x + y;\n        },\n        'GjCnd': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var nums = chunk['trim']()['split']('\\x0a');\n    function digit(e) {\n        var a = e['split']('\\x20');\n        var wa = SRyjwG['soGcr'](SRyjwG['GjCnd'](parseInt, a[0x0]), SRyjwG['GjCnd'](parseInt, a[0x1]));\n        return wa['toString']()['length'];\n    }\n    console['log'](nums['map'](digit)['join']('\\x0a'));\n});", "test_cases": [["5 7\n1 99\n1000 999", "2\n3\n4"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on(\"data\",function(chunk){\n   var nums=chunk.trim().split(\"\\n\");\n   function digit (e){\n       var a=e.split(\" \");\n       var wa = parseInt(a[0]) + parseInt(a[1]);\n       return  wa.toString().length;\n       }\n   console.log(nums.map(digit).join(\"\\n\"));\n   \n});", "language": "JavaScript"}
{"filename": "p02255_1", "type": "JavaScript", "obfuscated": "function main(lines) {\n    const rrFCvr = {\n        'ImjJW': function (x, y) {\n            return x >= y;\n        },\n        'YmWvf': function (x, y) {\n            return x < y;\n        },\n        'uhFhX': function (x, y) {\n            return x + y;\n        }\n    };\n    const n = lines['split']('\\x0a')[0x0];\n    const An = lines['split']('\\x0a')[0x1]['split']('\\x20')['map'](Number);\n    console['log'](An['join']('\\x20'));\n    for (let i = 0x1; i < n; i++) {\n        value = An[i];\n        let j = i - 0x1;\n        while (rrFCvr['ImjJW'](j, 0x0) && rrFCvr['YmWvf'](value, An[j])) {\n            An[j + 0x1] = An[j];\n            j--;\n        }\n        An[rrFCvr['uhFhX'](j, 0x1)] = value;\n        console['log'](An['join']('\\x20'));\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n5 2 4 6 1 3", "5 2 4 6 1 3\n2 5 4 6 1 3\n2 4 5 6 1 3\n2 4 5 6 1 3\n1 2 4 5 6 3\n1 2 3 4 5 6"], ["3\n1 2 3", "1 2 3\n1 2 3\n1 2 3"]], "original": "function main(lines) {\n    const n = lines.split('\\n')[0]\n    const An = lines.split('\\n')[1].split(' ').map(Number)\n    // 初期の配列\n    console.log(An.join(' '))\n\n    for(let i=1; i<n; i++){\n        value = An[i]\n        let j = i - 1\n        while(j>=0 && value<An[j]){\n            An[j+1] = An[j]\n            j--\n        }\n\n        An[j+1] = value\n\n        console.log(An.join(' '))\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02270_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const WICylA = {\n        'XqcOV': function (x, y) {\n            return x < y;\n        },\n        'zLurR': function (x, y) {\n            return x <= y;\n        },\n        'tFMqo': function (callee, param1) {\n            return callee(param1);\n        },\n        'vgvBE': '/dev/stdin',\n        'fePON': function (x, y) {\n            return x > y;\n        },\n        'tHxpC': function (x, y) {\n            return x / y;\n        },\n        'fjppg': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    let lines = WICylA['tFMqo'](require, 'fs')['readFileSync'](WICylA['vgvBE'], 'utf8')['trim']()['split']('\\x0a');\n    let [n, k] = lines['shift']()['split']('\\x20')['map'](Number);\n    let w = lines['map'](Number);\n    const canAllStack = p => {\n        let cnt = 0x0, sum = 0x0;\n        for (let i = 0x0; WICylA['XqcOV'](i, k); i++) {\n            for (sum = 0x0; WICylA['zLurR'](sum + w[cnt], p);) {\n                sum += w[cnt++];\n                if (cnt === n)\n                    return n;\n            }\n        }\n        return cnt;\n    };\n    let mid, left = 0x0, right = 0x3b9aca00;\n    while (WICylA['fePON'](right - left, 0x1)) {\n        mid = WICylA['tHxpC'](right + left, 0x2);\n        if (WICylA['fjppg'](canAllStack, mid) >= n)\n            right = mid;\n        else\n            left = mid;\n    }\n    console['log'](Math['floor'](right));\n}());", "test_cases": [["5 3\n8\n1\n7\n3\n9", "10"], ["4 2\n1\n2\n2\n6", "6"]], "original": "(function main(){\n  let lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\");\n  let [n, k] = lines.shift().split(' ').map(Number);\n  let w = lines.map(Number);\n\n  const canAllStack = (p) => {\n    let cnt = 0, sum = 0;\n    for (let i = 0; i < k; i++) {\n      for (sum = 0; sum + w[cnt] <= p;) {\n        sum += w[cnt++]\n        if (cnt === n) return n;\n      }\n    }\n    return cnt;\n  };\n\n  let mid, left = 0, right = 1e9;\n  while (right - left > 1) {\n    mid = (right + left) / 2;\n    if (canAllStack(mid) >= n) right = mid;\n    else left = mid;\n  }\n  console.log(Math.floor(right));\n})();\n", "language": "JavaScript"}
{"filename": "p02408_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var YLssHr = {\n        'lPpHg': function (x, y) {\n            return x === y;\n        },\n        'iKWOr': function (x, y) {\n            return x < y;\n        },\n        'eXXPe': function (x, y) {\n            return x + y;\n        },\n        'hjIwz': function (x, y) {\n            return x !== y;\n        }\n    };\n    var lines = stdin['toString']()['split']('\\x0a');\n    var result = function (data) {\n        var zwfDZY = {\n            'mXPZn': function (x, y) {\n                return YLssHr['lPpHg'](x, y);\n            },\n            'SXIMN': function (x, y) {\n                return YLssHr['iKWOr'](x, y);\n            },\n            'VLkAp': function (x, y) {\n                return YLssHr['eXXPe'](x, y);\n            }\n        };\n        return new Deck()['filter'](function (v) {\n            return zwfDZY['mXPZn'](this['indexOf'](v), -0x1);\n        }, data)['join']('\\x0a');\n        function Deck() {\n            var deck = [];\n            [\n                'S',\n                'H',\n                'C',\n                'D'\n            ]['forEach'](function (v) {\n                for (var i = 0x0; zwfDZY['SXIMN'](i, 0xd); i++)\n                    deck['push']([\n                        v,\n                        zwfDZY['VLkAp'](i, 0x1)\n                    ]['join']('\\x20'));\n            });\n            return deck;\n        }\n    }(lines['slice'](0x0, lines['shift']()));\n    if (YLssHr['hjIwz'](result['length'], 0x0))\n        console['log'](result);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["47\nS 10\nS 11\nS 12\nS 13\nH 1\nH 2\nS 6\nS 7\nS 8\nS 9\nH 6\nH 8\nH 9\nH 10\nH 11\nH 4\nH 5\nS 2\nS 3\nS 4\nS 5\nH 12\nH 13\nC 1\nC 2\nD 1\nD 2\nD 3\nD 4\nD 5\nD 6\nD 7\nC 3\nC 4\nC 5\nC 6\nC 7\nC 8\nC 9\nC 10\nC 11\nC 13\nD 9\nD 10\nD 11\nD 12\nD 13", "S 1\nH 3\nH 7\nC 12\nD 8"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString().split('\\n');\n  var result = (function(data) {\n    return new Deck().filter(function(v) {\n      return this.indexOf(v) === -1;\n    },data).join('\\n');\n\n    function Deck() {\n      var deck = [];\n      ['S','H','C','D'].forEach(function(v) { \n        for (var i = 0; i < 13;i++)\n          deck.push([v,i + 1].join(' '));\n      });\n      return deck;\n    }\n  }(lines.slice(0,lines.shift())\n    ));\n\n  if(result.length !== 0) console.log(result);\n  \n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02547_1", "type": "JavaScript", "obfuscated": "let lines = [];\nlet reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    lines['push'](line);\n});\nreader['on']('close', function () {\n    const FNpILb = {\n        'KItoT': function (x, y) {\n            return x < y;\n        },\n        'rdRvr': function (x, y) {\n            return x == y;\n        },\n        'YLpdV': function (x, y) {\n            return x == y;\n        },\n        'xoAkw': function (x, y) {\n            return x + y;\n        },\n        'bUrff': 'Yes'\n    };\n    let d1 = [];\n    let d2 = [];\n    const n = lines[0x0];\n    let zorome = 'No';\n    for (let i = 0x1; FNpILb['KItoT'](i, n); i++) {\n        d1['push'](lines[i]['split']('\\x20')[0x0]);\n        d2['push'](lines[i]['split']('\\x20')[0x1]);\n    }\n    for (let i = 0x0; FNpILb['KItoT'](i, n - 0x2); i++) {\n        if (FNpILb['rdRvr'](d1[i], d2[i])) {\n            if (FNpILb['YLpdV'](d1[FNpILb['xoAkw'](i, 0x1)], d2[FNpILb['xoAkw'](i, 0x1)])) {\n                if (d1[FNpILb['xoAkw'](i, 0x2)] == d2[FNpILb['xoAkw'](i, 0x2)]) {\n                    zorome = FNpILb['bUrff'];\n                    break;\n                }\n            }\n        }\n    }\n    console['log'](zorome);\n});", "test_cases": [["5\n1 2\n6 6\n4 4\n3 3\n3 2", "Yes"], ["5\n1 1\n2 2\n3 4\n5 5\n6 6", "No"], ["6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6", "Yes"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n// 標準入力の読み込み\nreader.on('line', function(line) {\n    lines.push(line);\n});\n\nreader.on('close', function() {\n    let d1 = [];\n    let d2 = [];\n    // 処理の記述\n    const n = lines[0];\n    \n    let zorome = 'No';\n    for (let i = 1; i < n; i++) {\n        d1.push(lines[i].split(' ')[0]);\n        d2.push(lines[i].split(' ')[1]);\n    }\n    for (let i = 0; i < n - 2; i++) {\n        if (d1[i] == d2[i]) {\n            if (d1[i+1] == d2[i+1]) {\n                if (d1[i+2] == d2[i+2]) {\n                    zorome = 'Yes';\n                    break;\n                }\n            }\n        }\n\n    }\n\n    // 表示\n    console.log(zorome);\n});", "language": "JavaScript"}
{"filename": "p02629_1", "type": "JavaScript", "obfuscated": "function Main(inputs) {\n    const rqAuGz = {\n        'zKLRE': function (x, y) {\n            return x % y;\n        },\n        'ONAgA': function (x, y) {\n            return x / y;\n        },\n        'COCdC': function (x, y) {\n            return x + y;\n        },\n        'ROBRb': function (x, y) {\n            return x != y;\n        },\n        'bvtNy': function (callee, param1) {\n            return callee(param1);\n        },\n        'MmDax': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const inputline = inputs['split']('\\x0a')['map'](x => parseInt(x, 0xa));\n    const line = inputline[0x0];\n    function base26(number) {\n        let remainder26 = rqAuGz['zKLRE'](number, 0x1a);\n        let division26 = Math['floor'](rqAuGz['ONAgA'](number, 0x1a));\n        let output = remainder26 != 0x0 ? String['fromCharCode'](rqAuGz['COCdC'](0x40, remainder26)) : (--division26, 'Z');\n        return output = rqAuGz['ROBRb'](division26, 0x0) ? rqAuGz['bvtNy'](base26, division26) + output : output;\n    }\n    console['log'](rqAuGz['MmDax'](base26, line)['toLowerCase']());\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2", "b"], ["27", "aa"], ["123456789", "jjddja"]], "original": "function Main(inputs) {\n\tconst inputline = inputs.split(\"\\n\").map(x => parseInt(x, 10));\n  \tconst line = inputline[0];\n  \n  \tfunction base26(number) {\n    \tlet remainder26 = number % 26;\n    \tlet division26 = Math.floor(number / 26) ;\n    \tlet output = (remainder26 != 0) ? String.fromCharCode(64 + remainder26) : (--division26, 'Z');\n      \treturn output = (division26 != 0) ? base26(division26) + output : output;\n\t}\n  \n  \tconsole.log(base26(line).toLowerCase());\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02659_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var iIqsMQ = {\n        'URLlP': '2|1|6|3|5|0|4',\n        'kWPMJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'VnlCn': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var OvZXUl = iIqsMQ['URLlP']['split']('|');\n    var BZSAke = 0x0;\n    while (!![]) {\n        switch (OvZXUl[BZSAke++]) {\n        case '0':\n            console['log']('%s', ans);\n            continue;\n        case '1':\n            var A = iIqsMQ['kWPMJ'](Number, input[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            var ans = iIqsMQ['VnlCn'](BigInt, Math['floor'](A * B));\n            continue;\n        case '4':\n            return ans;\n        case '5':\n            var ans = ans['toString']();\n            continue;\n        case '6':\n            var B = iIqsMQ['VnlCn'](Number, input[0x0]['split']('\\x20')[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nfunction debug(n) {\n    var ELtrOm = {\n        'eIXQt': '4|1|0|2|3',\n        'TmRYu': function (callee, param1) {\n            return callee(param1);\n        },\n        'QRRsg': function (x, y) {\n            return x == y;\n        },\n        'GQkIZ': function (x, y) {\n            return x + y;\n        },\n        'LGpri': 'output',\n        'VSXFz': 'result',\n        'rFmGa': function (x, y) {\n            return x + y;\n        },\n        'LRrGn': 'input'\n    };\n    var rRqKtD = ELtrOm['eIXQt']['split']('|');\n    var ihbmkP = 0x0;\n    while (!![]) {\n        switch (rRqKtD[ihbmkP++]) {\n        case '0':\n            var result = 'WA';\n            continue;\n        case '1':\n            var ans = ELtrOm['TmRYu'](Main, input);\n            continue;\n        case '2':\n            if (ELtrOm['QRRsg'](ans, document['getElementById'](ELtrOm['GQkIZ'](ELtrOm['LGpri'], n))['value']['split']('\\x0a')[0x0])) {\n                result = 'AC';\n            }\n            continue;\n        case '3':\n            document['getElementById'](ELtrOm['VSXFz'] + n)['innerHTML'] = result;\n            continue;\n        case '4':\n            var input = document['getElementById'](ELtrOm['rFmGa'](ELtrOm['LRrGn'], n))['value'];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["198 1.10", "217"], ["1 0.01", "0"], ["1000000000000000 9.99", "9990000000000000"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var A = Number(input[0].split(\" \")[0]);\n  var B = Number(input[0].split(\" \")[1]);\n  var ans = BigInt(Math.floor(A * B));\n  var ans = ans.toString();\n\n\n  console.log('%s', ans);\n  return ans;\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02711_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    const lfeAmu = {\n        'KUBaj': function (x, y) {\n            return x === y;\n        },\n        'wOJIf': 'Yes'\n    };\n    const tmp = input['trim']()['split']('');\n    let result = '';\n    if (lfeAmu['KUBaj'](tmp['indexOf']('7'), -0x1)) {\n        result = 'No';\n    } else {\n        result = lfeAmu['wOJIf'];\n    }\n    console['log'](result);\n    return result;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["117", "Yes"], ["123", "No"], ["777", "Yes"]], "original": "const Main = (input) => {\n  const tmp = input.trim().split('')\n\n  let result = ''\n\n  if (tmp.indexOf('7') === -1) {\n    result = 'No'\n  } else {\n    result = 'Yes'\n  }\n\n  console.log(result)\n  return result\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02718_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const vWMTfN = {\n        'yHZgI': function (callee, param1) {\n            return callee(param1);\n        },\n        'QhJIN': function (x, y) {\n            return x < y;\n        },\n        'YczZh': function (x, y) {\n            return x < y;\n        },\n        'JBsDl': function (x, y) {\n            return x - y;\n        },\n        'orpmK': 'Yes'\n    };\n    const n = vWMTfN['yHZgI'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    const m = vWMTfN['yHZgI'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    let a = [];\n    let sum = 0x0;\n    for (let index = 0x0; vWMTfN['QhJIN'](index, n); index++) {\n        a[index] = input['split']('\\x0a')[0x1]['split']('\\x20')[index];\n        sum += Number(a[index]);\n    }\n    let count = 0x0;\n    for (let index = 0x0; vWMTfN['YczZh'](index, n); index++) {\n        if (vWMTfN['JBsDl'](a[index] * (0x4 * m), sum) > 0x0) {\n            count++;\n        }\n    }\n    if (count >= m) {\n        console['log'](vWMTfN['orpmK']);\n    } else {\n        console['log']('No');\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 1\n5 4 2 1", "Yes"], ["3 2\n380 19 1", "No"], ["12 3\n4 56 78 901 2 345 67 890 123 45 6 789", "Yes"]], "original": "\"use strict\"\n// input data\nfunction main(input) {\n    const n = Number(input.split('\\n')[0].split(' ')[0]);\n    const m = Number(input.split('\\n')[0].split(' ')[1]);\n    let a = [];\n    let sum = 0;\n    for (let index = 0; index < n; index++) {\n        a[index] = input.split('\\n')[1].split(' ')[index];\n        sum += Number(a[index]);\n    }\n    let count = 0;\n    for (let index = 0; index < n; index++) {\n        if (a[index] * (4 * m) - sum > 0) {\n            count++;\n        }\n    }\n    if (count>=m) {\n        console.log('Yes');\n    }else {\n        console.log('No');\n    }\n}\n\n// output\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02796_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet a = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\na['shift']();\nlet d = a['map'](e => {\n    const YgdEzk = {\n        'FYJfn': function (x, y) {\n            return x - y;\n        }\n    };\n    let r = e['split']('\\x20')['map'](Number);\n    return [\n        YgdEzk['FYJfn'](r[0x0], r[0x1]),\n        r[0x1] + r[0x0]\n    ];\n})['sort']((a, b) => {\n    const BXJKaH = {\n        'xNzgX': function (x, y) {\n            return x - y;\n        }\n    };\n    return BXJKaH['xNzgX'](a[0x1], b[0x1]);\n});\nlet s = 0x0;\nlet P = Number['MIN_SAFE_INTEGER'];\nfor (let i = 0x0; i < d['length']; i++) {\n    if (P <= d[i][0x0]) {\n        s++;\n        P = d[i][0x1];\n    }\n}\nconsole['log'](s);", "test_cases": [["4\n2 4\n4 3\n9 3\n100 5", "3"], ["2\n8 20\n1 10", "1"], ["5\n10 1\n2 1\n4 1\n6 1\n8 1", "5"]], "original": "\"use strict\";let a=require('fs').readFileSync('/dev/stdin','utf8').trim().split(\"\\n\");a.shift();let d = a.map(e => {let r = e.split(\" \").map(Number);return [r[0]-r[1],r[1]+r[0]];}).sort((a,b) => {return a[1]-b[1];});let s = 0;let P = Number.MIN_SAFE_INTEGER;for(let i=0;i<d.length;i++){if(P<=d[i][0]){s++;P = d[i][1];}}console.log(s);", "language": "JavaScript"}
{"filename": "p02921_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst Nums = input['split']('\\x0a');\nconst S = Nums[0x0]['split']('');\nconst T = Nums[0x1]['split']('');\nlet ans = 0x0;\nS['forEach']((x, i) => {\n    const zgBlED = {\n        'qiidi': function (x, y) {\n            return x == y;\n        }\n    };\n    if (zgBlED['qiidi'](x, T[i])) {\n        ans++;\n    }\n});\nconsole['log'](ans);", "test_cases": [["CSS\nCSR", "2"], ["SSR\nSSR", "3"], ["RRR\nSSS", "0"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nconst Nums = input.split('\\n');\nconst S = Nums[0].split(\"\");\nconst T = Nums[1].split(\"\");\nlet ans = 0;\nS.forEach((x,i)=> {\n\tif(x==T[i]){\n    \tans++;\n    }\n});\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p02972_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst arg_str = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nconst args = arg_str['split']('\\x0a');\nconst N = parseInt(args[0x0]);\nconst a_array = args[0x1]['split']('\\x20')['map'](x => parseInt(x));\nfor (let i = N; i >= 0x1; i--) {\n    let i_n = 0x0;\n    if (i == 0x1) {\n        i_n = N;\n    } else {\n        i_n = Math['sqrt'](N);\n    }\n    for (let j = i_n; j >= 0x1; j--) {\n        if (i < j) {\n            if (j % i == 0x0) {\n                a_array[i - 0x1] ^= a_array[j - 0x1];\n            }\n        } else {\n            continue;\n        }\n    }\n}\nconst result = [];\na_array['forEach']((item, index) => {\n    const RDRFPo = {\n        'ApqtD': function (x, y) {\n            return x == y;\n        }\n    };\n    if (RDRFPo['ApqtD'](item, 0x1)) {\n        result['push'](index + 0x1);\n    }\n});\nconsole['log'](result['length']);\nif (result['length'] > 0x0) {\n    console['log'](result['join']('\\x20'));\n}", "test_cases": [["3\n1 0 0", "1\n1"], ["5\n0 0 0 0 0", "0"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args= arg_str.split('\\n')\nconst N = parseInt(args[0])\nconst a_array = args[1].split(' ').map(x=>parseInt(x))\n\nfor(let i=N;i>=1;i--){\n  let i_n = 0\n  if(i==1){\n    i_n = N\n  }else{\n    i_n = Math.sqrt(N)\n  }\n  for(let j=i_n;j>=1;j--){\n    if(i < j){\n      if(j % i == 0){\n        a_array[i-1] ^= a_array[j-1]\n      }\n    }else{\n      continue\n    }\n  }\n}\n\nconst result = []\na_array.forEach((item, index)=>{\n  if(item==1){\n    result.push(index+1)\n  }\n})\n\nconsole.log(result.length)\nif(result.length > 0){\n  console.log(result.join(' '))\n}\n", "language": "JavaScript"}
{"filename": "p02994_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(stdin) {\n    const pKleba = {\n        'aXXSL': function (x, y) {\n            return x < y;\n        },\n        'BXzIr': function (x, y) {\n            return x + y;\n        },\n        'vfsoI': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = stdin['split']('\\x20')['map'](v => parseInt(v, 0xa));\n    const N = input[0x0];\n    const L = input[0x1];\n    let sum = 0x0;\n    let min = Infinity;\n    for (let i = L; pKleba['aXXSL'](i, pKleba['BXzIr'](L, N)); ++i) {\n        sum += i;\n        if (pKleba['aXXSL'](Math['abs'](i), Math['abs'](min)))\n            min = i;\n    }\n    console['log'](pKleba['vfsoI'](sum, min));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2", "18"], ["3 -1", "0"], ["30 -50", "-1044"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split(' ').map(v => parseInt(v, 10));\n  const N = input[0];\n  const L = input[1];\n\n  let sum = 0;\n  let min = Infinity;\n\n  for (let i = L; i < L + N; ++i) {\n    sum += i;\n    if (Math.abs(i) < Math.abs(min)) min = i;\n  }\n  \n  console.log(sum - min);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03075_1", "type": "JavaScript", "obfuscated": "fs = require('fs');\nl = fs['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nx = [];\nfor (i = 0x0; i < 0x6; i++) {\n    x['push'](parseInt(l[i]));\n}\nif (x[0x4] - x[0x0] <= x[0x5]) {\n    console['log']('Yay!');\n} else {\n    console['log'](':(');\n}", "test_cases": [["1\n2\n4\n8\n9\n15", "Yay!"], ["15\n18\n26\n35\n36\n18", ":("]], "original": "fs=require(\"fs\");\nl=fs.readFileSync(\"/dev/stdin\",\"utf8\").split(\"\\n\");\nx=[];\nfor(i=0;i<6;i++){\n  x.push(parseInt(l[i]));\n}\nif(x[4]-x[0]<=x[5]){\n  console.log('Yay!');\n}else{\n  console.log(':(');\n}", "language": "JavaScript"}
{"filename": "p03261_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nlet ws = new Set();\nlet prev = null;\nconsole['log'](((() => {\n    const KDTFoE = {\n        'XEjgE': function (x, y) {\n            return x + y;\n        },\n        'NjaFg': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    for (const w of input['slice'](0x1, KDTFoE['XEjgE'](KDTFoE['NjaFg'](parseInt, input[0x0]), 0x1))) {\n        if (prev && prev != w[0x0]) {\n            return 'No';\n        }\n        if (ws['has'](w)) {\n            return 'No';\n        }\n        ws['add'](w);\n        prev = w['substr'](-0x1);\n    }\n    return 'Yes';\n})()));", "test_cases": [["4\nhoge\nenglish\nhoge\nenigma", "No"], ["9\nbasic\nc\ncpp\nphp\npython\nnadesico\nocaml\nlua\nassembly", "Yes"], ["8\na\naa\naaa\naaaa\naaaaa\naaaaaa\naaa\naaaaaaa", "No"], ["3\nabc\narc\nagc", "No"]], "original": "\"use strict\";\nconst input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\");\nlet ws = new Set();\nlet prev = null;\nconsole.log((() => {\n\tfor (const w of input.slice(1,parseInt(input[0]) + 1)) {\n\t\tif (prev && prev != w[0]) {\n\t\t\treturn \"No\";\n\t\t}\n\t\tif (ws.has(w)) {\n\t\t\treturn \"No\";\n\t\t}\n\t\tws.add(w);\n\t\tprev = w.substr(-1);\n\t}\n\treturn \"Yes\";\n})());\n", "language": "JavaScript"}
{"filename": "p03262_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const HeOOuy = {\n        'tfspV': function (x, y) {\n            return x - y;\n        },\n        'LbCec': function (x, y) {\n            return x >= y;\n        },\n        'ukkrI': function (x, y) {\n            return x - y;\n        },\n        'WbWAG': function (x, y) {\n            return x !== y;\n        },\n        'GYJWu': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0]['split']('\\x20')[0x0]);\n    const X = parseInt(input[0x0]['split']('\\x20')[0x1]);\n    const arr = input[0x1]['split']('\\x20')['map'](v => parseInt(v))['sort']((a, b) => a - b);\n    let mostNear = 0x174876e800;\n    arr['forEach'](v => {\n        let dist = Math['abs'](HeOOuy['tfspV'](X, v));\n        if (dist < mostNear) {\n            mostNear = dist;\n        }\n    });\n    for (let i = mostNear; HeOOuy['LbCec'](i, 0x0); i--) {\n        for (let v of arr) {\n            let diff = Math['abs'](HeOOuy['ukkrI'](v, X));\n            if (HeOOuy['WbWAG'](HeOOuy['GYJWu'](diff, mostNear), 0x0)) {\n                break;\n            }\n            console['log'](i);\n            return;\n        }\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["3 3\n1 7 11", "2"], ["3 81\n33 105 57", "24"], ["1 1\n1000000000", "999999999"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0].split(' ')[0])\n    const X = parseInt(input[0].split(' ')[1])\n    const arr = input[1].split(' ').map(v => parseInt(v)).sort((a, b) => a - b)\n    let mostNear = 100000000000\n    arr.forEach(v => {\n        let dist = Math.abs(X - v)\n        if(dist < mostNear){\n            mostNear = dist\n        }\n    })\n\n    for(let i = mostNear; i >= 0; i--){\n        for(let v of arr){\n            let diff = Math.abs(v - X)\n            if(diff % mostNear !== 0){\n                break\n            }\n            console.log(i)\n            return\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03370_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['split']('\\x0a');\nlet info = input['shift']();\nlet N = info['split']('\\x20')[0x0] * 0x1;\nlet X = info['split']('\\x20')[0x1];\nlet arr = input['map'](x => x * 0x1);\nlet min = Math['min'](...arr);\nlet sum = arr['reduce']((x, a) => {\n    return a + x;\n});\nlet ans = N + Math['floor']((X - sum) / min);\nconsole['log'](ans);", "test_cases": [["3 1000\n120\n100\n140", "9"], ["4 360\n90\n90\n90\n90", "4"], ["5 3000\n150\n130\n150\n130\n110", "26"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\n// 必要な変数に定義する\ninput = input.split('\\n');\nlet info = input.shift();\nlet N = info.split(\" \")[0]*1;\nlet X = info.split(\" \")[1];\n// 配列要素を数値に変換\nlet arr = input.map(x=> x*1);\nlet min = Math.min(...arr);\n// とりあえず1つずつ要素を足したもの\nlet sum = arr.reduce((x,a)=> {return a+x})\n// 残りで一番量が少なくて済むドーナッツに割り当てる\nlet ans = N + Math.floor((X - sum)/min);\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p03377_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nA = l[0x0] * 0x1;\nB = l[0x1] * 0x1;\nX = l[0x2] * 0x1;\nconsole['log'](A + B > X && A < X ? 'YES' : 'NO');", "test_cases": [["3 5 4", "YES"], ["2 2 6", "NO"], ["5 3 2", "NO"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nA = l[0] * 1\nB = l[1] * 1 \nX = l[2] * 1 \nconsole.log(A + B > X && A < X ? 'YES' : 'NO')\t", "language": "JavaScript"}
{"filename": "p03399_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var wOuwrH = {\n        'TUwWv': function (x, y) {\n            return x <= y;\n        },\n        'yWZnH': function (x, y) {\n            return x + y;\n        },\n        'DXZWA': function (x, y) {\n            return x >= y;\n        },\n        'uLgYw': function (x, y) {\n            return x + y;\n        }\n    };\n    var xs = input['trim']()['split']('\\x0a')['map'](v => parseInt(v, 0xa));\n    var A = 0x0;\n    if (wOuwrH['TUwWv'](xs[0x0], xs[0x1])) {\n        A = wOuwrH['yWZnH'](A, xs[0x0]);\n    } else if (wOuwrH['DXZWA'](xs[0x0], xs[0x1])) {\n        A = wOuwrH['yWZnH'](A, xs[0x1]);\n    }\n    var B = 0x0;\n    if (xs[0x2] <= xs[0x3]) {\n        B = wOuwrH['yWZnH'](B, xs[0x2]);\n    } else if (xs[0x2] >= xs[0x3]) {\n        B = B + xs[0x3];\n    }\n    console['log'](wOuwrH['uLgYw'](A, B));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["600\n300\n220\n420", "520"], ["555\n555\n400\n200", "755"], ["549\n817\n715\n603", "1152"]], "original": "function Main(input){\n\tvar xs = input.trim().split('\\n').map(v=>parseInt(v,10));\n      var A = 0;\n      if(xs[0] <= xs[1]){\n      A = A + xs[0];\n      }else if(xs[0] >= xs[1]){\n      A = A + xs[1];\n      }\n      var B = 0;\n      if(xs[2] <= xs[3]){\n      B = B + xs[2];\n      }else if(xs[2] >= xs[3]){\n      B = B + xs[3];\n      }\n    console.log(A+B);      \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03448_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const ToLeSD = {\n        'DgBFx': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'lsfYo': function (x, y) {\n            return x <= y;\n        },\n        'ZHBub': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'BsGik': function (x, y) {\n            return x <= y;\n        },\n        'NctTr': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'xHQUc': function (x, y) {\n            return x <= y;\n        },\n        'ALiCm': function (x, y) {\n            return x == y;\n        },\n        'rzfZB': function (x, y) {\n            return x + y;\n        },\n        'gYZpz': function (x, y) {\n            return x * y;\n        },\n        'RCilm': function (x, y) {\n            return x * y;\n        }\n    };\n    const input_array = input['split']('\\x0a');\n    const coins_count = input_array['slice'](0x0, 0x3);\n    const desired_sum = ToLeSD['DgBFx'](parseInt, input_array['slice'](-0x1), 0xa);\n    var answer = 0x0;\n    for (i = 0x0; ToLeSD['lsfYo'](i, ToLeSD['ZHBub'](parseInt, coins_count[0x0], 0xa)); i++) {\n        for (j = 0x0; ToLeSD['BsGik'](j, ToLeSD['NctTr'](parseInt, coins_count[0x1], 0xa)); j++) {\n            for (k = 0x0; ToLeSD['xHQUc'](k, parseInt(coins_count[0x2], 0xa)); k++) {\n                if (ToLeSD['ALiCm'](ToLeSD['rzfZB'](ToLeSD['rzfZB'](ToLeSD['gYZpz'](0x1f4, i), 0x64 * j), ToLeSD['RCilm'](0x32, k)), desired_sum)) {\n                    answer++;\n                }\n            }\n        }\n    }\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n2\n2\n100", "2"], ["5\n1\n0\n150", "0"], ["30\n40\n50\n6000", "213"]], "original": "// 500, 100, 50\nfunction main(input) {\n  const input_array = input.split(\"\\n\");\n  const coins_count = input_array.slice(0,3);\n  const desired_sum = parseInt(input_array.slice(-1), 10);\n\n  var answer = 0;\n  for(i=0; i<=parseInt(coins_count[0], 10); i++){\n    for(j=0; j<=parseInt(coins_count[1], 10); j++){\n      for(k=0; k<=parseInt(coins_count[2], 10); k++){\n        if (500 * i + 100 * j + 50 * k == desired_sum){\n          answer++;\n        }\n      }\n    }\n  }\n  \n  console.log(answer);\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03456_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var QgBvYC = {\n        'HrHnt': '0|5|2|4|1|3',\n        'CqaFL': function (x, y) {\n            return x === y;\n        },\n        'azJOn': 'Yes',\n        'cDSUu': function (callee, param1) {\n            return callee(param1);\n        },\n        'uXVOU': function (x, y) {\n            return x + y;\n        }\n    };\n    var UymEbM = QgBvYC['HrHnt']['split']('|');\n    var EPjour = 0x0;\n    while (!![]) {\n        switch (UymEbM[EPjour++]) {\n        case '0':\n            var inp = input['split']('\\x20');\n            continue;\n        case '1':\n            var flsqn = Math['floor'](Math['sqrt'](n));\n            continue;\n        case '2':\n            var b = inp[0x1];\n            continue;\n        case '3':\n            QgBvYC['CqaFL'](flsqn * flsqn, n) ? console['log'](QgBvYC['azJOn']) : console['log']('No');\n            continue;\n        case '4':\n            var n = QgBvYC['cDSUu'](parseInt, QgBvYC['uXVOU'](a, b));\n            continue;\n        case '5':\n            var a = inp[0x0];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 21", "Yes"], ["100 100", "No"], ["12 10", "No"]], "original": "function Main(input){\n  var inp = input.split(' ');\n  var a = inp[0];\n  var b = inp[1];\n  var n = parseInt(a + b);\n  var flsqn = Math.floor(Math.sqrt(n));\n  flsqn * flsqn === n ? console.log('Yes') : console.log('No');\n//  (Math.floor(Math.sqrt(n))) ** 2 ? console.log('Yes') : console.log('No');\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03597_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var qGfzAe = {\n        'jTOZc': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a')['map'](n => parseInt(n, 0xa));\n    console['log'](qGfzAe['jTOZc'](Math['pow'](input[0x0], 0x2), input[0x1]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n4", "5"], ["19\n100", "261"], ["10\n0", "100"]], "original": "function Main(input) {\n    input = input.split('\\n').map(n => parseInt(n, 10));\n    console.log((Math.pow(input[0], 2)) - input[1]);\n }\n  Main(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03625_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const Youzji = {\n        'jyTSx': function (x, y) {\n            return x < y;\n        },\n        'QHHeX': function (x, y) {\n            return x == y;\n        },\n        'EVXrI': function (x, y) {\n            return x >= y;\n        },\n        'aIxQP': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split'](/\\r?\\n/);\n    input = input[0x1]['split']('\\x20')['map'](v => ~~v)['sort']((a, b) => b - a);\n    let ans = 0x0;\n    let sticks = [];\n    let prev = input[0x0];\n    for (let i = 0x1; Youzji['jyTSx'](i, input['length']); i++) {\n        if (Youzji['QHHeX'](prev, input[i])) {\n            sticks['push'](prev);\n            sticks['push'](input[i]);\n            prev = 0x0;\n        } else {\n            prev = input[i];\n        }\n    }\n    if (Youzji['EVXrI'](sticks['length'], 0x4)) {\n        ans = Youzji['aIxQP'](sticks[0x0], sticks[0x3]);\n        console['log'](ans);\n    } else {\n        console['log'](0x0);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n3 1 2 4 2 1", "2"], ["4\n1 2 3 4", "0"], ["10\n3 3 3 3 4 4 4 5 5 5", "20"]], "original": "\n\"use strict\"\n\nfunction main(input) {\n    input = input.split(/\\r?\\n/)\n    input = input[1].split(' ').map(v => ~~v).sort((a, b) => b - a)\n\n    let ans = 0\n    let sticks = [] // 2本ずつ、2本ずつ、\n    let prev = input[0]\n    for (let i = 1; i < input.length; i++) {\n\n        if (prev == input[i]) {\n            sticks.push(prev)\n            sticks.push(input[i])\n            prev = 0\n        } else {\n            prev = input[i]\n        }\n\n    }\n    if (sticks.length >= 4) {\n        ans = sticks[0] * sticks[3]\n        console.log(ans)\n    } else {\n        console.log(0)\n    }\n\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03680_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const DqVezE = {\n        'EzqhC': function (x, y) {\n            return x + y;\n        },\n        'zfKvF': function (x, y) {\n            return x !== y;\n        },\n        'WaecQ': function (x, y) {\n            return x - y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = ~~arg[0x0];\n    const S = arg['slice'](0x1, DqVezE['EzqhC'](N, 0x1))['map'](n => ~~n);\n    let now = 0x1;\n    let cnt = 0x0;\n    while (DqVezE['zfKvF'](now, 0x2)) {\n        now = S[DqVezE['WaecQ'](now, 0x1)];\n        cnt++;\n        if (cnt > N) {\n            console['log'](-0x1);\n            return;\n        }\n    }\n    console['log'](cnt);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n3\n1\n2", "2"], ["4\n3\n4\n1\n2", "-1"], ["5\n3\n3\n4\n2\n4", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = ~~arg[0];\n    const S = arg.slice(1, N + 1).map(n=>~~n);\n    \n    let now = 1;\n    let cnt = 0;\n    \n    while(now !== 2) {\n        now = S[now - 1];\n        cnt++;\n        \n        if(cnt > N) {\n            console.log(-1);\n            return;\n        }\n    }\n    \n    console.log(cnt);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03773_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var mPlXSN = {\n        'UTexG': function (callee, param1) {\n            return callee(param1);\n        },\n        'Arysq': function (x, y) {\n            return x < y;\n        }\n    };\n    var lines = chunk['toString']()['split']('\\x20');\n    var first = mPlXSN['UTexG'](Number, lines[0x0]);\n    var second = mPlXSN['UTexG'](Number, lines[0x1]);\n    var time = second + first;\n    if (mPlXSN['Arysq'](time, 0x18)) {\n        console['log'](time);\n    } else {\n        console['log'](time - 0x18);\n    }\n});", "test_cases": [["9 12", "21"], ["19 0", "19"], ["23 2", "1"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    var lines = chunk.toString().split(' ');\n    var first = Number(lines[0]);\n    var second = Number(lines[1]);\n\n    var time = second + first;\n    \n    if(\n        time<24)\n        {\n            console.log(time)\n        }else{\n            console.log(time-24)\n        }\n        \n//    console.log(lines);\n});", "language": "JavaScript"}
{"filename": "p00007_1", "type": "JavaScript", "obfuscated": "function main() {\n    var hZMqpn = {\n        'ewdsS': function (x, y) {\n            return x < y;\n        },\n        'MbgdR': function (x, y) {\n            return x - y;\n        },\n        'DtKVY': function (x, y) {\n            return x * y;\n        },\n        'MoRxf': function (x, y) {\n            return x / y;\n        }\n    };\n    var debt = 0x186a0;\n    for (var i = 0x0; hZMqpn['ewdsS'](i, hZMqpn['MbgdR'](input['trim'](), 0x0)); i++) {\n        debt = hZMqpn['DtKVY'](Math['ceil'](hZMqpn['MoRxf'](hZMqpn['DtKVY'](debt, 1.05), 0x3e8)), 0x3e8);\n    }\n    console['log'](debt);\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var yCKSeV = {\n        'mClDh': function (callee) {\n            return callee();\n        }\n    };\n    yCKSeV['mClDh'](main);\n});", "test_cases": [["5", "130000"]], "original": "function main(){\n  var debt = 100000;\n \n  for(var i = 0; i < input.trim()-0; i++){\n    debt = Math.ceil((debt * 1.05)/1000) * 1000;\n  }\n\n  console.log(debt);\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  main();\n});", "language": "JavaScript"}
{"filename": "p02233_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const oiYbQk = {\n        'zOrYL': function (x, y) {\n            return x + y;\n        },\n        'lryhH': function (callee, param1) {\n            return callee(param1);\n        },\n        'vvfzN': function (callee, param1) {\n            return callee(param1);\n        },\n        'TsimR': '/dev/stdin',\n        'mIaYn': 'utf8',\n        'ePrrx': function (x, y) {\n            return x / y;\n        },\n        'CMSRu': function (x, y) {\n            return x - y;\n        },\n        'swwBw': function (x, y) {\n            return x / y;\n        },\n        'oVpdm': function (x, y) {\n            return x + y;\n        }\n    };\n    const n = oiYbQk['zOrYL'](oiYbQk['lryhH'](Number, oiYbQk['vvfzN'](require, 'fs')['readFileSync'](oiYbQk['TsimR'], oiYbQk['mIaYn'])), 0x1);\n    root5 = Math['sqrt'](0x5);\n    console['log'](Math['round'](oiYbQk['ePrrx'](0x1, root5) * oiYbQk['CMSRu'](Math['pow'](oiYbQk['swwBw'](oiYbQk['oVpdm'](0x1, root5), 0x2), n), Math['pow']((0x1 - root5) / 0x2, n))));\n}());", "test_cases": [["3", "3"]], "original": "(function main() {\n  const n = Number(require('fs').readFileSync('/dev/stdin', 'utf8')) + 1;\n  root5 = Math.sqrt(5);\n  console.log(Math.round(1/root5 * (Math.pow((1 + root5) / 2, n) - Math.pow((1 - root5) / 2, n))));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02612_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const YVzsgw = {\n        'MEBsW': function (x, y) {\n            return x % y;\n        },\n        'jzOxV': function (x, y) {\n            return x - y;\n        }\n    };\n    const hyaku = YVzsgw['MEBsW'](Number(input), 0x3e8);\n    console['log'](hyaku === 0x0 ? 0x0 : YVzsgw['jzOxV'](0x3e8, hyaku));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1900", "100"], ["3000", "0"]], "original": "function Main(input) {\n    const hyaku = Number(input)%1000;\n    console.log(hyaku === 0 ? 0: 1000-hyaku);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02694_1", "type": "JavaScript", "obfuscated": "const main = inputs => {\n    var GetJXT = {\n        'aEUux': '2|1|5|0|4|3',\n        'ohnox': function (callee, param1) {\n            return callee(param1);\n        },\n        'mOVFx': function (x, y) {\n            return x * y;\n        },\n        'qSTuU': function (x, y) {\n            return x + y;\n        }\n    };\n    var QSVVka = GetJXT['aEUux']['split']('|');\n    var nOhTYU = 0x0;\n    while (!![]) {\n        switch (QSVVka[nOhTYU++]) {\n        case '0':\n            var count = 0x0;\n            continue;\n        case '1':\n            var X = GetJXT['ohnox'](Number, array);\n            continue;\n        case '2':\n            var array = inputs[0x0]['split']('\\x20');\n            continue;\n        case '3':\n            console['log'](count);\n            continue;\n        case '4':\n            while (0x1) {\n                var risoku = Math['floor'](GetJXT['mOVFx'](num, 0.01));\n                num = GetJXT['qSTuU'](num, risoku);\n                count++;\n                if (X <= num)\n                    break;\n            }\n            continue;\n        case '5':\n            var num = 0x64;\n            continue;\n        }\n        break;\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8')['trim']()['split']('\\x0a'));", "test_cases": [["103", "3"], ["1000000000000000000", "3760"], ["1333333333", "1706"]], "original": "const main = (inputs) => {\n  var array = inputs[0].split(\" \");\n  var X = Number(array);\n\n  var num = 100;\n  var count = 0;\n  while (1) {\n    var risoku = Math.floor(num * 0.01);\n    num = num + risoku;\n    count++;\n    if (X <= num) break;\n  }\n\n  console.log(count);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02702_1", "type": "JavaScript", "obfuscated": "const Main = () => {\n    const AUSoJf = {\n        'nFJVm': '/dev/stdin',\n        'xpJKq': 'utf8',\n        'CtSuZ': function (x, y) {\n            return x < y;\n        },\n        'Tqhkp': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'fznOn': function (x, y) {\n            return x % y;\n        }\n    };\n    let line = require('fs')['readFileSync'](AUSoJf['nFJVm'], AUSoJf['xpJKq']);\n    const mod = {};\n    let count = 0x0;\n    for (let i = line['length']; AUSoJf['CtSuZ'](0x0, i); i--) {\n        const n = AUSoJf['Tqhkp'](parseInt, line, 0xa);\n        const m = AUSoJf['fznOn'](n, 0x7e3);\n        if (mod[m] || m === 0x0) {\n            count++;\n        }\n        mod[m] = !![];\n        line = line['slice'](0x1);\n    }\n    console['log'](count);\n};\nMain();", "test_cases": [["1817181712114", "3"], ["14282668646", "2"], ["2119", "0"]], "original": "const Main = () => {\n    let line = require('fs').readFileSync('/dev/stdin', 'utf8');\n    const mod = {};\n    let count = 0;\n    for (let i = line.length; 0 < i; i--) {\n        const n = parseInt(line, 10);\n        const m = n % 2019;\n        if (mod[m] || m === 0) {\n            count ++;\n        }\n        mod[m] = true;\n        line = line.slice(1);\n    }\n    console.log(count);\n}\n\nMain();", "language": "JavaScript"}
{"filename": "p02717_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    var HVOrVT = {\n        'FxcZd': function (x, y) {\n            return x + y;\n        }\n    };\n    var line = input['split']('\\x20');\n    console['log'](HVOrVT['FxcZd'](line[0x2] + '\\x20' + line[0x0], '\\x20') + line[0x1]);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 2 3", "3 1 2"], ["100 100 100", "100 100 100"], ["41 59 31", "31 41 59"]], "original": "\"use strict\";\nfunction main(input) {\n    var line = input.split(\" \");\n    console.log(line[2] + \" \" + line[0] + \" \" + line[1]); \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02719_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var yLWwbJ = {\n        'bxYvq': function (callee, param1) {\n            return callee(param1);\n        },\n        'VekVe': function (x, y) {\n            return x === y;\n        },\n        'mneOv': function (x, y) {\n            return x - y;\n        },\n        'QYKOj': function (x, y) {\n            return x >= y;\n        }\n    };\n    input = input['split']('\\x0a');\n    tmp = input[0x0]['split']('\\x20');\n    var N = yLWwbJ['bxYvq'](Number, tmp[0x0]);\n    var K = yLWwbJ['bxYvq'](Number, tmp[0x1]);\n    if (yLWwbJ['VekVe'](K, 0x1))\n        return console['log'](0x0);\n    var current = Math['abs'](yLWwbJ['mneOv'](N, K));\n    N = current;\n    while (yLWwbJ['QYKOj'](current, N)) {\n        N = current;\n        current = Math['abs'](yLWwbJ['mneOv'](N, K));\n    }\n    console['log'](current);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 4", "1"], ["2 6", "2"], ["1000000000000000000 1", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\ttmp = input[0].split(\" \");\n\tvar N = Number(tmp[0])\n    var K = Number(tmp[1])\n    if(K === 1) return console.log(0)\n    \n    var current = Math.abs(N - K)\n    N = current\n    while(current >= N) {\n      \n      N = current\n      current = Math.abs(N - K)\n    }\n  console.log(current)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02789_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var wpYDgN = {\n        'DzbYR': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KLVYV': 'Yes'\n    };\n    var args = input['split']('\\x20');\n    var n = wpYDgN['DzbYR'](parseInt, args[0x0], 0xa);\n    var m = wpYDgN['DzbYR'](parseInt, args[0x1], 0xa);\n    if (n === m) {\n        return wpYDgN['KLVYV'];\n    } else {\n        return 'No';\n    }\n}\nconsole['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3 3", "Yes"], ["3 2", "No"], ["1 1", "Yes"]], "original": "function main(input) {\n  var args = input.split(' ');\n  var n = parseInt(args[0], 10);\n  var m = parseInt(args[1], 10);\n  if ( n === m) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n}\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02829_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const args = input['split']('\\x0a');\n    const num = args['map'](el => parseInt(el));\n    const ans = [\n        0x1,\n        0x2,\n        0x3\n    ];\n    let out = ans['filter'](el => el !== num[0x0]);\n    out = out['find'](el => el !== num[0x1]);\n    console['log'](out);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1", "2"], ["1\n2", "3"]], "original": "'use strict'\nfunction main(input) {\n  const args = input.split('\\n');\n  const num = args.map(el => parseInt(el))\n  const ans = [1, 2, 3]\n  let out = ans.filter(el => el !== num[0])\n  out = out.find(el => el !== num[1])\n  console.log(out)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02866_1", "type": "JavaScript", "obfuscated": "function main(arg) {\n    var lXNKMT = {\n        'kjDzD': function (x, y) {\n            return x < y;\n        },\n        'PvHhF': function (x, y) {\n            return x > y;\n        },\n        'mullr': function (x, y) {\n            return x * y;\n        },\n        'GktmN': function (x, y) {\n            return x % y;\n        }\n    };\n    var arg2 = arg['split']('\\x0a')[0x1]['split'](/\\s/g);\n    var kazoe = [];\n    for (i = 0x0; lXNKMT['kjDzD'](i, arg['split']('\\x0a')[0x0]); i++) {\n        if (!kazoe[arg2[i]]) {\n            kazoe[arg2[i]] = 0x0;\n        }\n        kazoe[arg2[i]] += 0x1;\n    }\n    var ans = 0x1;\n    for (j = 0x0; j < kazoe['length']; j++) {\n        if (lXNKMT['PvHhF'](j, 0x1)) {\n            ans = lXNKMT['mullr'](ans, Math['pow'](kazoe[j - 0x1], kazoe[j]));\n        }\n        if (!kazoe[j]) {\n            ans = 0x0;\n            break;\n        }\n    }\n    console['log'](lXNKMT['GktmN'](ans, 0x3b800001));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n0 1 1 2", "2"], ["4\n1 1 1 1", "0"], ["7\n0 3 2 1 2 2 1", "24"]], "original": "function main(arg) {\n    var arg2 = arg.split(\"\\n\")[1].split(/\\s/g); //元データ\n    var kazoe = []; //各数字の個数の配列\n\n\tfor(i=0;i<arg.split(\"\\n\")[0];i++){\n\t\t//もし存在しなければ作る\n\t\tif(!kazoe[arg2[i]]){\n\t\t\tkazoe[arg2[i]] = 0;\n\t\t}\n\t\tkazoe[arg2[i]] += 1;\n\t}\n\t//答えは(1の個数)^(2の個数)*(2の個数)^(3の個数)*(3の個数)^(4の個数)*…*(N-1の個数)^(Nの個数)\n\tvar ans = 1;\n\tfor(j=0;j<kazoe.length;j++){\n\t    if(j>1){\n\t    \tans = ans * Math.pow(kazoe[j-1],kazoe[j]);\n\t    }\n\t    //もし間に歯抜けがあればfalse\n\t    if(!kazoe[j]){\n\t       ans = 0;\n\t       break;\n\t    }\n\t}\n    console.log(ans%998244353);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02933_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    const RbyqdV = {\n        'FZvfe': function (x, y) {\n            return x >= y;\n        },\n        'kFCOs': 'red'\n    };\n    input = input['split']('\\x0a');\n    const a = input[0x0];\n    const s = input[0x1];\n    if (RbyqdV['FZvfe'](a, 0xc80)) {\n        console['log'](s);\n    } else {\n        console['log'](RbyqdV['kFCOs']);\n    }\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3200\npink", "pink"], ["3199\npink", "red"], ["4049\nred", "red"]], "original": "const Main = (input) => {\ninput = input.split('\\n')\nconst a = input[0];\nconst s = input[1];\n\nif(a>=3200){\n  console.log(s);\n}\nelse{\n  console.log(\"red\");\n}\n  \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p02936_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const kMqRkg = {\n        'mItZr': function (x, y) {\n            return x + y;\n        },\n        'zacMt': function (x, y) {\n            return x + y;\n        },\n        'ynhiB': function (x, y) {\n            return x - y;\n        },\n        'FkYGW': function (x, y) {\n            return x < y;\n        },\n        'kSkTr': function (x, y) {\n            return x > y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a')['map'](v => v['split']('\\x20')['map'](v => parseFloat(v)));\n    const n = tmp[0x0][0x0];\n    const q = tmp[0x0][0x1];\n    const edges = tmp['slice'](0x1, n);\n    const actions = tmp['slice'](n, kMqRkg['mItZr'](n, q));\n    const nodes = [...new Array(kMqRkg['zacMt'](n, 0x1))]['map'](v => []);\n    for (let i = 0x0; i < kMqRkg['ynhiB'](n, 0x1); i++) {\n        const p = edges[i][0x0];\n        nodes[p]['push'](edges[i][0x1]);\n    }\n    const ans = [...new Array(n + 0x1)]['map'](v => 0x0);\n    for (let i = 0x0; kMqRkg['FkYGW'](i, q); i++) {\n        const act = actions[i];\n        const cnt = act[0x1];\n        ans[act[0x0]] += cnt;\n        let stack = [...nodes[act[0x0]]];\n        while (kMqRkg['kSkTr'](stack['length'], 0x0)) {\n            const t = stack['pop']();\n            ans[t] += cnt;\n            stack = stack['concat'](nodes[t]);\n        }\n    }\n    console['log'](ans['slice'](0x1)['join']('\\x20'));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1", "100 110 111 110"], ["6 2\n1 2\n1 3\n2 4\n3 6\n2 5\n1 10\n1 10", "20 20 20 20 20 20"]], "original": "'use strict'\n\nfunction main(input) {\n  const tmp = input\n    .trim()\n    .split('\\n')\n    .map(v => v.split(' ').map(v => parseFloat(v)))\n  const n = tmp[0][0]\n  const q = tmp[0][1]\n  const edges = tmp.slice(1, n)\n  const actions = tmp.slice(n, n + q)\n\n  const nodes = [...new Array(n + 1)].map(v => [])\n  for (let i = 0; i < n - 1; i++) {\n    const p = edges[i][0]\n    nodes[p].push(edges[i][1])\n  }\n\n  const ans = [...new Array(n + 1)].map(v => 0)\n  // actions.forEach((act, i, self) => {\n  for (let i = 0; i < q; i++) {\n    const act = actions[i]\n    const cnt = act[1]\n    ans[act[0]] += cnt\n    let stack = [...nodes[act[0]]]\n\n    while (stack.length > 0) {\n      const t = stack.pop()\n      ans[t] += cnt\n      // stack = [...stack, ...nodes[t]]\n      stack = stack.concat(nodes[t])\n    }\n  }\n  console.log(ans.slice(1).join(' '))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02957_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const Ebnsso = {\n        'Jqmxt': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RcxCF': function (x, y) {\n            return x + y;\n        },\n        'jpjqx': function (x, y) {\n            return x / y;\n        },\n        'djZYo': function (x, y) {\n            return x === y;\n        },\n        'yQvUF': function (x, y) {\n            return x % y;\n        },\n        'nleGx': 'IMPOSSIBLE'\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const a = Ebnsso['Jqmxt'](parseInt, args[0x0][0x0], 0xa);\n    const b = Ebnsso['Jqmxt'](parseInt, args[0x0][0x1], 0xa);\n    const t1 = Ebnsso['RcxCF'](a, b);\n    const t2 = Ebnsso['jpjqx'](t1, 0x2);\n    if (Ebnsso['djZYo'](Ebnsso['yQvUF'](t2, 0x1), 0x0))\n        console['log'](t2);\n    else\n        console['log'](Ebnsso['nleGx']);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 16", "9"], ["0 3", "IMPOSSIBLE"], ["998244353 99824435", "549034394"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst a = parseInt(args[0][0], 10)\n\tconst b = parseInt(args[0][1], 10)\n\tconst t1 = a + b\n\tconst t2 = t1 / 2\n\tif (t2 % 1 === 0) console.log(t2)\n\telse console.log('IMPOSSIBLE')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02958_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var EJoDKd = {\n        'pFHbz': function (x, y) {\n            return x <= y;\n        },\n        'lCoxP': 'YES'\n    };\n    const a = lines[0x1]['split']('\\x20')['map'](v => v - 0x0);\n    const b = lines[0x1]['split']('\\x20')['map'](v => v - 0x0)['sort']((a, b) => a - b);\n    let ans = a['filter']((v, i) => v != b[i])['length'];\n    console['log'](EJoDKd['pFHbz'](ans, 0x2) ? EJoDKd['lCoxP'] : 'NO');\n});\nmin = (...a) => {\n    return a['reduce']((a, b) => a < b ? a : b, a[0x0]);\n};", "test_cases": [["5\n5 2 3 4 1", "YES"], ["5\n2 4 3 5 1", "NO"], ["7\n1 2 3 4 5 6 7", "YES"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const a = lines[1].split(\" \").map(v=>v-0);\n    const b = lines[1].split(\" \").map(v=>v-0).sort((a,b)=>a-b);\n    let ans = a.filter((v,i)=>v!=b[i]).length;\n    console.log(ans<=2?\"YES\":\"NO\");\n});\n\nmin = (...a)=>{return a.reduce((a,b)=>a<b?a:b, a[0])};\n", "language": "JavaScript"}
{"filename": "p02969_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar r = parseInt(input, 0xa);\nconsole['log'](0x3 * r * r);", "test_cases": [["4", "48"], ["15", "675"], ["80", "19200"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar r = parseInt(input, 10);\nconsole.log(3 * r * r);\n", "language": "JavaScript"}
{"filename": "p02971_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    var sppDZt = {\n        'wKrtm': function (x, y) {\n            return x >= y;\n        }\n    };\n    var input = arg['split']('\\x0a');\n    var retu = input[0x0];\n    var kazu = [];\n    for (var i = 0x1; sppDZt['wKrtm'](retu, i); i++) {\n        kazu['push'](input[i]);\n    }\n    for (var x = 0x0, len = kazu['length']; x < len; ++x) {\n        var kazu2 = kazu['slice'](0x0, kazu['length']);\n        kazu2['splice'](x, 0x1);\n        console['log'](Math['max']['apply'](null, kazu2));\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1\n4\n3", "4\n3\n4"], ["2\n5\n5", "5\n5"]], "original": "\"use strict\"\nfunction main(arg) {\n    //とりあえず行を分割\n    var input = arg.split(\"\\n\");\n    var retu = input[0];\n    var kazu = [];\n    for(var i = 1; retu >= i ;i++){\n        kazu.push(input[i]);\n    }\n\n//X番目を抜いた中で一番大きいやつを求める\nfor (var x = 0, len = kazu.length; x < len; ++x) {\n  var kazu2 = kazu.slice(0, kazu.length);\n  kazu2.splice(x, 1);\n  console.log(Math.max.apply(null, kazu2));\n}\n    \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03024_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const RoZfcl = {\n        'HaAcP': function (x, y) {\n            return x - y;\n        },\n        'iOkJX': function (x, y) {\n            return x >= y;\n        },\n        'LKFXR': 'YES'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    const win = S['filter'](n => n === 'o')['length'];\n    const rest = RoZfcl['HaAcP'](0xf, S['length']);\n    console['log'](RoZfcl['iOkJX'](rest + win, 0x8) ? RoZfcl['LKFXR'] : 'NO');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["oxoxoxoxoxoxox", "YES"], ["xxxxxxxx", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    const win  = S.filter(n=>n===\"o\").length;\n    const rest = 15 - S.length;\n    \n    console.log((rest + win) >= 8 ? \"YES\" : \"NO\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03042_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var VMIKOK = {\n        'itNdt': '1|9|0|5|4|7|3|10|6|2|8',\n        'IZybJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'DdBqQ': function (x, y) {\n            return x == y;\n        },\n        'pZtxY': 'AMBIGUOUS',\n        'ItTry': function (x, y) {\n            return x >= y;\n        },\n        'jDlmZ': function (x, y) {\n            return x == y;\n        },\n        'cMUSQ': function (x, y) {\n            return x == y;\n        },\n        'rdUQt': function (x, y) {\n            return x == y;\n        },\n        'IAfKQ': function (x, y) {\n            return x == y;\n        },\n        'rWgZb': 'MMYY',\n        'opodE': function (x, y) {\n            return x >= y;\n        },\n        'DYLal': function (x, y) {\n            return x <= y;\n        },\n        'MPOhQ': function (x, y) {\n            return x + y;\n        },\n        'thwEj': 'YYMM'\n    };\n    var Oubamp = VMIKOK['itNdt']['split']('|');\n    var sIfQaG = 0x0;\n    while (!![]) {\n        switch (Oubamp[sIfQaG++]) {\n        case '0':\n            var r = 0x0;\n            continue;\n        case '1':\n            var a = VMIKOK['IZybJ'](parseInt, input['charAt'](0x0) + input['charAt'](0x1));\n            continue;\n        case '2':\n            if (VMIKOK['DdBqQ'](r, 0x3)) {\n                console['log'](VMIKOK['pZtxY']);\n            }\n            continue;\n        case '3':\n            if (VMIKOK['ItTry'](a, 0xd) && VMIKOK['ItTry'](b, 0xd) || a >= 0xd && VMIKOK['jDlmZ'](b, 0x0) || VMIKOK['cMUSQ'](a, 0x0) && VMIKOK['ItTry'](b, 0xd) || VMIKOK['rdUQt'](a, 0x0) && VMIKOK['cMUSQ'](b, 0x0)) {\n                r = 0x4;\n            }\n            continue;\n        case '4':\n            if (b >= 0xd || VMIKOK['cMUSQ'](b, 0x0)) {\n                r = 0x2;\n            }\n            continue;\n        case '5':\n            if (a >= 0xd || VMIKOK['jDlmZ'](a, 0x0)) {\n                r = 0x1;\n            }\n            continue;\n        case '6':\n            if (VMIKOK['IAfKQ'](r, 0x2)) {\n                console['log'](VMIKOK['rWgZb']);\n            }\n            continue;\n        case '7':\n            if (a >= 0x1 && a <= 0xc && VMIKOK['opodE'](b, 0x1) && VMIKOK['DYLal'](b, 0xc)) {\n                r = 0x3;\n            }\n            continue;\n        case '8':\n            if (VMIKOK['DdBqQ'](r, 0x4)) {\n                console['log']('NA');\n            }\n            continue;\n        case '9':\n            var b = parseInt(VMIKOK['MPOhQ'](input['charAt'](0x2), input['charAt'](0x3)));\n            continue;\n        case '10':\n            if (VMIKOK['DdBqQ'](r, 0x1)) {\n                console['log'](VMIKOK['thwEj']);\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1905", "YYMM"], ["0112", "AMBIGUOUS"], ["1700", "NA"]], "original": "function Main(input) {\n\tvar a = parseInt(input.charAt(0)+input.charAt(1));\n\tvar b = parseInt(input.charAt(2)+input.charAt(3));\n\tvar r = 0;\t// 1=YYMM、2=MMYY、3=両方、4=どちらでもない\n\tif(a >= 13 || a == 0){\n\t\tr = 1;\n\t}\n\tif(b >= 13 || b == 0){\n\t\tr = 2;\n\t}\n\tif(a >= 1 && a <= 12 && b >= 1 && b <= 12){\n\t\tr = 3;\n\t}\n\tif(a >= 13 && b >= 13 || a >= 13 && b == 0 || a == 0 && b >= 13 || a == 0 && b == 0){\n\t\tr = 4;\n\t}\n\tif(r == 1){ console.log(\"YYMM\"); }\n\tif(r == 2){ console.log(\"MMYY\"); }\n\tif(r == 3){ console.log(\"AMBIGUOUS\"); }\n\tif(r == 4){ console.log(\"NA\"); }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03068_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var vbttvL = {\n        'QRWLT': '4|3|2|0|6|1|5',\n        'zDSki': function (x, y) {\n            return x < y;\n        },\n        'yJtvV': function (x, y) {\n            return x !== y;\n        },\n        'PxviY': function (x, y) {\n            return x - y;\n        },\n        'CJeQW': function (callee, param1) {\n            return callee(param1);\n        },\n        'JmBWu': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var njaxEL = vbttvL['QRWLT']['split']('|');\n    var EtslIc = 0x0;\n    while (!![]) {\n        switch (njaxEL[EtslIc++]) {\n        case '0':\n            for (var i = 0x0; vbttvL['zDSki'](i, N); i++) {\n                if (vbttvL['yJtvV'](S[vbttvL['PxviY'](K, 0x1)], S[i])) {\n                    S[i] = '*';\n                }\n            }\n            continue;\n        case '1':\n            for (var i = 0x0; vbttvL['zDSki'](i, N); i++) {\n                result = result + S[i];\n            }\n            continue;\n        case '2':\n            var K = vbttvL['CJeQW'](Number, lines[0x2]);\n            continue;\n        case '3':\n            var S = lines[0x1]['split']('');\n            continue;\n        case '4':\n            var N = vbttvL['JmBWu'](Number, lines[0x0]);\n            continue;\n        case '5':\n            console['log'](result);\n            continue;\n        case '6':\n            var result = '';\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["5\nerror\n2", "*rr*r"], ["6\neleven\n5", "e*e*e*"], ["9\neducation\n7", "******i**"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var S = lines[1].split(\"\");\n    var K = Number(lines[2]);\n\n    for (var i = 0; i < N; i++) {\n        if (S[K - 1] !== S[i]) { S[i] = \"*\"; }\n    }\n    var result =\"\";\n    for (var i = 0; i < N; i++) {\n        result = result + S[i];\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p03125_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const HujYmJ = {\n        'wLVta': function (x, y) {\n            return x == y;\n        },\n        'OGaLx': function (x, y) {\n            return x % y;\n        },\n        'kaALq': function (x, y) {\n            return x + y;\n        },\n        'SAGwy': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']();\n    const a = input['split']('\\x20')['map'](Number);\n    console['log'](HujYmJ['wLVta'](HujYmJ['OGaLx'](a[0x1], a[0x0]), 0x0) ? HujYmJ['kaALq'](a[0x0], a[0x1]) : HujYmJ['SAGwy'](a[0x1], a[0x0]));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 12", "16"], ["8 20", "12"], ["1 1", "2"]], "original": "function main(input) {\n   input = input.trim();\n  const a = input.split(\" \").map(Number);\n\tconsole.log(a[1]%a[0]==0?a[0]+a[1]:a[1]-a[0]);\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03136_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const qmZuZW = {\n        'OstDz': function (callee, param1) {\n            return callee(param1);\n        },\n        'sbeAr': function (x, y) {\n            return x < y;\n        },\n        'deKgf': 'Yes'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = qmZuZW['OstDz'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    let L = arg[0x1]['split']('\\x20')['map'](n => parseInt(n))['sort']((a, b) => b - a);\n    const longest = L['shift']();\n    const sum = L['reduce']((m, n) => m + n);\n    console['log'](qmZuZW['sbeAr'](longest, sum) ? qmZuZW['deKgf'] : 'No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n3 8 5 1", "Yes"], ["4\n3 8 4 1", "No"], ["10\n1 8 10 5 8 12 34 100 11 3", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    let L = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>b-a);\n    \n    const longest = L.shift();\n    const sum = L.reduce((m,n)=>m+n);\n    \n    console.log(longest < sum ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03285_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const HGUZyp = {\n        'WOcHC': function (x, y) {\n            return x < y;\n        },\n        'ktlRw': function (x, y) {\n            return x === y;\n        },\n        'tAqzP': function (x, y) {\n            return x % y;\n        },\n        'zTxds': 'Yes',\n        'JogsT': function (x, y) {\n            return x % y;\n        },\n        'tbKbU': function (callee) {\n            return callee();\n        },\n        'NdKto': function (callee, param1) {\n            return callee(param1);\n        },\n        'OCKEk': function (callee) {\n            return callee();\n        }\n    };\n    let N = HGUZyp['NdKto'](Number, input);\n    const func = () => {\n        if (HGUZyp['WOcHC'](N, 0x4)) {\n            console['log']('No');\n        } else if (HGUZyp['ktlRw'](HGUZyp['tAqzP'](N, 0x4), 0x0)) {\n            console['log'](HGUZyp['zTxds']);\n        } else if (HGUZyp['JogsT'](N, 0x7) === 0x0) {\n            console['log'](HGUZyp['zTxds']);\n        } else {\n            N -= 0x4;\n            HGUZyp['tbKbU'](func);\n        }\n    };\n    HGUZyp['OCKEk'](func);\n}\n;\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["11", "Yes"], ["40", "Yes"], ["3", "No"]], "original": "'use strict';\n\nfunction Main(input) {\n  let N = Number(input);\n\n  const func = () => {\n    if(N < 4) {\n      console.log('No');\n    } else if (N % 4 === 0) {\n      console.log('Yes');\n    } else if (N % 7 === 0) {\n      console.log('Yes');\n    } else {\n      N -= 4;\n      func();\n    }\n  };\n\n  func();\n\n\n\n};\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03294_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var OEbibR = {\n        'nPmVb': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (OEbibR['nPmVb'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var EYSosH = {\n        'kCTbj': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; EYSosH['kCTbj'](i, rest['length']); i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var OSvGbk = {\n        'JaoJh': function (x, y) {\n            return x < y;\n        }\n    };\n    var InmhfU = '5|0|2|6|3|4|1'['split']('|');\n    var tEznZN = 0x0;\n    while (!![]) {\n        switch (InmhfU[tEznZN++]) {\n        case '0':\n            var n = toInt(input[0x0]);\n            continue;\n        case '1':\n            console['log'](ans);\n            continue;\n        case '2':\n            var as = toIntArr(input[0x1]['split']('\\x20'));\n            continue;\n        case '3':\n            var ans = -n;\n            continue;\n        case '4':\n            for (var i = 0x0; OSvGbk['JaoJh'](i, n); i++) {\n                ans += as[i];\n            }\n            continue;\n        case '5':\n            var input = input['split']('\\x0a');\n            continue;\n        case '6':\n            as['length'] = n;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\n3 4 6", "10"], ["5\n7 46 11 20 11", "90"], ["7\n994 518 941 851 647 2 581", "4527"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar as = toIntArr(input[1].split(' '));\n\tas.length = n;\n\tvar ans = -n;\n\tfor(var i = 0; i < n; i++){\n\t\tans += as[i];\n\t}\n\tconsole.log(ans);\t\n}", "language": "JavaScript"}
{"filename": "p03316_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var tJgmSa = {\n        'KIaDd': function (x, y) {\n            return x < y;\n        },\n        'RJEZc': function (callee, param1) {\n            return callee(param1);\n        },\n        'dRJge': function (x, y) {\n            return x == y;\n        },\n        'PJoXE': function (x, y) {\n            return x % y;\n        }\n    };\n    var inputA = input['toString']()['split']('');\n    var sum = 0x0;\n    for (var i = 0x0; tJgmSa['KIaDd'](i, inputA['length']); i++) {\n        sum += tJgmSa['RJEZc'](parseInt, inputA[i]);\n    }\n    if (tJgmSa['dRJge'](tJgmSa['PJoXE'](tJgmSa['RJEZc'](parseInt, input), sum), 0x0)) {\n        console['log']('Yes');\n    } else {\n        console['log']('No');\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["12", "Yes"], ["101", "No"], ["999999999", "Yes"]], "original": "function main(input) {\n  var inputA = input.toString().split('');\n  var sum = 0;\n  for (var i=0;i<inputA.length;i++){\n   \tsum += parseInt(inputA[i]);\n  }\n  if (parseInt(input) % sum == 0) {\n  \tconsole.log('Yes');\n  } else {\n  \tconsole.log('No');\n  }\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03359_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst list = input['split']('\\x20');\nconst a = Number(list[0x0]);\nconst b = Number(list[0x1]);\nif (a > b) {\n    console['log'](a - 0x1);\n} else {\n    console['log'](a);\n}", "test_cases": [["5 5", "5"], ["2 1", "1"], ["11 30", "11"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst list = input.split(' ');\n\nconst a = Number(list[0]);\n\nconst b = Number(list[1]);\n\nif (a > b) {\n  console.log(a - 1);\n} else {\n  console.log(a);\n}\n", "language": "JavaScript"}
{"filename": "p03369_1", "type": "JavaScript", "obfuscated": "function main(s) {\n    var HxKPtL = {\n        'xIvnr': function (x, y) {\n            return x < y;\n        },\n        'MUwsk': function (x, y) {\n            return x == y;\n        },\n        'jzZjZ': function (x, y) {\n            return x + y;\n        }\n    };\n    var add = 0x0;\n    for (var i = 0x0; HxKPtL['xIvnr'](i, 0x3); i++) {\n        if (HxKPtL['MUwsk'](s[i], 'o')) {\n            add++;\n        }\n    }\n    console['log'](HxKPtL['jzZjZ'](0x2bc, add * 0x64));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["oxo", "900"], ["ooo", "1000"], ["xxx", "700"]], "original": "function main (s) {\n    var add=0;\n    for(var i=0;i<3;i++){\n        if(s[i]=='o'){\n            add++;\n        }\n    }\n    console.log(700+add*100);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03474_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bOxNPT = {\n        'WPKlW': '4|5|0|6|2|3|1',\n        'xEBAl': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'SsSWN': function (x, y) {\n            return x == y;\n        },\n        'mVMcD': 'Yes'\n    };\n    var uTznrJ = bOxNPT['WPKlW']['split']('|');\n    var GLCenA = 0x0;\n    while (!![]) {\n        switch (uTznrJ[GLCenA++]) {\n        case '0':\n            var b = bOxNPT['xEBAl'](parseInt, input[0x0]['split']('\\x20')[0x1], 0xa);\n            continue;\n        case '1':\n            console['log'](bOxNPT['SsSWN'](f, null) ? 'No' : bOxNPT['mVMcD']);\n            continue;\n        case '2':\n            var regex = new RegExp('^[0-9]{' + a + '}-[0-9]{' + b + '}$', 'g');\n            continue;\n        case '3':\n            var f = s['match'](regex);\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        case '5':\n            var a = bOxNPT['xEBAl'](parseInt, input[0x0]['split']('\\x20')[0x0], 0xa);\n            continue;\n        case '6':\n            var s = input[0x1];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4\n269-6650", "Yes"], ["1 1\n---", "No"], ["1 2\n7444", "No"]], "original": "function Main(input) {\n  input = input.split('\\n');\n\n  var a = parseInt(input[0].split(' ')[0], 10);\n  var b = parseInt(input[0].split(' ')[1], 10);\n  var s = input[1];\n\n  var regex = new RegExp(`^[0-9]{${a}}-[0-9]{${b}}$`, 'g');\n  var f = s.match(regex);\n\n  console.log(f == null ? 'No' : 'Yes');\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03501_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const numbers = input['split']('\\x20')['map'](n => Number(n));\n    const p1 = numbers[0x0] * numbers[0x1];\n    const p2 = numbers[0x2];\n    if (p1 > p2) {\n        console['log'](p2);\n    } else {\n        console['log'](p1);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 17 120", "119"], ["5 20 100", "100"], ["6 18 100", "100"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const p1 = numbers[0] * numbers[1];\n  const p2 = numbers[2];\n\n  if (p1 > p2) {\n    console.log(p2);\n  } else {\n    console.log(p1);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03657_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const hfMCZr = {\n        'bQCWC': function (x, y) {\n            return x === y;\n        },\n        'ignUv': function (x, y) {\n            return x % y;\n        },\n        'JCPGJ': function (x, y) {\n            return x % y;\n        },\n        'ChqcD': function (x, y) {\n            return x % y;\n        },\n        'uhlgT': function (x, y) {\n            return x + y;\n        },\n        'mxobd': 'Possible',\n        'MexeW': 'Impossible'\n    };\n    input = input['split']('\\x0a');\n    const arr = input[0x0]['split']('\\x20');\n    if (hfMCZr['bQCWC'](hfMCZr['ignUv'](arr[0x0], 0x3), 0x0) || hfMCZr['bQCWC'](hfMCZr['JCPGJ'](arr[0x1], 0x3), 0x0) || hfMCZr['ChqcD'](hfMCZr['uhlgT'](arr[0x0], arr[0x1]), 0x3) === 0x0) {\n        console['log'](hfMCZr['mxobd']);\n    } else {\n        console['log'](hfMCZr['MexeW']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5", "Possible"], ["1 1", "Impossible"]], "original": "'use strict'\nfunction Main(input) {\n    input = input.split(\"\\n\");\n    const arr = input[0].split(' ')\n    if (arr[0] % 3 === 0 || arr[1] % 3 === 0 || (arr[0] + arr[1]) % 3 === 0) {\n        console.log('Possible')\n    } else {\n        console.log('Impossible')\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03997_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var caHxah = {\n        'ZWntI': '1|4|0|2|3',\n        'JKQlT': function (callee, param1) {\n            return callee(param1);\n        },\n        'chzPN': function (x, y) {\n            return x / y;\n        },\n        'QJdrt': function (x, y) {\n            return x * y;\n        },\n        'syAKZ': function (x, y) {\n            return x + y;\n        }\n    };\n    var WQHxNN = caHxah['ZWntI']['split']('|');\n    var JZSCwN = 0x0;\n    while (!![]) {\n        switch (WQHxNN[JZSCwN++]) {\n        case '0':\n            input[0x1] = caHxah['JKQlT'](Number, input[0x1]);\n            continue;\n        case '1':\n            input = input['split']('\\x0a');\n            continue;\n        case '2':\n            input[0x2] = caHxah['JKQlT'](Number, input[0x2]);\n            continue;\n        case '3':\n            console['log'](caHxah['chzPN'](caHxah['QJdrt'](caHxah['syAKZ'](input[0x0], input[0x1]), input[0x2]), 0x2));\n            continue;\n        case '4':\n            input[0x0] = Number(input[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n4\n2", "7"], ["4\n4\n4", "16"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    input[0] = Number(input[0]);\n    input[1] = Number(input[1]);\n    input[2] = Number(input[2]);\n    console.log((input[0] + input[1]) * input[2] / 2);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04044_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lines = input['split']('\\x0a');\n    var s = lines['splice'](0x1, lines['length']);\n    var s_sorted = s['sort']((a, b) => a > b ? 0x1 : -0x1);\n    console['log'](s_sorted['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\ndxx\naxx\ncxx", "axxcxxdxx"]], "original": "function Main(input) {\n\tvar lines = input.split(\"\\n\");\n\tvar s = lines.splice(1, lines.length)\n\tvar s_sorted = s.sort((a, b) => a > b ? 1 : -1)\n\tconsole.log(s_sorted.join(''))\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02264_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar t = Arr[0x0]['split']('\\x20')[0x1] - 0x0;\nArr['shift']();\nvar T = 0x0;\nwhile (Arr['length'] != 0x0) {\n    var bbidLf = '3|1|2|4|0'['split']('|');\n    var wYXhcI = 0x0;\n    while (!![]) {\n        switch (bbidLf[wYXhcI++]) {\n        case '0':\n            if (b - t <= 0x0) {\n                console['log'](a + '\\x20' + (T + b));\n                T += b;\n            } else {\n                Arr['push'](a + '\\x20' + (b - t));\n                T += t;\n            }\n            continue;\n        case '1':\n            Arr['shift']();\n            continue;\n        case '2':\n            var a = arr[0x0];\n            continue;\n        case '3':\n            var arr = Arr[0x0]['split']('\\x20');\n            continue;\n        case '4':\n            var b = arr[0x1] - 0x0;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["5 100\np1 150\np2 80\np3 200\np4 350\np5 20", "p2 180\np5 400\np1 450\np3 550\np4 800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar t=(Arr[0].split(\" \"))[1]-0;\nArr.shift();\nvar T=0;\nwhile(Arr.length!=0){\n   var arr=Arr[0].split(\" \");\n   Arr.shift();\n   var a=arr[0];\n   var b=arr[1]-0;\n   if(b-t<=0){\n      console.log(a+\" \"+(T+b));\n      T+=b;\n   }else{\n      Arr.push(a+\" \"+(b-t));\n      T+=t;\n   }\n}", "language": "JavaScript"}
{"filename": "p02269_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['shift']();\nvar obj = {};\nArr['forEach'](function (v) {\n    var kIvzjA = {\n        'rtRJr': 'insert',\n        'oQxlk': function (x, y) {\n            return x == y;\n        },\n        'cuRvQ': 'find',\n        'dtzaO': 'yes'\n    };\n    var arr = v['split']('\\x20');\n    if (arr[0x0] == kIvzjA['rtRJr'])\n        obj[arr[0x1]] = !![];\n    if (kIvzjA['oQxlk'](arr[0x0], kIvzjA['cuRvQ']))\n        console['log'](obj['hasOwnProperty'](arr[0x1]) ? kIvzjA['dtzaO'] : 'no');\n});", "test_cases": [["5\ninsert A\ninsert T\ninsert C\nfind G\nfind A", "no\nyes"], ["13\ninsert AAA\ninsert AAC\ninsert AGA\ninsert AGG\ninsert TTT\nfind AAA\nfind CCC\nfind CCC\ninsert CCC\nfind CCC\ninsert T\nfind TTT\nfind T", "yes\nno\nno\nyes\nyes\nyes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.shift();\nvar obj={};\nArr.forEach(function(v){\nvar arr=v.split(\" \");\nif(arr[0]==\"insert\")obj[arr[1]]=true;\nif(arr[0]==\"find\")console.log(obj.hasOwnProperty(arr[1]) ? \"yes\":\"no\");\n});", "language": "JavaScript"}
{"filename": "p02392_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (x) {\n    var opeWPq = { 'ngPnM': '1|2|0|4|3' };\n    var WKtlRO = opeWPq['ngPnM']['split']('|');\n    var UrHwbF = 0x0;\n    while (!![]) {\n        switch (WKtlRO[UrHwbF++]) {\n        case '0':\n            var b = args[0x1];\n            continue;\n        case '1':\n            var args = x['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            var a = args[0x0];\n            continue;\n        case '3':\n            console['log']('%s', a < b && b < c ? 'Yes' : 'No');\n            continue;\n        case '4':\n            var c = args[0x2];\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["1 3 8", "Yes"], ["3 8 1", "No"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(x) {\n    var args = x.split(' ').map(Number);\n    var a = args[0];\n    var b = args[1];\n    var c = args[2];\n    console.log('%s', a < b && b < c ? 'Yes' : 'No');\n});", "language": "JavaScript"}
{"filename": "p02393_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cnt, i, j;\ninput = input['split']('\\x20');\nfor (cnt = 0x0; cnt < 0x3; cnt++) {\n    for (i = 0x0; i < 0x3; i++) {\n        if (input[i] > input[i + 0x1]) {\n            j = input[i];\n            input[i] = input[i + 0x1];\n            input[i + 0x1] = j;\n        }\n    }\n}\nconsole['log']('%d\\x20%d\\x20%d', input[0x0], input[0x1], input[0x2]);", "test_cases": [["3 8 1", "1 3 8"]], "original": "var input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cnt,i,j;\n\ninput=input.split(\" \");\nfor(cnt=0;cnt<3;cnt++){\nfor(i=0;i<3;i++){\n    if(input[i]>input[i+1]){\n        j=input[i]\n        input[i]=input[i+1]\n        input[i+1]=j\n    }\n}\n}\n\nconsole.log(\"%d %d %d\",input[0],input[1],input[2]);\n\n", "language": "JavaScript"}
{"filename": "p02397_1", "type": "JavaScript", "obfuscated": "function main(tmp) {\n    var NMWYDw = {\n        'zOkqL': function (x, y) {\n            return x != y;\n        },\n        'FmBNE': function (x, y) {\n            return x + y;\n        },\n        'QYqPC': function (x, y) {\n            return x + y;\n        },\n        'XkeUs': function (x, y) {\n            return x + y;\n        },\n        'uzwfn': function (x, y) {\n            return x + y;\n        }\n    };\n    var i = 0x0;\n    while (NMWYDw['zOkqL'](tmp[i], 0x0) && NMWYDw['zOkqL'](tmp[NMWYDw['FmBNE'](i, 0x1)], 0x0)) {\n        if (tmp[i] < tmp[NMWYDw['FmBNE'](i, 0x1)])\n            console['log'](NMWYDw['FmBNE'](NMWYDw['QYqPC'](tmp[i], '\\x20'), tmp[NMWYDw['XkeUs'](i, 0x1)]));\n        else\n            console['log'](NMWYDw['XkeUs'](NMWYDw['uzwfn'](tmp[NMWYDw['QYqPC'](i, 0x1)], '\\x20'), tmp[i]));\n        i = NMWYDw['QYqPC'](i, 0x2);\n    }\n}\nvar lines = [];\nvar b = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    var OIIuwN = {\n        'nhsat': '1|2|0|3|5|4',\n        'yiGSH': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ZuZVT': function (x, y) {\n            return x == y;\n        },\n        'mLAge': function (x, y) {\n            return x == y;\n        },\n        'WkwyC': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var MjcmhV = OIIuwN['nhsat']['split']('|');\n    var seUagE = 0x0;\n    while (!![]) {\n        switch (MjcmhV[seUagE++]) {\n        case '0':\n            var d = parseInt(a[0x1], 0xa);\n            continue;\n        case '1':\n            var a = line['split']('\\x20');\n            continue;\n        case '2':\n            var c = OIIuwN['yiGSH'](parseInt, a[0x0], 0xa);\n            continue;\n        case '3':\n            b['push'](c);\n            continue;\n        case '4':\n            if (OIIuwN['ZuZVT'](c, 0x0) && OIIuwN['mLAge'](d, 0x0))\n                OIIuwN['WkwyC'](main, b);\n            continue;\n        case '5':\n            b['push'](d);\n            continue;\n        }\n        break;\n    }\n});\nprocess['stdin']['on']('end', function () {\n});", "test_cases": [["3 2\n2 2\n5 3\n0 0", "2 3\n2 2\n3 5"]], "original": "function main(tmp) {\n  var i = 0;\n  while(tmp[i]!=0 && tmp[i+1]!=0){\n    if(tmp[i]<tmp[i+1])\n      console.log(tmp[i]+\" \"+tmp[i+1]);\n    else\n      console.log(tmp[i+1]+\" \"+tmp[i]);\n    i = i + 2;\n  }\n}\nvar lines = [];\nvar b = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var c = parseInt(a[0],10);\n  var d = parseInt(a[1],10);\n  b.push(c);\n  b.push(d);\n  if(c==0 && d==0)\n    main(b);\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02552_1", "type": "JavaScript", "obfuscated": "const main = arg => {\n    const QOajMx = {\n        'fXEXY': function (x, y) {\n            return x === y;\n        }\n    };\n    console['log'](QOajMx['fXEXY'](+arg, 0x0) ? 0x1 : 0x0);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1", "0"], ["0", "1"]], "original": "const main = (arg) => {\n  console.log(+arg === 0 ? 1 : 0);\n};\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02582_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const vpVufs = {\n        'lxsQM': function (x, y) {\n            return x < y;\n        },\n        'bvNHw': function (x, y) {\n            return x === y;\n        },\n        'HNRow': function (x, y) {\n            return x === y;\n        },\n        'KeQIK': function (x, y) {\n            return x === y;\n        },\n        'rfjrE': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']();\n    let list = input['split']('');\n    let answer = 0x0;\n    for (let i = 0x0; vpVufs['lxsQM'](i, list['length']); i++) {\n        if (vpVufs['bvNHw'](list[i], 'R')) {\n            if (vpVufs['HNRow'](answer, 0x0)) {\n                answer++;\n            } else if (vpVufs['KeQIK'](list[vpVufs['rfjrE'](i, 0x1)], 'R')) {\n                answer++;\n            }\n        }\n    }\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["RRS", "2"], ["SSS", "0"], ["RSR", "1"]], "original": "function main(input){\n  input = input.trim();\n  let list = input.split(\"\");\n  let answer = 0;\n  for(let i=0; i<list.length; i++){\n    if(list[i]===\"R\"){\n      if(answer===0){answer++;\n      }else if(list[i-1]===\"R\"){\n        answer++;\n      }                 \n    }\n  }\n  console.log(answer);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02724_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var eNgjTF = {\n        'OBtiO': function (x, y) {\n            return x / y;\n        },\n        'LyLQf': function (x, y) {\n            return x * y;\n        },\n        'KXUmR': function (x, y) {\n            return x / y;\n        },\n        'QAPit': function (x, y) {\n            return x % y;\n        }\n    };\n    var joy = 0x0;\n    joy += Math['floor'](eNgjTF['OBtiO'](input, 0x1f4)) * 0x3e8;\n    joy += eNgjTF['LyLQf'](Math['floor'](eNgjTF['KXUmR'](eNgjTF['QAPit'](input, 0x1f4), 0x5)), 0x5);\n    console['log'](joy);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1024", "2020"], ["0", "0"], ["1000000000", "2000000000"]], "original": "function Main(input) {\n  var joy = 0;\n  joy += (Math.floor(input / 500)) * 1000;\n  joy += Math.floor((input % 500) / 5) * 5;\n  console.log(joy);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02970_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var KTJCoW = {\n        'XOugb': '0|5|7|3|6|4|8|2|1',\n        'FwhMJ': function (x, y) {\n            return x > y;\n        },\n        'qHksC': function (x, y) {\n            return x / y;\n        },\n        'WlCFE': function (x, y) {\n            return x * y;\n        },\n        'tcsiN': function (x, y) {\n            return x % y;\n        }\n    };\n    var zLsMTd = KTJCoW['XOugb']['split']('|');\n    var waltba = 0x0;\n    while (!![]) {\n        switch (zLsMTd[waltba++]) {\n        case '0':\n            var dataList = input['split']('\\x0a');\n            continue;\n        case '1':\n            console['log'](num);\n            continue;\n        case '2':\n            if (KTJCoW['FwhMJ'](rest, 0x0))\n                num += 0x1;\n            continue;\n        case '3':\n            var d = data[0x1];\n            continue;\n        case '4':\n            var num = Math['floor'](KTJCoW['qHksC'](n, checkNum));\n            continue;\n        case '5':\n            var data = dataList[0x0]['split']('\\x20');\n            continue;\n        case '6':\n            var checkNum = KTJCoW['WlCFE'](d, 0x2) + 0x1;\n            continue;\n        case '7':\n            var n = data[0x0];\n            continue;\n        case '8':\n            var rest = KTJCoW['tcsiN'](n, checkNum);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 2", "2"], ["14 3", "2"], ["20 4", "3"]], "original": "function Main(input) {\n  var dataList = input.split(\"\\n\");\n  var data = dataList[0].split(\" \");\n  var n = data[0];\n  var d = data[1];\n  var checkNum = (d * 2) + 1;\n  var num = Math.floor(n/checkNum);\n  var rest = n % checkNum;\n  if (rest > 0) num += 1;\n  console.log(num);\n  \n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03032_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const SjrgfT = {\n        'tAmFZ': function (x, y) {\n            return x <= y;\n        },\n        'EKmPy': function (x, y) {\n            return x - y;\n        },\n        'jkNxb': function (x, y) {\n            return x < y;\n        },\n        'uSBuL': function (x, y) {\n            return x >= y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const NK = input['shift']()['split']('\\x20')['map'](val => Number(val));\n    const count = Math['min'](...NK);\n    input = input[0x0]['split']('\\x20')['map'](val => Number(val));\n    const ans = [];\n    for (let l = 0x0; SjrgfT['tAmFZ'](l, count); l++) {\n        for (let r = 0x0; SjrgfT['tAmFZ'](r, SjrgfT['EKmPy'](count, l)); r++) {\n            let temp = [\n                ...input['slice'](0x0, l),\n                ...input['slice'](NK[0x0] - r)\n            ]['sort']((a, b) => a - b);\n            let remain = SjrgfT['EKmPy'](NK[0x1], l) - r;\n            for (let i = 0x0; SjrgfT['jkNxb'](i, remain); i++) {\n                if (SjrgfT['uSBuL'](temp[i], 0x0))\n                    break;\n                temp[i] = 0x0;\n            }\n            ans['push'](temp['reduce']((p, c) => p + c, 0x0));\n        }\n    }\n    console['log'](Math['max'](...ans));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 4\n-10 8 2 1 2 6", "14"], ["6 4\n-6 -100 50 -2 -5 -3", "44"], ["6 3\n-6 -100 50 -2 -5 -3", "0"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  const NK = input.shift().split(' ').map(val => Number(val))\n  const count = Math.min(...NK)\n  input = input[0].split(' ').map(val => Number(val))\n\n  const ans = []\n\n  for(let l = 0; l <= count; l ++) {\n    for (let r = 0; r <= count - l; r ++) {\n      let temp = [\n        ...input.slice(0, l),\n        ...input.slice(NK[0] - r)\n      ].sort((a, b) => a - b)\n      let remain = NK[1] - l - r\n      for (let i = 0; i < remain; i++) {\n        if (temp[i] >= 0) break;\n        temp[i] = 0\n      }\n      ans.push(temp.reduce((p, c) => p + c, 0))\n    }\n  }\n  console.log(Math.max(...ans))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03041_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const tSoYyp = {\n        'gagmv': function (x, y) {\n            return x - y;\n        }\n    };\n    let tmp = input['split']('\\x0a');\n    let Num = tmp[0x0]['split']('\\x20')['map'](Number)[0x0];\n    let Kji = tmp[0x0]['split']('\\x20')['map'](Number)[0x1];\n    let Str = tmp[0x1]['trim']();\n    let Change = Str[tSoYyp['gagmv'](Kji, 0x1)];\n    switch (Change) {\n    case 'A':\n        Change = 'a';\n        break;\n    case 'B':\n        Change = 'b';\n        break;\n    case 'C':\n        Change = 'c';\n        break;\n    }\n    let StrArr = Str['split']('');\n    StrArr[Kji - 0x1] = Change;\n    Str = StrArr['join']('');\n    console['log'](Str);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 1\nABC", "aBC"], ["4 3\nCABA", "CAbA"]], "original": "'use strict'\nconst Main = input => {\n\n  let tmp = input.split('\\n');\n  let Num = tmp[0].split(' ').map(Number)[0];\n  let Kji = tmp[0].split(' ').map(Number)[1];\n  let Str = tmp[1].trim();\n  // console.log({ Num });\n  // console.log({ Kji });\n  // console.log({ Str });\n\n  let Change = Str[Kji - 1];\n\n  switch (Change) {\n    case 'A': Change = 'a';\n      break;\n    case 'B': Change = 'b';\n      break;\n    case 'C': Change = 'c';\n      break;\n  }\n\n  let StrArr = Str.split('');\n  StrArr[Kji - 1] = Change;\n  Str = StrArr.join('');\n\n  console.log(Str);\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03079_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var MHSGWY = {\n        'YrycC': function (x, y) {\n            return x == y;\n        },\n        'kUayC': 'Yes'\n    };\n    var str = input;\n    var tmp = str['split']('\\x20')['map'](Number);\n    if (MHSGWY['YrycC'](tmp[0x0], tmp[0x1]) && MHSGWY['YrycC'](tmp[0x1], tmp[0x2])) {\n        console['log'](MHSGWY['kUayC']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2 2", "Yes"], ["3 4 5", "No"]], "original": "function Main(input){\n  \n  var str = input;\n  var tmp = str.split(\" \").map(Number);\n\n  if(tmp[0]==tmp[1] && tmp[1]==tmp[2]){\n     console.log(\"Yes\");}\n  \n  else {\n       console.log(\"No\");}\n    \n}//function\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03101_1", "type": "JavaScript", "obfuscated": "function main(arg) {\n    var SlzJlU = {\n        'oOHxN': function (x, y) {\n            return x - y;\n        },\n        'tNqvh': function (x, y) {\n            return x * y;\n        },\n        'nNVLk': function (x, y) {\n            return x * y;\n        },\n        'uVoTP': function (x, y) {\n            return x - y;\n        }\n    };\n    var size = arg['split']('\\x0a')[0x0]['split']('\\x20');\n    var sel = arg['split']('\\x0a')[0x1]['split']('\\x20');\n    console['log'](SlzJlU['oOHxN'](SlzJlU['tNqvh'](size[0x0], size[0x1]) - SlzJlU['nNVLk'](size[0x1], sel[0x0]), SlzJlU['nNVLk'](SlzJlU['uVoTP'](size[0x0], sel[0x0]), sel[0x1])));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n2 1", "1"], ["5 5\n2 3", "6"], ["2 4\n2 4", "0"]], "original": "function main(arg) {\n    var size = arg.split(\"\\n\")[0].split(\" \")\n    var sel = arg.split(\"\\n\")[1].split(\" \")\n    console.log(size[0]*size[1]-size[1]*sel[0]-(size[0]-sel[0])*sel[1])\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03160_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const sEuBaj = {\n        'ESJys': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'SaZJT': function (x, y) {\n            return x + y;\n        },\n        'FxvFX': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    let N = sEuBaj['ESJys'](parseInt, input[0x0][0x0], 0xa);\n    let v_h = input[0x1]['map'](e => parseInt(e, 0xa));\n    let DP = [\n        0x0,\n        Math['abs'](v_h[0x1] - v_h[0x0])\n    ];\n    let x1, x2;\n    for (let i = 0x2; i < N; i++) {\n        x1 = sEuBaj['SaZJT'](DP[i - 0x2], Math['abs'](sEuBaj['FxvFX'](v_h[i], v_h[sEuBaj['FxvFX'](i, 0x2)])));\n        x2 = sEuBaj['SaZJT'](DP[i - 0x1], Math['abs'](sEuBaj['FxvFX'](v_h[i], v_h[sEuBaj['FxvFX'](i, 0x1)])));\n        DP['push'](Math['min'](x1, x2));\n    }\n    console['log'](DP[N - 0x1]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n10 30 40 20", "30"], ["2\n10 10", "0"], ["6\n30 10 60 10 60 50", "40"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\n    let N = parseInt(input[0][0], 10);\n    let v_h = input[1].map(e => parseInt(e, 10));\n\n    let DP = [0, Math.abs(v_h[1] - v_h[0])];\n\n    let x1, x2;\n    for(let i = 2; i < N; i++){\n        x1 = DP[i - 2] + Math.abs(v_h[i] - v_h[i - 2]);\n        x2 = DP[i - 1] + Math.abs(v_h[i] - v_h[i - 1]);\n        DP.push(Math.min(x1, x2));\n    }\n\n    console.log(DP[N - 1]);\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03253_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const Aibgga = {\n        'hGPhZ': function (x, y) {\n            return x < y;\n        },\n        'iGbVH': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'aaSiz': function (x, y) {\n            return x - y;\n        },\n        'wtazm': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'YUbNQ': function (x, y) {\n            return x % y;\n        },\n        'GBVbo': function (x, y) {\n            return x | y;\n        },\n        'EVDgR': function (x, y) {\n            return x / y;\n        },\n        'hQGlO': function (x, y) {\n            return x - y;\n        },\n        'hhWyU': function (x, y) {\n            return x <= y;\n        },\n        'RicIZ': function (x, y) {\n            return x === y;\n        },\n        'pjzRW': function (x, y) {\n            return x % y;\n        },\n        'YBUts': function (x, y) {\n            return x + y;\n        },\n        'FTtml': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    let [N, M] = args['trim']()['split']` `['map'](v => v | 0x0);\n    const MOD = 0x3b9aca00 + 0x7;\n    const d = new Map();\n    for (let i = 0x2; Aibgga['hhWyU'](i, M); i++) {\n        if (Aibgga['YUbNQ'](M, i))\n            continue;\n        let k = 0x0;\n        do {\n            k++;\n            M /= i;\n        } while (Aibgga['RicIZ'](Aibgga['pjzRW'](M, i), 0x0));\n        d['set'](i, k);\n    }\n    const mul = (a, b) => ((a >> 0x10) * b % MOD * 0x10000 + (a & 0xffff) * b) % MOD;\n    const {\n        fac: fac,\n        finv: finv\n    } = (max => {\n        const fac = [\n                0x1,\n                0x1\n            ], inv = [\n                0x0,\n                0x1\n            ], finv = [\n                0x1,\n                0x1\n            ];\n        for (let i = 0x2; Aibgga['hGPhZ'](i, max); i++) {\n            fac['push'](Aibgga['iGbVH'](mul, fac[i - 0x1], i));\n            inv['push'](Aibgga['aaSiz'](MOD, Aibgga['wtazm'](mul, inv[Aibgga['YUbNQ'](MOD, i)], Aibgga['GBVbo'](Aibgga['EVDgR'](MOD, i), 0x0))));\n            finv['push'](Aibgga['wtazm'](mul, finv[Aibgga['hQGlO'](i, 0x1)], inv[i]));\n        }\n        return {\n            'fac': fac,\n            'finv': finv\n        };\n    })(Aibgga['YBUts'](N, N));\n    const nCr = (n, r) => mul(fac[n], mul(finv[r], finv[n - r]));\n    let c = 0x1;\n    for (const [, i] of d)\n        c = Aibgga['iGbVH'](mul, c, Aibgga['FTtml'](nCr, Aibgga['hQGlO'](Aibgga['YBUts'](i, N), 0x1), Aibgga['aaSiz'](N, 0x1)));\n    return '' + c;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 6", "4"], ["3 12", "18"], ["100000 1000000000", "957870001"]], "original": "console.log((args=>{\n  let [N,M] = args.trim().split` `.map(v=>v|0);\n  const MOD = 1e9+7;\n  const d = new Map();\n  for ( let i = 2; i <= M; i++ ) {\n    if ( M % i ) continue;\n    let k = 0;\n    do {\n      k++;\n      M /= i;\n    } while ( M % i === 0 );\n    d.set( i, k );\n  }\n  const mul = (a,b) => ((a>>16)*b%MOD*65536+(a&65535)*b)%MOD;\n  const {fac,finv} = (max=>{\n    const fac = [1,1], inv = [0,1], finv = [1,1];\n    for (let i = 2; i < max; i++) {\n      fac.push( mul( fac[i-1], i) );\n      inv.push( MOD - mul(inv[MOD%i], MOD/i|0) );\n      finv.push( mul( finv[i-1], inv[i]) );\n    }\n    return {fac,finv};\n  })(N+N);\n  const nCr = (n,r) => mul(fac[n],mul(finv[r],finv[n-r]));\n  let c = 1;\n  for ( const [,i] of d ) c = mul(c,nCr(i+N-1,N-1));\n  return `${c}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03254_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lECRLl = {\n        'GwbAL': function (callee, param1) {\n            return callee(param1);\n        },\n        'pnNVI': function (x, y) {\n            return x < y;\n        },\n        'gMlDt': function (x, y) {\n            return x - y;\n        },\n        'kVNcX': function (x, y) {\n            return x - y;\n        },\n        'KREnz': function (x, y) {\n            return x != y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var N = Number(input[0x0]['split']('\\x20')[0x0]);\n    var x = lECRLl['GwbAL'](Number, input[0x0]['split']('\\x20')[0x1]);\n    var a = input[0x1]['split']('\\x20')['map'](a => Number(a))['sort']((a, b) => a - b);\n    var match = 0x0;\n    var left = 0x0;\n    for (var i = 0x0; lECRLl['pnNVI'](i, N); i++) {\n        if (lECRLl['gMlDt'](x, a[i]) >= 0x0) {\n            x = lECRLl['kVNcX'](x, a[i]);\n            match++;\n        } else {\n            break;\n        }\n    }\n    if (x > 0x0 && lECRLl['KREnz'](match, 0x0)) {\n        match--;\n    }\n    console['log'](match);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 70\n20 30 10", "2"], ["3 10\n20 30 10", "1"], ["4 1111\n1 10 100 1000", "4"], ["2 10\n20 20", "0"]], "original": "function Main(input){\n  input = input.split('\\n');\n  var N = Number(input[0].split(' ')[0]);\n  var x = Number(input[0].split(' ')[1]);\n  var a = input[1].split(' ').map((a)=>Number(a)).sort((a,b)=>a-b);\n  var match = 0;\n  var left = 0;\n  for(var i=0;i<N;i++){\n    if(x-a[i]>=0){\n      x=x-a[i];\n      match++;\n    }else{\n      break;\n    }\n  }\n  if((x>0)&&(match!=0)){\n    match--;\n  }\n  console.log(match);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03281_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var XXSqgE = {\n        'UbnQa': function (x, y) {\n            return x - y;\n        },\n        'Wpyuy': function (x, y) {\n            return x <= y;\n        },\n        'dvYAW': function (x, y) {\n            return x == y;\n        },\n        'XSNqk': function (x, y) {\n            return x % y;\n        },\n        'YnkMt': function (x, y) {\n            return x == y;\n        }\n    };\n    var N = XXSqgE['UbnQa'](input[0x0], 0x0);\n    var ans = 0x0;\n    for (var i = 0x69; XXSqgE['Wpyuy'](i, N); i += 0x2) {\n        var cnt = 0x0;\n        for (var j = 0x1; XXSqgE['Wpyuy'](j, i); j++) {\n            if (XXSqgE['dvYAW'](XXSqgE['XSNqk'](i, j), 0x0))\n                cnt++;\n            if (cnt > 0x8)\n                break;\n        }\n        if (XXSqgE['YnkMt'](cnt, 0x8))\n            ans++;\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["105", "1"], ["7", "0"]], "original": "function main(input) {\n  var N = input[0]-0;\n  var ans = 0;\n  for(var i=105;i<=N;i+=2){\n    var cnt = 0;\n    for(var j=1;j<=i;j++){\n      if(i%j==0) cnt++;\n      if(cnt>8) break;\n    }\n    if(cnt == 8) ans++;\n  }\n  console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03307_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var xMIvDX = {\n        'bUPOv': function (x, y) {\n            return x % y;\n        },\n        'VyfiZ': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x20');\n    X = 0x2;\n    N = input['map'](input => parseInt(input, 0xa));\n    if (xMIvDX['bUPOv'](N, X) == 0x0) {\n        console['log'](N[0x0]);\n    } else {\n        var ans = xMIvDX['VyfiZ'](N[0x0], X);\n        console['log'](ans);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "6"], ["10", "10"], ["999999999", "1999999998"]], "original": "function Main(input){\n   input = input.split(' ');\n   X = 2;\n   N = input.map(input=>parseInt(input,10));\n   if(N % X ==0){\n      console.log(N[0]);\n      }else{\n      var ans = N[0] * X;\n      console.log(ans);\n      }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03353_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var MJihFD = {\n        'yFDus': function (x, y) {\n            return x <= y;\n        },\n        'uwTsX': function (x, y) {\n            return x < y;\n        },\n        'xrlql': function (x, y) {\n            return x >= y;\n        },\n        'byGpR': function (x, y) {\n            return x + y;\n        },\n        'wNuio': function (x, y) {\n            return x + y;\n        },\n        'HOyaq': function (x, y) {\n            return x >= y;\n        },\n        'yRoMP': function (x, y) {\n            return x - y;\n        }\n    };\n    var TUwsHz = '6|1|4|2|5|7|3|0'['split']('|');\n    var ThUvVv = 0x0;\n    while (!![]) {\n        switch (TUwsHz[ThUvVv++]) {\n        case '0':\n            loop:\n                while (MJihFD['yFDus'](a, 0x7a)) {\n                    a++;\n                    var n = s['indexOf'](String['fromCharCode'](a));\n                    while (n !== -0x1) {\n                        for (j = 0x0; MJihFD['uwTsX'](j, k); j++) {\n                            if (MJihFD['xrlql'](MJihFD['byGpR'](n, j), sl))\n                                break;\n                            ans[s['slice'](n, MJihFD['byGpR'](MJihFD['byGpR'](n, j), 0x1))] = 0x1;\n                        }\n                        n = s['indexOf'](String['fromCharCode'](a), MJihFD['wNuio'](n, 0x1));\n                    }\n                    j = 0x0;\n                    var ans2 = [];\n                    for (i in ans) {\n                        j++;\n                        ans2['push'](i);\n                    }\n                    if (MJihFD['HOyaq'](j, k)) {\n                        ans2['sort']();\n                        console['log'](ans2[MJihFD['yRoMP'](k, 0x1)]);\n                        break loop;\n                    }\n                }\n            continue;\n        case '1':\n            var k = +s[0x1];\n            continue;\n        case '2':\n            var a = 0x60;\n            continue;\n        case '3':\n            var j;\n            continue;\n        case '4':\n            s = s[0x0];\n            continue;\n        case '5':\n            var sl = s['length'];\n            continue;\n        case '6':\n            s = s['split']('\\x0a');\n            continue;\n        case '7':\n            var ans = {};\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["aba\n4", "b"], ["atcoderandatcodeer\n5", "andat"], ["z\n1", "z"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var k = +s[1];\n  s = s[0];\n  var a = 96;\n  var sl = s.length;\n  var ans = {};\n  var j;\n  loop:\n  while(a <= 122){\n    a++;\n    var n = s.indexOf(String.fromCharCode(a));\n    while(n !== -1){\n      for(j = 0; j < k; j++){\n        if(n + j >= sl)break;\n        ans[s.slice(n, n + j + 1)] = 1;\n      }\n      n = s.indexOf(String.fromCharCode(a), n+1);\n    }\n    j = 0;\n    var ans2 = [];\n    for(i in ans){\n      j++;\n      ans2.push(i)\n    }\n    if(j >= k){\n      ans2.sort();\n      console.log(ans2[k-1]);\n      break loop;\n    }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03361_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const scxiTs = { 'ysfZz': 'Yes' };\n    const lines = input['split']('\\x0a');\n    const [h, w] = lines[0x0]['split']('\\x20')['map'](Number);\n    const data = Array(h)['fill'](![])['map']((_, i) => lines[i + 0x1]['split']('')['slice'](0x0, w)['map'](c => c === '#'));\n    const ans = data['every']((row, i) => row['every']((cell, j) => !cell || (data[i - 0x1] || [])[j] || (data[i + 0x1] || [])[j] || data[i][j - 0x1] || data[i][j + 0x1]));\n    console['log'](ans ? scxiTs['ysfZz'] : 'No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n.#.\n###\n.#.", "Yes"], ["5 5\n#.#.#\n.#.#.\n#.#.#\n.#.#.\n#.#.#", "No"], ["11 11\n...#####...\n.##.....##.\n#..##.##..#\n#..##.##..#\n#.........#\n#...###...#\n.#########.\n.#.#.#.#.#.\n##.#.#.#.##\n..##.#.##..\n.##..#..##.", "Yes"]], "original": "const main = input => {\n  const lines = input.split('\\n');\n  const [h, w] = lines[0].split(' ').map(Number);\n\n  const data = Array(h).fill(false).map((_, i) =>\n    lines[i + 1]\n      .split('')\n      .slice(0, w)\n      .map(c => c === '#')\n  );\n\n  const ans = data.every((row, i) =>\n    row.every(\n      (cell, j) =>\n        !cell ||\n        (data[i - 1] || [])[j] ||\n        (data[i + 1] || [])[j] ||\n        data[i][j - 1] ||\n        data[i][j + 1]\n    )\n  );\n  console.log(ans ? 'Yes' : 'No');\n};\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03379_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const QcynQU = {\n        'ecBth': function (x, y) {\n            return x - y;\n        },\n        'amEyn': function (x, y) {\n            return x / y;\n        },\n        'JaXvQ': function (x, y) {\n            return x / y;\n        },\n        'bWouP': function (x, y) {\n            return x < y;\n        },\n        'XRIzd': function (x, y) {\n            return x <= y;\n        }\n    };\n    const [[N], X] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const _X = []['concat'](X)['sort']((a, b) => a - b);\n    const M1 = _X[QcynQU['ecBth'](QcynQU['amEyn'](N, 0x2), 0x1)], M2 = _X[QcynQU['JaXvQ'](N, 0x2)];\n    const m = [];\n    for (let i = 0x0; QcynQU['bWouP'](i, N); i++) {\n        if (QcynQU['XRIzd'](X[i], M1))\n            m['push'](M2);\n        else\n            m['push'](M1);\n    }\n    return m['join']`\\n`;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4\n2 4 4 3", "4\n3\n3\n4"], ["2\n1 2", "2\n1"], ["6\n5 5 4 4 3 3", "4\n4\n4\n4\n4\n4"]], "original": "console.log((args=>{\n  const [[N],X] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  const _X = [].concat(X).sort((a,b)=>a-b);\n  const M1 = _X[N/2-1], M2 = _X[N/2];\n  const m = [];\n  for ( let i = 0; i < N; i++ ) {\n    if ( X[i] <= M1 ) m.push(M2); else m.push(M1);\n  }\n  return m.join`\\n`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03408_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const VvjiAJ = {\n        'Uqyqs': function (x, y) {\n            return x + y;\n        },\n        'UmPzB': function (x, y) {\n            return x + y;\n        },\n        'fJefh': function (x, y) {\n            return x + y;\n        },\n        'GkYAO': function (x, y) {\n            return x + y;\n        },\n        'TrfLL': function (x, y) {\n            return x - y;\n        },\n        'GyFQM': function (x, y) {\n            return x < y;\n        }\n    };\n    const params = input['trim']()['split']('\\x0a');\n    const N = Number(params[0x0]['trim']());\n    const M = Number(params[VvjiAJ['Uqyqs'](N, 0x1)]['trim']());\n    const blueCards = params['slice'](0x1, VvjiAJ['UmPzB'](N, 0x1));\n    const redCards = params['slice'](VvjiAJ['fJefh'](N, 0x2));\n    let cardCount = {};\n    for (const card of blueCards) {\n        const c = card['trim']();\n        if (cardCount['hasOwnProperty'](c)) {\n            cardCount[c] = VvjiAJ['GkYAO'](cardCount[c], 0x1);\n        } else {\n            cardCount[c] = 0x1;\n        }\n    }\n    for (const card of redCards) {\n        const c = card['trim']();\n        if (cardCount['hasOwnProperty'](c)) {\n            cardCount[c] = VvjiAJ['TrfLL'](cardCount[c], 0x1);\n        } else {\n            cardCount[c] = 0x1;\n        }\n    }\n    let maxMoney = 0x0;\n    for (const [key, money] of Object['entries'](cardCount)) {\n        if (VvjiAJ['GyFQM'](maxMoney, money)) {\n            maxMoney = money;\n        }\n    }\n    console['log'](maxMoney);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\napple\norange\napple\n1\ngrape", "2"], ["3\napple\norange\napple\n5\napple\napple\napple\napple\napple", "1"], ["1\nvoldemort\n10\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort\nvoldemort", "0"], ["6\nred\nred\nblue\nyellow\nyellow\nred\n5\nred\nred\nyellow\ngreen\nblue", "1"]], "original": "// https://atcoder.jp/contests/abc091/tasks/abc091_b\n\"use strict\";\nfunction Main(input) {\n  const params = input.trim().split(\"\\n\");\n  const N = Number(params[0].trim());\n  const M = Number(params[N + 1].trim());\n  const blueCards = params.slice(1, N + 1);\n  const redCards = params.slice(N + 2);\n\n  let cardCount = {};\n  for (const card of blueCards) {\n    const c = card.trim();\n    if (cardCount.hasOwnProperty(c)) {\n      cardCount[c] = cardCount[c] + 1;\n    } else {\n      cardCount[c] = 1;\n    }\n  }\n\n  for (const card of redCards) {\n    const c = card.trim();\n    if (cardCount.hasOwnProperty(c)) {\n      cardCount[c] = cardCount[c] - 1;\n    } else {\n      cardCount[c] = 1;\n    }\n  }\n\n  let maxMoney = 0;\n  for (const [key, money] of Object.entries(cardCount)) {\n    if (maxMoney < money) {\n      maxMoney = money;\n    }\n  }\n\n  console.log(maxMoney);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03416_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var qHbjJQ = {\n        'wHZUb': function (x, y) {\n            return x === y;\n        },\n        'xhAbg': function (x, y) {\n            return x <= y;\n        },\n        'NObLY': function (callee) {\n            return callee();\n        }\n    };\n    var input = input['split']('\\x20');\n    var A = input[0x0];\n    var B = input[0x1];\n    var cnt = 0x0;\n    function hoge() {\n        var x = A['toString']();\n        if (qHbjJQ['wHZUb'](x[0x0], x[0x4]) && x[0x1] === x[0x3]) {\n            return !![];\n        }\n    }\n    while (qHbjJQ['xhAbg'](A, B)) {\n        if (qHbjJQ['NObLY'](hoge)) {\n            cnt++;\n        }\n        A++;\n    }\n    console['log'](cnt);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["11009 11332", "4"], ["31415 92653", "612"]], "original": "function Main(input) {\n    var input = input.split(' ');\n    var A = input[0];\n    var B = input[1];\n    var cnt = 0;\n    function hoge(){\n        var x = A.toString();\n        if(x[0] === x[4] && x[1] === x[3]){\n            return true;\n        }\n    }\n    while(A <= B) {\n     if(hoge()) {\n            cnt++;\n        }\n    A++;\n    }\n    console.log(cnt);\n    }\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03485_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst numbers = input['split']('\\x20');\nlet sum = 0x0;\nnumbers['forEach'](function (number) {\n    const jjMYMT = {\n        'STZgV': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    sum += jjMYMT['STZgV'](Number, number);\n});\nconsole['log'](Math['ceil'](sum / numbers['length']));", "test_cases": [["1 3", "2"], ["7 4", "6"], ["5 5", "5"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\n\nconst numbers = input.split(' ');\n\nlet sum = 0;\nnumbers.forEach(function (number) {\n    sum += Number(number);\n});\nconsole.log(Math.ceil(sum / numbers.length));\n", "language": "JavaScript"}
{"filename": "p03494_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var nums = input['split']('\\x0a')[0x1]['split']('\\x20')['map'](n => parseInt(n, 0xa));\n    var count = 0x0;\n    while (nums['every'](n => n % 0x2 === 0x0)) {\n        count++;\n        nums = nums['map'](n => n / 0x2);\n    }\n    console['log'](count);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n8 12 40", "2"], ["4\n5 6 8 10", "0"], ["6\n382253568 723152896 37802240 379425024 404894720 471526144", "8"]], "original": "function main(input){\n  var nums = input.split('\\n')[1].split(' ').map((n) => parseInt(n,10));\n  var count = 0;\n  while(nums.every((n) => (n % 2) === 0)) {\n        count++;\n        nums = nums.map((n) => n / 2);\n    }\n\n  console.log(count);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03547_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nx = l[0x0];\ny = l[0x1];\nconsole['log'](x == y ? '=' : x['charCodeAt']() < y['charCodeAt']() ? '<' : '>');", "test_cases": [["A B", "<"], ["E C", ">"], ["F F", "="]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nx = l[0]\ny = l[1]\nconsole.log(x == y ? '=' : x.charCodeAt() < y.charCodeAt() ? '<' : '>')", "language": "JavaScript"}
{"filename": "p03624_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var bVWlVC = {\n        'qPgcQ': function (x, y) {\n            return x === y;\n        },\n        'gnuLb': function (x, y) {\n            return x < y;\n        },\n        'FbWUT': 'abcdefghijklmnopqrstuvwxyz',\n        'JiaDB': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'DvSFc': 'None'\n    };\n    const S = input['split']('');\n    alphabetList = bVWlVC['FbWUT']['split']('');\n    arr = S['filter'](function (x, i, self) {\n        return bVWlVC['qPgcQ'](self['indexOf'](x), i);\n    })['sort']();\n    tmp = bVWlVC['JiaDB'](arrDiff, arr, alphabetList);\n    function arrDiff(arr, alphabetList) {\n        var ZKcpAv = '5|2|3|4|1|0'['split']('|');\n        var UlpGWY = 0x0;\n        while (!![]) {\n            switch (ZKcpAv[UlpGWY++]) {\n            case '0':\n                return diff;\n            case '1':\n                for (var k in a) {\n                    diff['push'](k);\n                }\n                continue;\n            case '2':\n                var diff = [];\n                continue;\n            case '3':\n                for (var i = 0x0; i < arr['length']; i++) {\n                    a[arr[i]] = !![];\n                }\n                continue;\n            case '4':\n                for (var i = 0x0; bVWlVC['gnuLb'](i, alphabetList['length']); i++) {\n                    if (a[alphabetList[i]]) {\n                        delete a[alphabetList[i]];\n                    } else {\n                        a[alphabetList[i]] = !![];\n                    }\n                }\n                continue;\n            case '5':\n                var a = [];\n                continue;\n            }\n            break;\n        }\n    }\n    if (tmp['length'] > 0x0) {\n        ans = tmp[0x0];\n    } else {\n        ans = bVWlVC['DvSFc'];\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["atcoderregularcontest", "b"], ["abcdefghijklmnopqrstuvwxyz", "None"], ["fajsonlslfepbjtsaayxbymeskptcumtwrmkkinjxnnucagfrg", "d"]], "original": "function main (input) {\n    const S = input.split('');\n    alphabetList = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\n    // 重複を削除\n    arr = S.filter(function (x,i,self){\n        return self.indexOf(x) === i;\n    }).sort();\n\n    tmp = arrDiff(arr,alphabetList);\n    // 差分抽出\n    function arrDiff (arr, alphabetList) {\n        var a = [];\n        var diff = [];\n        for (var i = 0; i < arr.length; i++) {\n            a[arr[i]] = true;\n        }\n        for (var i = 0; i < alphabetList.length; i++) {\n            if (a[alphabetList[i]]) {\n                delete a[alphabetList[i]];\n            } else {\n                a[alphabetList[i]] = true;\n            }\n        }\n        for (var k in a) {\n            diff.push (k);\n        }\n        return diff;\n    }\n    if (tmp.length > 0) {\n        ans = tmp[0];\n    } else {\n        ans = 'None';\n    }\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03645_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var fsFQqd = {\n        'wQniM': function (callee, param1) {\n            return callee(param1);\n        },\n        'MYHho': 'IMPOSSIBLE',\n        'dnyJO': function (x, y) {\n            return x < y;\n        },\n        'GJbmd': function (x, y) {\n            return x != y;\n        },\n        'lvCvV': 'POSSIBLE',\n        'eLInZ': function (x, y) {\n            return x == y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var n = fsFQqd['wQniM'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n    var m = parseInt(input[0x0]['split']('\\x20')[0x1]);\n    x = new Array();\n    var ans = fsFQqd['MYHho'];\n    for (i = 0x0; fsFQqd['dnyJO'](i, m); i++) {\n        tmp = input[i + 0x1]['split']('\\x20');\n        if (tmp[0x0] == 0x1) {\n            if (fsFQqd['GJbmd'](x['indexOf'](tmp[0x1]), -0x1)) {\n                ans = fsFQqd['lvCvV'];\n                break;\n            } else {\n                x['push'](tmp[0x1]);\n            }\n        }\n        if (fsFQqd['eLInZ'](tmp[0x1], n)) {\n            if (x['indexOf'](tmp[0x0]) != -0x1) {\n                ans = fsFQqd['lvCvV'];\n                break;\n            } else {\n                x['push'](tmp[0x0]);\n            }\n        }\n    }\n    console['log']('%s', ans);\n}\nfunction debug() {\n    var input = document['getElementById']('input')['value'];\n    Main(input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n1 2\n2 3", "POSSIBLE"], ["4 3\n1 2\n2 3\n3 4", "IMPOSSIBLE"], ["100000 1\n1 99999", "IMPOSSIBLE"], ["5 5\n1 3\n4 5\n2 3\n2 4\n1 4", "POSSIBLE"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0].split(\" \")[0]);\n  var m = parseInt(input[0].split(\" \")[1]);\n  x= new Array();\n  var ans = \"IMPOSSIBLE\";\n  for(i=0;i<m;i++){\n    tmp=input[i+1].split(\" \");\n    if(tmp[0]==1){\n      if(x.indexOf(tmp[1])!=-1){\n        ans=\"POSSIBLE\";\n        break;\n      }else{\n      x.push(tmp[1]);\n      }\n    }\n    if(tmp[1]==n){\n      if(x.indexOf(tmp[0])!=-1){\n        ans=\"POSSIBLE\";\n        break;\n      }else{\n        x.push(tmp[0]);\n      }\n    }\n  }\n\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03729_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const nrjVUD = {\n        'wDkHC': function (x, y) {\n            return x == y;\n        }\n    };\n    const S = arg['split']('\\x0a')[0x0]['split']('\\x20');\n    let tail = S[0x0]['split']('')['pop']();\n    for (let i = 0x1; i < S['length']; i++) {\n        if (nrjVUD['wDkHC'](tail, S[i]['split']('')[0x0])) {\n            tail = S[i]['split']('')['pop']();\n        } else {\n            console['log']('NO');\n            return;\n        }\n    }\n    console['log']('YES');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["rng gorilla apple", "YES"], ["yakiniku unagi sushi", "NO"], ["a a a", "YES"], ["aaaaaaaaab aaaaaaaaaa aaaaaaaaab", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const S  = arg.split(\"\\n\")[0].split(\" \");\n    let tail = S[0].split(\"\").pop();\n\n    for(let i=1; i<S.length; i++) {\n        if(tail == S[i].split(\"\")[0]) {\n            tail = S[i].split(\"\").pop();\n        } else {\n            console.log(\"NO\");\n            return;\n        }\n    }\n    \n    console.log(\"YES\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03795_1", "type": "JavaScript", "obfuscated": "let n = Number(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](0x320 * n - 0xc8 * ~~(n / 0xf));", "test_cases": [["20", "15800"], ["60", "47200"]], "original": "let n = Number(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\nconsole.log(800 * n - 200 * ~~(n / 15));", "language": "JavaScript"}
{"filename": "p03943_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var dHddGi = {\n        'SdRlI': function (x, y) {\n            return x / y;\n        },\n        'cDWzF': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ZHHWo': 'Yes'\n    };\n    input = input['split']('\\x20');\n    input = input['map'](Number);\n    children = 0x2;\n    var sub = function (arry, num) {\n        var sum = 0x0;\n        arry['forEach'](element => {\n            sum += element;\n        });\n        return arry['includes'](dHddGi['SdRlI'](sum, num));\n    };\n    if (dHddGi['cDWzF'](sub, input, children)) {\n        console['log'](dHddGi['ZHHWo']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 30 20", "Yes"], ["30 30 100", "No"], ["56 25 31", "Yes"]], "original": "function Main(input){\n    input= input.split(\" \");\n    input= input.map(Number);\n    children = 2;\n    \n    var sub = function(arry,num){\n        var sum = 0;\n        arry.forEach(element => {\n            sum += element;\n        });\n        return arry.includes(sum/num);\n    }\n    \n    if(sub(input,children)){\n        console.log('Yes');\n    }else{\n        console.log('No');\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p02394_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const DmKUbz = {\n        'ABlnE': function (x, y) {\n            return x < y;\n        },\n        'zyZLa': function (x, y) {\n            return x + y;\n        },\n        'GqAau': function (x, y) {\n            return x > y;\n        },\n        'FZGbt': function (x, y) {\n            return x + y;\n        },\n        'qiNPS': 'Yes'\n    };\n    let numarray = input['split']('\\x20')['map'](Number);\n    let W, H, x, y, r;\n    W = numarray[0x0];\n    H = numarray[0x1];\n    x = numarray[0x2];\n    y = numarray[0x3];\n    r = numarray[0x4];\n    if (DmKUbz['ABlnE'](x, r) || y < r || DmKUbz['zyZLa'](x, r) > W || DmKUbz['GqAau'](DmKUbz['FZGbt'](y, r), H)) {\n        console['log']('No');\n    } else {\n        console['log'](DmKUbz['qiNPS']);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 4 2 2 1", "Yes"], ["5 4 2 4 1", "No"]], "original": "function main(input){\n    let numarray=input.split(' ').map(Number);\n    let W,H,x,y,r;\n    W=numarray[0];\n    H=numarray[1];\n    x=numarray[2];\n    y=numarray[3];\n    r=numarray[4];\n    if (x<r || y<r || x+r > W || y+r > H){\n        console.log('No');\n    } else {\n        console.log('Yes');\n    }\n    \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02402_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst arr = input['split'](/\\n/);\nconst numbers = arr[0x1]['split']('\\x20')['map'](Number);\nlet min = numbers[0x0];\nlet max = numbers[0x0];\nlet sum = 0x0;\nnumbers['forEach'](number => {\n    const ULhBQz = {\n        'GEoPD': function (x, y) {\n            return x > y;\n        },\n        'kdkLP': function (x, y) {\n            return x < y;\n        }\n    };\n    if (ULhBQz['GEoPD'](min, number))\n        min = number;\n    if (ULhBQz['kdkLP'](max, number))\n        max = number;\n    sum += number;\n});\nconsole['log'](min + '\\x20' + max + '\\x20' + sum);", "test_cases": [["5\n10 1 5 4 17", "1 17 37"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst arr = input.split(/\\n/);\nconst numbers = arr[1].split(\" \").map(Number);\nlet min = numbers[0];\nlet max = numbers[0];\nlet sum = 0;\n\nnumbers.forEach(number => {\n  if(min > number) min = number;\n  if(max < number) max = number;\n  sum += number;\n})\n\nconsole.log(min + \" \" + max + \" \" + sum);\n\n\n", "language": "JavaScript"}
{"filename": "p02411_1", "type": "JavaScript", "obfuscated": "let input = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nlet array = input['split']('\\x0a');\nlet result = '';\nfor (let i = 0x0; i < array['length']; i++) {\n    let data = array[i]['split']('\\x20')['map'](Number);\n    let fScore = data[0x0];\n    let lScore = data[0x1];\n    let retest = data[0x2];\n    if (fScore === -0x1 && lScore === -0x1 && retest === -0x1)\n        break;\n    if (i !== 0x0)\n        result += '\\x0a';\n    if (fScore === -0x1 || lScore === -0x1) {\n        result += 'F';\n    } else {\n        let sum = fScore + lScore;\n        switch (!![]) {\n        case sum >= 0x50:\n            result += 'A';\n            break;\n        case 0x41 <= sum && sum < 0x50:\n            result += 'B';\n            break;\n        case 0x32 <= sum && sum < 0x41:\n            result += 'C';\n            break;\n        case 0x1e <= sum && sum < 0x32:\n            result += retest >= 0x32 ? 'C' : 'D';\n            break;\n        default:\n            result += 'F';\n        }\n        ;\n    }\n}\nconsole['log'](result);", "test_cases": [["40 42 -1\n20 30 -1\n0 2 -1\n-1 -1 -1", "A\nC\nF"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'UTF-8');\nlet array = input.split('\\n'); // 3人分の試験データ配列\nlet result = '';\n\n// 学生分ループ\nfor (let i=0; i<array.length; i++) {\n  let data = array[i].split(' ').map(Number);\n  let fScore = data[0];\n  let lScore = data[1];\n  let retest = data[2];\n\n  // データが全て-1の時終了する\n  if (fScore === -1 && lScore === -1 && retest === -1) break;\n\n  if (i !== 0) result += '\\n';\n\n  // 中間試験、期末試験のいずれかを欠席した場合成績はF\n  if (fScore === -1 || lScore === -1) {\n    result += 'F';\n  } else {\n    let sum = fScore + lScore;\n    switch (true) {\n      case sum >= 80:\n        result += 'A';\n        break;\n      case 65 <= sum && sum < 80:\n        result += 'B';\n        break;\n      case 50 <= sum && sum < 65:\n        result += 'C';\n        break;\n      case 30 <= sum && sum < 50:\n        result += retest >= 50 ? 'C' : 'D';\n        break;\n      default:\n        result += 'F';\n    };\n  }\n}\nconsole.log(result);\n", "language": "JavaScript"}
{"filename": "p02556_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const repPEa = {\n        'LvoHo': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    input['shift']();\n    let xy = input['map'](val => val['split']('\\x20')['map'](Number));\n    let arr0 = xy['map'](val => val[0x0] + val[0x1]);\n    let arr1 = xy['map'](val => val[0x0] - val[0x1]);\n    let arr0_calc = repPEa['LvoHo'](Math['max'](...arr0), Math['min'](...arr0));\n    let arr1_calc = Math['max'](...arr1) - Math['min'](...arr1);\n    console['log'](Math['max'](arr0_calc, arr1_calc));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 1\n2 4\n3 2", "4"], ["2\n1 1\n1 1", "0"]], "original": "function Main(input) {\n\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    input.shift();\n    \n    let xy = input.map(val => val.split(\" \").map(Number));\n\n    let arr0 = xy.map(val => val[0] + val[1]);\n    let arr1 = xy.map(val => val[0] - val[1]);\n    \n    let arr0_calc = Math.max(...arr0) - Math.min(...arr0);\n    let arr1_calc = Math.max(...arr1) - Math.min(...arr1);\n \n    console.log(Math.max(arr0_calc,arr1_calc));\n    \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02599_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var IxYalz = {\n        'kKhRN': function (x, y) {\n            return x + y;\n        },\n        'pHvIT': function (x, y) {\n            return x < y;\n        },\n        'CwwVI': function (x, y) {\n            return x === y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var [n, q] = input[0x0]['split']('\\x20')['map'](a => parseInt(a, 0xa));\n    var colors = input[0x1]['split']('\\x20');\n    for (var i = 0x0; i < q; i++) {\n        var [start, end] = input[IxYalz['kKhRN'](i, 0x2)]['split']('\\x20')['map'](a => parseInt(a, 0xa));\n        var cs = [];\n        for (var j = start - 0x1; IxYalz['pHvIT'](j, end); j++) {\n            var color = colors[j];\n            if (IxYalz['CwwVI'](cs['indexOf'](color), -0x1)) {\n                cs['push'](color);\n            }\n        }\n        console['log'](cs['length']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3\n1 2 1 3\n1 3\n2 4\n3 3", "2\n3\n1"], ["10 10\n2 5 6 5 2 1 7 9 7 2\n5 5\n2 4\n6 7\n2 2\n7 8\n7 9\n1 8\n6 9\n8 10\n6 8", "1\n2\n2\n1\n2\n2\n6\n3\n3\n3"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var [n, q] = input[0].split(\" \").map(a => parseInt(a, 10));\n  var colors = input[1].split(\" \");\n  for (var i = 0; i<q; i++) {\n    var [start, end] = input[i+2].split(\" \").map(a => parseInt(a, 10));\n    var cs = [];\n    for (var j = start - 1; j<end; j++) {\n      var color = colors[j];\n      if (cs.indexOf(color) === -1) {\n        cs.push(color);\n      }\n    }\n    console.log(cs.length);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02714_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nconst lines = [];\nconst reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    const Rcpaer = {\n        'flxHR': function (callee, param1) {\n            return callee(param1);\n        },\n        'DTbyp': function (x, y) {\n            return x < y;\n        },\n        'iMDMz': function (x, y) {\n            return x + y;\n        },\n        'Xkxhw': function (callee, param1) {\n            return callee(param1);\n        },\n        'Vwjek': function (callee, param1) {\n            return callee(param1);\n        },\n        'hvuYL': function (x, y) {\n            return x - y;\n        },\n        'VJyTb': function (x, y) {\n            return x <= y;\n        },\n        'XADUd': function (x, y) {\n            return x !== y;\n        },\n        'GpBgF': function (x, y) {\n            return x - y;\n        },\n        'buoXl': function (x, y) {\n            return x - y;\n        },\n        'JDoUD': function (x, y) {\n            return x - y;\n        },\n        'sxAQn': function (x, y) {\n            return x * y;\n        }\n    };\n    const inputLength = Rcpaer['flxHR'](Number, lines[0x0]);\n    const inputString = lines[0x1];\n    const inputArray = inputString['split']('');\n    const rArray = inputArray['filter'](element => element === 'R');\n    const gArray = inputArray['filter'](element => element === 'G');\n    const bArray = inputArray['filter'](element => element === 'B');\n    let sum = 0x0;\n    for (let i = 0x1; Rcpaer['DTbyp'](i, Rcpaer['iMDMz'](Rcpaer['Xkxhw'](Number, inputLength), 0x1)); i++) {\n        for (let j = Rcpaer['iMDMz'](i, 0x1); Rcpaer['DTbyp'](j, Rcpaer['iMDMz'](Rcpaer['Vwjek'](Number, inputLength), 0x1)); j++) {\n            const k = Rcpaer['hvuYL'](Rcpaer['iMDMz'](j, j), i);\n            if (Rcpaer['VJyTb'](k, inputLength) && Rcpaer['XADUd'](inputArray[Rcpaer['GpBgF'](i, 0x1)], inputArray[Rcpaer['buoXl'](j, 0x1)]) && Rcpaer['XADUd'](inputArray[j - 0x1], inputArray[Rcpaer['JDoUD'](k, 0x1)]) && Rcpaer['XADUd'](inputArray[Rcpaer['hvuYL'](i, 0x1)], inputArray[Rcpaer['GpBgF'](k, 0x1)])) {\n                sum = Rcpaer['iMDMz'](sum, 0x1);\n            }\n        }\n    }\n    console['log'](Rcpaer['GpBgF'](Rcpaer['sxAQn'](rArray['length'], gArray['length']) * bArray['length'], sum));\n});", "test_cases": [["4\nRRGB", "1"], ["39\nRBRBGRBGGBBRRGBBRRRBGGBRBGBRBGBRBBBGBBB", "1800"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nconst lines = [];\nconst reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line)\n});\nreader.on('close', () => {\n  const inputLength = Number(lines[0])\n  const inputString = lines[1]\n  const inputArray = inputString.split('')\n  const rArray = inputArray.filter(element => element === 'R')\n  const gArray = inputArray.filter(element => element === 'G')\n  const bArray = inputArray.filter(element => element === 'B')\n\n  let sum = 0\n  for (let i = 1; i < Number(inputLength) + 1; i++) {\n    for (let j = i + 1; j < Number(inputLength) + 1; j++) {\n      const k = j + j - i \n\n      if(k <= inputLength && inputArray[i - 1] !== inputArray[j - 1]  && inputArray[j - 1] !== inputArray[k - 1] && inputArray[i - 1] !== inputArray[k - 1]){\n        sum = sum + 1\n      }\n    }\n  }\n\n  console.log(rArray.length * gArray.length * bArray.length - sum)\n\n});", "language": "JavaScript"}
{"filename": "p02747_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const abRUvI = {\n        'OVGOX': function (x, y) {\n            return x <= y;\n        },\n        'HQwGX': function (x, y) {\n            return x == y;\n        },\n        'csJsZ': function (x, y) {\n            return x != y;\n        },\n        'ImdqI': function (x, y) {\n            return x + y;\n        },\n        'VxNtJ': function (x, y) {\n            return x % y;\n        },\n        'BxWwx': function (x, y) {\n            return x >= y;\n        },\n        'JDLVj': 'Yes'\n    };\n    let xs = input['trim']()['split']('');\n    let len = xs['length'];\n    let ans = 0x0;\n    for (let i = 0x0; abRUvI['OVGOX'](i, len); i++) {\n        if (i % 0x2 == 0x0 && abRUvI['HQwGX'](xs[i], 'h') && abRUvI['csJsZ']([abRUvI['ImdqI'](i, 0x1)], 'h')) {\n            ans += 0x1;\n        } else if (abRUvI['HQwGX'](abRUvI['VxNtJ'](i, 0x2), 0x1) && abRUvI['HQwGX'](xs[i], 'i') && xs[i + 0x1] != 'i') {\n            ans += 0x1;\n        } else {\n            ans += 0x0;\n        }\n    }\n    if (abRUvI['BxWwx'](ans, 0x2)) {\n        console['log'](abRUvI['JDLVj']);\n    } else {\n        console['log']('No');\n    }\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["hihi", "Yes"], ["hi", "Yes"], ["ha", "No"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('');\n   let len = xs.length;\n   let ans = 0;\n\n    for(let i =0; i<=len; i++) {\n       if(i%2==0 && xs[i]=='h'&&[i+1]!='h') {\n       \tans+=1;\n       }else if(i%2==1 && xs[i]=='i' &&xs[i+1]!='i'){\n        ans+=1;\n       }else{\n        ans+=0;\n       }\n    }\n    if(ans>=2){\n    console.log('Yes');\n    }else{\n    console.log('No');\n    }\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p02823_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var xvGFXh = {\n        'YdLjk': function (x, y) {\n            return x - y;\n        },\n        'NqLvd': function (x, y) {\n            return x % y;\n        },\n        'wCxgZ': function (x, y) {\n            return x + y;\n        },\n        'oqfMS': function (x, y) {\n            return x - y;\n        },\n        'ExcTp': function (x, y) {\n            return x / y;\n        },\n        'pPMpQ': function (x, y) {\n            return x - y;\n        },\n        'ROsdR': function (x, y) {\n            return x / y;\n        }\n    };\n    const array = input['trim']()['split']('\\x20')['map'](s => parseInt(s));\n    const N = array[0x0];\n    var A = array[0x1];\n    var B = array[0x2];\n    var ans = 0x0;\n    var dist = xvGFXh['YdLjk'](B, A);\n    if (xvGFXh['NqLvd'](dist, 0x2)) {\n        var diff = xvGFXh['wCxgZ'](Math['min'](N - B, xvGFXh['oqfMS'](A, 0x1)), 0x1);\n        ans += diff;\n        ans += Math['floor'](xvGFXh['ExcTp'](xvGFXh['oqfMS'](xvGFXh['pPMpQ'](B, A), 0x1), 0x2));\n    } else {\n        ans = xvGFXh['ROsdR'](dist, 0x2);\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2 4", "1"], ["5 2 3", "2"]], "original": "function Main(input) {\n  const array = input.trim().split(' ').map(s => parseInt(s))\n  const N = array[0]\n  var A = array[1]\n  var B = array[2]\n\n  var ans = 0\n  var dist = B - A\n  if (dist % 2) {\n    var diff = Math.min(N - B, A - 1) + 1\n    ans += diff\n    ans += Math.floor((B - A - 1)/2)\n  } else {\n    ans = dist / 2\n  }\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02844_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var UNNJrh = {\n        'mbWXX': '2|4|3|0|1|5|6',\n        'NPtXt': function (callee, param1) {\n            return callee(param1);\n        },\n        'FXcjb': '1|4|0|5|2|3',\n        'jfrFR': function (callee, param1) {\n            return callee(param1);\n        },\n        'FuYBI': function (x, y) {\n            return x !== y;\n        },\n        'pxTny': function (x, y) {\n            return x + y;\n        },\n        'AZGeM': function (x, y) {\n            return x + y;\n        }\n    };\n    var aoyfmC = UNNJrh['mbWXX']['split']('|');\n    var qwyFjw = 0x0;\n    while (!![]) {\n        switch (aoyfmC[qwyFjw++]) {\n        case '0':\n            var ans = 0x0;\n            continue;\n        case '1':\n            var x1, x2, x3, xTmp, x1i, x2i, x3i, sTmp;\n            continue;\n        case '2':\n            input = input['trim']()['split']('\\x0a');\n            continue;\n        case '3':\n            var SasStr = input[0x1];\n            continue;\n        case '4':\n            var N = UNNJrh['NPtXt'](parseInt, input[0x0]);\n            continue;\n        case '5':\n            for (var i = 0x3e8; i < 0x7d0; i++) {\n                var KKzRiQ = UNNJrh['FXcjb']['split']('|');\n                var yowUpQ = 0x0;\n                while (!![]) {\n                    switch (KKzRiQ[yowUpQ++]) {\n                    case '0':\n                        x2 = xTmp['substr'](0x2, 0x1);\n                        continue;\n                    case '1':\n                        xTmp = UNNJrh['jfrFR'](String, i);\n                        continue;\n                    case '2':\n                        x1i = SasStr['indexOf'](x1);\n                        continue;\n                    case '3':\n                        if (UNNJrh['FuYBI'](x1i, -0x1)) {\n                            sTmp = SasStr['substr'](UNNJrh['pxTny'](x1i, 0x1));\n                            x2i = sTmp['indexOf'](x2);\n                            if (UNNJrh['FuYBI'](x2i, -0x1)) {\n                                sTmp = sTmp['substr'](UNNJrh['AZGeM'](x2i, 0x1));\n                                x3i = sTmp['indexOf'](x3);\n                                if (x3i !== -0x1) {\n                                    ans++;\n                                }\n                            }\n                        }\n                        continue;\n                    case '4':\n                        x1 = xTmp['substr'](0x1, 0x1);\n                        continue;\n                    case '5':\n                        x3 = xTmp['substr'](0x3, 0x1);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '6':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n0224", "3"], ["6\n123123", "17"], ["19\n3141592653589793238", "329"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\");\n    var N = parseInt(input[0]);\n    var SasStr = input[1];\n    var ans = 0;\n    var x1, x2, x3, xTmp, x1i, x2i, x3i, sTmp;\n    for (var i = 1000; i < 2000; i++){\n    \txTmp = String(i);\n    \tx1 = xTmp.substr(1, 1);\n    \tx2 = xTmp.substr(2, 1);\n    \tx3 = xTmp.substr(3, 1);\n    \tx1i = SasStr.indexOf(x1);\n    \tif (x1i !== -1) { \n    \t\tsTmp = SasStr.substr(x1i + 1);\n    \t\tx2i = sTmp.indexOf(x2);\n    \t\tif (x2i !== -1) { \n    \t\tsTmp = sTmp.substr(x2i + 1);\n    \t\tx3i = sTmp.indexOf(x3);\n    \t\t\tif (x3i !== -1) { \n    \t\t\t\tans ++;\n    \t\t\t}\n    \t\t}\n    \t}\t\n    }\n    console.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02953_1", "type": "JavaScript", "obfuscated": "function Main(args) {\n    const ejCPIb = {\n        'coMsi': function (x, y) {\n            return x - y;\n        },\n        'CEGGh': function (x, y) {\n            return x > y;\n        },\n        'LtNaI': function (x, y) {\n            return x > y;\n        },\n        'lZgpX': 'Yes'\n    };\n    const firstRow = args['split']('\\x0a')[0x0];\n    const row = args['split']('\\x0a')[0x1]['split']('\\x20');\n    for (var i = ejCPIb['coMsi'](row['length'], 0x1); i > 0x0; i--) {\n        if (ejCPIb['CEGGh'](row[i - 0x1], row[i])) {\n            row[ejCPIb['coMsi'](i, 0x1)] -= 0x1;\n        }\n        if (ejCPIb['LtNaI'](row[ejCPIb['coMsi'](i, 0x1)], row[i])) {\n            return console['log']('No');\n        }\n    }\n    console['log'](ejCPIb['lZgpX']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 2 1 1 3", "Yes"], ["4\n1 3 2 1", "No"], ["5\n1 2 3 4 5", "Yes"], ["1\n1000000000", "Yes"]], "original": "\nfunction Main(args){\n\n  const firstRow = args.split(\"\\n\")[0];\n  const row = args.split(\"\\n\")[1].split(\" \");\n\n  for(var i = row.length -1; i > 0; i-- ){\n    if( row[i-1] > row[i] ){\n      // console.log(row[i-1] + \"を\" + String(row[i-1] -1));\n      row[i-1] -= 1;\n    }\n    if( row[i-1] > row[i] ){\n      return console.log(\"No\");\n    }\n  }\n\n  console.log(\"Yes\");\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03238_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const ptEZit = {\n        'xwdCB': function (x, y) {\n            return x === y;\n        },\n        'fjFnS': 'Hello\\x20World',\n        'FgBOv': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'XPhMz': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'TEOeN': function (x, y) {\n            return x + y;\n        }\n    };\n    const args = input['trim']()['split']('\\x0a');\n    const n = parseInt(args[0x0], 0xa);\n    if (ptEZit['xwdCB'](n, 0x1)) {\n        console['log'](ptEZit['fjFnS']);\n    } else {\n        const a = ptEZit['FgBOv'](parseInt, args[0x1], 0xa);\n        const b = ptEZit['XPhMz'](parseInt, args[0x2], 0xa);\n        console['log'](ptEZit['TEOeN'](a, b));\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1", "Hello World"], ["2\n3\n5", "8"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.trim().split('\\n')\n\tconst n = parseInt(args[0], 10)\n\n\tif (n === 1) {\n\t\tconsole.log('Hello World')\n\t} else {\n\t\tconst a = parseInt(args[1], 10)\n\t\tconst b = parseInt(args[2], 10)\n\t\tconsole.log(a + b)\n\t}\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03264_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var eQPeWv = {\n        'ytpxD': '3|1|4|2|0',\n        'kqqcL': function (x, y) {\n            return x * y;\n        },\n        'vxeSo': function (x, y) {\n            return x == y;\n        },\n        'XMhTv': function (x, y) {\n            return x % y;\n        },\n        'NixhG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var lcbKLZ = eQPeWv['ytpxD']['split']('|');\n    var XDfCPo = 0x0;\n    while (!![]) {\n        switch (lcbKLZ[XDfCPo++]) {\n        case '0':\n            console['log'](eQPeWv['kqqcL'](a, b));\n            continue;\n        case '1':\n            var a = 0x0;\n            continue;\n        case '2':\n            for (i = 0x1; i <= k; i++) {\n                if (eQPeWv['vxeSo'](eQPeWv['XMhTv'](i, 0x2), 0x0)) {\n                    a++;\n                } else {\n                    b++;\n                }\n            }\n            continue;\n        case '3':\n            var k = eQPeWv['NixhG'](parseInt, input['split']('\\x0a')[0x0], 0xa);\n            continue;\n        case '4':\n            var b = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "2"], ["6", "9"], ["11", "30"], ["50", "625"]], "original": "function Main(input){\n  var k = parseInt(input.split(\"\\n\")[0],10);\n  var a = 0;\n  var b = 0;\n  for(i = 1; i <= k;i++){\n    if(i % 2 == 0){\n    \ta++;\n  \t}else{\n    \tb++;\n  \t}\n  }\n  console.log(a * b);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03288_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var DOYtfw = {\n        'MpdDo': function (x, y) {\n            return x - y;\n        },\n        'hkerg': function (x, y) {\n            return x < y;\n        },\n        'HdJuY': 'ABC',\n        'ucVwd': 'ARC',\n        'ZEoXx': 'AGC'\n    };\n    var R = DOYtfw['MpdDo'](input[0x0], 0x0);\n    if (DOYtfw['hkerg'](R, 0x4b0))\n        console['log'](DOYtfw['HdJuY']);\n    else if (DOYtfw['hkerg'](R, 0xaf0))\n        console['log'](DOYtfw['ucVwd']);\n    else\n        console['log'](DOYtfw['ZEoXx']);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["1199", "ABC"], ["1200", "ARC"], ["4208", "AGC"]], "original": "function main(input) {\n  var R = input[0]-0;\n  if(R<1200) console.log('ABC');\n  else if(R<2800) console.log('ARC');\n  else console.log('AGC');\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03293_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var VrEarT = {\n        'nBdHe': function (x, y) {\n            return x <= y;\n        },\n        'UxEfL': function (x, y) {\n            return x === y;\n        },\n        'UOhCV': 'Yes'\n    };\n    ans = 'No';\n    input = input['trim']()['split']('\\x0a');\n    rotate = input[0x0];\n    for (i = 0x0; VrEarT['nBdHe'](i, input[0x0]['length']); i++) {\n        head = rotate['substr'](0x0, 0x1);\n        str = rotate['slice'](0x1) + head;\n        if (VrEarT['UxEfL'](input[0x1], str)) {\n            ans = VrEarT['UOhCV'];\n            break;\n        }\n        rotate = str;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["kyoto\ntokyo", "Yes"], ["abc\narc", "No"], ["aaaaaaaaaaaaaaab\naaaaaaaaaaaaaaab", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tans = 'No'\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.trim().split(\"\\n\");\n\trotate = input[0]\n\t// s = input[0].split(' ').map((n) => (parseInt(n)))\n\tfor (i = 0; i <= input[0].length; i++) {\n\t\thead = rotate.substr(0,1)\n\t\tstr = rotate.slice(1) + head\n\n\t\tif (input[1] === str) {\n\t\t\tans = 'Yes'\n\t\t\tbreak\n\t\t}\n\t\trotate = str\n\t}\n\n\t// sort\n\t// s.sort()\n\t// s.sort((a, b) => { return b - a})\n\n\n\n\t//出力\n\tconsole.log(ans)\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n// Main(require('fs').readFileSync('./input.txt', 'utf-8'));", "language": "JavaScript"}
{"filename": "p03477_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const ANfbJS = {\n        'mrOis': function (x, y) {\n            return x + y;\n        },\n        'aOVBh': 'Left',\n        'WjrOq': 'Right',\n        'wTHmp': 'Balanced'\n    };\n    const numbers = input['split']('\\x20')['map'](n => Number(n));\n    const l = ANfbJS['mrOis'](numbers[0x0], numbers[0x1]);\n    const r = numbers[0x2] + numbers[0x3];\n    if (l > r) {\n        console['log'](ANfbJS['aOVBh']);\n    } else if (l < r) {\n        console['log'](ANfbJS['WjrOq']);\n    } else {\n        console['log'](ANfbJS['wTHmp']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 8 7 1", "Left"], ["3 4 5 2", "Balanced"], ["1 7 6 4", "Right"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const l = numbers[0] + numbers[1];\n  const r = numbers[2] + numbers[3];\n  if (l > r) {\n    console.log('Left');\n  } else if (l < r) {\n    console.log('Right');\n  } else {\n    console.log('Balanced');\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03557_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const fRMEwe = {\n        'Mphmh': function (callee, param1) {\n            return callee(param1);\n        },\n        'znlrW': function (x, y) {\n            return x < y;\n        },\n        'zPBqj': function (x, y) {\n            return x < y;\n        },\n        'mTAif': function (x, y) {\n            return x <= y;\n        },\n        'ptiZy': function (x, y) {\n            return x >= y;\n        },\n        'CiTWZ': function (x, y) {\n            return x * y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = fRMEwe['Mphmh'](parseInt, lines['shift']());\n    const A = lines['shift']()['split']('\\x20')['map'](x => parseInt(x))['sort']((a, b) => a - b);\n    const B = lines['shift']()['split']('\\x20')['map'](x => parseInt(x))['sort']((a, b) => a - b);\n    const C = lines['shift']()['split']('\\x20')['map'](x => parseInt(x))['sort']((a, b) => a - b);\n    let result = 0x0;\n    for (let b = 0x0; fRMEwe['znlrW'](b, N); b++) {\n        let current_b = B[b];\n        let count_a = N;\n        for (let a = 0x0; fRMEwe['zPBqj'](a, N); a++) {\n            if (fRMEwe['mTAif'](current_b, A[a])) {\n                count_a--;\n            }\n        }\n        let count_c = N;\n        for (let c = 0x0; fRMEwe['zPBqj'](c, N); c++) {\n            if (fRMEwe['ptiZy'](current_b, C[c])) {\n                count_c--;\n            }\n        }\n        result += fRMEwe['CiTWZ'](count_a, count_c);\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 5\n2 4\n3 6", "3"], ["3\n1 1 1\n2 2 2\n3 3 3", "27"], ["6\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288", "87"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N  =parseInt(lines.shift());\n  const A = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n  const B = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n  const C = lines.shift().split(' ').map(x => parseInt(x)).sort((a,b) => a-b);\n\n\n//console.log(A);\n//console.log(B);\n//console.log(C);\n\n  let result = 0;\n\n  for(let b=0;b<N;b++){\n    let current_b = B[b];\n\n    let count_a = N;\n    for(let a=0;a<N;a++){\n      if(current_b <= A[a] ){\n        count_a--;\n      }\n    }\n  \n\n    let count_c = N;\n    for(let c=0;c<N;c++){\n      if(current_b >= C[c]){\n        count_c --;\n      }\n    }\n//console.log([count_a,count_c])\n    result += count_a*count_c\n  }\n\n  console.log(result);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03573_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const LnjgkL = {\n        'jDfYA': function (x, y) {\n            return x === y;\n        }\n    };\n    const numbers = input['split']('\\x20')['map'](n => Number(n));\n    const a = numbers[0x0];\n    const b = numbers[0x1];\n    const c = numbers[0x2];\n    if (LnjgkL['jDfYA'](a, b)) {\n        console['log'](c);\n    } else if (LnjgkL['jDfYA'](b, c)) {\n        console['log'](a);\n    } else {\n        console['log'](b);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 7 5", "7"], ["1 1 7", "7"], ["-100 100 100", "-100"]], "original": "function Main(input) {\n  const numbers = input.split(' ').map(n => Number(n));\n  const a = numbers[0];\n  const b = numbers[1];\n  const c = numbers[2];\n\n  if (a === b) {\n    console.log(c);\n  } else if (b === c) {\n    console.log(a);\n  } else {\n    console.log(b);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03623_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var oEiCgM = {\n        'ATvpv': function (x, y) {\n            return x < y;\n        },\n        'wuqJN': function (x, y) {\n            return x - y;\n        },\n        'NMPPX': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a')[0x0]['split']('\\x20');\n    if (oEiCgM['ATvpv'](Math['abs'](oEiCgM['wuqJN'](input[0x0], input[0x1])), Math['abs'](oEiCgM['NMPPX'](input[0x0], input[0x2]))))\n        console['log']('A');\n    else\n        console['log']('B');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2 7", "B"], ["1 999 1000", "A"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\")[0].split(\" \"); // 1行目がinput[0], 2行目がinput[1], …に入る\n    \n    if( Math.abs(input[0] - input[1]) < Math.abs(input[0] - input[2]))\n        console.log(\"A\");\n    else\n        console.log(\"B\");\n}\n \n// ※この行以降は編集しない (標準入力から一度に読み込みMainを呼び出します)\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p03759_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const rlkTPJ = {\n        'CgZWy': function (x, y) {\n            return x == y;\n        },\n        'TEneS': function (x, y) {\n            return x - y;\n        },\n        'HRCRz': 'YES'\n    };\n    const [a, b, c] = arg['split']('\\x0a')[0x0]['split']('\\x20');\n    console['log'](rlkTPJ['CgZWy'](rlkTPJ['TEneS'](b, a), rlkTPJ['TEneS'](c, b)) ? rlkTPJ['HRCRz'] : 'NO');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 4 6", "YES"], ["2 5 6", "NO"], ["3 2 1", "YES"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    const [a, b, c] = arg.split(\"\\n\")[0].split(\" \");\n    console.log(b - a == c - b ? \"YES\" : \"NO\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03775_1", "type": "JavaScript", "obfuscated": "function divisor(n) {\n    var chXPOd = {\n        'MAPZN': function (x, y) {\n            return x * y;\n        },\n        'ztIyv': function (x, y) {\n            return x % y;\n        },\n        'wbWQS': function (x, y) {\n            return x / y;\n        }\n    };\n    var ret = [];\n    for (var i = 0x1; chXPOd['MAPZN'](i, i) <= n; i++) {\n        if (chXPOd['ztIyv'](n, i) == 0x0) {\n            ret['push'](i);\n            if (chXPOd['MAPZN'](i, i) != n)\n                ret['push'](chXPOd['wbWQS'](n, i));\n        }\n    }\n    return ret;\n}\nfunction f(a, b) {\n    return Math['max'](('' + a)['length'], ('' + b)['length']);\n}\nfunction main(input) {\n    var qwdjQs = {\n        'mBSJn': function (x, y) {\n            return x == y;\n        },\n        'KYKwD': function (callee, param1) {\n            return callee(param1);\n        },\n        'lqrwA': function (x, y) {\n            return x - y;\n        },\n        'cjUpb': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'SgElv': function (x, y) {\n            return x % y;\n        }\n    };\n    var lvtKOH = '6|4|1|7|3|5|2|8|0|9'['split']('|');\n    var TqTElw = 0x0;\n    while (!![]) {\n        switch (lvtKOH[TqTElw++]) {\n        case '0':\n            if (qwdjQs['mBSJn'](surplus, 0x1))\n                minF = Math['min'](minF, ('' + divisors[halfLen])['length']);\n            continue;\n        case '1':\n            var divisors = qwdjQs['KYKwD'](divisor, n)['sort']((a, b) => a - b);\n            continue;\n        case '2':\n            var minF = ('' + n)['length'];\n            continue;\n        case '3':\n            var lastIndex = qwdjQs['lqrwA'](divisors['length'], 0x1);\n            continue;\n        case '4':\n            var n = qwdjQs['cjUpb'](parseInt, inputs[0x0], 0xa);\n            continue;\n        case '5':\n            var halfLen = Math['floor'](divisors['length'] / 0x2);\n            continue;\n        case '6':\n            var inputs = input['split']('\\x0a');\n            continue;\n        case '7':\n            var surplus = qwdjQs['SgElv'](divisors['length'], 0x2);\n            continue;\n        case '8':\n            for (var i = 0x0; i < halfLen - surplus; i++) {\n                minF = Math['min'](minF, f(divisors[i], divisors[lastIndex - i]));\n            }\n            continue;\n        case '9':\n            console['log'](minF);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10000", "3"], ["1000003", "7"], ["9876543210", "6"]], "original": "// Atcoder057 - C\nfunction divisor(n) {var ret=[]; for (var i=1;i*i<=n;i++){if(n%i==0){ret.push(i);if(i*i!=n)ret.push(n/i);}}return ret;}\nfunction f(a , b){return Math.max(`${a}`.length, `${b}`.length);}\nfunction main(input) {\n  var inputs = input.split('\\n');\n  var n = parseInt(inputs[0], 10);\n\n  var divisors = divisor(n).sort((a, b) => a - b);\n  var surplus = divisors.length % 2;\n\n  var lastIndex = divisors.length - 1;\n  var halfLen = Math.floor(divisors.length / 2);\n\n  var minF = `${n}`.length;\n  for (var i = 0; i < halfLen - surplus; i++) {\n    minF = Math.min(minF, f(divisors[i], divisors[lastIndex - i]));\n  }\n  if (surplus == 1) minF = Math.min(minF, `${divisors[halfLen]}`.length);\n\n  console.log(minF);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03803_1", "type": "JavaScript", "obfuscated": "let [a, b] = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x20')['map'](Number);\nif (a == 0x1)\n    a = 0xe;\nif (b == 0x1)\n    b = 0xe;\nconsole['log'](a == b ? 'Draw' : a > b ? 'Alice' : 'Bob');", "test_cases": [["8 6", "Alice"], ["1 1", "Draw"], ["13 1", "Bob"]], "original": "let [a, b] = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\" \").map(Number);\nif (a == 1) a = 14;\nif (b == 1) b = 14;\nconsole.log(a == b ? \"Draw\" : a > b ? \"Alice\" : \"Bob\");", "language": "JavaScript"}
{"filename": "p03813_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const UhAXdt = {\n        'WrJNw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const x = UhAXdt['WrJNw'](Number, s);\n    const ans = x >= 0x4b0 ? 'ARC' : 'ABC';\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1000", "ABC"], ["2000", "ARC"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const x = Number(s);\n\n  const ans = (x >= 1200) ? 'ARC' : 'ABC';\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03860_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var IgXIta = {\n        'pCEbL': function (x, y) {\n            return x + y;\n        },\n        'MJzSe': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x20');\n    tmp = input[0x1][0x0];\n    console['log'](IgXIta['pCEbL'](IgXIta['MJzSe']('A', tmp), 'C'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["AtCoder Beginner Contest", "ABC"], ["AtCoder Snuke Contest", "ASC"], ["AtCoder X Contest", "AXC"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\" \");\n\ttmp = input[1][0];\n\tconsole.log(\"A\" + tmp + \"C\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03944_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const VHAEED = {\n        'vqKoE': function (x, y) {\n            return x === y;\n        },\n        'ogepS': function (x, y) {\n            return x > y;\n        },\n        'LtJVQ': function (x, y) {\n            return x === y;\n        },\n        'lNtYl': function (x, y) {\n            return x < y;\n        },\n        'ybZtS': function (x, y) {\n            return x - y;\n        },\n        'SUmmA': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    let WHN = input[0x0]['split']('\\x20')['map'](Number);\n    let minX = 0x0;\n    let minY = 0x0;\n    let maxX = WHN[0x0];\n    let maxY = WHN[0x1];\n    const N = WHN[0x2];\n    for (let i = 0x1; i <= N; i++) {\n        let tmp = input[i]['trim']()['split']('\\x20')['map'](Number);\n        let A = tmp[0x2];\n        if (VHAEED['vqKoE'](A, 0x1)) {\n            if (VHAEED['ogepS'](tmp[0x0], minX)) {\n                minX = tmp[0x0];\n            }\n        } else if (VHAEED['LtJVQ'](A, 0x2)) {\n            if (VHAEED['lNtYl'](tmp[0x0], maxX)) {\n                maxX = tmp[0x0];\n            }\n        } else if (A === 0x3) {\n            if (VHAEED['ogepS'](tmp[0x1], minY)) {\n                minY = tmp[0x1];\n            }\n        } else if (VHAEED['vqKoE'](A, 0x4)) {\n            if (tmp[0x1] < maxY) {\n                maxY = tmp[0x1];\n            }\n        }\n    }\n    const X = VHAEED['ybZtS'](maxX, minX);\n    const Y = VHAEED['ybZtS'](maxY, minY);\n    if (VHAEED['SUmmA'](X, 0x0) || VHAEED['SUmmA'](Y, 0x0)) {\n        console['log'](0x0);\n    } else {\n        console['log'](X * Y);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 4 2\n2 1 1\n3 3 4", "9"], ["5 4 3\n2 1 1\n3 3 4\n1 4 2", "0"], ["10 10 5\n1 6 1\n4 1 3\n6 9 4\n9 4 2\n3 1 3", "64"]], "original": "\"use strict\"\nfunction Main(input) {\n  input = input.trim().split('\\n');\n  let WHN = input[0].split(' ').map(Number);\n  let minX = 0;\n  let minY = 0;\n  let maxX = WHN[0];\n  let maxY = WHN[1];\n  const N = WHN[2];\n \n  for(let i=1; i<=N; i++){\n    let tmp = input[i].trim().split(' ').map(Number)\n    let A = tmp[2];\n    if(A === 1){\n      if(tmp[0] > minX){\n        minX = tmp[0];\n      }\n    } else if (A === 2) {\n      if(tmp[0] < maxX){\n        maxX = tmp[0];\n      }\n    } else if (A === 3) {\n      if(tmp[1] > minY) {\n        minY = tmp[1];\n      }\n    } else if (A === 4) {\n      if(tmp[1] < maxY) {\n        maxY = tmp[1];\n      }\n    }\n  }\n \n  const X = maxX - minX;\n  const Y = maxY - minY;\n  if(X <= 0 || Y <= 0){\n    console.log(0);\n  } else {\n    console.log(X*Y);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03963_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uIdxYd = {\n        'HouWy': '6|2|3|0|4|5|1',\n        'aBWGn': function (x, y) {\n            return x - y;\n        }\n    };\n    var FrXIUf = uIdxYd['HouWy']['split']('|');\n    var NYLKsD = 0x0;\n    while (!![]) {\n        switch (FrXIUf[NYLKsD++]) {\n        case '0':\n            var K = tmp[0x1];\n            continue;\n        case '1':\n            console['log'](pattern);\n            continue;\n        case '2':\n            var tmp = input[0x0]['split']('\\x20');\n            continue;\n        case '3':\n            var N = tmp[0x0];\n            continue;\n        case '4':\n            var pattern = K;\n            continue;\n        case '5':\n            for (i = 0x1; i < N; i++) {\n                pattern *= uIdxYd['aBWGn'](K, 0x1);\n            }\n            continue;\n        case '6':\n            var input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2", "2"], ["1 10", "10"]], "original": "function Main(input) {\n    // 1行目がinput[0], 2行目がinput[1], …に入る\n    var input = input.split(\"\\n\");\n    var tmp = input[0].split(\" \");\n    var N = tmp[0];\n    var K = tmp[1];\n\n    var pattern = K;\n    for (i = 1;i < N;i++) {\n\tpattern *= K - 1;\n    }\n\n    console.log(pattern);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00019_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var aCJeAq = {\n        'Ztzob': function (callee, param1) {\n            return callee(param1);\n        },\n        'PFDIz': function (x, y) {\n            return x <= y;\n        },\n        'OiwvV': function (x, y) {\n            return x * y;\n        }\n    };\n    var ans = 0x1;\n    var inputNum = aCJeAq['Ztzob'](toInt, input);\n    for (var i = 0x1; aCJeAq['PFDIz'](i, input); i++) {\n        ans = aCJeAq['OiwvV'](ans, i);\n    }\n    console['log'](ans);\n}\nfunction toInt(str) {\n    var xmzJuQ = {\n        'rJkqa': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return xmzJuQ['rJkqa'](parseInt, str, 0xa);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5", "120"]], "original": "function main(input){\n    var ans=1;\n    var inputNum=toInt(input);\n    for(var i=1;i<=input;i++){\n        ans=ans*i;\n    }\n    console.log(ans);\n}\nfunction toInt(str){\n    return parseInt(str, 10);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00021_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var VLpRhj = {\n        'PxMoH': function (callee, param1) {\n            return callee(param1);\n        },\n        'GRXMI': function (x, y) {\n            return x < y;\n        },\n        'zGMAw': function (x, y) {\n            return x === y;\n        },\n        'slwIZ': function (x, y) {\n            return x / y;\n        },\n        'PnQjn': function (x, y) {\n            return x - y;\n        },\n        'pgwHS': function (x, y) {\n            return x / y;\n        },\n        'kyZet': function (x, y) {\n            return x - y;\n        },\n        'isvAp': 'YES'\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a');\n    var n = VLpRhj['PxMoH'](Number, p['shift']());\n    var i = 0x0;\n    while (VLpRhj['GRXMI'](i++, n)) {\n        var args = p['shift']()['split']('\\x20')['map'](Number);\n        var x1 = args['shift']();\n        var y1 = args['shift']();\n        var x2 = args['shift']();\n        var y2 = args['shift']();\n        var x3 = args['shift']();\n        var y3 = args['shift']();\n        var x4 = args['shift']();\n        var y4 = args['shift']();\n        console['log'](VLpRhj['zGMAw'](VLpRhj['slwIZ'](VLpRhj['PnQjn'](y2, y1), VLpRhj['PnQjn'](x2, x1))['toFixed'](0x5), VLpRhj['pgwHS'](VLpRhj['kyZet'](y4, y3), x4 - x3)['toFixed'](0x5)) ? VLpRhj['isvAp'] : 'NO');\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2\n0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0\n3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0", "YES\nNO"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  var i = 0;\n  while (i++ < n) {\n    var args = p.shift().split(' ').map(Number);\n    var x1 = args.shift();\n    var y1 = args.shift();\n    var x2 = args.shift();\n    var y2 = args.shift();\n    var x3 = args.shift();\n    var y3 = args.shift();\n    var x4 = args.shift();\n    var y4 = args.shift();\n    console.log(((y2 - y1) / (x2 - x1)).toFixed(5) === ((y4 - y3) / (x4 - x3)).toFixed(5) ? 'YES' : 'NO');\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02259_1", "type": "JavaScript", "obfuscated": "function bubbleSort(A) {\n    var nbKJEh = {\n        'EHCaV': function (x, y) {\n            return x == y;\n        },\n        'Bvotk': function (x, y) {\n            return x - y;\n        },\n        'zrCzg': function (x, y) {\n            return x >= y;\n        },\n        'eRrXd': function (x, y) {\n            return x < y;\n        }\n    };\n    var N = A['length'];\n    var flag = 0x1;\n    var i = 0x0;\n    var cnt = 0x0;\n    while (nbKJEh['EHCaV'](flag, 0x1)) {\n        flag = 0x0;\n        for (var j = nbKJEh['Bvotk'](N, 0x1); nbKJEh['zrCzg'](j, i + 0x1); j--) {\n            if (nbKJEh['eRrXd'](A[j], A[j - 0x1])) {\n                var m = A[j];\n                A[j] = A[nbKJEh['Bvotk'](j, 0x1)];\n                A[nbKJEh['Bvotk'](j, 0x1)] = m;\n                flag = 0x1;\n                cnt++;\n            }\n        }\n        i++;\n    }\n    return [\n        A,\n        cnt\n    ];\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['shift']();\nvar arr = Arr[0x0]['split']('\\x20')['map'](Number);\nvar result = bubbleSort(arr);\nconsole['log'](result[0x0]['join']('\\x20'));\nconsole['log'](result[0x1]);", "test_cases": [["5\n5 3 2 4 1", "1 2 3 4 5\n8"], ["6\n5 2 4 6 1 3", "1 2 3 4 5 6\n9"]], "original": "function bubbleSort(A){\n   var N=A.length;\n   var flag=1;\n   var i=0;\n   var cnt=0;\n   while(flag==1){\n      flag=0;\n      for(var j=N-1;j>=i+1;j--){\n         if(A[j]<A[j-1]){\n         var m=A[j];\n         A[j]=A[j-1];\n         A[j-1]=m;\n         flag=1;\n         cnt++;\n         }\n      }\n      i++;   \n   }\n   return [A,cnt];\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.shift();\nvar arr=Arr[0].split(\" \").map(Number);\nvar result=bubbleSort(arr);\nconsole.log(result[0].join(\" \"));\nconsole.log(result[1]);", "language": "JavaScript"}
{"filename": "p02580_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const bHcJvj = {\n        'DsudQ': function (x, y) {\n            return x - y;\n        },\n        'ruPSa': function (x, y) {\n            return x <= y;\n        },\n        'aQVRy': function (x, y) {\n            return x + y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a');\n    const [H, W, M] = tmp['shift']()['split']('\\x20')['map'](v => Number(v));\n    const hw = tmp['map'](v => v['split']('\\x20')['map'](v => Number(v)));\n    let result = 0x0;\n    for (let i = 0x1; i <= H; i++) {\n        const harr = hw['filter'](v => v[0x0] !== i);\n        const hlen = bHcJvj['DsudQ'](hw['length'], harr['length']);\n        for (let j = 0x1; bHcJvj['ruPSa'](j, W); j++) {\n            const warr = harr['filter'](v => v[0x1] === j);\n            if (result < hlen + warr['length']) {\n                result = bHcJvj['aQVRy'](hlen, warr['length']);\n            }\n        }\n    }\n    console['log'](result);\n    return;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 3\n2 2\n1 1\n1 3", "3"], ["3 3 4\n3 3\n3 1\n1 1\n1 2", "3"], ["5 5 10\n2 5\n4 3\n2 3\n5 5\n2 2\n5 4\n5 3\n5 1\n3 5\n1 4", "6"]], "original": "'use strict';\n\nfunction Main(input) {\n    //H W M\n    // (hi, wi)\n    const tmp = input.trim().split('\\n');\n    const [H, W, M] = tmp\n        .shift()\n        .split(' ')\n        .map((v) => Number(v));\n    const hw = tmp.map((v) => v.split(' ').map((v) => Number(v)));\n    // console.log(H, W, M, hw);\n    let result = 0;\n    for (let i = 1; i <= H; i++) {\n        const harr = hw.filter((v) => v[0] !== i);\n        const hlen = hw.length - harr.length;\n        for (let j = 1; j <= W; j++) {\n            const warr = harr.filter((v) => v[1] === j);\n            if (result < hlen + warr.length) {\n                result = hlen + warr.length;\n            }\n        }\n    }\n    console.log(result);\n    return;\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02606_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const hiABZT = {\n        'rCrYn': function (callee, param1) {\n            return callee(param1);\n        },\n        'bRxsm': function (callee, param1) {\n            return callee(param1);\n        },\n        'fGvUC': function (x, y) {\n            return x <= y;\n        },\n        'Axvhy': function (x, y) {\n            return x % y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const L = hiABZT['rCrYn'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const R = hiABZT['bRxsm'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    const d = hiABZT['rCrYn'](parseInt, arg[0x0]['split']('\\x20')[0x2]);\n    let answer = 0x0;\n    for (let i = L; hiABZT['fGvUC'](i, R); i++) {\n        if (hiABZT['Axvhy'](i, d) === 0x0)\n            answer++;\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 10 2", "3"], ["6 20 7", "2"], ["1 100 1", "100"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const L = parseInt(arg[0].split(\" \")[0]);\n    const R = parseInt(arg[0].split(\" \")[1]);\n    const d = parseInt(arg[0].split(\" \")[2]);\n    \n    let answer = 0;\n    \n    for(let i=L; i<=R; i++) {\n        if(i % d === 0) answer++;\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02657_1", "type": "JavaScript", "obfuscated": "const main = stdin => {\n    const ECGzSH = {\n        'riCmB': function (x, y) {\n            return x * y;\n        }\n    };\n    const [A, B] = stdin['trim']()['split']('\\x20')['map'](x => parseInt(x));\n    console['log'](ECGzSH['riCmB'](A, B));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 5", "10"], ["100 100", "10000"]], "original": "const main = stdin => {\n  const [A, B] = stdin.trim().split(' ').map(x => parseInt(x))\n  console.log(A * B)\n}\n\n// 標準入力\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p02660_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var Gvdbmo = {\n        'YVjih': function (callee, param1) {\n            return callee(param1);\n        },\n        'yRSIZ': function (x, y) {\n            return x < y;\n        },\n        'IflmN': function (x, y) {\n            return x == y;\n        },\n        'MTveL': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var N = Gvdbmo['YVjih'](parseInt, input[0x0]);\n    var ans = 0x0;\n    var set = new Set();\n    var N2 = N;\n    for (var i = 0x2; i < Math['sqrt'](N); i++) {\n        var x = i;\n        for (var j = 0x1; Gvdbmo['yRSIZ'](x, N); j++) {\n            if (Gvdbmo['IflmN'](N2 % Math['pow'](i, j), 0x0)) {\n                ans++;\n                N2 = Gvdbmo['MTveL'](N2, Math['pow'](i, j));\n            } else {\n                break;\n            }\n            x = Math['pow'](i, j + 0x1);\n        }\n    }\n    if (Gvdbmo['IflmN'](ans, 0x0) && N != 0x1) {\n        ans = 0x1;\n    }\n    console['log']('%s', ans);\n    return ans;\n}\nfunction debug(n) {\n    var nFyRDY = {\n        'ElTAf': function (x, y) {\n            return x + y;\n        },\n        'uthHT': function (x, y) {\n            return x + y;\n        },\n        'qcenO': 'output',\n        'XLMcy': function (callee, param1) {\n            return callee(param1);\n        },\n        'PHACk': function (x, y) {\n            return x + y;\n        }\n    };\n    var kdAUXp = '4|3|2|1|0'['split']('|');\n    var GSCuiZ = 0x0;\n    while (!![]) {\n        switch (kdAUXp[GSCuiZ++]) {\n        case '0':\n            document['getElementById'](nFyRDY['ElTAf']('result', n))['innerHTML'] = result;\n            continue;\n        case '1':\n            if (ans == document['getElementById'](nFyRDY['uthHT'](nFyRDY['qcenO'], n))['value']['split']('\\x0a')[0x0]) {\n                result = 'AC';\n            }\n            continue;\n        case '2':\n            var result = 'WA';\n            continue;\n        case '3':\n            var ans = nFyRDY['XLMcy'](Main, input);\n            continue;\n        case '4':\n            var input = document['getElementById'](nFyRDY['PHACk']('input', n))['value'];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["24", "3"], ["1", "0"], ["64", "3"], ["1000000007", "1"], ["997764507000", "7"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0]);\n  var ans = 0;\n  var set = new Set();\n  var N2=N;\n  for(var i=2;i<Math.sqrt(N);i++){\n    var x =i;\n    for(var j=1;x<N;j++){\n      if(N2%Math.pow(i,j)==0){\n        ans++;\n        N2=N2/Math.pow(i,j);\n      }else{\n        break;\n      }\n      x=Math.pow(i,j+1);\n    }\n  }\n  if(ans==0&&N!=1){\n    ans=1;\n  }\n  \n\n\n\n  console.log('%s', ans);\n  return ans;\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02688_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const eGQGOP = {\n        'fDccB': function (x, y) {\n            return x < y;\n        },\n        'uTwfM': function (x, y) {\n            return x % y;\n        },\n        'FoOpv': function (x, y) {\n            return x >= y;\n        }\n    };\n    tmp = input['split']('\\x0a');\n    tmp2 = tmp[0x0]['split']('\\x20');\n    var n = parseInt(tmp2[0x0], 0xa);\n    var k = parseInt(tmp2[0x1], 0xa);\n    tmp['shift']();\n    arry = tmp['slice']();\n    list = [];\n    count = 0x0;\n    tmp3 = [];\n    for (let i = 0x0; eGQGOP['fDccB'](i, arry['length']); i++) {\n        if (eGQGOP['uTwfM'](i, 0x2) !== 0x0) {\n            arry[i] = arry[i]['split']('\\x20');\n            tmp3 = arry[i]['map'](Number);\n            for (let index = 0x0; eGQGOP['fDccB'](index, tmp3['length']); index++) {\n                list['push'](tmp3[index]);\n            }\n        }\n    }\n    for (let i = 0x1; i <= n; i++) {\n        if (eGQGOP['FoOpv'](list['indexOf'](i), 0x0)) {\n        } else {\n            count += 0x1;\n        }\n    }\n    console['log'](count);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n2\n1 3\n1\n3", "1"], ["3 3\n1\n3\n1\n3\n1\n3", "2"]], "original": "function Main(input) {\n    tmp = input.split(\"\\n\");\n    tmp2 = tmp[0].split(\" \");\n    var n = parseInt(tmp2[0], 10);\n    var k = parseInt(tmp2[1], 10);\n    tmp.shift();\n    arry = tmp.slice();\n    list = [];\n    count = 0;\n    tmp3 = [];\n\n    for (let i = 0; i < arry.length; i++) {\n       if (i % 2 !== 0) {\n\n           arry[i] = arry[i].split(\" \");\n           tmp3 = arry[i].map(Number);\n\n           for (let index = 0; index < tmp3.length; index++) {\n               list.push(tmp3[index]);\n           }\n       }\n    }\n  \n    for (let i = 1; i <= n; i++) {\n        if (list.indexOf(i) >= 0) {\n            \n        } else{\n            count += 1;\n        }        \n    }\n\n    console.log(count);    \n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02713_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const IbUSJY = {\n        'TMvEG': function (x, y) {\n            return x <= y;\n        },\n        'UbYwe': function (x, y) {\n            return x % y;\n        },\n        'qDWId': function (x, y) {\n            return x === y;\n        },\n        'wakLT': function (x, y) {\n            return x % y;\n        },\n        'ZrVqL': function (x, y) {\n            return x === y;\n        },\n        'kCerU': function (x, y) {\n            return x % y;\n        },\n        'Pjfki': function (callee, param1) {\n            return callee(param1);\n        },\n        'zbNLY': function (x, y) {\n            return x <= y;\n        },\n        'NwCJC': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const k = input;\n    let sum = 0x0;\n    const dv = n => {\n        const divisors = [];\n        const s = Math['sqrt'](n);\n        for (let i = 0x1; IbUSJY['TMvEG'](i, s); i++) {\n            if (IbUSJY['UbYwe'](n, i) === 0x0) {\n                if (i === n / i) {\n                    divisors['push'](i);\n                } else {\n                    divisors['push'](i, n / i);\n                }\n            }\n        }\n        return divisors;\n    };\n    const gcd = (a, b, c) => {\n        const min = Math['min'](a, b, c);\n        const dvmin = IbUSJY['Pjfki'](dv, min);\n        const candidate = [];\n        dvmin['forEach'](i => {\n            if (IbUSJY['qDWId'](IbUSJY['wakLT'](a, i), 0x0) && IbUSJY['ZrVqL'](IbUSJY['kCerU'](b, i), 0x0) && c % i === 0x0) {\n                candidate['push'](i);\n            }\n        });\n        return Math['max'](...candidate);\n    };\n    for (let a = 0x1; IbUSJY['zbNLY'](a, k); a++) {\n        for (let b = 0x1; IbUSJY['TMvEG'](b, k); b++) {\n            for (let c = 0x1; c <= k; c++) {\n                sum += IbUSJY['NwCJC'](gcd, a, b, c);\n            }\n        }\n    }\n    console['log'](sum);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2", "9"], ["200", "10813692"]], "original": "function Main(input) {\n  const k = input;\n  let sum = 0;\n\n  const dv = n => {\n    const divisors = [];\n    const s = Math.sqrt(n);\n\n    for (let i = 1; i <= s; i++) {\n      if (n % i === 0) {\n        if (i === n / i) {\n          divisors.push(i);\n        } else {\n          divisors.push(i, n / i);\n        }\n      }\n    }\n\n    return divisors;\n  }\n\n  const gcd = (a, b, c) => {\n    const min = Math.min(a, b, c);\n    const dvmin = dv(min);\n    const candidate = [];\n\n    dvmin.forEach(i => {\n      if (a % i === 0 && b % i === 0 && c % i === 0) {\n        candidate.push(i);\n      }\n    })\n\n    return Math.max(...candidate);\n  }\n\n  for (let a = 1; a <= k; a++) {\n    for (let b = 1; b <= k; b++) {\n      for (let c = 1; c <= k; c++) {\n        sum += gcd(a, b, c);\n      }\n    }\n  }\n\n  console.log(sum);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02727_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['split']('\\x0a');\nconst parse = (s, sep) => {\n    return s['split'](sep)['map'](v => parseInt(v));\n};\nconst split = (s, sep, result, keys) => {\n    var NBCeVm = {\n        'SmFEP': function (x, y) {\n            return x < y;\n        }\n    };\n    var arr = parse(s, sep);\n    for (var i = 0x0; NBCeVm['SmFEP'](i, arr['length']); i++) {\n        result[keys[i]] = arr[i];\n    }\n};\nvar inp = {};\nsplit(lines[0x0], '\\x20', inp, [\n    'x',\n    'y',\n    'a',\n    'b',\n    'c'\n]);\nvar p = parse(lines[0x1], '\\x20')['sort']((a, b) => b - a);\nvar q = parse(lines[0x2], '\\x20')['sort']((a, b) => b - a);\nvar r = parse(lines[0x3], '\\x20')['sort']((a, b) => b - a);\np = p['slice'](0x0, inp['x']);\nq = q['slice'](0x0, inp['y']);\nconsole['log'](p['concat'](q, r)['sort']((a, b) => b - a)['slice'](0x0, inp['x'] + inp['y'])['reduce']((a, b) => a + b, 0x0));", "test_cases": [["1 2 2 2 1\n2 4\n5 1\n3", "12"], ["2 2 2 2 2\n8 6\n9 1\n2 1", "25"], ["2 2 4 4 4\n11 12 13 14\n21 22 23 24\n1 2 3 4", "74"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nconst parse = (s, sep) => {\n  return s.split(sep).map(v => parseInt(v));\n}\nconst split = (s, sep, result, keys) => {\n  var arr = parse(s, sep);\n  for (var i = 0; i < arr.length; i++) {\n    result[keys[i]] = arr[i];\n  }\n}\n\nvar inp = {};\nsplit(lines[0], ' ', inp, ['x', 'y', 'a', 'b', 'c']);\nvar p = parse(lines[1], ' ').sort((a, b) => b - a);\nvar q = parse(lines[2], ' ').sort((a, b) => b - a);\nvar r = parse(lines[3], ' ').sort((a, b) => b - a);\np = p.slice(0, inp.x);\nq = q.slice(0, inp.y);\n\nconsole.log(p.concat(q, r).sort((a, b) => b - a).slice(0, inp.x + inp.y).reduce((a, b) => a + b, 0));\n", "language": "JavaScript"}
{"filename": "p02783_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const AkTmbZ = {\n        'RZgFP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'IvNlv': function (x, y) {\n            return x / y;\n        }\n    };\n    const args = input['split']('\\x20');\n    const H = parseInt(args[0x0], 0xa);\n    const A = AkTmbZ['RZgFP'](parseInt, args[0x1], 0xa);\n    const ans = Math['ceil'](AkTmbZ['IvNlv'](H, A));\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 4", "3"], ["1 10000", "1"], ["10000 1", "10000"]], "original": "function Main(input) {\n    const args = input.split(' ');\n    const H = parseInt(args[0], 10);\n    const A = parseInt(args[1], 10);\n    const ans = Math.ceil(H/A)\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p02842_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var OKuHuS = {\n        'mIMpZ': '7|13|5|15|12|9|4|8|0|11|14|1|3|10|2|6',\n        'PlQOi': function (x, y) {\n            return x == y;\n        },\n        'VkTDB': function (x, y) {\n            return x * y;\n        },\n        'gKzKt': function (x, y) {\n            return x == y;\n        },\n        'MyrSa': function (x, y) {\n            return x == y;\n        },\n        'BRmuP': function (x, y) {\n            return x + y;\n        },\n        'HBxIv': function (x, y) {\n            return x - y;\n        },\n        'WAJAI': function (x, y) {\n            return x * y;\n        },\n        'bZqwP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var CKDIpv = OKuHuS['mIMpZ']['split']('|');\n    var bBstlK = 0x0;\n    while (!![]) {\n        switch (CKDIpv[bBstlK++]) {\n        case '0':\n            if (Math['floor'](x_u * tax) == n) {\n                console['log'](x_u);\n                return;\n            }\n            continue;\n        case '1':\n            var x_d = x - 0x1;\n            continue;\n        case '2':\n            if (OKuHuS['PlQOi'](Math['floor'](OKuHuS['VkTDB'](x_d, tax)), n)) {\n                console['log'](x_d);\n                return;\n            }\n            continue;\n        case '3':\n            if (OKuHuS['gKzKt'](Math['floor'](x_d * tax), n)) {\n                console['log'](x_d);\n                return;\n            }\n            continue;\n        case '4':\n            if (OKuHuS['MyrSa'](n, reverse_n)) {\n                console['log'](x);\n                return;\n            }\n            continue;\n        case '5':\n            var input = input['split']('\\x0a');\n            continue;\n        case '6':\n            console['log'](invalid);\n            continue;\n        case '7':\n            var tax = 1.08;\n            continue;\n        case '8':\n            var x_u = OKuHuS['BRmuP'](x, 0x1);\n            continue;\n        case '9':\n            var reverse_n = Math['floor'](OKuHuS['VkTDB'](x, tax));\n            continue;\n        case '10':\n            var x_d = OKuHuS['HBxIv'](x, 0x2);\n            continue;\n        case '11':\n            var x_u2 = x + 0x2;\n            continue;\n        case '12':\n            var x = Math['floor'](n / tax);\n            continue;\n        case '13':\n            var invalid = ':(';\n            continue;\n        case '14':\n            if (Math['floor'](OKuHuS['WAJAI'](x_u2, tax)) == n) {\n                console['log'](x_u2);\n                return;\n            }\n            continue;\n        case '15':\n            var n = OKuHuS['bZqwP'](parseInt, input[0x0], 0xa);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["432", "400"], ["1079", ":("], ["1001", "927"]], "original": "function Main(input) {\n    var tax = 1.08;\n    var invalid = \":(\";\n\n\tvar input = input.split(\"\\n\");\n\tvar n = parseInt(input[0], 10);\n\n    var x = Math.floor( n / tax);\n\n    var reverse_n = Math.floor(x * tax);\n\n    if (n == reverse_n) {\n        console.log(x);\n        return;\n    } \n\n    var x_u = x + 1;\n    if ((Math.floor((x_u) * tax)) == n) {\n        console.log(x_u);\n        return;\n    }\n\n    var x_u2 = x + 2;\n    if ((Math.floor((x_u2) * tax)) == n) {\n        console.log(x_u2);\n        return;\n    }\n\n    var x_d = x - 1;\n    if ((Math.floor((x_d) * tax)) == n) {\n        console.log(x_d);\n        return;\n    }\n\n    var x_d = x - 2;\n    if ((Math.floor((x_d) * tax)) == n) {\n        console.log(x_d);\n        return;\n    }\n\n    console.log(invalid);\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03018_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const bReYWM = {\n        'mIZVa': 'ABC',\n        'pIttN': function (x, y) {\n            return x - y;\n        }\n    };\n    let s = input;\n    let tmp = s['split'](bReYWM['mIZVa']);\n    let result = tmp['length'] - 0x1;\n    while (tmp['length'] !== 0x1) {\n        s = tmp['join']('BCA');\n        tmp = s['split'](bReYWM['mIZVa']);\n        result += bReYWM['pIttN'](tmp['length'], 0x1);\n    }\n    console['log'](result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["ABCABC", "3"], ["C", "0"], ["ABCACCBABCBCAABCB", "6"]], "original": "'use strict'\n\nfunction Main(input) {\n  let s = input;\n  let tmp = s.split('ABC');\n  let result = tmp.length - 1;\n  while(tmp.length !== 1){\n    s = tmp.join('BCA')\n    tmp = s.split('ABC');\n    result += tmp.length - 1;\n  }\n  console.log(result)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03047_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var vdhCHt = {\n        'PVqkv': '2|4|1|3|0|5|6',\n        'NubUC': function (x, y) {\n            return x + y;\n        },\n        'tYjwb': function (x, y) {\n            return x - y;\n        }\n    };\n    var RhyGsI = vdhCHt['PVqkv']['split']('|');\n    var uhvOvI = 0x0;\n    while (!![]) {\n        switch (RhyGsI[uhvOvI++]) {\n        case '0':\n            var kekka = 0x0;\n            continue;\n        case '1':\n            var n = h[0x0];\n            continue;\n        case '2':\n            var str = input['trim']();\n            continue;\n        case '3':\n            var k = h[0x1];\n            continue;\n        case '4':\n            var h = str['split']('\\x20');\n            continue;\n        case '5':\n            var kekka = vdhCHt['NubUC'](vdhCHt['tYjwb'](n, k), 0x1);\n            continue;\n        case '6':\n            console['log'](kekka);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2", "2"], ["13 3", "11"]], "original": "function Main(input){\n  \n  var str = input.trim();\n    var h = str.split(\" \");\n  var n = h[0];\n  var k = h[1];\n\n  var kekka = 0;\n  \n  var kekka = n-k+1;\n  \n  console.log(kekka);\n \n}//function end\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03289_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var Ufkjjj = {\n        'kiBNs': '3|5|2|4|0|6|8|1|7',\n        'jqZMB': function (x, y) {\n            return x == y;\n        },\n        'VNgDM': function (x, y) {\n            return x - y;\n        },\n        'msLOj': function (x, y) {\n            return x == y;\n        }\n    };\n    var GWTQKG = Ufkjjj['kiBNs']['split']('|');\n    var ENgzfF = 0x0;\n    while (!![]) {\n        switch (GWTQKG[ENgzfF++]) {\n        case '0':\n            var temp = 0x0;\n            continue;\n        case '1':\n            if (Ufkjjj['jqZMB'](temp, 0x1)) {\n                ans++;\n            }\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            input = input['trim']();\n            continue;\n        case '4':\n            if (arr[0x0] == 'A') {\n                ans++;\n            }\n            continue;\n        case '5':\n            var arr = input['split']('')['map'](n => n);\n            continue;\n        case '6':\n            var memo = 0x0;\n            continue;\n        case '7':\n            if (ans == 0x2) {\n                arr['splice'](0x0, 0x1);\n                arr['splice'](Ufkjjj['VNgDM'](memo, 0x1), 0x1);\n                if (/A-Z/['test'](arr) == ![]) {\n                    ans++;\n                }\n                if (Ufkjjj['msLOj'](ans, 0x3)) {\n                    console['log']('AC');\n                } else {\n                    console['log']('WA');\n                }\n            } else {\n                console['log']('WA');\n            }\n            continue;\n        case '8':\n            for (var i = 0x2; i < Ufkjjj['VNgDM'](arr['length'], 0x1); i++) {\n                if (Ufkjjj['jqZMB'](arr[i], 'C')) {\n                    temp++;\n                    memo = i;\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["AtCoder", "AC"], ["ACoder", "WA"], ["AcycliC", "WA"], ["AtCoCo", "WA"], ["Atcoder", "WA"]], "original": "function main(input) {\n  input=input.trim();\n  var arr = input.split(\"\").map((n) => (n));\n  var ans = 0\n\n  if(arr[0]==\"A\"){\n    ans++\n  }\n\n  var temp=0;\n  var memo=0;\n  for(var i=2; i<arr.length-1; i++){\n    if(arr[i]==\"C\"){\n      temp++;\n      memo=i\n    }\n  }\n  if(temp==1){\n    ans++\n  }\n\n  if(ans==2){\n    arr.splice(0,1);\n    arr.splice(memo-1,1);\n    if(/A-Z/.test(arr)==false){\n      ans++\n    }\n    if(ans==3){\n      console.log(\"AC\");\n    }else{\n      console.log(\"WA\");\n    }\n  }else{\n    console.log(\"WA\");\n  }\n \n\n  \n\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03351_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var rHqRSz = {\n        'NmRwy': function (callee, param1) {\n            return callee(param1);\n        },\n        'AzXBB': function (x, y) {\n            return x <= y;\n        },\n        'isKQB': function (x, y) {\n            return x - y;\n        },\n        'qHoYK': 'Yes',\n        'uSyAV': function (x, y) {\n            return x <= y;\n        },\n        'FNheU': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split'](/\\s/);\n    input['forEach'](function (e, i, a) {\n        a[i] = rHqRSz['NmRwy'](Number, a[i]);\n    });\n    var ans = 'No';\n    if (rHqRSz['AzXBB'](Math['abs'](rHqRSz['isKQB'](input[0x0], input[0x2])), input[0x3])) {\n        ans = rHqRSz['qHoYK'];\n    }\n    if (rHqRSz['uSyAV'](Math['abs'](input[0x0] - input[0x1]), input[0x3]) && rHqRSz['FNheU'](Math['abs'](input[0x1] - input[0x2]), input[0x3])) {\n        ans = rHqRSz['qHoYK'];\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 7 9 3", "Yes"], ["100 10 1 2", "No"], ["10 10 10 1", "Yes"], ["1 100 2 10", "Yes"]], "original": "function Main(input){\n\tinput=input.split(/\\s/);\n\tinput.forEach(function(e,i,a){a[i]=Number(a[i]);});\n\t\n\tvar ans=\"No\";\n\tif(Math.abs(input[0]-input[2])<=input[3]){ans=\"Yes\";}\n\tif(Math.abs(input[0]-input[1])<=input[3]&&Math.abs(input[1]-input[2])<=input[3]){ans=\"Yes\";}\n\t\n\tconsole.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03371_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var CaeoEh = {\n        'oWPeC': function (callee, param1) {\n            return callee(param1);\n        },\n        'OUHiW': function (callee, param1) {\n            return callee(param1);\n        },\n        'NTwBf': function (x, y) {\n            return x / y;\n        },\n        'bzNOO': function (x, y) {\n            return x + y;\n        },\n        'IUUPO': function (x, y) {\n            return x >= y;\n        },\n        'uATob': function (x, y) {\n            return x <= y;\n        },\n        'WGiCe': function (x, y) {\n            return x + y;\n        },\n        'iKfXa': function (x, y) {\n            return x * y;\n        },\n        'XPHCE': function (x, y) {\n            return x * y;\n        },\n        'mFPbv': function (x, y) {\n            return x - y;\n        },\n        'uQEWy': function (x, y) {\n            return x + y;\n        },\n        'ghJym': function (x, y) {\n            return x / y;\n        },\n        'COoBC': function (x, y) {\n            return x + y;\n        },\n        'ebHhR': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var fvuCSR = '2|0|5|7|3|6|1|4|8'['split']('|');\n    var jZJkMh = 0x0;\n    while (!![]) {\n        switch (fvuCSR[jZJkMh++]) {\n        case '0':\n            A = CaeoEh['oWPeC'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '1':\n            var ans = 0x0;\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            X = CaeoEh['OUHiW'](parseInt, input[0x0]['split']('\\x20')[0x3]);\n            continue;\n        case '4':\n            if (C <= CaeoEh['NTwBf'](CaeoEh['bzNOO'](A, B), 0x2) && CaeoEh['IUUPO'](C, Math['min'](A, B))) {\n                if (CaeoEh['uATob'](X, Y)) {\n                    ans = CaeoEh['WGiCe'](CaeoEh['iKfXa'](CaeoEh['XPHCE'](C, X), 0x2), CaeoEh['iKfXa'](B, CaeoEh['mFPbv'](Y, X)));\n                } else {\n                    ans = CaeoEh['uQEWy'](C * Y * 0x2, CaeoEh['XPHCE'](A, CaeoEh['mFPbv'](X, Y)));\n                }\n            } else if (CaeoEh['uATob'](C, CaeoEh['ghJym'](CaeoEh['uQEWy'](A, B), 0x2)) && C < Math['min'](A, B)) {\n                ans = CaeoEh['iKfXa'](CaeoEh['XPHCE'](C, Math['max'](X, Y)), 0x2);\n            } else {\n                ans = CaeoEh['COoBC'](CaeoEh['XPHCE'](X, A), CaeoEh['XPHCE'](Y, B));\n            }\n            continue;\n        case '5':\n            B = CaeoEh['oWPeC'](parseInt, input[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '6':\n            Y = CaeoEh['ebHhR'](parseInt, input[0x0]['split']('\\x20')[0x4]);\n            continue;\n        case '7':\n            C = CaeoEh['OUHiW'](parseInt, input[0x0]['split']('\\x20')[0x2]);\n            continue;\n        case '8':\n            console['log']('%s', ans);\n            continue;\n        }\n        break;\n    }\n}\nfunction debug() {\n    var YZHOeR = { 'VSicn': 'input' };\n    var input = document['getElementById'](YZHOeR['VSicn'])['value'];\n    Main(input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1500 2000 1600 3 2", "7900"], ["1500 2000 1900 3 2", "8500"], ["1500 2000 500 90000 100000", "100000000"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  A = parseInt(input[0].split(\" \")[0]);\n  B = parseInt(input[0].split(\" \")[1]);\n  C = parseInt(input[0].split(\" \")[2]);\n  X = parseInt(input[0].split(\" \")[3]);\n  Y = parseInt(input[0].split(\" \")[4]);\n  var ans =0;\n  if(C<=(A+B)/2&&C>=Math.min(A,B)){\n    if(X<=Y){\n    ans=C*X*2+B*(Y-X);\n    }else{\n      ans=C*Y*2+A*(X-Y);\n    }\n  }else if(C<=(A+B)/2&&C<Math.min(A,B)){\n    ans=C*Math.max(X,Y)*2;\n  }else{\n    ans=X*A+Y*B;\n\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03415_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(arg) {\n    const klHlKY = {\n        'FVFZa': function (x, y) {\n            return x + y;\n        }\n    };\n    const letters = arg['split']('\\x0a')['map'](n => n['split'](''));\n    console['log'](klHlKY['FVFZa'](klHlKY['FVFZa'](letters[0x0][0x0], letters[0x1][0x1]), letters[0x2][0x2]));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["ant\nobe\nrec", "abc"], ["edu\ncat\nion", "ean"]], "original": "\"use strict\";\n\nfunction main(arg) {\n    const letters = arg.split(\"\\n\").map(n=>n.split(\"\"));\n    console.log(letters[0][0] + letters[1][1] + letters[2][2]);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03523_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['trim']();\nlet ans = 'YES';\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'K') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'I') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'H') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'B') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'R') {\n    input = input['slice'](0x1);\n}\nif (input[0x0] == 'A') {\n    input = input['slice'](0x1);\n}\ninput == '' ? ans = 'YES' : ans = 'NO';\nconsole['log'](ans);", "test_cases": [["KIHBR", "YES"], ["AKIBAHARA", "NO"], ["AAKIAHBAARA", "NO"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\ninput = input.trim();\nlet ans = \"YES\";\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"K\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"I\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"H\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"B\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"R\"){\n  input = input.slice(1);\n}\n\nif(input[0] == \"A\"){\n  input = input.slice(1);\n}\n\ninput == \"\" ? ans = \"YES\" : ans = \"NO\";\n\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03543_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var hyVpLj = {\n        'WDQWS': function (x, y) {\n            return x == y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var n = input[0x0];\n    var s = 'No';\n    if (n[0x1] == n[0x2]) {\n        if (n[0x0] == n[0x1] || hyVpLj['WDQWS'](n[0x2], n[0x3]))\n            s = 'Yes';\n    }\n    console['log']('%s', s);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1118", "Yes"], ["7777", "Yes"], ["1234", "No"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar n = input[0];\n\tvar s = \"No\";\n\tif(n[1]==n[2]){\n\t    if(n[0]==n[1]||n[2]==n[3])s = \"Yes\";\n\t}\n\tconsole.log('%s',s);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03555_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var YywBRe = {\n        'BzHdB': '0|3|4|2|1',\n        'yZWwd': function (x, y) {\n            return x == y;\n        },\n        'DPYHd': 'YES'\n    };\n    var QMeCRL = YywBRe['BzHdB']['split']('|');\n    var uBFePd = 0x0;\n    while (!![]) {\n        switch (QMeCRL[uBFePd++]) {\n        case '0':\n            input = input['trim']();\n            continue;\n        case '1':\n            if (A[0x0] == B[0x2] && YywBRe['yZWwd'](A[0x1], B[0x1]) && YywBRe['yZWwd'](A[0x2], B[0x0]))\n                console['log'](YywBRe['DPYHd']);\n            else\n                console['log']('NO');\n            continue;\n        case '2':\n            var B = input[0x1]['split']('');\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            var A = input[0x0]['split']('');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["pot\ntop", "YES"], ["tab\nbet", "NO"], ["eye\neel", "NO"]], "original": "function Main(input) {\n  input = input.trim()\n  input = input.split(\"\\n\");\n  var A = input[0].split(\"\");\n  var B = input[1].split(\"\");\n  if(A[0]==B[2]&&A[1]==B[1]&&A[2]==B[0]) console.log(\"YES\")\n  else console.log(\"NO\")\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03556_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    input = input['split']('\\x0a');\n    var n = parseInt(input[0x0]);\n    var ans = Math['pow'](Math['floor'](Math['sqrt'](n)), 0x2);\n    console['log']('%s', ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "9"], ["81", "81"], ["271828182", "271821169"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  var ans =Math.pow(Math.floor(Math.sqrt(n)),2);\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03644_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var TYtNxb = {\n        'UXUUs': function (x, y) {\n            return x <= y;\n        },\n        'ONHRy': function (x, y) {\n            return x === y;\n        },\n        'bgXfB': function (x, y) {\n            return x % y;\n        },\n        'FriZW': function (x, y) {\n            return x / y;\n        },\n        'ceBen': function (x, y) {\n            return x < y;\n        }\n    };\n    const N = input;\n    var ans = 0x1;\n    var cnt = 0x0;\n    var maxCnt = 0x0;\n    for (var i = 0x1; TYtNxb['UXUUs'](i, N); i++) {\n        cnt = 0x0;\n        var tmp = i;\n        while (!![]) {\n            if (TYtNxb['ONHRy'](TYtNxb['bgXfB'](tmp, 0x2), 0x0)) {\n                cnt = cnt + 0x1;\n                tmp = TYtNxb['FriZW'](tmp, 0x2);\n            } else {\n                break;\n            }\n        }\n        if (TYtNxb['ceBen'](maxCnt, cnt)) {\n            maxCnt = cnt;\n            ans = i;\n        }\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7", "4"], ["32", "32"], ["1", "1"], ["100", "64"]], "original": "function main (input) {\n    const N = input;\n    var ans = 1;\n    var cnt = 0;\n    var maxCnt = 0;\n\n    for (var i = 1;i <= N;i++){\n        cnt = 0;\n        var tmp = i;\n        while (true) {\n            if (tmp%2 === 0) {\n                cnt = cnt + 1;\n                tmp = tmp/2;\n            } else {\n                break;\n            }\n        }\n        if (maxCnt < cnt) {\n            maxCnt = cnt;\n            ans = i;\n        }\n    }\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03671_1", "type": "JavaScript", "obfuscated": "let [a, b, c] = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x20')['map'](Number);\nconsole['log'](a + b + c - Math['max'](...[\n    a,\n    b,\n    c\n]));", "test_cases": [["700 600 780", "1300"], ["10000 10000 10000", "20000"]], "original": "let [a, b, c] = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\" \").map(Number);\nconsole.log(a + b + c - Math.max(...[a, b, c]));", "language": "JavaScript"}
{"filename": "p03705_1", "type": "JavaScript", "obfuscated": "main = function (input) {\n    var oTVBUZ = {\n        'ZTzBa': '3|1|4|2|0|5',\n        'CSOPt': function (x, y) {\n            return x + y;\n        },\n        'QisHj': function (x, y) {\n            return x * y;\n        },\n        'Tmsao': function (x, y) {\n            return x - y;\n        },\n        'ZVRYI': function (callee, param1) {\n            return callee(param1);\n        },\n        'LazUB': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var gikVUH = oTVBUZ['ZTzBa']['split']('|');\n    var NtvdHu = 0x0;\n    while (!![]) {\n        switch (gikVUH[NtvdHu++]) {\n        case '0':\n            var ans = oTVBUZ['CSOPt'](oTVBUZ['QisHj'](n - 0x2, oTVBUZ['Tmsao'](b, a)), 0x1);\n            continue;\n        case '1':\n            var n = oTVBUZ['ZVRYI'](parseInt, data[0x0]);\n            continue;\n        case '2':\n            var b = parseInt(data[0x2]);\n            continue;\n        case '3':\n            var data = input['split']('\\x20');\n            continue;\n        case '4':\n            var a = oTVBUZ['LazUB'](parseInt, data[0x1]);\n            continue;\n        case '5':\n            console['log'](Math['max'](ans, 0x0));\n            continue;\n        }\n        break;\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 4 6", "5"], ["5 4 3", "0"], ["1 7 10", "0"], ["1 3 3", "1"]], "original": "main = function(input) {\n    var data = input.split(' ');\n    var n = parseInt(data[0]);\n    var a = parseInt(data[1]);\n    var b = parseInt(data[2]);\n    \n    var ans = (n - 2) * (b - a) + 1;\n    \n    \n    console.log(Math.max(ans, 0));\n};\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03711_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const fauDcp = {\n        'etffK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'XYCxo': 'Yes'\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const x = parseInt(args[0x0][0x0], 0xa);\n    const y = fauDcp['etffK'](parseInt, args[0x0][0x1], 0xa);\n    const group1 = [\n        0x1,\n        0x3,\n        0x5,\n        0x7,\n        0x8,\n        0xa,\n        0xc\n    ];\n    const group2 = [\n        0x4,\n        0x6,\n        0x9,\n        0xb\n    ];\n    if (group1['includes'](x) && group1['includes'](y))\n        console['log']('Yes');\n    else if (group2['includes'](x) && group2['includes'](y))\n        console['log'](fauDcp['XYCxo']);\n    else\n        console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 3", "Yes"], ["2 4", "No"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst x = parseInt(args[0][0], 10)\n\tconst y = parseInt(args[0][1], 10)\n\tconst group1 = [1, 3, 5, 7, 8, 10, 12]\n\tconst group2 = [4, 6, 9, 11]\n\n\tif (group1.includes(x) && group1.includes(y)) console.log('Yes')\n\telse if (group2.includes(x) && group2.includes(y)) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03844_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('ascii');\nvar input_stdin = '';\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess['stdin']['on']('data', function (data) {\n    input_stdin += data;\n});\nprocess['on']('SIGINT', function () {\n    input_stdin_array = input_stdin['split']('\\x0a');\n    main();\n    process['exit']();\n});\nprocess['stdin']['on']('end', function () {\n    var vzslKP = {\n        'dkIbv': function (callee) {\n            return callee();\n        }\n    };\n    input_stdin_array = input_stdin['split']('\\x0a');\n    vzslKP['dkIbv'](main);\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var NZKLbO = {\n        'cGtTv': '2|3|0|5|4|1|6',\n        'XIngz': function (x, y) {\n            return x == y;\n        },\n        'fVLrU': function (callee) {\n            return callee();\n        },\n        'zKWpm': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var vWXuZF = NZKLbO['cGtTv']['split']('|');\n    var zhZOZG = 0x0;\n    while (!![]) {\n        switch (vWXuZF[zhZOZG++]) {\n        case '0':\n            var op = s[0x1];\n            continue;\n        case '1':\n            if (NZKLbO['XIngz'](op, '+')) {\n                c = a + b;\n            } else {\n                c = a - b;\n            }\n            continue;\n        case '2':\n            var s = NZKLbO['fVLrU'](readLine)['split']('\\x20');\n            continue;\n        case '3':\n            var a = NZKLbO['zKWpm'](parseInt, s[0x0]);\n            continue;\n        case '4':\n            var c;\n            continue;\n        case '5':\n            var b = NZKLbO['zKWpm'](parseInt, s[0x2]);\n            continue;\n        case '6':\n            console['log'](c);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["1 + 2", "3"], ["5 - 7", "-2"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.on('SIGINT', function(){\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();\n    process.exit();\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\nfunction main() {\n\tvar s = readLine().split(\" \");\n\tvar a = parseInt(s[0]);\n\tvar op = s[1];\n\tvar b = parseInt(s[2]);\n\tvar c;\n\t\n\tif (op == \"+\"){ c = a+b;}\n\telse {c = a-b;}\n\t\n\tconsole.log(c);\n}\n", "language": "JavaScript"}
{"filename": "p03994_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var LetJCm = {\n        'kDGzG': function (x, y) {\n            return x - y;\n        },\n        'wXqwQ': function (x, y) {\n            return x % y;\n        },\n        'IclfW': function (x, y) {\n            return x <= y;\n        },\n        'omOkk': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var s, K, ref;\n    ref = input['split']('\\x0a'), s = ref[0x0], K = LetJCm['omOkk'](parseInt, ref[0x1]);\n    console['log'](Array['from'](s)['map']((v, i, arr) => {\n        var code = v['charCodeAt']();\n        if (i === LetJCm['kDGzG'](arr['length'], 0x1)) {\n            code += LetJCm['wXqwQ'](K, 0x1a);\n            code -= code > 0x7a ? 0x1a : 0x0;\n            return String['fromCharCode'](code);\n        } else {\n            if (v === 'a')\n                return v;\n            return LetJCm['IclfW'](0x7b - code, K) ? (K -= LetJCm['kDGzG'](0x7b, code), 'a') : v;\n        }\n    })['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["xyz\n4", "aya"], ["a\n25", "z"], ["codefestival\n100", "aaaafeaaivap"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var s, K, ref;\n  ref = input.split(\"\\n\"), s = ref[0], K = parseInt(ref[1]);\n  console.log(Array.from(s).map((v, i, arr)=> {\n    var code = v.charCodeAt();\n    if(i === arr.length - 1) {\n      code += K%26;\n      code -= code >122 ? 26 : 0;\n      return String.fromCharCode(code);\n    } else {\n      if(v === \"a\") return v;\n      return 123 - code <= K ? ((K -= 123 - code), \"a\") : v;\n    }\n  }).join(\"\"));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04048_1", "type": "JavaScript", "obfuscated": "function Main(data) {\n    var FYqsfo = {\n        'WsNex': '4|3|2|1|0',\n        'tejQW': function (x, y) {\n            return x + y;\n        },\n        'RJyZx': function (x, y) {\n            return x - y;\n        },\n        'rAeoH': function (x, y) {\n            return x * y;\n        },\n        'RmpUt': function (x, y) {\n            return x - y;\n        },\n        'bJBVN': function (x, y) {\n            return x - y;\n        },\n        'bgpDx': function (x, y) {\n            return x - y;\n        }\n    };\n    var uirlBm = FYqsfo['WsNex']['split']('|');\n    var Pacrum = 0x0;\n    while (!![]) {\n        switch (uirlBm[Pacrum++]) {\n        case '0':\n            console['log'](a);\n            continue;\n        case '1':\n            var a = FYqsfo['tejQW'](data[0x1], FYqsfo['RJyZx'](data[0x0], data[0x1])) + FYqsfo['rAeoH'](data[0x0] - FYqsfo['RmpUt'](data[0x0], data[0x1]), 0x2) + FYqsfo['rAeoH'](FYqsfo['RmpUt'](FYqsfo['bJBVN'](data[0x0], data[0x1]), FYqsfo['bgpDx'](data[0x0], FYqsfo['bJBVN'](data[0x0], data[0x1]))), 0x3);\n            continue;\n        case '2':\n            data[0x1] = Number(data[0x1]);\n            continue;\n        case '3':\n            data[0x0] = Number(data[0x0]);\n            continue;\n        case '4':\n            data = data['split']('\\x20');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2", "12"]], "original": "function Main (data) {\n  data = data.split(\" \");\n  data[0] = Number(data[0]);\n  data[1] = Number(data[1]);\n  var a = data[1] + (data[0] - data[1])\n  + ((data[0] - (data[0] - data[1])) * 2)\n  + (data[0] - data[1] - (data[0] - (data[0] - data[1]))) * 3\n  console.log(a);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02645_1", "type": "JavaScript", "obfuscated": "function main(lines) {\n    const input = lines['split']('\\x20');\n    console['log'](input['join']()['slice'](0x0, 0x3));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["takahashi", "tak"], ["naohiro", "nao"]], "original": "function main(lines) {\n  const input = lines.split(' ')\n  console.log(input.join().slice(0,3))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02700_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const TSNvPR = {\n        'nGmfp': function (callee, param1) {\n            return callee(param1);\n        },\n        'Rhwgn': function (x, y) {\n            return x === y;\n        },\n        'rmcYa': function (x, y) {\n            return x % y;\n        },\n        'HeBOY': 'Yes',\n        'gXjvX': function (x, y) {\n            return x - y;\n        },\n        'nBRTf': function (x, y) {\n            return x <= y;\n        }\n    };\n    const array = input['split']('\\x20');\n    let takahashi = TSNvPR['nGmfp'](Number, array[0x0]);\n    let aoki = Number(array[0x2]);\n    let count = 0x0;\n    let bool = !![];\n    while (bool) {\n        if (TSNvPR['Rhwgn'](TSNvPR['rmcYa'](count, 0x2), 0x0)) {\n            aoki = aoki - Number(array[0x1]);\n            if (aoki <= 0x0) {\n                console['log'](TSNvPR['HeBOY']);\n                bool = ![];\n            }\n        } else {\n            takahashi = TSNvPR['gXjvX'](takahashi, TSNvPR['nGmfp'](Number, array[0x3]));\n            if (TSNvPR['nBRTf'](takahashi, 0x0)) {\n                console['log']('No');\n                bool = ![];\n            }\n        }\n        count++;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 9 10 10", "No"], ["46 4 40 5", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  const array = input.split(' ');\n  let takahashi = Number(array[0]);\n  let aoki = Number(array[2]);\n  \n  let count = 0;\n  let bool = true;\n  while(bool) {\n    if(count%2 === 0){\n      aoki = aoki - Number(array[1]);\n      if(aoki <= 0){\n        console.log('Yes');\n        bool = false;\n      }\n    } else {\n      takahashi = takahashi - Number(array[3]);\n      if(takahashi <= 0){\n        console.log('No');\n        bool = false;\n      }\n    }\n    count++;\n  }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02706_1", "type": "JavaScript", "obfuscated": "const main = inputs => {\n    var MNDIwj = {\n        'ZcXoj': function (x, y) {\n            return x - y;\n        },\n        'jMrqM': function (x, y) {\n            return x < y;\n        },\n        'toTae': function (x, y) {\n            return x + y;\n        },\n        'HIhwk': function (callee, param1) {\n            return callee(param1);\n        },\n        'kRzJG': function (x, y) {\n            return x < y;\n        }\n    };\n    var array = inputs[0x0]['split']('\\x20');\n    var array2 = inputs[0x1]['split']('\\x20');\n    var N = MNDIwj['ZcXoj'](array[0x0], 0x0);\n    var M = array[0x1] - 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; MNDIwj['jMrqM'](i, M); i++) {\n        sum = MNDIwj['toTae'](sum, MNDIwj['HIhwk'](Number, array2[i]));\n    }\n    console['log'](MNDIwj['kRzJG'](MNDIwj['ZcXoj'](N, sum), 0x0) ? -0x1 : MNDIwj['ZcXoj'](N, sum));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8')['trim']()['split']('\\x0a'));", "test_cases": [["41 2\n5 6", "30"], ["10 2\n5 6", "-1"], ["11 2\n5 6", "0"], ["314 15\n9 26 5 35 8 9 79 3 23 8 46 2 6 43 3", "9"]], "original": "const main = (inputs) => {\n  var array = inputs[0].split(\" \");\n  var array2 = inputs[1].split(\" \");\n  var N = array[0] - 0;\n  var M = array[1] - 0;\n  var sum = 0;\n\n  for (var i = 0; i < M; i++) {\n    sum = sum + Number(array2[i]);\n  }\n\n  console.log(N - sum < 0 ? -1 : N - sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02729_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var aKbXmX = {\n        'kwJhK': function (x, y) {\n            return x == y;\n        },\n        'faFfy': function (x, y) {\n            return x + y;\n        },\n        'UDurs': function (x, y) {\n            return x / y;\n        },\n        'GdYXe': function (x, y) {\n            return x - y;\n        },\n        'OsZVT': function (x, y) {\n            return x * y;\n        }\n    };\n    var a = input[0x0]['split']('\\x20')['map'](v => v - 0x0);\n    if (aKbXmX['kwJhK'](a[0x0] + a[0x1], 0x0))\n        console['log'](0x0);\n    else\n        console['log'](~~aKbXmX['faFfy'](aKbXmX['UDurs'](a[0x0] * aKbXmX['GdYXe'](a[0x0], 0x1), 0x2), aKbXmX['UDurs'](aKbXmX['OsZVT'](a[0x1], aKbXmX['GdYXe'](a[0x1], 0x1)), 0x2)));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["2 1", "1"], ["4 3", "9"], ["1 1", "0"], ["13 3", "81"], ["0 3", "3"]], "original": "function Main(input) {\n    var a = input[0].split(\" \").map(v=>v-0);\n    if(a[0]+a[1] == 0) console.log(0);\n    else console.log(~~(a[0]*(a[0]-1)/2+(a[1]*(a[1]-1)/2)));\n}\n\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02741_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var BphxGR = {\n        'zrzbR': function (callee, param1) {\n            return callee(param1);\n        },\n        'DIoZb': function (x, y) {\n            return x <= y;\n        },\n        'EjixM': function (x, y) {\n            return x <= y;\n        },\n        'ORCHF': function (x, y) {\n            return x - y;\n        }\n    };\n    var list = [\n        0x1,\n        0x1,\n        0x1,\n        0x2,\n        0x1,\n        0x2,\n        0x1,\n        0x5,\n        0x2,\n        0x2,\n        0x1,\n        0x5,\n        0x1,\n        0x2,\n        0x1,\n        0xe,\n        0x1,\n        0x5,\n        0x1,\n        0x5,\n        0x2,\n        0x2,\n        0x1,\n        0xf,\n        0x2,\n        0x2,\n        0x5,\n        0x4,\n        0x1,\n        0x4,\n        0x1,\n        0x33\n    ];\n    input = BphxGR['zrzbR'](parseInt, input);\n    if (BphxGR['DIoZb'](0x1, input) && BphxGR['EjixM'](input, 0x20)) {\n        console['log'](list[BphxGR['ORCHF'](input, 0x1)]);\n    } else {\n        console['log'](0x0);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6", "2"], ["27", "5"]], "original": "function Main(input) {\nvar list = [1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51];\n  input = parseInt(input);\n  if(1 <= input && input <= 32)\n  {\n      console.log(list[input - 1]);\n  } else {\n  console.log(0);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02771_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    var fZkXmY = {\n        'LFxSa': function (callee, param1) {\n            return callee(param1);\n        },\n        'RhMLk': function (x, y) {\n            return x === y;\n        },\n        'UQMhc': function (x, y) {\n            return x !== y;\n        },\n        'utHlL': function (x, y) {\n            return x === y;\n        }\n    };\n    const tmp = input['split']('\\x20');\n    var a = parseInt(tmp[0x0]);\n    var b = fZkXmY['LFxSa'](parseInt, tmp[0x1]);\n    var c = parseInt(tmp[0x2]);\n    if (fZkXmY['RhMLk'](a, b) && fZkXmY['UQMhc'](b, c) || fZkXmY['RhMLk'](b, c) && fZkXmY['UQMhc'](c, a) || fZkXmY['utHlL'](c, a) && b !== c) {\n        console['log']('Yes');\n    } else {\n        console['log']('No');\n    }\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 7 5", "Yes"], ["4 4 4", "No"], ["4 9 6", "No"], ["3 3 4", "Yes"]], "original": "const Main = (input) => {\n  const tmp = input.split(' ')\n  var a = parseInt(tmp[0])\n  var b = parseInt(tmp[1])\n  var c = parseInt(tmp[2])\n  if (((a === b) && (b !== c)) || ((b === c) && (c !== a)) || ((c === a) && (b !== c))) {\n    console.log('Yes')\n  } else {\n    console.log('No')\n  }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02786_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nH = inp['shift']() * 0x1;\nc = 0x1;\nh = 0x2;\nwhile (H >= h) {\n    h *= 0x2;\n    c++;\n}\nconsole['log'](Math['pow'](0x2, c) - 0x1);", "test_cases": [["2", "3"], ["4", "7"], ["1000000000000", "1099511627775"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nH = inp.shift() * 1\nc=1\nh=2\nwhile(H>=h) {\n    h *= 2\n    c++\n}\nconsole.log(Math.pow(2,c)-1)\n\n", "language": "JavaScript"}
{"filename": "p02880_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const fDtypi = {\n        'qRCXn': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'YkcUs': function (x, y) {\n            return x > y;\n        },\n        'didoJ': function (x, y) {\n            return x / y;\n        },\n        'EVEks': function (x, y) {\n            return x == y;\n        },\n        'JeAgM': function (x, y) {\n            return x < y;\n        },\n        'PhONx': function (x, y) {\n            return x / y;\n        },\n        'eIhvL': function (x, y) {\n            return x < y;\n        },\n        'CjqsX': function (x, y) {\n            return x / y;\n        },\n        'UgIsP': function (x, y) {\n            return x % y;\n        },\n        'LIyrD': function (x, y) {\n            return x < y;\n        },\n        'DDyum': function (x, y) {\n            return x % y;\n        },\n        'yYHvc': function (x, y) {\n            return x / y;\n        },\n        'KTsIK': function (x, y) {\n            return x < y;\n        },\n        'KgvCu': 'Yes'\n    };\n    input = input['split']('\\x20');\n    const num = fDtypi['qRCXn'](parseInt, input[0x0], 0xa);\n    if (fDtypi['YkcUs'](num, 0x51)) {\n        console['log']('No');\n        return;\n    }\n    if (num % 0x2 == 0x0 && fDtypi['didoJ'](num, 0x2) < 0xa || fDtypi['EVEks'](num % 0x3, 0x0) && fDtypi['JeAgM'](num / 0x3, 0xa) || num % 0x4 == 0x0 && fDtypi['JeAgM'](fDtypi['PhONx'](num, 0x4), 0xa) || fDtypi['EVEks'](num % 0x5, 0x0) && fDtypi['eIhvL'](fDtypi['CjqsX'](num, 0x5), 0xa) || fDtypi['EVEks'](fDtypi['UgIsP'](num, 0x6), 0x0) && fDtypi['eIhvL'](fDtypi['CjqsX'](num, 0x6), 0xa) || fDtypi['EVEks'](fDtypi['UgIsP'](num, 0x7), 0x0) && fDtypi['LIyrD'](num / 0x7, 0xa) || fDtypi['EVEks'](fDtypi['DDyum'](num, 0x8), 0x0) && fDtypi['eIhvL'](fDtypi['yYHvc'](num, 0x8), 0xa) || fDtypi['UgIsP'](num, 0x9) == 0x0 && fDtypi['KTsIK'](fDtypi['yYHvc'](num, 0x9), 0xa)) {\n        console['log'](fDtypi['KgvCu']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "Yes"], ["50", "No"], ["81", "Yes"]], "original": "function Main(input) {\n\t\tinput = input.split(\" \");\n\t\tconst num = parseInt(input[0], 10);\n\t\tif (num > 81) {\n\t\t\t\tconsole.log('No');\n\t\t\t\treturn;\n\t\t}\n\nif((num%2==0 && num/2<10) ||(num%3==0 && num/3<10) ||(num%4==0 && num/4<10) ||(num%5==0 && num/5<10) ||(num%6==0 && num/6<10) ||(num%7==0 && num/7<10) ||(num%8==0 && num/8<10) ||(num%9==0 && num/9<10)){\nconsole.log('Yes');\n}else {\nconsole.log('No');\n}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02954_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var yPSwxc = {\n        'QQaSC': function (x, y) {\n            return x + y;\n        },\n        'qcWue': function (x, y) {\n            return x % y;\n        },\n        'LNCjk': function (x, y) {\n            return x < y;\n        },\n        'xFpbY': function (x, y) {\n            return x == y;\n        }\n    };\n    var idata = input['split']('');\n    var ninzuu = [];\n    var nextninzuutemp = [];\n    for (let i = 0x0; i < idata['length']; i++) {\n        ninzuu['push'](0x1);\n        nextninzuutemp['push'](0x0);\n    }\n    var nextninzuu = nextninzuutemp['slice']();\n    for (let turn = 0x0; turn < yPSwxc['QQaSC'](ninzuu['length'], yPSwxc['qcWue'](ninzuu['length'], 0x2)); turn++) {\n        for (let j = 0x0; yPSwxc['LNCjk'](j, ninzuu['length']); j++) {\n            if (yPSwxc['xFpbY'](idata[j], 'R')) {\n                nextninzuu[yPSwxc['QQaSC'](j, 0x1)] += ninzuu[j];\n            } else if (yPSwxc['xFpbY'](idata[j], 'L')) {\n                nextninzuu[j - 0x1] += ninzuu[j];\n            }\n        }\n        ninzuu = nextninzuu['slice']();\n        nextninzuu = nextninzuutemp['slice']();\n    }\n    console['log'](ninzuu['join']('\\x20'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["RRLRL", "0 1 2 1 1"], ["RRLLLLRLRRLL", "0 3 3 0 0 0 1 1 0 2 2 0"], ["RRRLLRLLRRRLLLLL", "0 0 3 2 0 2 1 0 0 0 4 4 0 0 0 0"]], "original": "function Main(input) {\n\tvar idata = input.split(\"\");\n\tvar ninzuu = [];\n\tvar nextninzuutemp = [];\n\t//人数の配列を生成\n\tfor( let i=0; i<idata.length ; i++ ){\n\t    ninzuu.push(1);\n\t    nextninzuutemp.push(0);\n\t}\n\tvar nextninzuu = nextninzuutemp.slice();\n\t//一回ごとに操作が行われる\n\tfor( let turn=0; turn<ninzuu.length+ninzuu.length%2 ; turn++ ){\n\t\tfor( let j=0; j<ninzuu.length ; j++ ){\n\t\t\t//着目しているマスに右に行けと書いてあった場合\n\t\t\tif(idata[j]==\"R\"){\n\t\t\t\tnextninzuu[j+1]+=ninzuu[j];\n\t\t\t}else if(idata[j]==\"L\"){\n\t\t\t    nextninzuu[j-1]+=ninzuu[j];\n\t\t\t}\n\t\t}\n\t\tninzuu = nextninzuu.slice();\n\t\tnextninzuu = nextninzuutemp.slice();\n\t}\n\tconsole.log(ninzuu.join(\" \"));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03071_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const nXkOtA = {\n        'hVQRM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ZzWnr': function (x, y) {\n            return x > y;\n        },\n        'lsics': function (x, y) {\n            return x - y;\n        },\n        'dLyne': function (x, y) {\n            return x * y;\n        },\n        'OStjY': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a')[0x0];\n    const numbers = input['split']('\\x20')['map'](i => {\n        return nXkOtA['hVQRM'](parseInt, i, 0xa);\n    });\n    const a = numbers[0x0];\n    const b = numbers[0x1];\n    let result = 0x0;\n    if (nXkOtA['ZzWnr'](a, b)) {\n        result = nXkOtA['lsics'](nXkOtA['dLyne'](0x2, a), 0x1);\n    } else if (b > a) {\n        result = nXkOtA['lsics'](nXkOtA['dLyne'](0x2, b), 0x1);\n    } else {\n        result = nXkOtA['OStjY'](0x2, a);\n    }\n    console['log'](result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3", "9"], ["3 4", "7"], ["6 6", "12"]], "original": "'use strict'\nfunction Main(input) {\n    input = input.split(\"\\n\")[0]\n    const numbers = input.split(' ').map(i => {\n      return parseInt(i, 10)\n    })\n\n    const a = numbers[0]\n    const b = numbers[1]\n    let result = 0\n\n    if(a > b) {\n      result = 2*a - 1\n    } else if (b > a) {\n      result = 2*b - 1  \n    } else {\n      result = 2 * a\n    }\n    \n    console.log(result)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03074_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const RDvDbv = {\n        'cjBHH': function (x, y) {\n            return x < y;\n        },\n        'klUdb': function (x, y) {\n            return x == y;\n        },\n        'fKnVI': function (x, y) {\n            return x - y;\n        },\n        'YOeVL': function (x, y) {\n            return x + y;\n        },\n        'TrSCf': function (x, y) {\n            return x - y;\n        },\n        'PiUdv': function (x, y) {\n            return x * y;\n        },\n        'kjPAA': function (x, y) {\n            return x - y;\n        },\n        'ZnZgS': function (x, y) {\n            return x < y;\n        },\n        'rXsgK': function (x, y) {\n            return x < y;\n        },\n        'NfeFN': function (x, y) {\n            return x < y;\n        },\n        'AHisO': function (x, y) {\n            return x + y;\n        },\n        'NzIsP': function (x, y) {\n            return x < y;\n        },\n        'weHZI': function (x, y) {\n            return x < y;\n        }\n    };\n    let lines = input['split']('\\x0a');\n    let nk = lines['shift']()['split'](/\\s/)['map'](v => v - 0x0);\n    let N = nk[0x0], K = nk[0x1];\n    let S = lines['shift']()['split'](/\\s/)[0x0]['split']('')['map'](v => v - 0x0);\n    let n = 0x0, Z = [];\n    let p, b = S[0x0], i = 0x0;\n    while (RDvDbv['cjBHH'](n, N)) {\n        for (p = n; p < N && RDvDbv['klUdb'](S[p], b); p++) {\n        }\n        let l = RDvDbv['fKnVI'](p, n);\n        Z['push']({\n            'kind': b,\n            'pos': n,\n            'len': l,\n            'index': i++\n        });\n        b = RDvDbv['YOeVL'](b, 0x1) % 0x2;\n        n = p;\n    }\n    let L = Z['length'], LL = RDvDbv['TrSCf'](L, RDvDbv['PiUdv'](RDvDbv['kjPAA'](K, 0x1), 0x2));\n    let start = Z[0x0]['kind'];\n    let ans = 0x0;\n    for (let n = 0x0; RDvDbv['cjBHH'](n, LL); n += 0x2) {\n        let sum = 0x0, m, k;\n        for (m = n, k = 0x0; RDvDbv['ZnZgS'](m, L) && k < K; k++, m += 0x2) {\n            if (RDvDbv['rXsgK'](m, L))\n                sum += Z[m]['len'];\n            if (RDvDbv['NfeFN'](RDvDbv['AHisO'](m, 0x1), L))\n                sum += Z[RDvDbv['YOeVL'](m, 0x1)]['len'];\n        }\n        if (RDvDbv['klUdb'](start, 0x1) && RDvDbv['NzIsP'](m, L))\n            sum += Z[m]['len'];\n        if (RDvDbv['weHZI'](ans, sum))\n            ans = sum;\n    }\n    console['log'](ans);\n}\nif (typeof window == 'undefined')\n    Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 1\n00010", "4"], ["14 2\n11101010110011", "8"], ["1 1\n1", "1"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let nk = lines.shift().split(/\\s/).map((v) => v - 0);\n    let N = nk[0], K = nk[1];\n    let S = lines.shift().split(/\\s/)[0].split(\"\").map((v) => v - 0);\n    let n = 0, Z = [];\n    let p, b = S[0], i = 0;\n    while (n < N) {\n        for (p = n; p < N && S[p] == b; p++) { }\n        let l = p - n;\n        Z.push({kind: b, pos: n, len: l, index: i++});\n        b = (b + 1) % 2;\n        n = p;\n    }\n    let L = Z.length, LL = L - (K - 1) * 2;\n    let start = Z[0].kind;\n    let ans = 0;\n    for (let n = 0; n < LL; n += 2) {\n        let sum = 0, m, k;\n        for (m = n, k = 0; m < L && k < K; k++, m += 2) {\n            if (m < L) sum += Z[m].len;\n            if (m + 1 < L) sum += Z[m + 1].len;\n        }\n        if (start == 1 && m < L) sum += Z[m].len;\n        if (ans < sum) ans = sum;\n    }\n    console.log(ans);\n}\nif (typeof window == \"undefined\") Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03106_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var cYWKEe = {\n        'aCIMJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'gALYY': function (callee, param1) {\n            return callee(param1);\n        },\n        'UbaEZ': function (x, y) {\n            return x / y;\n        },\n        'PJIbK': function (x, y) {\n            return x === y;\n        }\n    };\n    const args = input['split']('\\x20');\n    var A = Number(args[0x0]);\n    var B = cYWKEe['aCIMJ'](Number, args[0x1]);\n    var K = cYWKEe['gALYY'](Number, args[0x2]);\n    var cu = 0x0;\n    var sum;\n    var count = 0x0;\n    for (cu = A; cu > 0x0; --cu) {\n        if (Number['isInteger'](cYWKEe['UbaEZ'](A, cu)) && Number['isInteger'](B / cu)) {\n            count++;\n            if (cYWKEe['PJIbK'](count, K)) {\n                sum = cu;\n                break;\n            }\n        }\n    }\n    console['log'](sum);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8 12 2", "2"], ["100 50 4", "5"], ["1 1 1", "1"]], "original": "function main(input) {\n  const args = input.split(' ');\n  var A = Number(args[0]);\n  var B = Number(args[1]);\n  var K = Number(args[2]);\n  var cu = 0;\n  var sum;\n  var count = 0;\n  for (cu = A; cu > 0; --cu) {\n    if (Number.isInteger(A / cu) && Number.isInteger(B / cu)) {\n      count++;\n      if (count === K) {\n        sum = cu;\n        break;\n      }\n    }\n  }\n  console.log(sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03140_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gIGCMm = {\n        'cXdaP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'wneyE': function (x, y) {\n            return x == y;\n        },\n        'NmjAd': function (x, y) {\n            return x == y;\n        },\n        'XFsLd': function (x, y) {\n            return x == y;\n        },\n        'IJqPp': function (x, y) {\n            return x == y;\n        }\n    };\n    inputList = input['split']('\\x0a');\n    inputNum = gIGCMm['cXdaP'](parseInt, inputList[0x0], 0xa);\n    firstList = inputList[0x1]['split']('');\n    secondList = inputList[0x2]['split']('');\n    thirdList = inputList[0x3]['split']('');\n    count = 0x0;\n    for (var i = 0x0; i < inputNum; i++) {\n        if (gIGCMm['wneyE'](firstList[i], secondList[i]) && gIGCMm['NmjAd'](secondList[i], thirdList[i])) {\n            continue;\n        }\n        if (gIGCMm['XFsLd'](firstList[i], secondList[i]) || secondList[i] == thirdList[i] || gIGCMm['IJqPp'](thirdList[i], firstList[i])) {\n            count++;\n            continue;\n        }\n        count++;\n        count++;\n    }\n    console['log'](count);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\nwest\neast\nwait", "3"], ["9\ndifferent\ndifferent\ndifferent", "0"], ["7\nzenkoku\ntouitsu\nprogram", "13"]], "original": "// inputに入力データ全体が入る\n// 7\n// zenkoku\n// touitsu\n// program\n\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinputList = input.split(\"\\n\");\n    inputNum = parseInt(inputList[0], 10);\n    firstList = inputList[1].split(\"\");\n    secondList = inputList[2].split(\"\");\n    thirdList = inputList[3].split(\"\");\n    count = 0;\n    for (var i = 0; i < inputNum; i++) {\n        if(firstList[i] == secondList[i] && secondList[i] == thirdList[i]) {\n            continue;\n        }\n        if(firstList[i] == secondList[i] || secondList[i] == thirdList[i] || thirdList[i] == firstList[i]) {\n            count++;\n            continue;\n        }\n        count++;\n        count++;\n    }\n\tconsole.log(count);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03202_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const OoxuEg = {\n        'jVvsw': function (x, y) {\n            return x < y;\n        },\n        'lisiC': function (x, y) {\n            return x - y;\n        },\n        'dqWLz': function (x, y) {\n            return x + y;\n        },\n        'BJIwN': function (x, y) {\n            return x - y;\n        },\n        'tNeas': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'rtaPp': function (callee, param1) {\n            return callee(param1);\n        },\n        'KhmMY': function (x, y) {\n            return x + y;\n        },\n        'mccAu': function (x, y) {\n            return x > y;\n        },\n        'EnJFC': function (x, y) {\n            return x - y;\n        },\n        'lhxzH': function (x, y) {\n            return x === y;\n        },\n        'KcZPu': function (x, y) {\n            return x + y;\n        }\n    };\n    const inputs = input['split']('\\x0a')['filter'](x => x !== '');\n    const n = inputs[0x0];\n    const a = inputs[0x1]['split']('\\x20')['map'](x => Number(x));\n    let result = 0x1;\n    while (OoxuEg['lhxzH'](OoxuEg['tNeas'](testN, result, a), ![])) {\n        result = OoxuEg['KcZPu'](result, 0x1);\n    }\n    console['log'](result);\n    function testN(n, a) {\n        let current = '0'['repeat'](a[0x0]);\n        for (let i = 0x1; OoxuEg['jVvsw'](i, a['length']); i++) {\n            if (OoxuEg['jVvsw'](a[OoxuEg['lisiC'](i, 0x1)], a[i])) {\n                current = OoxuEg['dqWLz'](current, '0'['repeat'](OoxuEg['BJIwN'](a[i], a[i - 0x1])));\n            } else {\n                current = OoxuEg['dqWLz'](OoxuEg['tNeas'](parseInt, current['substring'](0x0, a[i]), n), 0x1);\n                if (OoxuEg['rtaPp'](isNaN, current)) {\n                    return ![];\n                }\n                current = OoxuEg['KhmMY']('', current);\n                if (OoxuEg['mccAu'](current['length'], a[i])) {\n                    return ![];\n                } else {\n                    current = OoxuEg['KhmMY']('0'['repeat'](OoxuEg['EnJFC'](a[i], current['length'])), current);\n                }\n            }\n        }\n        return !![];\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n3 2 1", "2"], ["5\n2 3 2 1 2", "2"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n\n  const n = inputs[0];\n  const a = inputs[1].split(\" \").map(x => Number(x));\n\n  let result = 1;\n  while (testN(result, a) === false) {\n    result = result + 1;\n  }\n\n  console.log(result);\n\n  function testN(n, a) {\n    let current = \"0\".repeat(a[0]);\n\n    for (let i = 1; i < a.length; i++) {\n      if (a[i - 1] < a[i]) {\n        current = current + \"0\".repeat(a[i] - a[i - 1]);\n      } else {\n        current = parseInt(current.substring(0, a[i]), n) + 1;\n        if (isNaN(current)) {\n          return false;\n        }\n\n        current = \"\" + current;\n        if (current.length > a[i]) {\n          return false;\n        } else {\n          current = \"0\".repeat(a[i] - current.length) + current;\n        }\n      }\n    }\n    return true;\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03251_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const NHzlQG = {\n        'SEOQr': function (x, y) {\n            return x + y;\n        },\n        'QzFZA': function (x, y) {\n            return x >= y;\n        },\n        'eNRTY': 'No\\x20War'\n    };\n    const num = input[0x0]['split']('\\x20')['map'](val => parseInt(val)), N = num[0x0], M = num[0x1], X = num[0x2], Y = num[0x3], x = input[0x1]['split']('\\x20')['map'](val => parseInt(val)), y = input[0x2]['split']('\\x20')['map'](val => parseInt(val));\n    const xMax = Math['max'](...x), yMin = Math['min'](...y);\n    let ans = 0x0;\n    for (let z = NHzlQG['SEOQr'](X, 0x1); z <= Y; z++) {\n        if (xMax < z && NHzlQG['QzFZA'](yMin, z)) {\n            ans = 0x1;\n            break;\n        }\n    }\n    console['log'](ans == 0x1 ? NHzlQG['eNRTY'] : 'War');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["3 2 10 20\n8 15 13\n16 22", "No War"], ["4 2 -48 -1\n-20 -35 -91 -23\n-22 66", "War"], ["5 3 6 8\n-10 3 1 5 -100\n100 6 14", "War"]], "original": "'use strict';\nconst main = input => {\n  const num = input[0].split(' ').map(val => parseInt(val)), N = num[0], M = num[1], X = num[2], Y = num[3], x = input[1].split(' ').map(val => parseInt(val)), y = input[2].split(' ').map(val => parseInt(val));\n  // console.log(N, M, X, Y, x, y);\n  const xMax = Math.max(...x), yMin = Math.min(...y);\n  // console.log(xMax, yMin);\n  let ans = 0;\n  for(let z=X+1; z<=Y; z++) {\n    if (xMax < z && yMin >= z) {\n      ans = 1;\n      break;\n    }\n  }\n  console.log(ans==1?'No War':'War');\n  \n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split('\\n'));", "language": "JavaScript"}
{"filename": "p03315_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var PLuLpP = {\n        'fcGOa': function (x, y) {\n            return x < y;\n        },\n        'xMqJV': function (x, y) {\n            return x == y;\n        }\n    };\n    var input = input;\n    var sum = 0x0;\n    for (var i = 0x0; PLuLpP['fcGOa'](i, 0x4); i++) {\n        if (PLuLpP['xMqJV'](input[i], '+')) {\n            sum += 0x1;\n        } else {\n            sum -= 0x1;\n        }\n    }\n    console['log'](sum);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["+-++", "2"], ["-+--", "-2"], ["----", "-4"]], "original": "function main(input) {\n  \n  var input = input;\n  var sum = 0;\n  for (var i=0;i<4;i++){\n    if(input[i] == '+') {\n    \tsum += 1;\n    } else {\n    \tsum -= 1;\n    }\n  }\n  console.log(sum);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03385_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var NCikcf = {\n        'wjSIH': function (x, y) {\n            return x == y;\n        },\n        'dHZwN': function (x, y) {\n            return x == y;\n        },\n        'Wjonw': function (x, y) {\n            return x == y;\n        },\n        'yypFf': 'Yes'\n    };\n    var aa = input['indexOf']('a');\n    var bb = input['indexOf']('b');\n    var cc = input['indexOf']('c');\n    if (NCikcf['wjSIH'](aa, -0x1) || NCikcf['dHZwN'](bb, -0x1) || NCikcf['Wjonw'](cc, -0x1)) {\n        console['log']('No');\n    } else {\n        console['log'](NCikcf['yypFf']);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["bac", "Yes"], ["bab", "No"], ["abc", "Yes"], ["aaa", "No"]], "original": "function main(input) {\n    \n    var aa=input.indexOf(\"a\");\n    var bb=input.indexOf(\"b\");\n    var cc=input.indexOf(\"c\");\n\n  if(aa==-1 || bb==-1 || cc==-1){\n  console.log(\"No\");\n  }else{\n    console.log(\"Yes\");\n}\n}\n  main(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03409_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var xglYxS = {\n        'Ksnhi': function (callee, param1) {\n            return callee(param1);\n        },\n        'uelZw': function (x, y) {\n            return x < y;\n        },\n        'TeqTC': function (x, y) {\n            return x < y;\n        },\n        'tQxWZ': function (x, y) {\n            return x - y;\n        },\n        'oZoHM': function (x, y) {\n            return x >= y;\n        },\n        'JiXmQ': function (x, y) {\n            return x < y;\n        }\n    };\n    s = s['split']('\\x0a');\n    var n = xglYxS['Ksnhi'](parseInt, s[0x0]);\n    var a = xglYxS['Ksnhi'](Array, n);\n    var c = xglYxS['Ksnhi'](Array, n);\n    for (var i = 0x0; xglYxS['uelZw'](i, n); i++) {\n        a[i] = s[i + 0x1]['split']('\\x20')['map'](a => parseInt(a));\n    }\n    for (var i = 0x0; xglYxS['TeqTC'](i, n); i++) {\n        c[i] = s[i + n + 0x1]['split']('\\x20')['map'](a => parseInt(a));\n    }\n    a = a['sort']((a, b) => a[0x1] - b[0x1]);\n    a = a['sort']((a, b) => a[0x0] - b[0x0]);\n    c = c['sort']((a, b) => a[0x0] - b[0x0]);\n    c = c['sort']((a, b) => b[0x1] - a[0x1]);\n    var ans = 0x0;\n    for (i = xglYxS['tQxWZ'](n, 0x1); xglYxS['oZoHM'](i, 0x0); i--) {\n        for (var j = xglYxS['tQxWZ'](c['length'], 0x1); j >= 0x0; j--) {\n            if (xglYxS['uelZw'](a[i][0x0], c[j][0x0]) && xglYxS['JiXmQ'](a[i][0x1], c[j][0x1])) {\n                ans++;\n                c['splice'](j, 0x1);\n                break;\n            }\n        }\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5", "2"], ["3\n0 0\n1 1\n5 2\n2 3\n3 4\n4 5", "2"], ["2\n2 2\n3 3\n0 0\n1 1", "0"], ["5\n0 0\n7 3\n2 2\n4 8\n1 6\n8 5\n6 9\n5 4\n9 1\n3 7", "5"], ["5\n0 0\n1 1\n5 5\n6 6\n7 7\n2 2\n3 3\n4 4\n8 8\n9 9", "4"]], "original": "function Main(s) {\n\ts = s.split(\"\\n\");\n\tvar n = parseInt(s[0]);\n\tvar a = Array(n);\n\tvar c = Array(n);\n\tfor(var i = 0; i < n; i++){\n\t\ta[i] = s[i+1].split(\" \").map(a => parseInt(a));\n\t}\n\tfor(var i = 0; i < n; i++){\n\t\tc[i] = s[i+n+1].split(\" \").map(a => parseInt(a));\n\t}\n\ta = a.sort((a,b) => a[1] - b[1]);\n\ta = a.sort((a,b) => a[0] - b[0]);\n\tc = c.sort((a,b) => a[0] - b[0]);\n\tc = c.sort((a,b) => b[1] - a[1]);\n\t\n\tvar ans = 0;\n\tfor(i = n-1; i >= 0; i--){\n\t\tfor(var j = c.length-1; j >= 0; j--){\n\t\t\tif(a[i][0] < c[j][0] && a[i][1] < c[j][1]){\n\t\t\t\tans++;\n\t\t\t\tc.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03423_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const ZnfpGZ = {\n        'vOIiP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RiXRD': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['trim']();\n    const a = ZnfpGZ['vOIiP'](parseInt, input['split']('\\x20')[0x0], 0xa);\n    console['log'](Math['floor'](ZnfpGZ['RiXRD'](a, 0x3)));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8", "2"], ["2", "0"], ["9", "3"]], "original": "function main(input) {\n  input=input.trim();\nconst a = parseInt(input.split(\" \")[0], 10);\n  console.log(Math.floor(a/3));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03455_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const AnYlLX = {\n        'DhJfR': function (x, y) {\n            return x ^ y;\n        },\n        'gPzUa': function (x, y) {\n            return x % y;\n        },\n        'tRDfe': 'Even'\n    };\n    input = input['trim']()['split']('\\x20')['map'](Number);\n    const A = input[0x0];\n    const B = input[0x1];\n    const ans = AnYlLX['DhJfR'](A % 0x2, AnYlLX['gPzUa'](B, 0x2)) ? AnYlLX['tRDfe'] : 'Odd';\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4", "Even"], ["1 21", "Odd"]], "original": "'use strict'\n\nfunction main(input) {\n  input = input\n    .trim()\n    .split(' ')\n    .map(Number)\n\n  const A = input[0]\n  const B = input[1]\n  const ans = A % 2 ^ B % 2 ? 'Even' : 'Odd'\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03478_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var hgQmrP = {\n        'iQvom': function (x, y) {\n            return x <= y;\n        },\n        'tJjtl': function (x, y) {\n            return x <= y;\n        },\n        'bqQlR': function (x, y) {\n            return x <= y;\n        },\n        'xgORB': function (x, y) {\n            return x <= y;\n        }\n    };\n    var input = input['split']('\\x20');\n    var n = input[0x0];\n    var a = input[0x1];\n    var b = input[0x2];\n    var Sum = 0x0;\n    for (j = 0x1; hgQmrP['iQvom'](j, n); j++) {\n        if (hgQmrP['iQvom'](0x0, j) && hgQmrP['tJjtl'](j, 0x9)) {\n            if (hgQmrP['bqQlR'](a, j) && hgQmrP['xgORB'](j, b)) {\n                Sum += j;\n            }\n        } else {\n            var str = j['toString']();\n            var arr = str['split']('')['map'](n => parseInt(n));\n            var x = arr['reduce'](function (prev, current, i, arr) {\n                return prev + current;\n            });\n        }\n        ;\n        if (a <= x && hgQmrP['xgORB'](x, b)) {\n            Sum += j;\n        }\n    }\n    console['log'](Sum);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["20 2 5", "84"], ["10 1 2", "13"], ["100 4 16", "4554"]], "original": "function Main(input) {\n    var input  = input.split(' ');\n    var n = input[0];\n    var a = input[1];\n    var b = input[2];\n    var Sum = 0;\n    for (j = 1; j <= n; j++) {\n        if(0 <= j && j <= 9) {\n            if(a <= j && j <= b) {\n                Sum += j;\n            }\n        } else {\n        var str = j.toString();\n        var arr = str.split('').map(n => parseInt(n));\n        var x = arr.reduce(function(prev, current, i, arr) {\n                return prev+current;\n            });\n        };\n        if(a <= x && x <= b) {\n            Sum += j;\n        }\n    \n    }\n    console.log(Sum);\n\n    }\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03486_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var sVqidz = { 'ZuLuY': '1|2|0|5|4|3' };\n    var DmGgRC = sVqidz['ZuLuY']['split']('|');\n    var scCbFV = 0x0;\n    while (!![]) {\n        switch (DmGgRC[scCbFV++]) {\n        case '0':\n            var t = lines[0x1]['split']('');\n            continue;\n        case '1':\n            var lines = input['split']('\\x0a');\n            continue;\n        case '2':\n            var s = lines[0x0]['split']('');\n            continue;\n        case '3':\n            s < t ? console['log']('Yes') : console['log']('No');\n            continue;\n        case '4':\n            t = t['sort']()['reverse']()['join']();\n            continue;\n        case '5':\n            s = s['sort']()['join']();\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8'));", "test_cases": [["yx\naxy", "Yes"], ["ratcode\natlas", "Yes"], ["cd\nabc", "No"], ["w\nww", "Yes"], ["zzz\nzzz", "No"]], "original": "function main(input){\n  var lines = input.split('\\n');\n  var s = lines[0].split(\"\"); // change to array\n  var t = lines[1].split(\"\");\n  s = s.sort().join();\n  t = t.sort().reverse().join();\n\n  s < t ? console.log(\"Yes\") : console.log(\"No\");\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));", "language": "JavaScript"}
{"filename": "p03563_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const hREQOm = {\n        'CWTaa': function (callee, param1) {\n            return callee(param1);\n        },\n        'DnDIH': function (x, y) {\n            return x + y;\n        },\n        'OcHKF': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['split']('\\x0a');\n    const r = Number(s[0x0]);\n    const g = hREQOm['CWTaa'](Number, s[0x1]);\n    let ans = hREQOm['DnDIH'](g, hREQOm['OcHKF'](g, r));\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2002\n2017", "2032"], ["4500\n0", "-4500"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n  const r = Number(s[0]);\n  const g = Number(s[1]);\n  let ans = g + (g - r);\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03610_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var CISyWt = {\n        'idiTj': '4|2|0|3|1',\n        'FUwAI': function (x, y) {\n            return x <= y;\n        },\n        'ATIiu': function (x, y) {\n            return x + y;\n        },\n        'nXBRN': function (x, y) {\n            return x - y;\n        }\n    };\n    var heKiIi = CISyWt['idiTj']['split']('|');\n    var ZgEzFz = 0x0;\n    while (!![]) {\n        switch (heKiIi[ZgEzFz++]) {\n        case '0':\n            var ans = '';\n            continue;\n        case '1':\n            console['log'](ans);\n            continue;\n        case '2':\n            input = input[0x0];\n            continue;\n        case '3':\n            for (var i = 0x1; CISyWt['FUwAI'](i, input['length']); i = CISyWt['ATIiu'](i, 0x2)) {\n                ans += input[CISyWt['nXBRN'](i, 0x1)];\n            }\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["atcoder", "acdr"], ["aaaa", "aa"], ["z", "z"], ["fukuokayamaguchi", "fkoaaauh"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\tinput = input[0];\n\n\tvar ans = \"\";\n\tfor(var i = 1; i <= input.length; i = i + 2){\n\t\tans += input[i-1];\n\t}\n\tconsole.log(ans);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03693_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const yYADZH = {\n        'yQgwv': function (callee, param1) {\n            return callee(param1);\n        },\n        'DbUYe': function (x, y) {\n            return x === y;\n        },\n        'gXXwj': function (x, y) {\n            return x % y;\n        },\n        'oBlQd': 'YES'\n    };\n    const param = yYADZH['yQgwv'](Number, input['split']('\\x20')['join'](''));\n    if (yYADZH['DbUYe'](yYADZH['gXXwj'](param, 0x4), 0x0)) {\n        console['log'](yYADZH['oBlQd']);\n    } else {\n        console['log']('NO');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3 2", "YES"], ["2 3 4", "NO"]], "original": "// https://atcoder.jp/contests/abc064/tasks/abc064_a\n\"use strict\"\nfunction Main(input) {\n  const param = Number(input.split(' ').join(''));\n  if(param % 4 === 0) {\n    console.log('YES');\n  } else {\n    console.log('NO');\n  }\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03697_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(INPUT) {\n    const gZbyTG = {\n        'eTVJf': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RbtGK': function (x, y) {\n            return x >= y;\n        },\n        'eqrec': function (x, y) {\n            return x + y;\n        },\n        'iDzFv': 'error'\n    };\n    const input = INPUT['split']('\\x0a')[0x0]['split']('\\x20');\n    const A = parseInt(input[0x0], 0xa);\n    const B = gZbyTG['eTVJf'](parseInt, input[0x1], 0xa);\n    console['log'](gZbyTG['RbtGK'](gZbyTG['eqrec'](A, B), 0xa) ? gZbyTG['iDzFv'] : gZbyTG['eqrec'](A, B));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 3", "9"], ["6 4", "error"]], "original": "'use strict';\n\nfunction Main(INPUT) {\n    const input = INPUT.split(\"\\n\")[0].split(\" \");\n    const A = parseInt(input[0], 10);\n    const B = parseInt(input[1], 10);\n\n    console.log(A + B >= 10 ? \"error\" : A + B);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03698_1", "type": "JavaScript", "obfuscated": "function main(data) {\n    var uqoDXu = {\n        'aLaTu': function (x, y) {\n            return x < y;\n        },\n        'Cbxxz': function (x, y) {\n            return x === y;\n        }\n    };\n    input = data['split']('');\n    len = input['length'];\n    temp = [];\n    for (i = 0x0; uqoDXu['aLaTu'](i, len); i += 0x1) {\n        if (uqoDXu['Cbxxz'](temp['indexOf'](input[i]), -0x1)) {\n            temp['push'](input[i]);\n        } else {\n            console['log']('no');\n            return;\n        }\n    }\n    console['log']('yes');\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["uncopyrightable", "yes"], ["different", "no"], ["no", "yes"]], "original": "function main(data){\n    input = data.split(\"\");\n    len = input.length;\n    temp = []\n    for(i = 0; i<len; i+=1){\n        if(temp.indexOf(input[i]) === -1){\n            temp.push(input[i]);\n        }else{\n            console.log(\"no\");\n            return;\n        }\n    }\n    console.log(\"yes\");\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03737_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    console['log']((input || '')['split'](/\\s+/)['map'](function (entry) {\n        return entry[0x0]['toUpperCase']();\n    })['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["atcoder beginner contest", "ABC"], ["resident register number", "RRN"], ["k nearest neighbor", "KNN"], ["async layered coding", "ALC"]], "original": "function Main(input) {\n  console.log( (input || \"\").split(/\\s+/).map(function(entry) {\n    return entry[0].toUpperCase();\n  }).join(\"\"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03826_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar inputArray = input['split']('\\x20');\nvar a = inputArray[0x0];\nvar b = inputArray[0x1];\nvar c = inputArray[0x2];\nvar d = inputArray[0x3];\nvar result = a * b > c * d ? a * b : c * d;\nconsole['log'](result);", "test_cases": [["3 5 2 7", "15"], ["100 600 200 300", "60000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar inputArray = input.split(' ');\nvar a = inputArray[0];\nvar b = inputArray[1];\nvar c = inputArray[2];\nvar d = inputArray[3];\n\nvar result = (a * b > c * d) ? a * b : c * d;\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p04012_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const AIRbEE = {\n        'OfjKX': function (x, y) {\n            return x === y;\n        },\n        'lrxVJ': 'Yes'\n    };\n    const input = s['replace'](/\\n/g, '')['split']('');\n    let words = [];\n    input['forEach']((x, i, self) => {\n        const PKojEU = {\n            'nqlCY': function (x, y) {\n                return x === y;\n            }\n        };\n        if (AIRbEE['OfjKX'](self['indexOf'](x), i)) {\n            words['push']({\n                'word': x,\n                'counter': 0x1\n            });\n        } else {\n            words['forEach'](y => {\n                if (PKojEU['nqlCY'](x, y['word'])) {\n                    y['counter'] += 0x1;\n                }\n            });\n        }\n    });\n    const result = words['every'](x => x['counter'] % 0x2 === 0x0) ? AIRbEE['lrxVJ'] : 'No';\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abaccaba", "Yes"], ["hthth", "No"]], "original": "'use strict'\n\nfunction main(s) {  \n  \n  const input = s.replace(/\\n/g, '').split('');\n  let words = [];\n\n  // 文字配列の重複を検出\n  input.forEach((x, i, self) => {\n    \n    // 初出時はオブジェクト追加\n    if(self.indexOf(x) === i) {\n      words.push({word : x, counter: 1});\n\n    // 2回目以降はカウントするのみ\n    } else {\n      words.forEach(y => {\n        if(x === y.word) {\n          y.counter += 1;\n        }\n      })\n    }\n  });\n\n  // 全ての文字が偶数回出ているかどうか\n  const result = words.every(x => (x.counter % 2) === 0) ? 'Yes' : 'No';\n  \n  console.log(result);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00006_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar string = input['trim']();\nconsole['log'](reverse(string));\nfunction reverse(s) {\n    return string['split']('')['reverse']()['join']('');\n}", "test_cases": [["w32nimda", "admin23w"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar string = input.trim();\n\nconsole.log(reverse(string));\n\nfunction reverse(s){\n    return string.split(\"\").reverse().join(\"\");\n}", "language": "JavaScript"}
{"filename": "p00018_1", "type": "JavaScript", "obfuscated": "console['log'](require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\s/)['sort'](function (a, b) {\n    return b - a;\n})['join']('\\x20'));", "test_cases": [["3 6 9 7 5", "9 7 6 5 3"]], "original": "console.log(require('fs').readFileSync('/dev/stdin','utf8').split(/\\s/).sort(function(a,b){return b-a}).join(\" \"));", "language": "JavaScript"}
{"filename": "p00024_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar minvs = input['trim']()['split']('\\x0a');\nvar minv;\nwhile (minv = minvs['shift']()) {\n    var floor = Math['ceil'](Math['pow'](parseFloat(minv), 0x2) / 0x62 + 0x1);\n    console['log'](floor);\n}", "test_cases": [["25.4\n25.4", "8\n8"]], "original": "'use strict';\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar minvs = input.trim().split('\\n');\n//var minvs = ['25.4','21.4','36.3'];\nvar minv;\nwhile (minv = minvs.shift()) {\n\tvar floor = Math.ceil(Math.pow(parseFloat(minv), 2)/98 + 1);\n\tconsole.log(floor);\n}", "language": "JavaScript"}
{"filename": "p00036_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a\\x0a')['map'](function (i) {\n    var KwvjSj = {\n        'ASrIa': function (x, y) {\n            return x != y;\n        },\n        'JdJhT': '1111',\n        'xqycx': '1101',\n        'WaKgh': '101',\n        'ugJKs': function (x, y) {\n            return x != y;\n        },\n        'pouzF': '10000001'\n    };\n    c = i['replace'](/\\s/g, '')['split']('')['join']('');\n    console['log'](KwvjSj['ASrIa'](c['indexOf'](KwvjSj['JdJhT']), -0x1) ? 'C' : KwvjSj['ASrIa'](c['indexOf']('111'), -0x1) ? 'F' : KwvjSj['ASrIa'](c['indexOf'](KwvjSj['xqycx']), -0x1) ? 'D' : KwvjSj['ASrIa'](c['indexOf'](KwvjSj['WaKgh']), -0x1) ? 'B' : c['indexOf']('1000001') != -0x1 ? 'G' : KwvjSj['ugJKs'](c['indexOf'](KwvjSj['pouzF']), -0x1) ? 'A' : 'E');\n});", "test_cases": [["00000000\n00000000\n01100000\n00110000\n00000000\n00000000\n00000000\n00000000\n\n00011110\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n\n00000000\n00000000\n00110000\n00110000\n00000000\n00000000\n00000000\n00000000", "E\nC\nA"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n\\n').map(function(i){c=i.replace(/\\s/g,'').split('').join('');console.log(c.indexOf(\"1111\")!=-1?\"C\":c.indexOf(\"111\")!=-1?\"F\":c.indexOf(\"1101\")!=-1?\"D\":c.indexOf(\"101\")!=-1?\"B\":c.indexOf(\"1000001\")!=-1?\"G\":c.indexOf(\"10000001\")!=-1?\"A\":\"E\")})", "language": "JavaScript"}
{"filename": "p02391_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const IjHMAs = {\n        'XitaZ': function (x, y) {\n            return x > y;\n        },\n        'frIog': 'a\\x20>\\x20b',\n        'MSxrY': function (x, y) {\n            return x < y;\n        },\n        'bPeOI': 'a\\x20<\\x20b',\n        'AYOJa': 'a\\x20==\\x20b'\n    };\n    let nums = input['split']('\\x20')['map'](item => parseInt(item));\n    if (IjHMAs['XitaZ'](nums[0x0], nums[0x1])) {\n        console['log'](IjHMAs['frIog']);\n    } else if (IjHMAs['MSxrY'](nums[0x0], nums[0x1])) {\n        console['log'](IjHMAs['bPeOI']);\n    } else {\n        console['log'](IjHMAs['AYOJa']);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["1 2", "a < b"], ["4 3", "a > b"], ["5 5", "a == b"]], "original": "function main(input){\n    let nums = input.split(\" \").map(item=>parseInt(item));\n    if(nums[0]>nums[1]){\n        console.log(\"a > b\");\n    }else if(nums[0]<nums[1]){\n        console.log(\"a < b\");\n    }else{\n        console.log(\"a == b\");\n    }\n    \n    \n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf-8\"));\n", "language": "JavaScript"}
{"filename": "p02407_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\n/);\nlet num = input[0x1]['split']('\\x20')['map'](Number);\nnum['reverse']();\nconsole['log'](num['join']('\\x20'));", "test_cases": [["5\n1 2 3 4 5", "5 4 3 2 1"], ["8\n3 3 4 4 5 8 7 9", "9 7 8 5 4 4 3 3"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/);\nlet num = input[1].split(' ').map(Number);\nnum.reverse();\n\nconsole.log(num.join(' '));\n", "language": "JavaScript"}
{"filename": "p02583_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var ugNorR = {\n        'RsyBP': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return ugNorR['RsyBP'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var dZdjUr = {\n        'EIshh': function (x, y) {\n            return x < y;\n        },\n        'pGeYV': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; dZdjUr['EIshh'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; dZdjUr['pGeYV'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var FaJuzW = {\n        'viFOI': function (x, y) {\n            return x + y;\n        },\n        'hwPdg': 'Array(a[',\n        'vNhsP': ']).fill().map(x=>{return\\x20',\n        'EVLXH': function (x, y) {\n            return x + y;\n        },\n        'SlBtJ': function (x, y) {\n            return x + y;\n        },\n        'ZEHDa': ']).fill().map(x=>',\n        'AtRdz': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = FaJuzW['viFOI'](FaJuzW['hwPdg'] + --l + FaJuzW['vNhsP'] + v, ';})');\n    while (--l)\n        r = FaJuzW['EVLXH'](FaJuzW['SlBtJ'](FaJuzW['hwPdg'], l) + FaJuzW['ZEHDa'], r) + ')';\n    return FaJuzW['AtRdz'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var wFoGEq = {\n        'FhTuD': function (callee) {\n            return callee();\n        },\n        'Hydmf': function (callee, param1) {\n            return callee(param1);\n        },\n        'KCDIn': function (x, y) {\n            return x < y;\n        },\n        'CuyKd': function (x, y) {\n            return x + y;\n        },\n        'uAVhs': function (x, y) {\n            return x < y;\n        },\n        'klkda': function (x, y) {\n            return x === y;\n        },\n        'JLYUP': function (x, y) {\n            return x > y;\n        }\n    };\n    var n = wFoGEq['FhTuD'](next);\n    var l = wFoGEq['Hydmf'](nexts, n)['sort']((a, b) => a - b);\n    var ans = 0x0;\n    for (var i = 0x0; i < n; i++)\n        for (var j = i + 0x1; wFoGEq['KCDIn'](j, n); j++)\n            for (var k = wFoGEq['CuyKd'](j, 0x1); wFoGEq['uAVhs'](k, n); k++) {\n                if (wFoGEq['klkda'](l[i], l[j]) || l[j] === l[k])\n                    continue;\n                if (wFoGEq['JLYUP'](l[i] + l[j], l[k]))\n                    ans++;\n            }\n    return ans;\n}", "test_cases": [["5\n4 4 9 7 5", "5"], ["6\n4 5 4 3 3 5", "8"], ["10\n9 4 6 1 9 6 10 6 6 8", "39"], ["2\n1 1", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var l = nexts(n).sort((a,b)=>a-b);\n  var ans = 0;\n  for(var i = 0; i < n; i++)\n  for(var j = i+1; j < n; j++)\n  for(var k = j+1; k < n; k++){\n    if(l[i] === l[j] || l[j] === l[k])continue;\n    if(l[i] + l[j] > l[k])ans++;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p02584_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['split']('\\x0a');\nlet [X, K, D] = lines[0x0]['split']('\\x20')['map'](Number);\nX = Math['abs'](X);\nconst div = Math['min'](Math['floor'](X / D), K);\nlet x = X - div * D;\nlet k = K - div;\nfor (let i = 0x0; i < k; i++) {\n    x -= D;\n    if (x <= 0x0) {\n        if (!((k - i) % 0x2)) {\n            x += D;\n        }\n        break;\n    }\n}\nconsole['log'](Math['abs'](x));", "test_cases": [["6 2 4", "2"], ["7 4 3", "1"], ["10 1 2", "8"], ["1000000000000000 1000000000000000 1000000000000000", "1000000000000000"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nconst lines = input.split('\\n')\nlet [X, K, D] = lines[0].split(' ').map(Number)\n\nX = Math.abs(X)\nconst div = Math.min(Math.floor(X / D), K)\nlet x = X - div * D\nlet k = K - div\nfor (let i = 0; i < k; i++) {\n    x -= D\n    if (x <= 0) {\n        if (!((k - i) % 2)) {\n            x += D\n        }\n        break\n    }\n}\nconsole.log(Math.abs(x))", "language": "JavaScript"}
{"filename": "p02723_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(inp) {\n    const jqkXiw = {\n        'bhkPl': function (x, y) {\n            return x === y;\n        },\n        'UpRHO': function (x, y) {\n            return x === y;\n        },\n        'uOwrQ': 'Yes'\n    };\n    let ans = 'No';\n    if (jqkXiw['bhkPl'](inp[0x2], inp[0x3]) && jqkXiw['UpRHO'](inp[0x4], inp[0x5])) {\n        ans = jqkXiw['uOwrQ'];\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["sippuu", "Yes"], ["iphone", "No"], ["coffee", "Yes"]], "original": "'use strict'\nfunction main(inp) {\n  let ans = \"No\";\n  if(inp[2] === inp[3] && inp[4] === inp[5]){\n  \tans = \"Yes\"\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02759_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const JAYyAJ = {\n        'WdXUK': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const a = parseInt(input[0x0], 0xa);\n    console['log'](Math['round'](JAYyAJ['WdXUK'](a, 0x2)));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5", "3"], ["2", "1"], ["100", "50"]], "original": "'use strict';\nfunction main(input) {\n  input = input.split(\"\\n\");\n  const a = parseInt(input[0], 10);\n  \n  console.log(Math.round(a / 2));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02779_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const GUZIVR = {\n        'zvVId': function (callee, param1) {\n            return callee(param1);\n        },\n        'hyXIY': function (x, y) {\n            return x + y;\n        },\n        'UKfCD': function (x, y) {\n            return x !== y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const N = GUZIVR['zvVId'](Number, input[0x0]['trim']());\n    const A = input[0x1]['trim']()['split']('\\x20')['map'](Number);\n    let ret = 'YES';\n    for (let i = 0x0; i < N; i++) {\n        let tmp = A['slice'](GUZIVR['hyXIY'](i, 0x1));\n        let r = tmp['indexOf'](A[i]);\n        if (GUZIVR['UKfCD'](r, -0x1)) {\n            ret = 'NO';\n            break;\n        }\n    }\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n2 6 1 4 5", "YES"], ["6\n4 1 3 1 6 2", "NO"], ["2\n10000000 10000000", "NO"]], "original": "\"use strict\"\nfunction Main(input) {\n  input = input.trim().split('\\n');\n  const N = Number(input[0].trim());\n  const A = input[1].trim().split(' ').map(Number);\n  \n  let ret = 'YES';\n  for(let i=0; i<N; i++){\n    let tmp = A.slice(i+1);\n    let r = tmp.indexOf(A[i]);\n    if(r !== -1){\n      ret = 'NO';\n      break;\n    }\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02819_1", "type": "JavaScript", "obfuscated": "var fs = require('fs');\nvar inn = parseInt(fs['readFileSync'](0x0)['toString']());\nfunction isPrime(n) {\n    var GNszuI = {\n        'fUvPM': function (x, y) {\n            return x <= y;\n        },\n        'ciCNh': function (x, y) {\n            return x === y;\n        },\n        'rTwCy': function (x, y) {\n            return x % y;\n        },\n        'oDaUy': function (x, y) {\n            return x === y;\n        },\n        'PfyVl': function (x, y) {\n            return x % y;\n        },\n        'vfiCl': function (x, y) {\n            return x + y;\n        }\n    };\n    if (GNszuI['fUvPM'](n, 0x3))\n        return n > 0x1;\n    else if (GNszuI['ciCNh'](n % 0x2, 0x0) || n % 0x3 === 0x0)\n        return ![];\n    var i = 0x5;\n    while (GNszuI['fUvPM'](Math['pow'](i, 0x2), n)) {\n        if (GNszuI['rTwCy'](n, i) === 0x0 || GNszuI['oDaUy'](GNszuI['PfyVl'](n, GNszuI['vfiCl'](i, 0x2)), 0x0))\n            return ![];\n        i += 0x6;\n    }\n    return !![];\n}\nwhile (!isPrime(inn)) {\n    inn++;\n}\nconsole['log'](inn);", "test_cases": [["20", "23"], ["2", "2"], ["99992", "100003"]], "original": "var fs = require('fs');\nvar inn = parseInt(fs.readFileSync(0).toString());\nfunction isPrime(n) {\n    if(n <= 3) return n > 1;\n    else if (n % 2 === 0 || n % 3 === 0) return false;\n    var i = 5;\n    while (Math.pow(i, 2) <= n) {\n        if (n % i === 0 || n % (i + 2) === 0) return false;\n        i += 6;\n    }\n    return true;\n}\nwhile (!isPrime(inn)) {\ninn++;\n}\nconsole.log(inn);", "language": "JavaScript"}
{"filename": "p02948_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const kHzWwx = {\n        'nCoFZ': function (x, y) {\n            return x === y;\n        },\n        'nTTdC': function (x, y) {\n            return x - y;\n        },\n        'OatWp': function (callee, param1) {\n            return callee(param1);\n        },\n        'gyvNM': function (x, y) {\n            return x < y;\n        },\n        'ykONZ': function (x, y) {\n            return x === y;\n        },\n        'XEfKU': function (x, y) {\n            return x > y;\n        },\n        'FDzLO': function (x, y) {\n            return x - y;\n        }\n    };\n    const N = Number(input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    const M = kHzWwx['OatWp'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    const list = input['split']('\\x0a')['slice'](0x1)['map'](x => x['split']('\\x20')['map'](x => Number(x)))['filter'](x => x[0x0] <= M)['sort']((a, b) => {\n        if (kHzWwx['nCoFZ'](a[0x1], b[0x1])) {\n            return b[0x0] - a[0x0];\n        } else {\n            return kHzWwx['nTTdC'](b[0x1], a[0x1]);\n        }\n    });\n    let ans = 0x0;\n    let now = 0x0;\n    if (kHzWwx['nCoFZ'](list['length'], 0x0)) {\n        console['log'](0x0);\n        return;\n    }\n    for (let i = 0x0; kHzWwx['gyvNM'](i, N); i++) {\n        if (kHzWwx['ykONZ'](now, M)) {\n            break;\n        }\n        if (kHzWwx['XEfKU'](list[i][0x0], kHzWwx['FDzLO'](M, now))) {\n            continue;\n        }\n        ans += list[i][0x1];\n        now++;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3 4\n4 3\n4 1\n2 2", "5"], ["5 3\n1 2\n1 3\n1 4\n2 1\n2 3", "10"], ["1 1\n2 1", "0"]], "original": "'use strict'\n\nfunction Main(input) {\n  const N = Number(input.split(\"\\n\")[0].split(\" \")[0])\n  const M = Number(input.split(\"\\n\")[0].split(\" \")[1])\n  const list = input.split(\"\\n\").slice(1)\n    .map(x => x.split(\" \")\n    .map(x => Number(x)))\n    .filter(x => x[0] <= M)\n    .sort((a, b) => {\n      if(a[1] === b[1]) {\n        return b[0] - a[0]\n      } else {\n        return b[1] - a[1]\n      }\n    })\n  \n  let ans = 0\n  let now = 0\n  if(list.length === 0) {\n    console.log(0)\n    return\n  }\n\n  for(let i=0; i<N; i++) {\n    if(now === M) {\n      break\n    }\n    if(list[i][0] > M-now) {\n      continue\n    }\n    ans += list[i][1]\n    now++\n  }\n  console.log(ans)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim())\n", "language": "JavaScript"}
{"filename": "p02981_1", "type": "JavaScript", "obfuscated": "var main = standardInput => {\n    var bKFTQk = {\n        'FqjOE': function (x, y) {\n            return x >= y;\n        }\n    };\n    var lengthList = standardInput['split']('\\x20');\n    var n = Number['parseInt'](lengthList[0x0]);\n    var a = Number['parseInt'](lengthList[0x1]);\n    var b = Number['parseInt'](lengthList[0x2]);\n    if (bKFTQk['FqjOE'](n * a, b)) {\n        console['log'](b);\n    } else {\n        console['log'](n * a);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8'));", "test_cases": [["4 2 9", "8"], ["4 2 7", "7"], ["4 2 8", "8"]], "original": "var main = (standardInput) => {\n    var lengthList = standardInput.split(' ');\n\tvar n = Number.parseInt(lengthList[0]);\n\tvar a = Number.parseInt(lengthList[1])\n    var b = Number.parseInt(lengthList[2])\n    \n    if ( n*a >= b){\n \t console.log(b);\n\t} else {\n  \t console.log(n*a)\n \t}\n    \t\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));", "language": "JavaScript"}
{"filename": "p03030_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    'use strict';\n    const FLgchY = {\n        'hwXsZ': function (x, y) {\n            return x < y;\n        },\n        'QDLCR': function (x, y) {\n            return x > y;\n        },\n        'rIBdk': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'lOMZR': function (x, y) {\n            return x + y;\n        }\n    };\n    const temp = input['split']('\\x0a');\n    const n = FLgchY['rIBdk'](parseInt, temp['shift'](), 0xa);\n    for (let i = 0x0; i < n; i++) {\n        temp[i] = temp[i]['split']('\\x20');\n        temp[i]['push'](FLgchY['lOMZR'](i, 0x1));\n        temp[i][0x1] = parseInt(temp[i][0x1], 0xa);\n    }\n    temp['sort']((a, b) => b[0x1] - a[0x1]);\n    temp['sort']((a, b) => {\n        if (FLgchY['hwXsZ'](a[0x0], b[0x0]))\n            return -0x1;\n        else if (FLgchY['QDLCR'](a[0x0], b[0x0]))\n            return 0x1;\n        else\n            0x0;\n    });\n    const ans = temp['map'](e => e[0x2]);\n    console['log'](ans['join']('\\x0a'));\n    return ![];\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40", "3\n4\n6\n1\n5\n2"], ["10\nyakutsk 10\nyakutsk 20\nyakutsk 30\nyakutsk 40\nyakutsk 50\nyakutsk 60\nyakutsk 70\nyakutsk 80\nyakutsk 90\nyakutsk 100", "10\n9\n8\n7\n6\n5\n4\n3\n2\n1"]], "original": "function Main(input) {\n    'use strict';\n   \n    const temp = input.split(\"\\n\");\n   \n    const n = parseInt(temp.shift(), 10);\n    for(let i = 0; i < n; i++){\n      temp[i] = temp[i].split(\" \");\n      temp[i].push(i + 1);\n      temp[i][1] = parseInt(temp[i][1],10)\n    }\n   \n    temp.sort((a,b) => b[1] - a[1]);\n    temp.sort((a,b) => {\n      if(a[0] < b[0]) return -1;\n      else if(a[0] > b[0]) return 1;\n      else 0;\n    });\n    \n    // temp.forEach(e => console.log(e[2]))\n    const ans = temp.map(e => e[2]);\n    console.log(ans.join(\"\\n\"));\n    return false;\n}\n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\n  Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03290_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const dAZCTz = {\n        'uqsRH': function (x, y) {\n            return x < y;\n        },\n        'gHqRC': function (x, y) {\n            return x === y;\n        },\n        'YiVWe': function (x, y) {\n            return x & y;\n        },\n        'cKmKF': function (x, y) {\n            return x * y;\n        },\n        'iRrOn': function (x, y) {\n            return x / y;\n        },\n        'akYfv': function (x, y) {\n            return x + y;\n        },\n        'iQRKo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'QaFZx': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const DG = input['shift']()['split']('\\x20')['map'](v => Number(v));\n    input = input['map'](v => v['split']('\\x20')['map'](v => Number(v)));\n    const calc = (a, r) => {\n        let count = [Math['pow'](0xa, 0x8)];\n        for (let i = 0x0; dAZCTz['uqsRH'](i, DG[0x0]); i++) {\n            const cur = Math['pow'](0x2, i);\n            if (dAZCTz['gHqRC'](dAZCTz['YiVWe'](a, cur), cur)) {\n                const points = dAZCTz['cKmKF'](i + 0x1, 0x64);\n                let max = dAZCTz['cKmKF'](points, input[i][0x0]) + input[i][0x1];\n                let num = Math['ceil'](dAZCTz['iRrOn'](r, points));\n                if (max < r) {\n                    count['push'](dAZCTz['akYfv'](input[i][0x0], dAZCTz['iQRKo'](calc, a - cur, r - max)));\n                } else {\n                    count['push'](dAZCTz['uqsRH'](num, input[i][0x0]) ? num : input[i][0x0]);\n                }\n            }\n        }\n        return Math['min'](...count);\n    };\n    console['log'](calc(dAZCTz['QaFZx'](Math['pow'](0x2, DG[0x0]), 0x1), DG[0x1]));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 700\n3 500\n5 800", "3"], ["2 2000\n3 500\n5 800", "7"], ["2 400\n3 500\n5 800", "2"], ["5 25000\n20 1000\n40 1000\n50 1000\n30 1000\n1 1000", "66"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  const DG = input.shift().split(' ').map(v => Number(v))\n  input = input.map(v => v.split(' ').map(v => Number(v)))\n  const calc = (a, r) => {\n    let count = [Math.pow(10, 8)]\n    for(let i = 0; i < DG[0]; i++) {\n      const cur = Math.pow(2, i)\n      if ((a & cur) === cur) {\n        const points = (i+1) * 100\n        let max = points * input[i][0] + input[i][1]\n        let num = Math.ceil(r / points)\n        if (max < r) {\n          count.push(input[i][0] + calc(a - cur, r - max))\n        } else {\n          count.push(num < input[i][0] ? num : input[i][0])\n        }\n      }\n    }\n    return Math.min(...count)\n  }\n  console.log(calc(Math.pow(2, DG[0]) - 1, DG[1]))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03407_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var mQjhDo = {\n        'Swagp': function (x, y) {\n            return x + y;\n        },\n        'lCWwO': 'Yes'\n    };\n    s = s['split']('\\x20')['map'](a => parseInt(a));\n    console['log'](mQjhDo['Swagp'](s[0x0], s[0x1]) >= s[0x2] ? mQjhDo['lCWwO'] : 'No');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["50 100 120", "Yes"], ["500 100 1000", "No"], ["19 123 143", "No"], ["19 123 142", "Yes"]], "original": "function Main(s) {\n\ts = s.split(\" \").map(a => parseInt(a));\n\t\n\tconsole.log(s[0] + s[1] >= s[2] ? \"Yes\" : \"No\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03447_1", "type": "JavaScript", "obfuscated": "const BKRT = '\\x0a';\nconst SPAC = '\\x20';\nconst NOSP = '';\nfunction Main(input) {\n    const THYzFo = {\n        'qRqzp': function (x, y) {\n            return x - y;\n        },\n        'FTATL': function (callee) {\n            return callee();\n        }\n    };\n    input = []['concat'](...input['split'](BKRT)['map'](a => a['split'](SPAC)));\n    const strShift = () => input['shift']();\n    const intShift = () => ~~input['shift']();\n    return ~~THYzFo['qRqzp'](THYzFo['FTATL'](intShift), THYzFo['FTATL'](intShift)) % THYzFo['FTATL'](intShift);\n}\n((b, c, d) => 'undefined' != typeof require ? console['log'](Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'))) : [\n    b = b['split']('\\x0a')['slice'](0x1, -0x1)['join']('\\x0a'),\n    c = (function () {\n        try {\n            return Main(b);\n        } catch (f) {\n            return f['stack'] || f['message'];\n        }\n    }()),\n    d = typeof c,\n    'string' == d || (c = JSON['stringify'](c)),\n    $('<form>')['append']([\n        [\n            0xa,\n            b\n        ],\n        0x0,\n        [\n            0x1,\n            d\n        ],\n        0x0,\n        [\n            0xa,\n            c\n        ]\n    ]['map'](f => $(f ? '<textarea>' : '<br>', f && {\n        'rows': f[0x0],\n        'cols': 0x28,\n        'text': f[0x1]\n    })))['appendTo']('body')\n])('\\x0a1234\\x0a150\\x0a100\\x0a');", "test_cases": [["1234\n150\n100", "84"], ["1000\n108\n108", "28"], ["579\n123\n456", "0"], ["7477\n549\n593", "405"]], "original": "const BKRT = \"\\n\";\nconst SPAC = \" \";\nconst NOSP = \"\";\n\nfunction Main(input){\n\tinput = [].concat(...input.split(BKRT).map(a=>a.split(SPAC)));\n  const strShift = ()=>input.shift();\n  const intShift = ()=>~~input.shift();\n  \n  return ~~(intShift()-intShift())%intShift();\n}\n\n// If you are interested in the algorithms I used, \n// there is no need to read down from this line.\n\n((b,c,d)=>\"undefined\"!=typeof require?console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"))):[b=b.split(\"\\n\").slice(1,-1).join(\"\\n\"),c=function(){try{return Main(b)}catch(f){return f.stack||f.message}}(),d=typeof c,\"string\"==d||(c=JSON.stringify(c)),$(\"<form>\").append([[10,b],0,[1,d],0,[10,c]].map(f=>$(f?\"<textarea>\":\"<br>\",f&&{rows:f[0],cols:40,text:f[1]}))).appendTo(\"body\")])(`\n1234\n150\n100\n`);", "language": "JavaScript"}
{"filename": "p03565_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const KUPUwk = {\n        'PFazs': 'UNRESTORABLE',\n        'jZtru': function (x, y) {\n            return x - y;\n        },\n        'ZQSjW': function (x, y) {\n            return x >= y;\n        },\n        'HvpMU': function (x, y) {\n            return x == y;\n        },\n        'Jivti': function (x, y) {\n            return x + y;\n        },\n        'oNtAe': function (x, y) {\n            return x > y;\n        },\n        'cfDVW': function (x, y) {\n            return x + y;\n        },\n        'ZZMlx': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split'](/\\n/);\n    let S = input[0x0]['split']('');\n    const T = input[0x1]['split']('');\n    const us = KUPUwk['PFazs'];\n    for (let i = KUPUwk['jZtru'](S['length'], T['length']); KUPUwk['ZQSjW'](i, 0x0); i--) {\n        let x = 0x0;\n        for (let j = 0x0; j < T['length']; j++) {\n            if (S[i + j] == T[j] || KUPUwk['HvpMU'](S[KUPUwk['Jivti'](i, j)], '?')) {\n            } else {\n                x++;\n                continue;\n            }\n        }\n        if (KUPUwk['oNtAe'](x, 0x0))\n            continue;\n        for (let k = 0x0; k < T['length']; k++) {\n            S[KUPUwk['cfDVW'](i, k)] = T[k];\n        }\n        for (let i = 0x0; KUPUwk['ZZMlx'](i, S['length']); i++) {\n            S[i] = KUPUwk['HvpMU'](S[i], '?') ? 'a' : S[i];\n        }\n        console['log'](S = S['join'](''));\n        return;\n    }\n    console['log'](us);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["?tc????\ncoder", "atcoder"], ["??p??d??\nabc", "UNRESTORABLE"]], "original": "\"use strict\"\n\nfunction main(input) {\n  input = input.split(/\\n/)\n  let S = input[0].split(\"\")\n  const T = input[1].split(\"\")\n  const us = \"UNRESTORABLE\"\n  // if (S.length < T.length) {\n  //   console.log(us)\n  //   return\n  // } else {\n  for (let i = S.length - T.length; i >= 0; i--) {\n    //\n    let x = 0\n    for (let j = 0; j < T.length; j++) {\n      //Tの区間の中で合致するかどうか\n      if (S[i + j] == T[j] || S[i + j] == \"?\") {\n        //この文字は合致、または?だからパス\n      } else {\n        //合致しない＞この区間は合致しない\n        x++\n        continue\n      }\n      //\n    }\n    //合致しなかったら次のforへ、合致したら次のステップへ\n    if (x > 0) continue\n\n    //Tで埋める\n    for (let k = 0; k < T.length; k++) {\n      S[i + k] = T[k]\n    }\n    //残りの?をaに変換 <todo> : 正規表現などで\n    // S = S.replace(/(.+)/, \"a\")\n    for (let i = 0; i < S.length; i++) {\n      S[i] = S[i] == \"?\" ? \"a\" : S[i]\n    }\n    console.log((S = S.join(\"\")))\n    return\n  }\n  // }\n  //\n  console.log(us)\n  //\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03605_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar g_input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    g_input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var EQiCbd = {\n        'DejMt': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    EQiCbd['DejMt'](Main, g_input['split'](/\\r?\\n/));\n});\nfunction Main(input) {\n    var UfBrQY = {\n        'Jrceu': function (x, y) {\n            return x === y;\n        },\n        'lYiHy': 'Yes'\n    };\n    if (UfBrQY['Jrceu'](input[0x0][0x0], '9') || UfBrQY['Jrceu'](input[0x0][0x1], '9')) {\n        console['log'](UfBrQY['lYiHy']);\n    } else {\n        console['log']('No');\n    }\n    return 0x0;\n}", "test_cases": [["29", "Yes"], ["72", "No"], ["91", "Yes"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\n\nprocess.stdin.on('end', function() {\n    Main(g_input.split(/\\r?\\n/));\n});\n\nfunction Main(input) {\n\n    if (input[0][0] === '9' || input[0][1] === '9') {\n        console.log('Yes');\n    }\n    else {\n        console.log('No');\n    }\n\n    return 0;\n}\n\n", "language": "JavaScript"}
{"filename": "p03643_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var odiWfh = {\n        'XwSZj': function (x, y) {\n            return x + y;\n        },\n        'oWgdb': 'ABC'\n    };\n    console['log'](odiWfh['XwSZj'](odiWfh['oWgdb'], input));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["100", "ABC100"], ["425", "ABC425"], ["999", "ABC999"]], "original": "function Main(input) {\n  console.log('ABC' + input);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03658_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const jdsfKi = {\n        'wJfCw': function (callee, param1) {\n            return callee(param1);\n        },\n        'xibZO': function (callee, param1) {\n            return callee(param1);\n        },\n        'IgvAZ': function (x, y) {\n            return x < y;\n        },\n        'sDDIK': function (x, y) {\n            return x < y;\n        }\n    };\n    let xs = input['trim']()['split']('\\x0a');\n    let N = jdsfKi['wJfCw'](Number, xs[0x0]['split']('\\x20')[0x0]);\n    let K = jdsfKi['xibZO'](Number, xs[0x0]['split']('\\x20')[0x1]);\n    let l = [];\n    for (let i = 0x0; jdsfKi['IgvAZ'](i, N); i++) {\n        l['push'](xs[0x1]['split']('\\x20')[i]);\n    }\n    const compare = (b, a) => {\n        return a - b;\n    };\n    l['sort'](compare);\n    let ans = 0x0;\n    for (let i = 0x0; jdsfKi['sDDIK'](i, K); i++) {\n        ans += jdsfKi['wJfCw'](Number, l[i]);\n    }\n    console['log'](ans);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n1 2 3 4 5", "12"], ["15 14\n50 26 27 21 41 7 42 35 7 5 5 36 39 1 45", "386"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0].split(' ')[0]);\n   let K = Number(xs[0].split(' ')[1]);\n   let l = [];\n   for(let i=0; i<N; i++){\n   l.push(xs[1].split(' ')[i]);\n   }\n   const compare = (b, a)=>{ //関数名は何でもOK\n   return a - b;  //a - b 昇順 b - a 降順\n   }\n   l.sort(compare);\n   \n   let ans = 0;\n   for(let i=0; i<K; i++){\n     ans += Number(l[i]);\n   }  \n   console.log(ans);\n\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03745_1", "type": "JavaScript", "obfuscated": "(function (stdin) {\n    var VNrpEH = {\n        'aEFBN': function (x, y) {\n            return x < y;\n        },\n        'gkNYY': function (x, y) {\n            return x - y;\n        },\n        'Dbxgq': function (x, y) {\n            return x + y;\n        },\n        'chvku': function (x, y) {\n            return x > y;\n        },\n        'skPfG': function (x, y) {\n            return x + y;\n        },\n        'boWGH': function (x, y) {\n            return x && y;\n        },\n        'uLOsF': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var NFWqNV = '4|6|2|1|5|7|0|3'['split']('|');\n    var GpLKMd = 0x0;\n    while (!![]) {\n        switch (NFWqNV[GpLKMd++]) {\n        case '0':\n            for (var i = 0x0; VNrpEH['aEFBN'](i, VNrpEH['gkNYY'](n, 0x1)); i++) {\n                if (a[i] < a[VNrpEH['Dbxgq'](i, 0x1)]) {\n                    up = !![];\n                }\n                if (VNrpEH['chvku'](a[i], a[VNrpEH['skPfG'](i, 0x1)])) {\n                    down = !![];\n                }\n                if (VNrpEH['boWGH'](up, down)) {\n                    up = down = ![];\n                    ans++;\n                }\n            }\n            continue;\n        case '1':\n            var ans = 0x1;\n            continue;\n        case '2':\n            var a = input[0x1]['split']('\\x20');\n            continue;\n        case '3':\n            console['log']('%d', ans);\n            continue;\n        case '4':\n            input = stdin['split']('\\x0a');\n            continue;\n        case '5':\n            var up = ![];\n            continue;\n        case '6':\n            var n = VNrpEH['uLOsF'](parseInt, input[0x0], 0xa);\n            continue;\n        case '7':\n            var down = ![];\n            continue;\n        }\n        break;\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["6\n1 2 3 2 2 1", "2"], ["9\n1 2 1 2 1 2 1 2 1", "5"], ["7\n1 2 3 2 1 999999999 1000000000", "3"]], "original": "(function(stdin){\n  input = stdin.split(\"\\n\");\n  var n = parseInt(input[0], 10);\n  var a = input[1].split(\" \");\n\n  var ans = 1;\n  var up = false;\n  var down = false;\n  for (var i = 0; i < n - 1; i++) {\n    if (a[i] < a[i + 1]) {\n      up = true;\n    }\n\n    if (a[i] > a[i + 1]) {\n      down = true;\n    }\n\n    if (up && down) {\n      up = down = false;\n      ans++;\n    }\n  }\n\n  console.log(\"%d\", ans);\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03999_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var cXVuLB = {\n        'NwFLm': function (x, y) {\n            return x < y;\n        },\n        'gLCnL': function (x, y) {\n            return x << y;\n        },\n        'rISEi': function (x, y) {\n            return x + y;\n        }\n    };\n    const sl = s['length'] - 0x1;\n    const sa = s['split']('')['map'](a => parseInt(a));\n    var ans = 0x0;\n    for (var i = 0x0; cXVuLB['NwFLm'](i, 0x1 << sl); i++) {\n        var b = 0x0;\n        for (var j = 0x0; cXVuLB['NwFLm'](j, sl); j++) {\n            b += sa[j];\n            if (i & cXVuLB['gLCnL'](0x1, j)) {\n                ans += b;\n                b = 0x0;\n            } else\n                b *= 0xa;\n        }\n        ans += cXVuLB['rISEi'](b, sa[sl]);\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["125", "176"], ["9999999999", "12656242944"]], "original": "function Main(s) {\n  const sl = s.length - 1;\n  const sa = s.split(\"\").map(a => parseInt(a));\n  var ans = 0;\n  for(var i = 0; i < 1 << sl; i++){\n    var b = 0;\n    for(var j = 0; j < sl; j++){\n      b += sa[j];\n      if(i & 1 << j){\n        ans += b;\n        b = 0;\n      }\n      else b *= 10;\n    }\n    ans += b + sa[sl];\n }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p00023_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var XrQcUY = {\n        'BeUXS': function (callee, param1) {\n            return callee(param1);\n        },\n        'OhwcA': function (x, y) {\n            return x < y;\n        },\n        'qUlJa': function (x, y) {\n            return x + y;\n        },\n        'GdjQN': function (x, y) {\n            return x - y;\n        },\n        'DGKNg': function (x, y) {\n            return x > y;\n        },\n        'WzdxT': function (x, y) {\n            return x + y;\n        }\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a');\n    var n = XrQcUY['BeUXS'](Number, p['shift']());\n    for (var i = 0x0; XrQcUY['OhwcA'](i, n); i++) {\n        var args = p['shift']()['split']('\\x20')['map'](Number);\n        var xa = args['shift']();\n        var ya = args['shift']();\n        var ra = args['shift']();\n        var xb = args['shift']();\n        var yb = args['shift']();\n        var rb = args['shift']();\n        var d = Math['sqrt'](XrQcUY['qUlJa'](Math['pow'](XrQcUY['GdjQN'](xb, xa), 0x2), Math['pow'](yb - ya, 0x2)));\n        if (XrQcUY['DGKNg'](ra, XrQcUY['WzdxT'](d, rb))) {\n            console['log'](0x2);\n        } else if (XrQcUY['DGKNg'](rb, d + ra)) {\n            console['log'](-0x2);\n        } else if (XrQcUY['OhwcA'](d, ra + rb)) {\n            console['log'](0x1);\n        } else {\n            console['log'](0x0);\n        }\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2\n0.0 0.0 5.0 0.0 0.0 4.0\n0.0 0.0 2.0 4.1 0.0 2.0", "2\n0"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    var args = p.shift().split(' ').map(Number);\n    var xa = args.shift();\n    var ya = args.shift();\n    var ra = args.shift();\n    var xb = args.shift();\n    var yb = args.shift();\n    var rb = args.shift();\n    var d = Math.sqrt(Math.pow(xb - xa, 2) + Math.pow(yb - ya, 2));\n\n    if (ra > d + rb) {\n      console.log(2);\n    } else if (rb > d + ra) {\n      console.log(-2);\n    } else if (d < ra + rb) {\n      console.log(1);\n    } else {\n      console.log(0);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p01101_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['trim']()['split']('\\x0a');\nwhile (line = lines['shift']()) {\n    const [n, max] = line['split']('\\x20')['map'](Number);\n    if (n === 0x0 && max === 0x0) {\n        break;\n    }\n    const prices = lines['shift']()['split']('\\x20')['map'](Number);\n    const allSum = [];\n    prices['map']((priceA, indexA) => {\n        const KJNYFb = {\n            'uzzIV': function (x, y) {\n                return x !== y;\n            },\n            'gZwGO': function (x, y) {\n                return x <= y;\n            }\n        };\n        prices['map']((priceB, indexB) => {\n            if (KJNYFb['uzzIV'](indexA, indexB)) {\n                const sum = priceA + priceB;\n                if (KJNYFb['gZwGO'](sum, max)) {\n                    allSum['push'](sum);\n                }\n            }\n        });\n    });\n    const answer = allSum['sort']((a, b) => b - a)[0x0];\n    if (answer) {\n        console['log'](answer);\n        continue;\n    }\n    console['log']('NONE');\n}", "test_cases": [["3 45\n10 20 30\n6 10\n1 2 5 8 9 11\n7 100\n11 34 83 47 59 29 70\n4 100\n80 70 60 50\n4 20\n10 5 10 16\n0 0", "40\n10\n99\nNONE\n20"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst lines = input.trim().split('\\n');\n\nwhile (line = lines.shift()) {\n\tconst [n, max] = line.split(' ').map(Number);\n\n\tif (n === 0 && max === 0) {break;}\n\n\tconst prices = lines.shift().split(' ').map(Number);\n\n\tconst allSum = [];\n\n\tprices.map((priceA, indexA) => {\n\t\t\tprices.map((priceB, indexB) => {\n\t\t\t\tif (indexA !== indexB) {\n\t\t\t\t\tconst sum = priceA + priceB;\n\n\t\t\t\t\tif(sum <= max) {\n\t\t\t\t\t\tallSum.push(sum);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t);\n\n\tconst answer = allSum.sort((a,b) => b - a)[0];\n\n\tif (answer) {\n\t\tconsole.log(answer);\n\t\tcontinue;\n\t}\n\n\tconsole.log('NONE');\n}\n\n", "language": "JavaScript"}
{"filename": "p02256_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var ZsNljs = {\n        'FFYYK': '1|4|3|2|0',\n        'JyQCk': function (x, y) {\n            return x % y;\n        },\n        'hBPaq': function (x, y) {\n            return x > y;\n        }\n    };\n    var SxoWBF = ZsNljs['FFYYK']['split']('|');\n    var HOaFtN = 0x0;\n    while (!![]) {\n        switch (SxoWBF[HOaFtN++]) {\n        case '0':\n            console['log'](a);\n            continue;\n        case '1':\n            var [a, b] = input['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            do {\n                r = ZsNljs['JyQCk'](a, b);\n                a = b;\n                b = r;\n            } while (r);\n            continue;\n        case '3':\n            var r;\n            continue;\n        case '4':\n            if (ZsNljs['hBPaq'](b, a))\n                [a, b] = [\n                    b,\n                    a\n                ];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["54 20", "2"], ["147 105", "21"]], "original": "function Main(input) {\n  var [a, b] = input.split(\" \").map(Number);\n  if(b > a) [a, b] = [b, a];\n  var r;\n  do {\n    r = a % b;\n    a = b;\n    b = r;\n  } while(r)\n  console.log(a);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p02390_1", "type": "JavaScript", "obfuscated": "var x = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nx = parseInt(x, 0xa);\nvar h = Math['floor'](x / 0xe10);\nvar m = Math['floor'](x % 0xe10 / 0x3c);\nvar s = x % 0xe10 % 0x3c;\nconsole['log'](h + ':' + m + ':' + s);", "test_cases": [["46979", "13:2:59"]], "original": "var x = require('fs').readFileSync('/dev/stdin', 'utf8');\nx = parseInt(x, 10)\nvar h = Math.floor(x / 3600)\nvar m = Math.floor((x % 3600) / 60)\nvar s = x % 3600 % 60;\nconsole.log(h + \":\" + m + \":\" + s);\n", "language": "JavaScript"}
{"filename": "p02570_1", "type": "JavaScript", "obfuscated": "function Main(raw_input) {\n    const hUmfDf = {\n        'kzoDJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'HPBSD': function (x, y) {\n            return x * y;\n        },\n        'ljJuA': 'Yes'\n    };\n    const [line] = raw_input['split']('\\x0a');\n    const [d, t, s] = hUmfDf['kzoDJ'](toNumArray, line);\n    let isYes = hUmfDf['HPBSD'](t, s) >= d;\n    console['log'](isYes ? hUmfDf['ljJuA'] : 'No');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction toNumArray(str, delimitor = '\\x20') {\n    return str['split'](delimitor)['map'](s => parseInt(s, 0xa));\n}\nfunction toBitIntArray(str, delimitor = '\\x20') {\n    return str['split'](delimitor)['map'](s => BigInt(s));\n}\nfunction toMatrix(array, delimitor = '\\x20') {\n    const result = array['map'](v => v['split'](delimitor));\n    return result;\n}\nfunction sum(n) {\n    return n['reduce']((a, b) => a + b);\n}", "test_cases": [["1000 15 80", "Yes"], ["2000 20 100", "Yes"], ["10000 1 1", "No"]], "original": "/**\n * @param {String} raw_input 入力\n */\nfunction Main(raw_input) {\n\tconst [line] = raw_input.split(\"\\n\");\n\tconst [ d, t, s ] = toNumArray(line);\n\t\n\tlet isYes = t * s >= d;\n\tconsole.log(isYes ? 'Yes': 'No');\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n////////// ユーティリティ関数\n\n/**\n * 文字列を数値配列\n * @param {String} str 文字列\n */\nfunction toNumArray(str, delimitor = ' ') {\n\treturn str.split(delimitor).map(s => parseInt(s, 10));\n}\n\n/**\n * 文字列をVigInt配列に変換する\n * @param {String} str 文字列\n */\nfunction toBitIntArray(str, delimitor = ' ') {\n\treturn str.split(delimitor).map(s => BigInt(s));\n}\n\n/**\n * 2次元配列を返す\n * @param {Array<String>} array 1次元の文字列配列\n * @param {String} delimitor デリミタ\n */\nfunction toMatrix(array, delimitor = ' ') {\n\tconst result = array.map(v => v.split(delimitor));\n\treturn result;\n}\n\n/**\n * 合計を出す\n * @param {Array<Number>} n 数値配列\n */\nfunction sum(n) {\n\treturn n.reduce((a, b) => a + b);\n}", "language": "JavaScript"}
{"filename": "p02843_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var prZwzL = {\n        'aRsVI': function (x, y) {\n            return x >= y;\n        },\n        'LNkQD': function (x, y) {\n            return x <= y;\n        },\n        'uBKzu': function (x, y) {\n            return x * y;\n        }\n    };\n    const n = input['split']('\\x0a')[0x0];\n    var ans = 0x0;\n    if (prZwzL['aRsVI'](n, 0x9dd)) {\n        ans = 0x1;\n        console['log'](ans);\n    } else {\n        for (var i = 0x1; i <= 0x19; i++) {\n            if (n >= i * 0x65 && prZwzL['LNkQD'](n, prZwzL['uBKzu'](i, 0x69))) {\n                ans = 0x1;\n                break;\n            }\n        }\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["615", "1"], ["217", "0"]], "original": "function Main(input) {\n    const n = input.split(\"\\n\")[0];\n    var ans = 0 \n    if (n >= 2525){\n        ans = 1\n        console.log(ans);\n    } else {\n        for(var i = 1; i <= 25; i++){\n            if (n >= i * 101 && n <= i* 105) {\n                ans = 1\n                break;\n            }\n        }\n    }\n    console.log(ans)\n    }    \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  ", "language": "JavaScript"}
{"filename": "p02859_1", "type": "JavaScript", "obfuscated": "console['log'](Math['pow'](parseInt(require('fs')['readFileSync']('/dev/stdin', 'utf8'), 0xa), 0x2));", "test_cases": [["2", "4"], ["100", "10000"]], "original": "console.log(Math.pow(parseInt(require('fs').readFileSync('/dev/stdin','utf8'),10),2))", "language": "JavaScript"}
{"filename": "p02860_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uDKNmn = {\n        'untQB': function (x, y) {\n            return x / y;\n        },\n        'Eqnsg': function (callee, param1) {\n            return callee(param1);\n        },\n        'faitX': function (x, y) {\n            return x == y;\n        },\n        'EJqEv': 'Yes'\n    };\n    var data = input['split']('\\x0a');\n    var split = uDKNmn['untQB'](uDKNmn['Eqnsg'](parseInt, data[0x0]), 0x2);\n    var cdn = [];\n    for (let i = 0x0; i < data[0x1]['length']; i += split) {\n        cdn['push'](data[0x1]['slice'](i, i + split));\n    }\n    if (uDKNmn['faitX'](cdn[0x0], cdn[0x1])) {\n        console['log'](uDKNmn['EJqEv']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\nabcabc", "Yes"], ["6\nabcadc", "No"], ["1\nz", "No"]], "original": "function Main(input) {\n    var data = input.split(\"\\n\")\n    var split = parseInt(data[0])/2;\n\tvar cdn = [];\n\tfor (let i = 0; i < data[1].length; i+=split) {\n    \tcdn.push(data[1].slice(i, i+split));\n\t}\n\tif(cdn[0]==cdn[1]) {\n\t\tconsole.log('Yes');\n\t}else{\n\t\tconsole.log('No');\n\t}\n}\n\n// Don't edit this line!\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02951_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TiNnLd = {\n        'FLsRo': '2|4|3|0|1',\n        'WbSxt': function (x, y) {\n            return x > y;\n        },\n        'eUyRZ': function (x, y) {\n            return x - y;\n        },\n        'udRDM': function (x, y) {\n            return x - y;\n        },\n        'pijYB': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var aShBuP = TiNnLd['FLsRo']['split']('|');\n    var HewmWS = 0x0;\n    while (!![]) {\n        switch (aShBuP[HewmWS++]) {\n        case '0':\n            c = Number(input['split']('\\x0a')[0x0]['split']('\\x20')[0x2]);\n            continue;\n        case '1':\n            console['log'](TiNnLd['WbSxt'](c - (a - b), 0x0) ? TiNnLd['eUyRZ'](c, TiNnLd['udRDM'](a, b)) : 0x0);\n            continue;\n        case '2':\n            var a, b, c;\n            continue;\n        case '3':\n            b = TiNnLd['pijYB'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '4':\n            a = TiNnLd['pijYB'](Number, input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 4 3", "1"], ["8 3 9", "4"], ["12 3 7", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var a,b,c;\n  a = Number(input.split('\\n')[0].split(' ')[0]);\n  b = Number(input.split('\\n')[0].split(' ')[1]);\n  c = Number(input.split('\\n')[0].split(' ')[2]);\n  console.log(c - (a - b) > 0 ? c - (a - b) : 0);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03006_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const HQFQjY = {\n        'LZYWu': function (x, y) {\n            return x - y;\n        },\n        'AFIWs': function (x, y) {\n            return x + y;\n        },\n        'mXkGM': function (x, y) {\n            return x > y;\n        },\n        'KfpHu': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const n = +input[0x0];\n    if (HQFQjY['KfpHu'](n, 0x2)) {\n        console['log'](0x1);\n        return;\n    }\n    const xy = input['slice'](0x1)['map'](s => s['split']('\\x20')['map'](n => +n));\n    const map = {};\n    xy['forEach'](a => {\n        const NcUJvH = {\n            'jSKKb': function (x, y) {\n                return HQFQjY['LZYWu'](x, y);\n            },\n            'wjIzx': function (x, y) {\n                return HQFQjY['AFIWs'](x, y);\n            }\n        };\n        xy['forEach'](b => {\n            if (a === b)\n                return;\n            const vec = [\n                b[0x0] - a[0x0],\n                NcUJvH['jSKKb'](b[0x1], a[0x1])\n            ];\n            const m = vec['join']('_');\n            map[m] = map[m] == null ? 0x1 : NcUJvH['wjIzx'](map[m], 0x1);\n        });\n    });\n    const res = Object['keys'](map)['reduce']((r, xystr) => {\n        const count = map[xystr];\n        return HQFQjY['mXkGM'](count, r[0x0]) ? [\n            count,\n            xystr\n        ] : [\n            r[0x0],\n            r[0x1]\n        ];\n    }, [\n        0x0,\n        ''\n    ]);\n    console['log'](HQFQjY['LZYWu'](HQFQjY['AFIWs'](0x1, n - 0x1), res[0x0]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 1\n2 2", "1"], ["3\n1 4\n4 6\n7 8", "1"], ["4\n1 1\n1 2\n2 1\n2 2", "2"]], "original": "function Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    const n = +input[0];\n  \n    if (n <= 2) {\n      console.log(1);\n      return;\n    }\n  \n    const xy = input.slice(1).map(s => s.split(' ').map(n => +n));\n    // [[x, y],[x, y],[]]\n  \n    const map = {};\n    xy.forEach(a => {\n      xy.forEach(b => {\n        if (a === b) return; // 自分自身の場合\n        \n        const vec = [b[0] - a[0], b[1] - a[1]];\n        const m = vec.join('_');\n        map[m] = map[m] == null ? 1 : map[m] + 1;\n      });\n    });\n\n\tconst res = Object.keys(map).reduce((r, xystr) => {\n\t\tconst count = map[xystr];\n        return count > r[0] ? [count, xystr] : [r[0], r[1]];\n    }, [0, '']);\n  \t\n//    const pq = res[1];\n    \n    \n    console.log(1 + (n - 1) - res[0]);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03164_1", "type": "JavaScript", "obfuscated": "var MAX_VALUE = 0x3e8;\nvar inputRaw = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar rows = inputRaw['trim']()['split']('\\x0a');\nvar row1 = rows[0x0]['split']('\\x20')['map'](Number);\nvar N = row1[0x0];\nvar W = row1[0x1];\nvar list = rows['slice'](0x1)['map'](r => r['split']('\\x20')['map'](Number));\nvar dp = Array['from']({ 'length': N + 0x1 }, _ => Array(N * MAX_VALUE + 0x1)['fill'](0x0));\ndp[0x0] = Array(N * MAX_VALUE + 0x1)['fill'](Infinity);\ndp[0x0][0x0] = 0x0;\nfunction solve() {\n    var WHamVG = {\n        'wTpMH': function (x, y) {\n            return x * y;\n        },\n        'hadnh': function (x, y) {\n            return x + y;\n        },\n        'XAwyc': function (x, y) {\n            return x - y;\n        },\n        'PGEXn': function (x, y) {\n            return x <= y;\n        }\n    };\n    for (var i = 0x0; i < N; i++) {\n        for (var j = 0x0; j <= WHamVG['wTpMH'](N, MAX_VALUE); j++) {\n            if (list[i][0x1] <= j) {\n                var a = WHamVG['hadnh'](dp[i][WHamVG['XAwyc'](j, list[i][0x1])], list[i][0x0]);\n                var b = dp[i][j];\n                dp[i + 0x1][j] = Math['min'](a, b);\n            } else {\n                dp[i + 0x1][j] = dp[i][j];\n            }\n        }\n    }\n    var result = 0x0;\n    for (var i = 0x0; WHamVG['PGEXn'](i, N * MAX_VALUE); i++)\n        if (dp[N][i] <= W)\n            result = i;\n    return result;\n}\nconsole['log'](solve());", "test_cases": [["3 8\n3 30\n4 50\n5 60", "90"], ["1 1000000000\n1000000000 10", "10"], ["6 15\n6 5\n5 6\n6 4\n6 6\n3 5\n7 2", "17"]], "original": "var MAX_VALUE = 1000;\n\nvar inputRaw = require('fs').readFileSync('/dev/stdin', 'utf8')\nvar rows = inputRaw.trim().split('\\n');\nvar row1 = rows[0].split(' ').map(Number);\nvar N = row1[0];\nvar W = row1[1];\nvar list = rows.slice(1).map(r => r.split(' ').map(Number));\nvar dp = Array.from({ length: N + 1 }, _ => Array( N * MAX_VALUE + 1).fill(0));\ndp[0] = Array( N * MAX_VALUE + 1).fill(Infinity)\ndp[0][0] = 0;\n// console.log(dp);\n\nfunction solve() {\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j <= N * MAX_VALUE; j++) {\n      if (list[i][1] <= j) {\n        var a = dp[i][j - list[i][1]] + list[i][0];\n        var b = dp[i][j];\n        dp[i + 1][j] = Math.min(a, b);\n      } else {\n        dp[i + 1][j] = dp[i][j];\n      }\n    }\n  }\n\n  var result = 0;\n  for (var i = 0; i <= N * MAX_VALUE; i++) if (dp[N][i] <= W) result = i;\n  return result;\n}\n\nconsole.log(solve());\n", "language": "JavaScript"}
{"filename": "p03166_1", "type": "JavaScript", "obfuscated": "'use strict';\nconsole['log'](function (args) {\n    const YxMgWt = {\n        'uhurt': function (x, y) {\n            return x < y;\n        },\n        'hRCWv': function (x, y) {\n            return x + y;\n        },\n        'DHMIC': function (x, y) {\n            return x + y;\n        },\n        'gXOIt': function (callee, param1) {\n            return callee(param1);\n        },\n        'VfWmC': function (x, y) {\n            return x + y;\n        },\n        'MKbgL': function (x, y) {\n            return x <= y;\n        },\n        'amPdP': function (x, y) {\n            return x < y;\n        },\n        'mCinD': function (x, y) {\n            return x + y;\n        },\n        'VlsEe': function (x, y) {\n            return x - y;\n        }\n    };\n    const tmp = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const N = tmp[0x0][0x0], M = tmp[0x0][0x1];\n    const x = [], y = [];\n    for (let i = 0x0; YxMgWt['uhurt'](i, M); i++) {\n        x['push'](tmp[YxMgWt['hRCWv'](0x1, i)][0x0]);\n        y['push'](tmp[YxMgWt['DHMIC'](0x1, i)][0x1]);\n    }\n    const dp = YxMgWt['gXOIt'](Array, YxMgWt['VfWmC'](M, 0x1))['fill'](0x0)['map'](_ => Array(N + 0x1)['fill'](0x0));\n    for (let i = 0x1; YxMgWt['MKbgL'](i, M); i++) {\n        for (let j = 0x0; YxMgWt['amPdP'](j, M); j++) {\n            dp[i][y[j]] = Math['max'](dp[i][y[j]], YxMgWt['mCinD'](dp[YxMgWt['VlsEe'](i, 0x1)][x[j]], 0x1));\n        }\n    }\n    return Math['max'](...dp[M])['toString']();\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4 5\n1 2\n1 3\n3 2\n2 4\n3 4", "3"], ["6 3\n2 3\n4 5\n5 6", "2"], ["5 8\n5 3\n2 3\n2 4\n5 2\n5 1\n1 4\n4 3\n1 3", "3"]], "original": "'use strict';\nconsole.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const N = tmp[0][0], M = tmp[0][1];\n  const x = [], y = [];\n  for ( let i = 0; i < M; i++ ) {\n    x.push( tmp[1+i][0] );\n    y.push( tmp[1+i][1] );\n  }\n  const dp = Array(M+1).fill(0).map(_=>Array(N+1).fill(0));\n  for ( let i = 1; i <= M; i++ ) {\n    for ( let j = 0; j < M; j++ ) {\n      dp[i][y[j]] = Math.max( dp[i][y[j]], dp[i-1][x[j]] + 1 );\n    }\n  }\n  return Math.max(...dp[M]).toString();\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03212_1", "type": "JavaScript", "obfuscated": "function f(use, x, n, acc) {\n    var eeryHw = {\n        'AmTHP': '1|3|2|5|4|0',\n        'ApDuO': function (x, y) {\n            return x > y;\n        },\n        'ZruJe': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'HxaIz': function (x, y) {\n            return x + y;\n        },\n        'VHoUh': function (x, y) {\n            return x * y;\n        },\n        'cNVKj': function (x, y) {\n            return x === y;\n        },\n        'GbbDA': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'BhvfB': function (x, y) {\n            return x | y;\n        },\n        'HrahI': function (x, y) {\n            return x * y;\n        },\n        'sXeki': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'KHUEp': function (x, y) {\n            return x + y;\n        }\n    };\n    var jzzGSW = eeryHw['AmTHP']['split']('|');\n    var wvXIqq = 0x0;\n    while (!![]) {\n        switch (jzzGSW[wvXIqq++]) {\n        case '0':\n            return acc;\n        case '1':\n            if (eeryHw['ApDuO'](x, n))\n                return acc;\n            continue;\n        case '2':\n            acc += eeryHw['ZruJe'](f, use | 0x1, eeryHw['HxaIz'](eeryHw['VHoUh'](x, 0xa), 0x3), n, 0x0);\n            continue;\n        case '3':\n            if (eeryHw['cNVKj'](use, 0x7))\n                acc += 0x1;\n            continue;\n        case '4':\n            acc += eeryHw['GbbDA'](f, eeryHw['BhvfB'](use, 0x4), eeryHw['HxaIz'](eeryHw['HrahI'](x, 0xa), 0x7), n, 0x0);\n            continue;\n        case '5':\n            acc += eeryHw['sXeki'](f, eeryHw['BhvfB'](use, 0x2), eeryHw['KHUEp'](eeryHw['HrahI'](x, 0xa), 0x5), n, 0x0);\n            continue;\n        }\n        break;\n    }\n}\nfunction Main(input) {\n    var YhsjSw = {\n        'gVZeY': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var n = YhsjSw['gVZeY'](parseInt, input);\n    console['log'](f(0x0, 0x0, n, 0x0));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["575", "4"], ["3600", "13"], ["999999999", "26484"]], "original": "  function f(use, x, n, acc) {\n    if (x > n) return acc;\n    if (use === 0b111) acc += 1;\n    acc += f(use | 0b001, x * 10 + 3, n, 0);\n    acc += f(use | 0b010, x * 10 + 5, n, 0);\n   acc += f(use | 0b100, x * 10 + 7, n, 0);\n    return acc;\n  }\n\n  function Main(input) {\n    var n = parseInt(input);\n    console.log(f(0, 0, n, 0));\n  }\n\n  //*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\n  Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03215_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction _(s) {\n    const bvXBaC = {\n        'IejZi': function (x, y) {\n            return x - y;\n        }\n    };\n    let l = s['split']('\\x0a');\n    if (l[bvXBaC['IejZi'](l['length'], 0x1)] == '')\n        l['pop']();\n    this['l'] = l;\n    this['y'] = 0x0;\n}\n_['prototype']['ints'] = function () {\n    return this['l'][this['y']++]['split']('\\x20')['map'](v => +v);\n};\n_['prototype']['intv'] = function () {\n    const y = this['y'];\n    this['y'] = this['l']['length'];\n    return this['l']['slice'](y)['map'](v => +v);\n};\n_['prototype']['strv'] = function () {\n    const y = this['y'];\n    this['y'] = this['l']['length'];\n    return this['l']['slice'](y);\n};\n_['prototype']['strn'] = function (n) {\n    const fCansH = {\n        'MlHCh': function (x, y) {\n            return x + y;\n        }\n    };\n    const y = this['y'];\n    this['y'] += n;\n    return this['l']['slice'](y, fCansH['MlHCh'](y, n));\n};\nconst $ = new _(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\n((() => {\n    const AQttRb = {\n        'iLWbf': function (x, y) {\n            return x < y;\n        },\n        'qGWtx': function (x, y) {\n            return x < y;\n        },\n        'YBIRn': function (x, y) {\n            return x >= y;\n        },\n        'WBMoF': function (x, y) {\n            return x >= y;\n        }\n    };\n    const nk = $['ints']();\n    const n = nk[0x0];\n    const k = nk[0x1];\n    const a = $['ints']();\n    const rr = [];\n    for (let i = 0x0; AQttRb['iLWbf'](i, n); i++) {\n        let s = 0x0;\n        for (let j = i; AQttRb['qGWtx'](j, n); j++) {\n            s += a[j];\n            rr['push'](s);\n        }\n    }\n    rr['sort']((a, b) => b - a);\n    let res = 0x0;\n    for (let d = 0x29; AQttRb['YBIRn'](d, 0x0); d--) {\n        let border = 0x1 << d;\n        let num = rr['filter'](e => (e & res + border) === res + border)['length'];\n        if (AQttRb['WBMoF'](num, k)) {\n            res += border;\n        }\n    }\n    console['log'](res);\n})());", "test_cases": [["4 2\n2 5 2 5", "12"], ["8 4\n9 1 8 2 7 5 6 4", "32"]], "original": "'use strict'\nfunction _(s){let l=s.split('\\n');if(l[l.length-1]=='')l.pop();this.l=l;this.y=0}\n_.prototype.ints = function(){return this.l[this.y++].split(' ').map(v=>+v)}\n_.prototype.intv = function(){const y=this.y;this.y=this.l.length;return this.l.slice(y).map(v=>+v)}\n_.prototype.strv = function(){const y=this.y;this.y=this.l.length;return this.l.slice(y)}\n_.prototype.strn = function(n){const y=this.y;this.y+=n;return this.l.slice(y,y+n)}\nconst $ = new _(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n(()=>{\n\nconst nk = $.ints()\nconst n = nk[0]\nconst k = nk[1]\nconst a = $.ints()\n\nconst rr = []\nfor(let i=0;i<n;i++){\n    let s = 0;\n    for(let j=i;j<n;j++){\n        s+=a[j]\n        rr.push(s)\n    }\n}\nrr.sort((a,b)=>b-a)\nlet res = 0\nfor(let d=41; d>=0; d--){\n    let border = 1 << d\n    let num = rr.filter(e=>(e&(res+border)) === (res+border)).length\n    if(num>=k){\n        res += border\n    }\n}\nconsole.log(res)\n\n\n\n\n})()", "language": "JavaScript"}
{"filename": "p03231_1", "type": "JavaScript", "obfuscated": "function toNum(str) {\n    var DsOVKo = {\n        'NgEzy': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return DsOVKo['NgEzy'](parseInt, str, 0xa);\n}\nfunction gcd(a, b) {\n    var nXUoKP = {\n        'gdXeO': function (x, y) {\n            return x === y;\n        },\n        'FuNqw': function (x, y) {\n            return x % y;\n        }\n    };\n    if (nXUoKP['gdXeO'](nXUoKP['FuNqw'](a, b), 0x0)) {\n        return b;\n    } else {\n        return gcd(b, nXUoKP['FuNqw'](a, b));\n    }\n}\nfunction lcm(a, b) {\n    var jCMWlZ = {\n        'nUmoq': function (x, y) {\n            return x / y;\n        },\n        'TKEUp': function (x, y) {\n            return x * y;\n        },\n        'hdjcG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return jCMWlZ['nUmoq'](jCMWlZ['TKEUp'](a, b), jCMWlZ['hdjcG'](gcd, a, b));\n}\nfunction Main(input) {\n    var YccchI = {\n        'LVFxa': function (callee, param1) {\n            return callee(param1);\n        },\n        'zpQwd': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'lpjOb': function (x, y) {\n            return x < y;\n        },\n        'iLlZa': function (x, y) {\n            return x < y;\n        },\n        'LLtPX': function (x, y) {\n            return x * y;\n        },\n        'sxlXA': function (x, y) {\n            return x / y;\n        },\n        'qVXxn': function (x, y) {\n            return x != y;\n        },\n        'bVPpm': function (x, y) {\n            return x * y;\n        },\n        'ylssE': function (x, y) {\n            return x != y;\n        },\n        'dkPSE': function (x, y) {\n            return x * y;\n        }\n    };\n    var N = toNum(input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    var M = YccchI['LVFxa'](toNum, input['split']('\\x0a')[0x0]['split']('\\x20')[0x1]);\n    var S = input['split']('\\x0a')[0x1];\n    var T = input['split']('\\x0a')[0x2];\n    var L = YccchI['zpQwd'](lcm, N, M);\n    var flag = !![];\n    var X = [];\n    for (var i = 0x0; YccchI['lpjOb'](i, L); i++) {\n        X['push']('');\n    }\n    X[0x0] = S[0x0];\n    for (var i = 0x1; YccchI['iLlZa'](i, S['length']); i++) {\n        X[YccchI['LLtPX'](i, YccchI['sxlXA'](L, N))] = S[i];\n    }\n    if (X[0x0] != T[0x0]) {\n        console['log']('-1');\n    } else {\n        for (var i = 0x1; i < T['length']; i++) {\n            if (YccchI['qVXxn'](X[YccchI['bVPpm'](i, YccchI['sxlXA'](L, M))], '') && YccchI['ylssE'](X[YccchI['dkPSE'](i, L / M)], T[i])) {\n                console['log']('-1');\n                flag = ![];\n                break;\n            }\n        }\n    }\n    if (flag) {\n        console['log'](L);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\nacp\nae", "6"], ["6 3\nabcdef\nabc", "-1"], ["15 9\ndnsusrayukuaiia\ndujrunuma", "45"]], "original": "function toNum(str) {\n\treturn parseInt(str, 10);\n}\n\n// 最大公約数\nfunction gcd(a, b) {\n\tif (a % b === 0) {\n\t\treturn b;\n\t} else {\n\t\treturn gcd(b, a % b);\n\t}\n}\n\n// 最小公倍数\nfunction lcm(a, b) {\n\treturn a * b / gcd(a, b);\n}\n\n// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar N = toNum(input.split('\\n')[0].split(' ')[0]);\n\tvar M = toNum(input.split('\\n')[0].split(' ')[1]);\n\tvar S = input.split('\\n')[1];\n\tvar T = input.split('\\n')[2];\n\tvar L = lcm(N, M);\n\tvar flag = true;\n\tvar X = [];\n\tfor ( var i = 0; i < L; i++) {\n\t\tX.push('');\n\t}\n\tX[0] = S[0];\n\tfor ( var i = 1; i < S.length; i++ ) {\n\t\tX[i * (L / N)] = S[i];\n\t}\n\tif ( X[0] != T[0] ) {\n\t\tconsole.log('-1');\n\t} else {\n\t\tfor (var i = 1; i < T.length; i++) {\n\t\t\tif (X[i * (L / M)] != '' && X[i * (L / M)] != T[i]) {\n\t\t\t\tconsole.log('-1');\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ( flag ) {\n\t\tconsole.log(L);\n\t}\n}\n\n// ※この行以降は編集しない (標準入力から一度に読み込みMainを呼び出します)\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03284_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var sLkawQ = {\n        'HjRyB': '1|3|5|0|4|2',\n        'ekHxW': function (x, y) {\n            return x === y;\n        },\n        'yCQTW': function (x, y) {\n            return x % y;\n        },\n        'SVEwo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var OarFRh = sLkawQ['HjRyB']['split']('|');\n    var zUHpTO = 0x0;\n    while (!![]) {\n        switch (OarFRh[zUHpTO++]) {\n        case '0':\n            K = parseInt(K, 0xa);\n            continue;\n        case '1':\n            var N = input['split']('\\x20')[0x0];\n            continue;\n        case '2':\n            if (jud) {\n                console['log'](0x0);\n            } else {\n                console['log'](0x1);\n            }\n            continue;\n        case '3':\n            var K = input['split']('\\x20')[0x1];\n            continue;\n        case '4':\n            var jud = sLkawQ['ekHxW'](sLkawQ['yCQTW'](N, K), 0x0);\n            continue;\n        case '5':\n            N = sLkawQ['SVEwo'](parseInt, N, 0xa);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 3", "1"], ["100 10", "0"], ["1 1", "0"]], "original": "function Main(input){\n  var N = input.split(\" \")[0];\n  var K = input.split(\" \")[1];\n  N = parseInt(N,10);\n  K = parseInt(K,10);\n\n  var jud = N%K === 0;\n  if(jud){\n    console.log(0);\n  }else{\n    console.log(1);\n  }\n}\n  Main(require('fs').readFileSync('/dev/stdin','utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03329_1", "type": "JavaScript", "obfuscated": "function equal(a, b) {\n    var BgwPcw = {\n        'sfRQf': '4|2|3|0|1',\n        'cCUNt': function (x, y) {\n            return x !== y;\n        },\n        'cVJEn': function (x, y) {\n            return x != y;\n        }\n    };\n    var prBjEy = BgwPcw['sfRQf']['split']('|');\n    var iLtpuF = 0x0;\n    while (!![]) {\n        switch (prBjEy[iLtpuF++]) {\n        case '0':\n            for (var i = 0x0; i < aP['length']; i++)\n                if (BgwPcw['cCUNt'](a[aP[i]], b[aP[i]]))\n                    return ![];\n            continue;\n        case '1':\n            return !![];\n        case '2':\n            var bP = Object['getOwnPropertyNames'](b);\n            continue;\n        case '3':\n            if (BgwPcw['cVJEn'](aP['length'], bP['length']))\n                return ![];\n            continue;\n        case '4':\n            var aP = Object['getOwnPropertyNames'](a);\n            continue;\n        }\n        break;\n    }\n}\nfunction pi(text) {\n    var CrniSS = {\n        'tjQQi': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return CrniSS['tjQQi'](parseInt, text, 0xa);\n}\nvar six = [\n    0x6,\n    0x5,\n    0x4,\n    0x3,\n    0x2,\n    0x1\n]['map'](_ => Math['pow'](0x6, _));\nvar nine = [\n    0x5,\n    0x4,\n    0x3,\n    0x2,\n    0x1\n]['map'](_ => Math['pow'](0x9, _));\nfunction count(i) {\n    var zBPMzh = {\n        'TLHyY': function (x, y) {\n            return x < y;\n        },\n        'xpIwI': function (x, y) {\n            return x < y;\n        },\n        'QijWl': function (x, y) {\n            return x - y;\n        },\n        'FYNJT': function (x, y) {\n            return x + y;\n        },\n        'bdyhS': function (callee, param1) {\n            return callee(param1);\n        },\n        'iYEcm': function (x, y) {\n            return x - y;\n        }\n    };\n    if (zBPMzh['TLHyY'](i, 0x6))\n        return i;\n    if (zBPMzh['xpIwI'](i, 0x9))\n        return 0x1 + zBPMzh['QijWl'](i, 0x6);\n    return Math['min'](zBPMzh['FYNJT'](count(zBPMzh['QijWl'](i, six['find'](_ => _ <= i))), 0x1), zBPMzh['FYNJT'](zBPMzh['bdyhS'](count, zBPMzh['iYEcm'](i, nine['find'](_ => _ <= i))), 0x1));\n}\nfunction main(input) {\n    var oOQfIN = {\n        'KmSdp': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var i = oOQfIN['KmSdp'](pi, input);\n    console['log'](count(i));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["127", "4"], ["3", "3"], ["44852", "16"]], "original": "function equal(a, b) {\n    var aP = Object.getOwnPropertyNames(a);\n    var bP = Object.getOwnPropertyNames(b);\n    if (aP.length != bP.length)\n        return false;\n    for (var i = 0; i < aP.length; i++)\n        if (a[aP[i]] !== b[aP[i]])\n            return false;\n    return true;\n}\nfunction pi(text) {\n    return parseInt(text, 10);\n}\nvar six = [6, 5, 4, 3, 2, 1].map(_ => Math.pow(6, _));\nvar nine = [5, 4, 3, 2, 1].map(_ => Math.pow(9, _));\nfunction count(i) {\n    if (i < 6)\n        return i;\n    if (i < 9)\n        return 1 + (i - 6);\n    return Math.min(count(i - six.find(_ => _ <= i)) + 1, count(i - nine.find(_ => _ <= i)) + 1);\n}\nfunction main(input) {\n    var i = pi(input);\n    console.log(count(i));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03449_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const gwHdtE = {\n        'dtBsx': function (x, y) {\n            return x - y;\n        },\n        'wsnZr': function (x, y) {\n            return x < y;\n        },\n        'qRAJd': function (x, y) {\n            return x - y;\n        },\n        'NgaaA': function (x, y) {\n            return x <= y;\n        },\n        'ksEvV': function (callee, param1) {\n            return callee(param1);\n        },\n        'oXPIt': function (x, y) {\n            return x + y;\n        },\n        'YYQeq': function (x, y) {\n            return x < y;\n        }\n    };\n    const setting = input['trim']()['split']('\\x0a');\n    const process_sum = gwHdtE['dtBsx'](setting[0x0], 0x0);\n    const up = setting[0x1]['split']('\\x20');\n    const down = setting[0x2]['split']('\\x20');\n    let answer = 0x0;\n    for (let process_up = 0x0; gwHdtE['wsnZr'](process_up, process_sum); process_up++) {\n        let process_down = gwHdtE['dtBsx'](gwHdtE['qRAJd'](process_sum, process_up), 0x1);\n        let candies = 0x0;\n        for (let i = 0x0; i <= process_up; i++) {\n            candies += parseInt(up[i]);\n        }\n        for (let i = 0x0; gwHdtE['NgaaA'](i, process_down); i++) {\n            candies += gwHdtE['ksEvV'](parseInt, down[gwHdtE['oXPIt'](process_up, i)]);\n        }\n        if (gwHdtE['YYQeq'](answer, candies)) {\n            answer = candies;\n        }\n    }\n    console['log'](answer);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n3 2 2 4 1\n1 2 2 2 1", "14"], ["4\n1 1 1 1\n1 1 1 1", "5"], ["7\n3 3 4 5 4 5 3\n5 3 4 4 2 3 2", "29"], ["1\n2\n3", "5"]], "original": "function Main(input) {\n\tconst setting = input.trim().split('\\n')\n  const process_sum = setting[0] - 0\n  const up = setting[1].split(' ')\n  const down = setting[2].split(' ')\n\n  let answer = 0\n\n  for (let process_up = 0; process_up < process_sum; process_up++) {\n    let process_down = process_sum - process_up - 1\n    let candies = 0\n    for (let i = 0; i <= process_up; i++) {\n      candies += parseInt(up[i])\n    }\n\n    for (let i = 0; i <= process_down; i++) {\n      candies += parseInt(down[process_up + i])\n    }\n    if (answer < candies) {\n      answer = candies\n    }\n  }\n\n  console.log(answer)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03631_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var pptffP = {\n        'ZabEh': function (callee, param1) {\n            return callee(param1);\n        },\n        'klWAf': function (x, y) {\n            return x == y;\n        },\n        'sSDjM': 'Yes'\n    };\n    var tmp = pptffP['ZabEh'](String, input);\n    var truecount = 0x0;\n    if (pptffP['klWAf'](tmp[0x2], tmp[0x0])) {\n        console['log'](pptffP['sSDjM']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["575", "Yes"], ["123", "No"], ["812", "No"]], "original": "function Main(input) {\n        var tmp = String(input);\n        var truecount = 0;\n        if(tmp[2] == tmp[0]) {\n           console.log(\"Yes\");\n        } else {\n           console.log(\"No\");\n        }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03633_1", "type": "JavaScript", "obfuscated": "log = console['log'];\nvar stdin = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nvar lines = stdin['split']('\\x0a');\nvar N = lines[0x0]['split']('\\x20')['map'](Number)[0x0];\nvar T = lines['slice'](0x1)['filter'](v => v !== '')['map'](Number);\nfunction gcd(a, b) {\n    if (b === 0x0)\n        return a;\n    return gcd(b, a % b);\n}\nfunction lcm(a, b) {\n    var yOCxDd = {\n        'OeHCI': function (x, y) {\n            return x / y;\n        },\n        'RudVX': function (x, y) {\n            return x * y;\n        },\n        'eYYdE': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return yOCxDd['OeHCI'](yOCxDd['RudVX'](a, b), yOCxDd['eYYdE'](gcd, a, b));\n}\nfor (var i = 0x1; i < N; i++) {\n    T[i] = lcm(T[i], T[i - 0x1]);\n}\nlog(T[N - 0x1]);", "test_cases": [["2\n2\n3", "6"], ["5\n2\n5\n10\n1000000000000000000\n1000000000000000000", "1000000000000000000"]], "original": "log = console.log;\n\nvar stdin = require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\");\nvar lines = stdin.split(\"\\n\");\nvar N = lines[0].split(\" \").map(Number)[0];\nvar T = lines\n  .slice(1)\n  .filter(v => v !== \"\")\n  .map(Number);\n\nfunction gcd(a,b){\n  if(b === 0) return a\n  return gcd(b,a % b)\n}\n\nfunction lcm(a,b){\n  return a * b / gcd(a,b)\n}\n\nfor(var i=1; i<N;i++){\n  T[i] = lcm(T[i],T[i-1])\n}\n\nlog(T[N-1])", "language": "JavaScript"}
{"filename": "p04011_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nfunction Main(input) {\n    var CKyKAo = {\n        'UyJPp': '7|5|2|1|3|9|4|8|0|6|10',\n        'dvqUC': function (callee, param1) {\n            return callee(param1);\n        },\n        'mHtpI': 'initial_answer',\n        'pVEvG': function (x, y) {\n            return x < y;\n        },\n        'rxogr': function (x, y) {\n            return x * y;\n        },\n        'QsqYG': function (x, y) {\n            return x + y;\n        },\n        'rASkF': function (x, y) {\n            return x * y;\n        },\n        'BOIbL': function (x, y) {\n            return x - y;\n        }\n    };\n    var Ifvqbk = CKyKAo['UyJPp']['split']('|');\n    var rMuTYy = 0x0;\n    while (!![]) {\n        switch (Ifvqbk[rMuTYy++]) {\n        case '0':\n            var input4 = CKyKAo['dvqUC'](Number, line3[0x0]);\n            continue;\n        case '1':\n            var line2 = arg[0x2]['split']('\\x20');\n            continue;\n        case '2':\n            var line1 = arg[0x1]['split']('\\x20');\n            continue;\n        case '3':\n            var line3 = arg[0x3]['split']('\\x20');\n            continue;\n        case '4':\n            var input2 = Number(line1[0x0]);\n            continue;\n        case '5':\n            var line0 = arg[0x0]['split']('\\x20');\n            continue;\n        case '6':\n            var ans = CKyKAo['mHtpI'];\n            continue;\n        case '7':\n            var arg = input['split']('\\x0a');\n            continue;\n        case '8':\n            var input3 = CKyKAo['dvqUC'](Number, line2[0x0]);\n            continue;\n        case '9':\n            var input1 = CKyKAo['dvqUC'](Number, line0[0x0]);\n            continue;\n        case '10':\n            if (CKyKAo['pVEvG'](input1, input2))\n                console['log'](CKyKAo['rxogr'](input3, input1));\n            else\n                console['log'](CKyKAo['QsqYG'](input3 * input2, CKyKAo['rASkF'](CKyKAo['BOIbL'](input1, input2), input4)));\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n3\n10000\n9000", "48000"], ["2\n3\n10000\n9000", "20000"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var arg   = input.split(\"\\n\");\n  var line0 = arg[0].split(\" \");\n  var line1 = arg[1].split(\" \");\n  var line2 = arg[2].split(\" \");\n  var line3 = arg[3].split(\" \");\n\n  var input1 = Number(line0[0]);\n  var input2 = Number(line1[0]);\n  var input3 = Number(line2[0]);\n  var input4 = Number(line3[0]);\n//  var a = input2;\n  //var b = input3;\n\n  var ans = \"initial_answer\";\n  //console.log( \"[INPUT] \"+ input1 +\" \"+ input2 +\" \"+ input3 + \" \" + input4 );\n  \n  // LOGIC //\n\n  if(input1 < input2) console.log( input3 * input1);\n  else console.log( input3 * input2 + ((input1 - input2) * input4) );\n\n\n  \n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p00003_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var amIKFv = {\n        'DEsOU': function (x, y) {\n            return x > y;\n        },\n        'IyKbx': function (x, y) {\n            return x < y;\n        },\n        'RpxER': '7|6|0|2|5|3|1|4',\n        'LpVjo': function (x, y) {\n            return x * y;\n        },\n        'uSpeG': function (x, y) {\n            return x === y;\n        }\n    };\n    var JPrFHF = '0|1|4|2|3'['split']('|');\n    var xpEnkO = 0x0;\n    while (!![]) {\n        switch (JPrFHF[xpEnkO++]) {\n        case '0':\n            var ibIvzm = {\n                'DvZDe': function (x, y) {\n                    return amIKFv['DEsOU'](x, y);\n                },\n                'zuBov': function (x, y) {\n                    return amIKFv['IyKbx'](x, y);\n                }\n            };\n            continue;\n        case '1':\n            var aaa = chunk['toString']();\n            continue;\n        case '2':\n            line['shift']();\n            continue;\n        case '3':\n            for (var i in line) {\n                var nuFwVu = amIKFv['RpxER']['split']('|');\n                var JpFozu = 0x0;\n                while (!![]) {\n                    switch (nuFwVu[JpFozu++]) {\n                    case '0':\n                        l['sort'](function (a, b) {\n                            if (ibIvzm['DvZDe'](a, b))\n                                return -0x1;\n                            if (ibIvzm['zuBov'](a, b))\n                                return 0x1;\n                            return 0x0;\n                        });\n                        continue;\n                    case '1':\n                        var num4 = num2 + num3;\n                        continue;\n                    case '2':\n                        var num1 = amIKFv['LpVjo'](new Number(l[0x0]), new Number(l[0x0]));\n                        continue;\n                    case '3':\n                        var num3 = new Number(l[0x2]) * new Number(l[0x2]);\n                        continue;\n                    case '4':\n                        if (amIKFv['uSpeG'](num1, num4)) {\n                            console['log']('YES');\n                        } else {\n                            console['log']('NO');\n                        }\n                        continue;\n                    case '5':\n                        var num2 = new Number(l[0x1]) * new Number(l[0x1]);\n                        continue;\n                    case '6':\n                        for (var i in l) {\n                            l[i] = new Number(l[i]);\n                        }\n                        continue;\n                    case '7':\n                        var l = line[i]['split']('\\x20');\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '4':\n            var line = aaa['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["3\n4 3 5\n4 3 6\n8 8 8", "YES\nNO\nNO"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    var aaa = chunk.toString();\n    var line = aaa.split(\"\\n\")\n    //line.pop();\n    line.shift();\n    for(var i in line){\n        var l = line[i].split(\" \")\n        for(var i in l){\n            l[i] = new Number(l[i]);\n        }\n        l.sort(function(a,b){\n            if( a > b ) return -1;\n            if( a < b ) return 1;\n            return 0;\n        });\n        var num1 = new Number(l[0]) *new Number(l[0]);\n        var num2 = new Number(l[1])*new Number(l[1]);\n        var num3 = new Number(l[2])*new Number(l[2]);\n        var num4 = num2+num3;\n        if(num1 === num4){\n            console.log(\"YES\");\n        }else{\n            console.log(\"NO\")\n            \n        }\n    }\n});", "language": "JavaScript"}
{"filename": "p02258_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var DblXBU = {\n        'wvVZW': function (x, y) {\n            return x >= y;\n        },\n        'aBwnv': function (x, y) {\n            return x + y;\n        },\n        'aWJGo': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var EInWfv = '1|6|3|7|5|0|2|4'['split']('|');\n    var UuTMCu = 0x0;\n    while (!![]) {\n        switch (EInWfv[UuTMCu++]) {\n        case '0':\n            for (var i = 0x1; i <= N - 0x1; i++) {\n                if (DblXBU['wvVZW'](min, values[i])) {\n                    min = values[i];\n                }\n                if (DblXBU['wvVZW'](values[DblXBU['aBwnv'](i, 0x1)] - min, val)) {\n                    val = values[i + 0x1] - min;\n                }\n            }\n            continue;\n        case '1':\n            var LbsGFl = {\n                'CgAdo': function (callee, param1) {\n                    return DblXBU['aWJGo'](callee, param1);\n                }\n            };\n            continue;\n        case '2':\n            console['log'](val);\n            continue;\n        case '3':\n            var values = input['map'](function (v) {\n                return LbsGFl['CgAdo'](parseInt, v);\n            });\n            continue;\n        case '4':\n            return val;\n        case '5':\n            var N = values[0x0];\n            continue;\n        case '6':\n            input = input['split']('\\x0a');\n            continue;\n        case '7':\n            var min = Number['MAX_VALUE'], val = -Number['MAX_VALUE'];\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n5\n3\n1\n3\n4\n3", "3"], ["3\n4\n3\n2", "-1"]], "original": "function main(input) {\n  input = input.split(\"\\n\");\n  var values = input.map(function(v) { return parseInt(v); });\n\n  var min = Number.MAX_VALUE, val = -Number.MAX_VALUE;\n  var N = values[0];\n  for (var i = 1; i <= N-1; i++) {\n    if (min >= values[i]) {\n      min = values[i];\n    }\n    if (values[i+1] - min >= val) {\n      val = values[i+1] - min;\n    }\n  }\n  console.log(val);\n  return val;\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02415_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    console['log'](input['replace'](/\\n$/, '')['split']('')['map'](function (e) {\n        if (e['match'](/[a-z]/)) {\n            return e['toUpperCase']();\n        } else if (e['match'](/[A-Z]/)) {\n            return e['toLowerCase']();\n        }\n        return e;\n    })['join'](''));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["fAIR, LATER, OCCASIONALLY CLOUDY.", "Fair, later, occasionally cloudy."]], "original": "(function(input) {\n    console.log(input.replace(/\\n$/, '').split('').map(function(e) {\n        if (e.match(/[a-z]/)) {\n            return e.toUpperCase();\n        } else if (e.match(/[A-Z]/)) {\n            return e.toLowerCase();\n        }\n        return e;\n    }).join(''));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02725_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const GlPiXN = {\n        'NNHuG': function (callee, param1) {\n            return callee(param1);\n        },\n        'WThEY': function (x, y) {\n            return x < y;\n        },\n        'QoDKO': function (x, y) {\n            return x - y;\n        },\n        'AvAkm': function (x, y) {\n            return x - y;\n        }\n    };\n    const args = input['split']('\\x0a')[0x0];\n    const a = input['split']('\\x0a')[0x1];\n    let as = a['split']('\\x20');\n    const K = GlPiXN['NNHuG'](Number, args['split']('\\x20')[0x0]);\n    const N = Number(args['split']('\\x20')[0x1]);\n    let ans = 0x0;\n    const kh = Math['floor'](K / 0x2);\n    for (let i = 0x0; GlPiXN['WThEY'](i, N); i++) {\n        ans += Math['abs'](GlPiXN['QoDKO'](0x0, as[i])) > Math['abs'](GlPiXN['AvAkm'](kh, as[i])) ? Math['abs'](GlPiXN['AvAkm'](kh, as[i])) : Math['abs'](GlPiXN['QoDKO'](0x0, as[i]));\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["20 3\n5 10 15", "10"], ["20 3\n0 5 15", "10"]], "original": "\"use strict\"\n// input\nfunction main(input) {\n    const args = input.split('\\n')[0];\n    const a = input.split('\\n')[1];\n    let as = a.split(' ');\n    \n    const K = Number(args.split(' ')[0]);\n    const N = Number(args.split(' ')[1]);\n    let ans = 0;\n    const kh = Math.floor(K / 2);\n    for (let i = 0; i < N; i++) {\n        ans += Math.abs(0 - as[i]) > Math.abs(kh - as[i]) ? Math.abs(kh - as[i]) : Math.abs(0 - as[i]);\n    }\n    console.log(ans);\n}\n\n// output\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02820_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var CAuxdC = {\n        'aaXQE': function (x, y) {\n            return x - y;\n        },\n        'gupPy': function (x, y) {\n            return x - y;\n        },\n        'mmMMW': function (x, y) {\n            return x - y;\n        },\n        'DNNBC': function (x, y) {\n            return x >= y;\n        },\n        'NfozP': function (x, y) {\n            return x - y;\n        },\n        'LuoAP': function (x, y) {\n            return x == y;\n        },\n        'ybQag': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var tmp0 = input[0x0]['split']('\\x20');\n    var N = CAuxdC['aaXQE'](tmp0[0x0], 0x0);\n    var K = CAuxdC['aaXQE'](tmp0[0x1], 0x0);\n    var tmp1 = input[0x1]['split']('\\x20');\n    var point = {\n        'r': CAuxdC['gupPy'](tmp1[0x2], 0x0),\n        's': CAuxdC['mmMMW'](tmp1[0x0], 0x0),\n        'p': CAuxdC['gupPy'](tmp1[0x1], 0x0)\n    };\n    var str = input[0x2];\n    var sum = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var char = str[i];\n        var charBK = '';\n        if (CAuxdC['DNNBC'](CAuxdC['mmMMW'](i, K), 0x0)) {\n            charBK = str[CAuxdC['NfozP'](i, K)];\n        }\n        if (CAuxdC['LuoAP'](char, charBK)) {\n            str = CAuxdC['ybQag'](str['slice'](0x0, i) + 'B', str['slice'](i + 0x1));\n            continue;\n        }\n        sum += point[char];\n    }\n    console['log'](sum);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2\n8 7 6\nrsrpr", "27"], ["7 1\n100 10 1\nssssppr", "211"], ["30 5\n325 234 123\nrspsspspsrpspsppprpsprpssprpsr", "4996"]], "original": "function Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  \n  //入力データ取得\n  var tmp0 = input[0].split(\" \");\n  var N = tmp0[0] - 0;\n  var K = tmp0[1] - 0;\n  var tmp1 = input[1].split(\" \");\n  \n  var point = {r:tmp1[2]-0,s:tmp1[0]-0,p:tmp1[1]-0};\n  var str = input[2];\n  var sum = 0;\n  \n  for(var i=0; i<N; i++){\n    var char = str[i];\n    var charBK = \"\";\n    if(i-K >= 0){\n      charBK = str[i-K];\n    }\n    if(char == charBK){\n      str = str.slice(0,i) + 'B' + str.slice(i+1);\n      continue;\n    }\n    sum += point[char];\n  }\n  //出力\n  console.log(sum);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02835_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uVpOAv = {\n        'aNsiS': function (x, y) {\n            return x + y;\n        },\n        'TkBcP': function (x, y) {\n            return x + y;\n        },\n        'nteMc': function (callee, param1) {\n            return callee(param1);\n        },\n        'forHq': function (x, y) {\n            return x > y;\n        },\n        'MLZyu': 'win'\n    };\n    input = input['split']('\\x20');\n    tmp = uVpOAv['aNsiS'](uVpOAv['TkBcP'](uVpOAv['nteMc'](parseInt, input[0x0]), uVpOAv['nteMc'](parseInt, input[0x1])), uVpOAv['nteMc'](parseInt, input[0x2]));\n    if (uVpOAv['forHq'](tmp, 0x15)) {\n        console['log']('bust');\n    } else {\n        console['log'](uVpOAv['MLZyu']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 7 9", "win"], ["13 7 2", "bust"]], "original": "function Main(input){\n    input = input.split(\" \");\n    tmp = parseInt(input[0]) + parseInt(input[1]) + parseInt(input[2]);\n    if(tmp > 21){\n     console.log(\"bust\");   \n    }else{\n     console.log(\"win\");\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02837_1", "type": "JavaScript", "obfuscated": "'use strict';\nconsole['log'](function (args) {\n    const QuBhZR = {\n        'vifwX': function (x, y) {\n            return x | y;\n        },\n        'ZnGpf': function (x, y) {\n            return x < y;\n        },\n        'WZVuE': function (x, y) {\n            return x | y;\n        },\n        'XMGaR': function (x, y) {\n            return x << y;\n        },\n        'wTPBv': function (x, y) {\n            return x < y;\n        },\n        'CmaKB': function (x, y) {\n            return x & y;\n        },\n        'FIhpZ': function (x, y) {\n            return x !== y;\n        },\n        'WqAkb': function (x, y) {\n            return x > y;\n        }\n    };\n    const _tmp = args['trim']()['split']('\\x0a');\n    const N = _tmp['shift']() | 0x0;\n    const A = [], x = [], y = [];\n    for (let i = 0x0; i < N; i++) {\n        A[i] = QuBhZR['vifwX'](_tmp['shift'](), 0x0);\n        x[i] = [];\n        y[i] = [];\n        for (let j = 0x0; QuBhZR['ZnGpf'](j, A[i]); j++) {\n            const xy = _tmp[j]['split']('\\x20');\n            x[i][j] = xy[0x0] - 0x1;\n            y[i][j] = QuBhZR['WZVuE'](xy[0x1], 0x0);\n        }\n        _tmp['splice'](0x0, A[i]);\n    }\n    let K = 0x0;\n    TEST:\n        for (let honest = 0x1; QuBhZR['ZnGpf'](honest, QuBhZR['XMGaR'](0x1, N)); honest++) {\n            let k = 0x0;\n            for (let i = 0x0; QuBhZR['wTPBv'](i, N); i++) {\n                if (!QuBhZR['CmaKB'](honest, 0x1 << i))\n                    continue;\n                k++;\n                for (let j = 0x0; j < A[i]; j++) {\n                    const Xij = x[i][j], Yij = y[i][j];\n                    const target = QuBhZR['CmaKB'](honest, QuBhZR['XMGaR'](0x1, Xij));\n                    if (QuBhZR['FIhpZ'](target, Yij << Xij))\n                        continue TEST;\n                }\n            }\n            if (QuBhZR['WqAkb'](k, K))\n                K = k;\n        }\n    return K;\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n1\n2 1\n1\n1 1\n1\n2 0", "2"], ["3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0", "0"], ["2\n1\n2 0\n1\n1 0", "1"]], "original": "'use strict';\nconsole.log(function(args){\n  const _tmp = args.trim().split('\\n');\n  const N = _tmp.shift()|0;\n  const A = [], x = [], y = [];\n  for ( let i = 0; i < N; i++ ) {\n    A[i] = _tmp.shift()|0;\n    x[i] = []; y[i] = [];\n    for ( let j = 0; j < A[i]; j++ ) {\n      const xy = _tmp[j].split(' ');\n      x[i][j] = xy[0]-1; y[i][j] = xy[1]|0;\n    }\n    _tmp.splice(0,A[i]);\n  }\n  let K = 0;\n  TEST: for ( let honest = 1; honest < 1<<N; honest++ ) {\n    let k = 0;\n    for ( let i = 0; i < N; i++ ) {\n        if ( !(honest&1<<i) ) continue;\n      k++;\n      for ( let j = 0; j < A[i]; j++ ) {\n        const Xij = x[i][j], Yij = y[i][j];\n        const target = honest&(1<<Xij);\n        if ( target!==(Yij<<Xij) ) continue TEST;\n      }\n    }\n    if ( k > K ) K = k;\n  }\n  return K;\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03129_1", "type": "JavaScript", "obfuscated": "function main(arg) {\n    var Ofsvbl = {\n        'WgTBU': '5|2|0|4|1|3',\n        'TLfUG': 'YES'\n    };\n    var EzwouR = Ofsvbl['WgTBU']['split']('|');\n    var DxgovV = 0x0;\n    while (!![]) {\n        switch (EzwouR[DxgovV++]) {\n        case '0':\n            var K = Number(arg[0x1]);\n            continue;\n        case '1':\n            for (var i = 0x1; i <= N; i += 0x2) {\n                count++;\n            }\n            continue;\n        case '2':\n            var N = Number(arg[0x0]);\n            continue;\n        case '3':\n            if (K > count) {\n                console['log']('NO');\n            } else {\n                console['log'](Ofsvbl['TLfUG']);\n            }\n            continue;\n        case '4':\n            var count = 0x0;\n            continue;\n        case '5':\n            arg = arg['split']('\\x0a')[0x0]['split']('\\x20');\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2", "YES"], ["5 5", "NO"], ["31 10", "YES"], ["10 90", "NO"]], "original": "function main(arg) {\n\targ = arg.split(\"\\n\")[0].split(\" \")\n\tvar N = Number(arg[0])\n\tvar K = Number(arg[1])\n\tvar count = 0\n\tfor (var i = 1; i <= N; i+=2 ) {\n\t\tcount++\n\t}\n\tif (K > count) {\n\t\tconsole.log(\"NO\")\n\t} else {\n\t\tconsole.log(\"YES\")\n\t}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03260_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['split'](/\\s/);\nconst A = Number(input[0x0]);\nconst B = Number(input[0x1]);\nvar result = A === 0x2 || B === 0x2 ? 'No' : 'Yes';\nconsole['log'](result);", "test_cases": [["3 1", "Yes"], ["1 2", "No"], ["2 2", "No"]], "original": "var input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\ninput = input.split(/\\s/);\n\nconst A = Number(input[0]);\nconst B = Number(input[1]);\n\nvar result = (A === 2 || B === 2) ? \"No\" : \"Yes\";\n\nconsole.log(result);\n", "language": "JavaScript"}
{"filename": "p03283_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const UhzEfM = {\n        'ZajRt': function (x, y) {\n            return x < y;\n        },\n        'freiU': function (x, y) {\n            return x <= y;\n        },\n        'yuSGv': function (x, y) {\n            return x - y;\n        },\n        'PTEBN': function (x, y) {\n            return x - y;\n        }\n    };\n    let lines = input['split']('\\x0a');\n    let nmq = lines['shift']()['split'](/\\s/)['map'](v => v - 0x0);\n    let N = nmq[0x0], M = nmq[0x1], Q = nmq[0x2];\n    let T = new Array(N + 0x1)['fill'](0x0)['map'](() => new Array(N + 0x1)['fill'](0x0));\n    for (let m = 0x0; UhzEfM['ZajRt'](m, M); m++) {\n        let lr = lines['shift']()['split'](/\\s/)['map'](v => v - 0x0);\n        T[lr[0x0]][lr[0x1]] += 0x1;\n    }\n    for (let p = 0x1; UhzEfM['freiU'](p, N); p++) {\n        for (let q = 0x1; q <= N; q++) {\n            T[p][q] += T[p - 0x1][q];\n            T[p][q] += T[p][UhzEfM['yuSGv'](q, 0x1)];\n            T[p][q] -= T[p - 0x1][UhzEfM['PTEBN'](q, 0x1)];\n        }\n    }\n    for (let n = 0x0; UhzEfM['ZajRt'](n, Q); n++) {\n        let pq = lines['shift']()['split'](/\\s/)['map'](v => v - 0x0);\n        let p = pq[0x0], q = pq[0x1];\n        console['log'](UhzEfM['yuSGv'](T[q][q], T[UhzEfM['PTEBN'](p, 0x1)][q]));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 1\n1 1\n1 2\n2 2\n1 2", "3"], ["10 3 2\n1 5\n2 8\n7 10\n1 7\n3 10", "1\n1"], ["10 10 10\n1 6\n2 9\n4 5\n4 7\n4 7\n5 8\n6 6\n6 7\n7 9\n10 10\n1 8\n1 9\n1 10\n2 8\n2 9\n2 10\n3 8\n3 9\n3 10\n1 10", "7\n9\n10\n6\n8\n9\n6\n7\n8\n10"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let nmq = lines.shift().split(/\\s/).map((v) => v - 0);\n    let N = nmq[0], M = nmq[1], Q = nmq[2];\n    let T = new Array(N+1).fill(0).map(() => new Array(N+1).fill(0));\n    for (let m = 0; m < M; m++) {\n        let lr = lines.shift().split(/\\s/).map((v) => v - 0);\n        T[lr[0]][lr[1]] += 1;\n    }\n    for (let p = 1; p <= N; p++) {\n        for (let q = 1; q <= N; q++) {\n            T[p][q] += T[p - 1][q];\n            T[p][q] += T[p][q - 1];\n            T[p][q] -= T[p - 1][q - 1];\n        }\n    }\n    for (let n = 0; n < Q; n++) {\n        let pq = lines.shift().split(/\\s/).map((v) => v - 0);\n        let p = pq[0], q = pq[1];\n        console.log(T[q][q] - T[p - 1][q]);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03326_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var PvIZDg = {\n        'ieret': '3|1|4|8|7|0|5|6|2|9',\n        'AuFua': function (callee, param1) {\n            return callee(param1);\n        },\n        'WQvmC': function (x, y) {\n            return x < y;\n        },\n        'WtJwN': function (x, y) {\n            return x > y;\n        },\n        'oXWZu': function (x, y) {\n            return x < y;\n        },\n        'cGTlr': function (x, y) {\n            return x + y;\n        },\n        'Yqxqc': function (x, y) {\n            return x + y;\n        },\n        'ToybT': function (x, y) {\n            return x + y;\n        },\n        'tnInC': function (x, y) {\n            return x + y;\n        },\n        'lqVfC': function (x, y) {\n            return x - y;\n        },\n        'pylNB': function (x, y) {\n            return x - y;\n        }\n    };\n    var TrsXts = PvIZDg['ieret']['split']('|');\n    var IwbWQu = 0x0;\n    while (!![]) {\n        switch (TrsXts[IwbWQu++]) {\n        case '0':\n            var a = PvIZDg['AuFua'](Array, 0x4)['fill'](0x0)['map'](a => Array(n));\n            continue;\n        case '1':\n            var n = s[0x0]['split']('\\x20')['map'](a => +a);\n            continue;\n        case '2':\n            for (i = 0x0; PvIZDg['WQvmC'](i, 0x4); i++) {\n                a[i]['sort']((a, b) => a - b);\n                var t = 0x0;\n                for (var j = 0x0; PvIZDg['WQvmC'](j, m); j++) {\n                    t += a[i][j];\n                }\n                ans = Math['max'](ans, Math['abs'](t));\n                t = 0x0;\n                for (j = n; PvIZDg['WtJwN'](j, n - m);) {\n                    t += a[i][--j];\n                }\n                ans = Math['max'](ans, Math['abs'](t));\n            }\n            continue;\n        case '3':\n            s = s['split']('\\x0a');\n            continue;\n        case '4':\n            var m = n[0x1];\n            continue;\n        case '5':\n            for (var i = 0x0; PvIZDg['oXWZu'](i, n); i++) {\n                var nqGMpm = '4|0|2|3|1'['split']('|');\n                var SrSAxR = 0x0;\n                while (!![]) {\n                    switch (nqGMpm[SrSAxR++]) {\n                    case '0':\n                        a[0x0][i] = PvIZDg['cGTlr'](PvIZDg['Yqxqc'](x[0x0], x[0x1]), x[0x2]);\n                        continue;\n                    case '1':\n                        a[0x3][i] = PvIZDg['ToybT'](PvIZDg['tnInC'](-x[0x0], x[0x1]), x[0x2]);\n                        continue;\n                    case '2':\n                        a[0x1][i] = PvIZDg['lqVfC'](PvIZDg['cGTlr'](x[0x0], x[0x1]), x[0x2]);\n                        continue;\n                    case '3':\n                        a[0x2][i] = PvIZDg['tnInC'](PvIZDg['pylNB'](x[0x0], x[0x1]), x[0x2]);\n                        continue;\n                    case '4':\n                        x = s[PvIZDg['Yqxqc'](i, 0x1)]['split']('\\x20')['map'](a => +a);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '6':\n            var ans = 0x0;\n            continue;\n        case '7':\n            var x;\n            continue;\n        case '8':\n            n = n[0x0];\n            continue;\n        case '9':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9", "56"], ["5 3\n1 -2 3\n-4 5 -6\n7 -8 -9\n-10 11 -12\n13 -14 15", "54"], ["10 5\n10 -80 21\n23 8 38\n-94 28 11\n-26 -2 18\n-69 72 79\n-26 -86 -54\n-72 -50 59\n21 65 -32\n40 -94 87\n-62 18 82", "638"], ["3 2\n2000000000 -9000000000 4000000000\n7000000000 -5000000000 3000000000\n6000000000 -1000000000 8000000000", "30000000000"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1];\n  n = n[0];\n  var x;\n  var a = Array(4).fill(0).map(a=>Array(n));\n  for(var i = 0; i < n; i++){\n    x = s[i+1].split(\" \").map(a=>+a);\n    a[0][i] = x[0] + x[1] + x[2];\n    a[1][i] = x[0] + x[1] - x[2];\n    a[2][i] = x[0] - x[1] + x[2];\n    a[3][i] = -x[0] + x[1] + x[2];\n  }\n  var ans = 0;\n  for(i = 0; i < 4; i++){\n    a[i].sort((a,b)=>a-b);\n    var t = 0;\n    for(var j = 0; j < m; j++){\n      t += a[i][j];\n    }\n    ans = Math.max(ans, Math.abs(t));\n    t = 0;\n    for(j = n; j > n - m;){\n      t += a[i][--j];\n    }\n    ans = Math.max(ans, Math.abs(t));\n  }\n  \n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03433_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var pQgCOG = {\n        'SQGHs': function (x, y) {\n            return x > y;\n        },\n        'zqpna': function (x, y) {\n            return x <= y;\n        }\n    };\n    var line = input['split']('\\x0a')['map'](n => parseInt(n, 0xa));\n    while (pQgCOG['SQGHs'](line[0x0], 0x1f4)) {\n        line[0x0] -= 0x1f4;\n    }\n    pQgCOG['zqpna'](line[0x0], line[0x1]) ? console['log']('Yes') : console['log']('No');\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2018\n218", "Yes"], ["2763\n0", "No"], ["37\n514", "Yes"]], "original": "function main (input) {\n  var line = input.split('\\n').map(n => parseInt(n, 10));  \n\n  while(line[0] > 500) {\n    line[0] -= 500;\n  }\n\n  line[0]<=line[1] ? console.log('Yes') : console.log('No');\n  \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03609_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const sHfjaX = {\n        'eNwTq': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']();\n    const a = input['split']('\\x20')['map'](Number);\n    if (a[0x0] <= a[0x1]) {\n        console['log']('0');\n    } else {\n        console['log'](sHfjaX['eNwTq'](a[0x0], a[0x1]));\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["100 17", "83"], ["48 58", "0"], ["1000000000 1000000000", "0"]], "original": "function main(input) {\n  input = input.trim();\n  const a = input.split(\" \").map(Number);\n  if(a[0]<=a[1]){\n    console.log(\"0\");\n  }else{\n    console.log(a[0]-a[1]);\n  }\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03694_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const Kaiavf = {\n        'fQmNQ': function (x, y) {\n            return x - y;\n        }\n    };\n    const houses = s['split']('\\x0a')[0x1]['split']('\\x20')['map'](n => Number(n));\n    const min = Math['min'](...houses);\n    const max = Math['max'](...houses);\n    const answer = Kaiavf['fQmNQ'](max, min);\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n2 3 7 9", "7"], ["8\n3 1 4 1 5 9 2 6", "8"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const houses = s.split('\\n')[1].split(' ').map(n => Number(n));\n  const min = Math.min(...houses);\n  const max = Math.max(...houses);\n\n  const answer = max - min;\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03796_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nfunction Main(input) {\n    var HnKnhn = {\n        'TrneL': '4|3|1|0|2',\n        'XhaLI': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var UeuFfB = HnKnhn['TrneL']['split']('|');\n    var eucpUr = 0x0;\n    while (!![]) {\n        switch (UeuFfB[eucpUr++]) {\n        case '0':\n            for (var i = 0x1; i <= N; i++) {\n                pow *= i;\n                pow %= 0x3b9aca07;\n            }\n            continue;\n        case '1':\n            var pow = 0x1;\n            continue;\n        case '2':\n            console['log'](pow);\n            continue;\n        case '3':\n            var N = HnKnhn['XhaLI'](Number, tmp[0x0]);\n            continue;\n        case '4':\n            var tmp = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "6"], ["10", "3628800"], ["100000", "457992974"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var tmp = input.split(\"\\n\");\n  //var line0 = tmp[0].split(\" \");\n  //var line1 = tmp[1].split(\" \");\n  //var line2 = tmp[2].split(\" \");\n  //var line3 = tmp[3].split(\" \");\n\n  var N = Number(tmp[0]);\n  //var A = Number(line0[1]);\n  //var B = Number(line0[2]);\n  \n  var pow = 1;\n  for(var i=1; i<=N; i++){\n    pow *= i;\n    pow %= 1000000007;\n  }\n  \n  console.log(pow);\n\n  \n  //入出力確認コード\n  // A.forEach( function(value) console.log(value); );\n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03814_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const TrpPWb = {\n        'qYoid': function (x, y) {\n            return x < y;\n        },\n        'tRjQl': function (x, y) {\n            return x === y;\n        },\n        'TkBGP': function (x, y) {\n            return x + y;\n        },\n        'jqkvO': function (x, y) {\n            return x - y;\n        }\n    };\n    const S = input['split']('');\n    let a_idx;\n    let z_idx;\n    for (let i = 0x0; TrpPWb['qYoid'](i, S['length']); i++) {\n        if (TrpPWb['tRjQl'](S[i], 'A') && !a_idx) {\n            a_idx = i;\n        }\n        if (S[i] === 'Z') {\n            z_idx = i;\n        }\n    }\n    console['log'](TrpPWb['TkBGP'](TrpPWb['jqkvO'](z_idx, a_idx), 0x1));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["QWERTYASDFZXCV", "5"], ["ZABCZ", "4"], ["HASFJGHOGAKZZFEGA", "12"]], "original": "function main(input) {\n  const S = input.split('');\n  let a_idx;\n  let z_idx;\n  \n  for(let i = 0; i < S.length; i++) {\n  \tif (S[i] === 'A' && !a_idx) { a_idx = i; }\n    if (S[i] === 'Z') { z_idx = i; }\n  }\n  \n  console.log((z_idx - a_idx) + 1);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00017_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar strA = input['trim']();\nvar abc = 'abcdefghijklmnopqrstuvwxyz'['split']('');\nfor (var i = 0x0; i < 0x1a; i++) {\n    var strB = strA['replace'](/[a-z]/g, function (s) {\n        return abc[(abc['indexOf'](s) + i) % 0x1a];\n    });\n    if (strB['match'](/the|this|that/))\n        break;\n}\nconsole['log'](strB);", "test_cases": [["xlmw mw xli tmgxyvi xlex m xsso mr xli xvmt.", "this is the picture that i took in the trip."]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar strA=input.trim();\nvar abc=\"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nfor(var i=0;i<26;i++){\n   var strB=strA.replace(/[a-z]/g,function(s){\n      return abc[(abc.indexOf(s)+i)%26];\n   });\n   if(strB.match(/the|this|that/))break;\n}\nconsole.log(strB);", "language": "JavaScript"}
{"filename": "p00026_1", "type": "JavaScript", "obfuscated": "var input = '';\nvar mem = new Array(0xe);\nfor (var i = 0x0; i < 0xe; i++) {\n    mem[i] = new Array(0xe);\n    for (var j = 0x0; j < 0xe; j++)\n        mem[i][j] = 0x0;\n}\nvar dx = [\n    [\n        0x0,\n        -0x1,\n        0x0,\n        0x1,\n        0x0\n    ],\n    [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ],\n    [\n        0x0,\n        -0x1,\n        0x0,\n        -0x1,\n        -0x2,\n        -0x1,\n        0x0,\n        0x1,\n        0x2,\n        -0x1,\n        0x0,\n        0x1,\n        0x0\n    ]\n];\nvar dy = [\n    [\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x1\n    ],\n    [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ],\n    [\n        -0x2,\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x2\n    ]\n];\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var KnZJeA = {\n        'BSvQg': '6|5|2|1|4|3|0',\n        'qYjOi': function (x, y) {\n            return x < y;\n        },\n        'vnagO': function (x, y) {\n            return x < y;\n        },\n        'pTnSV': function (x, y) {\n            return x == y;\n        },\n        'pgnmf': '2|1|4|3|0',\n        'ZRKBf': function (x, y) {\n            return x + y;\n        },\n        'MlQGX': function (callee, param1) {\n            return callee(param1);\n        },\n        'zpxXZ': function (x, y) {\n            return x - y;\n        },\n        'Tarxj': function (x, y) {\n            return x + y;\n        }\n    };\n    var FDfRXw = KnZJeA['BSvQg']['split']('|');\n    var VfyRMg = 0x0;\n    while (!![]) {\n        switch (FDfRXw[VfyRMg++]) {\n        case '0':\n            console['log'](m);\n            continue;\n        case '1':\n            b = 0x0;\n            continue;\n        case '2':\n            m = 0x0;\n            continue;\n        case '3':\n            console['log'](b);\n            continue;\n        case '4':\n            for (var i = 0x2; KnZJeA['qYjOi'](i, 0xc); i++) {\n                for (var j = 0x2; KnZJeA['vnagO'](j, 0xc); j++) {\n                    if (KnZJeA['pTnSV'](mem[i][j], 0x0))\n                        b++;\n                    m = Math['max'](m, mem[i][j]);\n                }\n            }\n            continue;\n        case '5':\n            for (var i = 0x0; i < input['length']; i++) {\n                var imbDmA = KnZJeA['pgnmf']['split']('|');\n                var lYbfze = 0x0;\n                while (!![]) {\n                    switch (imbDmA[lYbfze++]) {\n                    case '0':\n                        for (var j in dx[v])\n                            mem[x + dx[v][j]][KnZJeA['ZRKBf'](y, dy[v][j])]++;\n                        continue;\n                    case '1':\n                        x = KnZJeA['MlQGX'](Number, s[0x0]) + 0x2;\n                        continue;\n                    case '2':\n                        s = input[i]['split'](',');\n                        continue;\n                    case '3':\n                        v = KnZJeA['zpxXZ'](Number(s[0x2]), 0x1);\n                        continue;\n                    case '4':\n                        y = KnZJeA['Tarxj'](KnZJeA['MlQGX'](Number, s[0x1]), 0x2);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '6':\n            input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["2,5,3\n3,6,1\n3,4,2\n4,5,2\n3,6,3\n2,4,1", "77\n5"]], "original": "\nvar input = \"\";\nvar mem = new Array(14);\nfor(var i = 0; i < 14; i++)\n{\n  mem[i] = new Array(14);\n  for(var j = 0; j < 14; j++)\n    mem[i][j] = 0;\n}\nvar dx = [\n  [0, -1, 0, 1, 0],\n  [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n  [0, -1, 0, -1, -2, -1, 0, 1, 2, -1, 0, 1, 0]\n]\nvar dy =[\n  [-1, 0, 0, 0, 1],\n  [-1, -1, -1, 0, 0, 0, 1, 1, 1,],\n  [-2, -1, -1, -1, 0, 0, 0, 0, 0, 1, 1, 1, 2]\n]\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk){input += chunk});\nprocess.stdin.on('end', function()\n{\n  input = input.split('\\n');\n  for(var i = 0; i < input.length; i++)\n  {\n    s = input[i].split(',');\n    x = Number(s[0]) + 2;\n    y = Number(s[1]) + 2;\n    v = Number(s[2]) - 1;\n    for(var j in dx[v])\n      mem[x + dx[v][j]][y + dy[v][j]]++;\n  }\n  m = 0;\n  b = 0;\n  for(var i = 2; i < 12; i++)\n  {\n    for(var j = 2; j < 12; j++)\n    {\n      if(mem[i][j] == 0)\n        b++;\n      m = Math.max(m, mem[i][j]);\n    }\n  }\n  console.log(b);\n  console.log(m);\n});", "language": "JavaScript"}
{"filename": "p02260_1", "type": "JavaScript", "obfuscated": "let inputString = '';\nprocess['stdin']['on']('data', inputStdin => {\n    inputString += inputStdin;\n});\nprocess['stdin']['on']('end', function () {\n    const jToHba = {\n        'kijde': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    inputString = inputString['replace'](/\\s*$/, '')['split']('\\x0a')['map'](str => str['replace'](/\\s*$/, ''));\n    jToHba['kijde'](selectionSort, inputString[0x1]['split']('\\x20')['map'](str => Number(str)));\n});\nconst selectionSort = arr => {\n    const kaKALs = {\n        'nPJtM': function (x, y) {\n            return x < y;\n        },\n        'GBbTq': function (x, y) {\n            return x < y;\n        }\n    };\n    let swap = 0x0;\n    for (let i = 0x0; kaKALs['nPJtM'](i, arr['length']); i++) {\n        let minj = i;\n        for (let j = i; kaKALs['GBbTq'](j, arr['length']); j++) {\n            if (kaKALs['GBbTq'](arr[j], arr[minj])) {\n                minj = j;\n            }\n        }\n        const a = arr[i];\n        const b = arr[minj];\n        if (a !== b) {\n            arr[minj] = a;\n            arr[i] = b;\n            swap++;\n        }\n    }\n    console['log'](arr['join']('\\x20'));\n    console['log'](swap);\n};", "test_cases": [["6\n5 6 4 2 1 3", "1 2 3 4 5 6\n4"], ["6\n5 2 4 6 1 3", "1 2 3 4 5 6\n3"]], "original": "let inputString = '';\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\nprocess.stdin.on('end', function() {\n    inputString = inputString.replace(/\\s*$/, '')\n        .split('\\n')\n        .map(str => str.replace(/\\s*$/, ''));\n\n    selectionSort(inputString[1].split(' ').map(str => Number(str)));\n});\n\nconst selectionSort = (arr) => {\n  let swap = 0;\n\n  for (let i=0; i<arr.length; i++) {\n    let minj = i;\n    for (let j=i; j<arr.length; j++) {\n      if (arr[j] < arr[minj]) { minj = j; }\n    }\n    const a = arr[i];\n    const b = arr[minj];\n    if (a !== b) {\n      arr[minj] = a;\n      arr[i] = b;\n      swap++;\n    }\n  }\n\n  console.log(arr.join(' '));\n  console.log(swap);\n};\n", "language": "JavaScript"}
{"filename": "p02327_1", "type": "JavaScript", "obfuscated": "console['log'](0x6);", "test_cases": [["4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0", "6"]], "original": "console.log(6);", "language": "JavaScript"}
{"filename": "p02389_1", "type": "JavaScript", "obfuscated": "(function (stdin) {\n    var LbeeSf = {\n        'GVtXW': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'Slqqd': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'yHgYQ': function (x, y) {\n            return x * y;\n        }\n    };\n    var lines = stdin['toString']()['split']('\\x20');\n    var x = LbeeSf['GVtXW'](parseInt, lines[0x0], 0xa);\n    var y = LbeeSf['Slqqd'](parseInt, lines[0x1], 0xa);\n    console['log'](LbeeSf['yHgYQ'](x, y), LbeeSf['yHgYQ'](x + y, 0x2));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3 5", "15 16"]], "original": " (function(stdin) {\n    var lines = stdin.toString().split(' ');\n    var x = parseInt(lines[0],10);\n    var y = parseInt(lines[1],10);\n    \n    console.log((x*y),(x+y)*2);\n\n }(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02600_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var nknBef = {\n        'zdlkt': function (x, y) {\n            return x / y;\n        }\n    };\n    console['log'](0xa - Math['floor'](nknBef['zdlkt'](input, 0xc8)));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["725", "7"], ["1600", "2"]], "original": "function main(input) {\n    console.log(10 - Math.floor(input / 200));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02603_1", "type": "JavaScript", "obfuscated": "function main(arg) {\n    const nsOIcQ = {\n        'ubPOg': function (callee, param1) {\n            return callee(param1);\n        },\n        'LQoVX': function (x, y) {\n            return x < y;\n        },\n        'zagbP': function (x, y) {\n            return x + y;\n        },\n        'eIcFx': function (x, y) {\n            return x == y;\n        },\n        'JVcep': function (x, y) {\n            return x - y;\n        },\n        'vNhjJ': function (x, y) {\n            return x * y;\n        },\n        'xkiIA': function (x, y) {\n            return x - y;\n        },\n        'qXvvy': function (callee, param1) {\n            return callee(param1);\n        },\n        'whDcc': function (x, y) {\n            return x / y;\n        },\n        'wVTIN': function (x, y) {\n            return x - y;\n        },\n        'IceTa': function (x, y) {\n            return x * y;\n        },\n        'faPBD': function (x, y) {\n            return x - y;\n        },\n        'SqfRI': function (x, y) {\n            return x * y;\n        },\n        'cQhgC': function (x, y) {\n            return x - y;\n        }\n    };\n    let n = nsOIcQ['ubPOg'](Number, arg['split']('\\x0a')[0x0]);\n    let a = arg['split']('\\x0a')[0x1]['split']('\\x20')['map'](Number);\n    let dp = [];\n    for (let i = 0x0; i < n + 0x1; i++)\n        dp[i] = 0x0;\n    dp[0x0] = 0x3e8;\n    let stock = 0x0;\n    for (let i = 0x1; nsOIcQ['LQoVX'](i, nsOIcQ['zagbP'](n, 0x1)); i++) {\n        if (nsOIcQ['eIcFx'](i, n)) {\n            dp[i] = nsOIcQ['zagbP'](dp[nsOIcQ['JVcep'](i, 0x1)], nsOIcQ['vNhjJ'](stock, a[i - 0x1]));\n        } else if (a[i] > a[nsOIcQ['xkiIA'](i, 0x1)]) {\n            let addStock = nsOIcQ['qXvvy'](parseInt, nsOIcQ['whDcc'](dp[nsOIcQ['xkiIA'](i, 0x1)], a[i - 0x1]));\n            dp[i] = dp[nsOIcQ['wVTIN'](i, 0x1)] - nsOIcQ['IceTa'](addStock, a[nsOIcQ['wVTIN'](i, 0x1)]);\n            stock += addStock;\n        } else {\n            let rmStock = stock;\n            dp[i] = nsOIcQ['zagbP'](dp[nsOIcQ['faPBD'](i, 0x1)], nsOIcQ['SqfRI'](rmStock, a[nsOIcQ['cQhgC'](i, 0x1)]));\n            stock -= rmStock;\n        }\n    }\n    console['log'](dp[n]);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\n100 130 130 130 115 115 150", "1685"], ["6\n200 180 160 140 120 100", "1000"], ["2\n157 193", "1216"]], "original": "function main(arg) {\n    let n = Number(arg.split(\"\\n\")[0])\n    let a = arg.split(\"\\n\")[1].split(\" \").map(Number)\n    \n    let dp = []\n    for(let i=0; i<n+1; i++)dp[i]=0\n    dp[0] = 1000\n    \n    let stock = 0\n    for(let i=1; i<n+1; i++) {\n        if(i==n) {\n        // 売却\n            dp[i] = dp[i-1] + stock*a[i-1]\n        }else if(a[i]>a[i-1]) {\n        // 購入\n            let addStock = parseInt(dp[i-1]/a[i-1])\n            dp[i] = dp[i-1] - addStock * a[i-1]\n            stock += addStock\n            //console.log(`addStock=${addStock}`)\n        } else {\n        // 売却\n            let rmStock = stock\n            dp[i] = dp[i-1] + rmStock * a[i-1]\n            stock -= rmStock\n            //console.log(`rmStock=${rmStock}`)\n        }\n            //console.log(`stock=${stock}`)\n    }\n    console.log(dp[n])\n    \n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02663_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlet cin = input['split'](/ |\\n/), cid = 0x0;\nconst next = () => cin[cid++];\nconst nexts = n => cin['slice'](cid, cid += n)['map'](i => parseInt(i));\nconst [H1, M1, H2, M2, K] = nexts(0x5);\nconst time = H2 * 0x3c + M2 - (H1 * 0x3c + M1) - K;\ntime > 0x0 ? console['log'](time) : console['log'](0x0);", "test_cases": [["10 0 15 0 30", "270"], ["10 0 12 0 120", "0"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nlet cin = input.split(/ |\\n/), cid = 0\nconst next = () => cin[cid++]\nconst nexts = (n) => cin.slice(cid, cid+=n).map(i=>parseInt(i))\n\nconst [H1, M1, H2, M2, K] = nexts(5);\nconst time = H2 * 60 + M2 - (H1 * 60 + M1) - K\ntime > 0 ? console.log(time) : console.log(0)\n", "language": "JavaScript"}
{"filename": "p02693_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var WkiSDb = {\n        'abVlt': function (callee, param1) {\n            return callee(param1);\n        },\n        'EfcmM': function (callee, param1) {\n            return callee(param1);\n        },\n        'McDQX': function (x, y) {\n            return x <= y;\n        },\n        'RxaHU': function (x, y) {\n            return x === y;\n        },\n        'YBuQe': function (x, y) {\n            return x % y;\n        },\n        'jvWuI': function (x, y) {\n            return x !== y;\n        }\n    };\n    var str = input;\n    const n = str['split']('\\x0a');\n    var k = WkiSDb['abVlt'](Number, n[0x0]);\n    var p = n[0x1]['split']('\\x20');\n    var a = WkiSDb['EfcmM'](Number, p[0x0]);\n    var b = WkiSDb['abVlt'](Number, p[0x1]);\n    var ans = '';\n    for (var i = a; WkiSDb['McDQX'](i, b); i++) {\n        if (WkiSDb['RxaHU'](WkiSDb['YBuQe'](i, k), 0x0)) {\n            ans = 'OK';\n        }\n    }\n    if (WkiSDb['jvWuI'](ans, 'OK')) {\n        ans = 'NG';\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\n500 600", "OK"], ["4\n5 7", "NG"], ["1\n11 11", "OK"]], "original": "function Main(input) {\n\tvar str = input;\n\tconst n = str.split('\\n');\n\tvar k  =Number(n[0]);\n\tvar p = n[1].split(\" \");\t\n\tvar a = Number(p[0]); \n\tvar b = Number(p[1]);\n\tvar ans = \"\";\n\t\n\tfor(var i = a; i <= b; i++){\n\t\tif(i%k===0){\n\t\t\tans = \"OK\";\n\t\t}\n\t}\nif(ans !== \"OK\"){\n\tans = \"NG\"\n}\n console.log(ans);\n }\n \n \n//*おまじない\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02879_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gLGYTl = {\n        'AAgAd': '2|4|5|0|1|3',\n        'iIBCD': function (x, y) {\n            return x > y;\n        },\n        'RDvlE': function (x, y) {\n            return x * y;\n        },\n        'FtYiV': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var XcVdJJ = gLGYTl['AAgAd']['split']('|');\n    var zKXwGH = 0x0;\n    while (!![]) {\n        switch (XcVdJJ[zKXwGH++]) {\n        case '0':\n            if (gLGYTl['iIBCD'](a, 0x9) || gLGYTl['iIBCD'](b, 0x9)) {\n                console['log'](-0x1);\n                return;\n            }\n            continue;\n        case '1':\n            var result = gLGYTl['RDvlE'](a, b);\n            continue;\n        case '2':\n            var input = input['split']('\\x20');\n            continue;\n        case '3':\n            console['log'](result);\n            continue;\n        case '4':\n            var a = gLGYTl['FtYiV'](Number, input[0x0]);\n            continue;\n        case '5':\n            var b = gLGYTl['FtYiV'](Number, input[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 5", "10"], ["5 10", "-1"], ["9 9", "81"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  var input = input.split(' ')\n  var a = Number(input[0])\n  var b = Number(input[1])\n  if (a > 9 || b > 9){\n    console.log(-1)\n  \treturn;\n  }\n  var result = a * b;\n  console.log(result);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02918_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const pVGtoU = {\n        'AYhPG': function (callee, param1) {\n            return callee(param1);\n        },\n        'BfiPU': function (x, y) {\n            return x === y;\n        },\n        'OvBXG': function (x, y) {\n            return x === y;\n        },\n        'IAyMY': function (x, y) {\n            return x === y;\n        },\n        'ofang': function (x, y) {\n            return x === y;\n        },\n        'wZDId': function (x, y) {\n            return x - y;\n        },\n        'uvKoB': function (x, y) {\n            return x + y;\n        },\n        'xGCkn': function (x, y) {\n            return x * y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = pVGtoU['AYhPG'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const K = pVGtoU['AYhPG'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    const S = arg[0x1]['split']('');\n    let alreadyHappy = 0x0;\n    let last;\n    for (let i in S) {\n        if (pVGtoU['BfiPU'](last, 'L') && pVGtoU['OvBXG'](S[i], 'L')) {\n            alreadyHappy++;\n        }\n        if (pVGtoU['IAyMY'](last, 'R') && pVGtoU['ofang'](S[i], 'R')) {\n            alreadyHappy++;\n        }\n        last = S[i];\n    }\n    console['log'](Math['min'](pVGtoU['wZDId'](N, 0x1), pVGtoU['uvKoB'](alreadyHappy, pVGtoU['xGCkn'](0x2, K))));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6 1\nLRLRRL", "3"], ["13 3\nLRRLRLRRLRLLR", "9"], ["10 1\nLLLLLRRRRR", "9"], ["9 2\nRRRLRLRLL", "7"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n    \n    const S = arg[1].split(\"\");\n    let alreadyHappy = 0;\n    let last;\n    \n    for(let i in S) {\n        if(last === \"L\" && S[i] === \"L\") {\n            alreadyHappy++;\n        }\n        \n        if(last === \"R\" && S[i] === \"R\") {\n            alreadyHappy++;\n        }\n        \n        last = S[i];\n    }\n\n    console.log(Math.min(N - 1, alreadyHappy + (2 * K)));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03014_1", "type": "JavaScript", "obfuscated": "const main = inputs => {\n    var iAAUqZ = {\n        'SOAoW': function (x, y) {\n            return x - y;\n        },\n        'NpsqL': function (x, y) {\n            return x - y;\n        },\n        'qRxxT': function (x, y) {\n            return x < y;\n        },\n        'extkr': function (x, y) {\n            return x + y;\n        },\n        'iLxLc': function (x, y) {\n            return x + y;\n        },\n        'iTuZp': function (x, y) {\n            return x - y;\n        },\n        'Mvqoe': function (x, y) {\n            return x + y;\n        },\n        'yTPSD': function (x, y) {\n            return x + y;\n        },\n        'CcjWp': function (x, y) {\n            return x == y;\n        },\n        'iViII': function (x, y) {\n            return x >= y;\n        },\n        'UERwb': function (x, y) {\n            return x == y;\n        },\n        'zfvsV': function (x, y) {\n            return x + y;\n        }\n    };\n    var H = iAAUqZ['SOAoW'](inputs[0x0]['split']('\\x20')[0x0], 0x0);\n    var W = iAAUqZ['NpsqL'](inputs[0x0]['split']('\\x20')[0x1], 0x0);\n    var map = {};\n    var ymap = {};\n    var tmap = {};\n    var keys = [];\n    for (var h = 0x0; iAAUqZ['qRxxT'](h, H); h++) {\n        map[h] = inputs[iAAUqZ['extkr'](h, 0x1)];\n        for (var w = 0x0; iAAUqZ['qRxxT'](w, W); w++) {\n            var ukey = iAAUqZ['extkr'](iAAUqZ['iLxLc'](h - 0x1, '_'), w);\n            var lkey = iAAUqZ['extkr'](h + '_', iAAUqZ['iTuZp'](w, 0x1));\n            var key = iAAUqZ['Mvqoe'](iAAUqZ['yTPSD'](h, '_'), w);\n            if (iAAUqZ['CcjWp'](map[h][w], '#')) {\n            } else {\n                keys['push'](key);\n                if (ymap[lkey]) {\n                    ymap[key] = ymap[lkey];\n                    ymap[key]['n']++;\n                } else {\n                    ymap[key] = { 'n': 0x1 };\n                }\n                if (tmap[ukey]) {\n                    tmap[key] = tmap[ukey];\n                    tmap[key]['n']++;\n                } else {\n                    tmap[key] = { 'n': 0x1 };\n                }\n            }\n        }\n    }\n    var ans = 0x0;\n    var key;\n    for (var i = iAAUqZ['SOAoW'](keys['length'], 0x1); iAAUqZ['iViII'](i, 0x0); i--) {\n        key = keys[i];\n        ans = Math['max'](ans, iAAUqZ['iTuZp'](iAAUqZ['Mvqoe'](tmap[key]['n'], ymap[key]['n']), 0x1));\n        if (iAAUqZ['UERwb'](ans, iAAUqZ['SOAoW'](iAAUqZ['zfvsV'](H, W), 0x1)))\n            break;\n    }\n    console['log'](ans);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8')['trim']()['split']('\\x0a'));", "test_cases": [["4 6\n#..#..\n.....#\n....#.\n#.#...", "8"], ["8 8\n..#...#.\n....#...\n##......\n..###..#\n...#..#.\n##....#.\n#...#...\n###.#..#", "13"]], "original": "const main = (inputs) => {\n  var H = inputs[0].split(\" \")[0]-0;\n  var W = inputs[0].split(\" \")[1]-0;\n \n  var map = {};\n  var ymap = {};\n  var tmap = {};\n  var keys = [];\n  for(var h=0;h<H;h++){\n    map[h] = inputs[h+1];\n    for(var w=0;w<W;w++){\n      var ukey = (h-1)+\"_\"+w;\n      var lkey = h+\"_\"+(w-1);\n      var key = h+\"_\"+w;\n      if(map[h][w] == \"#\"){\n      }else{\n        keys.push(key);\n        if(ymap[lkey]){\n          ymap[key] = ymap[lkey];\n          ymap[key].n++;\n        }else{\n          ymap[key] = {n:1};\n        }\n \n        if(tmap[ukey]){\n          tmap[key] = tmap[ukey];\n          tmap[key].n++;\n        }else{\n          tmap[key] = {n:1};\n        }\n      }\n    }\n  }\n  var ans = 0;\n  var key;\n  for(var i=keys.length-1;i>=0;i--){\n    key = keys[i];\n    ans = Math.max(ans, tmap[key].n + ymap[key].n - 1);\n    if(ans == H+W-1) break;\n  }\n  console.log(ans);\n}\n \nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p03089_1", "type": "JavaScript", "obfuscated": "input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlines = input['split']('\\x0a');\nN = lines['shift']() * 0x1;\nb = lines['shift']()['split']('\\x20');\na = [];\nfor (i = N; i > 0x0; i--) {\n    found = ![];\n    for (j = i; j > 0x0; j--) {\n        if (b[j - 0x1] == j) {\n            a['push'](b['splice'](j - 0x1, 0x1));\n            found = !![];\n            break;\n        }\n    }\n    if (!found) {\n        a = [-0x1];\n        break;\n    }\n}\nconsole['log'](a['reverse']()['join']('\\x0a'));", "test_cases": [["3\n1 2 1", "1\n1\n2"], ["2\n2 2", "-1"], ["9\n1 1 1 2 2 1 2 3 2", "1\n2\n2\n3\n1\n2\n2\n1\n1"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nb = lines.shift().split(' ')\na = []\nfor (i=N; i>0; i--) {\n    found = false\n    for (j=i; j>0; j--) {\n        if (b[j-1] == j) {\n            a.push(b.splice(j-1, 1))\n            found = true\n            break;\n        }\n    }\n    if (!found) {\n        a = [-1]\n        break;\n    }\n}\nconsole.log(a.reverse().join(\"\\n\"))", "language": "JavaScript"}
{"filename": "p03295_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var vEyhVw = {\n        'PXLLG': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; vEyhVw['PXLLG'](i, rest['length']); i++)\n        if (vEyhVw['PXLLG'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var RJhwyP = {\n        'yKOVs': function (x, y) {\n            return x > y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (RJhwyP['yKOVs'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var BNVFXj = {\n        'SxquZ': function (x, y) {\n            return x !== y;\n        },\n        'tQZLE': function (x, y) {\n            return x - y;\n        },\n        'qNRJw': function (callee, param1) {\n            return callee(param1);\n        },\n        'ifmJR': function (x, y) {\n            return x < y;\n        },\n        'RLOlZ': function (x, y) {\n            return x + y;\n        },\n        'iLcEF': function (x, y) {\n            return x < y;\n        },\n        'PaqhX': function (x, y) {\n            return x <= y;\n        },\n        'VtBUS': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var input = input['split']('\\x0a');\n    var temp1 = input[0x0]['split']('\\x20');\n    var n = BNVFXj['qNRJw'](toInt, temp1[0x0]);\n    var m = BNVFXj['qNRJw'](toInt, temp1[0x1]);\n    var abs = [];\n    for (var i = 0x0; BNVFXj['ifmJR'](i, m); i++) {\n        c = BNVFXj['qNRJw'](toIntArr, input[BNVFXj['RLOlZ'](i, 0x1)]['split']('\\x20'));\n        a = c[0x0];\n        b = c[0x1];\n        abs[i] = [\n            a,\n            b\n        ];\n    }\n    abs['sort'](function (a, b) {\n        if (BNVFXj['SxquZ'](a[0x0], b[0x0])) {\n            return BNVFXj['tQZLE'](a[0x0], b[0x0]);\n        } else {\n            return BNVFXj['tQZLE'](a[0x1], b[0x1]);\n        }\n    });\n    var l = 0x0;\n    r = BNVFXj['tQZLE'](n, 0x1);\n    var ab;\n    var ans = 0x1;\n    for (var i = 0x0; BNVFXj['iLcEF'](i, m); i++) {\n        ab = abs[i];\n        if (BNVFXj['PaqhX'](ab[0x1], l) || BNVFXj['PaqhX'](r, ab[0x0])) {\n            ans++;\n            l = ab[0x0];\n            r = ab[0x1];\n        } else {\n            l = BNVFXj['VtBUS'](max, l, ab[0x0]);\n            r = min(r, ab[0x1]);\n        }\n    }\n    console['log'](ans);\n}", "test_cases": [["5 2\n1 4\n2 5", "1"], ["9 5\n1 8\n2 7\n3 5\n4 6\n7 9", "2"], ["5 10\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5", "4"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar temp1 = input[0].split(' ');\n\tvar n = toInt(temp1[0]);\n\tvar m = toInt(temp1[1]);\n\tvar abs = [];\n\tfor(var i = 0; i < m; i++){\n\t\tc = toIntArr(input[i+1].split(' '));\n\t\ta = c[0];\n\t\tb = c[1];\n\t\tabs[i] = [a,b];\n\t}\n\tabs.sort(function(a,b){\n\t\tif(a[0]!==b[0]){\n\t\t\treturn a[0] - b[0];\n\t\t}else{\n\t\t\treturn a[1] - b[1];\n\t\t}\n\t})\n\tvar l=0;r=n-1;\n\tvar ab;\n\tvar ans = 1;\n\tfor(var i = 0; i < m; i++){\n\t\tab = abs[i];\n\t\tif(ab[1]<=l || r<=ab[0]){\n\t\t\tans++;\n\t\t\tl = ab[0];\n\t\t\tr = ab[1];\n\t\t}else{\n\t\t\tl = max(l,ab[0]);\n\t\t\tr = min(r,ab[1]);\n\t\t}\n\t}\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03331_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var avmFTU = {\n        'HkEjz': '4|6|2|0|3|5|1|7',\n        'dHOMr': function (x, y) {\n            return x == y;\n        }\n    };\n    var hxbkbC = avmFTU['HkEjz']['split']('|');\n    var eQhrEJ = 0x0;\n    while (!![]) {\n        switch (hxbkbC[eQhrEJ++]) {\n        case '0':\n            var arr = [];\n            continue;\n        case '1':\n            if (avmFTU['dHOMr'](answer, 0x1)) {\n                answer = 0xa;\n            }\n            continue;\n        case '2':\n            var divisor = Math['pow'](0xa, digits - 0x1);\n            continue;\n        case '3':\n            for (var i = 0x0; i < digits; i++) {\n                arr['push'](Math['floor'](input / divisor));\n                input = input % divisor;\n                divisor /= 0xa;\n            }\n            continue;\n        case '4':\n            var digits = input['toString']()['length'];\n            continue;\n        case '5':\n            var answer = arr['reduce']((a, b) => a + b);\n            continue;\n        case '6':\n            var input = parseInt(input, 0xa);\n            continue;\n        case '7':\n            console['log'](answer);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["15", "6"], ["100000", "10"]], "original": "function main(input) {\n  var digits = input.toString().length;\n  var input = parseInt(input, 10);\n \n  var divisor = Math.pow(10, digits - 1);\n  var arr = [];\n  for (var i = 0; i < digits; i++) {\n  \tarr.push(Math.floor(input / divisor))\n  \tinput = input % divisor;\n  \tdivisor /= 10;\n \n  }\n  var answer = arr.reduce((a, b) => a + b);\n  if(answer == 1) {answer = 10;}\n \n  console.log(answer);\n \n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03457_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var RtULTG = {\n        'UNfJF': '5|0|6|4|8|10|7|2|9|3|1',\n        'jbVgW': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'uvJLb': function (x, y) {\n            return x + y;\n        },\n        'bKaoh': function (callee, param1) {\n            return callee(param1);\n        },\n        'EJlEm': 'Yes',\n        'RQUAP': function (x, y) {\n            return x + y;\n        },\n        'JmTOJ': function (x, y) {\n            return x < y;\n        },\n        'DdIPg': '1|4|2|0|3',\n        'ZdVAO': function (x, y) {\n            return x - y;\n        },\n        'CVOyz': function (x, y) {\n            return x - y;\n        },\n        'hEJxc': function (x, y) {\n            return x - y;\n        },\n        'arrGI': function (x, y) {\n            return x === y;\n        },\n        'KHypY': function (x, y) {\n            return x % y;\n        }\n    };\n    var tmkQxz = RtULTG['UNfJF']['split']('|');\n    var BGrrAu = 0x0;\n    while (!![]) {\n        switch (tmkQxz[BGrrAu++]) {\n        case '0':\n            var N = RtULTG['jbVgW'](parseInt, args, 0xa);\n            continue;\n        case '1':\n            console['log'](answer);\n            continue;\n        case '2':\n            for (var i = 0x0; i < N; i++) {\n                plan[RtULTG['uvJLb'](i, 0x1)] = RtULTG['bKaoh'](parser, history[i]);\n            }\n            continue;\n        case '3':\n            answer = flg ? RtULTG['EJlEm'] : 'No';\n            continue;\n        case '4':\n            var answer;\n            continue;\n        case '5':\n            var args = input['split']('\\x0a');\n            continue;\n        case '6':\n            var history = args['slice'](0x1, RtULTG['RQUAP'](N, 0x1));\n            continue;\n        case '7':\n            plan[0x0] = [\n                0x0,\n                0x0,\n                0x0\n            ];\n            continue;\n        case '8':\n            var flg = 0x1;\n            continue;\n        case '9':\n            for (var i = 0x1; RtULTG['JmTOJ'](i, plan['length']); i++) {\n                var AObzLT = RtULTG['DdIPg']['split']('|');\n                var ofHgPp = 0x0;\n                while (!![]) {\n                    switch (AObzLT[ofHgPp++]) {\n                    case '0':\n                        var dist = Math['abs'](RtULTG['ZdVAO'](RtULTG['RQUAP'](rec2[0x1], rec2[0x2]), rec1[0x1]) - rec1[0x2]);\n                        continue;\n                    case '1':\n                        var rec1 = plan[RtULTG['CVOyz'](i, 0x1)];\n                        continue;\n                    case '2':\n                        var dt = RtULTG['hEJxc'](rec2[0x0], rec1[0x0]);\n                        continue;\n                    case '3':\n                        if (dt >= dist && RtULTG['arrGI'](dt % 0x2, RtULTG['KHypY'](dist, 0x2))) {\n                        } else {\n                            flg = 0x0;\n                        }\n                        continue;\n                    case '4':\n                        var rec2 = plan[i];\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '10':\n            var plan = [];\n            continue;\n        }\n        break;\n    }\n}\nfunction parser(record) {\n    var OsMlMk = {\n        'OIbXu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'tHFaP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var tPmumY = '5|3|2|0|4|1'['split']('|');\n    var yPQAIl = 0x0;\n    while (!![]) {\n        switch (tPmumY[yPQAIl++]) {\n        case '0':\n            return_val['push'](OsMlMk['OIbXu'](parseInt, args[0x1], 0xa));\n            continue;\n        case '1':\n            return return_val;\n        case '2':\n            return_val['push'](parseInt(args[0x0], 0xa));\n            continue;\n        case '3':\n            var return_val = [];\n            continue;\n        case '4':\n            return_val['push'](OsMlMk['tHFaP'](parseInt, args[0x2], 0xa));\n            continue;\n        case '5':\n            var args = record['split']('\\x20');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n3 1 2\n6 1 1", "Yes"], ["1\n2 100 100", "No"], ["2\n5 1 1\n100 1 1", "No"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar args = input.split(\"\\n\");\n\tvar N = parseInt(args,10);\n\tvar history = args.slice(1,N+1);\n\tvar answer;\n\tvar flg = 1;\n\tvar plan = [];\n\tplan[0]=[0,0,0];\n\tfor(var i=0;i<N;i++){\n\t\tplan[i+1] = parser(history[i]);\n\t}\n\n\tfor(var i=1;i<plan.length;i++){\n\t\tvar rec1 = plan[i-1];\n\t\tvar rec2 = plan[i];\n\t\tvar dt = rec2[0] - rec1[0];\n\t\tvar dist = Math.abs(rec2[1]+rec2[2]-rec1[1]-rec1[2]);\n\t\tif (dt >= dist && dt % 2 === dist % 2){\n\t\t}else{\n\t\t\t\tflg = 0;\n\t\t}\n\t}\n\tanswer = flg ? \"Yes\" : \"No\" ;\n\t//出力\n\tconsole.log(answer);\n}\nfunction parser(record){\n\tvar args = record.split(\" \");\n\tvar return_val=[];\n\treturn_val.push(parseInt(args[0],10));\n\treturn_val.push(parseInt(args[1],10));\n\treturn_val.push(parseInt(args[2],10));\n\treturn return_val\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03635_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var GGmIMY = {\n        'egQFt': function (callee, param1) {\n            return callee(param1);\n        },\n        'Feilb': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var line = input[0x0]['split']('\\x20');\n    var m = GGmIMY['egQFt'](parseInt, line[0x0]);\n    var n = parseInt(line[0x1]);\n    var ans = GGmIMY['Feilb'](m - 0x1, n - 0x1);\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4", "6"], ["2 2", "1"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    var line = input[0].split(\" \");\n    var m = parseInt(line[0]);\n    var n = parseInt(line[1]);\n    \n    var ans = (m-1)*(n-1);\n    console.log(ans);\n    \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03998_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var RDLQPX = '0|2|1|4|5|3'['split']('|');\n    var RbQPzl = 0x0;\n    while (!![]) {\n        switch (RDLQPX[RbQPzl++]) {\n        case '0':\n            var input = input['split']('\\x0a');\n            continue;\n        case '1':\n            var hands = {\n                'a': input[0x0]['split'](''),\n                'b': input[0x1]['split'](''),\n                'c': input[0x2]['split']('')\n            };\n            continue;\n        case '2':\n            var answer;\n            continue;\n        case '3':\n            console['log'](answer);\n            continue;\n        case '4':\n            var currentPlayer = 'a';\n            continue;\n        case '5':\n            while (!![]) {\n                currentCard = hands[currentPlayer]['shift']();\n                if (currentCard) {\n                    currentPlayer = currentCard;\n                } else {\n                    answer = currentPlayer['toUpperCase']();\n                    break;\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["aca\naccc\nca", "A"], ["abcb\naacb\nbccc", "C"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar input = input.split(\"\\n\");\n\tvar answer;\n\n\t// input = input.map((x) => parseInt(x, 10));\n\n\tvar hands = {\n\t\ta: input[0].split(''),\n\t\tb: input[1].split(''),\n\t\tc: input[2].split(''),\n\t};\n\n\tvar currentPlayer = 'a';\n\n\twhile (true) {\n\t\tcurrentCard = hands[currentPlayer].shift();\n\n\t\tif (currentCard) {\n\t\t\tcurrentPlayer = currentCard;\n\t\t} else {\n\t\t\tanswer = currentPlayer.toUpperCase();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\n\t// 出力\n\tconsole.log(answer);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00093_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nx = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/\\s/);\nfor (i = 0x0; i < x['length']; i += 0x2) {\n    count = 0x0;\n    y = x[i];\n    if (y + x[i + 0x1] == 0x0)\n        break;\n    for (; y <= x[i + 0x1]; y++) {\n        if (y % 0x190 == 0x0 || y % 0x4 == 0x0 && y % 0x64 != 0x0) {\n            console['log'](String(y)['trim']());\n            count++;\n        }\n    }\n    if (i != 0x0 || i == x['length'] - 0x1)\n        console['log']();\n    if (count == 0x0) {\n        console['log']('NA\\x0a');\n    }\n}", "test_cases": [["2001 2010\n2005 2005\n2001 2010\n0 0", "2004\n2008\n\nNA\n\n2004\n2008"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n// Here your code !\nx=require('fs').readFileSync('/dev/stdin','utf8').trim().split(/\\s/);\nfor(i=0;i<x.length;i+=2){\n    count=0;\n    y=x[i];\n    //if(i!=0||i==x.length-1)console.log();\n    if(y+x[i+1]==0)break;\n    for(;y<=x[i+1];y++){\n        if (y % 400 == 0 || (y % 4 == 0 && y % 100 != 0)){\n            console.log(String(y).trim());\n            count++;\n        }\n    }\n    if(i!=0||i==x.length-1)console.log();\n    if(count==0){\n        console.log(\"NA\\n\");\n    }\n    \n}", "language": "JavaScript"}
{"filename": "p02248_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar a = arr[0x0];\nvar b = arr[0x1];\nvar str = '';\nfor (var i = 0x0; i < a['length']; i++) {\n    var flag = !![];\n    ;\n    for (var j = 0x0; j < b['length']; j++) {\n        if (a[i + j] != b[j]) {\n            flag = ![];\n            break;\n        }\n    }\n    if (flag)\n        str += i + '\\x0a';\n}\nconsole['log'](str);", "test_cases": [["aabaaa\naa", "0\n3\n4"], ["xyzz\nyz", "1"], ["abc\nxyz", ""]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar a=arr[0];\nvar b=arr[1];\nvar str=\"\";\nfor(var i=0;i<a.length;i++){\n   var flag=true;;\n   for(var j=0;j<b.length;j++){\n      if(a[i+j]!=b[j]){\n         flag=false;\n         break;\n      }\n   }\n   if(flag)str+=i+\"\\n\";\n}\nconsole.log(str);", "language": "JavaScript"}
{"filename": "p02414_1", "type": "JavaScript", "obfuscated": "var n, m, l, a, b, bt;\nprocess['stdin']['setEncoding']('ascii');\nprocess['stdin']['on']('data', function (chunk) {\n    var DlPHHv = {\n        'NAgts': '7|3|1|6|4|0|5|2',\n        'fJAaJ': function (x, y) {\n            return x !== y;\n        },\n        'NbjUA': function (x, y) {\n            return x + y;\n        }\n    };\n    var rKQKVS = DlPHHv['NAgts']['split']('|');\n    var JXbZUm = 0x0;\n    while (!![]) {\n        switch (rKQKVS[JXbZUm++]) {\n        case '0':\n            l = line[0x0][0x2];\n            continue;\n        case '1':\n            for (i in line) {\n                ary = line[i]['split']('\\x20');\n                if (DlPHHv['fJAaJ'](ary['length'], 0x0))\n                    line[i] = ary['map'](Number);\n            }\n            continue;\n        case '2':\n            b = line['slice'](DlPHHv['NbjUA'](n, 0x1), DlPHHv['NbjUA'](DlPHHv['NbjUA'](n, m), 0x1));\n            continue;\n        case '3':\n            line = chunk['toString']()['split'](/\\r?\\n/);\n            continue;\n        case '4':\n            m = line[0x0][0x1];\n            continue;\n        case '5':\n            a = line['slice'](0x1, DlPHHv['NbjUA'](n, 0x1));\n            continue;\n        case '6':\n            n = line[0x0][0x0];\n            continue;\n        case '7':\n            var line, ary;\n            continue;\n        }\n        break;\n    }\n});\nprocess['stdin']['on']('end', function () {\n    var Mswnlg = {\n        'TSuLL': function (callee) {\n            return callee();\n        },\n        'cKHvD': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var i, j, ci;\n    Mswnlg['TSuLL'](make_b_transpose);\n    for (i in a) {\n        ci = [];\n        for (j in bt) {\n            ci['push'](Mswnlg['cKHvD'](inner_product, a[i], bt[j]));\n        }\n        console['log'](ci['join']('\\x20'));\n    }\n});\nfunction make_b_transpose() {\n    var htezuT = {\n        'xYSez': function (x, y) {\n            return x < y;\n        }\n    };\n    var j, k, bj;\n    bt = [];\n    for (j = 0x0; htezuT['xYSez'](j, l); j++) {\n        bj = [];\n        for (k = 0x0; htezuT['xYSez'](k, m); k++)\n            bj['push'](b[k][j]);\n        bt['push'](bj);\n    }\n}\nfunction inner_product(a, b) {\n    var ybwngR = {\n        'LftVW': function (x, y) {\n            return x * y;\n        }\n    };\n    var res = 0x0;\n    for (var i in a)\n        res += ybwngR['LftVW'](a[i], b[i]);\n    return res;\n}", "test_cases": [["3 2 3\n1 2\n0 3\n4 5\n1 2 1\n0 3 2", "1 8 5\n0 9 6\n4 23 14"]], "original": "var n, m, l, a, b, bt;\n\nprocess.stdin.setEncoding('ascii');\nprocess.stdin.on('data', function (chunk) {\n\tvar line, ary;\n\tline = chunk.toString().split(/\\r?\\n/);\n\tfor (i in line) {\n\t\tary = line[i].split(' ');\n\t\tif (ary.length !== 0) line[i] = ary.map(Number);\n\t}\n\tn = line[0][0];\n\tm = line[0][1];\n\tl = line[0][2];\n\ta = line.slice(1, n+1);\n\tb = line.slice(n+1, n+m+1);\n});\n\nprocess.stdin.on('end', function() {\n\tvar i, j, ci;\n\n\tmake_b_transpose();\n\n\tfor (i in a) {\n\t\tci = [];\n\t\tfor (j in bt) {\n\t\t\tci.push(inner_product(a[i], bt[j]));\n\t\t}\n\t\tconsole.log(ci.join(' '));\n\t}\n});\n\nfunction make_b_transpose() {\n\tvar j, k, bj;\n\tbt = [];\n\tfor (j = 0; j < l; j++) {\n\t\tbj = [];\n\t\tfor (k = 0; k < m; k++)\n\t\t\tbj.push(b[k][j]);\n\t\tbt.push(bj);\n\t}\n}\n\nfunction inner_product(a, b) {\n\tvar res = 0;\n\tfor (var i in a) res += a[i] * b[i];\n\treturn res;\n}", "language": "JavaScript"}
{"filename": "p02598_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const FMXjCo = {\n        'kekVT': function (x, y) {\n            return x / y;\n        },\n        'aAgKG': function (x, y) {\n            return x * y;\n        },\n        'VcBXt': function (x, y) {\n            return x >= y;\n        },\n        'yNQex': function (x, y) {\n            return x | y;\n        },\n        'zOTtg': function (x, y) {\n            return x < y;\n        },\n        'cUmEW': function (x, y) {\n            return x - y;\n        },\n        'hJiVv': function (x, y) {\n            return x | y;\n        },\n        'hCqpC': function (x, y) {\n            return x + y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const K = FMXjCo['yNQex'](0x0, lines[0x0]['split']('\\x20')[0x1]);\n    let arr = new Int32Array(lines[0x1]['split']('\\x20'));\n    let isOk = (t = 0x0, k = 0x0) => {\n        const XTPtsq = {\n            'MPUhn': function (x, y) {\n                return FMXjCo['kekVT'](x, y);\n            },\n            'TbZhr': function (x, y) {\n                return FMXjCo['aAgKG'](x, y);\n            }\n        };\n        arr['forEach'](v => {\n            let d = 0x0 | XTPtsq['MPUhn'](v, t);\n            if (v === XTPtsq['TbZhr'](d, t)) {\n                d--;\n            }\n            k -= d;\n        });\n        return FMXjCo['VcBXt'](k, 0x0);\n    };\n    let l = 0x0;\n    let r = Math['max'](...arr);\n    let mid = FMXjCo['yNQex'](0x0, FMXjCo['aAgKG'](r + l, 0.5));\n    let res = r;\n    while (FMXjCo['zOTtg'](l, r)) {\n        if (isOk(mid, K)) {\n            res = mid;\n            r = FMXjCo['cUmEW'](mid, 0x1);\n        } else {\n            l = mid + 0x1;\n        }\n        mid = FMXjCo['hJiVv'](0x0, FMXjCo['aAgKG'](FMXjCo['hCqpC'](r, l), 0.5));\n    }\n    return res;\n}\nexports['main'] = main;\nfunction Main(input) {\n    const dlLIYD = {\n        'qymGv': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    console['log'](dlLIYD['qymGv'](main, input['trim']()));\n}\nif (process['argv'][0x2] !== 'test') {\n    Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\n}", "test_cases": [["2 3\n7 9", "4"], ["3 0\n3 4 5", "5"], ["10 10\n158260522 877914575 602436426 24979445 861648772 623690081 433933447 476190629 262703497 211047202", "292638192"]], "original": "//解説参照済み\n\nfunction main(input) {\n    const lines = input.split(\"\\n\");\n    const K = 0 | lines[0].split(\" \")[1];\n    let arr = new Int32Array(lines[1].split(\" \"));\n\n    let isOk = (t = 0, k = 0) => {\n        arr.forEach((v) => {\n            let d = 0 | v / t;\n            if (v === d * t) { d--; }\n            k -= d;\n        })\n        return k >= 0;\n    }\n\n    let l = 0;\n    let r = Math.max(...arr);\n    let mid = 0 | (r + l) * 0.5;\n    let res = r;\n    while (l < r) {\n        if (isOk(mid, K)) {\n            res = mid;\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n        mid = 0 | (r + l) * 0.5;\n    }\n    return res;\n}\n\n\n//******************************\nexports.main = main;\n\nfunction Main(input) {\n    console.log(main(input.trim()));\n}\n\nif (process.argv[2] !== \"test\") {\n    Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n}", "language": "JavaScript"}
{"filename": "p02699_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const uRaDjs = {\n        'wttPR': function (callee, param1) {\n            return callee(param1);\n        },\n        'xwbMD': function (callee, param1) {\n            return callee(param1);\n        },\n        'NDQHN': function (x, y) {\n            return x <= y;\n        },\n        'FNmXf': 'unsafe',\n        'Pxtqw': 'safe'\n    };\n    input = input['split']('\\x20');\n    const S = uRaDjs['wttPR'](parseInt, input[0x0]);\n    const W = uRaDjs['xwbMD'](parseInt, input[0x1]);\n    const ret = uRaDjs['NDQHN'](S, W) ? uRaDjs['FNmXf'] : uRaDjs['Pxtqw'];\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5", "unsafe"], ["100 2", "safe"], ["10 10", "unsafe"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\" \");\n\tconst S = parseInt(input[0]);\n  const W = parseInt(input[1]);\n\n  const ret = (S <= W)? 'unsafe' : 'safe';\n  console.log(ret);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02973_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gzjcPV = {\n        'cQxIT': function (x, y) {\n            return x - y;\n        },\n        'njFWj': function (x, y) {\n            return x - y;\n        },\n        'ieLTS': function (x, y) {\n            return x <= y;\n        },\n        'TEbAs': function (x, y) {\n            return x - y;\n        },\n        'rZxQt': function (x, y) {\n            return x > y;\n        },\n        'TbVUy': function (x, y) {\n            return x / y;\n        },\n        'YFAzS': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (input[gzjcPV['cQxIT'](input['length'], 0x1)] === '') {\n        input['pop']();\n    }\n    const N = input[0x0] - 0x0;\n    var colors = [];\n    var temp;\n    var min, max, mid;\n    for (var i = 0x1; i < input['length']; i++) {\n        temp = gzjcPV['njFWj'](input[i], 0x0);\n        if (colors['length'] === 0x0) {\n            colors['push'](temp);\n            continue;\n        }\n        if (gzjcPV['ieLTS'](temp, colors[0x0])) {\n            colors['unshift'](temp);\n            continue;\n        }\n        if (temp > colors[gzjcPV['TEbAs'](colors['length'], 0x1)]) {\n            colors[gzjcPV['njFWj'](colors['length'], 0x1)] = temp;\n            continue;\n        }\n        min = 0x0;\n        max = colors['length'] - 0x1;\n        while (gzjcPV['rZxQt'](max - min, 0x1)) {\n            mid = Math['floor'](gzjcPV['TbVUy'](max + min, 0x2));\n            if (gzjcPV['YFAzS'](colors[mid], temp)) {\n                max = mid;\n            } else {\n                min = mid;\n            }\n        }\n        colors[min] = temp;\n    }\n    console['log'](colors['length']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n2\n1\n4\n5\n3", "2"], ["4\n0\n0\n0\n0", "4"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0]-0;\n  var colors=[];\n  var temp;\n  var min,max,mid;\n  for(var i=1;i<input.length;i++){\n    temp=input[i]-0;\n    if(colors.length===0){\n      colors.push(temp);\n      continue;\n    }\n    if(temp<=colors[0]){\n      colors.unshift(temp);\n      continue;\n    }\n    if(temp>colors[colors.length-1]){\n      colors[colors.length-1]=temp;\n      continue;\n    }\n    min=0;\n    max=colors.length-1;\n    while(max-min>1){\n      mid=Math.floor((max+min)/2);\n      if(colors[mid]<=temp){\n        max=mid;\n      }else{\n        min=mid;\n      }\n    }\n    colors[min]=temp;\n  }\n  console.log(colors.length);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03067_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var VOTXIK = {\n        'vEUVf': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'TsUnG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'pPBxR': function (x, y) {\n            return x < y;\n        },\n        'xomzg': 'Yes'\n    };\n    var A = VOTXIK['vEUVf'](parseInt, input[0x0], 0xa);\n    var B = parseInt(input[0x1], 0xa);\n    var C = VOTXIK['TsUnG'](parseInt, input[0x2], 0xa);\n    if (VOTXIK['pPBxR'](A, B)) {\n        if (VOTXIK['pPBxR'](A, C) && VOTXIK['pPBxR'](C, B)) {\n            console['log'](VOTXIK['xomzg']);\n        } else {\n            console['log']('No');\n        }\n    } else {\n        if (VOTXIK['pPBxR'](B, C) && VOTXIK['pPBxR'](C, A)) {\n            console['log'](VOTXIK['xomzg']);\n        } else {\n            console['log']('No');\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/\\n|\\s/));", "test_cases": [["3 8 5", "Yes"], ["7 3 1", "No"], ["10 2 4", "Yes"], ["31 41 59", "No"]], "original": "\nfunction Main(input) {\n  // 数字\n  var A = parseInt(input[0], 10);\n  var B = parseInt(input[1], 10);\n  var C = parseInt(input[2], 10);\n  // 文字\n  // var A = input[0];\n\n  if (A < B) {\n    if (A < C && C < B) {\n      console.log('Yes');\n    } else {\n      console.log('No');\n    }\n  } else {\n    if (B < C && C < A) {\n      console.log('Yes');\n    } else {\n      console.log('No');\n    }\n  }\n}\n \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(/\\n|\\s/));", "language": "JavaScript"}
{"filename": "p03139_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var RVbqfj = {\n        'PNKCK': function (x, y) {\n            return x < y;\n        },\n        'uXXbd': function (x, y) {\n            return x - y;\n        },\n        'tSgOw': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x20');\n    var max = RVbqfj['PNKCK'](input[0x1], input[0x2]) ? input[0x1] : input[0x2];\n    var min = RVbqfj['uXXbd'](input[0x0], input[0x1]) > input[0x2] ? 0x0 : RVbqfj['uXXbd'](input[0x2], RVbqfj['uXXbd'](input[0x0], input[0x1]));\n    console['log'](RVbqfj['tSgOw'](RVbqfj['tSgOw'](max, '\\x20'), min));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 3 5", "3 0"], ["10 7 5", "5 2"], ["100 100 100", "100 100"]], "original": "function main(input) {\n  input = input.split(\" \");\n  var max = input[1] < input[2] ? input[1] : input[2];\n  var min = input[0]-input[1] > input[2] ? 0 : input[2]-(input[0]-input[1]);\n  console.log(max + \" \" + min);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03149_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lpMkrV = {\n        'oQlYJ': '4|5|3|2|6|0|1',\n        'uCqpD': function (x, y) {\n            return x < y;\n        },\n        'NNkOO': function (x, y) {\n            return x == y;\n        },\n        'PlQpJ': function (x, y) {\n            return x == y;\n        },\n        'VXioT': function (x, y) {\n            return x == y;\n        },\n        'fDrrT': function (x, y) {\n            return x == y;\n        },\n        'obNgX': 'YES'\n    };\n    var UYumqk = lpMkrV['oQlYJ']['split']('|');\n    var yRNfEd = 0x0;\n    while (!![]) {\n        switch (UYumqk[yRNfEd++]) {\n        case '0':\n            for (var i = 0x0; lpMkrV['uCqpD'](i, 0x4); i++) {\n                if (lpMkrV['NNkOO'](tmp[i], '1')) {\n                    a = 0x1;\n                }\n                if (lpMkrV['NNkOO'](tmp[i], '9')) {\n                    b = 0x1;\n                }\n                if (lpMkrV['PlQpJ'](tmp[i], '7')) {\n                    c = 0x1;\n                }\n                if (lpMkrV['VXioT'](tmp[i], '4')) {\n                    d = 0x1;\n                }\n            }\n            continue;\n        case '1':\n            if (a == 0x1 && b == 0x1 && lpMkrV['NNkOO'](c, 0x1) && lpMkrV['fDrrT'](d, 0x1)) {\n                console['log'](lpMkrV['obNgX']);\n            } else {\n                console['log']('NO');\n            }\n            continue;\n        case '2':\n            c = 0x0;\n            continue;\n        case '3':\n            b = 0x0;\n            continue;\n        case '4':\n            tmp = input['split']('\\x20');\n            continue;\n        case '5':\n            a = 0x0;\n            continue;\n        case '6':\n            d = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 7 9 4", "YES"], ["1 9 7 4", "YES"], ["1 2 9 1", "NO"], ["4 9 0 8", "NO"]], "original": "function Main(input) {\n\ttmp = input.split(\" \");\n\ta=0;\n\tb=0;\n\tc=0;\n\td=0;\n\tfor ( var i = 0 ; i < 4 ; i++ ){\n\t\tif(tmp[i]==\"1\"){\n\t\t\ta=1;\n\t\t}\n\t\tif(tmp[i]==\"9\"){\n\t\t\tb=1;\n\t\t}\n\t\tif(tmp[i]==\"7\"){\n\t\t\tc=1;\n\t\t}\n\t\tif(tmp[i]==\"4\"){\n\t\t\td=1;\n\t\t}\n\t}\n\tif(a==1 && b==1 && c==1 && d==1){\n\t\tconsole.log(\"YES\");\n\t}else{\n\t\tconsole.log(\"NO\");\n\t}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03475_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const hBANfS = {\n        'unOlh': function (x, y) {\n            return x < y;\n        },\n        'LNXcR': function (x, y) {\n            return x > y;\n        },\n        'mVfuk': function (x, y) {\n            return x - y;\n        },\n        'kmjae': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split'](/\\n/);\n    const n = ~~input['shift']();\n    input = input['map'](v => v['split'](/\\s/)['map'](x => ~~x));\n    let ans = '';\n    for (let i = 0x0; hBANfS['unOlh'](i, input['length']); i++) {\n        let time = 0x0;\n        let wait = 0x0;\n        for (let j = i; hBANfS['unOlh'](j, input['length']); j++) {\n            time += hBANfS['LNXcR'](time, input[j][0x1]) ? 0x0 : hBANfS['mVfuk'](input[j][0x1], time);\n            time += input[j][0x0];\n        }\n        ans += hBANfS['kmjae'](time, '\\x0a');\n    }\n    ans += '0\\x0a';\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n6 5 1\n1 10 1", "12\n11\n0"], ["4\n12 24 6\n52 16 4\n99 2 2", "187\n167\n101\n0"], ["4\n12 13 1\n44 17 17\n66 4096 64", "4162\n4162\n4162\n0"]], "original": "\"use strict\";\n\nfunction main(input) {\n  //かかる秒数　開業からの運行開始　運行間隔\n  input = input.split(/\\n/);\n  const n = ~~input.shift();\n  input = input.map(v => v.split(/\\s/).map(x => ~~x));\n\n  //[[12, 13, 1], [44, 17, 17], [66, 4096, 64]]\n  let ans = \"\";\n  for (let i = 0; i < input.length; i++) {\n    let time = 0;\n    let wait = 0;\n    for (let j = i; j < input.length; j++) {\n      time += time > input[j][1] ? 0 : input[j][1] - time;\n      time += input[j][0];\n    }\n    ans += time + \"\\n\";\n  }\n\n  ans += \"0\\n\";\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03564_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nfunction Main(input) {\n    var sqWpLW = {\n        'TZsXQ': function (x, y) {\n            return x <= y;\n        },\n        'wNDNZ': function (x, y) {\n            return x < y;\n        },\n        'OexWM': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var BxqEqa = '5|1|4|0|7|3|6|2'['split']('|');\n    var qMzSfr = 0x0;\n    while (!![]) {\n        switch (BxqEqa[qMzSfr++]) {\n        case '0':\n            var n = Number(line0[0x0]);\n            continue;\n        case '1':\n            var line0 = tmp[0x0]['split']('\\x20');\n            continue;\n        case '2':\n            console['log'](ans);\n            continue;\n        case '3':\n            var ans = 0x1;\n            continue;\n        case '4':\n            var line1 = tmp[0x1]['split']('\\x20');\n            continue;\n        case '5':\n            var tmp = input['split']('\\x0a');\n            continue;\n        case '6':\n            for (var i = 0x1; sqWpLW['TZsXQ'](i, n); i++) {\n                if (sqWpLW['wNDNZ'](ans, k))\n                    ans *= 0x2;\n                else\n                    ans += k;\n            }\n            continue;\n        case '7':\n            var k = sqWpLW['OexWM'](Number, line1[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n3", "10"], ["10\n10", "76"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \n// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がline1, 2行目がline2, …に入る\n  var tmp = input.split(\"\\n\");\n  var line0 = tmp[0].split(\" \");\n  var line1 = tmp[1].split(\" \");\n  //var line2 = tmp[2].split(\" \");\n  //var line3 = tmp[3].split(\" \");\n\n  var n = Number(line0[0]);\n  var k = Number(line1[0]);\n//  var b = Number(line0[2]);\n\n  var ans = 1;\n\n  //console.log( n+\" \"+ k +\" \"+ \" hoge \")\n  \n  for(var i=1; i <=n; i++){\n    if(ans < k) ans *= 2;\n    else ans += k;\n  }\n\n  console.log(ans);\n  \n  \n\n\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03699_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var YYrzau = {\n        'iuCaj': '6|2|8|4|0|1|5|7|3|9',\n        'qkpwc': function (x, y) {\n            return x == y;\n        },\n        'kIsrs': function (x, y) {\n            return x % y;\n        },\n        'kvCnh': function (x, y) {\n            return x < y;\n        },\n        'dxpbE': function (x, y) {\n            return x - y;\n        }\n    };\n    var UcwFPI = YYrzau['iuCaj']['split']('|');\n    var GvPZQh = 0x0;\n    while (!![]) {\n        switch (UcwFPI[GvPZQh++]) {\n        case '0':\n            input['sort'](function (a, b) {\n                return KKlmHb['GJuhu'](a, b);\n            });\n            continue;\n        case '1':\n            var sum = 0x0;\n            continue;\n        case '2':\n            input = input['trim']()['split']('\\x0a')['map'](input => Number(input));\n            continue;\n        case '3':\n            while (YYrzau['qkpwc'](YYrzau['kIsrs'](sum, 0xa), 0x0) && sum != 0x0) {\n                sum -= input[count];\n                count++;\n            }\n            continue;\n        case '4':\n            input['shift']();\n            continue;\n        case '5':\n            for (var i = 0x0; YYrzau['kvCnh'](i, input['length']); i++) {\n                sum += input[i];\n            }\n            continue;\n        case '6':\n            var KKlmHb = {\n                'GJuhu': function (x, y) {\n                    return YYrzau['dxpbE'](x, y);\n                }\n            };\n            continue;\n        case '7':\n            var count = 0x0;\n            continue;\n        case '8':\n            var len = input[0x0];\n            continue;\n        case '9':\n            console['log'](sum);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n5\n10\n15", "25"], ["3\n10\n10\n15", "35"], ["3\n10\n20\n30", "0"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map((input)=>Number(input));\n  var len = input[0];\n  input.shift();\n  input.sort(function(a,b){\n  \treturn a - b;\n  });\n  var sum = 0;\n  for(var i = 0; i < input.length; i++){\n    sum += input[i];\n  }\n  var count = 0;\n  while(sum % 10 == 0 && sum != 0){\n     sum -= input[count];\n    count++;\n  }\n  console.log(sum);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03730_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const KTEvBu = {\n        'TAcve': function (x, y) {\n            return x == y;\n        },\n        'fvHCj': 'YES'\n    };\n    let Nums = arg['split']('\\x0a')[0x0]['split']('\\x20')['map'](n => Number(n));\n    let A = Nums[0x0], B = Nums[0x1], C = Nums[0x2];\n    let ans = 'NO';\n    for (let i = 0x1; i <= B; i++) {\n        if (KTEvBu['TAcve'](A * i % B, C)) {\n            ans = KTEvBu['fvHCj'];\n        }\n    }\n    console['log'](ans);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 5 1", "YES"], ["2 2 1", "NO"], ["1 100 97", "YES"], ["40 98 58", "YES"], ["77 42 36", "NO"]], "original": "\"use strict\";\n    \nconst main = arg => {\n  // とりあえず切り分け\n  let Nums = arg.split(\"\\n\")[0].split(\" \").map(n => Number(n));  \n  let A = Nums[0],B = Nums[1], C = Nums[2];\n  let ans = \"NO\";\n  // 解説見ての回答\n  for(let i = 1; i<= B; i++){\n  \tif(A*i % B == C){\n\t\tans = \"YES\"\n    }\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03804_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nconst NM = input[0x0]['split']('\\x20')['map'](Number);\nconst N = NM[0x0];\nconst M = NM[0x1];\nconst As = input['slice'](0x1, N + 0x1);\nconst Bs = input['slice'](N + 0x1, N + M + 0x1);\nfor (let ax = 0x0; ax < N - M; ax++) {\n    for (let ay = 0x0; ay < N - M; ay++) {\n        let flag = !![];\n        for (let bx = 0x0; bx < M; bx++) {\n            for (let by = 0x0; by < M; by++) {\n                if (As[ax + bx][ay + by] !== Bs[bx][by]) {\n                    flag = ![];\n                    break;\n                }\n            }\n            if (!flag)\n                break;\n        }\n        if (flag) {\n            console['log']('Yes');\n            process['exit'](0x0);\n        }\n    }\n}\nconsole['log']('No');", "test_cases": [["3 2\n#.#\n.#.\n#.#\n#.\n.#", "Yes"], ["4 1\n....\n....\n....\n....\n#", "No"]], "original": "'use strict';\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nconst NM = input[0].split(' ').map(Number);\nconst N = NM[0];\nconst M = NM[1];\nconst As = input.slice(1, N + 1);\nconst Bs = input.slice(N + 1, N + M + 1);\n\nfor (let ax = 0; ax < N - M; ax++) {\n    for (let ay = 0; ay < N - M; ay++) {\n        let flag = true;\n        for (let bx = 0; bx < M; bx++) {\n            for (let by = 0; by < M; by++) {\n                if (As[ax + bx][ay + by] !== Bs[bx][by]) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (!flag) break;\n        }\n\n        if (flag) {\n            console.log('Yes');\n            process.exit(0);\n        }\n    }\n}\nconsole.log('No');", "language": "JavaScript"}
{"filename": "p02263_1", "type": "JavaScript", "obfuscated": "let content = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', buf => {\n    content += buf;\n});\nprocess['stdin']['on']('end', () => {\n    const onEpqr = {\n        'cmZaP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'MiliU': function (callee, param1) {\n            return callee(param1);\n        },\n        'EfGvg': '+-/*',\n        'TaWOa': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const stack = [];\n    const tokens = content['trim']()['split']('\\x20')['map'](line => {\n        const num = onEpqr['cmZaP'](parseInt, line, 0xa);\n        return onEpqr['MiliU'](isNaN, num) ? line : num;\n    });\n    const opTokens = onEpqr['EfGvg']['split']('');\n    for (const token of tokens) {\n        if (opTokens['includes'](token)) {\n            const b = stack['pop']();\n            const a = stack['pop']();\n            stack['push'](onEpqr['TaWOa'](expr, token, a, b));\n        } else {\n            stack['push'](token);\n        }\n    }\n    console['log'](stack['pop']());\n});\nconst expr = (op, a, b) => {\n    const DLDlrS = {\n        'KHSlq': function (x, y) {\n            return x * y;\n        },\n        'NgZyZ': function (x, y) {\n            return x + y;\n        },\n        'MiAYK': function (x, y) {\n            return x - y;\n        }\n    };\n    switch (op) {\n    case '*':\n        return DLDlrS['KHSlq'](a, b);\n    case '/':\n        return a / b;\n    case '+':\n        return DLDlrS['NgZyZ'](a, b);\n    case '-':\n        return DLDlrS['MiAYK'](a, b);\n    }\n};", "test_cases": [["1 2 +", "3"], ["1 2 + 3 4 - *", "-3"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\n\nprocess.stdin.on('end', () => {\n  const stack = [];\n  const tokens = content\n    .trim()\n    .split(' ')\n    .map(line => {\n      const num = parseInt(line, 10);\n      return isNaN(num) ? line : num;\n    });\n\n  const opTokens = '+-/*'.split('');\n  for (const token of tokens) {\n    if (opTokens.includes(token)) {\n      const b = stack.pop();\n      const a = stack.pop();\n      stack.push(expr(token, a, b));\n    } else {\n      stack.push(token);\n    }\n\n  }\n\n  console.log(stack.pop());\n});\n\nconst expr = (op, a, b) => {\n  switch(op) {\n    case '*':\n      return a * b;\n    case '/':\n      return a / b;\n    case '+':\n      return a + b;\n    case '-':\n      return a - b;\n  }\n};\n", "language": "JavaScript"}
{"filename": "p02609_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\n(input => {\n    const RVsIHq = {\n        'hcOuL': function (x, y) {\n            return x & y;\n        },\n        'Tsecf': function (x, y) {\n            return x >>> y;\n        },\n        'kwtaH': function (x, y) {\n            return x === y;\n        },\n        'KpYAK': function (callee, param1) {\n            return callee(param1);\n        },\n        'OtoMm': function (x, y) {\n            return x - y;\n        },\n        'rbItg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'IzkcG': function (x, y) {\n            return x + y;\n        },\n        'RTUSG': function (callee, param1) {\n            return callee(param1);\n        },\n        'FRqAG': function (x, y) {\n            return x < y;\n        },\n        'wYsQx': function (x, y) {\n            return x - y;\n        },\n        'PszoH': function (x, y) {\n            return x - y;\n        },\n        'rUeKY': function (x, y) {\n            return x === y;\n        },\n        'xZqBW': function (x, y) {\n            return x + y;\n        },\n        'tZPQv': function (x, y) {\n            return x % y;\n        },\n        'vnXps': function (x, y) {\n            return x === y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = RVsIHq['OtoMm'](lines[0x0], 0x0);\n    const X = lines[0x1];\n    const popcount = n => {\n        let count = 0x0;\n        do {\n            RVsIHq['hcOuL'](n, 0x1) ? count++ : count;\n        } while (n = RVsIHq['Tsecf'](n, 0x1));\n        return count;\n    };\n    const f = n => {\n        if (RVsIHq['kwtaH'](n, 0x0)) {\n            return 0x0;\n        }\n        let count = 0x1;\n        while (n %= RVsIHq['KpYAK'](popcount, n))\n            count++;\n        return count;\n    };\n    const x = RVsIHq['rbItg'](parseInt, X, 0x2);\n    const pr = RVsIHq['KpYAK'](popcount, x) - 0x1;\n    const nx = RVsIHq['IzkcG'](RVsIHq['RTUSG'](popcount, x), 0x1);\n    for (let i = 0x0; RVsIHq['FRqAG'](i, N); i++) {\n        let n = x ^ Math['pow'](0x2, RVsIHq['wYsQx'](RVsIHq['PszoH'](N, i), 0x1));\n        if (RVsIHq['rUeKY'](n, 0x0)) {\n            console['log'](0x0);\n        } else {\n            console['log'](RVsIHq['xZqBW'](f(RVsIHq['tZPQv'](n, RVsIHq['vnXps'](X[i], '1') ? pr : nx)), 0x1));\n        }\n    }\n})(input);", "test_cases": [["3\n011", "2\n1\n1"], ["23\n00110111001011011001110", "2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n3"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n\n    const lines = input.split('\\n')\n    const N = lines[0] - 0\n    const X = lines[1]\n\n    const popcount = n => {\n        let count = 0\n        do {\n            n & 1 ? count++ : count\n        } while  (n = n >>> 1)\n        return count\n    }\n\n    const f = n => {\n        if (n === 0) {\n            return 0\n        }\n        let count = 1\n        while (n %= popcount(n)) count++\n        return count\n    }\n\n    const x = parseInt(X, 2)\n    const pr = popcount(x) - 1\n    const nx = popcount(x) + 1\n    for (let i = 0; i < N; i++) {\n        let n = x ^ Math.pow(2, N - i - 1)\n        if (n === 0) {\n            console.log(0)\n        } else {\n            console.log(f(n % (X[i] === '1' ? pr : nx)) + 1)\n        }\n    }\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02925_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(stdin) {\n    const efnWSn = {\n        'WPjWo': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const input = stdin['split']('\\x0a');\n    const N = efnWSn['WPjWo'](Number, input['shift']());\n    const params = input['map'](p => p['split']('\\x20')['map'](v => parseInt(v, 0xa)));\n    console['log'](solve(params));\n}\nfunction solve(params) {\n    const SjEhso = {\n        'YIWtF': function (x, y) {\n            return x - y;\n        },\n        'CDirL': function (callee, param1) {\n            return callee(param1);\n        },\n        'tMpLp': function (x, y) {\n            return x === y;\n        },\n        'tvvpr': function (x, y) {\n            return x < y;\n        },\n        'aRcxO': function (callee) {\n            return callee();\n        }\n    };\n    const l = params['length'];\n    function matching() {\n        let matched = ![];\n        for (let i = 0x0; i < l; ++i) {\n            const op = SjEhso['YIWtF'](params[i][cur[i]], 0x1);\n            if (SjEhso['CDirL'](isNaN, op))\n                continue;\n            if (SjEhso['tMpLp'](params[op][cur[op]] - 0x1, i)) {\n                matched = !![];\n                ++cur[i];\n                ++cur[op];\n            }\n        }\n        return matched;\n    }\n    function isNotCompleted() {\n        return cur['some'](v => v < l - 0x1);\n    }\n    const cur = [];\n    for (let i = 0x0; SjEhso['tvvpr'](i, l); ++i) {\n        cur[i] = 0x0;\n    }\n    let day = 0x1;\n    while (SjEhso['aRcxO'](isNotCompleted)) {\n        const res = SjEhso['aRcxO'](matching);\n        if (res === ![])\n            return -0x1;\n        ++day;\n    }\n    return day;\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n2 3\n1 3\n1 2", "3"], ["4\n2 3 4\n1 3 4\n4 1 2\n3 1 2", "4"], ["3\n2 3\n3 1\n1 2", "-1"]], "original": "'use strict';\n\nfunction main(stdin) {\n  const input = stdin.split('\\n');\n  const N = Number(input.shift());\n  const params = input.map(p => p.split(' ').map(v => parseInt(v, 10)));\n  \n  console.log(solve(params));\n}\n\nfunction solve(params) {\n  const l = params.length;\n\n  function matching() {\n    let matched = false;\n\n    for (let i = 0; i < l; ++i) {\n      const op = params[i][cur[i]] - 1;\n      if (isNaN(op)) continue;\n      if (params[op][cur[op]] - 1 === i) {\n        matched = true;\n        ++cur[i];\n        ++cur[op];\n      }\n    }\n\n    return matched;\n  }\n\n  function isNotCompleted() {\n    return cur.some(v => v < l - 1);\n  }\n\n  const cur = [];\n  for (let i = 0; i < l; ++i) {\n    cur[i] = 0;\n  }\n\n  let day = 1;\n  while (isNotCompleted()) {\n    const res = matching();\n    if (res === false) return -1;\n    ++day;\n  }\n\n  return day;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim());", "language": "JavaScript"}
{"filename": "p03111_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const dvIEJO = {\n        'DugiY': function (x, y) {\n            return x > y;\n        },\n        'WuMZd': function (x, y) {\n            return x - y;\n        },\n        'PGbgb': function (x, y) {\n            return x + y;\n        },\n        'HhWTa': function (x, y) {\n            return x - y;\n        },\n        'cGxQC': function (x, y) {\n            return x + y;\n        },\n        'JyplO': function (x, y) {\n            return x + y;\n        },\n        'NanQJ': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'JUBsZ': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    let ABC = input['shift']()['split']('\\x20')['map'](v => Number(v));\n    const N = ABC['shift']();\n    input = input['map'](v => Number(v))['sort']((a, b) => b - a);\n    const INF = Math['pow'](0xa, 0x9);\n    const dfs = (cur, a, b, c) => {\n        if (cur === N) {\n            if (dvIEJO['DugiY'](Math['min'](a, b, c), 0x0)) {\n                return dvIEJO['WuMZd'](dvIEJO['PGbgb'](dvIEJO['PGbgb'](Math['abs'](a - ABC[0x0]), Math['abs'](dvIEJO['HhWTa'](b, ABC[0x1]))), Math['abs'](c - ABC[0x2])), 0x1e);\n            }\n            return INF;\n        }\n        return Math['min'](dfs(dvIEJO['cGxQC'](cur, 0x1), a, b, c), dvIEJO['PGbgb'](dfs(cur + 0x1, dvIEJO['PGbgb'](a, input[cur]), b, c), 0xa), dfs(dvIEJO['PGbgb'](cur, 0x1), a, dvIEJO['JyplO'](b, input[cur]), c) + 0xa, dvIEJO['JyplO'](dvIEJO['NanQJ'](dfs, cur + 0x1, a, b, c + input[cur]), 0xa));\n    };\n    console['log'](dvIEJO['JUBsZ'](dfs, 0x0, 0x0, 0x0, 0x0));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 100 90 80\n98\n40\n30\n21\n80", "23"], ["8 100 90 80\n100\n100\n90\n90\n90\n80\n80\n80", "0"], ["8 1000 800 100\n300\n333\n400\n444\n500\n555\n600\n666", "243"]], "original": "'use strict'\nfunction main(input) {\n  input = input.trim().split('\\n')\n  let ABC = input.shift().split(' ').map(v => Number(v))\n  const N = ABC.shift()\n  input = input.map(v => Number(v)).sort((a, b) => b - a)\n  const INF = Math.pow(10, 9)\n\n  const dfs = (cur, a, b, c) => {\n    if (cur === N) {\n      if (Math.min(a, b, c) > 0) {\n        return Math.abs(a - ABC[0]) + Math.abs(b - ABC[1]) + Math.abs(c - ABC[2]) - 30\n      }\n      return INF\n    }\n    return Math.min(\n      dfs(cur+1, a, b, c),\n      dfs(cur+1, a + input[cur], b, c) + 10,\n      dfs(cur+1, a, b + input[cur], c) + 10,\n      dfs(cur+1, a, b, c + input[cur]) + 10\n    )\n  }\n  console.log(dfs(0,0,0,0))\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03172_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst mod = 0x3b9aca00 + 0x7;\nfunction solve(N, K, A) {\n    var fzRSdl = {\n        'UIjaE': '4|3|1|0|2',\n        'bxrWK': function (x, y) {\n            return x - y;\n        },\n        'rnoOM': function (x, y) {\n            return x >= y;\n        },\n        'HcpTZ': function (x, y) {\n            return x === y;\n        },\n        'uZsgE': function (x, y) {\n            return x >= y;\n        },\n        'hkCot': function (x, y) {\n            return x - y;\n        },\n        'yVCYL': function (x, y) {\n            return x + y;\n        },\n        'SEWQD': function (x, y) {\n            return x % y;\n        },\n        'bNXBf': function (x, y) {\n            return x % y;\n        },\n        'dryLJ': function (x, y) {\n            return x % y;\n        },\n        'RtepE': function (x, y) {\n            return x <= y;\n        },\n        'FpyFV': function (x, y) {\n            return x % y;\n        },\n        'ByHTy': function (x, y) {\n            return x - y;\n        },\n        'iTwBD': function (x, y) {\n            return x + y;\n        },\n        'WVxaa': function (x, y) {\n            return x >= y;\n        },\n        'Svraz': function (x, y) {\n            return x % y;\n        },\n        'dIkzR': function (x, y) {\n            return x % y;\n        },\n        'KorHK': function (x, y) {\n            return x % y;\n        },\n        'RKGBz': function (x, y) {\n            return x + y;\n        }\n    };\n    var PNrXTx = fzRSdl['UIjaE']['split']('|');\n    var NFDgdT = 0x0;\n    while (!![]) {\n        switch (PNrXTx[NFDgdT++]) {\n        case '0':\n            for (var i = fzRSdl['bxrWK'](N, 0x1); fzRSdl['rnoOM'](i, 0x0); i--) {\n                for (var j = 0x0; j <= K; j++) {\n                    if (fzRSdl['HcpTZ'](i, N - 0x1)) {\n                        dp[j] = j <= A[i] ? 0x1 : 0x0;\n                        prefix[i][j] = fzRSdl['uZsgE'](fzRSdl['hkCot'](j, 0x1), 0x0) ? fzRSdl['yVCYL'](fzRSdl['SEWQD'](prefix[i][fzRSdl['bxrWK'](j, 0x1)], mod), fzRSdl['bNXBf'](dp[j], mod)) : fzRSdl['dryLJ'](dp[j], mod);\n                    } else {\n                        dp[j] = fzRSdl['RtepE'](j, A[i]) ? fzRSdl['FpyFV'](prefix[fzRSdl['yVCYL'](i, 0x1)][j], mod) : fzRSdl['ByHTy'](fzRSdl['dryLJ'](prefix[fzRSdl['iTwBD'](i, 0x1)][j], mod), prefix[fzRSdl['iTwBD'](i, 0x1)][j - A[i] - 0x1] % mod);\n                        prefix[i][j] = fzRSdl['WVxaa'](j - 0x1, 0x0) ? fzRSdl['dryLJ'](prefix[i][j - 0x1], mod) + fzRSdl['Svraz'](dp[j], mod) : fzRSdl['dIkzR'](dp[j], mod);\n                    }\n                }\n            }\n            continue;\n        case '1':\n            var prefix = new Array(N)['fill'](0x0)['map'](e => new Array(K + 0x1)['fill'](0x0));\n            continue;\n        case '2':\n            return fzRSdl['KorHK'](dp[K], mod);\n        case '3':\n            var dp = new Array(fzRSdl['RKGBz'](K, 0x1))['fill'](0x0);\n            continue;\n        case '4':\n            if (K === 0x0) {\n                return 0x1;\n            }\n            continue;\n        }\n        break;\n    }\n}\nfunction main(input) {\n    var HOrezC = {\n        'VExEo': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    var KSqTdy = '5|1|0|2|3|6|4'['split']('|');\n    var ysLHNX = 0x0;\n    while (!![]) {\n        switch (KSqTdy[ysLHNX++]) {\n        case '0':\n            var N = NK[0x0];\n            continue;\n        case '1':\n            var NK = lines[0x0]['split']('\\x20')['map'](l => parseInt(l));\n            continue;\n        case '2':\n            var K = NK[0x1];\n            continue;\n        case '3':\n            var A = lines[0x1]['split']('\\x20')['map'](l => parseInt(l));\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        case '5':\n            var lines = input['split']('\\x0a');\n            continue;\n        case '6':\n            var ans = HOrezC['VExEo'](solve, N, K, A);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4\n1 2 3", "5"], ["1 10\n9", "0"], ["2 0\n0 0", "1"], ["4 100000\n100000 100000 100000 100000", "665683269"]], "original": "'use strict'\n\nconst mod = 1e9 + 7\n\nfunction solve(N, K, A) {\n  if (K === 0) {\n    return 1\n  }\n  var dp = new Array(K+1).fill(0)\n  var prefix = new Array(N).fill(0).map(e => new Array(K+1).fill(0))\n\n  for (var i = N-1; i >= 0; i--) {\n    for (var j = 0; j <= K; j++) {\n      if (i === (N-1)) {\n        dp[j] = j <= A[i] ? 1 : 0\n        prefix[i][j] = (j - 1) >= 0 ? (prefix[i][j-1] % mod) + (dp[j] % mod) : dp[j] % mod\n      } else {\n        dp[j] = j <= A[i] ? prefix[i+1][j] % mod : (prefix[i+1][j] % mod) - (prefix[i+1][j - A[i] - 1] % mod)\n        prefix[i][j] = (j - 1) >= 0 ? (prefix[i][j-1] % mod) + (dp[j] % mod) : dp[j] % mod\n      }\n    }\n  }\n  return dp[K] % mod\n}\n\nfunction main(input) {\n  var lines = input.split(\"\\n\")\n  var NK = lines[0].split(' ').map(l => parseInt(l))\n  var N = NK[0]\n  var K = NK[1]\n  var A = lines[1].split(' ').map(l => parseInt(l))\n  var ans = solve(N, K, A)\n  console.log(ans)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03196_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nN = l['shift']() * 0x1;\nP = l['shift']() * 0x1;\n_primFactors = function (n) {\n    var tHzTQw = {\n        'BeabJ': '8|2|5|7|6|3|0|4|1',\n        'ncFfm': function (x, y) {\n            return x <= y;\n        },\n        'emKCF': function (x, y) {\n            return x * y;\n        },\n        'zmJXi': function (x, y) {\n            return x === y;\n        },\n        'KLAqI': function (x, y) {\n            return x % y;\n        },\n        'vJbGj': function (x, y) {\n            return x === y;\n        },\n        'DzVwB': function (x, y) {\n            return x === y;\n        },\n        'CZzHk': function (x, y) {\n            return x % y;\n        },\n        'WcNnK': function (x, y) {\n            return x > y;\n        }\n    };\n    var utapyI = tHzTQw['BeabJ']['split']('|');\n    var SQmtwx = 0x0;\n    while (!![]) {\n        switch (utapyI[SQmtwx++]) {\n        case '0':\n            for (i = 0x3; tHzTQw['ncFfm'](tHzTQw['emKCF'](i, i), s); i += 0x2) {\n                r = 0x0;\n                if (tHzTQw['zmJXi'](tHzTQw['KLAqI'](n, i), 0x0)) {\n                    do {\n                        r++;\n                        n /= i;\n                    } while (tHzTQw['vJbGj'](n % i, 0x0));\n                    arr['push']({\n                        'n': i,\n                        'r': r\n                    });\n                }\n            }\n            continue;\n        case '1':\n            return arr;\n        case '2':\n            if (n == 0x1) {\n                return [{\n                        'n': 0x1,\n                        'r': 0x1\n                    }];\n            }\n            continue;\n        case '3':\n            if (tHzTQw['DzVwB'](tHzTQw['CZzHk'](n, i), 0x0)) {\n                do {\n                    r++;\n                    n /= i;\n                } while (tHzTQw['KLAqI'](n, i) === 0x0);\n                arr['push']({\n                    'n': i,\n                    'r': r\n                });\n            }\n            continue;\n        case '4':\n            if (tHzTQw['WcNnK'](n, 0x1)) {\n                arr['push']({\n                    'n': n,\n                    'r': 0x1\n                });\n            }\n            continue;\n        case '5':\n            s = n;\n            continue;\n        case '6':\n            r = 0x0;\n            continue;\n        case '7':\n            var i = 0x2;\n            continue;\n        case '8':\n            var arr = [];\n            continue;\n        }\n        break;\n    }\n};\narr = _primFactors(P);\nans = 0x1;\nfor (i = 0x0; i < arr['length']; i++) {\n    a = arr[i];\n    r = a['r'];\n    while (r >= N) {\n        ans *= a['n'];\n        r -= N;\n    }\n}\nconsole['log'](ans);", "test_cases": [["3 24", "2"], ["5 1", "1"], ["1 111", "111"], ["4 972439611840", "206"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\nN = l.shift() * 1\nP = l.shift() * 1\n\n// 素因数分解\n_primFactors = function(n) {\n  var arr = []\n  if (n == 1) {\n      return [{n:1, r:1}]\n  }\n  s = n\n\n  var i = 2\n  r = 0\n  if (n % i === 0) {\n    do {\n      r++\n      n /= i\n    } while(n%i===0)\n    arr.push({n: i, r: r})\n  }\n  \n  for (i = 3; i*i <= s; i+=2) {\n    r = 0\n    if (n % i === 0) {\n       do {\n           r++\n           n /= i\n       } while(n%i===0)\n       arr.push({n: i, r: r})\n    }\n  }\n  if (n > 1) {\n      arr.push({n: n, r: 1})\n  }\n  return arr\n}\n\narr = _primFactors(P)\nans = 1\nfor (i=0; i<arr.length;i++) {\n    a = arr[i]\n    r = a.r\n    while (r>=N) {\n        ans *= a.n\n        r -= N\n    }\n}\nconsole.log(ans)", "language": "JavaScript"}
{"filename": "p03265_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var sRIiqc = {\n        'hveMt': function (callee, param1) {\n            return callee(param1);\n        },\n        'uAguk': function (callee, param1) {\n            return callee(param1);\n        },\n        'XWZJN': function (callee, param1) {\n            return callee(param1);\n        },\n        'bLZrH': function (x, y) {\n            return x + y;\n        },\n        'urivY': function (x, y) {\n            return x - y;\n        },\n        'lenTL': function (x, y) {\n            return x + y;\n        }\n    };\n    var abcd = lines[0x0]['split']('\\x20');\n    var one = sRIiqc['hveMt'](Number, abcd[0x0]);\n    var two = sRIiqc['uAguk'](Number, abcd[0x1]);\n    var three = Number(abcd[0x2]);\n    var four = sRIiqc['XWZJN'](Number, abcd[0x3]);\n    var ans = [];\n    ans['push'](sRIiqc['bLZrH'](three, sRIiqc['urivY'](two, four)));\n    ans['push'](three + four - one);\n    ans['push'](sRIiqc['urivY'](sRIiqc['lenTL'](one, two), four));\n    ans['push'](three + two - one);\n    console['log'](ans['join']('\\x20'));\n});", "test_cases": [["0 0 0 1", "-1 1 -1 0"], ["2 3 6 6", "3 10 -1 7"], ["31 -41 -59 26", "-126 -64 -36 -131"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = []\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreader.on('line', (line) => {\n  lines.push(line);\n});\n\nreader.on('close', () => {\n var abcd = lines[0].split(' ');\n var one = Number(abcd[0]);\n var two = Number(abcd[1]);\n var three = Number(abcd[2]);\n var four = Number(abcd[3]);\n\n var ans = [];\n ans.push(three + (two - four));\n ans.push((three + four) - one);\n ans.push((one + two) - four);\n ans.push((three + two) - one);\n\n console.log(ans.join(' '));\n \n});", "language": "JavaScript"}
{"filename": "p03598_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var nAuAwS = {\n        'CgUHa': function (x, y) {\n            return x - y;\n        },\n        'sSIYi': function (x, y) {\n            return x * y;\n        },\n        'vAsZS': function (x, y) {\n            return x < y;\n        }\n    };\n    var input = input['split']('\\x0a');\n    var ballXList = input[0x2]['split']('\\x20');\n    var ret = 0x0;\n    for (var i = 0x0; i < input[0x0]; i++) {\n        var aDistance = ballXList[i];\n        var bDistance = nAuAwS['CgUHa'](input[0x1], ballXList[i]);\n        var ret = ret + nAuAwS['sSIYi'](nAuAwS['vAsZS'](aDistance, bDistance) ? aDistance : bDistance, 0x2);\n    }\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1\n10\n2", "4"], ["2\n9\n3 6", "12"], ["5\n20\n11 12 9 17 12", "74"]], "original": "function Main(input) {\n  var input = input.split('\\n');\n\n  var ballXList = input[2].split(' ');\n  var ret = 0;\n  for (var i = 0; i < input[0]; i++) {\n    var aDistance = ballXList[i];\n    var bDistance = input[1] - ballXList[i];\n    var ret = ret + (aDistance < bDistance ? aDistance : bDistance) * 2;\n  }\n\n  console.log(ret);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03767_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const uogAlO = {\n        'DTHuW': function (x, y) {\n            return x < y;\n        },\n        'qAWKF': function (x, y) {\n            return x * y;\n        }\n    };\n    const params = input['trim']()['split']('\\x0a');\n    const N = Number(params[0x0]['trim']());\n    const sortedA = params[0x1]['trim']()['split']('\\x20')['map'](Number)['sort']((a, b) => b - a);\n    let total = 0x0;\n    for (let i = 0x0; uogAlO['DTHuW'](i, N); i++) {\n        total += sortedA[uogAlO['qAWKF'](i, 0x2) + 0x1];\n    }\n    console['log'](total);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n5 2 8 5 1 5", "10"], ["10\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "10000000000"]], "original": "// https://atcoder.jp/contests/agc012/tasks/agc012_a\n\"use strict\";\nfunction Main(input) {\n  const params = input.trim().split(\"\\n\");\n  const N = Number(params[0].trim());\n  const sortedA = params[1]\n    .trim()\n    .split(\" \")\n    .map(Number)\n    .sort((a, b) => b - a);\n\n  let total = 0;\n  for (let i = 0; i < N; i++) {\n    total += sortedA[i * 2 + 1];\n  }\n\n  console.log(total);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03785_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var ZAeNii = {\n        'BzElR': '0|5|1|2|4|6|3',\n        'FRHfG': function (x, y) {\n            return x - y;\n        },\n        'PTdQa': function (x, y) {\n            return x === y;\n        }\n    };\n    var ejpNOT = ZAeNii['BzElR']['split']('|');\n    var QJXjXC = 0x0;\n    while (!![]) {\n        switch (ejpNOT[QJXjXC++]) {\n        case '0':\n            var s = s['split']('\\x0a');\n            continue;\n        case '1':\n            var t = s['slice'](0x1)['map'](e => parseInt(e, 0xa))['sort']((a, b) => a - b);\n            continue;\n        case '2':\n            var cnt = 0x1;\n            continue;\n        case '3':\n            console['log'](cnt);\n            continue;\n        case '4':\n            var c = zero[0x1];\n            continue;\n        case '5':\n            var zero = s[0x0]['split']('\\x20')['map'](e => parseInt(e, 0xa));\n            continue;\n        case '6':\n            for (var i = 0x1; i < zero[0x0]; i++) {\n                if (t[ZAeNii['FRHfG'](i, 0x1)] <= t[i] && t[i] <= t[ZAeNii['FRHfG'](i, 0x1)] + zero[0x2]) {\n                    c--;\n                    if (ZAeNii['PTdQa'](c, 0x0)) {\n                        cnt++;\n                        c = zero[0x1];\n                    }\n                } else {\n                    cnt++;\n                    c = zero[0x1];\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3 5\n1\n2\n3\n6\n12", "3"], ["6 3 3\n7\n6\n2\n8\n10\n6", "3"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\");\n  var zero = s[0].split(\" \").map(e => parseInt(e, 10));\n  var t = s.slice(1).map(e => parseInt(e, 10)).sort((a, b) => a - b);\n  var cnt = 1;\n  var c = zero[1];\n  for (var i = 1; i < zero[0]; i++) {\n    if (t[i - 1] <= t[i] && t[i] <= t[i - 1] + zero[2]) {\n      c--;\n      if (c === 0) {\n        cnt++;\n        c = zero[1];\n      }\n    } else {\n      cnt++;\n      c = zero[1];\n    }\n  }\n  console.log(cnt);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02257_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nArr['shift']();\nArr['sort'](function (a, b) {\n    return a - b;\n});\nvar max = Arr[Arr['length'] - 0x1];\nvar arr = [0x2];\nfor (var i = 0x3; i <= max; i = i + 0x2) {\n    var a = !![];\n    var sqrt = ~~Math['sqrt'](i) + 0x1;\n    for (var j = 0x0; j < arr['length']; j++) {\n        if (arr[j] > sqrt)\n            break;\n        if (i % arr[j] == 0x0) {\n            a = ![];\n            break;\n        }\n    }\n    if (a)\n        arr['push'](i);\n}\nvar num = 0x0;\nvar f = 0x0;\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (Arr[i] != 0x2 && Arr[i] % 0x2 == 0x0)\n        continue;\n    var index = arr['indexOf'](Arr[i], f);\n    if (index != -0x1) {\n        f = index;\n        num++;\n    }\n}\nconsole['log'](num);", "test_cases": [["5\n2\n3\n4\n5\n6", "3"], ["11\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n \nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nArr.shift();\nArr.sort(function(a,b){return a-b;});\nvar max=Arr[Arr.length-1];\nvar arr=[2];\n \nfor(var i=3;i<=max;i=i+2){\n   var a=true;\n   var sqrt=~~(Math.sqrt(i))+1;\n   for(var j=0;j<arr.length;j++){\n      if(arr[j]>sqrt)break;\n      if(i%arr[j]==0){\n         a=false;\n         break;\n      }\n   }\n   if(a)arr.push(i);\n}\n \nvar num=0;\nvar f=0;\n \nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]!=2 && Arr[i]%2==0)continue;\n   var index=arr.indexOf(Arr[i],f);\n   if(index!=-1){\n      f=index;\n      num++;\n   }\n}\nconsole.log(num);", "language": "JavaScript"}
{"filename": "p02267_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var brjrYm = {\n        'nIikV': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'YtgnP': function (callee, param1) {\n            return callee(param1);\n        },\n        'xPrRZ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'NsdNo': function (x, y) {\n            return x < y;\n        },\n        'VKEie': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var n = brjrYm['nIikV'](parseInt, input[0x0], 0xa);\n    var q = parseInt(input[0x2], 0xa);\n    input[0x1] = input[0x1]['split']('\\x20');\n    input[0x3] = input[0x3]['split']('\\x20');\n    var s = brjrYm['YtgnP'](Array, n), t = brjrYm['YtgnP'](Array, q);\n    for (var i = 0x0; i < n; i++) {\n        s[i] = brjrYm['xPrRZ'](parseInt, input[0x1][i], 0xa);\n    }\n    for (var i = 0x0; brjrYm['NsdNo'](i, q); i++) {\n        t[i] = brjrYm['xPrRZ'](parseInt, input[0x3][i], 0xa);\n    }\n    var count = 0x0;\n    for (var i = 0x0; brjrYm['NsdNo'](i, q); i++) {\n        var j;\n        for (j = 0x0; brjrYm['NsdNo'](j, n); j++) {\n            if (s[j] == t[i])\n                break;\n        }\n        if (brjrYm['VKEie'](j, n))\n            count++;\n    }\n    console['log'](count);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 2 3 4 5\n3\n3 4 1", "3"], ["3\n3 1 2\n1\n5", "0"], ["5\n1 1 2 2 3\n2\n1 2", "2"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var n = parseInt(input[0],10);\n    var q = parseInt(input[2],10);\n    input[1] = input[1].split(\" \");\n    input[3] = input[3].split(\" \");\n    var s = Array(n),t = Array(q);\n    for(var i = 0;i < n;i++){\n        s[i] = parseInt(input[1][i],10);\n    }\n    for(var i = 0;i < q;i++){\n        t[i] = parseInt(input[3][i],10);\n    }\n    var count = 0;\n\n    for(var i = 0;i < q;i++){\n        var j;\n        for(j = 0;j < n;j++){\n           if(s[j] == t[i])\n                break;\n        }\n        if(j < n)\n            count++;\n    }\n    console.log(count);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p02410_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split'](/\\n/g);\nvar n = +lines[0x0]['split']('\\x20')[0x0];\nvar m = +lines[0x0]['split']('\\x20')[0x1];\nvar A = lines['slice'](0x1, m);\nvar b = lines['slice'](m, m + m);\nvar ans;\nfor (var i = 0x0; i < n; i++) {\n    ans = 0x0;\n    for (var j = 0x0; j < m; j++) {\n        ans += A[i]['split']('\\x20')[j] * b[j];\n    }\n    console['log'](ans);\n}", "test_cases": [["3 4\n1 2 0 1\n0 3 0 1\n4 1 1 0\n1\n2\n3\n0", "5\n6\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar lines = (input.trim()).split(/\\n/g);\nvar n = +lines[0].split(' ')[0];\nvar m = +lines[0].split(' ')[1];\n\nvar A = lines.slice(1, m);\nvar b = lines.slice(m, m + m);\n\nvar ans;\nfor (var i = 0; i < n; i++) {\n    ans = 0;\n    for (var j = 0; j < m; j++) {\n        ans += A[i].split(' ')[j] * b[j];\n    }\n    console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p02412_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\n/);\nfor (let i = 0x0; i < input['length']; i++) {\n    let [n, x] = input[i]['split']('\\x20')['map'](Number);\n    if (n === 0x0 && x === 0x0) {\n        break;\n    }\n    let count = 0x0;\n    for (let j = 0x1; j <= n; j++) {\n        for (let k = 0x1; k <= n; k++) {\n            if (j === k) {\n                break;\n            }\n            for (let l = 0x1; l <= n; l++) {\n                if (j === l || k === l || j === k) {\n                    break;\n                }\n                if (j + k + l === x) {\n                    count++;\n                }\n            }\n        }\n    }\n    console['log'](count);\n}", "test_cases": [["5 9\n0 0", "2"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/);\nfor (let i = 0; i < input.length; i++) {\n    let [n, x] = input[i].split(' ').map(Number);\n    if (n === 0 && x === 0) {\n        break;\n    }\n    let count = 0;\n    for (let j = 1; j <= n; j++) {\n        for (let k = 1; k <= n; k++) {\n             if (j === k) {\n                 break;\n             }\n            for (let l = 1; l <= n; l++)  {\n               if (j === l || k === l || j === k) {\n                   break;\n               }\n               if (j + k + l === x) {\n                  count++;\n               }\n           }\n        }\n    }\n    console.log(count)\n}\n\n", "language": "JavaScript"}
{"filename": "p02748_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const rGELtD = {\n        'fabNZ': function (callee, param1) {\n            return callee(param1);\n        },\n        'MWSmR': function (callee, param1) {\n            return callee(param1);\n        },\n        'WGzEU': function (x, y) {\n            return x + y;\n        },\n        'GFoBv': function (x, y) {\n            return x + y;\n        },\n        'qgURO': function (x, y) {\n            return x + y;\n        },\n        'NJYOd': function (x, y) {\n            return x - y;\n        },\n        'MiNYM': function (x, y) {\n            return x <= y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const A = rGELtD['fabNZ'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const B = rGELtD['MWSmR'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const M = rGELtD['MWSmR'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const freezer = arg[0x1]['split']('\\x20')['map'](n => parseInt(n));\n    const renzi = arg[0x2]['split']('\\x20')['map'](n => parseInt(n));\n    const xyc = arg['slice'](0x3, rGELtD['WGzEU'](M, 0x4));\n    const minFreeze = Math['min'](...freezer);\n    const minRenzi = Math['min'](...renzi);\n    let temp = rGELtD['GFoBv'](minFreeze, minRenzi);\n    for (let i in xyc) {\n        let x = rGELtD['MWSmR'](parseInt, xyc[i]['split']('\\x20')[0x0]);\n        let y = rGELtD['MWSmR'](parseInt, xyc[i]['split']('\\x20')[0x1]);\n        let c = rGELtD['fabNZ'](parseInt, xyc[i]['split']('\\x20')[0x2]);\n        let cost = rGELtD['qgURO'](freezer[rGELtD['NJYOd'](x, 0x1)], renzi[y - 0x1]) - c;\n        if (rGELtD['MiNYM'](cost, temp)) {\n            temp = cost;\n        }\n    }\n    console['log'](temp);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 1\n3 3\n3 3 3\n1 2 1", "5"], ["1 1 2\n10\n10\n1 1 5\n1 1 10", "10"], ["2 2 1\n3 5\n3 5\n2 2 2", "6"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const A = parseInt(arg[0].split(\" \")[0]);\n    const B = parseInt(arg[0].split(\" \")[0]);\n    const M = parseInt(arg[0].split(\" \")[0]);\n    \n    const freezer = arg[1].split(\" \").map(n=>parseInt(n));\n    const renzi   = arg[2].split(\" \").map(n=>parseInt(n));\n    \n    const xyc = arg.slice(3, M + 4);\n    \n    const minFreeze = Math.min(...freezer);\n    const minRenzi = Math.min(...renzi);\n    \n    let temp = minFreeze + minRenzi;\n    \n    for(let i in xyc) {\n        let x = parseInt(xyc[i].split(\" \")[0]);\n        let y = parseInt(xyc[i].split(\" \")[1]);\n        let c = parseInt(xyc[i].split(\" \")[2]);\n        \n        let cost = freezer[x-1] + renzi[y-1] - c;\n        \n        if(cost <= temp) {\n            temp = cost;\n        }\n    }\n    \n    console.log(temp);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02813_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst permutation = ({\n    result: result = [],\n    pre: pre = [],\n    post: post,\n    n: n = post['length']\n}) => {\n    const PRdbRb = {\n        'KjjYY': function (callee, param1) {\n            return callee(param1);\n        },\n        'SPKwZ': function (x, y) {\n            return x - y;\n        }\n    };\n    if (n > 0x0) {\n        post['forEach']((_, i) => {\n            const rest = [...post];\n            const elem = rest['splice'](i, 0x1);\n            PRdbRb['KjjYY'](permutation, {\n                'result': result,\n                'pre': [\n                    ...pre,\n                    ...elem\n                ],\n                'post': rest,\n                'n': PRdbRb['SPKwZ'](n, 0x1)\n            });\n        });\n    } else {\n        result['push'](pre);\n    }\n    return result;\n};\nfunction Main(inputs) {\n    const NjRfcA = {\n        'mKbjx': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const input = inputs['split']('\\x0a');\n    const n = NjRfcA['mKbjx'](Number, input[0x0]);\n    const p = input[0x1];\n    const q = input[0x2];\n    const perm = permutation({ 'post': new Array(n)['fill'](0x0)['map']((_, i) => i + 0x1) })['map'](v => v['join']('\\x20'));\n    const a = perm['indexOf'](p);\n    const b = perm['indexOf'](q);\n    console['log'](Math['abs'](a - b));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 3 2\n3 1 2", "3"], ["8\n7 3 5 4 2 1 6 8\n3 8 2 5 4 6 7 1", "17517"], ["3\n1 2 3\n1 2 3", "0"]], "original": "'use strict';\n\nconst permutation = ({ result = [], pre = [], post, n = post.length }) => {\n  if (n > 0) {\n    post.forEach((_, i) => {\n      const rest = [...post];\n      const elem = rest.splice(i, 1);\n      permutation({ result, pre: [...pre, ...elem], post: rest, n: n - 1});\n    });\n  } else {\n    result.push(pre);\n  }\n  return result;\n};\n\nfunction Main(inputs) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  const input = inputs.split(\"\\n\");\n  const n = Number(input[0]);\n  const p = input[1];\n  const q = input[2];\n\n  const perm = permutation({ post: (new Array(n)).fill(0).map((_, i) => (i + 1)) }).map((v) => (v.join(' ')));\n  const a = perm.indexOf(p);\n  const b = perm.indexOf(q);\n\n  console.log(Math.abs(a - b));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02841_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var BZvANN = {\n        'hbhzK': '0|2|4|1|3|5',\n        'YBtdl': function (x, y) {\n            return x + y;\n        },\n        'BKGNm': '2019/',\n        'QkXcA': function (x, y) {\n            return x + y;\n        },\n        'yYYJL': function (x, y) {\n            return x == y;\n        }\n    };\n    var GfiuNg = BZvANN['hbhzK']['split']('|');\n    var qiTRyP = 0x0;\n    while (!![]) {\n        switch (GfiuNg[qiTRyP++]) {\n        case '0':\n            var input = input['split']('\\x0a');\n            continue;\n        case '1':\n            var d1 = new Date(BZvANN['YBtdl'](BZvANN['YBtdl'](BZvANN['YBtdl'](BZvANN['BKGNm'], i1[0x0]), '/'), i1[0x1]));\n            continue;\n        case '2':\n            var i1 = input[0x0]['split']('\\x20');\n            continue;\n        case '3':\n            var d2 = new Date(BZvANN['YBtdl'](BZvANN['QkXcA'](BZvANN['QkXcA'](BZvANN['BKGNm'], i2[0x0]), '/'), i2[0x1]));\n            continue;\n        case '4':\n            var i2 = input[0x1]['split']('\\x20');\n            continue;\n        case '5':\n            if (BZvANN['yYYJL'](d1['getMonth'](), d2['getMonth']())) {\n                console['log'](0x0);\n            } else {\n                console['log'](0x1);\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["11 16\n11 17", "0"], ["11 30\n12 1", "1"]], "original": "function Main(input) {\n\tvar input = input.split(\"\\n\");\n\tvar i1 = input[0].split(\" \");\n\tvar i2 = input[1].split(\" \");\n\n    var d1 = new Date(\"2019/\" + i1[0] + \"/\" + i1[1]);\n    var d2 = new Date(\"2019/\" + i2[0] + \"/\" + i2[1]);\n\n    if (d1.getMonth() == d2.getMonth()) {\n\t    console.log(0);\n    } else {\n\t    console.log(1);\n    }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02910_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const EoDfeE = {\n        'fPwxQ': function (x, y) {\n            return x < y;\n        },\n        'pttoL': function (x, y) {\n            return x === y;\n        },\n        'iGCaC': function (x, y) {\n            return x % y;\n        },\n        'tQilu': function (x, y) {\n            return x && y;\n        },\n        'iccnR': 'Yes'\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const S = args[0x0][0x0];\n    const N = S['length'];\n    let odd = !![];\n    let even = !![];\n    for (let i = 0x0; EoDfeE['fPwxQ'](i, N); i++) {\n        if (EoDfeE['pttoL'](EoDfeE['iGCaC'](i, 0x2), 0x0)) {\n            if (![\n                    'R',\n                    'U',\n                    'D'\n                ]['includes'](S[i]))\n                odd = ![];\n        } else {\n            if (![\n                    'L',\n                    'U',\n                    'D'\n                ]['includes'](S[i]))\n                even = ![];\n        }\n    }\n    if (EoDfeE['tQilu'](odd, even))\n        console['log'](EoDfeE['iccnR']);\n    else\n        console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["RUDLUDR", "Yes"], ["DULL", "No"], ["UUUUUUUUUUUUUUU", "Yes"], ["ULURU", "No"], ["RDULULDURURLRDULRLR", "Yes"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst S = args[0][0]\n\tconst N = S.length\n\tlet odd = true\n\tlet even = true\n\n\tfor (let i = 0; i < N; i++) {\n\t\tif (i % 2 === 0) {\n\t\t\tif (!['R', 'U', 'D'].includes(S[i])) odd = false\n\t\t} else {\n\t\t\tif (!['L', 'U', 'D'].includes(S[i])) even = false\n\t\t}\n\t}\n\n\tif (odd && even) console.log('Yes')\n\telse console.log('No')\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03266_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var yLtMXC = {\n        'MZeUW': '2|3|1|0|4',\n        'TFMNM': function (x, y) {\n            return x <= y;\n        },\n        'zTprq': function (x, y) {\n            return x * y;\n        },\n        'eqtZh': function (x, y) {\n            return x - y;\n        },\n        'xqzAR': function (x, y) {\n            return x / y;\n        },\n        'EBimj': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var zLqfQH = yLtMXC['MZeUW']['split']('|');\n    var CoHQpt = 0x0;\n    while (!![]) {\n        switch (zLqfQH[CoHQpt++]) {\n        case '0':\n            for (var i = 0x1; yLtMXC['TFMNM'](i, K); i++) {\n                if (yLtMXC['zTprq'](i, 0x2) % K === 0x0) {\n                    if (yLtMXC['TFMNM'](0x1, Math['floor'](yLtMXC['eqtZh'](N, i) / K))) {\n                        ans += Math['pow'](Math['floor'](yLtMXC['xqzAR'](N - i, K)) + 0x1, 0x3);\n                    } else {\n                        ans++;\n                    }\n                }\n            }\n            continue;\n        case '1':\n            var ans = 0x0;\n            continue;\n        case '2':\n            var N = Number(lines[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '3':\n            var K = yLtMXC['EBimj'](Number, lines[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["3 2", "9"], ["5 3", "1"], ["31415 9265", "27"], ["35897 932", "114191"]], "original": "var lines = [];\n\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0].split(\" \")[0]);\n    var K = Number(lines[0].split(\" \")[1]);\n\n    // a + b = K * m\n    // b + c = K * n\n    // c + a = K * l\n\n    // 2b = K(m + n - l)\n    // よって,2a, 2b, 2cはKの倍数である必要がある\n\n    var ans = 0;\n    for (var i = 1; i <= K; i++) {\n        if (i * 2 % K === 0) {\n            // i + K * m <= (N - i) / K\n            if (1 <= Math.floor((N - i) / K)) { ans += Math.pow(Math.floor(((N - i) / K)) + 1, 3) }\n            else { ans++; }\n\n        }\n    }\n\n    console.log(ans);\n\n});", "language": "JavaScript"}
{"filename": "p03323_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var NGnlak = {\n        'yQWaz': function (x, y) {\n            return x <= y;\n        },\n        'VVZdU': 'Yay!'\n    };\n    var ab = input[0x0]['split']('\\x20');\n    console['log'](NGnlak['yQWaz'](ab[0x0], 0x8) && NGnlak['yQWaz'](ab[0x1], 0x8) ? NGnlak['VVZdU'] : ':(');\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["5 4", "Yay!"], ["8 8", "Yay!"], ["11 4", ":("]], "original": "function Main(input) {\n  var ab = input[0].split(\" \");\n  console.log((ab[0]<=8 && ab[1] <= 8) ? 'Yay!' : ':(')\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03345_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst DELIMITER = '\\x20';\nconst A_INDEX = 0x0;\nconst B_INDEX = 0x1;\nconst K_INDEX = 0x3;\nconst LIMIT = Math['pow'](0xa, 0x12);\nconst process = input => {\n    const jEYCBI = {\n        'KOiXK': function (callee, param1) {\n            return callee(param1);\n        },\n        'HWcix': function (callee, param1) {\n            return callee(param1);\n        },\n        'EgrKA': 'Unfair',\n        'qEghm': function (x, y) {\n            return x === y;\n        },\n        'Zuibv': function (x, y) {\n            return x % y;\n        },\n        'zCdhr': function (x, y) {\n            return x === y;\n        }\n    };\n    const indexArr = input['split'](DELIMITER);\n    const ans = jEYCBI['KOiXK'](parseInt, indexArr[A_INDEX]) - parseInt(indexArr[B_INDEX]);\n    const KString = indexArr[K_INDEX];\n    const K = jEYCBI['HWcix'](parseInt, KString['charAt'](KString['length'] - 0x1));\n    if (Math['abs'](ans) > LIMIT) {\n        console['log'](jEYCBI['EgrKA']);\n    } else {\n        console['log'](jEYCBI['qEghm'](jEYCBI['Zuibv'](K, 0x2), 0x0) || jEYCBI['zCdhr'](ans, 0x0) ? ans : -ans);\n    }\n};\nprocess(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["1 2 3 1", "1"], ["2 3 2 0", "-1"], ["1000000000 1000000000 1000000000 1000000000000000000", "0"]], "original": "'use strict';\n\nconst DELIMITER = \" \";\nconst A_INDEX = 0;\nconst B_INDEX = 1;\nconst K_INDEX = 3;\nconst LIMIT = Math.pow(10, 18);\n\nconst process = input => {\n    const indexArr = input.split(DELIMITER);\n    const ans = parseInt(indexArr[A_INDEX]) - parseInt(indexArr[B_INDEX]);\n    const KString = indexArr[K_INDEX];\n    // JS rounds up large numbers; simply get last digit for modulo\n    const K = parseInt(KString.charAt(KString.length-1));\n\n    if (Math.abs(ans) > LIMIT) {\n        console.log('Unfair')\n    } else {\n        console.log(K % 2 === 0 || ans === 0 ? ans : -ans);\n    }\n}\n\nprocess(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03738_1", "type": "JavaScript", "obfuscated": "function rec(a, b) {\n    var jSzkaO = {\n        'Dlwwc': function (x, y) {\n            return x > y;\n        },\n        'JkhMe': 'GREATER',\n        'eKGCE': function (x, y) {\n            return x < y;\n        },\n        'hxtpW': function (x, y) {\n            return x == y;\n        },\n        'Kmiee': 'EQUAL'\n    };\n    if (jSzkaO['Dlwwc'](a[0x0], b[0x0])) {\n        return jSzkaO['JkhMe'];\n    } else if (jSzkaO['eKGCE'](a[0x0], b[0x0])) {\n        return 'LESS';\n    } else if (jSzkaO['hxtpW'](a['length'], 0x1)) {\n        return jSzkaO['Kmiee'];\n    } else {\n        return rec(a['slice'](0x1), b['slice'](0x1));\n    }\n}\nfunction main(s) {\n    var ogfUQo = {\n        'iOwzt': 'GREATER',\n        'XSPub': function (x, y) {\n            return x < y;\n        },\n        'fSZNs': 'LESS',\n        'DTYNK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    s = s['split']('\\x0a');\n    if (s[0x0]['length'] > s[0x1]['length']) {\n        console['log'](ogfUQo['iOwzt']);\n    } else if (ogfUQo['XSPub'](s[0x0]['length'], s[0x1]['length'])) {\n        console['log'](ogfUQo['fSZNs']);\n    } else {\n        console['log']('%s', ogfUQo['DTYNK'](rec, s[0x0]['slice'](0x1), s[0x1]['slice'](0x1)));\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["36\n24", "GREATER"], ["850\n3777", "LESS"], ["9720246\n22516266", "LESS"], ["123456789012345678901234567890\n234567890123456789012345678901", "LESS"]], "original": "function rec(a, b) {\n\tif (a[0] > b[0]) {return 'GREATER';}\n\telse if (a[0] < b[0]) {return 'LESS';}\n\telse if (a.length == 1) {return 'EQUAL'}\n\telse {return rec(a.slice(1), b.slice(1));}\n}\n\nfunction main(s) {\n\ts = s.split('\\n');\n\tif (s[0].length > s[1].length) {console.log('GREATER');}\n\telse if (s[0].length < s[1].length) {console.log('LESS');}\n\telse {console.log('%s', rec(s[0].slice(1), s[1].slice(1)));}\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03805_1", "type": "JavaScript", "obfuscated": "function main(lines) {\n    const HwxlFc = {\n        'MzVgR': function (x, y) {\n            return x == y;\n        },\n        'lFizu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KVfil': function (callee) {\n            return callee();\n        },\n        'BgmKT': function (callee, param1) {\n            return callee(param1);\n        },\n        'yeHEa': function (x, y) {\n            return x + y;\n        },\n        'Wdlxz': function (x, y) {\n            return x <= y;\n        },\n        'RHXXD': function (callee) {\n            return callee();\n        }\n    };\n    const [N, M] = HwxlFc['KVfil'](na);\n    const nodes = HwxlFc['BgmKT'](Array, HwxlFc['yeHEa'](N, 0x1))['fill'](0x0)['map'](() => new Set());\n    for (let i = 0x1; HwxlFc['Wdlxz'](i, M); i++) {\n        const [a, b] = HwxlFc['RHXXD'](na);\n        nodes[a]['add'](b);\n        nodes[b]['add'](a);\n    }\n    let ans = 0x0;\n    HwxlFc['lFizu'](searchRoute, nodes[0x1], [0x1]);\n    function searchRoute(node, passed) {\n        if (HwxlFc['MzVgR'](passed['length'], N))\n            return ++ans;\n        for (let n of node) {\n            if (passed['includes'](n))\n                continue;\n            HwxlFc['lFizu'](searchRoute, nodes[n], passed['concat'](n));\n        }\n    }\n    return ans;\n}\nconst lines = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nlet lineCount = 0x0;\nconst s = () => lines[lineCount++];\nconst n = () => Number(s());\nconst b = () => BigInt(s());\nconst sa = () => s()['split']('\\x20');\nconst na = () => sa()['map'](Number);\nconst ba = () => sa()['map'](BigInt);\nconst ans = main(lines);\nconsole['log'](ans);", "test_cases": [["3 3\n1 2\n1 3\n2 3", "2"], ["7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7", "1"]], "original": "function main(lines) {\n  const [N, M] = na();\n  \n  // 頂点情報構築\n  const nodes = Array(N+1).fill(0).map(() => new Set());\n  for (let i = 1; i <= M; i++) {\n    const [a, b] = na();\n    nodes[a].add(b);\n    nodes[b].add(a);\n  }\n\n  // ルート探索\n  let ans = 0;\n  searchRoute(nodes[1], [1]);\n\n  // 探索再帰関数\n  function searchRoute(node, passed) {\n    if (passed.length == N) return ++ans;\n    for (let n of node) {\n      if (passed.includes(n)) continue;\n      searchRoute(nodes[n], passed.concat(n));\n    }\n  }\n  \n  return ans;\n}\n\n\nconst lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\");\n\nlet lineCount = 0;\nconst s = () => lines[lineCount++];\nconst n = () => Number(s());\nconst b = () => BigInt(s());\nconst sa = () => s().split(' ');\nconst na = () => sa().map(Number);\nconst ba = () => sa().map(BigInt);\n\nconst ans = main(lines);\nconsole.log( ans );", "language": "JavaScript"}
{"filename": "p03827_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var HkkvCQ = {\n        'WGaPJ': function (x, y) {\n            return x < y;\n        }\n    };\n    var rIHyOP = '5|0|6|1|2|4|3'['split']('|');\n    var YBfmcN = 0x0;\n    while (!![]) {\n        switch (rIHyOP[YBfmcN++]) {\n        case '0':\n            var num = input[0x0];\n            continue;\n        case '1':\n            var max = 0x0;\n            continue;\n        case '2':\n            var x = 0x0;\n            continue;\n        case '3':\n            console['log'](max);\n            continue;\n        case '4':\n            for (var i = 0x0; HkkvCQ['WGaPJ'](i, character['length']); i++) {\n                if (character[i] === 'I') {\n                    x++;\n                } else {\n                    x--;\n                }\n                if (HkkvCQ['WGaPJ'](max, x)) {\n                    max = x;\n                }\n            }\n            continue;\n        case '5':\n            input = input['split']('\\x0a');\n            continue;\n        case '6':\n            var character = input[0x1];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\nIIDID", "2"], ["7\nDDIDDII", "0"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split('\\n');\n\tvar num = input[0];\n\tvar character = input[1];\n\tvar max = 0;\n\tvar x = 0;\n\tfor(var i = 0; i < character.length; i++){\n\t    if(character[i] === 'I'){\n\t        x++;\n\t    } else {\n\t        x--;\n\t    }\n\t    if(max < x){\n\t        max = x;\n\t    }\n\t}\n\tconsole.log(max);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04001_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const RYgMJx = {\n        'VETRW': function (x, y) {\n            return x < y;\n        },\n        'CqTVu': function (x, y) {\n            return x - y;\n        },\n        'LsmgA': function (x, y) {\n            return x | y;\n        },\n        'yQQAB': function (x, y) {\n            return x < y;\n        },\n        'PZzSK': function (x, y) {\n            return x & y;\n        },\n        'ARYaz': function (x, y) {\n            return x << y;\n        },\n        'mjqcD': function (x, y) {\n            return x + y;\n        }\n    };\n    const S = args['trim']();\n    const L = S['length'];\n    let total = 0x0;\n    for (let bit = 0x0; RYgMJx['VETRW'](bit, 0x1 << RYgMJx['CqTVu'](L, 0x1)); bit++) {\n        let st = RYgMJx['LsmgA'](S[0x0], 0x0), t = 0x0;\n        for (let i = 0x0; RYgMJx['yQQAB'](i, RYgMJx['CqTVu'](L, 0x1)); i++) {\n            if (RYgMJx['PZzSK'](RYgMJx['ARYaz'](0x1, i), bit)) {\n                t += st;\n                st = RYgMJx['LsmgA'](S[i + 0x1], 0x0);\n            } else {\n                st = RYgMJx['mjqcD'](st * 0xa, RYgMJx['LsmgA'](S[RYgMJx['mjqcD'](i, 0x1)], 0x0));\n            }\n        }\n        total += RYgMJx['mjqcD'](t, st);\n    }\n    return total['toString']();\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["125", "176"], ["9999999999", "12656242944"]], "original": "console.log((args=>{\n  const S = args.trim();\n  const L = S.length;\n  let total = 0;\n  for ( let bit = 0; bit < 1<<(L-1); bit++ ) {\n    let st = S[0]|0, t = 0;\n    for ( let i = 0; i < L-1; i++ ) {\n      if ( (1<<i) & bit ) {\n        t += st; st = (S[i+1]|0);\n      } else {\n        st = st * 10 + (S[i+1]|0);\n      }\n    }\n    total += t + st;\n  }\n  return total.toString();\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04043_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const DCvXJX = {\n        'cAbcQ': function (x, y) {\n            return x != y;\n        },\n        'kSmRV': function (x, y) {\n            return x == y;\n        }\n    };\n    const nums = input['split']('\\x20');\n    if (DCvXJX['cAbcQ'](nums['indexOf']('5'), -0x1)) {\n        nums['splice'](nums['indexOf']('5'), 0x1);\n    }\n    if (nums['indexOf']('5') != -0x1) {\n        nums['splice'](nums['indexOf']('5'), 0x1);\n    }\n    if (nums['indexOf']('7') != -0x1) {\n        nums['splice'](nums['indexOf']('7'), 0x1);\n    }\n    console['log'](DCvXJX['kSmRV'](nums[0x0], null) ? 'YES' : 'NO');\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 5 7", "YES"], ["7 7 5", "NO"]], "original": "function main(input) {\n    const nums = input.split(\" \");\n    \n    if(nums.indexOf('5') != -1) {\n         nums.splice(nums.indexOf('5'),1);\n    }\n    if(nums.indexOf('5') != -1) {\n         nums.splice(nums.indexOf('5'),1);\n    }\n    if(nums.indexOf('7') != -1) {\n         nums.splice(nums.indexOf('7'),1);\n    }\n    console.log(nums[0] == null ? \"YES\" : \"NO\");\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00005_1", "type": "JavaScript", "obfuscated": "config = {\n    'stdin': '/dev/stdin',\n    'newline': '\\x0a'\n};\nrequire('fs')['readFileSync'](config['stdin'], 'ascii')['trim']()['split'](config['newline'])['forEach'](function (line) {\n    var niTEcc = {\n        'YPSGY': '%d\\x20%d',\n        'etXvU': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var ary = line['split']('\\x20');\n    var a = ary[0x0], b = ary[0x1];\n    console['log'](niTEcc['YPSGY'], niTEcc['etXvU'](gcd, a, b), niTEcc['etXvU'](lcm, a, b));\n});\nfunction gcd(a, b) {\n    var nrGgiv = {\n        'hXsoQ': function (x, y) {\n            return x !== y;\n        },\n        'FqCas': function (x, y) {\n            return x < y;\n        },\n        'AkBDU': function (x, y) {\n            return x === y;\n        }\n    };\n    while (nrGgiv['hXsoQ'](a, b)) {\n        if (nrGgiv['FqCas'](a, b)) {\n            var tmp = a;\n            a = b;\n            b = tmp;\n        }\n        if (nrGgiv['AkBDU'](a % b, 0x0))\n            return b;\n        a -= b;\n    }\n    return a;\n}\nfunction lcm(a, b) {\n    var MBlCpG = {\n        'owlPL': function (x, y) {\n            return x * y;\n        },\n        'paDfs': function (x, y) {\n            return x / y;\n        }\n    };\n    var g = gcd(a, b);\n    return MBlCpG['owlPL'](MBlCpG['owlPL'](g, a / g), MBlCpG['paDfs'](b, g));\n}", "test_cases": [["8 6\n50000000 30000000", "2 24\n10000000 150000000"]], "original": "//config = {stdin: 'tmp', newline: '\\r\\n'}; // win\nconfig = {stdin: '/dev/stdin', newline: '\\n'}; // linux\n\nrequire('fs').readFileSync(config.stdin, 'ascii')\n\t.trim()\n\t.split(config.newline)\n\t.forEach(function (line) {\n\t\tvar ary = line.split(' ');\n\t\tvar a = ary[0], b = ary[1];\n\t\tconsole.log('%d %d', gcd(a, b), lcm(a, b));\n\t});\n\nfunction gcd(a, b) {\n\twhile (a !== b) {\n\t\tif (a < b) {\n\t\t\tvar tmp = a;\n\t\t\ta = b;\n\t\t\tb = tmp;\n\t\t}\n\t\tif (a % b === 0) return b;\n\t\ta -= b;\n\t}\n\treturn a;\n}\n\nfunction lcm(a, b) {\n\tvar g = gcd(a, b);\n\treturn g * (a / g) * (b / g);\n}", "language": "JavaScript"}
{"filename": "p00100_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar obj = {};\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    if (i != 0x0 && arr['length'] == 0x1) {\n        var keys = [];\n        for (var k in obj)\n            keys['push'](k - 0x0);\n        var cnt = 0x0;\n        for (var j = 0x0; j < keys['length']; j++) {\n            if (obj[keys[j + '']] >= 0xf4240) {\n                console['log'](keys[j + '']);\n                cnt++;\n            }\n        }\n        if (cnt == 0x0)\n            console['log']('NA');\n        if (arr[0x0] == 0x0)\n            break;\n        obj = {};\n    } else if (arr['length'] == 0x3) {\n        if (!obj['hasOwnProperty'](arr[0x0]))\n            obj[arr[0x0]] = arr[0x1] * arr[0x2];\n        else\n            obj[arr[0x0]] += arr[0x1] * arr[0x2];\n    }\n}", "test_cases": [["4\n1001 2000 520\n1002 1800 450\n1003 1600 625\n1001 200 1220\n2\n1001 100 3\n1005 1000 100\n2\n2013 5000 100\n2013 5000 100\n0", "1001\n1003\nNA\n2013"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar obj={};\nfor(var i=0;i<Arr.length;i++){\nvar arr=Arr[i].split(\" \").map(Number);\n   if(i!=0 && arr.length==1){\n      var keys=[];\n      for(var k in obj)keys.push(k-0);\n      var cnt=0;\n      for(var j=0;j<keys.length;j++){\n         if(obj[keys[j+\"\"]]>=1000000){console.log(keys[j+\"\"]);cnt++;}\n      }\n      if(cnt==0)console.log(\"NA\");\n      if(arr[0]==0)break;\n      obj={};\n   }else if(arr.length==3){\n       if(!obj.hasOwnProperty(arr[0]))obj[arr[0]]=arr[1]*arr[2];\n       else obj[arr[0]]+=arr[1]*arr[2];\n   }\n}", "language": "JavaScript"}
{"filename": "p00109_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar L = Arr['shift']() - 0x0;\nfor (var i = 0x0; i < L; i++) {\n    var str = Arr[i];\n    str = str['slice'](0x0, -0x1);\n    var num = eval(str);\n    console['log'](parseInt(num, 0xa));\n}", "test_cases": [["2\n4-2*3=\n4*(8+4+3)=", "-2\n60"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar L=Arr.shift()-0;\nfor(var i=0;i<L;i++){\n   var str=Arr[i];\n   str=str.slice(0,-1);\n   var num=eval(str);\n   console.log(parseInt(num,10));\n}", "language": "JavaScript"}
{"filename": "p02388_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var wAaVYK = {\n        'iDLlV': function (x, y) {\n            return x * y;\n        },\n        'QGKYr': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var inputs = stdin['toString']()['trim']()['split']('\\x0a');\n    (function (x) {\n        console['log'](wAaVYK['iDLlV'](x, x) * x);\n    }(wAaVYK['QGKYr'](parseInt, inputs[0x0], 0xa)));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2", "8"], ["3", "27"]], "original": "'use strict';\n(function(stdin) {\n  var inputs = stdin.toString().trim().split('\\n');\n\n  (function(x) {\n    // ????????????????????????\nconsole.log(x*x*x);\n\n  })(parseInt(inputs[0], 10)); // ??°?????????\n\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02403_1", "type": "JavaScript", "obfuscated": "let fs = require('fs');\nconst fuga = data => {\n    const SOeIge = {\n        'uendv': function (x, y) {\n            return x < y;\n        },\n        'ApzVr': function (x, y) {\n            return x < y;\n        }\n    };\n    lines = data['split']('\\x0a');\n    lines = lines['map'](line => line['split']('\\x20'));\n    lines = lines['map'](line => line['map'](elem => parseInt(elem)));\n    for (let i = 0x0; SOeIge['uendv'](i, lines['length']); i++) {\n        let str = '';\n        if (!lines[i][0x0])\n            return;\n        for (let j = 0x0; SOeIge['ApzVr'](j, lines[i][0x0]); j++) {\n            for (let k = 0x0; k < lines[i][0x1]; k++) {\n                str += '#';\n            }\n            console['log'](str);\n            str = '';\n        }\n        console['log']('');\n    }\n};\nconst readFile = route => {\n    const lNdCFE = { 'ErOZu': 'utf8' };\n    fs['readFile'](route, lNdCFE['ErOZu'], (err, data) => {\n        fuga(data);\n    });\n};\nconst readFileWithoutArg = () => {\n    const Kvwkpm = {\n        'ByUaJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'qGjZt': '/dev/stdin',\n        'FMddc': 'utf8'\n    };\n    const data = Kvwkpm['ByUaJ'](require, 'fs')['readFileSync'](Kvwkpm['qGjZt'], Kvwkpm['FMddc']);\n    fuga(data);\n};\nlet sampleInputPath = '';\nif (process['argv']['length'] > 0x2) {\n    sampleInputPath = process['argv'][0x2];\n    readFile(sampleInputPath);\n} else {\n    readFileWithoutArg();\n}", "test_cases": [["3 4\n5 6\n2 2\n0 0", "####\n####\n####\n\n######\n######\n######\n######\n######\n\n##\n##"]], "original": "let fs = require('fs');\n\nconst fuga = data => {\n  lines = data.split(\"\\n\");\n  lines = lines.map(line => line.split(\" \"));\n  lines = lines.map(line => line.map(elem => parseInt(elem)));\n\n  for(let i = 0; i < lines.length; i++) {\n    let str = \"\";\n    if(!lines[i][0]) return;\n    for(let j = 0; j < lines[i][0]; j++) {\n      for(let k = 0; k < lines[i][1]; k++) {\n        str += \"#\";\n      }\n      console.log(str);\n      str = \"\";\n    }\n    console.log(\"\");\n  }\n}\n\nconst readFile = route => {\n  fs.readFile(route, 'utf8', (err, data) => {\n    fuga(data);\n  });\n}\n\nconst readFileWithoutArg = () => {\n  const data = require('fs').readFileSync('/dev/stdin', 'utf8');\n  fuga(data)\n}\n\nlet sampleInputPath = \"\";\n\nif(process.argv.length > 2) {\n  sampleInputPath = process.argv[2];\n  readFile(sampleInputPath);\n} else {\n  readFileWithoutArg();\n}\n\n", "language": "JavaScript"}
{"filename": "p02416_1", "type": "JavaScript", "obfuscated": "let content = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', buf => {\n    content += buf;\n});\nprocess['stdin']['on']('end', () => {\n    const lines = content['trim']()['split']('\\x0a')['slice'](0x0, -0x1);\n    const result = lines['map'](num => num['split']('')['map'](n => parseInt(n, 0xa))['reduce']((prev, cur) => prev + cur));\n    console['log'](result['join']('\\x0a'));\n});", "test_cases": [["123\n55\n1000\n0", "6\n10\n1"]], "original": "let content = '';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', buf => {\n  content += buf;\n});\n\nprocess.stdin.on('end', () => {\n  const lines = content\n    .trim()\n    .split('\\n')\n    .slice(0, -1);\n\n  const result = lines.map(num =>\n    num\n      .split('')\n      .map(n => parseInt(n, 10))\n      .reduce((prev, cur) => prev + cur)\n  );\n\n  console.log(result.join('\\n'));\n});\n", "language": "JavaScript"}
{"filename": "p02418_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst arr = input['split']('\\x0a');\nconst regExp = new RegExp(arr[0x1]);\nconsole['log'](regExp['test'](arr[0x0] + arr[0x0]) ? 'Yes' : 'No');", "test_cases": [["vanceknowledgetoad\nadvance", "Yes"], ["vanceknowledgetoad\nadvanced", "No"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst arr = input.split('\\n');\nconst regExp = new RegExp(arr[1]);\nconsole.log(regExp.test(arr[0] + arr[0])?'Yes':'No');\n", "language": "JavaScript"}
{"filename": "p02811_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const sIxgHF = {\n        'zJVfl': function (callee, param1) {\n            return callee(param1);\n        },\n        'calyd': function (x, y) {\n            return x >= y;\n        },\n        'adixQ': function (x, y) {\n            return x * y;\n        },\n        'WUFOK': 'Yes'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const K = sIxgHF['zJVfl'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const X = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    console['log'](sIxgHF['calyd'](sIxgHF['adixQ'](0x1f4, K), X) ? sIxgHF['WUFOK'] : 'No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 900", "Yes"], ["1 501", "No"], ["4 2000", "Yes"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const K = parseInt(arg[0].split(\" \")[0]);\n    const X = parseInt(arg[0].split(\" \")[1]);\n    \n    console.log(500 * K >= X ? \"Yes\" : \"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03023_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (input) {\n    var Zyexvu = {\n        'nVoNo': function (x, y) {\n            return x - y;\n        },\n        'onVcU': function (x, y) {\n            return x * y;\n        }\n    };\n    input = Zyexvu['nVoNo'](input['trim'](), 0x0);\n    console['log'](Zyexvu['onVcU'](0xb4, Zyexvu['nVoNo'](input, 0x2)));\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3", "180"], ["100", "17640"]], "original": "'use strict';\n(function(input){\n  input=input.trim()-0;\n  console.log(180*(input-2));\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03130_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction I(s, f) {\n    this['_s'] = s;\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = f || Number;\n}\nI['prototype']['a'] = function () {\n    var HJHuVJ = { 'SyTvZ': '6|1|5|2|0|3|4' };\n    var bOXdcI = HJHuVJ['SyTvZ']['split']('|');\n    var JTFWyE = 0x0;\n    while (!![]) {\n        switch (bOXdcI[JTFWyE++]) {\n        case '0':\n            this['_c']++;\n            continue;\n        case '1':\n            if (!l)\n                return;\n            continue;\n        case '2':\n            var a = t[this['_c']];\n            continue;\n        case '3':\n            if (t['length'] === this['_c']) {\n                this['_c'] = 0x0;\n                this['_l']++;\n            }\n            continue;\n        case '4':\n            return this['_f'](a);\n        case '5':\n            var t = l['trim']()['split']('\\x20');\n            continue;\n        case '6':\n            var l = this['_s']['split']('\\x0a')[this['_l']];\n            continue;\n        }\n        break;\n    }\n};\nI['prototype']['l'] = function () {\n    var l = this['_s']['split']('\\x0a')[this['_l']];\n    this['_c'] = 0x0;\n    this['_l']++;\n    return l['split']('\\x20')['map'](this['_f']);\n};\nfunction main(input) {\n    var RcQfWv = {\n        'BTcjF': function (x, y) {\n            return x < y;\n        },\n        'aeWVG': function (x, y) {\n            return x === y;\n        }\n    };\n    const o = new I(input);\n    const arr = Array(0x4)['fill'](0x0);\n    for (let i = 0x0; RcQfWv['BTcjF'](i, 0x3); i++) {\n        let a = o['a']();\n        let b = o['a']();\n        arr[a - 0x1]++;\n        arr[b - 0x1]++;\n    }\n    if (RcQfWv['aeWVG'](arr['sort']((a, b) => a - b)['join']('\\x20'), '1\\x201\\x202\\x202')) {\n        console['log']('YES');\n    } else {\n        console['log']('NO');\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 2\n1 3\n2 3", "YES"], ["3 2\n2 4\n1 2", "NO"], ["2 1\n3 2\n4 3", "YES"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s;this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s.split(\"\\n\")[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s.split(\"\\n\")[this._l];this._c=0;this._l++;return l.split(\" \").map(this._f)};\n\n// TODO test and remove comment\nfunction main(input) {\n  const o = new I(input);\n\n  const arr = Array(4).fill(0);\n  for (let i=0;i<3;i++) {\n    let a = o.a();\n    let b = o.a();\n    arr[a-1]++;\n    arr[b-1]++;\n  }\n\n  if (arr.sort((a,b) => a-b).join(\" \") === \"1 1 2 2\") {\n    console.log(\"YES\")\n  } else {\n    console.log(\"NO\")\n  }\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03241_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var Wxpkry = {\n        'WNLFH': '2|4|1|5|3|0|6|7',\n        'leUvu': function (callee, param1) {\n            return callee(param1);\n        },\n        'EwGqO': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'DBtgR': function (x, y) {\n            return x < y;\n        },\n        'EGckj': function (x, y) {\n            return x >= y;\n        },\n        'mKxzo': function (x, y) {\n            return x / y;\n        }\n    };\n    var fyWnui = Wxpkry['WNLFH']['split']('|');\n    var NKhLaG = 0x0;\n    while (!![]) {\n        switch (fyWnui[NKhLaG++]) {\n        case '0':\n            var max = 0x0;\n            continue;\n        case '1':\n            var N = parseInt(tmp[0x0], 0xa);\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            var divisors = Wxpkry['leUvu'](divisor, M);\n            continue;\n        case '4':\n            tmp = input[0x0]['split']('\\x20');\n            continue;\n        case '5':\n            var M = Wxpkry['EwGqO'](parseInt, tmp[0x1], 0xa);\n            continue;\n        case '6':\n            for (var i = 0x0; Wxpkry['DBtgR'](i, divisors['length']); i++) {\n                var d = divisors[i];\n                if (Wxpkry['EGckj'](Wxpkry['mKxzo'](M, d), N)) {\n                    max = Math['max'](max, d);\n                }\n            }\n            continue;\n        case '7':\n            console['log']('%d', max);\n            continue;\n        }\n        break;\n    }\n}\nfunction divisor(n) {\n    var ENhiyY = {\n        'rMYmX': function (x, y) {\n            return x <= y;\n        },\n        'NsVxG': function (x, y) {\n            return x * y;\n        },\n        'FEity': function (x, y) {\n            return x / y;\n        },\n        'WvNAu': function (x, y) {\n            return x / y;\n        }\n    };\n    var res = [];\n    for (var i = 0x1; ENhiyY['rMYmX'](ENhiyY['NsVxG'](i, i), n); i++) {\n        if (n % i == 0x0) {\n            res['push'](i);\n            if (ENhiyY['FEity'](n, i) != i) {\n                res['push'](ENhiyY['WvNAu'](n, i));\n            }\n        }\n    }\n    return res;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 14", "2"], ["10 123", "3"], ["100000 1000000000", "10000"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\ttmp = input[0].split(\" \");\n\t//文字列から10進数に変換するときはparseIntを使います\n\tvar N = parseInt(tmp[0], 10);\n\tvar M = parseInt(tmp[1], 10);\n\n    var divisors = divisor(M);\n    var max = 0;\n            for (var i =0;i < divisors.length;i++) {\n                var d = divisors[i];\n                if (M / d >= N) {\n                    max = Math.max(max, d);\n                }\n            }\n\n\t//出力\n\tconsole.log('%d',max);\n}\nfunction divisor(n) {\n        var res = [];\n        for (var i = 1; i * i <= n; i++) {\n            if (n % i == 0) {\n                res.push(i);\n                if (n / i != i) {\n                    res.push(n / i);\n                }\n            }\n        }\n        return res;\n    }\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03378_1", "type": "JavaScript", "obfuscated": "const BKRT = '\\x0a';\nconst SPAC = '\\x20';\nconst NOSP = '';\nfunction Main(input) {\n    var IngrHR = {\n        'behnz': function (callee) {\n            return callee();\n        },\n        'PZKro': function (x, y) {\n            return x < y;\n        }\n    };\n    input = []['concat'](...input['split'](BKRT)['map'](a => a['split'](SPAC)));\n    const strShift = () => input['shift']();\n    const intShift = () => ~~input['shift']();\n    var N = IngrHR['behnz'](intShift);\n    var M = IngrHR['behnz'](intShift);\n    var X = IngrHR['behnz'](intShift);\n    var right = 0x0;\n    var left = 0x0;\n    for (var i = 0x0; IngrHR['PZKro'](i, M); i++) {\n        var a = IngrHR['behnz'](intShift);\n        if (IngrHR['PZKro'](a, X)) {\n            left++;\n        } else {\n            right++;\n        }\n    }\n    return ~~Math['min'](left, right);\n}\n((b, c, d) => 'undefined' != typeof require ? console['log'](Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'))) : [\n    b = b['split']('\\x0a')['slice'](0x1, -0x1)['join']('\\x0a'),\n    c = (function () {\n        try {\n            return Main(b);\n        } catch (f) {\n            return f['stack'] || f['message'];\n        }\n    }()),\n    d = typeof c,\n    'string' == d || (c = JSON['stringify'](c)),\n    $('<form>')['append']([\n        [\n            0xa,\n            b\n        ],\n        0x0,\n        [\n            0x1,\n            d\n        ],\n        0x0,\n        [\n            0xa,\n            c\n        ]\n    ]['map'](f => $(f ? '<textarea>' : '<br>', f && {\n        'rows': f[0x0],\n        'cols': 0x28,\n        'text': f[0x1]\n    })))['appendTo']('body')\n])('\\x0a5\\x203\\x203\\x0a1\\x202\\x204\\x0a');", "test_cases": [["5 3 3\n1 2 4", "1"], ["7 3 2\n4 5 6", "0"], ["10 7 5\n1 2 3 4 6 8 9", "3"]], "original": "const BKRT = \"\\n\";\nconst SPAC = \" \";\nconst NOSP = \"\";\n\nfunction Main(input){\n\tinput = [].concat(...input.split(BKRT).map(a=>a.split(SPAC)));\n  const strShift = ()=>input.shift();\n  const intShift = ()=>~~input.shift();\n  \n  var N = intShift();\n  var M = intShift();\n  var X = intShift();\n  \n  var right = 0;\n  var left = 0;\n  for(var i = 0; i < M; i++){\n  \tvar a = intShift();\n    if(a < X){\n    \tleft++;\n    }else{\n    \tright++;\n    }\n  }\n  return ~~Math.min(left,right);\n}\n\n// If you are interested in the algorithms I used, \n// there is no need to read down from this line.\n\n((b,c,d)=>\"undefined\"!=typeof require?console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"))):[b=b.split(\"\\n\").slice(1,-1).join(\"\\n\"),c=function(){try{return Main(b)}catch(f){return f.stack||f.message}}(),d=typeof c,\"string\"==d||(c=JSON.stringify(c)),$(\"<form>\").append([[10,b],0,[1,d],0,[10,c]].map(f=>$(f?\"<textarea>\":\"<br>\",f&&{rows:f[0],cols:40,text:f[1]}))).appendTo(\"body\")])(`\n5 3 3\n1 2 4\n`);", "language": "JavaScript"}
{"filename": "p03424_1", "type": "JavaScript", "obfuscated": "function main(s) {\n    const bynjAD = {\n        'wgCzP': function (x, y) {\n            return x === y;\n        },\n        'iJpfC': 'Four',\n        'uqMLc': 'Three'\n    };\n    const set = new Set(s['split']('\\x0a')[0x1]['split']('\\x20'));\n    const ans = bynjAD['wgCzP']([...set]['length'], 0x4) ? bynjAD['iJpfC'] : bynjAD['uqMLc'];\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\nG W Y P Y W", "Four"], ["9\nG W W G P W P G G", "Three"], ["8\nP Y W G Y W Y Y", "Four"]], "original": "function main(s) {\n  \n  const set = new Set(s.split('\\n')[1].split(' '));\n  const ans = ([...set].length === 4) ? 'Four' : 'Three';\n  \n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03659_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const WpYXzI = {\n        'JEIXj': function (callee, param1) {\n            return callee(param1);\n        },\n        'tmNtF': function (x, y) {\n            return x - y;\n        },\n        'TtFkd': function (x, y) {\n            return x < y;\n        },\n        'udiQx': function (x, y) {\n            return x + y;\n        },\n        'Cftnr': function (callee, param1) {\n            return callee(param1);\n        },\n        'QYFAu': function (x, y) {\n            return x + y;\n        },\n        'hKLcg': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = WpYXzI['JEIXj'](parseInt, arg[0x0]);\n    const A = arg[0x1]['split']('\\x20')['map'](n => parseInt(n));\n    const totalSum = A['reduce']((m, n) => m + n);\n    let left = A[0x0];\n    let right = WpYXzI['tmNtF'](totalSum, A[0x0]);\n    let answer = Infinity;\n    for (let i = 0x0; WpYXzI['TtFkd'](i, WpYXzI['tmNtF'](N, 0x1)); i++) {\n        let diff = Math['abs'](WpYXzI['tmNtF'](right, left));\n        answer = Math['min'](answer, diff);\n        right -= A[WpYXzI['udiQx'](WpYXzI['Cftnr'](parseInt, i), 0x1)];\n        left += A[WpYXzI['QYFAu'](WpYXzI['hKLcg'](parseInt, i), 0x1)];\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n1 2 3 4 5 6", "1"], ["2\n10 -10", "20"]], "original": "\"use strict\";\n\nconst main = arg => {\n  arg = arg.trim().split(\"\\n\");\n  const N = parseInt(arg[0]);\n  const A = arg[1].split(\" \").map(n=>parseInt(n));\n\n  const totalSum = A.reduce((m,n)=>m+n);\n  \n  let left  = A[0];\n  let right = totalSum - A[0];\n  \n  let answer = Infinity;\n  \n  for(let i=0; i<N - 1; i++) {\n    let diff = Math.abs(right - left);\n    answer = Math.min(answer, diff);\n    \n    right -= A[parseInt(i) + 1];\n    left  += A[parseInt(i) + 1];\n  }\n  \n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03672_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const RwZnwy = {\n        'ldkAo': function (x, y) {\n            return x / y;\n        },\n        'gPDeo': function (x, y) {\n            return x === y;\n        },\n        'DMHGW': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    if (S['length'] === 0x2) {\n        console['log'](0x1);\n        return;\n    }\n    for (let i = 0x0; i < S['length']; i++) {\n        S['pop']();\n        let mid = Math['floor'](RwZnwy['ldkAo'](S['length'], 0x2));\n        if (RwZnwy['gPDeo'](S['slice'](0x0, mid)['join'](''), S['slice'](mid, RwZnwy['DMHGW'](S['length'], 0x1))['join'](''))) {\n            console['log'](S['length']);\n            return;\n        }\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abaababaab", "6"], ["xxxx", "2"], ["abcabcabcabc", "6"], ["akasakaakasakasakaakas", "14"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    if(S.length === 2) {\n        console.log(1);\n        return;\n    }\n    \n    for(let i=0; i<S.length; i++) {\n        S.pop();\n        \n        let mid = Math.floor(S.length / 2);\n        \n        if(S.slice(0, mid).join(\"\") === S.slice(mid, S.length + 1).join(\"\")) {\n            console.log(S.length);\n            return;\n        }\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03720_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet lines = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nlet N = +lines[0x0]['split']('\\x20')[0x0];\nlet ABs = lines['slice'](0x1)['map'](line => line['split']('\\x20')['map'](Number));\nlet res = [];\nfor (let i = 0x0; i < N; i++)\n    res[i] = 0x0;\nABs['forEach'](ab => {\n    const mGmDJp = {\n        'ZHwkK': function (x, y) {\n            return x - y;\n        }\n    };\n    res[ab[0x0] - 0x1]++;\n    res[mGmDJp['ZHwkK'](ab[0x1], 0x1)]++;\n});\nres['forEach'](n => console['log'](n));", "test_cases": [["4 3\n1 2\n2 3\n1 4", "2\n2\n1\n1"], ["2 5\n1 2\n2 1\n1 2\n2 1\n1 2", "5\n5"], ["8 8\n1 2\n3 4\n1 5\n2 8\n3 7\n5 2\n4 1\n6 8", "3\n3\n2\n2\n2\n1\n1\n2"]], "original": "'use strict';\n\nlet lines = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n');\n\nlet N = +(lines[0].split(' ')[0]);\nlet ABs = lines.slice(1).map(line => line.split(' ').map(Number));\n\nlet res = [];\nfor (let i = 0; i < N; i++) res[i] = 0;\n\nABs.forEach(ab => {\n    res[ab[0]-1]++;\n    res[ab[1]-1]++;\n});\n\nres.forEach(n => console.log(n));", "language": "JavaScript"}
{"filename": "p03862_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const FXjhOm = {\n        'uaVUk': function (callee, param1) {\n            return callee(param1);\n        },\n        'PKeyH': function (x, y) {\n            return x < y;\n        },\n        'AGHdU': function (x, y) {\n            return x - y;\n        },\n        'ciMUn': function (x, y) {\n            return x > y;\n        },\n        'FmBdA': function (x, y) {\n            return x - y;\n        },\n        'gPpiw': function (x, y) {\n            return x > y;\n        },\n        'pwiLA': function (x, y) {\n            return x + y;\n        },\n        'pIVhj': function (x, y) {\n            return x - y;\n        },\n        'ClCTR': function (x, y) {\n            return x - y;\n        },\n        'QuqjV': function (x, y) {\n            return x - y;\n        },\n        'sYtFT': function (x, y) {\n            return x < y;\n        },\n        'FZfAl': function (x, y) {\n            return x + y;\n        },\n        'fNmGF': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    let N = FXjhOm['uaVUk'](Number, input[0x0]['split']('\\x20')[0x0]);\n    let x = FXjhOm['uaVUk'](Number, input[0x0]['split']('\\x20')[0x1]);\n    let As = input[0x1]['split']('\\x20')['map'](n => Number(n));\n    let manip = 0x0;\n    for (let i = 0x0; FXjhOm['PKeyH'](i, N); i++) {\n        let exceed = FXjhOm['AGHdU'](As[i], x);\n        if (FXjhOm['ciMUn'](exceed, 0x0)) {\n            As[i] = x;\n            manip += exceed;\n        }\n    }\n    for (let i = 0x1; i < FXjhOm['FmBdA'](N, 0x1); i++) {\n        let left = As[FXjhOm['AGHdU'](i, 0x1)];\n        let current = As[i];\n        let right = As[i + 0x1];\n        if (FXjhOm['gPpiw'](FXjhOm['pwiLA'](left, current), x) && FXjhOm['pwiLA'](current, right) > x) {\n            As[i] = FXjhOm['pIVhj'](x, left);\n            manip += FXjhOm['ClCTR'](current, FXjhOm['QuqjV'](x, left));\n        }\n    }\n    for (let i = 0x0; FXjhOm['sYtFT'](i, FXjhOm['QuqjV'](N, 0x1)); i++) {\n        let current = As[i];\n        let right = As[i + 0x1];\n        if (FXjhOm['ciMUn'](FXjhOm['FZfAl'](current, right), x)) {\n            As[i] = FXjhOm['fNmGF'](x, right);\n            manip += current - FXjhOm['pIVhj'](x, right);\n        }\n    }\n    console['log'](manip);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n2 2 2", "1"], ["6 1\n1 6 1 2 0 4", "11"], ["5 9\n3 1 4 1 5", "0"], ["2 0\n5 5", "10"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet N = Number(input[0].split(' ')[0])\n\tlet x = Number(input[0].split(' ')[1])\n\tlet As = input[1].split(' ').map(n => Number(n))\n\tlet manip = 0\n\t\n\t// 単体でxを超えていたら減らす O(n)\n\tfor(let i = 0; i < N ; i++) {\n\t\tlet exceed = As[i] - x\n\t\tif(exceed > 0) {\n\t\t\tAs[i] = x\n\t\t\tmanip += exceed\n\t\t}\n\t}\n\n\t// 左と足しても右と足してもxを超えていたら、左と足しても超えないように減らす O(n)\n\tfor(let i = 1; i < N - 1 ; i++) {\n\t\tlet left = As[i - 1]\n\t\tlet current = As[i]\n\t\tlet right = As[i + 1]\n\t\tif(left + current > x && current + right > x) {\n\t\t\tAs[i] = x - left\n\t\t\tmanip += current - (x - left)\n\t\t}\n\t}\n\t// 右と足して超えていたら減らす O(n)\n\tfor(let i = 0; i < N - 1 ; i++) {\n\t\tlet current = As[i]\n\t\tlet right = As[i + 1]\n\t\tif(current + right > x) {\n\t\t\tAs[i] = x - right\n\t\t\tmanip += current - (x - right)\n\t\t}\n\t}\n\tconsole.log(manip)\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02235_1", "type": "JavaScript", "obfuscated": "function lcs(x, y) {\n    var zRGpkG = {\n        'SRraI': '1|4|0|3|2',\n        'TaWjK': function (x, y) {\n            return x <= y;\n        },\n        'xXcOB': function (x, y) {\n            return x == y;\n        },\n        'aqumx': function (x, y) {\n            return x + y;\n        },\n        'efKzy': function (x, y) {\n            return x - y;\n        },\n        'fEIHG': function (x, y) {\n            return x - y;\n        }\n    };\n    var eJdyxK = zRGpkG['SRraI']['split']('|');\n    var nljrsw = 0x0;\n    while (!![]) {\n        switch (eJdyxK[nljrsw++]) {\n        case '0':\n            for (var i = 0x1; zRGpkG['TaWjK'](i, m); i++) {\n                c[i][0x0] = 0x0;\n            }\n            continue;\n        case '1':\n            var m = x['length'];\n            continue;\n        case '2':\n            for (var i = 0x1; i <= m; i++) {\n                for (var j = 0x1; j <= n; j++) {\n                    if (zRGpkG['xXcOB'](x[i], y[j])) {\n                        c[i][j] = zRGpkG['aqumx'](c[zRGpkG['efKzy'](i, 0x1)][zRGpkG['efKzy'](j, 0x1)], 0x1);\n                    } else if (c[i - 0x1][j] >= c[i][zRGpkG['efKzy'](j, 0x1)]) {\n                        c[i][j] = c[zRGpkG['efKzy'](i, 0x1)][j];\n                    } else {\n                        c[i][j] = c[i][zRGpkG['fEIHG'](j, 0x1)];\n                    }\n                }\n            }\n            continue;\n        case '3':\n            for (var j = 0x1; j <= n; j++) {\n                c[0x0][j] = 0x0;\n            }\n            continue;\n        case '4':\n            var n = y['length'];\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nvar n = +lines['shift']() - 0x0;\nfor (var idx = 0x0; idx < n; idx++) {\n    var rlrWgc = '1|4|0|3|5|2'['split']('|');\n    var abdfsh = 0x0;\n    while (!![]) {\n        switch (rlrWgc[abdfsh++]) {\n        case '0':\n            var c = [[0x0]];\n            continue;\n        case '1':\n            var a = lines['shift']();\n            continue;\n        case '2':\n            console['log'](c[a['length']][b['length']]);\n            continue;\n        case '3':\n            for (var i = 0x1; i <= a['length']; i++) {\n                var arr = [-0x1];\n                c['push'](arr);\n            }\n            continue;\n        case '4':\n            var b = lines['shift']();\n            continue;\n        case '5':\n            lcs(a, b);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc", "4\n3\n2"]], "original": "function lcs(x, y) {\n    var m = x.length;\n    var n = y.length;\n\n    for (var i = 1; i <= m; i++) {\n        c[i][0] = 0;\n    }\n    for (var j = 1; j <= n; j++) {\n        c[0][j] = 0;\n    }\n\n    for (var i = 1; i <= m; i++) {\n        for (var j = 1; j <=n; j++) {\n            if (x[i] == y[j]) {\n                c[i][j] = c[i - 1][j - 1] + 1;\n            } else if (c[i - 1][j] >= c[i][j - 1]) {\n                c[i][j] = c[i - 1][j];\n            } else {\n                c[i][j] = c[i][j - 1];\n            }\n        }\n    }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar n = +lines.shift() - 0;\n\nfor (var idx = 0; idx < n; idx++) {\n    var a = lines.shift();\n    var b = lines.shift();\n\n    var c = [[0]];\n    for (var i = 1; i <= a.length; i++) {\n        var arr = [-1];\n        c.push(arr);\n    }\n    lcs(a, b);\n    console.log(c[a.length][b.length]);\n}", "language": "JavaScript"}
{"filename": "p02261_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const hUWUYU = {\n        'PbYZs': function (callee, param1) {\n            return callee(param1);\n        },\n        'BITFV': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'rATPP': 'Stable',\n        'PQCGQ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = hUWUYU['PbYZs'](Number, input[0x0]);\n    const A1 = input[0x1]['split']('\\x20');\n    const A2 = A1['concat']();\n    hUWUYU['BITFV'](bubbleSort, A1, N);\n    console['log'](A1['join']('\\x20'));\n    console['log'](hUWUYU['rATPP']);\n    hUWUYU['PQCGQ'](selectionSort, A2, N);\n    console['log'](A2['join']('\\x20'));\n    console['log'](A2['every']((v, i) => v === A1[i]) ? hUWUYU['rATPP'] : 'Not\\x20stable');\n};\nfunction bubbleSort(A, N) {\n    const xabOht = {\n        'ODWsq': function (x, y) {\n            return x - y;\n        },\n        'SxBys': function (x, y) {\n            return x - y;\n        },\n        'XbUHd': function (x, y) {\n            return x >= y;\n        },\n        'aHTod': function (callee, param1) {\n            return callee(param1);\n        },\n        'mJASZ': function (x, y) {\n            return x - y;\n        },\n        'FhMIU': function (x, y) {\n            return x - y;\n        },\n        'kXifL': function (x, y) {\n            return x - y;\n        }\n    };\n    for (let i = 0x0; i < xabOht['ODWsq'](N, 0x1); ++i) {\n        for (let j = xabOht['SxBys'](N, 0x1); xabOht['XbUHd'](j, i + 0x1); --j) {\n            if (xabOht['aHTod'](Number, A[xabOht['mJASZ'](j, 0x1)][0x1]) > xabOht['aHTod'](Number, A[j][0x1])) {\n                const tmp = A[j];\n                A[j] = A[xabOht['FhMIU'](j, 0x1)];\n                A[xabOht['kXifL'](j, 0x1)] = tmp;\n            }\n        }\n    }\n}\nfunction selectionSort(A, N) {\n    const TtLDdS = {\n        'mYMVn': function (x, y) {\n            return x < y;\n        },\n        'nOGDG': function (x, y) {\n            return x - y;\n        },\n        'zSRbO': function (x, y) {\n            return x < y;\n        },\n        'nbYJm': function (x, y) {\n            return x < y;\n        },\n        'SrLzN': function (callee, param1) {\n            return callee(param1);\n        },\n        'zQigz': function (x, y) {\n            return x !== y;\n        }\n    };\n    for (let i = 0x0; TtLDdS['mYMVn'](i, TtLDdS['nOGDG'](N, 0x1)); ++i) {\n        let minj = i;\n        for (let j = i; TtLDdS['zSRbO'](j, N); ++j) {\n            if (TtLDdS['nbYJm'](TtLDdS['SrLzN'](Number, A[j][0x1]), Number(A[minj][0x1]))) {\n                minj = j;\n            }\n        }\n        if (TtLDdS['zQigz'](i, minj)) {\n            const tmp = A[i];\n            A[i] = A[minj];\n            A[minj] = tmp;\n        }\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\nH4 C9 S4 D2 C3", "D2 C3 H4 S4 C9\nStable\nD2 C3 S4 H4 C9\nNot stable"], ["2\nS1 H1", "S1 H1\nStable\nS1 H1\nStable"]], "original": "'use strict';\n\nconst main = input => {\n  input = input.split('\\n');\n  const N = Number(input[0]);\n  const A1 = input[1].split(' ');\n  const A2 = A1.concat();\n  bubbleSort(A1, N);\n  console.log(A1.join(' '));\n  console.log('Stable');\n  selectionSort(A2, N);\n  console.log(A2.join(' '));\n  console.log(A2.every((v, i) => v === A1[i]) ? 'Stable' : 'Not stable');\n};\n\nfunction bubbleSort(A, N) {\n  for (let i = 0; i < N - 1; ++i) {\n    for (let j = N - 1; j >= i + 1; --j) {\n      if (Number(A[j - 1][1]) > Number(A[j][1])) {\n        const tmp = A[j];\n        A[j] = A[j - 1];\n        A[j - 1] = tmp;\n      }\n    }\n  }\n}\n\nfunction selectionSort(A, N) {\n  for (let i = 0; i < N - 1; ++i) {\n    let minj = i;\n    for (let j = i; j < N; ++j) {\n      if (Number(A[j][1]) < Number(A[minj][1])) {\n        minj = j;\n      }\n    }\n    if (i !== minj) {\n      const tmp = A[i];\n      A[i] = A[minj];\n      A[minj] = tmp;\n    }\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02275_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const rPJfWF = {\n        'YhtWX': '/dev/stdin',\n        'jPMFe': 'utf8',\n        'yNhTO': function (callee, param1) {\n            return callee(param1);\n        },\n        'LLcji': function (x, y) {\n            return x <= y;\n        },\n        'iCXne': function (x, y) {\n            return x < y;\n        },\n        'aPQXU': function (x, y) {\n            return x <= y;\n        },\n        'TtbPZ': function (x, y) {\n            return x - y;\n        },\n        'LiSbE': function (x, y) {\n            return x - y;\n        },\n        'oJPlK': function (x, y) {\n            return x >= y;\n        }\n    };\n    const lines = require('fs')['readFileSync'](rPJfWF['YhtWX'], rPJfWF['jPMFe'])['trim']()['split']('\\x0a');\n    const n = rPJfWF['yNhTO'](Number, lines['shift']());\n    const arr = lines['shift']()['split']('\\x20')['map'](Number);\n    const k = 0x2710;\n    let cnt_arr = [];\n    for (let i = 0x0; rPJfWF['LLcji'](i, k); i++)\n        cnt_arr[i] = 0x0;\n    for (let i = 0x0; rPJfWF['iCXne'](i, n); i++)\n        cnt_arr[arr[i]]++;\n    for (let i = 0x1; rPJfWF['aPQXU'](i, k); i++)\n        cnt_arr[i] += cnt_arr[rPJfWF['TtbPZ'](i, 0x1)];\n    let out_arr = [];\n    for (let i = rPJfWF['LiSbE'](n, 0x1); rPJfWF['oJPlK'](i, 0x0); i--)\n        out_arr[--cnt_arr[arr[i]]] = arr[i];\n    console['log'](out_arr['join']('\\x20'));\n}());", "test_cases": [["7\n2 5 1 3 2 3 0", "0 1 2 2 3 3 5"]], "original": "(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n  const arr = lines.shift().split(' ').map(Number);\n  const k = 10000;\n  let cnt_arr = [];\n  for (let i = 0; i <= k; i++) cnt_arr[i] = 0;\n  for (let i = 0; i < n; i++) cnt_arr[arr[i]]++;\n  for (let i = 1; i <= k; i++) cnt_arr[i] += cnt_arr[i - 1];\n  let out_arr = [];\n  for (let i = n - 1; i >= 0; i--) out_arr[--cnt_arr[arr[i]]] = arr[i];\n  console.log(out_arr.join(' '));\n})();\n\n", "language": "JavaScript"}
{"filename": "p02467_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var LjCvbn = {\n        'GboJQ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ORXdu': function (x, y) {\n            return x + y;\n        },\n        'wuOTM': function (x, y) {\n            return x <= y;\n        },\n        'QOmcW': function (x, y) {\n            return x === y;\n        },\n        'oGafD': function (x, y) {\n            return x % y;\n        }\n    };\n    var pYBMJb = '0|1|3|4|2|6|5'['split']('|');\n    var SsaufM = 0x0;\n    while (!![]) {\n        switch (pYBMJb[SsaufM++]) {\n        case '0':\n            input = input['trim']()['split']('\\x0a')['map'](function (x) {\n                return x['split']('\\x20');\n            });\n            continue;\n        case '1':\n            var n = LjCvbn['GboJQ'](parseInt, input[0x0][0x0], 0xa);\n            continue;\n        case '2':\n            var start = 0x2;\n            continue;\n        case '3':\n            var originalN = n;\n            continue;\n        case '4':\n            var v_ans = [];\n            continue;\n        case '5':\n            console['log'](LjCvbn['ORXdu'](LjCvbn['ORXdu'](originalN['toString'](), ':\\x20'), v_ans['join']('\\x20')));\n            continue;\n        case '6':\n            whole_loop:\n                while (!![]) {\n                    for (var i = start; LjCvbn['wuOTM'](i, Math['sqrt'](n)); i++) {\n                        if (LjCvbn['QOmcW'](LjCvbn['oGafD'](n, i), 0x0)) {\n                            v_ans['push'](i);\n                            n /= i;\n                            start = i;\n                            continue whole_loop;\n                        }\n                    }\n                    v_ans['push'](n);\n                    break;\n                }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["12", "12: 2 2 3"], ["126", "126: 2 3 3 7"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n    var n = parseInt(input[0][0], 10);\n    var originalN = n;\n    var v_ans = [];\n    var start = 2;\n    whole_loop:\n    while (true){\n        for (var i = start; i <= Math.sqrt(n); i++){\n            if (n % i === 0) {\n                v_ans.push(i);\n                n /= i;\n                start = i;\n                continue whole_loop;\n            }\n        }\n        v_ans.push(n);\n        break;\n    }\n    console.log(originalN.toString() + \": \" + v_ans.join(\" \"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02548_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var lTxioK = {\n        'lOUtG': '1|3|4|0|2',\n        'lDtYg': function (x, y) {\n            return x < y;\n        },\n        'YlAOr': function (x, y) {\n            return x - y;\n        },\n        'szOkW': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var FIbsDd = lTxioK['lOUtG']['split']('|');\n    var QtZlQe = 0x0;\n    while (!![]) {\n        switch (FIbsDd[QtZlQe++]) {\n        case '0':\n            for (var i = 0x1; lTxioK['lDtYg'](i, N); i++) {\n                result += Math['floor'](lTxioK['YlAOr'](N, 0x1) / i);\n            }\n            continue;\n        case '1':\n            input = input['split']('\\x0a');\n            continue;\n        case '2':\n            console['log']('%d', result);\n            continue;\n        case '3':\n            N = lTxioK['szOkW'](parseInt, input[0x0]['split']('\\x20'));\n            continue;\n        case '4':\n            var result = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "3"], ["100", "473"], ["1000000", "13969985"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  N = parseInt(input[0].split(\" \"));\n  var result = 0;\n  for(var i=1; i<N; i++) {\n    result += Math.floor((N-1)/i);\n  }\n  //出力\n  console.log(\"%d\", result);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02616_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const JXdGlf = {\n        'JGneF': function (x, y) {\n            return x > y;\n        },\n        'UKZoS': function (callee, param1) {\n            return callee(param1);\n        },\n        'pJJdw': function (x, y) {\n            return x & y;\n        },\n        'NpTKQ': function (x, y) {\n            return x < y;\n        },\n        'QcJAP': function (x, y) {\n            return x | y;\n        },\n        'fsPhX': function (x, y) {\n            return x | y;\n        },\n        'MRgYK': function (x, y) {\n            return x & y;\n        },\n        'TlXqm': function (x, y) {\n            return x > y;\n        },\n        'rFtXl': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    const [[N, K], A] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    let Am = [], Ap = [];\n    for (let i = 0x0; i < N; i++) {\n        if (JXdGlf['JGneF'](A[i], 0x0))\n            Ap['push'](A[i]);\n        if (A[i] < 0x0)\n            Am['push'](A[i]);\n    }\n    const MOD = JXdGlf['UKZoS'](BigInt, 0x3b9aca00 + 0x7), mul = (a, b) => (BigInt(a) * BigInt(b) % MOD + MOD) % MOD;\n    Am['sort']((a, b) => a - b);\n    Ap['sort']((a, b) => b - a);\n    if (Ap['length'] === 0x0 && JXdGlf['pJJdw'](K, 0x1))\n        return '' + Am['slice'](-K)['reduce'](mul, 0x1);\n    let om = 0x0, op = 0x0, ap = [], am = [];\n    for (let i = 0x0; JXdGlf['NpTKQ'](i, K); i++) {\n        if (JXdGlf['JGneF'](JXdGlf['QcJAP'](Ap[op], 0x0), -JXdGlf['fsPhX'](Am[om], 0x0))) {\n            ap['push'](Ap[op]);\n            op++;\n        } else {\n            am['push'](Am[om]);\n            om++;\n        }\n    }\n    if (JXdGlf['MRgYK'](am['length'], 0x1)) {\n        if (JXdGlf['TlXqm'](Ap[op] | 0x0, -JXdGlf['fsPhX'](Am[om], 0x0))) {\n            ap['push'](Ap[op]);\n            am['pop']();\n        } else {\n            am['push'](Am[om]);\n            ap['pop']();\n        }\n    }\n    return '' + JXdGlf['rFtXl'](mul, ap['reduce'](mul, 0x1), am['reduce'](mul, 0x1));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4 2\n1 2 -3 -4", "12"], ["4 3\n-1 -2 -3 -4", "1000000001"], ["2 1\n-1 1000000000", "1000000000"], ["10 10\n1000000000 100000000 10000000 1000000 100000 10000 1000 100 10 1", "999983200"]], "original": "console.log((args=>{\n  const [[N,K],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  let Am = [], Ap = [];\n  for ( let i = 0; i < N; i++ ) {\n    if ( A[i] > 0 ) Ap.push(A[i]);\n    if ( A[i] < 0 ) Am.push(A[i]);\n  }\n  const MOD = BigInt(1e9+7), mul = (a,b) => (BigInt(a)*BigInt(b)%MOD+MOD)%MOD;\n  Am.sort((a,b)=>a-b);\n  Ap.sort((a,b)=>b-a);\n  if ( Ap.length === 0 && K&1 ) return `${ Am.slice(-K).reduce(mul,1) }`;\n  let om = 0, op = 0, ap = [], am = [];\n  for ( let i = 0; i < K; i++ ) {\n    if ( (Ap[op]|0) > -(Am[om]|0) ) {\n      ap.push(Ap[op]); op++;\n    } else {\n      am.push(Am[om]); om++;\n    }\n  }\n  if ( am.length&1 ) {\n    if ( (Ap[op]|0) > -(Am[om]|0) ) {\n      ap.push(Ap[op]); am.pop();\n    } else {\n      am.push(Am[om]); ap.pop();\n    }\n  }\n  return `${mul(ap.reduce(mul,1),am.reduce(mul,1))}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02817_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var WDoXNj = {\n        'TiOCU': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    st = input[0x0]['split']('\\x20');\n    console['log'](WDoXNj['TiOCU'](st[0x1], st[0x0]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["oder atc", "atcoder"], ["humu humu", "humuhumu"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    // 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n    st = input[0].split(\" \");\n  \n\n  //  s = st[1].trim();   //Sうけとり\n  //  t = st[0].trim();   //Tうけとり\n    \n  //  var ts='';\n   // ts =s+t;    //T+S  連結\n    \n    console.log(st[1]+st[0]);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02838_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var RREcdy = {\n        'AFYCH': '6|8|9|5|0|7|4|2|10|3|1',\n        'pLLIZ': function (x, y) {\n            return x % y;\n        },\n        'dEZDb': function (x, y) {\n            return x < y;\n        },\n        'xXjDT': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'xTYOT': function (x, y) {\n            return x / y;\n        },\n        'GbooX': function (x, y) {\n            return x + y;\n        },\n        'mjFMo': function (x, y) {\n            return x * y;\n        },\n        'PrfAu': function (x, y) {\n            return x < y;\n        },\n        'TAkPn': function (x, y) {\n            return x - y;\n        },\n        'nkvsw': function (x, y) {\n            return x < y;\n        },\n        'XKvJP': function (x, y) {\n            return x ^ y;\n        },\n        'ZDBvD': function (x, y) {\n            return x / y;\n        },\n        'XrDbU': function (x, y) {\n            return x % y;\n        },\n        'JPSwl': function (x, y) {\n            return x ^ y;\n        }\n    };\n    var LmGyNM = RREcdy['AFYCH']['split']('|');\n    var gpkSWJ = 0x0;\n    while (!![]) {\n        switch (LmGyNM[gpkSWJ++]) {\n        case '0':\n            var count = 0x0;\n            continue;\n        case '1':\n            console['log'](RREcdy['pLLIZ'](count, a));\n            continue;\n        case '2':\n            for (var i = 0x0; RREcdy['dEZDb'](i, n); i++) {\n                x[i] = RREcdy['xXjDT'](parseInt, x[i], 0xa);\n                y[i] = Math['floor'](RREcdy['xTYOT'](x[i], 0x100000000));\n                x[i] = x[i] % 0x100000000;\n            }\n            continue;\n        case '3':\n            count = RREcdy['GbooX'](count, RREcdy['mjFMo'](count2, 0x100000000));\n            continue;\n        case '4':\n            var a = 0x3b9aca07;\n            continue;\n        case '5':\n            var y = new Array(n);\n            continue;\n        case '6':\n            input = input['split']('\\x0a');\n            continue;\n        case '7':\n            var count2 = 0x0;\n            continue;\n        case '8':\n            var n = RREcdy['xXjDT'](parseInt, input[0x0], 0xa);\n            continue;\n        case '9':\n            var x = input[0x1]['split']('\\x20');\n            continue;\n        case '10':\n            for (var i = 0x0; RREcdy['PrfAu'](i, RREcdy['TAkPn'](n, 0x1)); i++) {\n                for (var j = RREcdy['GbooX'](i, 0x1); RREcdy['nkvsw'](j, n); j++) {\n                    count += RREcdy['XKvJP'](x[i], x[j]);\n                    if (count > RREcdy['ZDBvD'](0x100000000, 0x2)) {\n                        count = RREcdy['XrDbU'](count, RREcdy['ZDBvD'](0x100000000, 0x2));\n                        count2 += 0.5;\n                    }\n                    count2 += RREcdy['JPSwl'](y[i], y[j]);\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3", "6"], ["10\n3 1 4 1 5 9 2 6 5 3", "237"], ["10\n3 14 159 2653 58979 323846 2643383 27950288 419716939 9375105820", "103715602"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n  　var n = parseInt(input[0], 10);\n  　var x = input[1].split(\" \");\n  \tvar y = new Array(n);\n  \tvar count = 0;\n  \tvar count2 = 0;\n    var a = 1000000007;\n    for(var i=0; i<n; i++){\n\t    x[i] = parseInt(x[i], 10);\n      \ty[i] = Math.floor(x[i]/4294967296);\n      \tx[i] = x[i]%4294967296;\n    }\n  for(var i=0; i<n-1; i++){\n  \tfor(var j=i+1; j<n; j++){\n      \tcount += x[i] ^ x[j];\n      if(count > 4294967296/2){\n        count = count%(4294967296/2);\n        count2 += 0.5;\n      }\n      count2 += y[i] ^ y[j];\n    }\n  }\n  count = count + count2 * 4294967296;\n\tconsole.log(count%a);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03417_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var vAUMVX = {\n        'IhOMY': function (x, y) {\n            return x === y;\n        },\n        'EzJPd': function (x, y) {\n            return x - y;\n        },\n        'YgvuD': function (x, y) {\n            return x + y;\n        },\n        'VwPif': function (x, y) {\n            return x * y;\n        },\n        'BgyGk': function (x, y) {\n            return x - y;\n        },\n        'iaTxV': function (x, y) {\n            return x - y;\n        },\n        'OxbRV': function (x, y) {\n            return x % y;\n        },\n        'EhcNw': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x20')['map'](a => parseInt(a));\n    var N = input[0x0];\n    var M = input[0x1];\n    var ans = 0x0;\n    if (N === 0x1 && vAUMVX['IhOMY'](M, 0x1))\n        ans = 0x1;\n    else if (vAUMVX['IhOMY'](N, 0x1) || vAUMVX['IhOMY'](M, 0x1))\n        ans = vAUMVX['EzJPd'](vAUMVX['YgvuD'](N, M), 0x3);\n    else\n        ans = vAUMVX['VwPif'](vAUMVX['BgyGk'](N, 0x2), M - 0x2);\n    if (ans > 0x1ff973cafa8000) {\n        ans = vAUMVX['VwPif'](Math['floor'](vAUMVX['iaTxV'](N, 0x2) / 0x2710), M - 0x2);\n        tmp = vAUMVX['OxbRV'](N - 0x2, 0x2710) * (M - 0x2);\n        ans += Math['floor'](tmp / 0x2710);\n        tmp = vAUMVX['EhcNw']('0000', vAUMVX['OxbRV'](tmp, 0x2710))['slice'](-0x4);\n        ans += tmp;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2", "0"], ["1 7", "5"], ["314 1592", "496080"]], "original": "function Main(input) {\n\tinput = input.split(\" \").map(a => parseInt(a));\n\tvar N = input[0];\n\tvar M = input[1];\n\tvar ans = 0;\n\tif(N === 1 && M === 1) ans = 1;\n\telse if(N === 1 || M === 1) ans = N + M - 3;\n\telse ans = (N - 2) * (M - 2);\n\t\n\tif(ans > 9e15){\n\t\tans = Math.floor((N - 2) / 10000) * (M - 2);\n\t\ttmp = (N - 2) % 10000 * (M - 2);\n\t\tans += Math.floor(tmp / 10000);\n\t\ttmp = (\"0000\" + tmp % 10000).slice(-4);\n\t\tans += tmp;\n\t}\n\t\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03607_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const Reubto = {\n        'xbVOz': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split'](/\\n/)['map'](v => ~~v);\n    let set = new Set();\n    for (let i = 0x1; Reubto['xbVOz'](i, input['length']); i++) {\n        if (set['has'](input[i])) {\n            set['delete'](input[i]);\n        } else {\n            set['add'](input[i]);\n        }\n    }\n    console['log'](set['size']);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n6\n2\n6", "1"], ["4\n2\n5\n5\n2", "0"], ["6\n12\n22\n16\n22\n18\n12", "2"]], "original": "\"use strict\"\n\nfunction main(input) {\n  input = input.split(/\\n/).map(v => ~~v)\n  let set = new Set()\n  for (let i = 1; i < input.length; i++) {\n    //\n    if (set.has(input[i])) {\n      set.delete(input[i])\n    } else {\n      set.add(input[i])\n    }\n  }\n  console.log(set.size)\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))\n", "language": "JavaScript"}
{"filename": "p03986_1", "type": "JavaScript", "obfuscated": "const Main = input => {\n    const LAUQiV = {\n        'eCVbJ': function (x, y) {\n            return x > y;\n        }\n    };\n    while (LAUQiV['eCVbJ'](input['indexOf']('ST'), -0x1)) {\n        input = input['replace'](/ST/g, '');\n    }\n    console['log'](input['length']);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["TSTTSS", "4"], ["SSTTST", "0"], ["TSSTTTSS", "4"]], "original": "const Main = (input) => {\n    while(input.indexOf(\"ST\") > -1) {\n        input = input.replace(/ST/g, \"\");\n    }\n    console.log(input.length);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00027_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var USyZlz = {\n        'jNdtE': function (x, y) {\n            return x - y;\n        },\n        'UtXmf': function (x, y) {\n            return x === y;\n        }\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a');\n    while (!![]) {\n        var ewFrwO = '5|1|0|4|2|3'['split']('|');\n        var hbIkqr = 0x0;\n        while (!![]) {\n            switch (ewFrwO[hbIkqr++]) {\n            case '0':\n                var d = a['shift']();\n                continue;\n            case '1':\n                var m = a['shift']();\n                continue;\n            case '2':\n                var date = new Date(0x7d4, USyZlz['jNdtE'](m, 0x1), d);\n                continue;\n            case '3':\n                console['log'](getWeekDay(date['getDay']()));\n                continue;\n            case '4':\n                if (m === 0x0 && USyZlz['UtXmf'](d, 0x0)) {\n                    return;\n                }\n                continue;\n            case '5':\n                var a = p['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            }\n            break;\n        }\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));\nfunction getWeekDay(d) {\n    var BOpYwL = {\n        'rGyAa': 'Sunday',\n        'nznkg': 'Monday',\n        'aKLrU': 'Tuesday',\n        'fgSQx': 'Wednesday',\n        'khQkZ': 'Friday',\n        'cvRtv': 'Saturday'\n    };\n    var week = [\n        BOpYwL['rGyAa'],\n        BOpYwL['nznkg'],\n        BOpYwL['aKLrU'],\n        BOpYwL['fgSQx'],\n        'Thursday',\n        BOpYwL['khQkZ'],\n        BOpYwL['cvRtv']\n    ];\n    return week[d];\n}", "test_cases": [["1 1\n2 29\n0 0", "Thursday\nSunday"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  while (true) {\n    var a = p.shift().split(' ').map(Number);\n    var m = a.shift();\n    var d = a.shift();\n    if (m === 0 && d === 0) {\n      return;\n    }\n    var date = new Date(2004, m - 1, d);\n    //console.log(date);\n    console.log(getWeekDay(date.getDay()) );\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction getWeekDay(d) {\n  var week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  return week[d];\n}", "language": "JavaScript"}
{"filename": "p00586_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['forEach'](function (v) {\n    var jeCCOf = {\n        'WYQcf': function (x, y) {\n            return x - y;\n        }\n    };\n    var a = jeCCOf['WYQcf'](v['split']('\\x20')[0x0], 0x0);\n    var b = jeCCOf['WYQcf'](v['split']('\\x20')[0x1], 0x0);\n    console['log'](a + b);\n});", "test_cases": [["1 2\n10 5\n100 20", "3\n15\n120"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\nvar a=(v.split(\" \"))[0]-0;\nvar b=(v.split(\" \"))[1]-0;\nconsole.log(a+b);\n});", "language": "JavaScript"}
{"filename": "p02238_1", "type": "JavaScript", "obfuscated": "(function main() {\n    const rjzQQJ = {\n        'HTjsg': function (callee, param1) {\n            return callee(param1);\n        },\n        'SJxFs': '/dev/stdin',\n        'lFxoK': 'utf8',\n        'zNhff': function (callee, param1) {\n            return callee(param1);\n        },\n        'gjRdl': function (x, y) {\n            return x < y;\n        }\n    };\n    const lines = rjzQQJ['HTjsg'](require, 'fs')['readFileSync'](rjzQQJ['SJxFs'], rjzQQJ['lFxoK'])['trim']()['split']('\\x0a');\n    const n = rjzQQJ['HTjsg'](Number, lines['shift']());\n    const adjLists = Array['from'](rjzQQJ['zNhff'](Array, n), () => []);\n    lines['forEach']((l, i) => l['split']('\\x20')['splice'](0x2)['forEach'](e => adjLists[i]['push'](e - 0x1)));\n    const d = [], f = [];\n    dfs(adjLists, d, f);\n    for (let i = 0x0; rjzQQJ['gjRdl'](i, n); i++) {\n        console['log'](i + 0x1 + '\\x20' + d[i] + '\\x20' + f[i]);\n    }\n}());\nfunction dfs(adjLists, d, f) {\n    const XpfSrZ = {\n        'lLANt': function (x, y) {\n            return x === y;\n        },\n        'PNuVb': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const WHITE = 0x0, GRAY = 0x1, BLACK = 0x2;\n    const size = adjLists['length'];\n    const color = Array['from'](adjLists, () => WHITE);\n    let time = 0x0;\n    function visit(u) {\n        const ctNsTa = '0|2|3|1|4'['split']('|');\n        let xjYiFr = 0x0;\n        while (!![]) {\n            switch (ctNsTa[xjYiFr++]) {\n            case '0':\n                color[u] = GRAY;\n                continue;\n            case '1':\n                color[u] = BLACK;\n                continue;\n            case '2':\n                d[u] = ++time;\n                continue;\n            case '3':\n                adjLists[u]['forEach'](v => {\n                    if (XpfSrZ['lLANt'](color[v], WHITE)) {\n                        XpfSrZ['PNuVb'](visit, v);\n                    }\n                });\n                continue;\n            case '4':\n                f[u] = ++time;\n                continue;\n            }\n            break;\n        }\n    }\n    adjLists['forEach']((e, u) => {\n        if (XpfSrZ['lLANt'](color[u], WHITE))\n            visit(u);\n    });\n}", "test_cases": [["4\n1 1 2\n2 1 4\n3 0\n4 1 3", "1 1 8\n2 2 7\n3 4 5\n4 3 6"], ["6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0", "1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6"]], "original": "(function main() {\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n\n  const adjLists = Array.from(Array(n), () => []);\n  lines.forEach((l, i) => l.split(' ').splice(2).forEach(e => adjLists[i].push(e-1)));\n\n  const d = [], f = [];\n  dfs(adjLists, d, f);\n  for (let i = 0; i < n; i++) {\n    console.log(`${i + 1} ${d[i]} ${f[i]}`);\n  }\n})();\n\nfunction dfs(adjLists, d, f) {\n  const WHITE = 0, GRAY = 1, BLACK = 2;\n  const size = adjLists.length;\n  const color = Array.from(adjLists, () => WHITE);\n\n  let time = 0;\n  function visit(u) {\n    color[u] = GRAY;\n    d[u] = ++time;\n    adjLists[u].forEach(v => {\n      if (color[v] === WHITE) {\n        visit(v);\n      }\n    });\n    color[u] = BLACK;\n    f[u] = ++time;\n  }\n  adjLists.forEach((e, u) => {\n    if (color[u] === WHITE) visit(u);\n  });\n}\n\n", "language": "JavaScript"}
{"filename": "p02274_1", "type": "JavaScript", "obfuscated": "var cnt = 0x0;\n(function main() {\n    const HRIJmq = {\n        'brFVn': function (callee, param1) {\n            return callee(param1);\n        },\n        'CAhVm': '/dev/stdin',\n        'RlMKk': 'utf8',\n        'yyUBa': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const lines = HRIJmq['brFVn'](require, 'fs')['readFileSync'](HRIJmq['CAhVm'], HRIJmq['RlMKk'])['trim']()['split']('\\x0a');\n    const n = HRIJmq['brFVn'](Number, lines['shift']());\n    let arr = lines['shift']()['split']('\\x20')['map'](Number);\n    HRIJmq['yyUBa'](mergeSort, arr, 0x0, n);\n    console['log'](cnt);\n}());\nfunction merge(arr, left, mid, right) {\n    const uIMQvx = {\n        'Nktyr': function (x, y) {\n            return x < y;\n        }\n    };\n    let L = arr['slice'](left, mid);\n    let R = arr['slice'](mid, right);\n    L['push'](Infinity);\n    R['push'](Infinity);\n    let i = 0x0;\n    let j = 0x0;\n    let t = 0x0;\n    for (let k = left; uIMQvx['Nktyr'](k, right); k++) {\n        if (uIMQvx['Nktyr'](L[i], R[j])) {\n            arr[k] = L[i++];\n            cnt += t;\n        } else {\n            arr[k] = R[j++];\n            t += 0x1;\n        }\n    }\n}\nfunction mergeSort(arr, left, right) {\n    const fUXPaF = {\n        'xYHqo': function (x, y) {\n            return x < y;\n        },\n        'MdgxQ': function (x, y) {\n            return x + y;\n        },\n        'ePLvd': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        }\n    };\n    if (fUXPaF['xYHqo'](left + 0x1, right)) {\n        let mid = Math['floor'](fUXPaF['MdgxQ'](left, right) / 0x2);\n        mergeSort(arr, left, mid);\n        mergeSort(arr, mid, right);\n        fUXPaF['ePLvd'](merge, arr, left, mid, right);\n    }\n}", "test_cases": [["5\n3 5 2 1 4", "6"], ["3\n3 1 2", "2"]], "original": "var cnt = 0;\n(function main(){\n  const lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n  const n = Number(lines.shift());\n  let arr = lines.shift().split(' ').map(Number);\n  mergeSort(arr, 0, n);\n  console.log(cnt);\n})();\n\nfunction merge(arr, left, mid, right) {\n  let L = arr.slice(left, mid);\n  let R = arr.slice(mid, right);\n  L.push(Infinity);\n  R.push(Infinity);\n  let i = 0;\n  let j = 0;\n  let t = 0;\n  for (let k = left; k < right; k++) {\n    if (L[i] < R[j]) {\n      arr[k] = L[i++];\n      cnt += t;\n    } else {\n      arr[k] = R[j++];\n      t += 1;\n    }\n  }\n}\n\nfunction mergeSort(arr, left, right) {\n  if (left + 1 < right) {\n    let mid = Math.floor((left + right) / 2);\n    mergeSort(arr, left, mid);\n    mergeSort(arr, mid, right);\n    merge(arr, left, mid, right);\n  }\n}\n\n", "language": "JavaScript"}
{"filename": "p02276_1", "type": "JavaScript", "obfuscated": "const config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nconst line = require('fs')['readFileSync'](config['input'], 'utf-8')['split'](config['newline']);\nconst list = line[0x1]['split']('\\x20')['map'](x => parseInt(x));\nconst partition = arr => {\n    const iyiZkB = {\n        'HYKZq': function (x, y) {\n            return x - y;\n        },\n        'wTjId': function (x, y) {\n            return x < y;\n        },\n        'fWQtu': function (x, y) {\n            return x - y;\n        },\n        'VnDBs': function (x, y) {\n            return x <= y;\n        },\n        'zOUlU': function (x, y) {\n            return x + y;\n        },\n        'xIFAt': function (x, y) {\n            return x - y;\n        },\n        'dIqyS': function (x, y) {\n            return x - y;\n        }\n    };\n    const x = arr[iyiZkB['HYKZq'](arr['length'], 0x1)];\n    const result = [...arr];\n    let i = -0x1;\n    for (let j = 0x0; iyiZkB['wTjId'](j, iyiZkB['fWQtu'](arr['length'], 0x1)); j++) {\n        if (iyiZkB['VnDBs'](result[j], x)) {\n            i++;\n            const tmp = result[i];\n            result[i] = result[j];\n            result[j] = tmp;\n        }\n    }\n    const tmp = result[iyiZkB['zOUlU'](i, 0x1)];\n    result[iyiZkB['zOUlU'](i, 0x1)] = result[iyiZkB['xIFAt'](arr['length'], 0x1)];\n    result[iyiZkB['dIqyS'](arr['length'], 0x1)] = tmp;\n    return [\n        i + 0x1,\n        result\n    ];\n};\nconst res = partition(list);\nconsole['log'](res[0x1]['map']((x, i) => i === res[0x0] ? '[' + x + ']' : x['toString']())['join']('\\x20'));", "test_cases": [["12\n13 19 9 5 12 8 7 4 21 2 6 11", "9 5 8 7 4 2 6 [11] 21 13 19 12"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nconst list = line[1].split(' ').map(x => parseInt(x));\n\nconst partition = arr => {\n    const x = arr[arr.length-1];\n    const result = [...arr];\n    let i = -1;\n    for (let j = 0; j < arr.length - 1; j++) {\n        if (result[j] <= x) {\n            i++;\n            const tmp = result[i];\n            result[i] = result[j];\n            result[j] = tmp;\n        }\n    }\n    const tmp = result[i+1];\n    result[i+1] = result[arr.length-1];\n    result[arr.length-1] = tmp;\n\n    return [i+1, result];\n}\n\nconst res = partition(list);\n\nconsole.log(res[1].map((x, i) => i === res[0] ? `[${x}]` : x.toString()).join(' '));\n\n", "language": "JavaScript"}
{"filename": "p02287_1", "type": "JavaScript", "obfuscated": "console['log'](require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/[ |\\n]/)['slice'](0x1)['map']((k, i, a) => 'node\\x20' + ++i + ':\\x20key\\x20=\\x20' + k + ',\\x20' + (i - 0x1 ? 'parent\\x20key\\x20=\\x20' + a[Math['floor'](i / 0x2) - 0x1] + ',\\x20' : '') + (0x2 * i - 0x1 < a['length'] ? 'left\\x20key\\x20=\\x20' + a[0x2 * i - 0x1] + ',\\x20' : '') + (0x2 * i < a['length'] ? 'right\\x20key\\x20=\\x20' + a[0x2 * i] + ',\\x20' : ''))['join']('\\x0a'));", "test_cases": [["5\n7 8 1 2 3", "node 1: key = 7, left key = 8, right key = 1, \nnode 2: key = 8, parent key = 7, left key = 2, right key = 3, \nnode 3: key = 1, parent key = 7, \nnode 4: key = 2, parent key = 8, \nnode 5: key = 3, parent key = 8,"]], "original": "console.log(require('fs').readFileSync('/dev/stdin','utf8').trim().split(/[ |\\n]/).slice(1).map((k,i,a)=>`node ${++i}: key = ${k}, `+((i-1)?`parent key = ${a[Math.floor(i/2)-1]}, `:'')+(2*i-1<a.length?`left key = ${a[2*i-1]}, `:'')+(2*i<a.length?`right key = ${a[2*i]}, `:'')).join('\\n'));\n", "language": "JavaScript"}
{"filename": "p02417_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['trim']();\ninput = input['toLowerCase']();\nvar abc = 'abcdefghijklmnopqrstuvwxyz'['split']('');\nvar obj = {};\nfor (var i = 0x0; i < abc['length']; i++)\n    obj[abc[i]] = 0x0;\ninput = input['replace'](/[a-z]/g, function (str) {\n    obj[str]++;\n    return str;\n});\nabc['forEach'](function (v, i) {\n    var OQfOAu = {\n        'xUwVf': function (x, y) {\n            return x + y;\n        },\n        'KoLkZ': '\\x20:\\x20'\n    };\n    console['log'](OQfOAu['xUwVf'](OQfOAu['xUwVf'](v, OQfOAu['KoLkZ']), obj[v]));\n});", "test_cases": [["This is a pen.", "a : 1\nb : 0\nc : 0\nd : 0\ne : 1\nf : 0\ng : 0\nh : 1\ni : 2\nj : 0\nk : 0\nl : 0\nm : 0\nn : 1\no : 0\np : 1\nq : 0\nr : 0\ns : 2\nt : 1\nu : 0\nv : 0\nw : 0\nx : 0\ny : 0\nz : 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.trim();\ninput=input.toLowerCase();\nvar abc='abcdefghijklmnopqrstuvwxyz'.split(\"\");\nvar obj={};\nfor(var i=0;i<abc.length;i++)obj[abc[i]]=0;\n\ninput=input.replace(/[a-z]/g,function(str){\nobj[str]++;\nreturn str;\n});\n\nabc.forEach(function(v,i){\nconsole.log(v+\" : \"+obj[v]);\n});", "language": "JavaScript"}
{"filename": "p02422_1", "type": "JavaScript", "obfuscated": "'use strict';\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['replace'](/\\r?\\n$/, '')['split'](/\\r?\\n/));\nfunction main(lines) {\n    var LqVaZG = {\n        'WonMn': 'print',\n        'ujPfj': function (x, y) {\n            return x + y;\n        },\n        'QchCx': function (x, y) {\n            return x + y;\n        },\n        'AuFGy': 'reverse',\n        'UpvoK': function (x, y) {\n            return x + y;\n        }\n    };\n    var str = lines['shift']();\n    lines['shift']();\n    var code;\n    while (code = lines['shift']()) {\n        code = code['split']('\\x20');\n        var from = +code[0x1], to = +code[0x2];\n        switch (code[0x0]) {\n        case LqVaZG['WonMn']:\n            console['log'](str['slice'](from, LqVaZG['ujPfj'](to, 0x1)));\n            break;\n        case 'replace':\n            str = LqVaZG['ujPfj'](LqVaZG['ujPfj'](str['slice'](0x0, from), code[0x3]), str['slice'](LqVaZG['QchCx'](to, 0x1)));\n            break;\n        case LqVaZG['AuFGy']:\n            str = LqVaZG['UpvoK'](LqVaZG['QchCx'](str['slice'](0x0, from), str['slice'](from, to + 0x1)['split']('')['reverse']()['join']('')), str['slice'](to + 0x1));\n            break;\n        }\n    }\n}", "test_cases": [["abcde\n3\nreplace 1 3 xyz\nreverse 0 2\nprint 1 4", "xaze"], ["xyz\n3\nprint 0 2\nreplace 0 2 abc\nprint 0 2", "xyz\nabc"]], "original": "\"use strict\";\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").replace(/\\r?\\n$/, \"\").split(/\\r?\\n/));\n\nfunction main(lines){\n\tvar str = lines.shift();\n\tlines.shift();\n\tvar code;\n\twhile(code = lines.shift()){\n\t\tcode = code.split(\" \");\n\t\tvar from = +code[1], to = +code[2];\n\t\tswitch(code[0]){\n\t\t\tcase \"print\":\n\t\t\t\tconsole.log(str.slice(from, to+1));\n\t\t\t\tbreak;\n\t\t\tcase \"replace\":\n\t\t\t\tstr = str.slice(0, from) + code[3] + str.slice(to+1);\n\t\t\t\tbreak;\n\t\t\tcase \"reverse\":\n\t\t\t\tstr = str.slice(0, from) + str.slice(from, to+1).split(\"\").reverse().join(\"\") + str.slice(to+1);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}", "language": "JavaScript"}
{"filename": "p02536_1", "type": "JavaScript", "obfuscated": "let lines = [];\nlet reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    lines['push'](line);\n});\nreader['on']('close', function () {\n    const XSvwll = {\n        'krikQ': function (x, y) {\n            return x + y;\n        },\n        'DvMgS': function (x, y) {\n            return x - y;\n        },\n        'kDwZL': function (x, y) {\n            return x < y;\n        }\n    };\n    const [n, m] = lines[0x0]['split']('\\x20');\n    const a = [];\n    const b = [];\n    for (let i = 0x0; i < m; i++) {\n        [a[i], b[i]] = lines[XSvwll['krikQ'](i, 0x1)]['split']('\\x20');\n    }\n    const connected = [];\n    connected['push'](a[0x0]);\n    connected['push'](b[0x0]);\n    ans = XSvwll['DvMgS'](n, 0x2);\n    for (let i = 0x1; XSvwll['kDwZL'](i, m); i++) {\n        if (!connected['includes'](a[i]) && !connected['includes'](b[i])) {\n            ans--;\n        } else if (!connected['includes'](a[i])) {\n            ans--;\n            connected['push'](a[i]);\n        } else if (!connected['includes'](b[i])) {\n            ans--;\n            connected['push'](b[i]);\n        }\n    }\n    console['log'](ans);\n});", "test_cases": [["3 1\n1 2", "1"]], "original": "let lines = [];\nlet reader = require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\n// 標準入力の読み込み\nreader.on('line', function(line) {\n    lines.push(line);\n});\n\nreader.on('close', function() {\n    // 処理の記述\n    const [n, m] = lines[0].split(' ');\n    const a = [];\n    const b = [];\n    for (let i = 0; i < m; i++) {\n        [a[i], b[i]] = lines[i+1].split(' ');\n    }\n    const connected = [];\n    connected.push(a[0]);\n    connected.push(b[0]);\n    ans = n-2;\n    for (let i = 1; i < m; i++) {\n        if ((!connected.includes(a[i])) && (!connected.includes(b[i]))) {\n            ans--;\n        } else if (!connected.includes(a[i])) {\n            ans--;\n            connected.push(a[i]);\n        } else if (!connected.includes(b[i])) {\n            ans--;\n            connected.push(b[i]);\n        }\n\n    }\n\n    // 表示\n    console.log(ans);\n});", "language": "JavaScript"}
{"filename": "p02624_1", "type": "JavaScript", "obfuscated": "function* main() {\n    const unARJx = {\n        'ejqUu': function (x, y) {\n            return x <= y;\n        },\n        'hOkSJ': function (x, y) {\n            return x / y;\n        },\n        'lWxuc': function (x, y) {\n            return x + y;\n        }\n    };\n    const N = +(yield);\n    let sum = 0x0;\n    for (let k = 0x1; unARJx['ejqUu'](k, N); k++)\n        sum += Math['floor'](unARJx['hOkSJ'](k * Math['floor'](unARJx['lWxuc'](0x1, unARJx['hOkSJ'](N, k))) * Math['floor'](unARJx['hOkSJ'](N, k)), 0x2));\n    console['log'](sum);\n}\nconst iter = main();\niter['next']();\nrequire('readline')['createInterface']({ 'input': process['stdin'] })['on']('line', line => iter['next'](line));", "test_cases": [["4", "23"], ["100", "26879"], ["10000000", "838627288460105"]], "original": "function *main() {\n  const N = +(yield);\n  \n  let sum = 0;\n  for (let k = 1; k <= N; k++)\n    sum += Math.floor(k * Math.floor(1+N/k) * Math.floor(N/k) / 2);\n  \n  console.log(sum);\n}\nconst iter = main();\niter.next();\nrequire(\"readline\").createInterface({input: process.stdin}).on(\"line\", line => iter.next(line));\n", "language": "JavaScript"}
{"filename": "p02658_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const NdaUeS = {\n        'xsTaz': function (x, y) {\n            return x < y;\n        },\n        'lAtrT': function (callee, param1) {\n            return callee(param1);\n        },\n        'qFcgp': function (x, y) {\n            return x > y;\n        },\n        'huPNF': function (callee, param1) {\n            return callee(param1);\n        },\n        'wtIBk': function (x, y) {\n            return x * y;\n        },\n        'sdmmI': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = input[0x0]['trim']();\n    const values = input[0x1]['split']('\\x20');\n    for (let i = 0x0; NdaUeS['xsTaz'](i, N); i++) {\n        if (values[i] == 0x0) {\n            console['log']('0');\n            return;\n        }\n    }\n    let result = NdaUeS['lAtrT'](BigInt, 0x1);\n    for (let i = 0x0; NdaUeS['xsTaz'](i, N); i++) {\n        const nextVal = NdaUeS['lAtrT'](BigInt, values[i]);\n        if (NdaUeS['qFcgp'](nextVal, NdaUeS['huPNF'](BigInt, 0xde0b6b3a7640000))) {\n            console['log']('-1');\n            return;\n        }\n        result = NdaUeS['wtIBk'](result, nextVal);\n        if (NdaUeS['qFcgp'](result, NdaUeS['sdmmI'](BigInt, 0xde0b6b3a7640000))) {\n            console['log']('-1');\n            return;\n        }\n    }\n    console['log'](NdaUeS['huPNF'](Number, result)['toString']());\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1000000000 1000000000", "1000000000000000000"], ["3\n101 9901 999999000001", "-1"], ["31\n4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5 0", "0"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  const N = input[0].trim();\n  const values = input[1].split(\" \");\n\n  for (let i=0;i<N;i++) {\n    if (values[i] == 0) {\n    \tconsole.log(\"0\")\n\t    return\n    }\n  }\n  \n  let result = BigInt(1);\n  for (let i=0;i<N;i++) {\n    const nextVal = BigInt(values[i]);\n    \n    if (nextVal > BigInt(1000000000000000000)) {\n      console.log(\"-1\");\n      return\n    }\n    \n    result = result * nextVal;\n    \n    if (result > BigInt(1000000000000000000)) {\n    \tconsole.log(\"-1\");\n        return\n    }\n  }\n\n  console.log(Number(result).toString());\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02854_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bVNjND = {\n        'TTOvW': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'iQthI': function (x, y) {\n            return x < y;\n        },\n        'mTcav': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'DcRRq': function (x, y) {\n            return x < y;\n        },\n        'EPinh': function (x, y) {\n            return x + y;\n        },\n        'pggyJ': function (x, y) {\n            return x / y;\n        },\n        'xKreG': function (x, y) {\n            return x == y;\n        },\n        'NFzlX': function (x, y) {\n            return x - y;\n        },\n        'jbLYN': function (x, y) {\n            return x - y;\n        }\n    };\n    var N = bVNjND['TTOvW'](parseInt, input[0x0], 0xa);\n    var A = input[0x1]['split']('\\x20');\n    var total = 0x0;\n    for (var i = 0x0; bVNjND['iQthI'](i, N); i++) {\n        A[i] = bVNjND['mTcav'](parseInt, A[i], 0xa);\n        total += A[i];\n    }\n    var result = 0x0;\n    var mae = 0x0;\n    var ato = 0x0;\n    var target = 0x0;\n    for (var i = 0x0; bVNjND['iQthI'](i, N); i++) {\n        if (bVNjND['DcRRq'](bVNjND['EPinh'](mae, A[i]), bVNjND['pggyJ'](total, 0x2))) {\n            mae += A[i];\n        } else if (bVNjND['xKreG'](bVNjND['EPinh'](mae, A[i]), total / 0x2)) {\n            console['log']('%s', 0x0);\n            return;\n        } else {\n            target = i;\n            ato = bVNjND['NFzlX'](total, mae) - A[i];\n            break;\n        }\n    }\n    var diff = Math['abs'](bVNjND['NFzlX'](ato, mae));\n    var result = Math['abs'](bVNjND['jbLYN'](A[i], diff));\n    console['log']('%s', result);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["3\n2 4 3", "3"], ["12\n100 104 102 105 103 103 101 105 104 102 104 101", "0"]], "original": "function Main(input) {\n  var N = parseInt(input[0], 10);\n  var A = input[1].split(\" \");\n\n  var total = 0;\n  for (var i = 0; i < N; i++) {\n    A[i] = parseInt(A[i], 10);\n    total += A[i];\n  }\n//   console.log(\"total:%s\", total);\n\n  var result = 0;\n  var mae = 0;\n  var ato = 0;\n  var target = 0;\n  for (var i = 0; i < N; i++) {\n    if (mae + A[i] < total / 2) {\n      mae += A[i];\n    } else if (mae + A[i] == total / 2) {\n      console.log(\"%s\", 0);\n      return;\n    } else {\n      target = i;\n      ato = total - mae - A[i];\n      break;\n    }\n  }\n//   console.log(\"mae:%s\", mae);\n//   console.log(\"ato:%s\", ato);\n//   console.log(\"target:%s\", i);\n//   console.log(\"Ai:%s\", A[i]);\n\n  var diff = Math.abs(ato - mae);\n//   console.log(\"diff:%s\", diff);\n  var result = Math.abs(A[i] - diff);\n  console.log(\"%s\", result);\n}\n\nMain(\n  require(\"fs\")\n    .readFileSync(\"/dev/stdin\", \"utf8\")\n    .split(\"\\n\")\n);\n", "language": "JavaScript"}
{"filename": "p02927_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const weoowz = {\n        'Wucqy': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KcWuO': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'cTmMn': function (x, y) {\n            return x <= y;\n        },\n        'SAXEV': function (x, y) {\n            return x % y;\n        },\n        'MqHKU': function (x, y) {\n            return x / y;\n        },\n        'hxuWj': function (x, y) {\n            return x >= y;\n        },\n        'Uohef': function (x, y) {\n            return x === y;\n        },\n        'eRjYn': function (x, y) {\n            return x * y;\n        }\n    };\n    const args = input['split']('\\x0a')['map'](arg => arg['split']('\\x20'));\n    const M = weoowz['Wucqy'](parseInt, args[0x0][0x0], 0xa);\n    const D = weoowz['KcWuO'](parseInt, args[0x0][0x1], 0xa);\n    let cnt = 0x0;\n    for (let m = 0x1; weoowz['cTmMn'](m, M); m++) {\n        for (let j = 0x1; j <= D; j++) {\n            const d1 = weoowz['SAXEV'](j, 0xa);\n            const d10 = Math['floor'](weoowz['MqHKU'](j, 0xa));\n            if (weoowz['hxuWj'](d1, 0x2) && weoowz['hxuWj'](d10, 0x2) && weoowz['Uohef'](weoowz['eRjYn'](d1, d10), m)) {\n                cnt++;\n            }\n        }\n    }\n    console['log'](cnt);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["15 40", "10"], ["12 31", "5"], ["1 1", "0"]], "original": "'use strict'\n\nconst main = input => {\n\tconst args = input.split('\\n').map(arg => arg.split(' '))\n\tconst M = parseInt(args[0][0], 10)\n\tconst D = parseInt(args[0][1], 10)\n\tlet cnt = 0\n\n\tfor (let m = 1; m <= M; m++) {\n\t\tfor (let j = 1; j <= D; j++) {\n\t\t\tconst d1 = j % 10\n\t\t\tconst d10 = Math.floor(j / 10)\n\n\t\t\tif (d1 >= 2 && d10 >= 2 && (d1 * d10 === m)) {\n\t\t\t\tcnt++\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log(cnt)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02937_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const jktFJV = {\n        'RATKB': function (x, y) {\n            return x < y;\n        },\n        'FiarX': function (x, y) {\n            return x === y;\n        },\n        'SEcdK': function (x, y) {\n            return x + y;\n        },\n        'IBqUd': function (x, y) {\n            return x * y;\n        }\n    };\n    const [s, t] = args['trim']()['split']`\\n`;\n    const sl = s['length'], tl = t['length'];\n    let i = -0x1, cyc = 0x0;\n    T:\n        for (let j = 0x0; j < tl; j++) {\n            for (let k = i + 0x1; jktFJV['RATKB'](k, sl); k++) {\n                if (jktFJV['FiarX'](s[k], t[j])) {\n                    i = k;\n                    continue T;\n                }\n            }\n            if (i === -0x1)\n                return '-1';\n            cyc++;\n            i = -0x1;\n            j--;\n        }\n    return '' + jktFJV['SEcdK'](jktFJV['SEcdK'](jktFJV['IBqUd'](cyc, sl), i), 0x1);\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["contest\nson", "10"], ["contest\nprogramming", "-1"], ["contest\nsentence", "33"]], "original": "console.log((args=>{\n  const [s,t] = args.trim().split`\\n`;\n  const sl = s.length, tl = t.length;\n  let i = -1, cyc = 0;\n  T: for ( let j = 0; j < tl; j++ ) {\n    for ( let k = i+1; k < sl; k++ ) {\n      if ( s[k] === t[j] ) {\n        i = k;\n        continue T;\n      }\n    }\n    if ( i === -1 ) return '-1';\n    cyc++;\n    i = -1;\n    j--;\n  }\n  return `${cyc*sl+i+1}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03201_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction getPair(num) {\n    const uNcuxE = {\n        'LnopR': function (x, y) {\n            return x + y;\n        },\n        'qkSqt': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return uNcuxE['LnopR'](uNcuxE['qkSqt'](parseInt, num['toString'](0x2)['split']('')['map'](x => x === '1' ? '0' : '1')['reduce']((acc, cur) => acc + cur, ''), 0x2), 0x1);\n}\nfunction main(input) {\n    const VClHjx = {\n        'czTVN': function (x, y) {\n            return x > y;\n        },\n        'rrEUm': function (callee, param1) {\n            return callee(param1);\n        },\n        'Bbtew': function (x, y) {\n            return x >= y;\n        }\n    };\n    const inputs = input['split']('\\x0a')['filter'](x => x !== '');\n    const A = inputs[0x1]['split']('\\x20')['map'](Number);\n    let sortedA = A['sort']((a, b) => b - a);\n    let count = 0x0;\n    while (VClHjx['czTVN'](sortedA['length'], 0x0)) {\n        let i = sortedA[0x0];\n        sortedA['splice'](0x0, 0x1);\n        let j = VClHjx['rrEUm'](getPair, i);\n        let indexJ = sortedA['findIndex'](x => x === j);\n        if (VClHjx['Bbtew'](indexJ, 0x0)) {\n            sortedA['splice'](indexJ, 0x1);\n            count++;\n        }\n    }\n    console['log'](count);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3", "1"], ["5\n3 11 14 5 13", "2"]], "original": "\"use strict\";\n\nfunction getPair(num) {\n  return (\n    parseInt(\n      num\n        .toString(2)\n        .split(\"\")\n        .map(x => (x === \"1\" ? \"0\" : \"1\"))\n        .reduce((acc, cur) => acc + cur, \"\"),\n      2\n    ) + 1\n  );\n}\n\nfunction main(input) {\n  const inputs = input.split(\"\\n\").filter(x => x !== \"\");\n\n  const A = inputs[1].split(\" \").map(Number);\n\n  let sortedA = A.sort((a, b) => b - a);\n  let count = 0;\n  while (sortedA.length > 0) {\n    let i = sortedA[0];\n    sortedA.splice(0, 1);\n\n    let j = getPair(i);\n\n    let indexJ = sortedA.findIndex(x => x === j);\n\n    if (indexJ >= 0) {\n      sortedA.splice(indexJ, 1);\n      count++;\n    }\n  }\n\n  console.log(count);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03214_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var cudEFc = {\n        'gCMXU': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; cudEFc['gCMXU'](i, rest['length']); i++)\n        if (cudEFc['gCMXU'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var dKMERk = {\n        'PRcMM': function (x, y) {\n            return x > y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (dKMERk['PRcMM'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var kWUUOJ = {\n        'eIZHk': function (callee, param1) {\n            return callee(param1);\n        },\n        'ixQkT': function (x, y) {\n            return x < y;\n        }\n    };\n    var aCfkPB = '9|7|0|6|5|2|3|8|1|4'['split']('|');\n    var kxdTtI = 0x0;\n    while (!![]) {\n        switch (aCfkPB[kxdTtI++]) {\n        case '0':\n            var as = kWUUOJ['eIZHk'](toIntArr, input[0x1]['split']('\\x20'));\n            continue;\n        case '1':\n            for (var i = 0x1; kWUUOJ['ixQkT'](i, n); i++) {\n                if (kWUUOJ['ixQkT'](bs[i], min)) {\n                    min = bs[i];\n                    ans = i;\n                }\n            }\n            continue;\n        case '2':\n            var bs = as['map']((el, ind, arr) => abs(sum - n * el));\n            continue;\n        case '3':\n            var ans = 0x0;\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        case '5':\n            for (var i = 0x0; kWUUOJ['ixQkT'](i, n); i++) {\n                sum += as[i];\n            }\n            continue;\n        case '6':\n            var sum = 0x0;\n            continue;\n        case '7':\n            var n = toInt(input[0x0]);\n            continue;\n        case '8':\n            var min = bs[0x0];\n            continue;\n        case '9':\n            var input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\n1 2 3", "1"], ["4\n2 5 2 5", "0"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar n = toInt(input[0]);\n\tvar as = toIntArr(input[1].split(' '));\n\tvar sum = 0;\n\tfor(var i = 0; i < n; i++){\n\t\tsum += as[i];\n\t}\n\tvar bs = as.map((el,ind,arr)=>abs(sum - n*el));\n\tvar ans = 0;\n\tvar min = bs[0];\n\tfor(var i = 1; i < n; i++){\n\t\tif(bs[i] < min){\n\t\t\tmin = bs[i];\n\t\t\tans = i;\n\t\t}\n\t}\n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03229_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gyolQI = {\n        'gZeed': function (x, y) {\n            return x - y;\n        },\n        'qXeqc': function (x, y) {\n            return x - y;\n        },\n        'pdgZH': function (x, y) {\n            return x - y;\n        },\n        'UwtTB': function (x, y) {\n            return x < y;\n        },\n        'eMLZh': function (x, y) {\n            return x / y;\n        },\n        'VNEiW': function (x, y) {\n            return x - y;\n        },\n        'JcpQf': function (x, y) {\n            return x < y;\n        },\n        'IuMze': function (x, y) {\n            return x - y;\n        },\n        'wvhnA': function (x, y) {\n            return x + y;\n        }\n    };\n    var nums = input['split']('\\x0a')['map'](function (value) {\n        return gyolQI['gZeed'](value, 0x0);\n    });\n    var N = nums['shift']();\n    nums['sort'](function (a, b) {\n        return gyolQI['qXeqc'](b, a);\n    });\n    var ary = new Array(N);\n    var m = 0x0;\n    var r = gyolQI['pdgZH'](N, 0x1);\n    for (var l = 0x0; gyolQI['UwtTB'](l, gyolQI['eMLZh'](N, 0x2)); l++, r--) {\n        ary[m++] = nums[l];\n        ary[m++] = nums[r];\n    }\n    var s = 0x0, s1 = 0x0;\n    m = gyolQI['VNEiW'](N, 0x1);\n    for (var n = 0x0; n < gyolQI['qXeqc'](N, 0x1); n++) {\n        r = Math['abs'](ary[m] - ary[n]);\n        s += r;\n        m = n;\n    }\n    for (var n = 0x0; gyolQI['JcpQf'](n, gyolQI['gZeed'](N, 0x1)); n++) {\n        r = Math['abs'](gyolQI['IuMze'](ary[n], ary[gyolQI['wvhnA'](n, 0x1)]));\n        s1 += r;\n    }\n    console['log'](Math['max'](s, s1));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n6\n8\n1\n2\n3", "21"], ["6\n3\n1\n4\n1\n5\n9", "25"], ["3\n5\n5\n1", "8"]], "original": "function Main(input) {\n    var nums = input.split(\"\\n\").map(function(value) { return value - 0; });\n    var N = nums.shift();\n    nums.sort(function(a,b) { return b - a; });\n    var ary = new Array(N);\n    var m = 0;\n    var r = N - 1;\n    for (var l = 0; l < N / 2; l++, r--) {\n      ary[m++] = nums[l];\n      ary[m++] = nums[r];\n    }\n    var s = 0, s1 = 0;\n    m = N - 1;\n    for (var n = 0; n < N - 1; n++) {\n      r = (Math.abs(ary[m] - ary[n]));\n      s += r;\n      m = n;\n    }\n    for (var n = 0; n < N - 1; n++) {\n      r = (Math.abs(ary[n] - ary[n+1]));\n      s1 += r;\n    }\n    console.log(Math.max(s, s1));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03386_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var oAkiMC = {\n        'IYVYn': '1|2|4|5|3|0',\n        'ZqJRW': function (x, y) {\n            return x < y;\n        },\n        'gVyhh': function (callee, param1) {\n            return callee(param1);\n        },\n        'MuOYM': function (x, y) {\n            return x <= y;\n        },\n        'mbQMl': function (x, y) {\n            return x - y;\n        }\n    };\n    var qmVkVY = oAkiMC['IYVYn']['split']('|');\n    var ZOZuPC = 0x0;\n    while (!![]) {\n        switch (qmVkVY[ZOZuPC++]) {\n        case '0':\n            for (var i = 0x0; oAkiMC['ZqJRW'](i, ans['length']); i++) {\n                console['log'](ans[i]);\n            }\n            continue;\n        case '1':\n            var A = oAkiMC['gVyhh'](Number, lines[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '2':\n            var B = oAkiMC['gVyhh'](Number, lines[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '3':\n            for (var i = A; oAkiMC['MuOYM'](i, B); i++) {\n                if (i < A + K) {\n                    ans += i['toString']();\n                } else if (i > oAkiMC['mbQMl'](B, K)) {\n                    ans += i['toString']();\n                }\n            }\n            continue;\n        case '4':\n            var K = Number(lines[0x0]['split']('\\x20')[0x2]);\n            continue;\n        case '5':\n            var ans = '';\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["3 8 2", "3\n4\n7\n8"], ["4 8 3", "4\n5\n6\n7\n8"], ["2 9 100", "2\n3\n4\n5\n6\n7\n8\n9"]], "original": "var lines = [];\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var A = Number(lines[0].split(\" \")[0])\n    var B = Number(lines[0].split(\" \")[1])\n    var K = Number(lines[0].split(\" \")[2])\n\n    var ans = \"\";\n    for (var i = A; i <= B; i++) {\n        if (i < A + K) { ans += i.toString() }\n        else if (i > B - K) { ans += i.toString() }\n    }\n    for (var i = 0; i < ans.length; i++) {\n        console.log(ans[i])\n    }\n});", "language": "JavaScript"}
{"filename": "p03548_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var EZUFFq = {\n        'unUeq': function (callee, param1) {\n            return callee(param1);\n        },\n        'ReUEK': function (x, y) {\n            return x + y;\n        },\n        'FHDXa': function (x, y) {\n            return x * y;\n        },\n        'qMZvp': function (x, y) {\n            return x * y;\n        }\n    };\n    var ZpHbuh = '4|6|2|3|0|5|1'['split']('|');\n    var qZmBzv = 0x0;\n    while (!![]) {\n        switch (ZpHbuh[qZmBzv++]) {\n        case '0':\n            var x = 0x0;\n            continue;\n        case '1':\n            console['log'](--N);\n            continue;\n        case '2':\n            var Z = parseInt(input['split']('\\x20')[0x2]);\n            continue;\n        case '3':\n            var N = 0x1;\n            continue;\n        case '4':\n            var X = EZUFFq['unUeq'](parseInt, input['split']('\\x20')[0x0]);\n            continue;\n        case '5':\n            while (!![]) {\n                x = EZUFFq['ReUEK'](EZUFFq['FHDXa'](N, Y), EZUFFq['qMZvp'](EZUFFq['ReUEK'](N, 0x1), Z));\n                if (x > X)\n                    break;\n                N++;\n            }\n            continue;\n        case '6':\n            var Y = parseInt(input['split']('\\x20')[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["13 3 1", "3"], ["12 3 1", "2"], ["100000 1 1", "49999"], ["64146 123 456", "110"], ["64145 123 456", "109"]], "original": "function Main(input){\n  var X = parseInt(input.split(' ')[0]);  // total\n  var Y = parseInt(input.split(' ')[1]);  // human space\n  var Z = parseInt(input.split(' ')[2]);  // void space\n\n  var N = 1; // human count\n  var x = 0; // space\n  while(true){\n    x = (N * Y) + (N + 1) * Z;\n    if(x > X) break;\n    N++;\n  }\n  console.log(--N);\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03673_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const jxxGhx = {\n        'TwdgG': function (x, y) {\n            return x < y;\n        },\n        'CBayN': function (x, y) {\n            return x % y;\n        },\n        'ZRObM': function (x, y) {\n            return x % y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = ~~arg[0x0];\n    const b = arg[0x1]['split']('\\x20')['map'](n => ~~n);\n    let answer = [];\n    for (let i = 0x0; jxxGhx['TwdgG'](i, N); i++) {\n        if (jxxGhx['CBayN'](i, 0x2) === 0x0) {\n            answer['push'](b[i]);\n        } else {\n            answer['unshift'](b[i]);\n        }\n    }\n    if (jxxGhx['ZRObM'](N, 0x2) !== 0x0)\n        answer = answer['reverse']();\n    console['log'](answer['join']('\\x20'));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 2 3 4", "4 2 1 3"], ["3\n1 2 3", "3 1 2"], ["1\n1000000000", "1000000000"], ["6\n0 6 7 6 7 0", "0 6 6 0 7 7"]], "original": "\n\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = ~~arg[0];\n    const b = arg[1].split(\" \").map(n=>~~n);\n    \n    let answer = [];\n    \n    for(let i=0; i<N; i++) {\n        if(i % 2 === 0) {\n            answer.push(b[i]);\n        } else {\n            answer.unshift(b[i]);\n        }\n    }\n    \n    if(N % 2 !== 0) answer = answer.reverse();\n    \n    console.log(answer.join(\" \"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03992_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    input = input['split']('');\n    input['splice'](0x4, 0x0, '\\x20');\n    console['log'](input['join'](''));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["CODEFESTIVAL", "CODE FESTIVAL"], ["POSTGRADUATE", "POST GRADUATE"], ["ABCDEFGHIJKL", "ABCD EFGHIJKL"]], "original": "function Main(input) {\n\tinput = input.split(\"\");\n\tinput.splice(4,0,\" \");\n\tconsole.log(input.join(\"\"))\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p00170_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var nww = [];\n    for (var i = 0x0; i < n; i++)\n        nww[i] = arr['shift']()['split']('\\x20');\n    nww = nww['map'](v => [\n        v[0x0],\n        v[0x1] - 0x0,\n        v[0x2] - 0x0\n    ]);\n    var max = 0x0;\n    var ans = [];\n    var bomb = function (arrA, arrB, sum, g) {\n        var aGPJzw = {\n            'Cyrwh': function (x, y) {\n                return x <= y;\n            },\n            'sRNZH': function (x, y) {\n                return x + y;\n            },\n            'NYRhi': function (x, y) {\n                return x * y;\n            },\n            'qnjLL': function (x, y) {\n                return x + y;\n            },\n            'KMDVU': function (callee, param1, param2, param3, param4) {\n                return callee(param1, param2, param3, param4);\n            },\n            'tBMLp': function (x, y) {\n                return x == y;\n            },\n            'WrKOK': function (x, y) {\n                return x / y;\n            }\n        };\n        if (aGPJzw['tBMLp'](arrB['length'], 0x0)) {\n            if (max < aGPJzw['WrKOK'](g, sum)) {\n                ans = arrA;\n                max = aGPJzw['WrKOK'](g, sum);\n            }\n            return;\n        }\n        arrB['forEach'](v => {\n            if (aGPJzw['Cyrwh'](sum, nww[v][0x2])) {\n                var a = arrA['concat'](v);\n                var b = arrB['slice']()['filter'](n => v != n);\n                var c = sum + nww[v][0x1];\n                var d = aGPJzw['sRNZH'](g, aGPJzw['NYRhi'](nww[v][0x1], aGPJzw['qnjLL'](arrA['length'], 0x1)));\n                aGPJzw['KMDVU'](bomb, a, b, c, d);\n            }\n        });\n    };\n    var bombArr = [];\n    for (var i = 0x0; i < n; i++)\n        bombArr['push'](i);\n    bomb([], bombArr, 0x0, 0x0);\n    console['log'](ans['map'](v => nww[v][0x0])['reverse']()['join']('\\x0a'));\n}", "test_cases": [["4\nsandwich 80 120\napple 50 200\ncheese 20 40\ncake 100 100\n9\nonigiri 80 300\nonigiri 80 300\nanpan 70 280\nmikan 50 80\nkanzume 100 500\nchocolate 50 350\ncookie 30 80\npurin 40 400\ncracker 40 160\n0", "apple\ncake\nsandwich\ncheese\nkanzume\npurin\nchocolate\nonigiri\nonigiri\nanpan\nmikan\ncracker\ncookie"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var nww = [];\n   for (var i = 0; i < n; i++) nww[i] = arr.shift().split(\" \");\n   nww = nww.map(v => [v[0], v[1] - 0, v[2] - 0]);\n   var max = 0;\n   var ans = [];\n   var bomb = function (arrA, arrB, sum, g) {\n      if (arrB.length == 0) {\n         if (max < g / sum) {\n            ans = arrA;\n            max = g / sum;\n         }\n         return;\n      }\n      arrB.forEach(v => {\n         if (sum <= nww[v][2]) {\n            var a = arrA.concat(v);\n            var b = arrB.slice().filter(n => v != n);\n            var c = sum + nww[v][1];\n            var d = g + nww[v][1] * (arrA.length + 1);\n            bomb(a, b, c, d);\n         }\n      });\n   };\n   var bombArr = [];\n   for (var i = 0; i < n; i++) bombArr.push(i);\n   bomb([], bombArr, 0, 0);\n   console.log(ans.map(v => nww[v][0]).reverse().join(\"\\n\"));\n}\n\n", "language": "JavaScript"}
{"filename": "p02396_1", "type": "JavaScript", "obfuscated": "var input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var ONiCdx = {\n        'iFkWx': function (x, y) {\n            return x < y;\n        },\n        'XxeSR': function (callee, param1) {\n            return callee(param1);\n        },\n        'SdxXY': function (x, y) {\n            return x == y;\n        },\n        'ceqHw': function (x, y) {\n            return x + y;\n        },\n        'dDUDg': 'Case\\x20',\n        'tTTzo': function (x, y) {\n            return x + y;\n        }\n    };\n    var nums = input['split']('\\x0a');\n    var output = '';\n    for (var i = 0x0; ONiCdx['iFkWx'](i, nums['length']); i++) {\n        nums[i] = ONiCdx['XxeSR'](Number, nums[i]);\n        if (ONiCdx['SdxXY'](nums[i], 0x0)) {\n            break;\n        }\n        output += ONiCdx['ceqHw'](ONiCdx['ceqHw'](ONiCdx['ceqHw'](ONiCdx['dDUDg'], ONiCdx['tTTzo'](i, 0x1)) + ':\\x20', nums[i]), '\\x0a');\n    }\n    console['log'](output);\n});", "test_cases": [["3\n5\n11\n7\n8\n19\n0", "Case 1: 3\nCase 2: 5\nCase 3: 11\nCase 4: 7\nCase 5: 8\nCase 6: 19"]], "original": "var input = \"\";\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (chunk) {\n    input += chunk;\n});\nprocess.stdin.on('end', function (){\n    var nums = input.split(\"\\n\");\n    var output = \"\";\n    \n    for(var i = 0; i < nums.length; i ++){\n        nums[i] = Number(nums[i]);\n        if(nums[i] == 0){\n            break;\n        }\n        output += \"Case \" + (i + 1) + \": \" + nums[i] + \"\\n\"; \n    }\n    console.log(output);\n});", "language": "JavaScript"}
{"filename": "p02420_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var uLQRye = {\n        'tUZwG': '0|1|3|2|4',\n        'zxpdp': function (x, y) {\n            return x + y;\n        }\n    };\n    var KCvKBK = uLQRye['tUZwG']['split']('|');\n    var uPlfpp = 0x0;\n    while (!![]) {\n        switch (KCvKBK[uPlfpp++]) {\n        case '0':\n            var qCccdU = {\n                'FanyV': function (x, y) {\n                    return uLQRye['zxpdp'](x, y);\n                }\n            };\n            continue;\n        case '1':\n            var lines = stdin['toString']();\n            continue;\n        case '2':\n            var result = function (data) {\n                return data['map'](function (v) {\n                    var Bwtuct = {\n                        'QAIbE': function (x, y) {\n                            return qCccdU['FanyV'](x, y);\n                        }\n                    };\n                    return v['slice'](-v[0x1])['map'](Number)['reduce'](function (str, num) {\n                        return Bwtuct['QAIbE'](str['slice'](num), str['slice'](0x0, num));\n                    }, v[0x0]);\n                })['join']('\\x0a');\n            }(lines['match'](re)['map'](function (v) {\n                return v['trim']()['split']('\\x0a');\n            }));\n            continue;\n        case '3':\n            var re = /[A-Za-z]+\\n([1-9][0-9]*\\n)+/g;\n            continue;\n        case '4':\n            console['log'](result);\n            continue;\n        }\n        break;\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["aabc\n3\n1\n2\n1\nvwxyz\n2\n3\n4\n-", "aabc\nxyzvw"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString();\n  var re = /[A-Za-z]+\\n([1-9][0-9]*\\n)+/g;\n  var result = (function(data) {\n    return data\n      .map(function(v) {\n        return v.slice(- v[1])\n          .map(Number)\n          .reduce(function(str,num) {\n            return str.slice(num) + str.slice(0,num);\n          },v[0]);\n      }).join('\\n');\n  }(lines.match(re).map(function(v){return v.trim().split('\\n');})\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02554_1", "type": "JavaScript", "obfuscated": "const mod = 0xa ** 0x9 + 0x7;\nfunction pow(x, y) {\n    var QJpkGZ = {\n        'YNFoL': function (x, y) {\n            return x <= y;\n        },\n        'czTDv': function (x, y) {\n            return x % y;\n        },\n        'iewMf': function (x, y) {\n            return x * y;\n        }\n    };\n    var r = 0x1;\n    for (var i = 0x1; QJpkGZ['YNFoL'](i, y); i++) {\n        r = QJpkGZ['czTDv'](QJpkGZ['iewMf'](r, x), mod);\n    }\n    return r;\n}\n;\nfunction Main(input) {\n    var YfEWru = {\n        'ccjcz': function (x, y) {\n            return x + y;\n        },\n        'VpayY': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'mCuVN': function (x, y) {\n            return x * y;\n        },\n        'RxFSz': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'XziFZ': function (x, y) {\n            return x % y;\n        },\n        'uROVz': function (x, y) {\n            return x % y;\n        }\n    };\n    const [N] = input['trim']()['split']('\\x20')['map'](x => parseInt(x));\n    var count = YfEWru['ccjcz'](YfEWru['VpayY'](pow, 0xa, N) - YfEWru['mCuVN'](YfEWru['VpayY'](pow, 0x9, N), 0x2), YfEWru['RxFSz'](pow, 0x8, N));\n    count = YfEWru['XziFZ'](count, mod);\n    count = YfEWru['uROVz'](YfEWru['ccjcz'](count, mod), mod);\n    console['log'](count);\n}\n;\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2", "2"], ["1", "0"], ["869121", "2511445"]], "original": "const mod = 10**9 +7;\n\nfunction pow (x,y){\n    var r = 1;\n    for (var i=1; i<=y; i++){\n        r = (r * x) % mod;\n    }\n    return r;\n};\n\n\nfunction Main (input){\n    const [N] = input.trim().split(' ').map(x => parseInt(x));\n    var count = pow(10,N)-(pow(9,N)*2)+pow(8,N);\n    count = count % mod;\n    count = (count + mod) % mod;\n    console.log(count)\n};\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02664_1", "type": "JavaScript", "obfuscated": "function Main(str) {\n    const yQBCYI = {\n        'vhnyt': function (x, y) {\n            return x - y;\n        },\n        'tdmEA': function (x, y) {\n            return x - y;\n        },\n        'WEySO': function (x, y) {\n            return x + y;\n        },\n        'ISTZG': function (x, y) {\n            return x + y;\n        }\n    };\n    let newString = '';\n    for (let i = 0x0; i < str['length']; i++) {\n        if (str[i] === '?' && (str[yQBCYI['vhnyt'](i, 0x1)] && str[yQBCYI['tdmEA'](i, 0x1)] === 'P' || str[yQBCYI['WEySO'](i, 0x1)] && str[yQBCYI['WEySO'](i, 0x1)] === 'P')) {\n            newString = yQBCYI['WEySO'](newString, 'D');\n        } else if (str[i] == '?') {\n            newString = yQBCYI['WEySO'](newString, 'P');\n        } else {\n            newString = yQBCYI['ISTZG'](newString, str[i]);\n        }\n    }\n    console['log'](newString);\n}\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nMain(input);", "test_cases": [["PD?D??P", "PDPDPDP"], ["P?P?", "PDPD"]], "original": "function Main(str) {\n  \tlet newString = '';\n\tfor(let i=0;i<str.length;i++) {\n    \tif(str[i] === '?' && (str[i-1] && str[i-1] === 'P' || str[i+1] && str[i+1] === 'P')) {\n        \tnewString = newString + 'D';\n        } else if(str[i] == '?') {\n        \tnewString = newString + 'P';\n        } else {\n        \tnewString = newString + str[i];\n        }\n    }\n  \n  \tconsole.log(newString);\n  \t\n}\n\nlet input = require('fs').readFileSync('/dev/stdin', 'utf8');\nMain(input);\n", "language": "JavaScript"}
{"filename": "p02726_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const zmgqlo = {\n        'GhKqx': function (x, y) {\n            return x - y;\n        },\n        'RBhKA': function (x, y) {\n            return x + y;\n        },\n        'QkLTM': function (x, y) {\n            return x - y;\n        },\n        'wioUY': function (x, y) {\n            return x < y;\n        },\n        'Tpmsm': function (x, y) {\n            return x < y;\n        },\n        'TvfpQ': function (x, y) {\n            return x + y;\n        },\n        'lcyFn': function (x, y) {\n            return x <= y;\n        },\n        'BDkMN': function (x, y) {\n            return x == y;\n        },\n        'UrqFz': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    function dist(a, b) {\n        return Math['min'](zmgqlo['GhKqx'](b, a), zmgqlo['RBhKA'](zmgqlo['RBhKA'](Math['abs'](zmgqlo['QkLTM'](x, a)), Math['abs'](zmgqlo['QkLTM'](y, b))), 0x1));\n    }\n    const inp = input['split']('\\x20');\n    const n = inp[0x0];\n    const x = inp[0x1];\n    const y = inp[0x2];\n    for (var i = 0x1; zmgqlo['wioUY'](i, n); i++) {\n        var cnt = 0x0;\n        for (var a = 0x1; zmgqlo['Tpmsm'](a, n); a++)\n            for (var b = zmgqlo['TvfpQ'](a, 0x1); zmgqlo['lcyFn'](b, n); b++)\n                if (zmgqlo['BDkMN'](zmgqlo['UrqFz'](dist, a, b), i))\n                    cnt++;\n        console['log'](cnt);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2 4", "5\n4\n1\n0"], ["3 1 3", "3\n0"], ["7 3 7", "7\n8\n4\n2\n0\n0"], ["10 4 8", "10\n12\n10\n8\n4\n1\n0\n0\n0"]], "original": "function main(input) {\n  function dist(a, b) {\n\t\treturn Math.min(b-a, Math.abs(x-a)+Math.abs(y-b)+1);\n\t}\n\t\n  const inp = input.split(' ');\n\tconst n = inp[0];\n\tconst x = inp[1];\n\tconst y = inp[2];\n  \n  for(var i=1;i<n; i++) {\n    var cnt = 0;\n    \n    for(var a=1; a<n; a++)\n      for(var b=a+1; b<=n; b++)\n        if(dist(a,b) == i)\n          cnt++;\n    \n    console.log(cnt);\n  }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03209_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var GfzMFs = {\n        'WbJqw': '3|0|4|1|9|15|14|12|10|8|7|13|2|6|11|5',\n        'OfTbo': function (callee, param1) {\n            return callee(param1);\n        },\n        'sdGzX': function (x, y) {\n            return x % y;\n        },\n        'MAqjE': function (x, y) {\n            return x - y;\n        },\n        'klIQK': function (x, y) {\n            return x > y;\n        },\n        'gWiDL': function (x, y) {\n            return x / y;\n        },\n        'sOOKU': function (x, y) {\n            return x - y;\n        },\n        'RUFLe': function (x, y) {\n            return x + y;\n        },\n        'bUsVQ': function (x, y) {\n            return x - y;\n        },\n        'FAhpo': function (x, y) {\n            return x - y;\n        },\n        'MXaJx': function (x, y) {\n            return x - y;\n        },\n        'acYft': function (x, y) {\n            return x <= y;\n        },\n        'xDMpO': function (x, y) {\n            return x + y;\n        },\n        'pEGKg': function (x, y) {\n            return x * y;\n        },\n        'xjiGn': function (x, y) {\n            return x + y;\n        },\n        'rcwTw': function (x, y) {\n            return x - y;\n        },\n        'WKrqW': function (x, y) {\n            return x == y;\n        }\n    };\n    var lMhEMq = GfzMFs['WbJqw']['split']('|');\n    var sYmWrH = 0x0;\n    while (!![]) {\n        switch (lMhEMq[sYmWrH++]) {\n        case '0':\n            var N = GfzMFs['OfTbo'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '1':\n            bans = new Array(0x32);\n            continue;\n        case '2':\n            if (GfzMFs['sdGzX'](X, 0x2) == 0x0) {\n                X = GfzMFs['MAqjE'](all[N], X);\n                flag = 0x1;\n            }\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            var X = parseInt(input[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '5':\n            console['log']('%s', ans);\n            continue;\n        case '6':\n            while (GfzMFs['klIQK'](X, 0x0)) {\n                if (GfzMFs['klIQK'](X, GfzMFs['gWiDL'](full - 0x1, 0x2))) {\n                    X = GfzMFs['MAqjE'](GfzMFs['sOOKU'](X, GfzMFs['gWiDL'](full - 0x1, 0x2)), 0x1);\n                    ans = GfzMFs['RUFLe'](ans, GfzMFs['gWiDL'](GfzMFs['sOOKU'](bs, 0x1), 0x2)) + 0x1;\n                    full = GfzMFs['gWiDL'](GfzMFs['bUsVQ'](full, 0x1), 0x2) - 0x1;\n                    bs = GfzMFs['FAhpo'](bs, 0x1) / 0x2;\n                } else {\n                    X = X - 0x1;\n                    full = GfzMFs['FAhpo'](GfzMFs['MAqjE'](full, 0x1) / 0x2, 0x1);\n                    bs = GfzMFs['MXaJx'](bs, 0x1) / 0x2;\n                }\n            }\n            continue;\n        case '7':\n            var bs = bans[N];\n            continue;\n        case '8':\n            var full = all[N];\n            continue;\n        case '9':\n            all = new Array(0x32);\n            continue;\n        case '10':\n            for (i = 0x1; GfzMFs['acYft'](i, 0x32); i++) {\n                bans[i] = GfzMFs['xDMpO'](GfzMFs['pEGKg'](bans[i - 0x1], 0x2), 0x1);\n                all[i] = GfzMFs['xjiGn'](GfzMFs['pEGKg'](all[GfzMFs['rcwTw'](i, 0x1)], 0x2), 0x3);\n            }\n            continue;\n        case '11':\n            if (GfzMFs['WKrqW'](flag, 0x1)) {\n                ans = bans[N] - ans;\n            }\n            continue;\n        case '12':\n            var ans = 0x0;\n            continue;\n        case '13':\n            var flag = 0x0;\n            continue;\n        case '14':\n            all[0x0] = 0x1;\n            continue;\n        case '15':\n            bans[0x0] = 0x1;\n            continue;\n        }\n        break;\n    }\n}\nfunction debug() {\n    var axTWjN = {\n        'IvYHO': 'input',\n        'ynkFw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var input = document['getElementById'](axTWjN['IvYHO'])['value'];\n    axTWjN['ynkFw'](Main, input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 7", "4"], ["1 1", "0"], ["50 4321098765432109", "2160549382716056"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0].split(\" \")[0]);\n  var X = parseInt(input[0].split(\" \")[1]);\n  bans=new Array(50);\n  all=new Array(50);\n  bans[0]=1;\n  all[0]=1;\n  var ans = 0;\n  for(i=1;i<=50;i++){\n    bans[i]=bans[i-1]*2+1;\n    all[i]=all[i-1]*2+3;\n  }\n  var full=all[N];\n  var bs=bans[N];\n  var flag=0;\n  if(X%2==0){\n    X=all[N]-X;\n    flag=1;\n  }\n  while(X>0){\n\n    if(X>(full-1)/2){\n      X=X-(full-1)/2-1;\n      ans=ans+(bs-1)/2+1;\n      full=(full-1)/2-1;\n      bs=(bs-1)/2\n    }else{\n      X=X-1;\n      full=(full-1)/2-1;\n      bs=(bs-1)/2\n    }\n  }\n  if(flag==1){\n    ans=bans[N]-ans;\n  }\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03227_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const MrWkTw = {\n        'JVQps': function (x, y) {\n            return x <= y;\n        }\n    };\n    const S = input['split']('\\x0a')[0x0];\n    if (MrWkTw['JVQps'](S['length'], 0x2)) {\n        console['log'](S);\n    } else {\n        console['log'](S['split']('')['reverse']()['join'](''));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abc", "cba"], ["ac", "ac"]], "original": "'use strict';\n\nfunction Main(input) {\n    const S = input.split('\\n')[0];\n    if (S.length <= 2) {\n        console.log(S);\n    } else {\n        console.log(S.split(\"\").reverse().join(\"\"));\n    }\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03435_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const JguDsB = {\n        'GUnhC': function (x, y) {\n            return x - y;\n        },\n        'utJOS': function (x, y) {\n            return x - y;\n        },\n        'nhjvx': function (x, y) {\n            return x <= y;\n        },\n        'qVrnq': function (x, y) {\n            return x + y;\n        },\n        'GgJSV': function (x, y) {\n            return x !== y;\n        },\n        'WCCnz': function (x, y) {\n            return x !== y;\n        },\n        'wvHLu': function (x, y) {\n            return x !== y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const c = arg['map'](n => n['split']('\\x20')['map'](l => parseInt(l)));\n    for (let a1 = 0x0; a1 <= 0x64; a1++) {\n        const b1 = JguDsB['GUnhC'](c[0x0][0x0], a1);\n        const b2 = JguDsB['GUnhC'](c[0x1][0x0], a1);\n        const b3 = JguDsB['utJOS'](c[0x2][0x0], a1);\n        for (let a2 = 0x0; JguDsB['nhjvx'](a2, 0x64); a2++) {\n            if (JguDsB['qVrnq'](a2, b1) !== c[0x0][0x1])\n                continue;\n            if (a2 + b2 !== c[0x1][0x1])\n                continue;\n            if (JguDsB['GgJSV'](JguDsB['qVrnq'](a2, b3), c[0x2][0x1]))\n                continue;\n            for (let a3 = 0x0; JguDsB['nhjvx'](a3, 0x64); a3++) {\n                if (a3 + b1 !== c[0x0][0x2])\n                    continue;\n                if (JguDsB['WCCnz'](JguDsB['qVrnq'](a3, b2), c[0x1][0x2]))\n                    continue;\n                if (JguDsB['wvHLu'](JguDsB['qVrnq'](a3, b3), c[0x2][0x2]))\n                    continue;\n                console['log']('Yes');\n                return;\n            }\n        }\n    }\n    console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 0 1\n2 1 2\n1 0 1", "Yes"], ["2 2 2\n2 1 2\n2 2 2", "No"], ["0 8 8\n0 8 8\n0 8 8", "Yes"], ["1 8 6\n2 9 7\n0 7 7", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const c = arg.map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    // a1の仮定100通りを試す\n    for(let a1=0; a1<=100; a1++) {\n        // a1が決まればb1,b2,b3も決まる\n        const b1 = c[0][0] - a1;\n        const b2 = c[1][0] - a1;\n        const b3 = c[2][0] - a1;\n        \n        // そうすると、他のaの値も全て確定するので正しいか検証する\n        for(let a2=0; a2<=100; a2++) {\n            if(a2 + b1 !== c[0][1]) continue;\n            if(a2 + b2 !== c[1][1]) continue;\n            if(a2 + b3 !== c[2][1]) continue;\n\n            for(let a3=0; a3<=100; a3++) {\n                if(a3 + b1 !== c[0][2]) continue;\n                if(a3 + b2 !== c[1][2]) continue;\n                if(a3 + b3 !== c[2][2]) continue;\n                \n                console.log(\"Yes\");\n                return;\n            }\n        }\n    }\n    \n    console.log(\"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03487_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar result = 0x0;\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var WRWUQu = {\n        'IrENR': function (callee, param1) {\n            return callee(param1);\n        },\n        'Njkfw': function (x, y) {\n            return x !== y;\n        },\n        'BVPPK': function (x, y) {\n            return x - y;\n        },\n        'wAxQK': function (x, y) {\n            return x + y;\n        },\n        'RHvzT': function (x, y) {\n            return x < y;\n        },\n        'pvxJz': function (x, y) {\n            return x === y;\n        }\n    };\n    var N = WRWUQu['IrENR'](Number, lines[0x0]);\n    var a = lines[0x1]['split']('\\x20')['map'](value => Number(value));\n    a['sort']((a, b) => a - b);\n    var counter = WRWUQu['IrENR'](Array, N)['fill'](0x0);\n    var j = 0x0;\n    counter[0x0] = [\n        a[0x0],\n        0x1\n    ];\n    for (var i = 0x1; i < N; i++) {\n        if (WRWUQu['Njkfw'](a[i], a[WRWUQu['BVPPK'](i, 0x1)])) {\n            j++;\n            counter[j] = [\n                a[i],\n                0x1\n            ];\n        } else {\n            var cnt = WRWUQu['wAxQK'](counter[j][0x1], 0x1);\n            counter[j] = [\n                a[i],\n                cnt\n            ];\n        }\n    }\n    for (var i = 0x0; WRWUQu['RHvzT'](i, counter['length']); i++) {\n        if (WRWUQu['pvxJz'](counter[i][0x0], counter[i][0x1])) {\n            continue;\n        } else {\n            if (counter[i] === 0x0) {\n                continue;\n            } else {\n                result += Math['min'](counter[i][0x1], Math['abs'](WRWUQu['BVPPK'](counter[i][0x0], counter[i][0x1])));\n            }\n        }\n    }\n    console['log'](result);\n});", "test_cases": [["4\n3 3 3 3", "1"], ["5\n2 4 1 4 2", "2"], ["6\n1 2 2 3 3 3", "0"], ["1\n1000000000", "1"], ["8\n2 7 1 8 2 8 1 8", "5"]], "original": "var lines = [];\nvar result = 0;\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var a = lines[1].split(\" \").map(value => Number(value));\n\n    a.sort((a, b) => a - b);\n\n    var counter = Array(N).fill(0);\n    var j = 0;\n\n    counter[0] = [a[0], 1];\n    for (var i = 1; i < N; i++) {\n        if (a[i] !== a[i - 1]) { j++; counter[j] = [a[i], 1] }\n        else { var cnt = counter[j][1] + 1; counter[j] = [a[i], cnt]; }\n    }\n\n    for (var i = 0; i < counter.length; i++) {\n\n        if (counter[i][0] === counter[i][1]) { continue; }\n        else {\n            if (counter[i] === 0) { continue; }\n            else {\n                result += Math.min(counter[i][1], Math.abs((counter[i][0] - counter[i][1])));\n            }\n        }\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p04031_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var evhuxT = {\n        'tpEBs': '9|8|3|5|0|7|6|4|2|1',\n        'IDTxO': function (callee, param1) {\n            return callee(param1);\n        },\n        'KthME': function (x, y) {\n            return x < y;\n        },\n        'ajwCv': function (x, y) {\n            return x - y;\n        },\n        'woWJM': function (x, y) {\n            return x / y;\n        }\n    };\n    var ZnYeky = evhuxT['tpEBs']['split']('|');\n    var TxcXcp = 0x0;\n    while (!![]) {\n        switch (ZnYeky[TxcXcp++]) {\n        case '0':\n            var sum = 0x0;\n            continue;\n        case '1':\n            evhuxT['IDTxO'](myout, output);\n            continue;\n        case '2':\n            for (var i = 0x0; evhuxT['KthME'](i, list['length']); i++) {\n                output += Math['pow'](evhuxT['ajwCv'](list[i], ave), 0x2);\n            }\n            continue;\n        case '3':\n            var list = input[0x1]['split']('\\x20')['map'](a => Number(a));\n            continue;\n        case '4':\n            ave = Math['round'](evhuxT['woWJM'](sum, N));\n            continue;\n        case '5':\n            var ave;\n            continue;\n        case '6':\n            for (var i = 0x0; i < list['length']; i++) {\n                sum += list[i];\n            }\n            continue;\n        case '7':\n            var output = 0x0;\n            continue;\n        case '8':\n            var N = evhuxT['IDTxO'](parseInt, input[0x0]);\n            continue;\n        case '9':\n            input = input['trim']()['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["2\n4 8", "8"], ["3\n1 1 3", "3"], ["3\n4 2 5", "5"], ["4\n-100 -100 -100 -100", "0"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\tinput = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var N = parseInt(input[0]);\n  var list = input[1].split(\" \").map((a)=>Number(a));\n  var ave;\n  var sum = 0;\n  var output = 0;\n  for(var i = 0; i < list.length; i++){\n    sum += list[i];\n  }\n  ave = Math.round(sum / N);\n  for(var i = 0; i < list.length; i++){\n    output += Math.pow((list[i] - ave),2);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00728_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (line) {\n    var HhKuXN = {\n        'XexaG': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    HhKuXN['XexaG'](before, line);\n});\nvar log = console['log'];\nfunction before(line) {\n    var lines = line['split']('\\x0a');\n    lines = lines['filter'](function (e) {\n        return e !== '';\n    });\n    main(lines);\n}\nfunction main(lines) {\n    var LmUtEX = {\n        'SDSUt': function (callee, param1) {\n            return callee(param1);\n        },\n        'fejVw': function (x, y) {\n            return x + y;\n        },\n        'GoIPy': function (x, y) {\n            return x > y;\n        },\n        'rlyAp': '7|6|5|2|0|4|1|3|8',\n        'QNkat': function (x, y) {\n            return x / y;\n        }\n    };\n    var ls = lines['map'](function (e) {\n        return LmUtEX['SDSUt'](Number, e);\n    });\n    while (LmUtEX['GoIPy'](ls['length'], 0x1)) {\n        var wHCdAD = LmUtEX['rlyAp']['split']('|');\n        var JnlMpv = 0x0;\n        while (!![]) {\n            switch (wHCdAD[JnlMpv++]) {\n            case '0':\n                arr['splice'](mid, 0x1);\n                continue;\n            case '1':\n                arr['splice'](Mid, 0x1);\n                continue;\n            case '2':\n                var mid = arr['indexOf'](Math['min']['apply'](this, arr));\n                continue;\n            case '3':\n                var sum = arr['reduce'](function (p, c, i, a) {\n                    return LmUtEX['fejVw'](p, c);\n                });\n                continue;\n            case '4':\n                var Mid = arr['indexOf'](Math['max']['apply'](this, arr));\n                continue;\n            case '5':\n                ls = ls['slice'](tpl);\n                continue;\n            case '6':\n                var arr = ls['slice'](0x0, tpl);\n                continue;\n            case '7':\n                var tpl = ls['shift']();\n                continue;\n            case '8':\n                LmUtEX['SDSUt'](log, Math['round'](LmUtEX['QNkat'](sum, arr['length'])));\n                continue;\n            }\n            break;\n        }\n    }\n}", "test_cases": [["3\n1000\n342\n0\n5\n2\n2\n9\n11\n932\n5\n300\n1000\n0\n200\n400\n8\n353\n242\n402\n274\n283\n132\n402\n523\n0", "342\n7\n300\n326"]], "original": "\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data',function(line){\n\tbefore(line);\n});\n\nvar log = console.log;\nfunction before(line){\n\tvar lines = line.split(\"\\n\");\n\tlines = lines.filter(function(e){\n\t\treturn (e !== \"\");\n\t});\n\tmain(lines);\n}\n\n//-----------\nfunction main(lines){\n\tvar ls = lines.map(function(e){return Number(e);});\n\twhile(ls.length > 1){\n\t\tvar tpl = ls.shift();\n\t\tvar arr = ls.slice(0,tpl);\n\t\tls = ls.slice(tpl);\n\t\tvar mid = arr.indexOf(Math.min.apply(this,arr));\n\t\tarr.splice(mid,1);\n\t\tvar Mid = arr.indexOf(Math.max.apply(this,arr));\n\t\tarr.splice(Mid,1);\n\t\tvar sum = arr.reduce(function(p,c,i,a){return p+c;});\n\t\tlog(Math.round(sum/arr.length));\n\t}\n}", "language": "JavaScript"}
{"filename": "p02237_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')['readFileSync'](config['input'], 'ascii')['trim']()['split'](config['newline']);\nn = Number(line['shift']());\nadj = {};\nfor (i in line) {\n    ary = line[i]['split']('\\x20');\n    j = ary['shift']();\n    ary['shift']();\n    adj[j] = ary;\n}\nfor (i = 0x1; i <= n; i++) {\n    ary = [];\n    for (j = 0x1; j <= n; j++) {\n        if (adj[i]['indexOf'](String(j)) !== -0x1)\n            ary['push'](0x1);\n        else\n            ary['push'](0x0);\n    }\n    console['log'](ary['join']('\\x20'));\n}", "test_cases": [["4\n1 2 2 4\n2 1 4\n3 0\n4 1 3", "0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline);\nn = Number(line.shift());\nadj = {};\nfor (i in line) {\n  ary = line[i].split(' ');\n  j = ary.shift();\n  ary.shift();\n  adj[j] = ary;\n}\n\nfor (i = 1; i <= n; i++) {\n  ary = [];\n  for (j = 1; j <= n; j++) {\n    if (adj[i].indexOf(String(j)) !== -1) ary.push(1);\n    else ary.push(0);\n  }\n  console.log(ary.join(' '));\n}", "language": "JavaScript"}
{"filename": "p02239_1", "type": "JavaScript", "obfuscated": "function main(_stdin) {\n    const vocLws = {\n        'xNtMQ': function (x, y) {\n            return x + y;\n        },\n        'OGGNv': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HUCNi': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'ueAhC': function (x, y) {\n            return x === y;\n        }\n    };\n    const stdin = _stdin['split']('\\x0a');\n    const len = vocLws['OGGNv'](parseInt, stdin['shift'](), 0xa);\n    const data = stdin['filter']((e, i) => i < len)['map'](e => e['split']('\\x20')['map'](e => parseInt(e, 0xa)));\n    const dists = [\n        null,\n        0x0\n    ];\n    vocLws['HUCNi'](bfs, data[0x0], dists, data);\n    for (const node of data) {\n        if (vocLws['ueAhC'](dists[node[0x0]], undefined))\n            dists[node[0x0]] = -0x1;\n    }\n    dists['shift']();\n    dists['forEach']((e, i) => {\n        console['log'](vocLws['xNtMQ'](i, 0x1), e);\n    });\n}\nfunction bfs(node, dists, data) {\n    const zzLETr = {\n        'HdWBU': function (x, y) {\n            return x + y;\n        },\n        'RwMEQ': function (x, y) {\n            return x === y;\n        },\n        'LGOSt': function (x, y) {\n            return x > y;\n        },\n        'rKLfp': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const key = node[0x0];\n    const next = zzLETr['HdWBU'](dists[key], 0x1);\n    const children = node['slice'](0x2);\n    for (const child of children) {\n        if (zzLETr['RwMEQ'](dists[child], undefined) || zzLETr['LGOSt'](dists[child], next)) {\n            const nextNode = data['find'](e => e[0x0] === child);\n            dists[child] = next;\n            zzLETr['rKLfp'](bfs, nextNode, dists, data);\n        }\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 2 2 4\n2 1 4\n3 0\n4 1 3", "1 0\n2 1\n3 2\n4 1"]], "original": "function main(_stdin){\n    const stdin = _stdin.split('\\n');\n    const len = parseInt(stdin.shift(), 10);\n\n    const data = stdin.filter((e, i) => i < len).map(e => e.split(' ').map(e => parseInt(e, 10)));\n\n    const dists = [null, 0];\n\n    bfs(data[0], dists, data);\n\n    for(const node of data){\n        if(dists[node[0]] === undefined) dists[node[0]] = -1;\n    }\n    dists.shift();\n    dists.forEach((e, i) => {\n        console.log(i + 1,  e);\n    });\n}\n\nfunction bfs(node, dists, data){\n    const key = node[0];\n    const next = dists[key] + 1;\n    const children = node.slice(2);\n\n    for(const child of children){\n        if(dists[child] === undefined || dists[child] > next){\n            const nextNode = data.find(e => e[0] === child);\n            dists[child] = next;\n            bfs(nextNode, dists, data);\n        }\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n\n", "language": "JavaScript"}
{"filename": "p02314_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst list = input['trim']()['split']('\\x0a');\nlet [n, m] = list[0x0]['split']('\\x20');\nn = Number(n);\nm = Number(m);\nlet cm = list[0x1]['trim']()['split']('\\x20');\ncm = cm['map'](c => Number(c));\nconst dp = new Map();\nfor (let i = 0x0; i < m; i++) {\n    dp['set'](cm[i], 0x1);\n}\nconst max = n + 0x1;\nfor (let i = 0x0; i <= n; i++) {\n    if (dp['has'](i)) {\n        continue;\n    }\n    let min = max;\n    for (let j = 0x0; j < m; j++) {\n        const target = i - cm[j];\n        if (target < 0x0 || !dp['has'](target)) {\n            continue;\n        }\n        const count = dp['get'](target);\n        min = Math['min'](count, min);\n    }\n    if (min < max) {\n        dp['set'](i, min + 0x1);\n    }\n}\nconsole['log'](dp['get'](n));", "test_cases": [["55 4\n1 5 10 50", "2"], ["15 6\n1 2 7 8 12 50", "2"], ["65 6\n1 2 7 8 12 50", "3"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nconst list = input.trim().split('\\n');\nlet [ n, m ] = list[0].split(' ');\nn = Number(n);\nm = Number(m);\nlet cm = list[1].trim().split(' ');\ncm = cm.map(c => Number(c));\n\nconst dp = new Map();\nfor (let i = 0; i < m; i++) {\n  dp.set(cm[i], 1);\n}\nconst max = n + 1;\nfor (let i = 0; i <= n; i++) {\n  if (dp.has(i)) {\n    continue;\n  }\n\n  let min = max;\n  for (let j = 0; j < m; j++) {\n    const target = i - cm[j];\n    if (target < 0 || !dp.has(target)) {\n      continue;\n    }\n    const count = dp.get(target);\n    min = Math.min(count, min);\n  }\n  if (min < max) {\n    dp.set(i, min + 1);\n  }\n}\n\nconsole.log(dp.get(n));\n\n", "language": "JavaScript"}
{"filename": "p02409_1", "type": "JavaScript", "obfuscated": "function initOfficialHouse(bMax, fMax, rMax) {\n    var AMLoHY = {\n        'JgmRI': function (callee, param1) {\n            return callee(param1);\n        },\n        'gnGSR': function (x, y) {\n            return x < y;\n        },\n        'yNmFo': function (callee, param1) {\n            return callee(param1);\n        },\n        'XMaWS': function (x, y) {\n            return x < y;\n        },\n        'HGdjW': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var o = AMLoHY['JgmRI'](Array, bMax);\n    for (var b = 0x0; AMLoHY['gnGSR'](b, bMax); b++) {\n        o[b] = AMLoHY['yNmFo'](Array, fMax);\n        for (var f = 0x0; AMLoHY['XMaWS'](f, fMax); f++) {\n            o[b][f] = AMLoHY['HGdjW'](Array, rMax);\n            for (var r = 0x0; r < rMax; r++) {\n                o[b][f][r] = 0x0;\n            }\n        }\n    }\n    return o;\n}\nfunction toString(o) {\n    var DMwxMq = {\n        'bGmBl': function (x, y) {\n            return x + y;\n        },\n        'FAtPT': '\\x0a####################\\x0a'\n    };\n    return o['map'](function (b) {\n        return b['map'](function (f) {\n            return DMwxMq['bGmBl']('\\x20', f['join']('\\x20'));\n        })['join']('\\x0a');\n    })['join'](DMwxMq['FAtPT']);\n}\nconst chunk = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = chunk['trim']()['split']('\\x0a');\nlines['shift']();\nvar o = initOfficialHouse(0x4, 0x3, 0xa);\nlines['forEach'](function (line) {\n    var aHMinD = {\n        'sKVfo': function (x, y) {\n            return x - y;\n        },\n        'LADIC': function (x, y) {\n            return x - y;\n        }\n    };\n    var bfrv = line['split']('\\x20')['map'](Number);\n    var b = bfrv[0x0], f = bfrv[0x1], r = bfrv[0x2], v = bfrv[0x3];\n    o[aHMinD['sKVfo'](b, 0x1)][aHMinD['sKVfo'](f, 0x1)][aHMinD['LADIC'](r, 0x1)] += v;\n});\nconsole['log'](toString(o));", "test_cases": [["3\n1 1 3 8\n3 2 2 7\n4 3 8 1", "0 0 8 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 7 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n####################\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 1 0 0"]], "original": "function initOfficialHouse(bMax, fMax, rMax) {\n    var o = Array(bMax);\n    for(var b = 0; b < bMax; b++) {\n        o[b] = Array(fMax);\n        for(var f = 0; f < fMax; f++) {\n            o[b][f] = Array(rMax);\n            for(var r = 0; r < rMax; r++) {\n                o[b][f][r] = 0;\n            }\n        }\n    }\n    return o;\n}\nfunction toString(o){\n    return o.map(function(b){\n        return b.map(function(f){\n            return ' ' + f.join(' ');\n        }).join('\\n');\n    }).join('\\n####################\\n');\n}\n\nconst chunk = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = chunk.trim().split('\\n');\nlines.shift(); // n\nvar o = initOfficialHouse(4, 3, 10);\nlines.forEach(function (line) {\n    var bfrv = line.split(' ').map(Number);\n    var b = bfrv[0], f = bfrv[1], r = bfrv[2], v = bfrv[3];\n    o[b - 1][f - 1][r - 1] += v;\n});\n\nconsole.log(toString(o));", "language": "JavaScript"}
{"filename": "p02596_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var DCVqJr = {\n        'Jbbkl': function (x, y) {\n            return x - y;\n        },\n        'lgrqA': function (x, y) {\n            return x <= y;\n        },\n        'iaaFD': function (x, y) {\n            return x === y;\n        }\n    };\n    const N = DCVqJr['Jbbkl'](lines[0x0], 0x0);\n    let tmp = 0x0;\n    for (let i = 0x1; DCVqJr['lgrqA'](i, 0xf4240); i++) {\n        tmp *= 0xa;\n        tmp += 0x7;\n        tmp %= N;\n        if (DCVqJr['iaaFD'](tmp, 0x0)) {\n            console['log'](i);\n            return;\n        }\n    }\n    console['log'](-0x1);\n});\nfunction check(ans) {\n    return !![];\n}", "test_cases": [["101", "4"], ["2", "-1"], ["999983", "999982"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const N = lines[0]-0;\n    let tmp = 0;\n    for(let i=1;i<=1000000;i++){\n        tmp *= 10;\n        tmp += 7;\n        tmp %= N;\n        if(tmp === 0){\n            console.log(i);\n            return;\n        }\n    }\n    console.log(-1);\n});\n\nfunction check(ans){\n    \n    return true;\n}\n", "language": "JavaScript"}
{"filename": "p02661_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['trim']()['split'](/ |\\n/), cid = 0x0;\nconsole['log'](main()['toString']());\nfunction main() {\n    const TPrLcp = {\n        'zCjma': function (callee, param1) {\n            return callee(param1);\n        },\n        'vDCLQ': function (x, y) {\n            return x == y;\n        },\n        'WJEDV': function (x, y) {\n            return x != y;\n        },\n        'wzdia': function (x, y) {\n            return x - y;\n        },\n        'uoLdh': function (x, y) {\n            return x / y;\n        },\n        'iAWil': function (x, y) {\n            return x - y;\n        },\n        'ypCtN': function (x, y) {\n            return x / y;\n        },\n        'WPNNJ': function (x, y) {\n            return x - y;\n        },\n        'Kcvkp': function (x, y) {\n            return x / y;\n        },\n        'NcHQH': function (x, y) {\n            return x + y;\n        },\n        'IuikB': function (x, y) {\n            return x - y;\n        },\n        'pPUKp': function (x, y) {\n            return x / y;\n        },\n        'lFshV': function (x, y) {\n            return x + y;\n        },\n        'HDbBB': function (x, y) {\n            return x - y;\n        }\n    };\n    let n = +cin['shift']();\n    let a = TPrLcp['zCjma'](Array, n);\n    let b = Array(n);\n    for (let i = 0x0; i < n; i++) {\n        a[i] = +cin['shift']();\n        b[i] = +cin['shift']();\n    }\n    a = a['sort']((x, y) => x - y);\n    b = b['sort']((x, y) => x - y);\n    let min, max;\n    if (TPrLcp['vDCLQ'](n % 0x2, 0x0)) {\n        if (TPrLcp['WJEDV'](a[TPrLcp['wzdia'](TPrLcp['uoLdh'](n, 0x2), 0x1)], a[n / 0x2]))\n            min = TPrLcp['iAWil'](a[TPrLcp['uoLdh'](n, 0x2)], TPrLcp['uoLdh'](0x1, 0x2));\n        else\n            min = a[TPrLcp['ypCtN'](0x2, n)];\n        if (b[TPrLcp['WPNNJ'](TPrLcp['Kcvkp'](n, 0x2), 0x1)] != b[n / 0x2])\n            max = TPrLcp['NcHQH'](b[TPrLcp['IuikB'](n / 0x2, 0x1)], TPrLcp['pPUKp'](0x1, 0x2));\n        else\n            max = b[TPrLcp['WPNNJ'](n / 0x2, 0x1)];\n        return (max - min) * 0x2 + 0x1;\n    } else {\n        min = a[TPrLcp['IuikB'](n, 0x1) / 0x2];\n        max = b[TPrLcp['wzdia'](n, 0x1) / 0x2];\n        return TPrLcp['lFshV'](TPrLcp['HDbBB'](max, min), 0x1);\n    }\n}", "test_cases": [["2\n1 2\n2 3", "3"], ["3\n100 100\n10 10000\n1 1000000000", "9991"]], "original": "\"use strict\";\nvar input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nvar cin = input.trim().split(/ |\\n/), cid = 0;\n\nconsole.log(main().toString());\n\n\nfunction main() {\n    let n = +cin.shift();\n    let a = Array(n);\n    let b = Array(n);\n    for (let i = 0; i < n; i++) {\n        a[i] = +cin.shift();\n        b[i] = +cin.shift();\n    }\n    a = a.sort((x, y) => x - y);\n    b = b.sort((x, y) => x - y);\n    let min, max;\n    if (n % 2 == 0) {\n        // 偶数の時 中央値は X(2/n-1)とX(2/n)の平均値\n        // 最小値は、それぞれの値が異なるとき、A(2/n)-1/2、同じならA(2/n)\n        if (a[n / 2 - 1] != a[n / 2]) min = a[n / 2] - 1 / 2;\n        else min = a[2 / n];\n        if (b[n / 2 - 1] != b[n / 2]) max = b[n / 2 - 1] + 1 / 2;\n        else max = b[n / 2 - 1];\n        return (max - min) * 2 + 1;\n    } else {\n        min = a[(n - 1) / 2];\n        max = b[(n - 1) / 2];\n        return (max - min) + 1;\n    }\n\n\n}\n", "language": "JavaScript"}
{"filename": "p02685_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nfunction pow(x, n) {\n    const YOHdPg = {\n        'CXBtC': function (x, y) {\n            return x > y;\n        },\n        'FBMUE': function (x, y) {\n            return x & y;\n        },\n        'NiHeI': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    let res = 0x1;\n    while (YOHdPg['CXBtC'](n, 0x0)) {\n        if (YOHdPg['FBMUE'](n, 0x1))\n            res = mul(res, x);\n        x = YOHdPg['NiHeI'](mul, x, x);\n        n >>= 0x1;\n    }\n    return res;\n}\nfunction inv(x) {\n    const bymIFs = {\n        'CnAOa': function (x, y) {\n            return x - y;\n        }\n    };\n    if (x == 0x1)\n        return 0x1;\n    return pow(x, bymIFs['CnAOa'](mod, 0x2));\n}\nfunction mul(a, b) {\n    const mZgefI = {\n        'ILTQC': function (x, y) {\n            return x % y;\n        },\n        'XfxWe': function (x, y) {\n            return x * y;\n        },\n        'QIliW': function (x, y) {\n            return x >> y;\n        }\n    };\n    return mZgefI['ILTQC'](mZgefI['XfxWe'](mZgefI['QIliW'](a, 0x10) * b % mod, 0x10000) + mZgefI['XfxWe'](a & 0xffff, b), mod);\n}\nconst mod = 0x3b800001;\n(input => {\n    const iykLLB = {\n        'GKiRe': function (x, y) {\n            return x <= y;\n        },\n        'gSyoP': function (x, y) {\n            return x * y;\n        },\n        'qoANJ': function (x, y) {\n            return x % y;\n        },\n        'crKLQ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HMcHV': function (callee, param1) {\n            return callee(param1);\n        },\n        'hOGXM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'yYLqP': function (x, y) {\n            return x - y;\n        },\n        'DYAqg': function (x, y) {\n            return x + y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    let [N, M, K] = lines[0x0]['split']('\\x20')['map'](Number);\n    let ans = 0x0;\n    let fa = 0x1;\n    let fa2 = 0x1;\n    for (let k = 0x0; iykLLB['GKiRe'](k, K); k++) {\n        fa = iykLLB['gSyoP'](fa, k || 0x1) % mod;\n        fa2 = iykLLB['qoANJ'](iykLLB['gSyoP'](fa2, k ? N - k : 0x1), mod);\n        let left = iykLLB['qoANJ'](iykLLB['crKLQ'](mul, fa2, iykLLB['HMcHV'](inv, fa)), mod);\n        ans += iykLLB['qoANJ'](iykLLB['gSyoP'](iykLLB['crKLQ'](mul, left, iykLLB['hOGXM'](pow, iykLLB['yYLqP'](M, 0x1), iykLLB['yYLqP'](N, iykLLB['DYAqg'](k, 0x1)))), M), mod);\n    }\n    console['log'](iykLLB['qoANJ'](ans, mod));\n})(input);", "test_cases": [["3 2 1", "6"], ["100 100 0", "73074801"], ["60522 114575 7559", "479519525"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nfunction pow (x ,n) {\n    let res = 1\n    while (n > 0) {\n        if (n & 1) res = mul(res, x)\n        x = mul(x, x)\n        n >>= 1\n    }\n    return res\n}\n\nfunction inv (x) {\n    if (x == 1) return 1;\n    return pow(x, mod - 2);\n}\n\nfunction mul (a, b) {\n    return ((a >> 16) * b % mod * 65536 + (a & 65535) * b) % mod\n}\n\nconst mod = 998244353\n\n;(input => {\n    const lines = input.split('\\n')\n    let [N, M, K] = lines[0].split(' ').map(Number)\n\n    let ans = 0\n    let fa = 1\n    let fa2 = 1\n    for (let k = 0; k <= K; k++) {\n        fa = fa * (k || 1) % mod\n        fa2 = fa2 * (k ? (N - k) : 1) % mod\n        let left = mul(fa2, inv(fa)) % mod\n        ans += mul(left, pow((M - 1), (N - (k + 1)))) * M % mod\n    }\n\n    console.log(ans % mod)\n \n})(input)\n", "language": "JavaScript"}
{"filename": "p02735_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nH = l['shift']() * 0x1;\nW = l['shift']() * 0x1;\nl = [];\nm = [];\nfor (i = 0x0; i < H; i++) {\n    l['push'](inp['shift']()['split'](''));\n    m[i] = [];\n    for (j = 0x0; j < W; j++) {\n        m[i][j] = 0x0;\n    }\n}\nif (l[0x0][0x0] == '#') {\n    m[0x0][0x0] = 0x1;\n}\nr = 0x0;\nfor (c = 0x1; c < W; c++) {\n    m[r][c] = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n}\nc = 0x0;\nfor (r = 0x1; r < H; r++) {\n    m[r][c] = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n}\nfor (i = 0x1; i < H; i++) {\n    r = i;\n    for (c = i; c < W; c++) {\n        s = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n        t = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n        m[r][c] = Math['min'](s, t);\n    }\n    c = i;\n    for (r = i; r < H; r++) {\n        s = l[r - 0x1][c] == l[r][c] ? m[r - 0x1][c] : m[r - 0x1][c] + 0x1;\n        t = l[r][c - 0x1] == l[r][c] ? m[r][c - 0x1] : m[r][c - 0x1] + 0x1;\n        m[r][c] = Math['min'](s, t);\n    }\n}\nconsole['log'](Math['ceil'](m[H - 0x1][W - 0x1] / 0x2));", "test_cases": [["3 3\n.##\n.#.\n##.", "1"], ["2 2\n#.\n.#", "2"], ["4 4\n..##\n#...\n###.\n###.", "0"], ["5 5\n.#.#.\n#.#.#\n.#.#.\n#.#.#\n.#.#.", "4"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\nH = l.shift() * 1\nW = l.shift() * 1 \nl = []\nm = []\nfor (i=0; i<H; i++) {\n  l.push(inp.shift().split(''))\n  m[i] = []\n  for (j=0; j<W; j++) {\n      m[i][j] = 0 \n  }\n}\nif (l[0][0] == \"#\") {\n    m[0][0] = 1\n}\nr = 0\nfor (c=1; c<W; c++) {\n  m[r][c] = l[r][c-1] == l[r][c] ? m[r][c - 1] : m[r][c - 1] + 1 \n}\nc = 0\nfor (r=1; r<H; r++) {\n  m[r][c] = l[r-1][c] == l[r][c] ? m[r - 1][c] : m[r - 1][c] + 1 \n}\nfor (i=1; i<H; i++) {\n    r = i\n    for (c=i; c<W; c++) {\n      s = l[r][c-1] == l[r][c] ? m[r][c - 1] : m[r][c - 1] + 1\n      t = l[r-1][c] == l[r][c] ? m[r-1][c] : m[r-1][c] + 1\n      m[r][c] = Math.min(s, t)\n    }\n    c = i\n    for (r=i; r<H; r++) {\n      s = l[r-1][c] == l[r][c] ? m[r - 1][c] : m[r - 1][c] + 1\n      t = l[r][c-1] == l[r][c] ? m[r][c- 1] : m[r][c-1] + 1\n      m[r][c] = Math.min(s, t)\n    }\n}\nconsole.log(Math.ceil(m[H-1][W-1] / 2))", "language": "JavaScript"}
{"filename": "p02795_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const Ynlewf = {\n        'LjJCA': function (callee, param1) {\n            return callee(param1);\n        },\n        'PYbOI': function (x, y) {\n            return x >= y;\n        },\n        'fqzZW': function (x, y) {\n            return x - y;\n        },\n        'anvxc': function (x, y) {\n            return x >= y;\n        },\n        'OzYaI': function (x, y) {\n            return x + y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    let H = Ynlewf['LjJCA'](Number, input[0x0]['split']('\\x20'));\n    let W = Ynlewf['LjJCA'](Number, input[0x1]['split']('\\x20'));\n    let N = Number(input[0x2]['split']('\\x20'));\n    let paintedRow = 0x0;\n    let paintedColumn = 0x0;\n    let paintedCell = 0x0;\n    while (0x1) {\n        if (Ynlewf['PYbOI'](W, H)) {\n            paintedCell += Ynlewf['fqzZW'](W, paintedColumn);\n            paintedRow++;\n        } else {\n            paintedCell += Ynlewf['fqzZW'](H, paintedRow);\n            paintedColumn++;\n        }\n        if (Ynlewf['anvxc'](paintedCell, N))\n            break;\n    }\n    console['log'](Ynlewf['OzYaI'](paintedColumn, paintedRow));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n7\n10", "2"], ["14\n12\n112", "8"], ["2\n100\n200", "2"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet H = Number(input[0].split(' '))\n\tlet W = Number(input[1].split(' '))\n\tlet N = Number(input[2].split(' '))\n\tlet paintedRow = 0\n\tlet paintedColumn = 0\n\tlet paintedCell = 0\n\twhile(1) {\n\t\tif(W >= H) {\n\t\t\tpaintedCell += W - paintedColumn\n\t\t\tpaintedRow++\n\t\t} else {\n\t\t\tpaintedCell += H - paintedRow\n\t\t\tpaintedColumn++\n\t\t}\n\t\tif(paintedCell >= N) break\n\t}\n\tconsole.log(paintedColumn + paintedRow)\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03005_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const kLMLSm = {\n        'NryNg': function (x, y) {\n            return x - y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = parseInt(arg[0x0]['split']('\\x20')[0x0]);\n    const K = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    console['log'](K === 0x1 ? 0x0 : kLMLSm['NryNg'](N, K));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2", "1"], ["3 1", "0"], ["8 5", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n\n    console.log(K === 1 ? 0 : N - K);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03082_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const fvyrIi = {\n        'WQTOC': function (x, y) {\n            return x != y;\n        },\n        'CHGZO': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'Pbvze': function (x, y) {\n            return x + y;\n        },\n        'RNWGY': function (x, y) {\n            return x - y;\n        },\n        'HQaqF': function (x, y) {\n            return x + y;\n        }\n    };\n    let lines = input['split']('\\x0a');\n    let NX = lines['shift']()['trim']()['split'](/\\s/)['map'](v => v - 0x0);\n    let n = NX[0x0], x = NX[0x1];\n    let S = lines['shift']()['trim']()['split'](/\\s/)['map'](v => v - 0x0);\n    const MOD = fvyrIi['Pbvze'](0x3b9aca00, 0x7), MAX_N = 0xd2, MAX_VAL = fvyrIi['HQaqF'](0x186a0, 0xa);\n    const add = (a, b) => (a + b) % MOD;\n    const mul = (a, b) => a * b % MOD;\n    let dp = new Array(MAX_N)['fill'](0x0)['map'](() => new Array(MAX_VAL)['fill'](-0x1));\n    const rec = (pos, rem) => {\n        if (pos == n)\n            return rem;\n        let ret = dp[pos][rem];\n        if (fvyrIi['WQTOC'](ret, -0x1))\n            return ret;\n        ret = 0x0;\n        dp[pos][rem] = fvyrIi['CHGZO'](add, ret, fvyrIi['CHGZO'](rec, fvyrIi['Pbvze'](pos, 0x1), rem % S[pos]));\n        dp[pos][rem] = add(dp[pos][rem], mul(fvyrIi['RNWGY'](fvyrIi['RNWGY'](n, pos), 0x1), rec(fvyrIi['Pbvze'](pos, 0x1), rem)));\n        return dp[pos][rem];\n    };\n    S['sort']((a, b) => b - a);\n    console['log'](fvyrIi['CHGZO'](rec, 0x0, x));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 19\n3 7", "3"], ["5 82\n22 11 6 5 13", "288"], ["10 100000\n50000 50001 50002 50003 50004 50005 50006 50007 50008 50009", "279669259"]], "original": "\"use strict\";\nfunction Main(input) {\n    let lines = input.split(\"\\n\");\n    let NX = lines.shift().trim().split(/\\s/).map((v) => v - 0);\n    let n = NX[0], x = NX[1];\n    let S = lines.shift().trim().split(/\\s/).map((v) => v - 0);\n    const MOD = 1e9 + 7, MAX_N = 210, MAX_VAL = 1e5 + 10;\n    const add = (a, b) => (a + b) % MOD;\n    const mul = (a, b) => (a * b) % MOD;\n    let dp = new Array(MAX_N).fill(0).map(() => new Array(MAX_VAL).fill(-1));\n    const rec = (pos, rem) => {\n        if (pos == n) return rem;\n        let ret = dp[pos][rem]\n        if (ret != -1) return ret;\n        ret = 0;\n        dp[pos][rem] = add(ret, rec(pos + 1, rem % S[pos]));\n        dp[pos][rem] = add(dp[pos][rem], mul(n - pos - 1, rec(pos + 1, rem)));\n        return dp[pos][rem];\n    }\n    S.sort((a, b) => b - a);\n    console.log(rec(0, x));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03192_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var rrxNGV = {\n        'rHgGB': '2|4|0|1|3',\n        'rKyro': function (x, y) {\n            return x < y;\n        },\n        'nlfOZ': function (x, y) {\n            return x == y;\n        }\n    };\n    var YUlQel = rrxNGV['rHgGB']['split']('|');\n    var eVBqTz = 0x0;\n    while (!![]) {\n        switch (YUlQel[eVBqTz++]) {\n        case '0':\n            var ans = 0x0;\n            continue;\n        case '1':\n            for (i = 0x0; rrxNGV['rKyro'](i, S['length']); i++) {\n                if (rrxNGV['nlfOZ'](S[i], '2')) {\n                    ans++;\n                }\n            }\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            console['log']('%s', ans);\n            continue;\n        case '4':\n            S = input[0x0]['split']('');\n            continue;\n        }\n        break;\n    }\n}\nfunction debug() {\n    var kxYYKb = {\n        'WgfJT': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var input = document['getElementById']('input')['value'];\n    kxYYKb['WgfJT'](Main, input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1222", "3"], ["3456", "0"], ["9592", "1"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  S= input[0].split(\"\");\n  var ans=0;\n  for(i=0;i<S.length;i++){\n    if(S[i]==\"2\"){\n      ans++;\n    }\n  }\n\n  console.log('%s', ans);\n}\n  \n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n  var input = document.getElementById(\"input\").value;\n  Main(input);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03387_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var LGlPUI = {\n        'rEqju': function (x, y) {\n            return x === y;\n        },\n        'BIWfB': function (x, y) {\n            return x % y;\n        },\n        'JqUNJ': function (x, y) {\n            return x - y;\n        },\n        'tsgOj': function (x, y) {\n            return x / y;\n        },\n        'PRjFZ': function (x, y) {\n            return x - y;\n        },\n        'UyKzq': '2|5|0|4|3|1',\n        'mHLxc': function (x, y) {\n            return x - y;\n        },\n        'UnuJd': function (x, y) {\n            return x - y;\n        }\n    };\n    var s = s['split']('\\x0a')[0x0]['split']('\\x20')['map'](e => parseInt(e, 0xa))['sort']((a, b) => b - a);\n    var cnt = 0x0;\n    if (LGlPUI['rEqju'](LGlPUI['BIWfB'](s[0x1] - s[0x2], 0x2), 0x0)) {\n        cnt += LGlPUI['JqUNJ'](s[0x0], s[0x1]);\n        s[0x2] += cnt;\n        cnt += LGlPUI['tsgOj'](LGlPUI['PRjFZ'](s[0x0], s[0x2]), 0x2);\n    } else {\n        var HiVVqI = LGlPUI['UyKzq']['split']('|');\n        var ZrUnBy = 0x0;\n        while (!![]) {\n            switch (HiVVqI[ZrUnBy++]) {\n            case '0':\n                cnt++;\n                continue;\n            case '1':\n                cnt += LGlPUI['tsgOj'](LGlPUI['mHLxc'](s[0x0], s[0x2]), 0x2);\n                continue;\n            case '2':\n                s[0x0]++;\n                continue;\n            case '3':\n                s[0x2] += LGlPUI['UnuJd'](s[0x0], s[0x1]);\n                continue;\n            case '4':\n                cnt += LGlPUI['PRjFZ'](s[0x0], s[0x1]);\n                continue;\n            case '5':\n                s[0x1]++;\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](cnt);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 5 4", "2"], ["2 6 3", "5"], ["31 41 5", "23"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\")[0].split(\" \").map(e => parseInt(e, 10)).sort((a, b) => b - a);\n  var cnt = 0;\n  if ((s[1] - s[2]) % 2 === 0) {\n    cnt += s[0] - s[1];\n    s[2] += cnt;\n    cnt += (s[0] - s[2]) / 2;\n  } else {\n    s[0]++;\n    s[1]++;\n    cnt++;\n    cnt += s[0] - s[1];\n    s[2] += s[0] - s[1];\n    cnt += (s[0] - s[2]) / 2;\n  }\n  console.log(cnt);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03739_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var QIcrnZ = {\n        'Onxal': '1|0|2|5|3|4',\n        'bYwWG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'xKCZC': function (x, y) {\n            return x < y;\n        },\n        'aLFSY': function (x, y) {\n            return x + y;\n        },\n        'AEWOn': function (x, y) {\n            return x === y;\n        },\n        'TDlSJ': function (x, y) {\n            return x - y;\n        },\n        'RiHak': function (x, y) {\n            return x > y;\n        },\n        'SOaRo': function (x, y) {\n            return x - y;\n        },\n        'bFBgn': function (x, y) {\n            return x >= y;\n        },\n        'zRxNY': function (x, y) {\n            return x <= y;\n        }\n    };\n    var ZOKDKG = QIcrnZ['Onxal']['split']('|');\n    var rntyHg = 0x0;\n    while (!![]) {\n        switch (ZOKDKG[rntyHg++]) {\n        case '0':\n            var n = QIcrnZ['bYwWG'](parseInt, s[0x0], 0xa);\n            continue;\n        case '1':\n            var s = s['split']('\\x0a');\n            continue;\n        case '2':\n            var a = s[0x1]['split']('\\x20')['map'](e => parseInt(e, 0xa));\n            continue;\n        case '3':\n            for (var i = 0x0; QIcrnZ['xKCZC'](i, n); i++) {\n                acc += a[i];\n                if (i === 0x0) {\n                    if (acc === 0x0) {\n                        if (a[QIcrnZ['aLFSY'](i, 0x1)] >= 0x0) {\n                            acc -= a[QIcrnZ['aLFSY'](i, 0x1)] - 0x1;\n                            if (QIcrnZ['AEWOn'](acc, 0x0))\n                                acc--;\n                            cnt += Math['abs'](acc);\n                        } else {\n                            acc += QIcrnZ['TDlSJ'](Math['abs'](a[i + 0x1]), 0x1);\n                            if (QIcrnZ['AEWOn'](acc, 0x0))\n                                acc++;\n                            cnt += acc;\n                        }\n                    }\n                } else {\n                    if (QIcrnZ['RiHak'](arr[QIcrnZ['SOaRo'](i, 0x1)], 0x0)) {\n                        if (QIcrnZ['bFBgn'](acc, 0x0)) {\n                            cnt += QIcrnZ['aLFSY'](acc, 0x1);\n                            acc -= QIcrnZ['aLFSY'](acc, 0x1);\n                        }\n                    } else {\n                        if (QIcrnZ['zRxNY'](acc, 0x0)) {\n                            cnt += QIcrnZ['aLFSY'](Math['abs'](acc), 0x1);\n                            acc += QIcrnZ['aLFSY'](Math['abs'](acc), 0x1);\n                        }\n                    }\n                }\n                arr['push'](acc);\n            }\n            continue;\n        case '4':\n            console['log'](cnt);\n            continue;\n        case '5':\n            var acc = 0x0, cnt = 0x0, arr = [];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 -3 1 0", "4"], ["5\n3 -6 4 -5 7", "0"], ["6\n-1 4 3 2 -5 4", "8"]], "original": "function Main(s) {\n  var s = s.split(\"\\n\");\n  var n = parseInt(s[0], 10);\n  var a = s[1].split(\" \").map(e => parseInt(e, 10));\n  var acc = 0, cnt = 0, arr = [];\n  for (var i = 0; i < n; i++) {\n    acc += a[i];\n    if (i === 0) {\n      if (acc === 0) {\n        if (a[i + 1] >= 0) {\n          acc -= (a[i + 1] - 1);\n          if (acc === 0) acc--;\n          cnt += Math.abs(acc);\n        } else {\n          acc += (Math.abs(a[i + 1]) - 1);\n          if (acc === 0) acc++;\n          cnt += acc;\n        }\n      }\n    } else {\n      if (arr[i - 1] > 0) {\n        if (acc >= 0) {\n          cnt += (acc + 1);\n          acc -= (acc + 1);\n        }\n      } else {\n        if (acc <= 0) {\n          cnt += (Math.abs(acc) + 1);\n          acc += (Math.abs(acc) + 1);\n        }\n      }\n    }\n    arr.push(acc);\n  }\n  console.log(cnt);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03964_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var KAEepH = {\n        'MvEkD': '5|3|1|6|4|9|2|8|7|0',\n        'AhzNg': function (callee, param1) {\n            return callee(param1);\n        },\n        'cfesK': function (x, y) {\n            return x < y;\n        },\n        'ZsRYc': function (callee, param1) {\n            return callee(param1);\n        },\n        'oufRo': function (x, y) {\n            return x + y;\n        },\n        'iEsLI': function (x, y) {\n            return x < y;\n        },\n        'oDsRs': function (x, y) {\n            return x >= y;\n        },\n        'qVRhp': function (x, y) {\n            return x * y;\n        },\n        'xQOKC': function (x, y) {\n            return x * y;\n        },\n        'SliHh': function (x, y) {\n            return x / y;\n        },\n        'nEnaq': function (x, y) {\n            return x * y;\n        },\n        'UzGQy': function (x, y) {\n            return x / y;\n        }\n    };\n    var cZvgtc = KAEepH['MvEkD']['split']('|');\n    var oSYGAV = 0x0;\n    while (!![]) {\n        switch (cZvgtc[oSYGAV++]) {\n        case '0':\n            console['log']('%s', ans);\n            continue;\n        case '1':\n            t = new Array(n)['fill'](0x0);\n            continue;\n        case '2':\n            var avote = a[0x0];\n            continue;\n        case '3':\n            var n = KAEepH['AhzNg'](parseInt, input[0x0]);\n            continue;\n        case '4':\n            for (i = 0x0; KAEepH['cfesK'](i, n); i++) {\n                t[i] = KAEepH['ZsRYc'](parseInt, input[i + 0x1]['split']('\\x20')[0x0]);\n                a[i] = parseInt(input[i + 0x1]['split']('\\x20')[0x1]);\n            }\n            continue;\n        case '5':\n            input = input['split']('\\x0a');\n            continue;\n        case '6':\n            a = new Array(n)['fill'](0x0);\n            continue;\n        case '7':\n            var ans = KAEepH['oufRo'](avote, tvote);\n            continue;\n        case '8':\n            for (i = 0x1; KAEepH['iEsLI'](i, n); i++) {\n                if (KAEepH['oDsRs'](KAEepH['qVRhp'](KAEepH['xQOKC'](Math['ceil'](KAEepH['SliHh'](tvote, t[i])), t[i]) / t[i], a[i]), avote)) {\n                    tvote = Math['ceil'](KAEepH['SliHh'](tvote, t[i])) * t[i];\n                    avote = KAEepH['nEnaq'](KAEepH['UzGQy'](KAEepH['xQOKC'](Math['ceil'](KAEepH['SliHh'](tvote, t[i])), t[i]), t[i]), a[i]);\n                } else {\n                    tvote = KAEepH['xQOKC'](KAEepH['SliHh'](KAEepH['qVRhp'](Math['ceil'](KAEepH['SliHh'](avote, a[i])), a[i]), a[i]), t[i]);\n                    avote = KAEepH['nEnaq'](Math['ceil'](KAEepH['UzGQy'](avote, a[i])), a[i]);\n                }\n            }\n            continue;\n        case '9':\n            var tvote = t[0x0];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2 3\n1 1\n3 2", "10"], ["4\n1 1\n1 1\n1 5\n1 100", "101"], ["5\n3 10\n48 17\n31 199\n231 23\n3 2", "6930"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  t = new Array(n).fill(0);\n  a = new Array(n).fill(0);\n  for(i=0;i<n;i++){\n      t[i]=parseInt(input[i+1].split(\" \")[0]);\n      a[i]=parseInt(input[i+1].split(\" \")[1]);\n  }\n  var tvote=t[0];\n  var avote=a[0];\n  \n  for(i=1;i<n;i++){\n      if(((Math.ceil(tvote/t[i])*t[i])/t[i])*a[i]>=avote){\n          tvote=Math.ceil(tvote/t[i])*t[i];\n          avote=((Math.ceil(tvote/t[i])*t[i])/t[i])*a[i];\n      }else{\n          tvote=((Math.ceil(avote/a[i])*a[i])/a[i])*t[i];\n          avote=Math.ceil(avote/a[i])*a[i];\n      }\n  }\n  var ans=avote+tvote;\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02240_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')['readFileSync'](config['input'], 'ascii')['trim']()['split'](config['newline'])['map'](function (line) {\n    return line['split']('\\x20')['map'](Number);\n});\nn = line[0x0][0x0];\nm = line[0x0][0x1];\nq = line[m + 0x1][0x0];\nadj = new Array(n);\nfor (i = 0x0; i < n; i++)\n    adj[i] = null;\nconn = line['slice'](0x1, m + 0x1);\nconn['sort'](function (a, b) {\n    var jmNHJZ = {\n        'DfbRE': function (x, y) {\n            return x === y;\n        },\n        'irZYd': function (x, y) {\n            return x - y;\n        },\n        'mylhX': function (x, y) {\n            return x - y;\n        }\n    };\n    if (jmNHJZ['DfbRE'](a[0x0], b[0x0]))\n        return jmNHJZ['irZYd'](a[0x1], b[0x1]);\n    return jmNHJZ['mylhX'](a[0x0], b[0x0]);\n});\nfor (i in conn) {\n    var XDxuau = '5|1|2|3|4|6|0'['split']('|');\n    var TKRjNt = 0x0;\n    while (!![]) {\n        switch (XDxuau[TKRjNt++]) {\n        case '0':\n            if (id1 !== min)\n                adj[id1] = min;\n            continue;\n        case '1':\n            min1 = id1 = conn[i][0x1];\n            continue;\n        case '2':\n            while (adj[min0] !== null)\n                min0 = adj[min0];\n            continue;\n        case '3':\n            while (adj[min1] !== null)\n                min1 = adj[min1];\n            continue;\n        case '4':\n            min = Math['min'](min0, min1);\n            continue;\n        case '5':\n            min0 = id0 = conn[i][0x0];\n            continue;\n        case '6':\n            if (id0 !== min)\n                adj[id0] = min;\n            continue;\n        }\n        break;\n    }\n}\nq = line['slice'](m + 0x2, m + 0x2 + q);\nfor (i in q) {\n    var kaibdn = '3|4|0|2|1'['split']('|');\n    var PICrtT = 0x0;\n    while (!![]) {\n        switch (kaibdn[PICrtT++]) {\n        case '0':\n            while (adj[min0] !== null)\n                min0 = adj[min0];\n            continue;\n        case '1':\n            console['log'](min0 === min1 ? 'yes' : 'no');\n            continue;\n        case '2':\n            while (adj[min1] !== null)\n                min1 = adj[min1];\n            continue;\n        case '3':\n            min0 = q[i][0x0];\n            continue;\n        case '4':\n            min1 = q[i][0x1];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3", "yes\nyes\nno"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline)\n  .map(function (line) { return line.split(' ').map(Number); });\n\nn = line[0][0];\nm = line[0][1];\nq = line[m+1][0];\n\nadj = new Array(n);\nfor (i = 0; i < n; i++) adj[i] = null;\n\nconn = line.slice(1, m+1);\nconn.sort(function (a, b) {\n  if (a[0] === b[0]) return a[1] - b[1];\n  return a[0] - b[0];\n});\n\nfor (i in conn) {\n  min0 = id0 = conn[i][0];\n  min1 = id1 = conn[i][1];\n  while (adj[min0] !== null) min0 = adj[min0];\n  while (adj[min1] !== null) min1 = adj[min1];\n  min = Math.min(min0, min1);\n  if (id0 !== min) adj[id0] = min;\n  if (id1 !== min) adj[id1] = min;\n}\n\nq = line.slice(m+2, m+2+q);\nfor (i in q) {\n  min0 = q[i][0];\n  min1 = q[i][1];\n  while (adj[min0] !== null) min0 = adj[min0];\n  while (adj[min1] !== null) min1 = adj[min1];\n  console.log((min0 === min1) ? 'yes' : 'no');\n}", "language": "JavaScript"}
{"filename": "p02272_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nlet input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    const PdHBix = {\n        'SgkUf': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    PdHBix['SgkUf'](main, input['split']('\\x0a'));\n});\nlet count = 0x0;\nfunction merge(A, left, mid, right) {\n    const Vanbid = {\n        'juQGB': function (x, y) {\n            return x - y;\n        },\n        'mxdKV': function (x, y) {\n            return x + y;\n        },\n        'VGKue': function (x, y) {\n            return x < y;\n        }\n    };\n    let n1 = Vanbid['juQGB'](mid, left);\n    let n2 = right - mid;\n    let L = [];\n    let R = [];\n    for (let i = 0x0; i < n1; i++)\n        L['push'](A[Vanbid['mxdKV'](left, i)]);\n    for (let i = 0x0; i < n2; i++)\n        R['push'](A[Vanbid['mxdKV'](mid, i)]);\n    L['push'](Number['MAX_SAFE_INTEGER']);\n    R['push'](Number['MAX_SAFE_INTEGER']);\n    let i = 0x0, j = 0x0;\n    for (let k = left; Vanbid['VGKue'](k, right); k++) {\n        if (Vanbid['VGKue'](L[i], R[j]))\n            A[k] = L[i++];\n        else\n            A[k] = R[j++];\n        count++;\n    }\n}\nfunction mergeSort(A, left, right, count) {\n    const XzqLjT = {\n        'WbWxD': function (x, y) {\n            return x >= y;\n        },\n        'ADaqN': function (x, y) {\n            return x + y;\n        },\n        'WGglw': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'dmXGJ': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        }\n    };\n    if (XzqLjT['WbWxD'](XzqLjT['ADaqN'](left, 0x1), right))\n        return;\n    let mid = Math['floor']((left + right) / 0x2);\n    XzqLjT['WGglw'](mergeSort, A, left, mid);\n    XzqLjT['WGglw'](mergeSort, A, mid, right);\n    XzqLjT['dmXGJ'](merge, A, left, mid, right);\n}\nfunction main(lines) {\n    const twsWTz = {\n        'lnWNr': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    let n = twsWTz['lnWNr'](Number, lines[0x0]);\n    let A = lines[0x1]['split']('\\x20')['map'](Number);\n    mergeSort(A, 0x0, n);\n    console['log'](A['join']('\\x20'));\n    console['log'](count);\n}", "test_cases": [["10\n8 5 9 2 6 3 7 1 10 4", "1 2 3 4 5 6 7 8 9 10\n34"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nlet input = '';\nprocess.stdin.on('data', function(chunk) {input += chunk;});\nprocess.stdin.on('end', function() {main(input.split(\"\\n\"));});\n\nlet count = 0;\n\nfunction merge(A,left,mid,right) {\n\tlet n1 = mid - left;\n\tlet n2 = right - mid;\n\tlet L = [];\n\tlet R = [];\n\tfor (let i = 0; i < n1; i++) L.push(A[left+i]);\n\tfor (let i = 0; i < n2; i++) R.push(A[mid+i]);\n\tL.push(Number.MAX_SAFE_INTEGER);\n\tR.push(Number.MAX_SAFE_INTEGER);\n\n\tlet i = 0,j = 0;\n\tfor (let k = left; k < right; k++) {\n\t\tif (L[i] < R[j]) A[k] = L[i++];\n\t\telse A[k] = R[j++];\n\t\tcount++;\n\t}\n}\n\nfunction mergeSort(A,left,right,count) {\n\tif (left + 1 >= right) return;\n\tlet mid = Math.floor((left + right) / 2);\n\tmergeSort(A,left,mid);\n\tmergeSort(A,mid,right);\n\tmerge(A,left,mid,right);\n}\n\nfunction main(lines) {\n\tlet n = Number(lines[0]);\n\tlet A = lines[1].split(\" \").map(Number);\n\tmergeSort(A,0,n);\n\n\tconsole.log(A.join(\" \"));\n\tconsole.log(count);\n}\n", "language": "JavaScript"}
{"filename": "p02386_1", "type": "JavaScript", "obfuscated": "function move(d1, d2, d3, d4, d5, d6) {\n    var pILMSr = {\n        'EFLii': function (x, y) {\n            return x == y;\n        },\n        'XXJsc': function (x, y) {\n            return x == y;\n        }\n    };\n    var x = this['toString']();\n    if (pILMSr['EFLii'](x, 'N'))\n        return [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    if (pILMSr['XXJsc'](x, 'E'))\n        return [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n}\nfunction roll(d1, d2, d3, d4, d5, d6) {\n    return [\n        d1,\n        d3,\n        d5,\n        d2,\n        d4,\n        d6\n    ];\n}\nfunction rolls(arr) {\n    var tTUaAF = {\n        'vPKtc': function (x, y) {\n            return x < y;\n        }\n    };\n    for (var i = 0x0; tTUaAF['vPKtc'](i, 0x4); i++) {\n        obj[arr['join'](',')] = !![];\n        arr = roll['apply'](null, arr);\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nvar OBJ = {};\nvar result = 'Yes';\nfor (var i = 0x0; i < n; i++) {\n    var obj = {};\n    var dice = Arr[i]['split']('\\x20')['map'](Number);\n    for (var j = 0x0; j < 0x4; j++) {\n        rolls(dice);\n        dice = move['apply']('N', dice);\n    }\n    dice = move['apply']('E', dice);\n    rolls(dice);\n    dice = move['apply']('E', dice);\n    dice = move['apply']('E', dice);\n    rolls(dice);\n    for (var k in obj) {\n        if (OBJ['hasOwnProperty'](k))\n            result = 'No';\n        else\n            OBJ[k] = !![];\n    }\n    if (result == 'No')\n        break;\n}\nconsole['log'](result);", "test_cases": [["3\n1 2 3 4 5 6\n6 2 4 3 5 1\n6 5 4 3 2 1", "No"], ["3\n1 2 3 4 5 6\n6 5 4 3 2 1\n5 4 3 2 1 6", "Yes"]], "original": "function move(d1,d2,d3,d4,d5,d6){\n   var x=this.toString();\n   if(x==\"N\")return [d2,d6,d3,d4,d1,d5];\n   if(x==\"E\")return [d4,d2,d1,d6,d5,d3];\n}\nfunction roll(d1,d2,d3,d4,d5,d6){\n   return [d1,d3,d5,d2,d4,d6];\n}\nfunction rolls(arr){\n   for(var i=0;i<4;i++){\n      obj[arr.join(\",\")]=true;\n      arr=roll.apply(null,arr);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nvar OBJ={};\nvar result=\"Yes\";\nfor(var i=0;i<n;i++){\n   var obj={};\n   var dice=Arr[i].split(\" \").map(Number);\n   for(var j=0;j<4;j++){\n      rolls(dice);\n      dice=move.apply(\"N\",dice);\n   }\n   dice=move.apply(\"E\",dice);\n   rolls(dice);\n   dice=move.apply(\"E\",dice);\n   dice=move.apply(\"E\",dice);\n   rolls(dice);\n   for(var k in obj){\n      if(OBJ.hasOwnProperty(k))result= \"No\";\n      else OBJ[k]=true;\n   }\n   if(result==\"No\")break;\n}\nconsole.log(result);", "language": "JavaScript"}
{"filename": "p02400_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    var HOijeS = {\n        'oPgrH': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'XsDwJ': function (x, y) {\n            return x * y;\n        },\n        'GQMVa': function (x, y) {\n            return x * y;\n        },\n        'iebFZ': function (x, y) {\n            return x + y;\n        }\n    };\n    var a = line['split']('\\x20');\n    var b = HOijeS['oPgrH'](parseInt, a[0x0], 0xa);\n    var c = HOijeS['XsDwJ'](b * b, Math['PI']);\n    var d = HOijeS['GQMVa'](HOijeS['XsDwJ'](b, 0x2), Math['PI']);\n    console['log'](HOijeS['iebFZ'](c['toFixed'](0x6) + '\\x20', d['toFixed'](0x6)));\n    process['exit']();\n});\nprocess['stdin']['on']('end', function () {\n});", "test_cases": [["2", "12.566371 12.566371"], ["3", "28.274334 18.849556"]], "original": "var lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var b = parseInt(a[0],10);\n  var c = b*b*Math.PI;\n  var d = b*2*Math.PI;\n  console.log(c.toFixed(6)+\" \"+d.toFixed(6));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02617_1", "type": "JavaScript", "obfuscated": "const [_n, ..._edges] = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\n/);\nconst n = Number(_n);\nlet result = n * (n + 0x1) * (n + 0x2) / 0x6;\nfor (const _edge of _edges) {\n    let [u, v] = _edge['split'](/\\s/)['map'](Number);\n    if (u > v) {\n        [u, v] = [\n            v,\n            u\n        ];\n    }\n    result -= u * (n - v + 0x1);\n}\nconsole['log'](result);", "test_cases": [["3\n1 3\n2 3", "7"], ["2\n1 2", "3"], ["10\n5 3\n5 7\n8 9\n1 9\n9 10\n8 4\n7 4\n6 10\n7 2", "113"]], "original": "const [_n, ..._edges] = require('fs')\n  .readFileSync('/dev/stdin', 'utf8')\n  .split(/\\n/)\nconst n = Number(_n)\n\nlet result = (n * (n + 1) * (n + 2)) / 6\n\nfor (const _edge of _edges) {\n  let [u, v] = _edge.split(/\\s/).map(Number)\n  if (u > v) {\n    [u, v] = [v, u]\n  }\n  result -= u * (n - v + 1)\n}\nconsole.log(result)", "language": "JavaScript"}
{"filename": "p02648_1", "type": "JavaScript", "obfuscated": "console['log'](function (args) {\n    const adgoXD = {\n        'RYmgH': function (x, y) {\n            return x + y;\n        },\n        'LBtqA': function (x, y) {\n            return x <= y;\n        },\n        'QdLBs': function (x, y) {\n            return x + y;\n        },\n        'fiPwC': function (x, y) {\n            return x + y;\n        },\n        'QXYfb': function (x, y) {\n            return x > y;\n        },\n        'DcGGT': function (x, y) {\n            return x - y;\n        },\n        'mCmpT': function (callee, param1) {\n            return callee(param1);\n        },\n        'DjiYo': function (x, y) {\n            return x >= y;\n        },\n        'TdGAY': function (x, y) {\n            return x >> y;\n        },\n        'eysSp': function (x, y) {\n            return x < y;\n        }\n    };\n    const tmp = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const N = tmp[0x0][0x0], Q = tmp[adgoXD['RYmgH'](N, 0x1)][0x0];\n    const V = [0x0], W = [0x0], v = [], L = [];\n    for (let i = 0x1; i <= N; i++) {\n        V['push'](tmp[i][0x0]);\n        W['push'](tmp[i][0x1]);\n    }\n    let Lmax = 0x0;\n    for (let i = 0x1; adgoXD['LBtqA'](i, Q); i++) {\n        v['push'](tmp[adgoXD['QdLBs'](adgoXD['RYmgH'](N, 0x1), i)][0x0]);\n        L['push'](tmp[adgoXD['fiPwC'](adgoXD['fiPwC'](N, 0x1), i)][0x1]);\n        if (adgoXD['QXYfb'](L[adgoXD['DcGGT'](i, 0x1)], Lmax))\n            Lmax = L[i - 0x1];\n    }\n    const dp = [adgoXD['mCmpT'](Array, Lmax + 0x1)['fill'](0x0)];\n    for (let i = 0x1; i <= N; i++) {\n        dp[i] = [];\n        for (let w = 0x0; adgoXD['LBtqA'](w, Lmax); w++) {\n            if (adgoXD['DjiYo'](w, W[i]))\n                dp[i][w] = Math['max'](dp[adgoXD['TdGAY'](i, 0x1)][adgoXD['DcGGT'](w, W[i])] + V[i], dp[adgoXD['TdGAY'](i, 0x1)][w]);\n            else\n                dp[i][w] = dp[adgoXD['TdGAY'](i, 0x1)][w];\n        }\n    }\n    const max = [];\n    for (let i = 0x0; adgoXD['eysSp'](i, Q); i++) {\n        max['push'](dp[v[i]][L[i]]);\n    }\n    return max['join']('\\x0a');\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n1 2\n2 3\n3 4\n3\n1 1\n2 5\n3 5", "0\n3\n3"], ["15\n123 119\n129 120\n132 112\n126 109\n118 103\n115 109\n102 100\n130 120\n105 105\n132 115\n104 102\n107 107\n127 116\n121 104\n121 115\n8\n8 234\n9 244\n10 226\n11 227\n12 240\n13 237\n14 206\n15 227", "256\n255\n250\n247\n255\n259\n223\n253"]], "original": "console.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const N = tmp[0][0], Q = tmp[N+1][0];\n  const V = [0], W = [0], v = [], L = [];\n  for ( let i = 1; i <= N; i++ ) {\n    V.push( tmp[i][0] );\n    W.push( tmp[i][1] );\n  }\n  let Lmax = 0;\n  for ( let i = 1; i <= Q; i++ ) {\n    v.push( tmp[N+1+i][0] );\n    L.push( tmp[N+1+i][1] );\n    if ( L[i-1] > Lmax ) Lmax = L[i-1];\n  }\n  const dp = [Array(Lmax+1).fill(0)];\n  for ( let i = 1; i <= N; i++ ) {\n    dp[i] = [];\n    for ( let w = 0; w <= Lmax; w++ ) {\n      if ( w >= W[i] ) dp[i][w] = Math.max( dp[i>>1][w-W[i]] + V[i], dp[i>>1][w] );\n      else dp[i][w] = dp[i>>1][w];\n    }\n  }\n  const max = [];\n  for ( let i = 0; i < Q; i++ ) {\n    max.push( dp[v[i]][L[i]] );\n  }\n  return max.join('\\n');\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02806_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var RfNLKv = {\n        'dQInI': '0|1|2|5|3|4',\n        'XCLzG': function (x, y) {\n            return x - y;\n        },\n        'XUFsH': function (x, y) {\n            return x - y;\n        },\n        'YlHfv': function (x, y) {\n            return x + y;\n        },\n        'NoPGQ': function (x, y) {\n            return x < y;\n        },\n        'IIOyP': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var elvvOg = RfNLKv['dQInI']['split']('|');\n    var wVOwtS = 0x0;\n    while (!![]) {\n        switch (elvvOg[wVOwtS++]) {\n        case '0':\n            var lines = input['split']('\\x0a');\n            continue;\n        case '1':\n            var titles = lines['map'](l => l['split']('\\x20')[0x0])['splice'](0x1, RfNLKv['XCLzG'](lines['length'], 0x2));\n            continue;\n        case '2':\n            var sleptAt = titles['indexOf'](lines[RfNLKv['XUFsH'](lines['length'], 0x1)]);\n            continue;\n        case '3':\n            for (var i = RfNLKv['YlHfv'](sleptAt, 0x2); RfNLKv['NoPGQ'](i, RfNLKv['XUFsH'](lines['length'], 0x1)); i++) {\n                sum += RfNLKv['IIOyP'](Number, lines[i]['split']('\\x20')[0x1]);\n            }\n            continue;\n        case '4':\n            console['log'](sum);\n            continue;\n        case '5':\n            var sum = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\ndwango 2\nsixth 5\nprelims 25\ndwango", "30"], ["1\nabcde 1000\nabcde", "0"], ["15\nypnxn 279\nkgjgwx 464\nqquhuwq 327\nrxing 549\npmuduhznoaqu 832\ndagktgdarveusju 595\nwunfagppcoi 200\ndhavrncwfw 720\njpcmigg 658\nwrczqxycivdqn 639\nmcmkkbnjfeod 992\nhtqvkgkbhtytsz 130\ntwflegsjz 467\ndswxxrxuzzfhkp 989\nszfwtzfpnscgue 958\npmuduhznoaqu", "6348"]], "original": "function Main(input) {\n\tvar lines = input.split(\"\\n\");\n\tvar titles = lines.map(l => l.split(' ')[0]).splice(1, lines.length - 2)\n\tvar sleptAt = titles.indexOf(lines[lines.length - 1])\n\tvar sum = 0\n\tfor(var i = sleptAt + 2; i < lines.length - 1 ; i ++) {\n\t\tsum+= Number(lines[i].split(' ')[1])\n\t}\n\tconsole.log(sum)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02853_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const rZRLgj = {\n        'MZhvC': function (x, y) {\n            return x === y;\n        },\n        'gyqZC': function (x, y) {\n            return x === y;\n        },\n        'pnYTt': function (x, y) {\n            return x === y;\n        },\n        'huALJ': function (x, y) {\n            return x === y;\n        }\n    };\n    const chars = input['trim']()['split']('\\x20');\n    const x = Math['floor'](chars[0x0]);\n    const y = Math['floor'](chars[0x1]);\n    let ans = 0x0;\n    if (rZRLgj['MZhvC'](x, 0x1) && rZRLgj['MZhvC'](y, 0x1)) {\n        ans += 0x61a80;\n    }\n    if (rZRLgj['MZhvC'](x, 0x1))\n        ans += 0x493e0;\n    if (rZRLgj['MZhvC'](y, 0x1))\n        ans += 0x493e0;\n    if (rZRLgj['gyqZC'](x, 0x2))\n        ans += 0x30d40;\n    if (rZRLgj['pnYTt'](y, 0x2))\n        ans += 0x30d40;\n    if (rZRLgj['MZhvC'](x, 0x3))\n        ans += 0x186a0;\n    if (rZRLgj['huALJ'](y, 0x3))\n        ans += 0x186a0;\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 1", "1000000"], ["3 101", "100000"], ["4 4", "0"]], "original": "function Main(input) {\n  const chars = input.trim().split(' ');\n\n  const x = Math.floor(chars[0]);\n  const y = Math.floor(chars[1]);\n  \n  let ans = 0;\n  \n  if (x === 1 && y === 1) {\n    ans += 400000;\n  }\n  \n  if (x === 1) ans += 300000;\n  if (y === 1) ans += 300000;\n  if (x === 2) ans += 200000;\n  if (y === 2) ans += 200000;\n  if (x === 3) ans += 100000;\n  if (y === 3) ans += 100000;\n  \n  console.log(ans);\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02913_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    var fnDzCe = {\n        'TVTot': '0|6|4|5|2|1|3',\n        'noRVs': function (x, y) {\n            return x <= y;\n        },\n        'agBzG': function (x, y) {\n            return x / y;\n        },\n        'vQLnB': function (x, y) {\n            return x + y;\n        },\n        'MdwTw': function (x, y) {\n            return x < y;\n        },\n        'VdHsJ': function (x, y) {\n            return x - y;\n        },\n        'IAYLT': function (x, y) {\n            return x + y;\n        },\n        'MttyK': function (x, y) {\n            return x >= y;\n        },\n        'aoQCK': function (x, y) {\n            return x + y;\n        },\n        'yIihC': function (x, y) {\n            return x + y;\n        }\n    };\n    var AsVzXq = fnDzCe['TVTot']['split']('|');\n    var BJAtOF = 0x0;\n    while (!![]) {\n        switch (AsVzXq[BJAtOF++]) {\n        case '0':\n            var N = input[0x0] - 0x0;\n            continue;\n        case '1':\n            start:\n                while (fnDzCe['noRVs'](min, max)) {\n                    var ave = ~~fnDzCe['agBzG'](fnDzCe['vQLnB'](min, max), 0x2);\n                    for (var i = 0x0; fnDzCe['MdwTw'](i, fnDzCe['VdHsJ'](N, ave)); i++) {\n                        var base = str['substring'](i, fnDzCe['IAYLT'](i, ave));\n                        if (fnDzCe['MttyK'](str['lastIndexOf'](base), fnDzCe['aoQCK'](i, ave))) {\n                            min = fnDzCe['yIihC'](ave, 0x1);\n                            ans = ave;\n                            continue start;\n                        }\n                    }\n                    max = ave - 0x1;\n                }\n            continue;\n        case '2':\n            var max = ~~(N / 0x2);\n            continue;\n        case '3':\n            console['log'](ans);\n            continue;\n        case '4':\n            var ans = 0x0;\n            continue;\n        case '5':\n            var min = 0x0;\n            continue;\n        case '6':\n            var str = input[0x1];\n            continue;\n        }\n        break;\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8')['trim']()['split']('\\x0a'));", "test_cases": [["5\nababa", "2"], ["2\nxy", "0"], ["13\nstrangeorange", "5"]], "original": "const main = (input) => {\n  var N = input[0]-0;\n  var str = input[1];\n  var ans = 0;\n  var min = 0;\n  var max = ~~(N/2);\n  start:while(min<=max){\n    var ave = ~~((min+max)/2);\n    for(var i=0;i<N-ave;i++){\n      var base = str.substring(i,i+ave);\n      if(str.lastIndexOf(base) >= i+ave){\n        min = ave+1;\n        ans = ave;\n        continue start;\n      }\n    }\n    max = ave-1;\n  }\n  console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03045_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var FhPRiN = {\n        'AWyah': function (x, y) {\n            return x + y;\n        },\n        'cvQMG': function (x, y) {\n            return x === y;\n        },\n        'iqtiN': '1|3|2|4|0',\n        'ccvjh': function (x, y) {\n            return x !== y;\n        },\n        'FJiMe': function (x, y) {\n            return x - y;\n        },\n        'NafLW': function (callee, param1) {\n            return callee(param1);\n        },\n        'SnhIC': function (x, y) {\n            return x - y;\n        },\n        'eOAzx': function (callee, param1) {\n            return callee(param1);\n        },\n        'bkrzb': function (x, y) {\n            return x - y;\n        },\n        'RXjsP': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (FhPRiN['cvQMG'](input[input['length'] - 0x1], '')) {\n        input['pop']();\n    }\n    const N = FhPRiN['FJiMe'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    const M = input[0x0]['split']('\\x20')[0x1] - 0x0;\n    var parent = new Array(FhPRiN['AWyah'](N, 0x1))['fill'](0x0);\n    for (var i = 0x1; i <= M; i++) {\n        if (FhPRiN['NafLW'](root, FhPRiN['SnhIC'](input[i]['split']('\\x20')[0x0], 0x0)) !== root(FhPRiN['FJiMe'](input[i]['split']('\\x20')[0x1], 0x0))) {\n            parent[FhPRiN['eOAzx'](root, FhPRiN['FJiMe'](input[i]['split']('\\x20')[0x1], 0x0))] = FhPRiN['bkrzb'](root(input[i]['split']('\\x20')[0x0]), 0x0);\n        }\n    }\n    console['log'](FhPRiN['RXjsP'](parent['reduce']((acc, cur) => {\n        return FhPRiN['AWyah'](acc, FhPRiN['cvQMG'](cur, 0x0) ? 0x1 : 0x0);\n    }, 0x0), 0x1));\n    function root(node) {\n        var hcWXBI = FhPRiN['iqtiN']['split']('|');\n        var LtCrJc = 0x0;\n        while (!![]) {\n            switch (hcWXBI[LtCrJc++]) {\n            case '0':\n                return point;\n            case '1':\n                var array = [];\n                continue;\n            case '2':\n                while (FhPRiN['ccvjh'](parent[point], 0x0)) {\n                    array['push'](point);\n                    point = parent[point];\n                }\n                continue;\n            case '3':\n                var point = node;\n                continue;\n            case '4':\n                array['forEach'](e => {\n                    parent[e] = point;\n                });\n                continue;\n            }\n            break;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 1\n1 2 1", "2"], ["6 5\n1 2 1\n2 3 2\n1 3 3\n4 5 4\n5 6 5", "2"], ["100000 1\n1 100000 100", "99999"]], "original": "\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  var parent=new Array(N+1).fill(0);\n  for(var i=1;i<=M;i++){\n    if(root(input[i].split(' ')[0]-0)!==root(input[i].split(' ')[1]-0)){\n       parent[root(input[i].split(' ')[1]-0)]=root(input[i].split(' ')[0])-0;\n    }\n  }\n  console.log(parent.reduce((acc,cur)=>{\n    return acc+(cur===0?1:0);\n  },0)-1);\n  \n  function root(node){\n    var array=[];\n    var point=node;\n    while(parent[point]!==0){\n      array.push(point);\n      point=parent[point];\n    }\n    array.forEach(e=>{\n      parent[e]=point;\n    });\n    return point;\n  }\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03096_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var JMGdkc = {\n        'FyrgH': function (x, y) {\n            return x < y;\n        },\n        'MIuXc': 'not\\x20yet',\n        'DJmJJ': function (x, y) {\n            return x + y;\n        },\n        'TiUWt': function (x, y) {\n            return x === y;\n        },\n        'JAqVa': function (x, y) {\n            return x - y;\n        },\n        'YBPeb': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['trim']()['split'](/\\s+/)['map'](x => x - 0x0);\n    var N = input['shift']();\n    var last = [];\n    for (let i = 0x0; JMGdkc['FyrgH'](i, 0x1e8480); i++)\n        last[i] = JMGdkc['MIuXc'];\n    last[input[0x0]] = 0x0;\n    var dp = [0x1];\n    var M = JMGdkc['DJmJJ'](Math['pow'](0xa, 0x9), 0x7);\n    for (let i = 0x1; JMGdkc['FyrgH'](i, N); i++) {\n        let c = input[i];\n        if (JMGdkc['TiUWt'](last[c], 'not\\x20yet') || JMGdkc['TiUWt'](last[c], i - 0x1)) {\n            last[c] = i;\n            dp[i] = dp[JMGdkc['JAqVa'](i, 0x1)];\n            continue;\n        }\n        dp[i] = JMGdkc['YBPeb'](JMGdkc['DJmJJ'](dp[JMGdkc['JAqVa'](i, 0x1)], dp[last[c]]), M);\n        last[c] = i;\n    }\n    console['log'](dp['pop']());\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1\n2\n1\n2\n2", "3"], ["6\n4\n2\n5\n4\n2\n4", "5"], ["7\n1\n3\n1\n2\n3\n3\n2", "5"]], "original": "\"use strict\"\nfunction Main(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  var N=input.shift();\n  var last=[];//last[hoge]で色hogeの最後の位置\n  for(let i=0;i<2000000;i++)last[i]=\"not yet\";\n  last[input[0]]=0;\n  var dp=[1];//dp[i]で石0~iまでの色の塗られ方の場合の数\n  var M=Math.pow(10,9)+7;\n  for(let i=1;i<N;i++){\n    let c=input[i];\n    if(last[c]===\"not yet\"||last[c]===i-1){\n      last[c]=i;\n      dp[i]=dp[i-1];\n      continue;\n    }\n    dp[i]=(dp[i-1]+dp[last[c]])%M;\n    last[c]=i;\n  }\n  console.log(dp.pop());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03194_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var tpHwTB = {\n        'LthJb': '5|11|2|8|12|10|4|0|9|6|3|7|1',\n        'BWLyw': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ncaQg': function (x, y) {\n            return x < y;\n        },\n        'lKyUK': function (x, y) {\n            return x + y;\n        },\n        'JsLVQ': function (x, y) {\n            return x >= y;\n        },\n        'oQRph': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'Sjfrl': function (x, y) {\n            return x <= y;\n        },\n        'bmZWq': function (x, y) {\n            return x === y;\n        }\n    };\n    var bkeLii = tpHwTB['LthJb']['split']('|');\n    var mnkqtF = 0x0;\n    while (!![]) {\n        switch (bkeLii[mnkqtF++]) {\n        case '0':\n            var i = 0x2;\n            continue;\n        case '1':\n            console['log'](ans);\n            continue;\n        case '2':\n            var n = tpHwTB['BWLyw'](parseInt, input[0x0], 0xa);\n            continue;\n        case '3':\n            var b = arr['filter'](function (x, i, self) {\n                return pkISAT['Staut'](self['indexOf'](x), i);\n            });\n            continue;\n        case '4':\n            var ans = 0x1;\n            continue;\n        case '5':\n            var pkISAT = {\n                'Staut': function (x, y) {\n                    return x === y;\n                }\n            };\n            continue;\n        case '6':\n            for (var i = 0x0; tpHwTB['ncaQg'](i, arr['length']); i++) {\n                var key = arr[i];\n                counts[key] = counts[key] ? tpHwTB['lKyUK'](counts[key], 0x1) : 0x1;\n            }\n            continue;\n        case '7':\n            for (var i = 0x0; tpHwTB['ncaQg'](i, b['length']); i++) {\n                if (tpHwTB['JsLVQ'](counts[b[i]], n)) {\n                    ans *= b[i];\n                }\n            }\n            continue;\n        case '8':\n            var p = tpHwTB['oQRph'](parseInt, input[0x1], 0xa);\n            continue;\n        case '9':\n            while (tpHwTB['Sjfrl'](i, p)) {\n                while (tpHwTB['bmZWq'](p % i, 0x0)) {\n                    arr['push'](i);\n                    p = Math['floor'](p / i);\n                }\n                i++;\n            }\n            continue;\n        case '10':\n            var counts = [];\n            continue;\n        case '11':\n            var input = input['split']('\\x20');\n            continue;\n        case '12':\n            var arr = [];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 24", "2"], ["5 1", "1"], ["1 111", "111"], ["4 972439611840", "206"]], "original": "function Main(input) {\n  // 入力\n\tvar input = input.split(' ');\n\tvar n = parseInt(input[0], 10);\n  var p = parseInt(input[1], 10);\n  var arr = [];\n  var counts = [];\n  var ans = 1;\n\n  // 計算\n  var i =2;\n  while (i <= p) {\n    while (p % i === 0) {\n      arr.push(i);\n      p = Math.floor(p / i);\n    }\n    i++;\n  }\n\n  for(var i = 0; i < arr.length; i++) {\n    var key = arr[i];\n    counts[key] = (counts[key])? counts[key] + 1 : 1 ;\n  }\n\n  var b = arr.filter(function (x, i, self) {\n    return self.indexOf(x) === i;\n  });\n  for (var i = 0; i < b.length; i++) {\n    if (counts[b[i]] >= n) {\n      ans *= b[i];\n    }\n  }\n  console.log(ans);\n\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03286_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const NwWYuU = {\n        'BALDM': function (x, y) {\n            return x === y;\n        },\n        'PYOfP': function (x, y) {\n            return x !== y;\n        },\n        'VKmjL': function (x, y) {\n            return x + y;\n        },\n        'aaGus': function (callee, param1) {\n            return callee(param1);\n        },\n        'SGVri': function (x, y) {\n            return x % y;\n        },\n        'xhltc': function (x, y) {\n            return x % y;\n        },\n        'SJheU': function (x, y) {\n            return x < y;\n        },\n        'PfRZC': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['split']('\\x0a');\n    let N = parseInt(input[0x0]);\n    let res = '';\n    if (NwWYuU['BALDM'](N, 0x0)) {\n        console['log'](0x0);\n        return;\n    }\n    while (NwWYuU['PYOfP'](N, 0x0)) {\n        res = NwWYuU['VKmjL'](NwWYuU['aaGus'](String, Math['abs'](NwWYuU['SGVri'](N, -0x2))), res);\n        if (NwWYuU['xhltc'](N, -0x2) < 0x0)\n            N += NwWYuU['SJheU'](N, 0x0) ? -0x1 : 0x1;\n        N = parseInt(NwWYuU['PfRZC'](N, -0x2));\n    }\n    console['log'](res);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["-9", "1011"], ["123456789", "11000101011001101110100010101"], ["0", "0"]], "original": "'use strict'\nfunction Main(input) {\n  input = input.split(\"\\n\")\n  let N = parseInt(input[0])\n  let res = ''\n  if (N === 0) {\n    console.log(0)\n    return\n  }\n  while (N !== 0) {\n    res = String(Math.abs(N % -2)) + res\n    if (N % -2 < 0) N += N < 0 ? -1 : 1\n    N = parseInt(N / -2)\n  }\n  console.log(res)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"))", "language": "JavaScript"}
{"filename": "p03425_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const dSyGTO = {\n        'SpVsr': function (x, y) {\n            return x + y;\n        },\n        'BopiY': function (x, y) {\n            return x === y;\n        },\n        'SFaRv': function (x, y) {\n            return x === y;\n        },\n        'owtIn': function (x, y) {\n            return x === y;\n        },\n        'JfGQk': function (x, y) {\n            return x < y;\n        },\n        'DHqwQ': function (x, y) {\n            return x * y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const names = arg['slice'](0x1, dSyGTO['SpVsr'](N, 0x1));\n    const p = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x2\n    ];\n    const q = [\n        0x1,\n        0x1,\n        0x1,\n        0x2,\n        0x2,\n        0x3,\n        0x2,\n        0x2,\n        0x3,\n        0x3\n    ];\n    const r = [\n        0x2,\n        0x3,\n        0x4,\n        0x3,\n        0x4,\n        0x4,\n        0x3,\n        0x4,\n        0x4,\n        0x4\n    ];\n    let march = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let i in names) {\n        const Ppqize = '0|3|4|2|1'['split']('|');\n        let EIKBNG = 0x0;\n        while (!![]) {\n            switch (Ppqize[EIKBNG++]) {\n            case '0':\n                if (dSyGTO['BopiY'](names[i][0x0], 'M')) {\n                    march[0x0]++;\n                }\n                continue;\n            case '1':\n                if (names[i][0x0] === 'H') {\n                    march[0x4]++;\n                }\n                continue;\n            case '2':\n                if (dSyGTO['SFaRv'](names[i][0x0], 'C')) {\n                    march[0x3]++;\n                }\n                continue;\n            case '3':\n                if (dSyGTO['owtIn'](names[i][0x0], 'A')) {\n                    march[0x1]++;\n                }\n                continue;\n            case '4':\n                if (names[i][0x0] === 'R') {\n                    march[0x2]++;\n                }\n                continue;\n            }\n            break;\n        }\n    }\n    let answer = 0x0;\n    for (let i = 0x0; dSyGTO['JfGQk'](i, 0xa); i++) {\n        answer += dSyGTO['DHqwQ'](dSyGTO['DHqwQ'](march[p[i]], march[q[i]]), march[r[i]]);\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI", "2"], ["4\nZZ\nZZZ\nZ\nZZZZZZZZZZ", "0"], ["5\nCHOKUDAI\nRNG\nMAKOTO\nAOKI\nRINGO", "7"]], "original": "\"use strict\";\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const names = arg.slice(1, N + 1);\n    \n    const p = [0, 0, 0, 0, 0, 0, 1, 1, 1, 2];\n    const q = [1, 1, 1, 2, 2, 3, 2, 2, 3, 3];\n    const r = [2, 3, 4, 3, 4, 4, 3, 4, 4, 4];\n    \n    let march = [0, 0, 0, 0, 0];\n    \n    for(let i in names) {\n        if(names[i][0] === \"M\") {\n            march[0]++;\n        }\n        \n        if(names[i][0] === \"A\") {\n            march[1]++;\n        }\n        \n        if(names[i][0] === \"R\") {\n            march[2]++;\n        }\n        \n        if(names[i][0] === \"C\") {\n            march[3]++;\n        }\n        \n        if(names[i][0] === \"H\") {\n            march[4]++;\n        }\n    }\n    \n    let answer = 0;\n    \n    for(let i=0; i<10; i++) {\n        answer += march[p[i]] * march[q[i]] * march[r[i]];\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03458_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var HWljJc = {\n        'EHaLV': '7|5|3|0|1|2|8|6|4',\n        'GiUVU': function (x, y) {\n            return x < y;\n        },\n        'dMvas': function (x, y) {\n            return x + y;\n        },\n        'osqGB': function (x, y) {\n            return x % y;\n        },\n        'ZoSgp': function (callee, param1) {\n            return callee(param1);\n        },\n        'McmDH': function (x, y) {\n            return x * y;\n        },\n        'AKDFW': function (x, y) {\n            return x * y;\n        },\n        'ybelG': '0|1|5|4|2|3',\n        'LgyZI': function (x, y) {\n            return x * y;\n        },\n        'Zojqr': function (x, y) {\n            return x < y;\n        },\n        'URcqG': function (x, y) {\n            return x - y;\n        },\n        'DaheV': function (x, y) {\n            return x - y;\n        },\n        'BBVqx': function (x, y) {\n            return x + y;\n        },\n        'ZTZHV': function (x, y) {\n            return x + y;\n        },\n        'Qmdxy': function (x, y) {\n            return x < y;\n        },\n        'zYIsm': function (x, y) {\n            return x === y;\n        },\n        'vrVRf': function (x, y) {\n            return x & y;\n        },\n        'MoSfN': function (x, y) {\n            return x / y;\n        },\n        'vkbuY': function (x, y) {\n            return x / y;\n        }\n    };\n    var CQLcqb = HWljJc['EHaLV']['split']('|');\n    var uNEfGI = 0x0;\n    while (!![]) {\n        switch (CQLcqb[uNEfGI++]) {\n        case '0':\n            N = N[0x0];\n            continue;\n        case '1':\n            var x = [], y = [], c = [];\n            continue;\n        case '2':\n            for (var i = 0x0; HWljJc['GiUVU'](i, N); i++) {\n                x[i] = input[HWljJc['dMvas'](i, 0x1)]['split']('\\x20');\n                y[i] = HWljJc['osqGB'](HWljJc['ZoSgp'](parseInt, x[i][0x1]), HWljJc['McmDH'](K, 0x2));\n                c[i] = x[i][0x2] === 'W' ? 0x0 : 0x1;\n                x[i] = HWljJc['osqGB'](HWljJc['ZoSgp'](parseInt, x[i][0x0]), HWljJc['AKDFW'](K, 0x2));\n            }\n            continue;\n        case '3':\n            var K = N[0x1];\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        case '5':\n            var N = input[0x0]['split']('\\x20')['map'](a => parseInt(a));\n            continue;\n        case '6':\n            for (i = 0x0; i < K; i++) {\n                var jMcGyh = HWljJc['ybelG']['split']('|');\n                var VcxuDt = 0x0;\n                while (!![]) {\n                    switch (jMcGyh[VcxuDt++]) {\n                    case '0':\n                        var now = 0x0;\n                        continue;\n                    case '1':\n                        var Y1 = new Array(HWljJc['LgyZI'](K, 0x2))['fill'](0x0), Y2 = new Array(HWljJc['LgyZI'](K, 0x2))['fill'](0x0);\n                        continue;\n                    case '2':\n                        if (HWljJc['Zojqr'](ans, HWljJc['URcqG'](N, now)))\n                            ans = HWljJc['URcqG'](N, now);\n                        continue;\n                    case '3':\n                        for (var j = 0x0; HWljJc['Zojqr'](j, HWljJc['URcqG'](K, 0x1)); j++) {\n                            now += HWljJc['URcqG'](HWljJc['DaheV'](Y2[j], Y1[j]) + Y2[HWljJc['BBVqx'](j, K)], Y1[HWljJc['ZTZHV'](j, K)]);\n                            if (ans < now)\n                                ans = now;\n                            if (HWljJc['GiUVU'](ans, N - now))\n                                ans = HWljJc['DaheV'](N, now);\n                        }\n                        continue;\n                    case '4':\n                        if (ans < now)\n                            ans = now;\n                        continue;\n                    case '5':\n                        for (var k = 0x0; HWljJc['Qmdxy'](k, N); k++) {\n                            if (HWljJc['zYIsm'](HWljJc['vrVRf'](HWljJc['MoSfN'](HWljJc['dMvas'](x[k], i), K) ^ HWljJc['vkbuY'](y[k], K), 0x1), c[k])) {\n                                now++;\n                                Y1[y[k]]++;\n                            } else\n                                Y2[y[k]]++;\n                        }\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '7':\n            input = input['split']('\\x0a');\n            continue;\n        case '8':\n            var ans = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B", "4"], ["2 1000\n0 0 B\n0 1 W", "2"], ["6 2\n1 2 B\n2 1 W\n2 2 B\n1 0 B\n0 6 W\n4 5 W", "4"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar N = input[0].split(\" \").map(a => parseInt(a));\n\tvar K = N[1];\n\tN = N[0];\n\tvar x = [], y = [], c = [];\n\tfor(var i = 0; i < N; i++){\n\t\tx[i] = input[i+1].split(\" \");\n\t\ty[i] = parseInt(x[i][1]) % (K * 2);\n\t\tc[i] = (x[i][2] === \"W\" ? 0 : 1);\n\t\tx[i] = parseInt(x[i][0]) % (K * 2);\n\t}\n\tvar ans = 0;\n\tfor(i = 0; i < K; i++){\n\t\tvar now = 0;\n\t\tvar Y1 = new Array(K*2).fill(0), Y2 = new Array(K*2).fill(0);\n\t\tfor(var k = 0; k < N; k++){\n\t\t\tif((((x[k] + i) / K ^ y[k] / K) & 1) === c[k]){\n\t\t\t\tnow++;\n\t\t\t\tY1[y[k]]++;\n\t\t\t}else Y2[y[k]]++;\n\t\t}\n\t\tif(ans < now)ans = now;\n\t\tif(ans < N - now)ans = N - now;\n\t\tfor(var j = 0; j < K - 1; j++){\n\t\t\tnow += Y2[j] - Y1[j] + Y2[j+K] - Y1[j+K];\n\t\t\tif(ans < now)ans = now;\n\t\t\tif(ans < N - now)ans = N - now;\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03546_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const VxBEoE = {\n        'jOFFB': function (x, y) {\n            return x < y;\n        },\n        'ffuES': function (x, y) {\n            return x < y;\n        },\n        'OmExh': function (x, y) {\n            return x === y;\n        }\n    };\n    const [[H, W], ...tmp] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => v | 0x0));\n    const A = tmp['slice'](0xa);\n    const dp = tmp['slice'](0x0, 0xa);\n    for (let k = 0x0; VxBEoE['jOFFB'](k, 0xa); k++) {\n        for (let i = 0x0; i < 0xa; i++) {\n            for (let j = 0x0; j < 0xa; j++) {\n                dp[i][j] = Math['min'](dp[i][j], dp[i][k] + dp[k][j]);\n            }\n        }\n    }\n    let cost = 0x0;\n    for (let i = 0x0; VxBEoE['ffuES'](i, H); i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (VxBEoE['OmExh'](A[i][j], -0x1) || VxBEoE['OmExh'](A[i][j], 0x1))\n                continue;\n            cost += dp[A[i][j]][0x1];\n        }\n    }\n    return '' + cost;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 4\n0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 0 9 9 9\n9 9 9 9 9 9 9 0 9 9\n9 9 9 9 2 9 9 9 0 9\n9 2 9 9 9 9 9 9 9 0\n-1 -1 -1 -1\n8 1 1 8", "12"], ["5 5\n0 999 999 999 999 999 999 999 999 999\n999 0 999 999 999 999 999 999 999 999\n999 999 0 999 999 999 999 999 999 999\n999 999 999 0 999 999 999 999 999 999\n999 999 999 999 0 999 999 999 999 999\n999 999 999 999 999 0 999 999 999 999\n999 999 999 999 999 999 0 999 999 999\n999 999 999 999 999 999 999 0 999 999\n999 999 999 999 999 999 999 999 0 999\n999 999 999 999 999 999 999 999 999 0\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1", "0"], ["3 5\n0 4 3 6 2 7 2 5 3 3\n4 0 5 3 7 5 3 7 2 7\n5 7 0 7 2 9 3 2 9 1\n3 6 2 0 2 4 6 4 2 3\n3 5 7 4 0 6 9 7 6 7\n9 8 5 2 2 0 4 7 6 5\n5 4 6 3 2 3 0 5 4 3\n3 6 2 3 4 2 4 0 8 9\n4 6 5 4 3 5 3 2 0 8\n2 1 3 4 5 7 8 6 4 0\n3 5 2 6 1\n2 5 3 2 1\n6 9 2 5 6", "47"]], "original": "console.log((args=>{\n  const [[H,W],...tmp] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  const A = tmp.slice(10);\n  const dp = tmp.slice(0,10);\n  for ( let k = 0; k < 10; k++ ) {\n    for ( let i = 0; i < 10; i++ ) {\n      for ( let j = 0; j < 10; j++ ) {\n        dp[i][j] = Math.min( dp[i][j], dp[i][k] + dp[k][j] );\n      }\n    }\n  }\n  let cost = 0;\n  for ( let i = 0; i < H; i++ ) {\n    for ( let j = 0; j < W; j++ ) {\n      if ( A[i][j] === -1 || A[i][j] === 1 ) continue;\n      cost += dp[A[i][j]][1];\n    }\n  }\n  return `${cost}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03549_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const mHQHER = {\n        'RhJpp': function (x, y) {\n            return x * y;\n        },\n        'IblQG': function (x, y) {\n            return x - y;\n        },\n        'VhAJn': function (x, y) {\n            return x * y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = lines[0x0]['split']('\\x20')['map'](x => parseInt(x))[0x0];\n    const M = lines[0x0]['split']('\\x20')['map'](x => parseInt(x))[0x1];\n    let result = (mHQHER['RhJpp'](mHQHER['IblQG'](N, M), 0x64) + mHQHER['VhAJn'](M, 0x76c)) * Math['pow'](0x2, M);\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 1", "3800"], ["10 2", "18400"], ["100 5", "608000"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n');\n  const N = lines[0].split(' ').map(x => parseInt(x))[0];\n  const M = lines[0].split(' ').map(x => parseInt(x))[1];\n\n\n\n  let result = ((N-M)*100 + M*1900)*Math.pow(2,M);\n\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03712_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const rESqVk = {\n        'aPcSg': function (x, y) {\n            return x + y;\n        },\n        'cJAoZ': function (x, y) {\n            return x + y;\n        },\n        'hyHPu': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split']('\\x0a');\n    input[0x0] = input[0x0]['split']('\\x20')['map'](v => ~~v);\n    const h = input[0x0][0x0];\n    const w = input[0x0][0x1];\n    let tmp = rESqVk['aPcSg']('#'['repeat'](rESqVk['cJAoZ'](w, 0x2)), '\\x0a');\n    for (let i = 0x1; rESqVk['hyHPu'](i, h); i++) {\n        tmp += rESqVk['cJAoZ'](rESqVk['cJAoZ']('#', input[i]), '#\\x0a');\n    }\n    tmp += '#'['repeat'](rESqVk['cJAoZ'](w, 0x2));\n    console['log'](tmp);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3\nabc\narc", "#####\n#abc#\n#arc#\n#####"], ["1 1\nz", "###\n#z#\n###"]], "original": "'use strict'\n\nfunction main(input) {\n\n  input = input.split('\\n')\n  input[0] = input[0].split(' ').map(v => ~~v)\n  const h = input[0][0]\n  const w = input[0][1]\n\n  let tmp = '#'.repeat(w + 2) + '\\n'\n  for (let i = 1; i <= h; i++) {\n    tmp += '#' + input[i] + '#\\n'\n  }\n  tmp += '#'.repeat(w + 2)\n\n  console.log(tmp)\n\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00008_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nconst MAX = 0x32;\nmap0 = [];\nfor (i = 0x0; i <= MAX; i++)\n    map0['push'](0x0);\nmap1 = []['concat'](map0);\nmap2 = []['concat'](map1);\nmap3 = []['concat'](map2);\nfor (i = 0x0; i <= 0x9; i++)\n    map0[i] = 0x1;\nfunction expand_map(map, smaller) {\n    var yGAZkr = {\n        'bLpUh': function (x, y) {\n            return x < y;\n        },\n        'HIeir': function (x, y) {\n            return x - y;\n        },\n        'iypKR': function (x, y) {\n            return x <= y;\n        }\n    };\n    for (var i = 0x0; yGAZkr['bLpUh'](i, MAX); i++) {\n        for (var j = Math['max'](0x0, yGAZkr['HIeir'](i, 0x9)); yGAZkr['iypKR'](j, i); j++) {\n            map[i] += smaller[j];\n        }\n    }\n}\nexpand_map(map1, map0);\nexpand_map(map2, map1);\nexpand_map(map3, map2);\nrequire('fs')['readFileSync'](config['input'], 'ascii')['trim']()['split'](config['newline'])['forEach'](function (line) {\n    console['log'](map3[parseInt(line)]);\n});", "test_cases": [["35\n1", "4\n4"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nconst MAX = 50;\n\nmap0 = [];\nfor (i = 0; i <= MAX; i++) map0.push(0);\nmap1 = [].concat(map0);\nmap2 = [].concat(map1);\nmap3 = [].concat(map2);\n\nfor (i = 0; i <= 9; i++) map0[i] = 1;\n\nfunction expand_map(map, smaller) {\n\tfor (var i = 0; i < MAX; i++) {\n\t\tfor (var j = Math.max(0, i - 9); j <= i; j++) {\n\t\t\tmap[i] += smaller[j];\n\t\t}\n\t}\n}\n\nexpand_map(map1, map0);\nexpand_map(map2, map1);\nexpand_map(map3, map2);\n\nrequire('fs').readFileSync(config.input, 'ascii')\n\t.trim()\n\t.split(config.newline)\n\t.forEach(function (line) { console.log(map3[parseInt(line)]); })\n\t;", "language": "JavaScript"}
{"filename": "p00009_1", "type": "JavaScript", "obfuscated": "var count = 0x0;\nfunction isPrime(num) {\n    var HiJeDU = {\n        'nhOyI': function (x, y) {\n            return x < y;\n        },\n        'jigRh': function (x, y) {\n            return x < y;\n        },\n        'ZrrMB': function (x, y) {\n            return x == y;\n        },\n        'rYfMK': function (x, y) {\n            return x % y;\n        }\n    };\n    if (HiJeDU['nhOyI'](num, 0x2))\n        return ![];\n    for (var i = 0x2; HiJeDU['jigRh'](i, num); i++) {\n        if (HiJeDU['ZrrMB'](HiJeDU['rYfMK'](num, i), 0x0))\n            return ![];\n    }\n    count++;\n    return !![];\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar p = input['split']('\\x0a');\nfor (var i = 0x0; i < p['length']; i++) {\n    count = 0x0;\n    for (var j = 0x2; j <= p[i]; j++) {\n        isPrime(j);\n    }\n    console['log'](count);\n}", "test_cases": [["10\n3\n11", "4\n2\n5"]], "original": "var count=0;\n function isPrime(num) {\n     if(num < 2) return false;\n     for (var i = 2; i < num; i++) {\n         if(num%i==0)\n             return false;\n     }\n     count++;\n     return true;\n }\n var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n var p = input.split('\\n');\n  for(var i=0;i<p.length;i++){\n   count=0;\n   for(var j=2;j<=p[i];j++){\n  isPrime(j);\n }\n  console.log(count);\n }", "language": "JavaScript"}
{"filename": "p00221_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var mn = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (mn[0x0] == 0x0 && mn[0x1] == 0x0)\n        break;\n    var player = [];\n    for (var i = 0x0; i < mn[0x0]; i++)\n        player[i] = i + 0x1;\n    var arr = [];\n    for (var i = 0x0; i < mn[0x1]; i++) {\n        var v = Arr['shift']();\n        arr['push'](v);\n    }\n    var i = 0x1;\n    var k = 0x0;\n    var len = mn[0x0];\n    for (var I = 0x0; I < arr['length']; I++) {\n        var v = arr[I];\n        var str = '';\n        if (i % 0x3 == 0x0)\n            str += 'Fizz';\n        if (i % 0x5 == 0x0)\n            str += 'Buzz';\n        if (str == '')\n            str = i;\n        if (v != str) {\n            player[k] = ![];\n            len++;\n            if (len == 0x1)\n                break;\n        }\n        i++;\n        var H = 0x0;\n        do {\n            H++;\n            if (H > 0x3e8)\n                break;\n            k++;\n            if (k >= player['length']) {\n                player = player['filter'](function (v) {\n                    var rCNOxG = {\n                        'tMRqe': function (x, y) {\n                            return x != y;\n                        }\n                    };\n                    return rCNOxG['tMRqe'](v, ![]);\n                });\n                k = 0x0;\n            }\n        } while (player[k] == ![]);\n    }\n    player = player['filter'](function (v) {\n        var uRSMuI = {\n            'CsmKc': function (x, y) {\n                return x != y;\n            }\n        };\n        return uRSMuI['CsmKc'](v, ![]);\n    });\n    console['log'](player['join']('\\x20'));\n}", "test_cases": [["5 7\n1\n2\nFizz\n4\nBuzz\n6\n7\n3 5\n1\n2\n3\n4\n5\n0 0", "2 3 4 5\n1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var mn=(Arr.shift()).split(\" \").map(Number);\n   if(mn[0]==0 && mn[1]==0)break;\n   var player=[];\n   for(var i=0;i<mn[0];i++)player[i]=i+1;\n   var arr=[];\n   for(var i=0;i<mn[1];i++){\n      var v=Arr.shift();\n      arr.push(v);\n   }\n   var i=1;\n   var k=0;\n   var len=mn[0];\n   for(var I=0;I<arr.length;I++){\n      var v=arr[I];\n      var str=\"\";\n      if(i%3==0)str+=\"Fizz\";\n      if(i%5==0)str+=\"Buzz\";\n      if(str==\"\")str=i;\n      if(v!=str){\n         player[k]=false;\n         len++;\n         if(len==1)break;\n      }\n      i++;\n      var H=0;\n      do{\n      H++;\n      if(H>1000)break;\n      k++;\n      if(k>=player.length){\n         player=player.filter(function(v){return v!=false;});\n         k=0;\n      }\n      }while(player[k]==false);\n   }\n   player=player.filter(function(v){return v!=false;});\n   console.log(player.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00990_1", "type": "JavaScript", "obfuscated": "function over(x) {\n    var UMtPap = {\n        'siOYq': function (x, y) {\n            return x >= y;\n        }\n    };\n    if (UMtPap['siOYq'](x, 0xa))\n        x = x - 0xa + 0x1;\n    return x;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar id = arr['shift']()['split']('');\nvar a = arr['shift']() - 0x0;\nvar ary = arr['shift']()['split']('\\x20')['map'](Number);\nvar k = [];\nvar sum = 0x0;\nid['forEach'](function (v, i) {\n    var wpOPpm = {\n        'IJpZI': function (x, y) {\n            return x % y;\n        },\n        'ZAhYr': function (x, y) {\n            return x == y;\n        },\n        'VoFBH': function (x, y) {\n            return x % y;\n        },\n        'vqxit': function (x, y) {\n            return x - y;\n        },\n        'xNiZr': function (callee, param1) {\n            return callee(param1);\n        },\n        'UyMvY': function (x, y) {\n            return x * y;\n        }\n    };\n    if (v == '*') {\n        if (wpOPpm['IJpZI'](i, 0x2) == 0x0)\n            k['push'](0x1);\n        else\n            k['push'](0x2);\n    } else {\n        if (wpOPpm['ZAhYr'](wpOPpm['VoFBH'](i, 0x2), 0x0))\n            sum += wpOPpm['vqxit'](v, 0x0);\n        else\n            sum += wpOPpm['xNiZr'](over, wpOPpm['UyMvY'](wpOPpm['vqxit'](v, 0x0), 0x2));\n    }\n});\nvar dp = [];\nfor (var i = 0x0; i <= 0x7; i++) {\n    dp[i] = [];\n    for (var s = 0x0; s < 0xf4240; s++)\n        dp[i][s] = ![];\n}\ndp[0x0][sum] = 0x1;\nfor (var i = 0x0; i < k['length']; i++) {\n    for (var j = 0x0; j < ary['length']; j++) {\n        for (var s = 0x0; s < 0xf4240; s++) {\n            dp[i + 0x1][s + over(ary[j] * k[i])] += dp[i][s];\n        }\n    }\n}\nvar ans = 0x0;\nfor (var s = 0x0; s < 0x186a0; s++)\n    ans += dp[k['length']][s * 0xa];\nconsole['log'](ans);", "test_cases": [["5\n5*57*\n2\n3 9", "1"], ["15\n2***9*2*6*1199*\n9\n0 1 2 3 4 6 7 8 9", "478297"]], "original": "function over(x){\n   if(x>=10)x=x-10+1;\n   return x;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar id=arr.shift().split(\"\");\nvar a=arr.shift()-0;\nvar ary=arr.shift().split(\" \").map(Number);\nvar k=[];\nvar sum=0;\nid.forEach(function(v,i){\n   if(v==\"*\"){\n      if(i%2==0)k.push(1);\n      else k.push(2);\n   }else{\n      if(i%2==0)sum+=v-0;\n      else sum+=over((v-0)*2);\n   }\n});\nvar dp=[];\nfor(var i=0;i<=7;i++){\n   dp[i]=[];\n   for(var s=0;s<1000000;s++)dp[i][s]=false;\n}\n\ndp[0][sum]=1;\n\nfor(var i=0;i<k.length;i++){\n   for(var j=0;j<ary.length;j++){\n      for(var s=0;s<1000000;s++){\n         dp[i+1][s+over(ary[j]*k[i])]+=dp[i][s];\n      }\n   }\n\n}\nvar ans=0;\nfor(var s=0;s<100000;s++)ans+=dp[k.length][s*10];\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p02585_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const ROYCEx = {\n        'tMFCw': function (x, y) {\n            return x < y;\n        },\n        'xzRgL': function (x, y) {\n            return x < y;\n        },\n        'yPVTp': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const [n, k] = input[0x0]['split']('\\x20')['map'](Number);\n    const directions = input[0x1]['split']('\\x20')['map'](v => Number(v) - 0x1);\n    const scoreList = input[0x2]['split']('\\x20')['map'](Number);\n    const ans = [new Array(n)['fill'](0x0)];\n    for (let i = 0x0; ROYCEx['tMFCw'](i, k); i++)\n        ans['push']([]);\n    for (let i = 0x0; ROYCEx['xzRgL'](i, k); i++) {\n        for (let x = 0x0; ROYCEx['tMFCw'](x, n); x++) {\n            const score = ans[i][x];\n            ans[i + 0x1][directions[x]] = score + scoreList[directions[x]];\n        }\n    }\n    let max = -Infinity;\n    for (let i = 0x1; ROYCEx['yPVTp'](i, ans['length']); i++)\n        max = Math['max'](max, Math['max'](...ans[i]));\n    return console['log'](max);\n};\nprocess['env']['MYTEST'] ? test() : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2\n2 4 5 1 3\n3 4 -10 -8 8", "8"], ["2 3\n2 1\n10 -7", "13"], ["3 3\n3 1 2\n-1000 -2000 -3000", "-1000"], ["10 58\n9 1 6 7 8 4 3 2 10 5\n695279662 988782657 -119067776 382975538 -151885171 -177220596 -169777795 37619092 389386780 980092719", "29507023469"]], "original": "const main = (input) => {\n  input = input.trim().split('\\n')\n  const [n, k] = input[0].split(' ').map(Number)\n  const directions = input[1].split(' ').map(v => Number(v)-1)\n  const scoreList = input[2].split(' ').map(Number)\n\n  const ans = [new Array(n).fill(0)]\n  for (let i=0; i<k; i++) ans.push([])\n\n  for (let i=0; i<k; i++) {\n    for (let x=0; x<n; x++) {\n      const score = ans[i][x]\n      ans[i+1][directions[x]] = score + scoreList[directions[x]]\n    }\n  }\n\n  let max = -Infinity\n  for (let i=1; i<ans.length; i++) max = Math.max(max, Math.max(...ans[i]))\n  return console.log(max)\n}\n\nprocess.env.MYTEST ? test() : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02665_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const MFvLLE = {\n        'EjCWe': function (x, y) {\n            return x - y;\n        },\n        'OZdvd': function (x, y) {\n            return x - y;\n        },\n        'OYjmO': function (x, y) {\n            return x * y;\n        },\n        'Rokjd': function (callee, param1) {\n            return callee(param1);\n        },\n        'IWhuK': function (x, y) {\n            return x - y;\n        },\n        'mgsCL': function (x, y) {\n            return x + y;\n        },\n        'FnRkF': function (x, y) {\n            return x > y;\n        },\n        'ktYsr': function (x, y) {\n            return x < y;\n        },\n        'GRXNp': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const [[N], A] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const a = [MFvLLE['EjCWe'](0x1, A[0x0])];\n    for (let i = 0x1; i < N; i++)\n        a['push'](MFvLLE['OZdvd'](MFvLLE['OYjmO'](a[MFvLLE['OZdvd'](i, 0x1)], 0x2), A[i]));\n    a['push'](0x0);\n    let n = MFvLLE['Rokjd'](BigInt, A[N]);\n    for (let i = MFvLLE['IWhuK'](N, 0x1); i >= 0x0; i--) {\n        const c = MFvLLE['mgsCL'](a[i + 0x1], A[MFvLLE['mgsCL'](i, 0x1)]);\n        if (MFvLLE['FnRkF'](a[i], c))\n            a[i] = c;\n        else if (MFvLLE['ktYsr'](MFvLLE['OYjmO'](a[i], 0x2), c))\n            return '-1';\n        n += MFvLLE['GRXNp'](BigInt, a[i] + A[i]);\n    }\n    return '' + n;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n0 1 1 2", "7"], ["4\n0 0 1 0 2", "10"], ["2\n0 3 1", "-1"], ["1\n1 1", "-1"], ["10\n0 0 1 1 2 3 5 8 13 21 34", "264"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0));\n  const a = [1-A[0]];\n  for ( let i = 1; i < N; i++ ) a.push(a[i-1] * 2 - A[i]);\n  a.push(0);\n  let n = BigInt(A[N]);\n  for ( let i = N-1; i >= 0; i-- ) {\n    const c = a[i+1] + A[i+1];\n    if ( a[i] > c ) a[i] = c;\n    else if ( a[i] * 2 < c ) return '-1';\n    n += BigInt(a[i] + A[i]);\n  }\n  return `${n}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02787_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const OCHgsT = {\n        'iDWng': function (x, y) {\n            return x + y;\n        },\n        'MhUSb': function (x, y) {\n            return x < y;\n        },\n        'hkQWu': function (x, y) {\n            return x <= y;\n        },\n        'IlSqO': function (x, y) {\n            return x + y;\n        },\n        'EbhTb': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const array = input[0x0]['split']('\\x20')['map'](s => parseInt(s));\n    const rest = input['slice'](0x1);\n    const H = array[0x0];\n    const N = array[0x1];\n    const magic = [];\n    for (let i = 0x0; i < rest['length']; ++i) {\n        const a = rest[i]['split']('\\x20')['map'](s => parseInt(s));\n        magic['push']([\n            a[0x0],\n            a[0x1]\n        ]);\n    }\n    magic['sort']((a, b) => a[0x0] - b[0x0]);\n    let dp = Array(OCHgsT['iDWng'](H, 0x1))['fill'](Infinity);\n    dp[0x0] = 0x0;\n    for (let i = 0x0; OCHgsT['MhUSb'](i, N); ++i) {\n        const w = magic[i][0x0];\n        const v = magic[i][0x1];\n        for (let j = 0x0; OCHgsT['hkQWu'](j, H); ++j) {\n            const min = Math['min'](OCHgsT['IlSqO'](j, w), H);\n            dp[min] = Math['min'](dp[min], OCHgsT['EbhTb'](dp[j], v));\n        }\n    }\n    console['log'](dp[H]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["9 3\n8 3\n4 2\n2 1", "4"], ["100 6\n1 1\n2 3\n3 9\n4 27\n5 81\n6 243", "100"], ["9999 10\n540 7550\n691 9680\n700 9790\n510 7150\n415 5818\n551 7712\n587 8227\n619 8671\n588 8228\n176 2461", "139815"]], "original": "'use strict'\n\nfunction Main(input) {\n  input = input.trim().split('\\n')\n  const array = input[0].split(' ').map(s => parseInt(s))\n  const rest = input.slice(1)\n  const H = array[0]\n  const N = array[1]\n\n  const magic = []\n  for(let i = 0; i < rest.length; ++i) {\n    const a = rest[i].split(' ').map(s => parseInt(s))\n    magic.push([a[0], a[1]])\n  }\n  magic.sort((a, b) => a[0] - b[0])\n\n  let dp = Array(H+1).fill(Infinity)\n\n  dp[0] = 0\n  for(let i = 0; i < N; ++i) {\n    const w = magic[i][0]\n    const v = magic[i][1]\n    for(let j = 0; j <= H; ++j) {\n      \n      const min = Math.min(j + w, H)\n\n      dp[min] = Math.min(dp[min], dp[j] + v) \n    }\n\n    // console.log(`${i}までの魔法を利用`)\n    // console.log(dp)\n    // console.log('^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^')\n  }\n  \n  console.log(dp[H])\n  \n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02984_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const QnEAsS = {\n        'azOjn': function (x, y) {\n            return x - y;\n        },\n        'mkceG': function (x, y) {\n            return x / y;\n        },\n        'QuYzc': function (x, y) {\n            return x < y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const A = arg[0x1]['split']('\\x20')['map'](n => parseInt(0x2 * n));\n    let offset = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        offset = QnEAsS['azOjn'](A[i], offset);\n    }\n    let x = QnEAsS['mkceG'](offset, 0x2);\n    let cur = x;\n    let answer = [];\n    for (let i = 0x0; QnEAsS['QuYzc'](i, N); i++) {\n        answer['push'](cur);\n        cur = QnEAsS['azOjn'](A[i], cur);\n    }\n    console['log'](answer['join']('\\x20'));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2 2 4", "4 0 4"], ["5\n3 8 7 5 5", "2 4 12 2 8"], ["3\n1000000000 1000000000 0", "0 2000000000 0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const A = arg[1].split(\" \").map(n=>parseInt(2 * n));\n    \n    let offset = 0;\n    \n    for(let i=0; i<N; i++) {\n        offset = A[i] - offset;\n    }\n    \n    let x = offset / 2;\n    \n    let cur = x;\n    \n    let answer = [];\n    \n    for(let i=0; i<N; i++) {\n        answer.push(cur);\n        cur = A[i] - cur;\n    }\n    \n    console.log(answer.join(\" \"));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03050_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const UoQkeW = {\n        'rMcjc': function (callee, param1) {\n            return callee(param1);\n        },\n        'TurAO': function (x, y) {\n            return x < y;\n        },\n        'ZMPVg': function (x, y) {\n            return x * y;\n        },\n        'AOBPT': function (x, y) {\n            return x - y;\n        },\n        'iARPi': function (x, y) {\n            return x !== y;\n        },\n        'fnIax': function (x, y) {\n            return x === y;\n        },\n        'MaoWN': function (x, y) {\n            return x % y;\n        },\n        'oiPIF': function (x, y) {\n            return x / y;\n        }\n    };\n    const N = UoQkeW['rMcjc'](parseInt, input);\n    let ret = 0x0;\n    for (let i = 0x1; UoQkeW['TurAO'](UoQkeW['ZMPVg'](i, i), N); i++) {\n        const ic = UoQkeW['AOBPT'](i, 0x1);\n        if (UoQkeW['iARPi'](ic, 0x0) && UoQkeW['fnIax'](UoQkeW['MaoWN'](N, ic), Math['trunc'](UoQkeW['oiPIF'](N, ic)))) {\n            ret += ic;\n        }\n        const j = UoQkeW['AOBPT'](Math['trunc'](N / i), 0x1);\n        if (UoQkeW['fnIax'](N % j, i)) {\n            ret += j;\n        }\n    }\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8", "10"], ["1000000000000", "2499686339916"]], "original": "\"use strict\";\nfunction Main(input) {\n  const N = parseInt(input);\n  let ret = 0;\n  for (let i = 1; (i * i) < N; i++) {\n    const ic = i - 1;\n    if (ic !== 0 && (N % ic) === Math.trunc(N / ic)) {\n      ret += ic;\n    }\n    const j =Math.trunc(N / i) - 1;\n    if ((N % j) === i) {\n      ret += j;\n    }\n  }\n  console.log(ret);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03088_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    var GInAPk = {\n        'LrPnA': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const N = GInAPk['LrPnA'](Number, input);\n    console['log'](calc(N, '', 0x0));\n};\nvar map = {};\nvar w = [\n    'A',\n    'C',\n    'G',\n    'T'\n];\nfunction calc(N, lst4, cnt) {\n    var csPROf = {\n        'QNZwy': function (x, y) {\n            return x < y;\n        },\n        'RgoyG': function (x, y) {\n            return x + y;\n        },\n        'Vsszk': function (x, y) {\n            return x + y;\n        },\n        'OAvML': function (x, y) {\n            return x != y;\n        },\n        'pyqFE': function (x, y) {\n            return x + y;\n        },\n        'VVQCo': function (x, y) {\n            return x + y;\n        },\n        'tFRgk': 'AGC',\n        'sFIXM': function (x, y) {\n            return x != y;\n        },\n        'jlcYV': function (x, y) {\n            return x + y;\n        },\n        'cKEFt': function (x, y) {\n            return x + y;\n        },\n        'MSCeu': function (x, y) {\n            return x + y;\n        },\n        'bTPgO': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'DriOs': function (x, y) {\n            return x + y;\n        },\n        'TyYJt': function (x, y) {\n            return x == y;\n        }\n    };\n    var HDmmeN = '1|5|4|2|0|3|6'['split']('|');\n    var XyVszw = 0x0;\n    while (!![]) {\n        switch (HDmmeN[XyVszw++]) {\n        case '0':\n            for (var i = 0x0; csPROf['QNZwy'](i, 0x4); i++) {\n                var next = csPROf['RgoyG'](lst4, w[i]);\n                var next3 = next['slice'](-0x3);\n                var next4 = next['slice'](-0x4);\n                if (csPROf['RgoyG'](csPROf['RgoyG'](next3[0x0], next3[0x1]), next3[0x2]) != 'AGC' && csPROf['RgoyG'](csPROf['Vsszk'](next3[0x0], next3[0x2]), next3[0x1]) != 'AGC' && csPROf['OAvML'](csPROf['pyqFE'](csPROf['VVQCo'](next3[0x1], next3[0x0]), next3[0x2]), csPROf['tFRgk']) && csPROf['sFIXM'](csPROf['Vsszk'](csPROf['jlcYV'](next4[0x0], next4[0x1]), next4[0x3]), csPROf['tFRgk']) && csPROf['sFIXM'](csPROf['cKEFt'](csPROf['MSCeu'](next4[0x0], next4[0x2]), next4[0x3]), csPROf['tFRgk'])) {\n                    ans += csPROf['bTPgO'](calc, N, next['slice'](-0x4), csPROf['DriOs'](cnt, 0x1));\n                    ans %= 0x3b9aca07;\n                }\n            }\n            continue;\n        case '1':\n            var key = csPROf['cKEFt'](lst4 + '_', cnt);\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            map[key] = ans;\n            continue;\n        case '4':\n            if (csPROf['TyYJt'](cnt, N)) {\n                return 0x1;\n            }\n            continue;\n        case '5':\n            if (map[key])\n                return map[key];\n            continue;\n        case '6':\n            return ans;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'UTF-8'));", "test_cases": [["3", "61"], ["4", "230"], ["100", "388130742"]], "original": "const main = (input) => {\n  const N = Number(input);\n\n  console.log(calc(N, \"\", 0));\n}\n\nvar map = {}; // 最後の4文字+文字数\nvar w = ['A','C','G','T'];\nfunction calc(N, lst4, cnt){\n  var key = lst4 + \"_\" + cnt;\n  if(map[key]) return map[key];\n  if(cnt == N) {\n//    console.log(lst4);\n    return 1;\n  }\n  var ans = 0;\n  for(var i=0;i<4;i++){\n    var next = lst4+w[i];\n    var next3 = (next).slice(-3);\n    var next4 = (next).slice(-4);\n    if(\n      next3[0]+next3[1]+next3[2] != 'AGC' &&\n      next3[0]+next3[2]+next3[1] != 'AGC' &&\n      next3[1]+next3[0]+next3[2] != 'AGC' &&\n\n      next4[0]+next4[1]+next4[3] != 'AGC' &&\n      next4[0]+next4[2]+next4[3] != 'AGC'\n    ){\n      ans += calc(N, next.slice(-4), cnt+1);\n      ans %= 1000000007;\n    }\n  }\n  map[key] = ans;\n  return ans;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'UTF-8'));\n", "language": "JavaScript"}
{"filename": "p03157_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const zrhGtc = {\n        'kOiLH': function (x, y) {\n            return x < y;\n        },\n        'YXCub': function (x, y) {\n            return x < y;\n        },\n        'DpYeG': function (x, y) {\n            return x | y;\n        },\n        'onFRt': function (x, y) {\n            return x === y;\n        },\n        'mKSpq': function (x, y) {\n            return x ^ y;\n        },\n        'nABDK': function (x, y) {\n            return x + y;\n        },\n        'VAAFx': function (x, y) {\n            return x + y;\n        },\n        'nGdQW': function (x, y) {\n            return x <= y;\n        },\n        'PsxDD': function (x, y) {\n            return x <= y;\n        },\n        'eYfzh': function (x, y) {\n            return x === y;\n        },\n        'sBdOz': function (x, y) {\n            return x * y;\n        }\n    };\n    const [HW, ...S] = args['trim']()['split']('\\x0a');\n    const [H, W] = HW['split']('\\x20')['map'](v => parseInt(v));\n    const trail = Array['from']({ 'length': H }, _ => Array(W)['fill'](![]));\n    const dir = [\n        [\n            -0x1,\n            0x0\n        ],\n        [\n            0x0,\n            -0x1\n        ],\n        [\n            0x1,\n            0x0\n        ],\n        [\n            0x0,\n            0x1\n        ]\n    ];\n    let p = 0x0;\n    for (let i = 0x0; zrhGtc['kOiLH'](i, H); i++) {\n        for (let j = 0x0; zrhGtc['YXCub'](j, W); j++) {\n            if (trail[i][j])\n                continue;\n            const stack = [[\n                    i,\n                    j\n                ]];\n            trail[i][j] = !![];\n            let w = zrhGtc['DpYeG'](zrhGtc['onFRt'](S[i][j], '.'), 0x0), b = zrhGtc['mKSpq'](w, 0x1);\n            while (stack['length']) {\n                const [x, y] = stack['pop']();\n                for (const [dx, dy] of dir) {\n                    const nx = zrhGtc['nABDK'](x, dx), ny = zrhGtc['VAAFx'](y, dy);\n                    if (zrhGtc['kOiLH'](nx, 0x0) || zrhGtc['nGdQW'](H, nx) || ny < 0x0 || zrhGtc['PsxDD'](W, ny) || trail[nx][ny] || zrhGtc['eYfzh'](S[x][y], S[nx][ny]))\n                        continue;\n                    trail[nx][ny] = !![];\n                    if (zrhGtc['onFRt'](S[nx][ny], '#'))\n                        b++;\n                    else\n                        w++;\n                    stack['push']([\n                        nx,\n                        ny\n                    ]);\n                }\n            }\n            p += zrhGtc['sBdOz'](w, b);\n        }\n    }\n    return '' + p;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3 3\n.#.\n..#\n#..", "10"], ["2 4\n....\n....", "0"], ["4 3\n###\n###\n...\n###", "6"]], "original": "console.log((args=>{\n  const [HW,...S] = args.trim().split('\\n');\n  const [H,W] = HW.split(' ').map(v=>parseInt(v));\n  const trail = Array.from({length:H},_=>Array(W).fill(false));\n  const dir = [[-1,0],[0,-1],[1,0],[0,1]];\n  let p = 0;\n  for ( let i = 0; i < H; i++ ) {\n    for ( let j = 0; j < W; j++ ) {\n      if ( trail[i][j] ) continue;\n      const stack = [[i,j]];\n      trail[i][j] = true;\n      let w = S[i][j]==='.'|0, b = w^1;\n      while ( stack.length ) {\n        const [x,y] = stack.pop();\n        for ( const [dx,dy] of dir ) {\n          const nx = x+dx, ny = y+dy;\n          if ( nx < 0 || H <= nx || ny < 0 || W <= ny\n            || trail[nx][ny] || S[x][y] === S[nx][ny] ) continue;\n          trail[nx][ny] = true;\n          if ( S[nx][ny] === '#' ) b++; else w++;\n          stack.push([nx,ny]);\n        }\n      }\n      p += w * b;\n    }\n  }\n  return `${p}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03186_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const VVpAFn = {\n        'JcWxQ': function (x, y) {\n            return x > y;\n        },\n        'OtCoM': function (x, y) {\n            return x == y;\n        },\n        'hhUrw': function (x, y) {\n            return x > y;\n        },\n        'okzBC': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['trim']()['split']('\\x20')['map'](Number);\n    let badKusuri = input[0x0];\n    let goodKusuri = input[0x1];\n    let goodPoison = input[0x2];\n    for (; goodKusuri > 0x0 && VVpAFn['JcWxQ'](goodPoison, 0x0);) {\n        goodKusuri--;\n        goodPoison--;\n    }\n    if (VVpAFn['OtCoM'](goodPoison, 0x0)) {\n        goodKusuri = 0x0;\n    } else {\n        for (; badKusuri > 0x0 && VVpAFn['JcWxQ'](goodPoison, 0x0);) {\n            badKusuri--;\n            goodPoison--;\n        }\n    }\n    if (VVpAFn['hhUrw'](goodPoison, 0x0)) {\n        goodPoison--;\n    }\n    console['log'](VVpAFn['okzBC'](input[0x1], input[0x2]) - (goodKusuri + goodPoison));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 1 4", "5"], ["5 2 9", "10"], ["8 8 1", "9"]], "original": "'use strict';\n\nfunction Main(input) {\n\n  input = input.trim().split(\" \").map(Number);\n  let badKusuri = input[0];\n  let goodKusuri = input[1];\n  let goodPoison = input[2];\n  \n  for(;(goodKusuri>0)&&(goodPoison>0);){\n  \tgoodKusuri--;\n    goodPoison--;\n  }\n  \n  if(goodPoison == 0){\n  \tgoodKusuri = 0;\n  } else {\n  \tfor(;(badKusuri>0)&&(goodPoison>0);){\n  \t\tbadKusuri--;\n      \tgoodPoison--;\n  \t}\n  }\n  \n  if(goodPoison > 0){\n  \tgoodPoison--;\n  }\n  \n  console.log((input[1] + input[2]) - (goodKusuri + goodPoison));\n  \n  \n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03319_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var kUKRRT = {\n        'FovEh': '8|5|6|1|4|3|0|7|2',\n        'XXZKa': function (x, y) {\n            return x / y;\n        },\n        'eXOBZ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ZCmoh': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ExpCM': function (x, y) {\n            return x - y;\n        }\n    };\n    var WndpGy = kUKRRT['FovEh']['split']('|');\n    var FteRNf = 0x0;\n    while (!![]) {\n        switch (WndpGy[FteRNf++]) {\n        case '0':\n            var left = Math['ceil'](kUKRRT['XXZKa'](minPoint, K - 0x1));\n            continue;\n        case '1':\n            var K = kUKRRT['eXOBZ'](parseInt, NK[0x1], 0xa);\n            continue;\n        case '2':\n            console['log'](left + right);\n            continue;\n        case '3':\n            var minPoint = A['indexOf'](0x1);\n            continue;\n        case '4':\n            var A = NKA[0x1]['split']('\\x20')['map'](v => parseInt(v, 0xa));\n            continue;\n        case '5':\n            var NK = NKA[0x0]['split']('\\x20');\n            continue;\n        case '6':\n            var N = kUKRRT['ZCmoh'](parseInt, NK[0x0], 0xa);\n            continue;\n        case '7':\n            var right = Math['ceil'](kUKRRT['XXZKa'](kUKRRT['ExpCM'](kUKRRT['ExpCM'](N, minPoint), 0x1), K - 0x1));\n            continue;\n        case '8':\n            var NKA = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 3\n2 3 1 4", "2"], ["3 3\n1 2 3", "1"], ["8 3\n7 3 1 8 4 6 2 5", "4"]], "original": "function Main(input) {\n    var NKA = input.split('\\n')\n    var NK = NKA[0].split(' ')\n    var N = parseInt(NK[0], 10)\n    var K = parseInt(NK[1], 10)\n    var A = NKA[1].split(' ').map(v => parseInt(v, 10))\n\n    var minPoint = A.indexOf(1)\n    var left = Math.ceil(minPoint / (K - 1))\n    var right = Math.ceil((N - minPoint - 1) / (K - 1))\n    \n    console.log(left + right);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03427_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const wzAOOE = {\n        'TTwrx': function (x, y) {\n            return x === y;\n        },\n        'jPPXj': function (x, y) {\n            return x - y;\n        },\n        'McymV': function (x, y) {\n            return x - y;\n        },\n        'coNBH': function (callee, param1) {\n            return callee(param1);\n        },\n        'elBwH': function (x, y) {\n            return x + y;\n        },\n        'hITgC': function (x, y) {\n            return x * y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    if (wzAOOE['TTwrx'](lines[0x0]['length'], 0x1)) {\n        console['log'](lines[0x0]);\n        return;\n    }\n    const len9 = wzAOOE['jPPXj'](lines[0x0]['length'], 0x1);\n    const head = wzAOOE['McymV'](wzAOOE['coNBH'](parseInt, lines[0x0][0x0]), 0x1);\n    console['log'](wzAOOE['elBwH'](head, wzAOOE['hITgC'](len9, 0x9)));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["100", "18"], ["9995", "35"], ["3141592653589793", "137"]], "original": "\"use strict\"\n\nconst main = (input) => {\n  const lines = input.split(\"\\n\")\n  if (lines[0].length === 1) {\n    console.log(lines[0])\n    return\n  }\n  const len9 = lines[0].length - 1\n  const head = parseInt(lines[0][0]) - 1\n  console.log(head + len9 * 9)\n}\n\nmain (require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03545_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar lines = require('fs')['readFileSync'](0x0, 'utf8')['split']('\\x0a');\nvar str = lines[0x0];\nvar n = str['length'] - 0x1;\nvar dfs = (i, sum, order) => {\n    var ETezij = {\n        'BQgEE': function (x, y) {\n            return x === y;\n        },\n        'BjGqj': function (x, y) {\n            return x == y;\n        },\n        'wmHiq': function (callee, param1) {\n            return callee(param1);\n        },\n        'GsXIt': function (x, y) {\n            return x + y;\n        },\n        'izacy': function (x, y) {\n            return x + y;\n        },\n        'PaMgQ': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    if (ETezij['BQgEE'](i, n))\n        return ETezij['BjGqj'](ETezij['wmHiq'](eval, ETezij['GsXIt'](order, str[n])), 0x7) ? ETezij['izacy'](order, str[n]) : '';\n    var temp = dfs(ETezij['GsXIt'](i, 0x1), sum, ETezij['GsXIt'](order, str[i]) + '+');\n    return temp ? temp : ETezij['PaMgQ'](dfs, i + 0x1, sum, order + str[i] + '-');\n};\nvar ans = dfs(0x0, 0x0, '');\nconsole['log'](ans ? ans + '=7' : '');", "test_cases": [["1222", "1+2+2+2=7"], ["0290", "0-2+9+0=7"], ["3242", "3+2+4-2=7"]], "original": "'use strict'\nvar lines = require('fs').readFileSync(0, 'utf8').split('\\n')\nvar str = lines[0]\nvar n = str.length - 1;\nvar dfs = (i, sum, order) => {\n  if (i === n) return eval(order + str[n]) == 7 ? order + str[n] : '';\n  var temp = dfs(i + 1, sum, order + str[i] + '+')\n  return  temp ? temp : dfs(i + 1, sum, order + str[i] + '-');\n}\n\nvar ans = dfs(0, 0, '');\nconsole.log(ans ? ans + '=7' : '');", "language": "JavaScript"}
{"filename": "p03591_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var kFyFyn = {\n        'uujlU': 'YAKI',\n        'zreYJ': 'Yes'\n    };\n    if (input['substr'](0x0, 0x4) == kFyFyn['uujlU']) {\n        console['log'](kFyFyn['zreYJ']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["YAKINIKU", "Yes"], ["TAKOYAKI", "No"], ["YAK", "No"]], "original": "function Main(input) {\n\tif(input.substr(0,4)==\"YAKI\"){\n\t\tconsole.log(\"Yes\")\n\t}else{\n\t\tconsole.log(\"No\")\n\t}\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03797_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst create = () => {\n    const GgkpFA = {\n        'YPzHd': function (x, y) {\n            return x < y;\n        },\n        'VPXqD': 'ArrayIndexOutOfBoundsException',\n        'NilFU': function (callee, param1) {\n            return callee(param1);\n        },\n        'fXFTq': '/dev/stdin',\n        'bblNN': 'utf8'\n    };\n    const input = GgkpFA['NilFU'](require, 'fs')['readFileSync'](GgkpFA['fXFTq'], GgkpFA['bblNN'])['trim']()['split']('\\x0a');\n    const res = {\n        'list': input,\n        'index': 0x0,\n        'max': input['length'],\n        'hasNext': function () {\n            return GgkpFA['YPzHd'](this['index'], this['max']);\n        },\n        'next': function () {\n            if (!this['hasNext']()) {\n                throw GgkpFA['VPXqD'];\n            } else {\n                return this['list'][this['index']++];\n            }\n        }\n    };\n    return res;\n};\nconst o = create();\nconst next = () => o['next']();\nconst nextInt = () => parseInt(o['next']());\nconst nextStrArray = () => o['next']()['split']('\\x20');\nconst nextIntArray = () => o['next']()['split']('\\x20')['map'](el => parseInt(el));\nconst nextCharArray = () => o['next']()['split']('');\nconst hasNext = () => o['hasNext']();\nconst myout = (...x) => console['log'](...x);\nconst Main = () => {\n    const HaYGBz = {\n        'Ydcve': function (callee) {\n            return callee();\n        },\n        'cCsyk': function (x, y) {\n            return x <= y;\n        },\n        'ZmOMH': function (x, y) {\n            return x * y;\n        },\n        'KExIS': function (x, y) {\n            return x / y;\n        },\n        'pzYil': function (x, y) {\n            return x / y;\n        }\n    };\n    const [n, m] = HaYGBz['Ydcve'](nextIntArray);\n    let ans = HaYGBz['cCsyk'](m, HaYGBz['ZmOMH'](0x2, n)) ? Math['floor'](HaYGBz['KExIS'](M, 0x2)) : Math['floor'](HaYGBz['pzYil'](HaYGBz['ZmOMH'](0x2, n) + m, 0x4));\n    console['log'](ans);\n};\nMain();", "test_cases": [["1 6", "2"], ["12345 678901", "175897"]], "original": "\"use strict\"\nconst create = () => {\n    const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\");\n    const res = {\n        \"list\": input, \"index\": 0, \"max\": input.length,\n        \"hasNext\": function () { return this.index < this.max },\n        \"next\": function () { if (!this.hasNext()) { throw \"ArrayIndexOutOfBoundsException\"; } else { return this.list[this.index++]; } }\n    };\n    return res;\n}\nconst o = create();\nconst next = () => o.next()\nconst nextInt = () => parseInt(o.next())\nconst nextStrArray = () => o.next().split(\" \")\nconst nextIntArray = () => o.next().split(\" \").map(el => parseInt(el))\nconst nextCharArray = () => o.next().split(\"\")\nconst hasNext = () => o.hasNext()\nconst myout = (...x) => console.log(...x)\nconst Main = () => {\n    const [n, m] = nextIntArray()\n    let ans = m <= 2 * n ? Math.floor(M / 2) : Math.floor((2 * n + m) / 4)\n    console.log(ans)\n}\nMain()\n", "language": "JavaScript"}
{"filename": "p01093_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['trim']()['split']('\\x0a');\nwhile (line = lines['shift']()) {\n    const numbers = line['split']('\\x20')['map'](Number);\n    if (numbers['length'] > 0x1) {\n        const diffList = [];\n        numbers['map']((num1, ind1) => {\n            const aOBuBq = {\n                'BNZlE': function (x, y) {\n                    return x !== y;\n                },\n                'OYuHP': function (x, y) {\n                    return x - y;\n                }\n            };\n            numbers['map']((num2, ind2) => {\n                if (aOBuBq['BNZlE'](ind1, ind2)) {\n                    const diff = Math['abs'](aOBuBq['OYuHP'](num1, num2));\n                    const pair = num1 + '\\x20' + num2;\n                    diffList['push']([\n                        pair,\n                        diff\n                    ]);\n                }\n            });\n        });\n        const sorted = diffList['sort']((p1, p2) => p1[0x1] - p2[0x1])[0x0];\n        console['log'](sorted[0x1]);\n    }\n}", "test_cases": [["5\n10 10 10 10 10\n5\n1 5 8 9 11\n7\n11 34 83 47 59 29 70\n0", "0\n1\n5"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8');\n \nconst lines = input.trim().split('\\n');\n \nwhile (line = lines.shift()) {\n \n    const numbers = line.split(' ').map(Number);\n\n    if(numbers.length > 1){\n        const diffList = [];\n \n        numbers.map((num1, ind1) => {\n            numbers.map((num2, ind2) => {\n                if (ind1 !== ind2) {\n                    const diff = Math.abs(num1 - num2);\n                    const pair = `${num1} ${num2}`;\n                    diffList.push([pair, diff]);\n                }\n            })\n        })\n \n        const sorted = diffList.sort((p1, p2) => p1[1] - p2[1])[0];\n        console.log(sorted[1]);\n    }\n}\n", "language": "JavaScript"}
{"filename": "p02242_1", "type": "JavaScript", "obfuscated": "console['log']('0\\x200');\nconsole['log']('1\\x202');\nconsole['log']('2\\x202');\nconsole['log']('3\\x201');\nconsole['log']('4\\x203');", "test_cases": [["5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3", "0 0\n1 2\n2 2\n3 1\n4 3"]], "original": "console.log(\"0 0\");\nconsole.log(\"1 2\");\nconsole.log(\"2 2\");\nconsole.log(\"3 1\");\nconsole.log(\"4 3\");", "language": "JavaScript"}
{"filename": "p02421_1", "type": "JavaScript", "obfuscated": "var input = '';\nvar readable = process['stdin'];\nreadable['resume']();\nreadable['setEncoding']('utf-8');\nreadable['on']('data', function (chunk) {\n    input += chunk;\n});\nreadable['on']('end', function () {\n    var hlsqZP = {\n        'HpAgq': '4|0|3|2|5|1',\n        'ZZiAp': function (x, y) {\n            return x + y;\n        },\n        'OJSZI': function (x, y) {\n            return x < y;\n        }\n    };\n    var TqTRWg = hlsqZP['HpAgq']['split']('|');\n    var PUIJxN = 0x0;\n    while (!![]) {\n        switch (TqTRWg[PUIJxN++]) {\n        case '0':\n            var n = data[0x0];\n            continue;\n        case '1':\n            console['log'](hlsqZP['ZZiAp'](tscore + '\\x20', hscore));\n            continue;\n        case '2':\n            var hscore = 0x0;\n            continue;\n        case '3':\n            var tscore = 0x0;\n            continue;\n        case '4':\n            var data = input['split']('\\x0a');\n            continue;\n        case '5':\n            for (var i = 0x1; hlsqZP['OJSZI'](i, data['length']); i++) {\n                var taha = data[i]['split']('\\x20');\n                if (hlsqZP['OJSZI'](taha[0x0], taha[0x1])) {\n                    hscore += 0x3;\n                } else if (hlsqZP['OJSZI'](taha[0x1], taha[0x0])) {\n                    tscore += 0x3;\n                } else {\n                    hscore += 0x1;\n                    tscore += 0x1;\n                }\n            }\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["3\ncat dog\nfish fish\nlion tiger", "1 7"]], "original": "var input = '';\nvar readable = process.stdin;\nreadable.resume();\nreadable.setEncoding( 'utf-8' );\nreadable.on( 'data', function( chunk ) {\n  input += chunk;\n});\n\nreadable.on( 'end', function() {\n  var data = input.split( \"\\n\" );\n  var n = data[0];\n  var tscore = 0;\n  var hscore = 0;\n  for( var i=1; i<data.length; i++ ) {\n    var taha = data[i].split( ' ' );\n    if( taha[0] < taha[1] ) {\n      hscore += 3;\n    } else if( taha[1] < taha[0] ) {\n      tscore += 3;\n    } else {\n      hscore += 1;\n      tscore += 1;\n    }\n  }\n  console.log( tscore+' '+hscore );  \n});", "language": "JavaScript"}
{"filename": "p02534_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['split']('\\x0a');\nlet K = lines[0x0]['trim']() - 0x0;\nlet ans = '';\nfor (let i = 0x0; i < K; i++) {\n    ans += 'ACL';\n}\nconsole['log'](ans);", "test_cases": [["3", "ACLACLACL"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nconst lines = input.split('\\n')\nlet K = lines[0].trim() - 0\n\nlet ans = ''\n\nfor (let i = 0; i < K; i++) {\n    ans += 'ACL'\n}\n\nconsole.log(ans)\n", "language": "JavaScript"}
{"filename": "p02631_1", "type": "JavaScript", "obfuscated": "const [n, aStr] = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\n/);\nlet as = aStr['split'](/\\s/)['map'](Number);\nlet total = as['reduce']((a, b) => a ^ b);\nconsole['log'](as['map'](n => n ^ total)['join']('\\x20'));", "test_cases": [["4\n20 11 9 24", "26 5 7 22"]], "original": "const [n, aStr] = require('fs').readFileSync('/dev/stdin', 'utf8').split(/\\n/)\nlet as = aStr.split(/\\s/).map(Number)\nlet total = as.reduce((a, b) => a ^ b)\nconsole.log(as.map(n => n ^ total).join(' '))", "language": "JavaScript"}
{"filename": "p02793_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const WPBTHr = {\n        'oMhlS': function (callee, param1) {\n            return callee(param1);\n        },\n        'tsaOb': function (x, y) {\n            return x + y;\n        },\n        'ABzXm': function (x, y) {\n            return x <= y;\n        },\n        'vbZpX': function (x, y) {\n            return x + y;\n        },\n        'zSRWg': function (x, y) {\n            return x <= y;\n        },\n        'ISINS': function (x, y) {\n            return x < y;\n        },\n        'sHcsL': function (x, y) {\n            return x === y;\n        },\n        'SPDoK': function (x, y) {\n            return x === y;\n        },\n        'ZGlyM': function (x, y) {\n            return x % y;\n        },\n        'hnBqW': function (x, y) {\n            return x > y;\n        },\n        'JUZcf': function (x, y) {\n            return x < y;\n        },\n        'KOMIx': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'kpHRs': function (x, y) {\n            return x ** y;\n        },\n        'RVyaq': function (x, y) {\n            return x - y;\n        }\n    };\n    const [[N], A] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => 0x0 | v));\n    const MOD = 0x3b9aca00 + 0x7, MAX = Math['max'](...A);\n    const mul = (a, b) => ((a >> 0x10) * b % MOD * 0x10000 + (a & 0xffff) * b) % MOD;\n    const isP = WPBTHr['oMhlS'](Array, WPBTHr['tsaOb'](0xf4240, 0x1))['fill'](!![]);\n    const px = new Map();\n    for (let p = 0x2; WPBTHr['ABzXm'](p, MAX); p++) {\n        if (!isP[p])\n            continue;\n        for (let i = WPBTHr['vbZpX'](p, p); WPBTHr['zSRWg'](i, MAX); i = WPBTHr['vbZpX'](i, p))\n            isP[i] = ![];\n        px['set'](p, 0x0);\n    }\n    const ap = [];\n    for (let i = 0x0; WPBTHr['ISINS'](i, N); i++) {\n        let a = A[i];\n        ap['push'](new Map());\n        for (const [p, x] of px) {\n            if (WPBTHr['sHcsL'](a, 0x1))\n                break;\n            let s = 0x0;\n            while (WPBTHr['SPDoK'](WPBTHr['ZGlyM'](a, p), 0x0)) {\n                a /= p;\n                s++;\n            }\n            if (s)\n                ap[i]['set'](p, s);\n            if (WPBTHr['hnBqW'](s, x))\n                px['set'](p, s);\n        }\n    }\n    let sum = 0x0;\n    for (let i = 0x0; WPBTHr['JUZcf'](i, N); i++) {\n        let B = 0x1;\n        for (const [p, q] of px) {\n            if (!q)\n                continue;\n            B = WPBTHr['KOMIx'](mul, B, WPBTHr['kpHRs'](p, WPBTHr['RVyaq'](q, ap[i]['get'](p) | 0x0)));\n        }\n        sum = WPBTHr['ZGlyM'](WPBTHr['vbZpX'](sum, B), MOD);\n    }\n    return sum;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n2 3 4", "13"], ["5\n12 12 12 12 12", "5"], ["3\n1000000 999999 999998", "996989508"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>0|v));\n  const MOD = 1e9+7, MAX = Math.max(...A);\n  const mul = (a,b) => ((a>>16)*b%MOD*65536+(a&65535)*b)%MOD;\n  const isP = Array(1e6+1).fill(true);\n  const px = new Map();\n  for ( let p = 2; p <= MAX; p++ ) {\n    if ( !isP[p] ) continue;\n    for ( let i = p+p; i <= MAX; i=i+p ) isP[i] = false;\n    px.set(p,0);\n  }\n  const ap = [];\n  for ( let i = 0; i < N; i++ ) {\n    let a = A[i];\n    ap.push(new Map());\n    for ( const [p,x] of px ) {\n      if ( a === 1 )break;\n      let s = 0;\n      while ( a % p === 0 ) {\n        a/=p;\n        s++;\n      }\n      if ( s ) ap[i].set(p,s);\n      if ( s > x ) px.set(p,s);\n    }\n  }\n  let sum = 0;\n  for ( let i = 0; i < N; i++ ) {\n    let B = 1;\n    for ( const [p,q] of px ) {\n      if ( !q ) continue;\n      B = mul( B, p ** (q-(ap[i].get(p)|0)) );\n    }\n    sum = ( sum + B ) % MOD;\n  }\n  return sum;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p02928_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const NdxOPd = {\n        'fsKRd': function (callee, param1) {\n            return callee(param1);\n        },\n        'TOcOa': function (x, y) {\n            return x < y;\n        },\n        'QPyRn': function (x, y) {\n            return x % y;\n        },\n        'vPbQr': function (x, y) {\n            return x % y;\n        },\n        'ELkip': function (x, y) {\n            return x / y;\n        },\n        'cSMjt': function (x, y) {\n            return x * y;\n        },\n        'wchdJ': function (x, y) {\n            return x - y;\n        },\n        'DMQyK': function (x, y) {\n            return x + y;\n        },\n        'cXDDf': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const input1 = input[0x0]['split']('\\x20');\n    const N = parseInt(input1[0x0]);\n    const K = NdxOPd['fsKRd'](parseInt, input1[0x1]);\n    const As = input[0x1]['split']('\\x20')['map'](x => parseInt(x));\n    var count = 0x0;\n    for (i = 0x0; NdxOPd['TOcOa'](i, N); i++) {\n        const uWHaCa = '2|3|4|1|0'['split']('|');\n        let TsqFpc = 0x0;\n        while (!![]) {\n            switch (uWHaCa[TsqFpc++]) {\n            case '0':\n                count = NdxOPd['QPyRn'](count, 0x3b9aca00 + 0x7);\n                continue;\n            case '1':\n                count += NdxOPd['vPbQr'](NdxOPd['ELkip'](NdxOPd['cSMjt'](NdxOPd['cSMjt'](v, NdxOPd['wchdJ'](K, 0x1)), K), 0x2), NdxOPd['DMQyK'](0x3b9aca00, 0x7));\n                continue;\n            case '2':\n                var u = As['slice'](NdxOPd['DMQyK'](i, 0x1))['filter'](x => x < As[i])['length'];\n                continue;\n            case '3':\n                var v = As['filter'](x => x < As[i])['length'];\n                continue;\n            case '4':\n                count += NdxOPd['vPbQr'](NdxOPd['cSMjt'](u, K), NdxOPd['cXDDf'](0x3b9aca00, 0x7));\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](count);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2\n2 1", "3"], ["3 5\n1 1 1", "0"], ["10 998244353\n10 9 8 7 5 6 3 4 2 1", "185297239"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst input1 = input[0].split(\" \")\n\tconst N = parseInt(input1[0])\n\tconst K = parseInt(input1[1])\n\tconst As = input[1].split(\" \").map(x => parseInt(x))\n\n\tvar count = 0\n\tfor(i=0; i < N; i++){\n\t\tvar u = As.slice(i+1).filter(x => x < As[i]).length\n\t\tvar v = As.filter(x => x < As[i]).length\n\t\tcount += (u * K) % (1000000000 + 7);\n\t\tcount += (v * (K-1)*K / 2) % (1000000000 + 7);\n\t\tcount = count % (1000000000 + 7);\n\t}\n\n\tconsole.log(count)\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03128_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var vOddiP = {\n        'xXyCu': function (x, y) {\n            return x - y;\n        },\n        'YDXuT': function (x, y) {\n            return x - y;\n        },\n        'OCQWs': function (x, y) {\n            return x <= y;\n        },\n        'vsObq': function (x, y) {\n            return x !== y;\n        },\n        'tHyvl': function (x, y) {\n            return x - y;\n        },\n        'GpJDp': function (x, y) {\n            return x - y;\n        },\n        'nPqBf': function (x, y) {\n            return x > y;\n        },\n        'zPVwG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var n = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    var m = vOddiP['YDXuT'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    var nummap = [\n        0x0,\n        0x2,\n        0x5,\n        0x5,\n        0x4,\n        0x5,\n        0x6,\n        0x3,\n        0x7,\n        0x6\n    ];\n    var mattis = input[0x1]['split']('\\x20')['map'](v => {\n        return {\n            'val': v,\n            'num': nummap[vOddiP['xXyCu'](v, 0x0)]\n        };\n    });\n    var ans = '';\n    var dp = [];\n    dp[0x0] = '';\n    for (var i = 0x1; vOddiP['OCQWs'](i, n); i++) {\n        for (var j = 0x0; j < m; j++) {\n            var matti = mattis[j];\n            if (vOddiP['vsObq'](dp[vOddiP['YDXuT'](i, matti['num'])], undefined)) {\n                var tv = (dp[vOddiP['tHyvl'](i, matti['num'])] ? dp[vOddiP['GpJDp'](i, matti['num'])] : '') + matti['val'];\n                if (dp[i] === undefined || vOddiP['nPqBf'](vOddiP['zPVwG'](diff, tv, dp[i]), 0x0)) {\n                    dp[i] = tv;\n                }\n            }\n        }\n    }\n    console['log'](dp[n]);\n}\nfunction diff(a, b) {\n    var QtuWzk = {\n        'qwMoR': function (x, y) {\n            return x != y;\n        },\n        'iHNnk': function (x, y) {\n            return x - y;\n        }\n    };\n    if (QtuWzk['qwMoR'](a['length'], b['length']))\n        return QtuWzk['iHNnk'](a['length'], b['length']);\n    for (var i = 0x0; i < a['length']; i++) {\n        if (QtuWzk['qwMoR'](a[i], b[i]))\n            return a[i] - b[i];\n    }\n    return 0x0;\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["20 4\n3 7 8 4", "777773"], ["101 9\n9 8 7 6 5 4 3 2 1", "71111111111111111111111111111111111111111111111111"], ["15 3\n5 4 6", "654"]], "original": "function main(input) {\n  var n = input[0].split(\" \")[0]-0;\n  var m = input[0].split(\" \")[1]-0;\n  var nummap = [0,2,5,5,4,5,6,3,7,6];\n  var mattis = input[1].split(\" \").map(v=>{return {val:v, num:nummap[v-0]}});\n  var ans = \"\";\n  var dp = [];\n  dp[0] = \"\";\n  for(var i=1;i<=n;i++){\n    for(var j=0;j<m;j++){\n      var matti = mattis[j];\n      if(dp[i-matti.num] !== undefined){\n        var tv = (dp[i-matti.num]?dp[i-matti.num]:\"\") + matti.val;\n        if(dp[i] === undefined || diff(tv, dp[i]) > 0){\n          dp[i] = tv;\n        }\n      }\n    }\n  }\n  console.log(dp[n]);\n}\nfunction diff(a, b){\n  if(a.length != b.length) return a.length-b.length;\n  for(var i=0;i<a.length;i++){\n    if(a[i]!=b[i]) return a[i]-b[i];\n  }\n  return 0;\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03155_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var KhPnbm = {\n        'ZCxuv': function (x, y) {\n            return x * y;\n        },\n        'ykZtr': function (x, y) {\n            return x - y;\n        },\n        'BuTqQ': function (x, y) {\n            return x + y;\n        },\n        'RxUav': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a')['map'](Number);\n    console['log'](KhPnbm['ZCxuv'](KhPnbm['ykZtr'](KhPnbm['BuTqQ'](input[0x0], 0x1), input[0x1]), KhPnbm['RxUav'](input[0x0], 0x1) - input[0x2]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n2\n3", "2"], ["100\n1\n1", "10000"], ["5\n4\n2", "8"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\").map(Number)\n\tconsole.log((input[0]+1-input[1])*(input[0]+1-input[2]));\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03167_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const IHiEuJ = {\n        'iciEx': function (x, y) {\n            return x + y;\n        },\n        'qZrOH': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'rHKiJ': function (x, y) {\n            return x < y;\n        },\n        'WjvUT': function (x, y) {\n            return x < y;\n        },\n        'XNDCG': function (x, y) {\n            return x + y;\n        },\n        'VRTbU': function (x, y) {\n            return x - y;\n        },\n        'WRJqF': function (x, y) {\n            return x === y;\n        },\n        'GOXSa': function (x, y) {\n            return x - y;\n        },\n        'wAkDy': function (x, y) {\n            return x > y;\n        },\n        'PNEOO': function (x, y) {\n            return x + y;\n        },\n        'BZfSc': function (x, y) {\n            return x - y;\n        },\n        'XTAiP': function (x, y) {\n            return x - y;\n        },\n        'qlEtK': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    let C = IHiEuJ['iciEx'](0x3b9aca00, 0x7);\n    let H = IHiEuJ['qZrOH'](parseInt, input[0x0][0x0], 0xa);\n    let W = IHiEuJ['qZrOH'](parseInt, input[0x0][0x1], 0xa);\n    let DP = [];\n    for (let i = 0x0; IHiEuJ['rHKiJ'](i, H); i++) {\n        DP['push'](Array['from']({ 'length': W }, () => 0x0));\n    }\n    DP[0x0][0x0] = 0x1;\n    for (let i = 0x1; IHiEuJ['WjvUT'](i, IHiEuJ['XNDCG'](H, W) - 0x1); i++) {\n        for (let j = 0x0; j <= Math['min'](i, IHiEuJ['VRTbU'](H, 0x1)); j++) {\n            if (IHiEuJ['WRJqF'](input[IHiEuJ['iciEx'](j, 0x1)][0x0][IHiEuJ['VRTbU'](i, j)], '#') || IHiEuJ['GOXSa'](i, j) >= W)\n                continue;\n            if (j > 0x0 && IHiEuJ['wAkDy'](i - j, 0x0)) {\n                DP[j][i - j] = IHiEuJ['PNEOO'](DP[IHiEuJ['BZfSc'](j, 0x1)][IHiEuJ['VRTbU'](i, j)], DP[j][IHiEuJ['BZfSc'](i - j, 0x1)]) % C;\n            } else if (IHiEuJ['wAkDy'](j, 0x0)) {\n                DP[j][IHiEuJ['BZfSc'](i, j)] = DP[IHiEuJ['XTAiP'](j, 0x1)][i - j];\n            } else {\n                DP[j][IHiEuJ['qlEtK'](i, j)] = DP[j][IHiEuJ['XTAiP'](i - j, 0x1)];\n            }\n        }\n    }\n    console['log'](DP['pop']()['pop']());\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 4\n...#\n.#..\n....", "3"], ["5 2\n..\n#.\n..\n.#\n..", "0"], ["5 5\n..#..\n.....\n#...#\n.....\n..#..", "24"], ["20 20\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................\n....................", "345263555"]], "original": "\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n\tlet C = 1e9 + 7;\n\tlet H = parseInt(input[0][0], 10);\n\tlet W = parseInt(input[0][1], 10);\n\tlet DP = [];\n\tfor (let i = 0; i < H; i++){\n\t\tDP.push(Array.from({length: W}, () => 0));\n\t}\n\tDP[0][0] = 1;\n\tfor (let i = 1; i < H + W - 1; i ++){\n\t\tfor (let j = 0; j <= Math.min(i, H - 1); j++){\n\t\t\t// console.log(i, j);\n\t\t\tif (input[j + 1][0][i - j] === '#' || i - j >= W) continue;\n\t\t\tif (j > 0 && i - j > 0) {\n\t\t\t\tDP[j][i - j] = (DP[j - 1][i - j] + DP[j][i - j - 1]) % C;\n\t\t\t} else if (j > 0){\n\t\t\t\tDP[j][i - j] = DP[j - 1][i - j];\n\t\t\t} else {\n\t\t\t\tDP[j][i - j] = DP[j][i - j - 1];\n\t\t\t}\n\t\t\t// console.log(DP);\n\t\t}\n\t}\n\t// console.log(DP);\n\tconsole.log(DP.pop().pop());\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03193_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var fEvNZx = {\n        'dSytj': '3|2|1|0|4',\n        'NFNwG': function (x, y) {\n            return x < y;\n        },\n        'ugXMo': function (x, y) {\n            return x >= y;\n        },\n        'VKhTQ': function (x, y) {\n            return x >= y;\n        }\n    };\n    var LJuiTN = fEvNZx['dSytj']['split']('|');\n    var NwctkD = 0x0;\n    while (!![]) {\n        switch (LJuiTN[NwctkD++]) {\n        case '0':\n            for (var i = 0x1; fEvNZx['NFNwG'](i, input['length']); i++) {\n                var n = input[i]['split']('\\x20')['map'](Number);\n                if (fEvNZx['ugXMo'](n[0x0], mem[0x1]) && fEvNZx['VKhTQ'](n[0x1], mem[0x2]))\n                    sum++;\n            }\n            continue;\n        case '1':\n            var sum = 0x0;\n            continue;\n        case '2':\n            var mem = input[0x0]['split']('\\x20')['map'](Number);\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            console['log'](sum);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3 5 2\n10 3\n5 2\n2 5", "2"], ["10 587586158 185430194\n894597290 708587790\n680395892 306946994\n590262034 785368612\n922328576 106880540\n847058850 326169610\n936315062 193149191\n702035777 223363392\n11672949 146832978\n779291680 334178158\n615808191 701464268", "8"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar mem = input[0].split(\" \").map(Number);\n\tvar sum = 0;\n\tfor(var i=1;i<input.length;i++){\n\t\tvar n = input[i].split(\" \").map(Number);\n\t\tif(n[0]>=mem[1]&&n[1]>=mem[2]) sum++;\n\t}\n\tconsole.log(sum)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03504_1", "type": "JavaScript", "obfuscated": "function max(array) {\n    const PTvBCF = {\n        'CAyaC': function (x, y) {\n            return x * y;\n        },\n        'pShUy': function (x, y) {\n            return x < y;\n        }\n    };\n    var result = PTvBCF['CAyaC'](-0x1, Infinity);\n    for (num of array) {\n        if (PTvBCF['pShUy'](result, num)) {\n            result = num;\n        }\n    }\n    return result;\n}\nfunction main(input) {\n    const AeSiLR = {\n        'VQiTC': function (callee, param1) {\n            return callee(param1);\n        },\n        'QmEhV': function (x, y) {\n            return x <= y;\n        },\n        'WZxbv': function (x, y) {\n            return x < y;\n        },\n        'GZtjn': function (x, y) {\n            return x == y;\n        },\n        'CqmKL': function (x, y) {\n            return x * y;\n        },\n        'dhrbK': function (x, y) {\n            return x * y;\n        },\n        'UTIpr': function (x, y) {\n            return x < y;\n        },\n        'ZcqpX': function (x, y) {\n            return x - y;\n        },\n        'DUKzW': function (x, y) {\n            return x < y;\n        },\n        'GSPao': function (x, y) {\n            return x > y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const nums = lines['map'](line => line['split']('\\x20')['map'](x => parseInt(x)));\n    var n_c = nums['shift']();\n    const N = n_c[0x0];\n    const C = n_c[0x1];\n    const t = AeSiLR['VQiTC'](Array, 0x30d42);\n    const max_recorders = AeSiLR['VQiTC'](Array, 0x30d42);\n    max_recorders['fill'](0x0);\n    for (var c = 0x1; AeSiLR['QmEhV'](c, C); c++) {\n        t['fill'](0x0);\n        for (var n = 0x0; AeSiLR['WZxbv'](n, N); n++) {\n            if (AeSiLR['GZtjn'](nums[n][0x2], c)) {\n                t[AeSiLR['CqmKL'](nums[n][0x0], 0x2) - 0x1]++;\n                t[AeSiLR['dhrbK'](nums[n][0x1], 0x2)]--;\n            }\n        }\n        for (var i = 0x1; AeSiLR['UTIpr'](i, 0x30d42); i++) {\n            t[i] += t[AeSiLR['ZcqpX'](i, 0x1)];\n        }\n        for (var i = 0x1; AeSiLR['DUKzW'](i, 0x30d42); i++) {\n            if (AeSiLR['GSPao'](t[i], 0x0)) {\n                max_recorders[i]++;\n            }\n        }\n    }\n    console['log'](AeSiLR['VQiTC'](max, max_recorders));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n1 7 2\n7 8 1\n8 12 1", "2"], ["3 4\n1 3 2\n3 4 4\n1 4 3", "3"], ["9 4\n56 60 4\n33 37 2\n89 90 3\n32 43 1\n67 68 3\n49 51 3\n31 32 3\n70 71 1\n11 12 3", "2"]], "original": "function max(array){\n  var result = -1 * Infinity;\n  for(num of array){\n    if(result < num){result = num;}\n  }\n  return result;\n}\n\nfunction main(input){\n  const lines = input.split('\\n')\n  const nums = lines.map(line => line.split(' ').map(x => parseInt(x)));\n\n  var n_c= nums.shift();\n  const N = n_c[0];\n  const C = n_c[1];\n  const t = Array(200002);\n  const max_recorders = Array(200002);\n  max_recorders.fill(0);\n\n  for(var c=1;c<=C;c++){\n    t.fill(0)\n\n    for(var n=0;n<N;n++){\n      if(nums[n][2]==c){\n        t[nums[n][0]*2-1]++;\n        t[nums[n][1]*2]--;\n      }\n    }\n\n    for(var i=1;i<200002;i++){\n      t[i] += t[i-1];\n    }\n\n    for(var i=1;i<200002;i++){\n      if(t[i]>0){\n        max_recorders[i]++;\n      }\n    }\n\n\n  }\n\n//  console.log(nums);\n//  console.log(t);\n  console.log(max(max_recorders));\n//  console.log((max_recorders));\n}\n\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03575_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var NeSudn = {\n        'KPkuo': '6|1|5|3|0|4|2',\n        'nHilZ': function (x, y) {\n            return x <= y;\n        },\n        'mkzCH': function (x, y) {\n            return x - y;\n        },\n        'gfCCy': function (x, y) {\n            return x <= y;\n        },\n        'DswNO': function (x, y) {\n            return x != y;\n        },\n        'swCjm': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var WGDRif = NeSudn['KPkuo']['split']('|');\n    var jmaDKQ = 0x0;\n    while (!![]) {\n        switch (WGDRif[jmaDKQ++]) {\n        case '0':\n            var ans = 0x0;\n            continue;\n        case '1':\n            var M = input[0x0]['split']('\\x20')[0x1] - 0x0;\n            continue;\n        case '2':\n            console['log'](ans);\n            continue;\n        case '3':\n            for (var i = 0x1; NeSudn['nHilZ'](i, M); i++) {\n                var zsSLAY = '5|0|1|2|3|4'['split']('|');\n                var BusbTK = 0x0;\n                while (!![]) {\n                    switch (zsSLAY[BusbTK++]) {\n                    case '0':\n                        var b = NeSudn['mkzCH'](input[i]['split']('\\x20')[0x1], 0x0);\n                        continue;\n                    case '1':\n                        list[a] = list[a] || {};\n                        continue;\n                    case '2':\n                        list[b] = list[b] || {};\n                        continue;\n                    case '3':\n                        list[a][b] = i;\n                        continue;\n                    case '4':\n                        list[b][a] = i;\n                        continue;\n                    case '5':\n                        var a = NeSudn['mkzCH'](input[i]['split']('\\x20')[0x0], 0x0);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '4':\n            for (var i = 0x1; NeSudn['gfCCy'](i, M); i++) {\n                if (NeSudn['DswNO'](NeSudn['swCjm'](check, list, i), N))\n                    ans++;\n            }\n            continue;\n        case '5':\n            var list = {};\n            continue;\n        case '6':\n            var N = NeSudn['mkzCH'](input[0x0]['split']('\\x20')[0x0], 0x0);\n            continue;\n        }\n        break;\n    }\n}\nfunction check(list, i) {\n    var kROLCD = { 'Xikhz': '1|2|3|0|4' };\n    var rmQovL = kROLCD['Xikhz']['split']('|');\n    var bgMurt = 0x0;\n    while (!![]) {\n        switch (rmQovL[bgMurt++]) {\n        case '0':\n            while (stack['length'] > 0x0) {\n                var now = stack['splice'](0x0, 0x1)[0x0];\n                if (checked[now])\n                    continue;\n                checked[now] = !![];\n                var next = Object['keys'](list[now]);\n                next['forEach'](nxt => {\n                    if (trPvzq['QcKUQ'](list[now][nxt], i)) {\n                        stack['push'](nxt);\n                    }\n                });\n            }\n            continue;\n        case '1':\n            var trPvzq = {\n                'QcKUQ': function (x, y) {\n                    return x != y;\n                }\n            };\n            continue;\n        case '2':\n            var stack = [0x1];\n            continue;\n        case '3':\n            var checked = {};\n            continue;\n        case '4':\n            return Object['keys'](checked)['length'];\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7", "4"], ["3 3\n1 2\n1 3\n2 3", "0"], ["6 5\n1 2\n2 3\n3 4\n4 5\n5 6", "5"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var N = input[0].split(\" \")[0]-0;\n    var M = input[0].split(\" \")[1]-0;\n    var list = {};\n    for(var i=1;i<=M;i++){\n        var a = input[i].split(\" \")[0]-0;\n        var b = input[i].split(\" \")[1]-0;\n        list[a] = list[a]||{};\n        list[b] = list[b]||{};\n        list[a][b] = i;\n        list[b][a] = i;\n    }\n    \n    var ans = 0;\n    for(var i=1;i<=M;i++){\n        if(check(list, i)!=N)ans++;\n    }\n    \n    console.log(ans);\n}\n\n\nfunction check(list, i){\n    var stack = [1];\n    var checked = {};\n    while(stack.length>0){\n        var now = stack.splice(0,1)[0];\n        if(checked[now]) continue;\n        checked[now] = true;\n        var next = Object.keys(list[now]);\n        next.forEach(nxt=>{\n            if(list[now][nxt]!=i){\n                stack.push(nxt);\n            }\n        });\n    }\n    return Object.keys(checked).length;\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));\n\n", "language": "JavaScript"}
{"filename": "p03592_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const AEGCkv = {\n        'sNHTX': function (callee, param1) {\n            return callee(param1);\n        },\n        'wcMLJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'NvWwx': function (x, y) {\n            return x < y;\n        },\n        'CJcCX': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'CvdAw': function (x, y) {\n            return x == y;\n        },\n        'sgdHD': 'Yes'\n    };\n    const Param = input['split']('\\x20');\n    const N = AEGCkv['sNHTX'](i, Param[0x0]);\n    const M = AEGCkv['sNHTX'](i, Param[0x1]);\n    const K = AEGCkv['wcMLJ'](i, Param[0x2]);\n    for (var n = 0x0; AEGCkv['NvWwx'](n, N); n++) {\n        for (var m = 0x0; AEGCkv['NvWwx'](m, M); m++) {\n            var b = AEGCkv['CJcCX'](calcBlack, n, m, N, M);\n            if (AEGCkv['CvdAw'](b, K))\n                return console['log'](AEGCkv['sgdHD']);\n        }\n    }\n    console['log']('No');\n}\nfunction calcBlack(n, m, N, M) {\n    const owHtCm = {\n        'hmesy': function (x, y) {\n            return x + y;\n        },\n        'qFOEa': function (x, y) {\n            return x * y;\n        },\n        'kWjAN': function (x, y) {\n            return x - y;\n        },\n        'oyqEZ': function (x, y) {\n            return x * y;\n        },\n        'btvbJ': function (x, y) {\n            return x * y;\n        }\n    };\n    return owHtCm['hmesy'](N * n - owHtCm['qFOEa'](m, n), owHtCm['kWjAN'](owHtCm['oyqEZ'](M, m), owHtCm['btvbJ'](n, m)));\n}\nfunction i(x) {\n    const KTjRlQ = {\n        'ShprG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return KTjRlQ['ShprG'](parseInt, x, 0xa);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2 2", "Yes"], ["2 2 1", "No"], ["3 5 8", "Yes"], ["7 9 20", "No"]], "original": "function Main(input) {\n    const Param = input.split(' ')\n    const N = i(Param[0])\n    const M = i(Param[1])\n    const K = i(Param[2])\n    for(var n = 0; n < N;n++){\n        for(var m = 0; m < M;m++){\n            var b = calcBlack(n, m, N, M)\n            if(b == K) return console.log('Yes')\n        }    \n    }\n    console.log('No')\n}\nfunction calcBlack(n, m, N, M){\n    return (N * n - m * n) + (M * m - n * m)\n}\nfunction i(x){ return parseInt(x, 10)}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03760_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const kMRbJW = {\n        'hatWb': function (x, y) {\n            return x < y;\n        },\n        'IqPAw': function (x, y) {\n            return x + y;\n        }\n    };\n    s = s['split']('\\x0a');\n    const o = s[0x0]['split']('');\n    const e = s[0x1]['split']('');\n    let ans = '';\n    for (let i = 0x0; kMRbJW['hatWb'](i, kMRbJW['IqPAw'](o['length'], e['length'])); i++) {\n        if (o[i])\n            ans += o[i];\n        if (e[i])\n            ans += e[i];\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["xyz\nabc", "xaybzc"], ["atcoderbeginnercontest\natcoderregularcontest", "aattccooddeerrbreeggiunlnaerrccoonntteesstt"]], "original": "'use strict'\n\nfunction main(s) {\n\n  s = s.split('\\n');\n\n  const o = s[0].split('');\n  const e = s[1].split('');\n\n  let ans = '';\n\n  for (let i = 0; i < o.length + e.length; i++) {\n    if (o[i]) ans += o[i];\n    if (e[i]) ans += e[i];\n  }\n\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03774_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const IPvnEj = {\n        'NXGHR': function (x, y) {\n            return x - y;\n        },\n        'CjaMD': function (callee, param1) {\n            return callee(param1);\n        },\n        'XGKVz': function (x, y) {\n            return x + y;\n        },\n        'lzosh': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0]['split']('\\x20')[0x0]);\n    const M = IPvnEj['CjaMD'](parseInt, input[0x0]['split']('\\x20')[0x1]);\n    let arr = input['slice'](0x1, IPvnEj['XGKVz'](N, 0x1));\n    let points = input['slice'](IPvnEj['lzosh'](N, 0x1), IPvnEj['XGKVz'](M, N) + 0x1);\n    const parse = v => {\n        let temp = v['split']('\\x20')['map'](vv => parseInt(vv));\n        return {\n            'x': temp[0x0],\n            'y': temp[0x1]\n        };\n    };\n    arr = arr['map'](parse);\n    points = points['map'](parse);\n    let indexArr = [];\n    arr['forEach']((v, i) => {\n        let minDist = 0x3b9aca00;\n        let index = 0x0;\n        points['forEach']((w, j) => {\n            let dist = Math['abs'](v['x'] - w['x']) + Math['abs'](IPvnEj['NXGHR'](v['y'], w['y']));\n            if (dist < minDist) {\n                minDist = dist;\n                index = j;\n            }\n        });\n        indexArr['push'](index);\n    });\n    indexArr['forEach'](v => console['log'](v + 0x1));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["2 2\n2 0\n0 0\n-1 0\n1 0", "2\n1"], ["3 4\n10 10\n-10 -10\n3 3\n1 2\n2 3\n3 5\n3 5", "3\n1\n2"], ["5 5\n-100000000 -100000000\n-100000000 100000000\n100000000 -100000000\n100000000 100000000\n0 0\n0 0\n100000000 100000000\n100000000 -100000000\n-100000000 100000000\n-100000000 -100000000", "5\n4\n3\n2\n1"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split('\\n')\n    const N = parseInt(input[0].split(' ')[0])\n    const M = parseInt(input[0].split(' ')[1])\n    let arr = input.slice(1, N + 1)\n    let points = input.slice(N + 1, M + N + 1)\n\n    const parse = (v) => {\n        let temp = v.split(' ').map(vv => parseInt(vv))\n        return {\n            x: temp[0],\n            y: temp[1]\n        }\n    }\n    arr = arr.map(parse)\n    points = points.map(parse)\n\n\n    let indexArr = []\n    arr.forEach((v, i) => {\n        let minDist = 1000000000\n        let index = 0\n        points.forEach((w, j) => {\n            let dist = Math.abs(v.x - w.x) + Math.abs(v.y - w.y)\n            if(dist < minDist){\n                minDist = dist\n                index = j\n            }\n        })\n        indexArr.push(index)\n    })\n\n    indexArr.forEach(v => console.log(v + 1))\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03807_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var OPLPlJ = {\n        'ptFSU': function (x, y) {\n            return x == y;\n        },\n        'bKahf': function (x, y) {\n            return x % y;\n        },\n        'vaSEC': 'YES'\n    };\n    var FJoijy = '0|1|2|5|4|3'['split']('|');\n    var wnJIVB = 0x0;\n    while (!![]) {\n        switch (FJoijy[wnJIVB++]) {\n        case '0':\n            input = input['split']('\\x0a');\n            continue;\n        case '1':\n            var arr = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            var m = 0x0;\n            continue;\n        case '3':\n            console['log'](OPLPlJ['ptFSU'](OPLPlJ['bKahf'](n, 0x2), 0x0) && OPLPlJ['bKahf'](n / 0x2 + m, 0x2) == 0x0 ? OPLPlJ['vaSEC'] : 'NO');\n            continue;\n        case '4':\n            for (var i = 0x0; i < arr['length']; i++) {\n                if (OPLPlJ['bKahf'](arr[i], 0x2) == 0x0)\n                    m++;\n                else\n                    n++;\n            }\n            continue;\n        case '5':\n            var n = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n1 2 3", "YES"], ["5\n1 2 3 4 5", "NO"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar arr = input[1].split(\" \").map(Number);\n\tvar m=0;\n\tvar n=0;\n\tfor(var i=0;i<arr.length;i++){\n\t\tif(arr[i]%2==0) m++;\n\t\telse n++;\n\t}\n // console.log(n,m)\n\tconsole.log((n%2==0&&((n/2)+m)%2==0)?\"YES\":\"NO\")\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03853_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var AFXCRd = {\n        'QlUrq': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['trim']();\n    var tate = parseInt(input['split']('\\x0a')[0x0]['split']('\\x20')[0x0]);\n    for (var i = 0x1; AFXCRd['QlUrq'](i, tate); i++) {\n        console['log'](input['split']('\\x0a')[i]);\n        console['log'](input['split']('\\x0a')[i]);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2\n*.\n.*", "*.\n*.\n.*\n.*"], ["1 4\n***.", "***.\n***."], ["9 20\n.....***....***.....\n....*...*..*...*....\n...*.....**.....*...\n...*.....*......*...\n....*.....*....*....\n.....**..*...**.....\n.......*..*.*.......\n........**.*........\n.........**.........", ".....***....***.....\n.....***....***.....\n....*...*..*...*....\n....*...*..*...*....\n...*.....**.....*...\n...*.....**.....*...\n...*.....*......*...\n...*.....*......*...\n....*.....*....*....\n....*.....*....*....\n.....**..*...**.....\n.....**..*...**.....\n.......*..*.*.......\n.......*..*.*.......\n........**.*........\n........**.*........\n.........**.........\n.........**........."]], "original": "function Main(input) {\n\tinput = input.trim();\n  var tate = parseInt(input.split(\"\\n\")[0].split(\" \")[0]);\n  for(var i = 1; i <= tate; i++){\n    console.log(input.split(\"\\n\")[i]);\n    console.log(input.split(\"\\n\")[i]);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00010_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['some'](function (i) {\n    var jFrHTQ = {\n        'BAWiN': function (x, y) {\n            return x == y;\n        },\n        'Lhiic': function (x, y) {\n            return x * y;\n        },\n        'EVUKv': function (x, y) {\n            return x * y;\n        },\n        'LCpZp': function (x, y) {\n            return x / y;\n        },\n        'woHVb': function (x, y) {\n            return x - y;\n        },\n        'HsHsI': function (x, y) {\n            return x + y;\n        },\n        'SBfuT': function (x, y) {\n            return x - y;\n        },\n        'EDdaD': function (x, y) {\n            return x + y;\n        },\n        'iScZu': function (x, y) {\n            return x - y;\n        },\n        'vgrrF': function (x, y) {\n            return x * y;\n        },\n        'QnrnD': function (x, y) {\n            return x - y;\n        },\n        'BMOTR': function (x, y) {\n            return x * y;\n        },\n        'oflsD': function (x, y) {\n            return x * y;\n        },\n        'oVTZP': function (x, y) {\n            return x - y;\n        },\n        'aiIYe': function (x, y) {\n            return x - y;\n        },\n        'mnsYl': function (x, y) {\n            return x + y;\n        },\n        'jybbf': function (x, y) {\n            return x - y;\n        },\n        'SyHXJ': function (x, y) {\n            return x - y;\n        },\n        'JsCxQ': function (x, y) {\n            return x - y;\n        },\n        'tyRpZ': function (x, y) {\n            return x * y;\n        },\n        'sxiDk': function (x, y) {\n            return x - y;\n        },\n        'GrWjg': function (x, y) {\n            return x - y;\n        },\n        'lkJEN': function (x, y) {\n            return x * y;\n        }\n    };\n    j = i['split']('\\x20');\n    if (jFrHTQ['BAWiN'](j['length'], 0x6))\n        a = j[0x0], b = j[0x1], c = j[0x2], d = j[0x3], e = j[0x4], f = j[0x5], g = a * a, h = jFrHTQ['Lhiic'](b, b), k = jFrHTQ['Lhiic'](c, c), l = jFrHTQ['EVUKv'](d, d), m = e * e, n = jFrHTQ['Lhiic'](f, f), p = jFrHTQ['LCpZp'](jFrHTQ['woHVb'](jFrHTQ['EVUKv'](b - f, jFrHTQ['woHVb'](jFrHTQ['HsHsI'](h - l, g), k)), jFrHTQ['EVUKv'](jFrHTQ['woHVb'](b, d), jFrHTQ['SBfuT'](jFrHTQ['EDdaD'](jFrHTQ['iScZu'](h, n), g), m))), jFrHTQ['vgrrF'](0x2, jFrHTQ['SBfuT'](b, f)) * jFrHTQ['QnrnD'](a, c) - jFrHTQ['BMOTR'](jFrHTQ['oflsD'](0x2, jFrHTQ['oVTZP'](b, d)), jFrHTQ['woHVb'](a, e))), q = jFrHTQ['QnrnD'](jFrHTQ['EVUKv'](jFrHTQ['aiIYe'](a, e), jFrHTQ['aiIYe'](jFrHTQ['mnsYl'](jFrHTQ['iScZu'](g, k), h), l)), jFrHTQ['oflsD'](a - c, jFrHTQ['jybbf'](jFrHTQ['mnsYl'](jFrHTQ['SyHXJ'](g, m), h), n))) / jFrHTQ['JsCxQ'](jFrHTQ['BMOTR'](0x2 * jFrHTQ['SBfuT'](a, e), jFrHTQ['iScZu'](b, d)), jFrHTQ['vgrrF'](0x2, jFrHTQ['oVTZP'](a, c)) * jFrHTQ['oVTZP'](b, f)), console['log'](p['toFixed'](0x3), q['toFixed'](0x3), Math['sqrt'](jFrHTQ['EDdaD'](jFrHTQ['tyRpZ'](jFrHTQ['sxiDk'](a, p), jFrHTQ['GrWjg'](a, p)), jFrHTQ['lkJEN'](jFrHTQ['oVTZP'](b, q), b - q)))['toFixed'](0x3));\n});", "test_cases": [["1\n0.0 0.0 2.0 0.0 2.0 2.0", "1.000 1.000 1.414"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){j=i.split(' ');if(j.length==6)a=j[0],b=j[1],c=j[2],d=j[3],e=j[4],f=j[5],g=a*a,h=b*b,k=c*c,l=d*d,m=e*e,n=f*f,p=((b-f)*(h-l+g-k)-(b-d)*(h-n+g-m))/(2*(b-f)*(a-c)-2*(b-d)*(a-e)),q=((a-e)*(g-k+h-l)-(a-c)*(g-m+h-n))/(2*(a-e)*(b-d)-2*(a-c)*(b-f)),console.log(p.toFixed(3),q.toFixed(3),Math.sqrt((a-p)*(a-p)+(b-q)*(b-q)).toFixed(3))})", "language": "JavaScript"}
{"filename": "p00029_1", "type": "JavaScript", "obfuscated": "process['stdin']['on']('data', function (c, o, m) {\n    var sxHEmk = {\n        'WfOIo': function (x, y) {\n            return x < y;\n        },\n        'qEkJB': function (x, y) {\n            return x + y;\n        },\n        'xbmPQ': function (x, y) {\n            return x + y;\n        }\n    };\n    o = {}, n = 0x0, s = '';\n    sxHEmk['qEkJB'](c, '')['trim']()['split']('\\x20')['some'](function (a) {\n        sxHEmk['WfOIo'](n, o[a = a['toLowerCase']()] ? ++o[a] : o[a] = 0x1) && (n = o[m = a]);\n        sxHEmk['WfOIo'](s['length'], a['length']) && (s = a);\n    });\n    console['log'](sxHEmk['qEkJB'](sxHEmk['xbmPQ'](m, '\\x20'), s));\n})['resume']();", "test_cases": [["Thank you for your mail and your lectures", "your lectures"]], "original": "process.stdin.on(\"data\",function(c,o,m){\n\to={},n=0,s=\"\";\n\t(c+\"\").trim().split(\" \").some(function(a){\n\t\tn<(o[a=a.toLowerCase()]?++o[a]:(o[a]=1))&&(n=o[m=a]);\n\t\ts.length<a.length&&(s=a);\n\t});\n\tconsole.log(m+\" \"+s);\n}).resume();", "language": "JavaScript"}
{"filename": "p02384_1", "type": "JavaScript", "obfuscated": "ptrn = [\n    [\n        0x0,\n        0x1,\n        0x2\n    ],\n    [\n        0x0,\n        0x2,\n        0x4\n    ],\n    [\n        0x0,\n        0x4,\n        0x3\n    ],\n    [\n        0x0,\n        0x3,\n        0x1\n    ],\n    [\n        0x1,\n        0x5,\n        0x2\n    ],\n    [\n        0x1,\n        0x2,\n        0x0\n    ],\n    [\n        0x1,\n        0x0,\n        0x3\n    ],\n    [\n        0x1,\n        0x3,\n        0x5\n    ],\n    [\n        0x2,\n        0x1,\n        0x5\n    ],\n    [\n        0x2,\n        0x5,\n        0x4\n    ],\n    [\n        0x2,\n        0x4,\n        0x0\n    ],\n    [\n        0x2,\n        0x0,\n        0x1\n    ]\n];\nfunction dice(num) {\n    var zbzEgQ = {\n        'YyBhj': function (x, y) {\n            return x * y;\n        },\n        'aURiE': function (x, y) {\n            return x < y;\n        },\n        'kOHci': function (x, y) {\n            return x === y;\n        }\n    };\n    this['n'] = num;\n    this['check'] = function (top, front) {\n        top = this['n']['indexOf'](top);\n        front = this['n']['indexOf'](front);\n        var flag = !![];\n        if (top > 0x2) {\n            top = 0x5 - top;\n            flag = ![];\n        }\n        for (let i = zbzEgQ['YyBhj'](0x4, top); zbzEgQ['aURiE'](i, 0xc); i++) {\n            if (flag && ptrn[i][0x1] === front) {\n                console['log'](this['n'][ptrn[i][0x2]]);\n                break;\n            } else if (!flag && zbzEgQ['kOHci'](ptrn[i][0x2], front)) {\n                console['log'](this['n'][ptrn[i][0x1]]);\n                break;\n            }\n        }\n    };\n}\nfunction Main(input) {\n    var yYWbuA = {\n        'gwnmi': function (x, y) {\n            return x + y;\n        },\n        'RwSCi': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    var dice_a = new dice(input[0x0]['split']('\\x20'));\n    input['slice'](0x2, yYWbuA['gwnmi'](0x2, yYWbuA['RwSCi'](Number, input[0x1])))['forEach'](function (d) {\n        t = d['split']('\\x20');\n        dice_a['check'](t[0x0], t[0x1]);\n    });\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 2 3 4 5 6\n3\n6 5\n1 3\n3 2", "3\n5\n6"]], "original": "ptrn = [[0, 1, 2], [0, 2, 4], [0, 4, 3], [0, 3, 1],\n        [1, 5, 2], [1, 2, 0], [1, 0, 3], [1, 3, 5],\n        [2, 1, 5], [2, 5, 4], [2, 4, 0], [2, 0, 1]];\nfunction dice(num) {\n  this.n = num;  // array\n  this.check = function(top, front) {\n    top = this.n.indexOf(top);\n    front = this.n.indexOf(front);\n    var flag = true;\n    if(top > 2) {\n      top = 5 - top;\n      flag = false;\n    }\n    for(let i = 4 * top; i < 12; i++) {\n      if(flag && ptrn[i][1] === front) {\n        console.log(this.n[ptrn[i][2]]);\n        break;\n      }else if(!flag && ptrn[i][2] === front) {\n        console.log(this.n[ptrn[i][1]]);\n        break;\n      }\n    }\n  }\n}\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var dice_a = new dice(input[0].split(\" \"));\n  input.slice(2, 2+Number(input[1])).forEach(function(d){\n    t = d.split(\" \");\n    dice_a.check(t[0], t[1]);\n  });\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02385_1", "type": "JavaScript", "obfuscated": "function move(x, arr) {\n    var jlsGxE = {\n        'EJWUI': '9|4|5|2|6|0|3|8|7|10|1|11',\n        'GmpCp': function (x, y) {\n            return x == y;\n        },\n        'obcOK': function (x, y) {\n            return x == y;\n        },\n        'EHpnb': function (x, y) {\n            return x == y;\n        }\n    };\n    var sLGale = jlsGxE['EJWUI']['split']('|');\n    var FlxJkU = 0x0;\n    while (!![]) {\n        switch (sLGale[FlxJkU++]) {\n        case '0':\n            var d6 = arr[0x5];\n            continue;\n        case '1':\n            if (jlsGxE['GmpCp'](x, 'W'))\n                after = [\n                    d3,\n                    d2,\n                    d6,\n                    d1,\n                    d5,\n                    d4\n                ];\n            continue;\n        case '2':\n            var d4 = arr[0x3];\n            continue;\n        case '3':\n            var after = [];\n            continue;\n        case '4':\n            var d2 = arr[0x1];\n            continue;\n        case '5':\n            var d3 = arr[0x2];\n            continue;\n        case '6':\n            var d5 = arr[0x4];\n            continue;\n        case '7':\n            if (jlsGxE['obcOK'](x, 'S'))\n                after = [\n                    d5,\n                    d1,\n                    d3,\n                    d4,\n                    d6,\n                    d2\n                ];\n            continue;\n        case '8':\n            if (jlsGxE['EHpnb'](x, 'N'))\n                after = [\n                    d2,\n                    d6,\n                    d3,\n                    d4,\n                    d1,\n                    d5\n                ];\n            continue;\n        case '9':\n            var d1 = arr[0x0];\n            continue;\n        case '10':\n            if (jlsGxE['EHpnb'](x, 'E'))\n                after = [\n                    d4,\n                    d2,\n                    d1,\n                    d6,\n                    d5,\n                    d3\n                ];\n            continue;\n        case '11':\n            return after;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar diceA = Arr[0x0]['split']('\\x20')['map'](Number);\nvar diceB = Arr[0x1]['split']('\\x20')['map'](Number);\nvar NSEW = 'NSEW'['split']('');\nfor (var i = 0x0; i < 0x64; i++) {\n    var r = Math['floor'](Math['random']() * 0x4);\n    diceA = move(NSEW[r], diceA);\n    var flag = diceA['every'](function (v, i) {\n        var sdWUxN = {\n            'NXBEL': function (x, y) {\n                return x == y;\n            }\n        };\n        return sdWUxN['NXBEL'](v, diceB[i]);\n    });\n    if (flag)\n        break;\n}\nconsole['log'](flag ? 'Yes' : 'No');", "test_cases": [["1 2 3 4 5 6\n6 2 4 3 5 1", "Yes"], ["1 2 3 4 5 6\n6 5 4 3 2 1", "No"]], "original": "function move(x,arr){\nvar d1=arr[0];\nvar d2=arr[1];\nvar d3=arr[2];\nvar d4=arr[3];\nvar d5=arr[4];\nvar d6=arr[5];\nvar after=[];\nif(x==\"N\")after=[d2,d6,d3,d4,d1,d5];\nif(x==\"S\")after=[d5,d1,d3,d4,d6,d2];\nif(x==\"E\")after=[d4,d2,d1,d6,d5,d3];\nif(x==\"W\")after=[d3,d2,d6,d1,d5,d4];\nreturn after;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar diceA=Arr[0].split(\" \").map(Number);\nvar diceB=Arr[1].split(\" \").map(Number);\nvar NSEW=\"NSEW\".split(\"\");\n\nfor(var i=0;i<100;i++){\n   var r = Math.floor(Math.random () * 4) ;\n   diceA=move(NSEW[r],diceA)\n   var flag=diceA.every(function(v,i){return (v==diceB[i]);});\n   if(flag)break;\n}\nconsole.log(flag?\"Yes\":\"No\");", "language": "JavaScript"}
{"filename": "p02695_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\n(input => {\n    const gSpKrs = {\n        'UQcWw': function (x, y) {\n            return x === y;\n        },\n        'qNCHY': function (x, y) {\n            return x - y;\n        },\n        'ZKZyz': function (x, y) {\n            return x < y;\n        },\n        'zooAl': function (x, y) {\n            return x + y;\n        },\n        'OCKqR': function (x, y) {\n            return x !== y;\n        },\n        'vgkeZ': function (x, y) {\n            return x >= y;\n        }\n    };\n    const rows = input['split']('\\x0a');\n    const [N, M, Q] = rows[0x0]['split']('\\x20')['map'](Number);\n    const A = [];\n    for (let i = 0x0; gSpKrs['ZKZyz'](i, Q); i++) {\n        A[i] = rows[gSpKrs['zooAl'](i, 0x1)]['split']('\\x20')['map'](Number);\n    }\n    const ss = [];\n    const s = [];\n    let d = 0x0;\n    let v = 0x0;\n    while (gSpKrs['OCKqR'](v, undefined)) {\n        if (d === N) {\n            ss['push']([...s]);\n            s['pop']();\n            v++;\n            d--;\n        } else if (gSpKrs['vgkeZ'](v, M)) {\n            v = s['pop']();\n            d--;\n        } else {\n            s['push'](gSpKrs['zooAl'](v, 0x1));\n            d++;\n        }\n    }\n    let res = 0x0;\n    ss['forEach'](s => {\n        const OLRsYs = {\n            'AcjJV': function (x, y) {\n                return gSpKrs['UQcWw'](x, y);\n            },\n            'YtbWY': function (x, y) {\n                return gSpKrs['qNCHY'](x, y);\n            },\n            'LJiwS': function (x, y) {\n                return x - y;\n            }\n        };\n        let sum = 0x0;\n        A['forEach'](a => {\n            if (OLRsYs['AcjJV'](OLRsYs['YtbWY'](s[OLRsYs['LJiwS'](a[0x1], 0x1)], s[OLRsYs['LJiwS'](a[0x0], 0x1)]), a[0x2])) {\n                sum += a[0x3];\n            }\n        });\n        res = Math['max'](res, sum);\n    });\n    console['log'](res);\n})(input);", "test_cases": [["3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10", "110"], ["4 6 10\n2 4 1 86568\n1 4 0 90629\n2 3 0 90310\n3 4 1 29211\n3 4 3 78537\n3 4 2 8580\n1 2 1 96263\n1 4 2 2156\n1 2 0 94325\n1 4 3 94328", "357500"], ["10 10 1\n1 10 9 1", "1"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n;(input => {\n    const rows = input.split('\\n')\n    const [N, M, Q] = rows[0].split(' ').map(Number)\n    const A = []\n    for (let i = 0; i < Q; i++) {\n        A[i] = rows[i + 1].split(' ').map(Number)\n    }\n\n    const ss = []\n    const s = []\n    let d = 0\n    let v = 0\n    while (v !== undefined) {\n        if (d === N) {\n            ss.push([...s])\n            s.pop()\n            v++\n            d--\n        } else if (v >= M) {\n            v = s.pop()\n            d--\n        } else {\n            s.push(v + 1)\n            d++\n        }\n    }\n\n    let res = 0\n    ss.forEach(s => {\n        let sum = 0\n        A.forEach(a => {\n            if (s[a[1] - 1] - s[a[0] - 1] === a[2]) {\n                sum += a[3]\n            }\n        })\n        res = Math.max(res, sum)\n    })\n\n    console.log(res)\n\n})(input)\n", "language": "JavaScript"}
{"filename": "p02873_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var REXtFG = {\n        'rsDTU': '5|12|0|10|3|7|8|4|2|11|9|6|1',\n        'vystI': function (x, y) {\n            return x == y;\n        },\n        'fMsap': function (x, y) {\n            return x == y;\n        },\n        'xJoZJ': function (x, y) {\n            return x < y;\n        },\n        'aruJW': function (x, y) {\n            return x / y;\n        },\n        'riftr': function (x, y) {\n            return x * y;\n        },\n        'agfQX': function (x, y) {\n            return x + y;\n        },\n        'JYPzD': function (x, y) {\n            return x - y;\n        }\n    };\n    var KUMZfF = REXtFG['rsDTU']['split']('|');\n    var CazoPv = 0x0;\n    while (!![]) {\n        switch (KUMZfF[CazoPv++]) {\n        case '0':\n            var Muki = '>';\n            continue;\n        case '1':\n            console['log'](Sum);\n            continue;\n        case '2':\n            for (var i = 0x0; i < Slong; i++) {\n                if (REXtFG['vystI'](S[i], Muki)) {\n                    if (REXtFG['fMsap'](Muki, '>')) {\n                        Left++;\n                    } else {\n                        Right++;\n                    }\n                    Out = 0x0;\n                } else {\n                    if (REXtFG['vystI'](Muki, '<')) {\n                        V['push']({\n                            'L': Left,\n                            'R': Right\n                        });\n                        Muki = '>';\n                        Left = 0x0;\n                        Right = 0x0;\n                        Left++;\n                        Out = 0x1;\n                    } else {\n                        Muki = '<';\n                        Right++;\n                        Out = 0x0;\n                    }\n                }\n            }\n            continue;\n        case '3':\n            var V = [];\n            continue;\n        case '4':\n            var Sum = 0x0;\n            continue;\n        case '5':\n            var S = input['split']('');\n            continue;\n        case '6':\n            for (var i = 0x0; REXtFG['xJoZJ'](i, V['length']); i++) {\n                Sum += REXtFG['aruJW'](REXtFG['riftr'](V[i]['L'], REXtFG['agfQX'](V[i]['L'], 0x1)), 0x2);\n                Sum += V[i]['R'] * (V[i]['R'] + 0x1) / 0x2;\n            }\n            continue;\n        case '7':\n            var Left = 0x0;\n            continue;\n        case '8':\n            var Right = 0x0;\n            continue;\n        case '9':\n            for (var i = 0x1; REXtFG['xJoZJ'](i, V['length']); i++) {\n                if (V[REXtFG['JYPzD'](i, 0x1)]['R'] < V[i]['L']) {\n                    V[REXtFG['JYPzD'](i, 0x1)]['R']--;\n                } else {\n                    V[i]['L']--;\n                }\n            }\n            continue;\n        case '10':\n            var Out = 0x1;\n            continue;\n        case '11':\n            if (REXtFG['fMsap'](Out, 0x0)) {\n                V['push']({\n                    'L': Left,\n                    'R': Right\n                });\n            }\n            continue;\n        case '12':\n            var Slong = S['length'];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["<>>", "3"], ["<>>><<><<<<<>>><", "28"]], "original": "function Main(input) {\n  var S = input.split(\"\");\n  var Slong = S.length\n  var Muki = \">\";\n  var Out = 1;\n  var V = [];\n  var Left = 0;\n  var Right = 0;\n  var Sum = 0;\n  for(var i = 0;i<Slong;i++){\n\n    if(S[i] == Muki){\n      if(Muki == \">\"){\n        Left ++;\n    }else{\n      Right ++;\n    }\n    Out = 0;\n  }else{\n    if(Muki == \"<\"){\n      V.push({L:Left,R:Right})\n      Muki = \">\"\n      Left = 0;\n      Right = 0;\n      Left ++;\n      Out = 1;\n    }else{\n      Muki = \"<\"\n      Right ++;\n      Out = 0;\n    }\n  }\n  }\n  if(Out == 0){\n  V.push({L:Left,R:Right})\n  }\n  \n//console.log(V);\nfor(var i=1;i<V.length;i++){\n  if(V[i-1].R < V[i].L){\n    V[i-1].R --; \n  }else{\n    V[i].L --;\n  }\n}\n//  console.log(V);\nfor(var i=0;i<V.length;i++){\n    Sum += (V[i].L*(V[i].L+1))/2;\n//    console.log((V[i].L*(V[i].L+1))/2);\n    Sum += (V[i].R*(V[i].R+1))/2;\n//    console.log((V[i].R*(V[i].R+1))/2);\n  }\n  console.log(Sum);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03401_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var tGVtbO = {\n        'YDKkF': '2|3|5|4|7|6|0|1',\n        'EdVEN': function (x, y) {\n            return x <= y;\n        },\n        'YeAqA': function (x, y) {\n            return x + y;\n        },\n        'KbrdB': function (x, y) {\n            return x - y;\n        },\n        'QZDDU': function (x, y) {\n            return x - y;\n        },\n        'YLthy': '4|2|3|1|0',\n        'cYqHw': function (x, y) {\n            return x - y;\n        }\n    };\n    var IwCXwp = tGVtbO['YDKkF']['split']('|');\n    var zhvDHB = 0x0;\n    while (!![]) {\n        switch (IwCXwp[zhvDHB++]) {\n        case '0':\n            for (var i = 0x1; tGVtbO['EdVEN'](i, n); i++) {\n                llist[i] = tGVtbO['YeAqA'](llist[tGVtbO['KbrdB'](i, 0x1)], Math['abs'](tGVtbO['KbrdB'](list[i], list[tGVtbO['QZDDU'](i, 0x1)])));\n                rlist[n - i] = tGVtbO['YeAqA'](rlist[n - i + 0x1], Math['abs'](tGVtbO['KbrdB'](list[tGVtbO['QZDDU'](n, i) + 0x1], list[tGVtbO['KbrdB'](n, i) + 0x2])));\n            }\n            continue;\n        case '1':\n            for (var i = 0x1; tGVtbO['EdVEN'](i, n); i++) {\n                var YaXRrA = tGVtbO['YLthy']['split']('|');\n                var ybyXIE = 0x0;\n                while (!![]) {\n                    switch (YaXRrA[ybyXIE++]) {\n                    case '0':\n                        console['log'](ans);\n                        continue;\n                    case '1':\n                        ans += Math['abs'](list[i - 0x1] - list[tGVtbO['YeAqA'](i, 0x1)]);\n                        continue;\n                    case '2':\n                        ans += llist[tGVtbO['cYqHw'](i, 0x1)];\n                        continue;\n                    case '3':\n                        ans += rlist[i] || 0x0;\n                        continue;\n                    case '4':\n                        var ans = 0x0;\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '2':\n            var n = tGVtbO['cYqHw'](input[0x0], 0x0);\n            continue;\n        case '3':\n            var list = [0x0]['concat'](input[0x1]['split']('\\x20')['map'](v => v - 0x0), [0x0]);\n            continue;\n        case '4':\n            llist[0x0] = 0x0;\n            continue;\n        case '5':\n            var llist = [];\n            continue;\n        case '6':\n            rlist[n] = 0x0;\n            continue;\n        case '7':\n            var rlist = [];\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["3\n3 5 -1", "12\n8\n10"], ["5\n1 1 1 2 0", "4\n4\n4\n2\n4"], ["6\n-679 -2409 -3258 3095 -3291 -4462", "21630\n21630\n19932\n8924\n21630\n19288"]], "original": "function main(input) {\n    var n = input[0]-0;\n    var list = [0].concat(input[1].split(\" \").map(v=>v-0), [0]);\n    var llist = []; llist[0] = 0;\n    var rlist = []; rlist[n] = 0;\n    for(var i=1;i<=n;i++){\n        llist[i] = llist[i-1] + Math.abs(list[i]-list[i-1]);\n        rlist[n-i] = rlist[n-i+1] + Math.abs(list[n-i+1]-list[n-i+2]);\n    }\n    for(var i=1;i<=n;i++){\n        var ans = 0;\n        ans += llist[i-1];\n        ans += rlist[i]||0;\n        ans += Math.abs(list[i-1]-list[i+1]);\n        console.log(ans);\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p03463_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlet N = input['split']('\\x20')[0x0] * 0x1;\nlet A = input['split']('\\x20')[0x1] * 0x1;\nlet B = input['split']('\\x20')[0x2] * 0x1;\nlet dist = Math['abs'](A - B) % 0x2;\nlet ans = dist == 0x0 ? 'Alice' : 'Borys';\nconsole['log'](ans);", "test_cases": [["5 2 4", "Alice"], ["2 1 2", "Borys"], ["58 23 42", "Borys"]], "original": "'use strict'\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nlet N = input.split(' ')[0]*1;\nlet A = input.split(' ')[1]*1;\nlet B = input.split(' ')[2]*1;\nlet dist = Math.abs(A - B)%2;\nlet ans = dist == 0? \"Alice\" : \"Borys\";\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03476_1", "type": "JavaScript", "obfuscated": "console['log'](function (args) {\n    const LwqhZt = {\n        'WYumh': function (callee, param1) {\n            return callee(param1);\n        },\n        'vYucM': function (callee, param1) {\n            return callee(param1);\n        },\n        'BERgD': function (x, y) {\n            return x + y;\n        },\n        'Pzsbj': function (x, y) {\n            return x < y;\n        },\n        'TmpoW': function (x, y) {\n            return x / y;\n        },\n        'uwyth': function (x, y) {\n            return x + y;\n        },\n        'adSrU': function (x, y) {\n            return x + y;\n        },\n        'MSmOS': function (x, y) {\n            return x + y;\n        },\n        'uzNXr': function (x, y) {\n            return x < y;\n        },\n        'duErG': function (x, y) {\n            return x / y;\n        },\n        'MwSQn': function (x, y) {\n            return x - y;\n        },\n        'TKRWZ': function (x, y) {\n            return x - y;\n        }\n    };\n    const [[Q], ...tmp] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const MAX = 0x186a0;\n    const a = LwqhZt['WYumh'](Array, MAX)['fill'](!![]);\n    const s = LwqhZt['vYucM'](Array, LwqhZt['BERgD'](MAX, 0x2))['fill'](0x0);\n    a[0x0] = ![];\n    s[0x2] = 0x1;\n    for (let i = 0x1; LwqhZt['Pzsbj'](i, MAX); i++) {\n        if (a[i]) {\n            const n = 0x2 * i + 0x1;\n            if (~i & 0x1 && a[LwqhZt['TmpoW'](i, 0x2)])\n                s[LwqhZt['uwyth'](i, 0x1)] += 0x1;\n            for (let j = LwqhZt['BERgD'](i, n); j < MAX; j = LwqhZt['adSrU'](j, n))\n                a[j] = ![];\n        }\n        s[i + 0x2] += s[LwqhZt['MSmOS'](i, 0x1)];\n    }\n    const x = [];\n    for (let i = 0x0; LwqhZt['uzNXr'](i, Q); i++) {\n        const l = LwqhZt['duErG'](LwqhZt['MwSQn'](tmp[i][0x0], 0x1), 0x2);\n        const r = LwqhZt['TKRWZ'](tmp[i][0x1], 0x1) / 0x2 + 0x1;\n        x['push'](LwqhZt['TKRWZ'](s[r], s[l]));\n    }\n    return x['join']('\\x0a');\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["1\n3 7", "2"], ["4\n13 13\n7 11\n7 11\n2017 2017", "1\n0\n0\n1"], ["6\n1 53\n13 91\n37 55\n19 51\n73 91\n13 49", "4\n4\n1\n1\n1\n2"]], "original": "console.log(function(args){\n  const [[Q],...tmp] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  const MAX = 1e5;\n  const a = Array(MAX).fill(true);\n  const s = Array(MAX+2).fill(0);\n  a[0] = false; s[2] = 1;\n  for ( let i = 1; i < MAX; i++ ) {\n    if ( a[i] ) {\n      const n = 2*i+1;\n      if ( ~i&1 && a[i/2] ) s[i+1] += 1;\n      for ( let j = i+n; j < MAX; j=j+n ) a[j] = false;\n    }\n    s[i+2] += s[i+1];\n  }\n  const x = [];\n  for ( let i = 0; i < Q; i++ ) {\n    const l = ( tmp[i][0] - 1 ) / 2;\n    const r = ( tmp[i][1] - 1 ) / 2 + 1;\n    x.push( s[r] - s[l] );\n  }\n  return x.join('\\n');\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03550_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const EoTKYv = {\n        'BeejC': function (x, y) {\n            return x - y;\n        },\n        'VMQOg': function (x, y) {\n            return x - y;\n        },\n        'vnenk': function (x, y) {\n            return x < y;\n        },\n        'dpNEy': function (x, y) {\n            return x - y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const NZW = lines['shift']()['split']('\\x20')['map'](x => parseInt(x));\n    const N = NZW[0x0];\n    const Z = NZW[0x1];\n    const W = NZW[0x2];\n    const A = lines['shift']()['split']('\\x20')['map'](x => parseInt(x));\n    const initial = Math['abs'](EoTKYv['BeejC'](Z, W));\n    var fetch_n_1 = Math['abs'](A[EoTKYv['BeejC'](N, 0x1)] - A[EoTKYv['VMQOg'](N, 0x2)]);\n    if (EoTKYv['vnenk'](N, 0x2)) {\n        fetch_n_1 = 0x0;\n    }\n    const fetch_n = Math['abs'](EoTKYv['VMQOg'](A[EoTKYv['dpNEy'](N, 0x1)], W));\n    const result = Math['max'](initial, fetch_n_1, fetch_n);\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 100 100\n10 1000 100", "900"], ["3 100 1000\n10 100 100", "900"], ["5 1 1\n1 1 1 1 1", "0"], ["1 1 1\n1000000000", "999999999"]], "original": "function main(input){\n  const lines = input.split('\\n');\n  const NZW = lines.shift().split(' ').map(x => parseInt(x));\n  const N = NZW[0];\n  const Z = NZW[1];\n  const W = NZW[2];\n  const A = lines.shift().split(' ').map(x => parseInt(x));\n\n  // 初期を維持、n-1取る、n取る\n\n  const initial = Math.abs(Z-W);\n  var fetch_n_1 = Math.abs(A[N-1] - A[N-2]);\n  if(N<2){fetch_n_1=0}\n  const fetch_n = Math.abs(A[N-1]-W);\n\n  const result = Math.max(initial, fetch_n_1, fetch_n)\n  console.log(result);\n\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03696_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var JQvtSs = {\n        'QWnAi': '5|6|2|7|3|4|0|1|8',\n        'wnoUX': function (x, y) {\n            return x + y;\n        },\n        'IdFsI': function (x, y) {\n            return x != y;\n        },\n        'bkMtU': function (x, y) {\n            return x + y;\n        },\n        'oBpVK': function (x, y) {\n            return x == y;\n        },\n        'pqsgO': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var ejSzGh = JQvtSs['QWnAi']['split']('|');\n    var tlAdEY = 0x0;\n    while (!![]) {\n        switch (ejSzGh[tlAdEY++]) {\n        case '0':\n            for (var i = 0x0; i < right; i++) {\n                input[0x1] = JQvtSs['wnoUX']('(', input[0x1]);\n            }\n            continue;\n        case '1':\n            for (var i = 0x0; i < left; i++) {\n                input[0x1] += ')';\n            }\n            continue;\n        case '2':\n            var left = 0x0;\n            continue;\n        case '3':\n            while (JQvtSs['IdFsI'](tmpInput['indexOf']('()'), -0x1)) {\n                tmpInput = tmpInput['replace']('()', '');\n            }\n            continue;\n        case '4':\n            for (var i = 0x0; i < tmpInput['length']; i++) {\n                var tmp = tmpInput['slice'](i, JQvtSs['bkMtU'](i, 0x1));\n                if (JQvtSs['oBpVK'](tmp, '(')) {\n                    left++;\n                } else if (JQvtSs['oBpVK'](tmp, ')')) {\n                    right++;\n                }\n            }\n            continue;\n        case '5':\n            input = input['trim']()['split']('\\x0a');\n            continue;\n        case '6':\n            var tmpInput = JSON['parse'](JSON['stringify'](input[0x1]));\n            continue;\n        case '7':\n            var right = 0x0;\n            continue;\n        case '8':\n            JQvtSs['pqsgO'](myout, input[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n())", "(())"], ["6\n)))())", "(((()))())"], ["8\n))))((((", "(((())))(((())))"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\tinput = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var tmpInput = JSON.parse(JSON.stringify(input[1]));\n  var left = 0;\n  var right = 0;\n  while(tmpInput.indexOf(\"()\") != -1){\n  \ttmpInput = tmpInput.replace(\"()\",\"\");\n\t}\n  //myout(tmpInput);\n  for(var i = 0; i < tmpInput.length; i++){\n    var tmp = tmpInput.slice(i, i + 1);\n    if(tmp == \"(\"){\n       left++;\n    }else if(tmp == \")\"){\n       right++;\n    }\n  }\n  for(var i = 0; i < right; i++){\n    input[1] = \"(\" + input[1];\n  }\n  for(var i = 0; i < left; i++){\n    input[1] += \")\";\n  }\n  myout(input[1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03861_1", "type": "JavaScript", "obfuscated": "const padLeft = (w, l, c) => ([...Array(l)]['map'](_ => c)['join']('') + w)['slice'](l * -0x1);\nconst split = (w, n) => (ws => ws['reduce']((acc, _, i) => i % n ? acc : [\n    ...acc,\n    ws['slice'](i, i + n)['join']('')\n], []))([...w]);\nconst arrange = n => (x => x[0x0] ? [\n    x[0x0] - 0x1,\n    x[0x1] + 0x2540be400\n] : x)(split(padLeft(n, 0x14, '0'), 0xa)['map'](x => +x));\nconst solve0 = (a, b, x) => Math['floor'](b / x) - Math['floor'](a / x);\nconst solve1 = (a, b, x) => Math['floor'](b / x) - (a == 0x0 ? -0x1 : Math['floor']((a - 0x1) / x));\nconst nullOrStr = n => n ? String(n) : '';\nconst fn2 = (a2, b2, x) => '' + nullOrStr(solve0(+a2[0x0], b2[0x0], x)) + solve1(a2[0x1], b2[0x1], x);\nconst fn1 = (a, b, x) => fn2(arrange(a), arrange(b), x);\nconst main = input => fn1(...input['split']('\\x20'));\nconsole['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4 8 2", "3"], ["0 5 1", "6"], ["9 9 2", "0"], ["1 1000000000000000000 3", "333333333333333333"]], "original": "const padLeft = (w, l, c) => ([...Array(l)].map(_ => c).join('') + w).slice(l * -1);\nconst split = (w, n) => (ws => ws.reduce((acc, _, i) => i % n ? acc : [...acc, ws.slice(i, i + n).join('')], []))([...w]);\nconst arrange = n => (x => x[0] ? [x[0] - 1, x[1] + 10000000000] : x)(split(padLeft(n, 20, '0'), 10).map(x => +x));\n\nconst solve0 = (a, b, x) => Math.floor(b / x) -  Math.floor(a / x);\nconst solve1 = (a, b, x) => Math.floor(b / x) - (a == 0 ? -1 : Math.floor((a - 1) / x));\n\nconst nullOrStr = n => n ? String(n) : '';\n\nconst fn2 = (a2, b2, x) => `${nullOrStr(solve0(+a2[0], b2[0], x))}${solve1(a2[1], b2[1], x)}`;\nconst fn1 = (a, b, x) => fn2(arrange(a), arrange(b), x);\n\nconst main = input => (fn1)(...input.split(' '));\n\nconsole.log(main(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03993_1", "type": "JavaScript", "obfuscated": "var lines = [];\nvar result = 0x0;\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    lines['push'](x);\n});\nrl['on']('close', function () {\n    var SAuAse = {\n        'EogVW': function (x, y) {\n            return x < y;\n        },\n        'vLVcO': function (x, y) {\n            return x - y;\n        },\n        'NqZwX': function (x, y) {\n            return x + y;\n        }\n    };\n    var N = Number(lines[0x0]);\n    var a = lines[0x1]['split']('\\x20')['map'](value => Number(value));\n    for (var i = 0x0; SAuAse['EogVW'](i, N); i++) {\n        if (i < a[i]) {\n            if (a[SAuAse['vLVcO'](a[i], 0x1)] === SAuAse['NqZwX'](i, 0x1)) {\n                result++;\n            }\n        }\n    }\n    console['log'](result);\n});", "test_cases": [["4\n2 1 4 3", "2"], ["3\n2 3 1", "0"], ["5\n5 5 5 5 1", "1"]], "original": "var lines = []; var result = 0;\nvar readline = require('readline');\n\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    lines.push(x);\n});\n\nrl.on('close', function () {\n    var N = Number(lines[0]);\n    var a = lines[1].split(\" \").map(value => Number(value));\n\n    for (var i = 0; i < N; i++) {\n        if (i < a[i]) {\n            if (a[a[i] - 1] === i + 1) { result++; }\n        }\n    }\n    console.log(result);\n});", "language": "JavaScript"}
{"filename": "p00020_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconsole['log'](input['trim']()['toUpperCase']());", "test_cases": [["this is a pen.", "THIS IS A PEN."]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconsole.log(input.trim().toUpperCase());", "language": "JavaScript"}
{"filename": "p00046_1", "type": "JavaScript", "obfuscated": "i = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/\\n/)['sort'](function (a, b) {\n    var GIyLFX = {\n        'ZpjRG': function (x, y) {\n            return x - y;\n        }\n    };\n    return GIyLFX['ZpjRG'](a, b);\n}), console['log'](i[i['length'] - 0x1] - i[0x0]);", "test_cases": [["3776.0\n1819.0\n645.2\n2004.1\n1208.6", "3130.8"]], "original": "i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split(/\\n/).sort(function(a,b){return a-b}),console.log(i[i.length-1]-i[0])", "language": "JavaScript"}
{"filename": "p02383_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nconst reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nconst lines = [];\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    const ScTakZ = {\n        'gZbUo': function (x, y) {\n            return x < y;\n        }\n    };\n    let [top, back, right, left, front, bottom] = lines[0x0]['split']('\\x20')['map'](Number);\n    const rs = lines[0x1];\n    for (let i = 0x0; ScTakZ['gZbUo'](i, rs['length']); i++) {\n        switch (rs[i]) {\n        case 'N':\n            [top, front, bottom, back] = [\n                back,\n                top,\n                front,\n                bottom\n            ];\n            break;\n        case 'S':\n            [top, front, bottom, back] = [\n                front,\n                bottom,\n                back,\n                top\n            ];\n            break;\n        case 'W':\n            [top, left, bottom, right] = [\n                right,\n                top,\n                left,\n                bottom\n            ];\n            break;\n        case 'E':\n            [top, left, bottom, right] = [\n                left,\n                bottom,\n                right,\n                top\n            ];\n            break;\n        }\n    }\n    console['log'](top);\n});", "test_cases": [["1 2 4 8 16 32\nSE", "8"], ["1 2 4 8 16 32\nEESWN", "32"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\n\nconst reader = require(\"readline\").createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nconst lines = [];\n\nreader.on(\"line\", (line) => {\n  lines.push(line);\n});\n\nreader.on(\"close\", () => {\n  let [top, back, right, left, front, bottom] = lines[0].split(\" \").map(Number);\n  const rs = lines[1];\n  for (let i = 0; i < rs.length; i++) {\n    switch (rs[i]) {\n      case \"N\":\n        [top, front, bottom, back] = [back, top, front, bottom];\n        break;\n      case \"S\":\n        [top, front, bottom, back] = [front, bottom, back, top];\n        break;\n      case \"W\":\n        [top, left, bottom, right] = [right, top, left, bottom];\n        break;\n      case \"E\":\n        [top, left, bottom, right] = [left, bottom, right, top];\n        break;\n    }\n  }\n  console.log(top);\n});\n\n", "language": "JavaScript"}
{"filename": "p02651_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const NOrzTA = {\n        'auWxv': function (x, y) {\n            return x < y;\n        },\n        'FsHgn': function (x, y) {\n            return x * y;\n        },\n        'BgPbo': function (x, y) {\n            return x + y;\n        },\n        'YgyNt': function (x, y) {\n            return x * y;\n        },\n        'qjTGs': function (x, y) {\n            return x ^ y;\n        },\n        'UejRV': function (x, y) {\n            return x == y;\n        }\n    };\n    let t = input['split']('\\x0a')[0x0], n, a = new Array(n), s = new Array(n), x = 0x0;\n    for (let i = 0x0; NOrzTA['auWxv'](i, t); i++) {\n        n = input['split']('\\x0a')[NOrzTA['FsHgn'](i, 0x3) + 0x1];\n        a = input['split']('\\x0a')[i * 0x3 + 0x2]['split']('\\x20');\n        s = input['split']('\\x0a')[NOrzTA['BgPbo'](NOrzTA['YgyNt'](i, 0x3), 0x3)]['split']('');\n        let tmp;\n        for (let j = 0x0; NOrzTA['auWxv'](j, n); j++) {\n            tmp = NOrzTA['qjTGs'](x, a[j]);\n            if (s[j] == 0x0) {\n                if (tmp == 0x0)\n                    x = tmp;\n            } else\n                x = tmp;\n        }\n        if (NOrzTA['UejRV'](x, 0x0)) {\n            console['log'](0x0);\n        } else\n            console['log'](0x1);\n        x = 0x0;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2\n1 2\n10\n2\n1 1\n10\n6\n2 3 4 5 6 7\n111000", "1\n0\n0"]], "original": "function Main(input) {\n  let t = input.split(\"\\n\")[0], n , a = new Array(n), s = new Array(n), x = 0;\n  \n  for (let i = 0; i < t; i++) {\n    n = input.split(\"\\n\")[i*3+1];\n    a = input.split(\"\\n\")[i*3+2].split(\" \");\n    s = input.split(\"\\n\")[i*3+3].split(\"\");\n\n    let tmp;\n\n    for (let j = 0; j < n; j++) {\n      tmp = x ^ a[j];\n      \n      if (s[j] == 0) {\n        if (tmp == 0) x = tmp;\n      } else x = tmp;      \n    }\n    \n    if (x == 0) {\n      console.log(0)\n    } else console.log(1);\n    \n    x = 0;\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02865_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar lines = [];\nvar reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', line => {\n    lines['push'](line);\n});\nreader['on']('close', () => {\n    var Vltyfk = {\n        'ckjOQ': function (x, y) {\n            return x / y;\n        },\n        'mktQJ': function (x, y) {\n            return x - y;\n        }\n    };\n    const N = +lines[0x0];\n    console['log'](N % 0x2 ? Vltyfk['ckjOQ'](Vltyfk['mktQJ'](N, 0x1), 0x2) : Vltyfk['mktQJ'](Vltyfk['ckjOQ'](N, 0x2), 0x1));\n});", "test_cases": [["4", "1"], ["999999", "499999"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar lines = [];\nvar reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', (line) => {\n  lines.push(line);\n});\nreader.on('close', () => {\n    const N = +lines[0];\n\tconsole.log(N%2?(N-1)/2:N/2-1);\n});", "language": "JavaScript"}
{"filename": "p03246_1", "type": "JavaScript", "obfuscated": "line = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nn = parseInt(line[0x0]);\nv = line[0x1]['split']('\\x20');\nvar odds = {};\nvar even = {};\nfor (var i = 0x0; i < v['length']; i++) {\n    di = i & 0x1 ? even : odds;\n    di[v[i]] = !di[v[i]] ? 0x1 : di[v[i]] + 0x1;\n}\nvar a = [];\nvar b = [];\nfor (var k in odds)\n    a['push']({\n        'v': k,\n        'n': odds[k]\n    });\nfor (var k in even)\n    b['push']({\n        'v': k,\n        'n': even[k]\n    });\na['sort']((x, y) => y['n'] - x['n']);\nb['sort']((x, y) => y['n'] - x['n']);\nva = a[0x0];\nvb = b[0x0];\nif (va['v'] === vb['v']) {\n    if (va['n'] > vb['n'])\n        vb = !b[0x1] ? { 'n': 0x0 } : b[0x1];\n    else\n        va = !a[0x1] ? { 'n': 0x0 } : a[0x1];\n}\nlog = console['log'];\nlog(n / 0x2 - va['n'] + n / 0x2 - vb['n']);", "test_cases": [["4\n3 1 3 2", "1"], ["6\n105 119 105 119 105 119", "0"], ["4\n1 1 1 1", "2"]], "original": "line = require('fs')\n  .readFileSync('/dev/stdin', 'utf8')\n  .split('\\n')\n\nn = parseInt(line[0])\nv = line[1].split(' ')\n\nvar odds = {}\nvar even = {}\nfor (var i = 0; i < v.length; i++) {\n  di = i & 1 ? even : odds\n  di[v[i]] = !di[v[i]] ? 1 : di[v[i]] + 1\n}\n\nvar a = []\nvar b = []\nfor (var k in odds) a.push({ v: k, n: odds[k] })\nfor (var k in even) b.push({ v: k, n: even[k] })\n\na.sort((x, y) => y.n - x.n)\nb.sort((x, y) => y.n - x.n)\n\nva = a[0]\nvb = b[0]\nif (va.v === vb.v) {\n  if (va.n > vb.n) vb = !b[1] ? { n: 0 } : b[1]\n  else va = !a[1] ? { n: 0 } : a[1]\n}\n\nlog = console.log\n// log('n', n)\n// log('v', v)\n// log('sorted', a, b)\n// log('select', va, vb)\nlog(n / 2 - va.n + n / 2 - vb.n)\n", "language": "JavaScript"}
{"filename": "p03271_1", "type": "JavaScript", "obfuscated": "var p = require('fs')['readFileSync']('/dev/stdin', 'utf8');\np = p['split']('\\x0a')['map'](a => +a);\nconsole['log'](main());\nfunction main() {\n    var mSDHzz = {\n        'XYWiN': function (x, y) {\n            return x <= y;\n        },\n        'Wrygb': '4|1|2|0|3',\n        'eRoZj': function (x, y) {\n            return x !== y;\n        },\n        'qXOlF': function (x, y) {\n            return x > y;\n        },\n        'YHcGJ': function (x, y) {\n            return x < y;\n        },\n        'GgMfn': function (x, y) {\n            return x - y;\n        },\n        'yzdUx': function (x, y) {\n            return x > y;\n        },\n        'OdolI': function (x, y) {\n            return x !== y;\n        },\n        'ByWZf': 'Yes'\n    };\n    var N = 'No';\n    var n = p[0x0];\n    var t = 0x0;\n    for (i = 0x1; mSDHzz['XYWiN'](i, n); i++) {\n        var nzrtIk = mSDHzz['Wrygb']['split']('|');\n        var zwxPpv = 0x0;\n        while (!![]) {\n            switch (nzrtIk[zwxPpv++]) {\n            case '0':\n                t = j;\n                continue;\n            case '1':\n                var j = i;\n                continue;\n            case '2':\n                while (mSDHzz['eRoZj'](p[j], i)) {\n                    j++;\n                    if (p[j] !== j)\n                        return N;\n                    j++;\n                }\n                continue;\n            case '3':\n                while (mSDHzz['qXOlF'](j, i)) {\n                    if (mSDHzz['YHcGJ'](p[mSDHzz['GgMfn'](j, 0x2)], p[mSDHzz['GgMfn'](j, 0x1)]))\n                        return N;\n                    p[j] = p[mSDHzz['GgMfn'](j, 0x2)];\n                    j -= 0x2;\n                }\n                continue;\n            case '4':\n                while (mSDHzz['yzdUx'](t, i)) {\n                    if (mSDHzz['OdolI'](p[i], i))\n                        return N;\n                    i++;\n                }\n                continue;\n            }\n            break;\n        }\n    }\n    return mSDHzz['ByWZf'];\n}", "test_cases": [["5\n5\n2\n1\n4\n3", "Yes"], ["4\n3\n2\n4\n1", "No"], ["7\n3\n2\n1\n6\n5\n4\n7", "Yes"], ["6\n5\n3\n4\n1\n2\n6", "No"]], "original": "var p=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\np = p.split(\"\\n\").map(a=>+a);\nconsole.log(main());\nfunction main(){\n  var N = \"No\";\n  var n = p[0];\n  var t = 0;\n  for(i = 1; i <= n; i++){\n    while(t > i){if(p[i] !== i)return N;i++;}\n    var j = i;\n    while(p[j] !== i){\n      j++;\n      if(p[j] !== j)return N;\n      j++;\n    }\n    t = j;\n    while(j > i){\n      if(p[j-2] < p[j-1])return N;\n      p[j] = p[j-2]; j -= 2;\n    }\n  }\n  return \"Yes\";\n}", "language": "JavaScript"}
{"filename": "p03311_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var yNjEON = {\n        'nlSHE': function (x, y) {\n            return x - y;\n        },\n        'OpSsd': function (x, y) {\n            return x / y;\n        },\n        'rPWTx': function (x, y) {\n            return x === y;\n        },\n        'AyUEG': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (yNjEON['rPWTx'](input[yNjEON['AyUEG'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = yNjEON['AyUEG'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    var array = input[0x1]['split']('\\x20')['map']((e, i) => {\n        return yNjEON['nlSHE'](e, i) - 0x1;\n    })['sort']((a, b) => {\n        return yNjEON['nlSHE'](a, b);\n    });\n    console['log'](array['reduce']((acc, cur) => {\n        return acc + Math['abs'](yNjEON['nlSHE'](cur, array[Math['floor'](yNjEON['OpSsd'](array['length'], 0x2))]));\n    }, 0x0));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction permutation(n, k) {\n    var FQobcb = { 'SHMly': '2|3|4|0|1' };\n    var ScAncC = FQobcb['SHMly']['split']('|');\n    var sGBQey = 0x0;\n    while (!![]) {\n        switch (ScAncC[sGBQey++]) {\n        case '0':\n            for (var i = 0x0; i < k; i++) {\n                next = [];\n                ret['forEach'](e => {\n                    for (var k = 0x1; gFeiyd['xMQsP'](k, n); k++) {\n                        if (!e['includes'](k)) {\n                            next['push'](e['concat']([k]));\n                        }\n                    }\n                });\n                ret = next['concat']([]);\n            }\n            continue;\n        case '1':\n            return ret;\n        case '2':\n            var gFeiyd = {\n                'xMQsP': function (x, y) {\n                    return x <= y;\n                }\n            };\n            continue;\n        case '3':\n            var ret = [[]];\n            continue;\n        case '4':\n            var next;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["5\n2 2 3 5 5", "2"], ["9\n1 2 3 4 5 6 7 8 9", "0"], ["6\n6 5 4 3 2 1", "18"], ["7\n1 1 1 1 2 3 4", "6"]], "original": "\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  var array=input[1].split(' ').map((e,i)=>{\n    return e-i-1;\n  }).sort((a,b)=>{\n    return a-b;\n  });\n  console.log(array.reduce((acc,cur)=>{\n    return acc+Math.abs(cur-array[Math.floor(array.length/2)]);\n  },0));\n\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction permutation(n,k){\n    var ret=[[]];\n    var next;\n    for(var i=0;i<k;i++){\n        next=[];\n        ret.forEach(e=>{\n            for(var k=1;k<=n;k++){\n                if(!e.includes(k)){\n                    next.push(e.concat([k]));\n                }\n            }\n        });\n        ret=next.concat([]);\n    }\n    return ret;\n}", "language": "JavaScript"}
{"filename": "p03380_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var yjfaTg = {\n        'tylPS': function (x, y) {\n            return x < y;\n        },\n        'Sylkg': function (x, y) {\n            return x - y;\n        },\n        'YGzQS': function (x, y) {\n            return x / y;\n        },\n        'tcwYL': function (x, y) {\n            return x - y;\n        },\n        'axOBP': function (x, y) {\n            return x / y;\n        },\n        'dVfZu': '%d\\x20%d'\n    };\n    s = s['split']('\\x0a');\n    var a = s[0x1]['split']('\\x20')['map'](a => +a);\n    const n = +s[0x0];\n    var m = Math['max'](...a);\n    var b = [...a]['sort']((a, b) => a - b);\n    var c = 0x218711a00;\n    for (var i = 0x0; yjfaTg['tylPS'](i, yjfaTg['Sylkg'](n, 0x1)); i++) {\n        if (Math['abs'](yjfaTg['YGzQS'](m, 0x2) - b[i]) < c)\n            c = Math['abs'](yjfaTg['tcwYL'](yjfaTg['axOBP'](m, 0x2), b[i]));\n        else\n            break;\n    }\n    console['log'](yjfaTg['dVfZu'], m, b[i - 0x1]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n6 9 4 2 11", "11 6"], ["2\n100 0", "100 0"]], "original": "function Main(s) {\n  s = s.split(\"\\n\");\n  var a = s[1].split(\" \").map(a => +a);\n  const n = +s[0];\n  var m = Math.max(...a);\n  var b = [...a].sort((a,b)=> a-b);\n  var c = 9e9;\n  for(var i = 0; i < n - 1; i++){\n    if(Math.abs(m / 2 - b[i]) < c)c = Math.abs(m / 2 - b[i]);\n    else break;\n  }\n  console.log(\"%d %d\", m, b[i-1]);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03438_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var BKfMiv = {\n        'ilvUL': '10|9|1|2|7|4|5|3|12|0|6|11|8',\n        'ozbQN': function (x, y) {\n            return x < y;\n        },\n        'wRmNd': '2|1|4|3|0',\n        'jEXQw': function (x, y) {\n            return x - y;\n        },\n        'utDDs': function (callee, param1) {\n            return callee(param1);\n        },\n        'KHxkT': function (x, y) {\n            return x <= y;\n        },\n        'HdGeL': function (x, y) {\n            return x * y;\n        },\n        'gNnIx': 'Yes'\n    };\n    var TWLoSs = BKfMiv['ilvUL']['split']('|');\n    var TXspii = 0x0;\n    while (!![]) {\n        switch (TWLoSs[TXspii++]) {\n        case '0':\n            for (i = 0x0; BKfMiv['ozbQN'](i, n); i++) {\n                var PtGVla = BKfMiv['wRmNd']['split']('|');\n                var EZKIux = 0x0;\n                while (!![]) {\n                    switch (PtGVla[EZKIux++]) {\n                    case '0':\n                        dif += Math['abs'](BKfMiv['jEXQw'](a[i], b[i]));\n                        continue;\n                    case '1':\n                        suma += a[i];\n                        continue;\n                    case '2':\n                        a[i] = parseInt(tmpa[i]);\n                        continue;\n                    case '3':\n                        sumb += b[i];\n                        continue;\n                    case '4':\n                        b[i] = BKfMiv['utDDs'](parseInt, tmpb[i]);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '1':\n            a = new Array(n)['fill'](0x0);\n            continue;\n        case '2':\n            b = new Array(n)['fill'](0x0);\n            continue;\n        case '3':\n            var sumb = 0x0;\n            continue;\n        case '4':\n            tmpb = input[0x2]['split']('\\x20');\n            continue;\n        case '5':\n            var suma = 0x0;\n            continue;\n        case '6':\n            var ans = 'No';\n            continue;\n        case '7':\n            tmpa = input[0x1]['split']('\\x20');\n            continue;\n        case '8':\n            console['log']('%s', ans);\n            continue;\n        case '9':\n            var n = BKfMiv['utDDs'](parseInt, input[0x0]);\n            continue;\n        case '10':\n            input = input['split']('\\x0a');\n            continue;\n        case '11':\n            if (BKfMiv['KHxkT'](suma, sumb) && BKfMiv['KHxkT'](dif, BKfMiv['HdGeL'](BKfMiv['jEXQw'](sumb, suma), 0x3))) {\n                ans = BKfMiv['gNnIx'];\n            }\n            continue;\n        case '12':\n            var dif = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2 3\n5 2 2", "Yes"], ["5\n3 1 4 1 5\n2 7 1 8 2", "No"], ["5\n2 7 1 8 2\n3 1 4 1 5", "No"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  a = new Array(n).fill(0);\n  b = new Array(n).fill(0);\n  tmpa = input[1].split(\" \");\n  tmpb = input[2].split(\" \");\n  var suma=0;\n  var sumb=0;\n  var dif=0;\n\n  for(i=0;i<n;i++){\n    a[i]=parseInt(tmpa[i]);\n    suma += a[i];\n    b[i]=parseInt(tmpb[i]);\n    sumb += b[i];\n    dif+=Math.abs(a[i]-b[i]);\n  }\n  var ans =\"No\";\n  if(suma<=sumb&&dif<=(sumb-suma)*3){\n    ans=\"Yes\";\n  }\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03559_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var EKtWVp = {\n        'pEFuF': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HHpMf': function (x, y) {\n            return x > y;\n        },\n        'etyBB': function (x, y) {\n            return x < y;\n        },\n        'yphwj': function (x, y) {\n            return x - y;\n        },\n        'xYbiR': function (x, y) {\n            return x > y;\n        },\n        'GWeOq': function (x, y) {\n            return x + y;\n        },\n        'dDqMw': function (x, y) {\n            return x > y;\n        },\n        'LqORK': function (x, y) {\n            return x - y;\n        },\n        'acCKN': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    var N = EKtWVp['pEFuF'](parseInt, input[0x0][0x0], 0xa);\n    var vec_A = input[0x1]['map'](e => parseInt(e, 0xa));\n    var vec_B = input[0x2]['map'](e => parseInt(e, 0xa));\n    var vec_C = input[0x3]['map'](e => parseInt(e, 0xa));\n    function compareFunc(a, b) {\n        return b - a;\n    }\n    vec_A['sort'](compareFunc);\n    vec_B['sort'](compareFunc);\n    vec_C['sort'](compareFunc);\n    var s = 0x0;\n    var t = -0x1;\n    var vec_sumB = Array['from']({ 'length': N }, () => 0x0);\n    var tmpAdj = 0x0;\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        while (s < N && EKtWVp['HHpMf'](vec_B[s], vec_A[i])) {\n            while (EKtWVp['etyBB'](t, EKtWVp['yphwj'](N, 0x1)) && EKtWVp['xYbiR'](vec_C[EKtWVp['GWeOq'](t, 0x1)], vec_B[s])) {\n                t++;\n            }\n            if (EKtWVp['dDqMw'](s, 0x0))\n                tmpAdj = vec_sumB[EKtWVp['LqORK'](s, 0x1)];\n            else\n                tmpAdj = 0x0;\n            vec_sumB[s] = EKtWVp['GWeOq'](tmpAdj + t, 0x1);\n            s++;\n        }\n        s = Math['max'](0x0, EKtWVp['acCKN'](s, 0x1));\n        ans += vec_sumB[s];\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 5\n2 4\n3 6", "3"], ["3\n1 1 1\n2 2 2\n3 3 3", "27"], ["6\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288", "87"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar N = parseInt(input[0][0], 10);\n\tvar vec_A = input[1].map(e => parseInt(e, 10));\n\tvar vec_B = input[2].map(e => parseInt(e, 10));\n\tvar vec_C = input[3].map(e => parseInt(e, 10));\n\tfunction compareFunc(a, b) {\n\t\treturn b - a;\n\t}\n\tvec_A.sort(compareFunc);\n\tvec_B.sort(compareFunc);\n\tvec_C.sort(compareFunc);\n\n\tvar s = 0;\n\tvar t = -1;\n\tvar vec_sumB = Array.from({length: N}, () => 0);\n\tvar tmpAdj = 0;  \n\tvar ans = 0;\n\tfor (var i = 0; i < N; i++){\n\t\twhile (s < N && vec_B[s] > vec_A[i]){\n\t\t\twhile (t < (N - 1) && vec_C[t + 1] > vec_B[s]){\n\t\t\t\tt ++;\n\t\t\t}\n\t\t\tif (s > 0) tmpAdj = vec_sumB[s - 1];\n\t\t\telse tmpAdj = 0;\n\t\t\tvec_sumB[s] = tmpAdj + t + 1;\n\t\t\ts ++;        \n\t\t}\n\t\ts = Math.max(0, s - 1);\n\t\tans += vec_sumB[s];\n\t}\t\n\tconsole.log(ans);\n}\n  \nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03723_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var SbcGWp = {\n        'rvQNi': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return SbcGWp['rvQNi'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var GIqILV = {\n        'nXPeH': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; GIqILV['nXPeH'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var FReMCQ = {\n        'zklRy': function (x, y) {\n            return x + y;\n        },\n        'pCBtN': ']).fill().map(x=>{return\\x20',\n        'yYWKs': ';})',\n        'oPoiB': function (x, y) {\n            return x + y;\n        },\n        'KbbGg': 'Array(a[',\n        'kVKlw': ']).fill().map(x=>',\n        'rdfrW': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = FReMCQ['zklRy'](FReMCQ['zklRy'](FReMCQ['zklRy'](FReMCQ['zklRy']('Array(a[', --l), FReMCQ['pCBtN']), v), FReMCQ['yYWKs']);\n    while (--l)\n        r = FReMCQ['oPoiB'](FReMCQ['zklRy'](FReMCQ['KbbGg'], l) + FReMCQ['kVKlw'], r) + ')';\n    return FReMCQ['rdfrW'](eval, r);\n}\nvar tm = +new Date() + 0x384;\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var jCZbAg = {\n        'CiOBa': function (callee, param1) {\n            return callee(param1);\n        },\n        'ATCEp': function (x, y) {\n            return x < y;\n        },\n        'CIAtd': function (x, y) {\n            return x % y;\n        },\n        'BnrxL': function (x, y) {\n            return x % y;\n        },\n        'kMiwt': function (x, y) {\n            return x >> y;\n        },\n        'OJCtI': function (x, y) {\n            return x + y;\n        },\n        'bEgUu': function (x, y) {\n            return x + y;\n        }\n    };\n    var [a, b, c] = jCZbAg['CiOBa'](nexts, 0x3);\n    var cnt = 0x0;\n    while (jCZbAg['ATCEp'](new Date(), tm)) {\n        if (jCZbAg['CIAtd'](a, 0x2) || jCZbAg['BnrxL'](b, 0x2) || jCZbAg['CIAtd'](c, 0x2))\n            return cnt;\n        var a2 = jCZbAg['kMiwt'](b + c, 0x1), b2 = jCZbAg['OJCtI'](a, c) >> 0x1, c2 = jCZbAg['kMiwt'](jCZbAg['bEgUu'](a, b), 0x1);\n        a = a2, b = b2, c = c2;\n        cnt++;\n    }\n    return -0x1;\n}", "test_cases": [["4 12 20", "3"], ["14 14 14", "-1"], ["454 414 444", "1"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar tm = +(new Date()) + 900;\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var [a,b,c] = nexts(3);\n  var cnt = 0;\n  while(new Date() < tm){\n    if(a % 2 || b % 2 || c % 2)return cnt;\n    var a2 = b+c >> 1, b2 = a+c >> 1, c2 = a+b >> 1;\n    a = a2, b = b2, c = c2;\n    cnt++;\n  }\n  return -1;\n}", "language": "JavaScript"}
{"filename": "p03731_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var TeYfAA = {\n        'AOrTM': function (callee, param1) {\n            return callee(param1);\n        },\n        'XuTTO': function (x, y) {\n            return x < y;\n        },\n        'Wipqi': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var input0 = input[0x0]['split']('\\x20');\n    var N = parseInt(input0[0x0]);\n    var T = TeYfAA['AOrTM'](parseInt, input0[0x1]);\n    var t = input[0x1]['split']('\\x20');\n    for (var i = 0x0; TeYfAA['XuTTO'](i, N); i++) {\n        t[i] = parseInt(t[i]);\n    }\n    var count = 0x0;\n    var t_i;\n    for (var i = 0x1; TeYfAA['XuTTO'](i, N); i++) {\n        t_i = t[i] - t[TeYfAA['Wipqi'](i, 0x1)];\n        if (TeYfAA['XuTTO'](t_i, T)) {\n            count += t_i;\n        } else {\n            count += T;\n        }\n    }\n    console['log'](count + T);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 4\n0 3", "7"], ["2 4\n0 5", "8"], ["4 1000000000\n0 1000 1000000 1000000000", "2000000000"], ["1 1\n0", "1"], ["9 10\n0 3 5 7 100 110 200 300 311", "67"]], "original": "\"use strict\";\n\n// inputに入力データ全体が入る\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var input0 = input[0].split(\" \");\n  var N = parseInt(input0[0]);\n  var T = parseInt(input0[1]);\n  var t = input[1].split(\" \");\n  for (var i=0; i<N; i++) {\n    t[i] = parseInt(t[i]);\n  }\n  \n  var count = 0;\n  var t_i;\n  for (var i=1; i<N; i++) {\n    t_i = t[i]-t[i-1];\n    if (t_i<T) {\n      count += t_i;\n    } else {\n      count += T;\n    }\n  }\n  \n  console.log (count+T);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03761_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var HjcgVi = {\n        'uvnDN': '8|5|4|7|0|2|1|3|6',\n        'TSOMo': function (x, y) {\n            return x <= y;\n        },\n        'UWgGb': function (x, y) {\n            return x < y;\n        },\n        'OQIRF': function (x, y) {\n            return x + y;\n        },\n        'uRAzx': function (x, y) {\n            return x - y;\n        }\n    };\n    var sYRRqh = HjcgVi['uvnDN']['split']('|');\n    var aYmxlS = 0x0;\n    while (!![]) {\n        switch (sYRRqh[aYmxlS++]) {\n        case '0':\n            var keys = Object['keys'](ansmap)['sort']((a, b) => a > b ? 0x1 : -0x1);\n            continue;\n        case '1':\n            var ans = '';\n            continue;\n        case '2':\n            for (var i = 0x0; i < n; i++) {\n                var list = lists[i];\n                for (var j = 0x0; j < keys['length']; j++) {\n                    ansmap[keys[j]] = Math['min'](ansmap[keys[j]], list[keys[j]] || 0x0);\n                }\n            }\n            continue;\n        case '3':\n            keys['forEach'](key => {\n                for (var i = 0x0; i < ansmap[key]; i++)\n                    ans += key;\n            });\n            continue;\n        case '4':\n            var ansmap = {};\n            continue;\n        case '5':\n            var lists = [];\n            continue;\n        case '6':\n            console['log'](ans);\n            continue;\n        case '7':\n            for (var i = 0x1; HjcgVi['TSOMo'](i, n); i++) {\n                var str = input[i];\n                var map = {};\n                for (var j = 0x0; HjcgVi['UWgGb'](j, str['length']); j++) {\n                    map[str[j]] = map[str[j]] ? HjcgVi['OQIRF'](map[str[j]], 0x1) : 0x1;\n                    ansmap[str[j]] = 0x3c;\n                }\n                lists['push'](map);\n            }\n            continue;\n        case '8':\n            var n = HjcgVi['uRAzx'](input[0x0], 0x0);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["3\ncbaa\ndaacc\nacacac", "aac"], ["3\na\naa\nb", ""]], "original": "function main(input) {\n    var n = input[0]-0;\n    var lists = [];\n    var ansmap = {};\n    for(var i=1;i<=n;i++){\n        var str = input[i];\n        var map = {};\n        for(var j=0;j<str.length;j++){\n            map[str[j]] = map[str[j]]?map[str[j]]+1:1;\n            ansmap[str[j]] = 60;\n        }\n        lists.push(map);\n    }\n    var keys = Object.keys(ansmap).sort((a,b)=>a>b?1:-1);\n    for(var i=0;i<n;i++){\n        var list = lists[i];\n        for(var j=0;j<keys.length;j++){\n            ansmap[keys[j]] = Math.min(ansmap[keys[j]], list[keys[j]]||0);\n        }\n    }\n    var ans = \"\";\n    keys.forEach(key=>{\n        for(var i=0;i<ansmap[key];i++) ans += key;\n    })\n    console.log(ans);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03845_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('ascii');\nvar input_stdin = '';\nvar input_stdin_array = '';\nvar input_currentline = 0x0;\nprocess['stdin']['on']('data', function (data) {\n    input_stdin += data;\n});\nprocess['on']('SIGINT', function () {\n    var FlbKWQ = {\n        'ifIfE': function (callee) {\n            return callee();\n        }\n    };\n    input_stdin_array = input_stdin['split']('\\x0a');\n    FlbKWQ['ifIfE'](main);\n    process['exit']();\n});\nprocess['stdin']['on']('end', function () {\n    var pxJgfC = {\n        'yzAJR': function (callee) {\n            return callee();\n        }\n    };\n    input_stdin_array = input_stdin['split']('\\x0a');\n    pxJgfC['yzAJR'](main);\n});\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\nfunction main() {\n    var PCPQQH = {\n        'VjdLD': '4|3|6|2|1|5|0',\n        'ocFYy': function (x, y) {\n            return x < y;\n        },\n        'sRUuo': function (callee, param1) {\n            return callee(param1);\n        },\n        'YLlic': function (x, y) {\n            return x + y;\n        },\n        'SEPil': function (x, y) {\n            return x - y;\n        },\n        'jIwhd': function (callee, param1) {\n            return callee(param1);\n        },\n        'mAgHA': function (callee) {\n            return callee();\n        },\n        'ubLtv': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var muTBxG = PCPQQH['VjdLD']['split']('|');\n    var xSjxOl = 0x0;\n    while (!![]) {\n        switch (muTBxG[xSjxOl++]) {\n        case '0':\n            for (var k = 0x0; PCPQQH['ocFYy'](k, M); k++) {\n                s = readLine()['split']('\\x20');\n                var i = PCPQQH['sRUuo'](parseInt, s[0x0]);\n                var x = PCPQQH['sRUuo'](parseInt, s[0x1]);\n                console['log'](PCPQQH['YLlic'](PCPQQH['SEPil'](sum, T[i]), x));\n            }\n            continue;\n        case '1':\n            for (var i = 0x1; i <= N; i++) {\n                T['push'](PCPQQH['jIwhd'](parseInt, s[i - 0x1]));\n                sum += T[i];\n            }\n            continue;\n        case '2':\n            var sum = 0x0;\n            continue;\n        case '3':\n            var s = PCPQQH['mAgHA'](readLine)['split']('\\x20');\n            continue;\n        case '4':\n            var N = PCPQQH['ubLtv'](parseInt, PCPQQH['mAgHA'](readLine));\n            continue;\n        case '5':\n            var M = PCPQQH['ubLtv'](parseInt, PCPQQH['mAgHA'](readLine));\n            continue;\n        case '6':\n            var T = [0x0];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\n2 1 4\n2\n1 1\n2 3", "6\n9"], ["5\n7 2 3 8 5\n3\n4 2\n1 7\n4 13", "19\n25\n30"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.on('SIGINT', function(){\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();\n    process.exit();\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\nfunction main() {\n\tvar N = parseInt(readLine());\n\tvar s = readLine().split(\" \");\n\tvar T = [0];\n\tvar sum=0;\n\tfor (var i=1; i <= N; i++){\n\t\tT.push(parseInt(s[i-1]));\n\t\tsum += T[i];\n\t}\n\tvar M = parseInt(readLine());\n\tfor (var k=0; k < M; k++){\n\t\ts = readLine().split(\" \");\n\t\tvar i = parseInt(s[0]);\n\t\tvar x = parseInt(s[1]);\n\t\tconsole.log(sum - T[i] + x);\n\t}\n}\n", "language": "JavaScript"}
{"filename": "p03846_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bZJVEe = {\n        'qcmdQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'iLKNp': function (x, y) {\n            return x / y;\n        },\n        'fNraf': function (x, y) {\n            return x - y;\n        },\n        'fQYAM': function (x, y) {\n            return x >= y;\n        },\n        'PelOz': function (x, y) {\n            return x < y;\n        },\n        'icHRe': function (x, y) {\n            return x != y;\n        },\n        'kyJOd': function (x, y) {\n            return x > y;\n        },\n        'BkqHt': function (x, y) {\n            return x != y;\n        },\n        'NBTlG': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    tmp = input[0x1]['split']('\\x20');\n    var c = Math['pow'](bZJVEe['qcmdQ'](parseInt, bZJVEe['iLKNp'](tmp['length'], 0x2)), 0x2);\n    var d = 0x0;\n    for (j = bZJVEe['fNraf'](tmp['length'], 0x1); bZJVEe['fQYAM'](j, 0x0); j--) {\n        for (i = 0x0; bZJVEe['PelOz'](i, tmp['length']); i++) {\n            if (tmp[i] == j) {\n                d++;\n            }\n        }\n        if (bZJVEe['icHRe'](d, 0x2) && bZJVEe['kyJOd'](j, 0x0)) {\n            c = 0x0;\n            break;\n        }\n        if (bZJVEe['BkqHt'](d, 0x1) && j == 0x0) {\n            c = 0x0;\n            break;\n        }\n        d = 0x0;\n        j--;\n    }\n    c = c % bZJVEe['NBTlG'](Math['pow'](0xa, 0x9), 0x7);\n    console['log']('%s', c);\n}\nfunction debug() {\n    var VMawTY = {\n        'JCoTV': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var input = document['getElementById']('input')['value'];\n    VMawTY['JCoTV'](Main, input);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n2 4 4 0 2", "4"], ["7\n6 4 0 2 4 0 2", "0"], ["8\n7 5 1 1 7 3 5 3", "16"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    tmp = input[1].split(\" \");\n    var c = Math.pow(parseInt(tmp.length / 2) , 2);\n    var d = 0;\n    for(j=tmp.length-1;j>=0;j--){\n      for(i=0;i<tmp.length;i++){\n         if(tmp[i] == j){\n            d++;\n         }\n      }\n      if(d!=2 && j>0){\n         c = 0;\n         break;\n      }\n      if(d!=1 && j==0){\n         c = 0;\n         break;\n      }\n    d = 0;\n    j--;\n    }\n    c = c % (Math.pow(10,9)+7);\n    console.log('%s', c);\n}\n\nfunction debug(){\n\tvar input = document.getElementById(\"input\").value;\n\tMain(input);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03945_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    input = input['split']('\\x0a');\n    var s = input[0x0];\n    if (s['match'](/BW/g)) {\n        var l1 = s['match'](/BW/g)['length'];\n    } else {\n        l1 = 0x0;\n    }\n    if (s['match'](/WB/g)) {\n        var l2 = s['match'](/WB/g)['length'];\n    } else {\n        l2 = 0x0;\n    }\n    console['log']('%s', l1 + l2);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["BBBWW", "1"], ["WWWWWW", "0"], ["WBWBWBWBWB", "9"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var s = input[0];\n  if(s.match(/BW/g)){\n  var l1 = s.match(/BW/g).length;\n  }else{\n    l1=0;\n  }\n  if(s.match(/WB/g)){\n  var l2 = s.match(/WB/g).length;\n  }else{\n    l2=0;\n  }\n  console.log('%s', l1+l2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00031_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var mjebJG = {\n        'epjCU': function (x, y) {\n            return x == y;\n        },\n        'naXzh': function (x, y) {\n            return x < y;\n        }\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a')['map'](Number);\n    var n = p['length'];\n    for (var i = 0x0; mjebJG['naXzh'](i, n); i++) {\n        var g = p['shift']();\n        var s = [];\n        g['toString'](0x2)['split']('')['reverse']()['map'](function (e, i) {\n            if (mjebJG['epjCU'](e, 0x1)) {\n                s['push'](Math['pow'](0x2, i));\n            }\n        });\n        console['log'](s['join']('\\x20'));\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["5\n7\n127", "1 4\n1 2 4\n1 2 4 8 16 32 64"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n').map(Number);\n  var n = p.length;\n  for (var i = 0; i < n; i++) {\n    var g = p.shift();\n    var s = [];\n    g.toString(2).split('').reverse().map(function(e, i) {\n      if (e == 1) {\n        s.push(Math.pow(2, i));\n      }\n    });\n    console.log(s.join(' '));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00033_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var dNPsWD = {\n        'xfAgD': function (callee, param1) {\n            return callee(param1);\n        },\n        'DUAFl': function (x, y) {\n            return x < y;\n        },\n        'LEWLt': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a');\n    var n = dNPsWD['xfAgD'](Number, p['shift']());\n    for (var i = 0x0; dNPsWD['DUAFl'](i, n); i++) {\n        var a = p['shift']()['split']('\\x20')['map'](Number);\n        console['log'](dNPsWD['LEWLt'](order, a));\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));\nfunction order(a) {\n    var OTsdlv = {\n        'GgfoE': '3|1|5|4|6|2|0',\n        'vUeoR': 'YES',\n        'frSpm': function (x, y) {\n            return x > y;\n        }\n    };\n    var AGNyle = OTsdlv['GgfoE']['split']('|');\n    var OhYPqW = 0x0;\n    while (!![]) {\n        switch (AGNyle[OhYPqW++]) {\n        case '0':\n            return OTsdlv['vUeoR'];\n        case '1':\n            var x;\n            continue;\n        case '2':\n            while (x = r['shift']()) {\n                if (x > m) {\n                    m = x;\n                    continue;\n                }\n                return 'NO';\n            }\n            continue;\n        case '3':\n            var r = [];\n            continue;\n        case '4':\n            while (x = a['shift']()) {\n                if (OTsdlv['frSpm'](x, c)) {\n                    c = x;\n                    continue;\n                }\n                r['push'](x);\n            }\n            continue;\n        case '5':\n            var c = a['shift']();\n            continue;\n        case '6':\n            var m = -Infinity;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n3 1 4 2 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1", "YES\nNO"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    var a = p.shift().split(' ').map(Number);\n    console.log(order(a));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction order(a) {\n  var r = [];\n  var x;\n  var c = a.shift();\n  while (x = a.shift()) {\n    if (x > c) {\n      c = x;\n      continue;\n    }\n    r.push(x);\n  }\n  var m = - Infinity;\n  while (x = r.shift()) {\n    if (x > m) {\n      m = x;\n      continue;\n    }\n    return 'NO';\n  }\n  return 'YES';\n}", "language": "JavaScript"}
{"filename": "p00101_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\ninput = input['split'](/\\n/);\nfor (let i = 0x1; i < input['length']; i++) {\n    console['log'](input[i]['replace']('Hoshino', 'Hoshina'));\n}", "test_cases": [["3\nHoshino\nHashino\nMasayuki Hoshino was the grandson of Ieyasu Tokugawa.", "Hoshina\nHashino\nMasayuki Hoshina was the grandson of Ieyasu Tokugawa."]], "original": "var input = require('fs').readFileSync(\"/dev/stdin\", \"utf8\").trim();\ninput = input.split(/\\n/);\nfor(let i=1;i<input.length;i++){\n  console.log(input[i].replace('Hoshino','Hoshina'));\n}", "language": "JavaScript"}
{"filename": "p00428_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var NM = Arr['shift']();\n    if (NM == '0\\x200')\n        break;\n    var nm = NM['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var arr = [];\n    for (var i = 0x0; i < m; i++)\n        arr['push']({\n            'x': i + 0x1,\n            'sum': 0x0\n        });\n    for (var i = 0x0; i < n; i++) {\n        var data = Arr['shift']()['split']('\\x20')['map'](Number);\n        arr['forEach'](function (v, j) {\n            arr[j]['sum'] += data[j];\n        });\n    }\n    arr['sort'](function (a, b) {\n        var RuOWHG = {\n            'CWxYx': function (x, y) {\n                return x - y;\n            }\n        };\n        a = a['sum'];\n        b = b['sum'];\n        return RuOWHG['CWxYx'](b, a);\n    });\n    var c = [];\n    arr['forEach'](function (v) {\n        c['push'](v['x']);\n    });\n    console['log'](c['join']('\\x20'));\n}", "test_cases": [["4 6\n1 0 1 0 1 1\n1 1 0 1 0 0\n1 1 1 0 0 0\n1 0 1 0 1 0\n4 6\n1 0 1 0 1 1\n1 1 0 1 0 0\n1 1 1 0 0 0\n1 0 1 0 1 0\n0 0", "1 3 2 5 4 6\n1 3 2 5 4 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var NM=Arr.shift();\n   if(NM==\"0 0\")break;\n   var nm=NM.split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   var arr=[];\n   for(var i=0;i<m;i++)arr.push({x:(i+1),sum:0});\n   for(var i=0;i<n;i++){\n      var data=(Arr.shift()).split(\" \").map(Number);\n      arr.forEach(function(v,j){arr[j].sum+=data[j];});\n   }\n   arr.sort(function(a,b){\n      a=a.sum;\n      b=b.sum;\n      return b-a;\n   });\n   var c=[];\n   arr.forEach(function(v){c.push(v.x);});\n   console.log(c.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p02315_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var SgmvkO = {\n        'yYTNI': function (x, y) {\n            return x - y;\n        },\n        'jqAar': function (x, y) {\n            return x + y;\n        },\n        'KwBoy': function (x, y) {\n            return x < y;\n        },\n        'mkZfm': function (x, y) {\n            return x >= y;\n        },\n        'hQwjU': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var p = input[0x0]['split']('\\x20')['map'](Number);\n    var max = SgmvkO['yYTNI'](p[0x1], 0x0);\n    var dp = new Array(SgmvkO['jqAar'](p[0x0], 0x1));\n    for (var n = 0x0; SgmvkO['KwBoy'](n, SgmvkO['jqAar'](p[0x0], 0x1)); n++) {\n        dp[n] = new Array(SgmvkO['jqAar'](max, 0x1))['fill'](0x0);\n    }\n    for (var i = 0x1; SgmvkO['KwBoy'](i, input['length']); i++) {\n        var mem = input[i]['split']('\\x20')['map'](Number);\n        for (var j = 0x0; j <= max; j++) {\n            if (SgmvkO['mkZfm'](j, mem[0x1]))\n                dp[i][j] = Math['max'](SgmvkO['jqAar'](dp[SgmvkO['yYTNI'](i, 0x1)][SgmvkO['hQwjU'](j, mem[0x1])], mem[0x0]), dp[SgmvkO['yYTNI'](i, 0x1)][j]);\n            else\n                dp[i][j] = dp[SgmvkO['hQwjU'](i, 0x1)][j];\n        }\n    }\n    console['log'](dp[p[0x0]][max]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["4 5\n4 2\n5 2\n2 1\n8 3", "13"], ["2 20\n5 9\n4 10", "9"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar p = input[0].split(\" \").map(Number);\n\tvar max = p[1]-0;\n\tvar dp = new Array(p[0]+1);\n\t//.fill(new Array(max+1));\n\t//dp[0] = new Array(max+1).fill(0)\n\tfor(var n=0;n<p[0]+1;n++){\n\t    dp[n] = new Array(max+1).fill(0);\n\t}\n\t//\tconsole.log(dp)\n    for(var i=1;i<input.length;i++){\n    var mem = input[i].split(\" \").map(Number);\n    for(var j=0;j<=max;j++){\n        //console.log(i,j)\n      if(j>=mem[1]) dp[i][j] = Math.max(dp[i-1][j-mem[1]]+mem[0],dp[i-1][j])\n      else dp[i][j] = dp[i-1][j];\n    }\n  }\n  console.log(dp[p[0]][max])\n // console.log(dp)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p02708_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const EPNepG = {\n        'cUUBc': function (x, y) {\n            return x + y;\n        },\n        'AuSaQ': function (x, y) {\n            return x ** y;\n        },\n        'IVBha': function (x, y) {\n            return x <= y;\n        },\n        'dMXDe': function (x, y) {\n            return x / y;\n        },\n        'XkBvi': function (x, y) {\n            return x * y;\n        },\n        'fiXEe': function (x, y) {\n            return x - y;\n        },\n        'cnaQC': function (x, y) {\n            return x + y;\n        },\n        'eHplb': function (x, y) {\n            return x / y;\n        },\n        'XTUXF': function (x, y) {\n            return x + y;\n        },\n        'wFwhI': function (x, y) {\n            return x - y;\n        },\n        'SfDyv': function (x, y) {\n            return x % y;\n        },\n        'uMgdr': function (x, y) {\n            return x + y;\n        },\n        'mSDKE': function (x, y) {\n            return x % y;\n        }\n    };\n    const mod = EPNepG['cUUBc'](EPNepG['AuSaQ'](0xa, 0x9), 0x7);\n    const [n, k] = input['trim']()['split']('\\x20')['map'](Number);\n    let ans = 0x0;\n    for (let i = k; EPNepG['IVBha'](i, EPNepG['cUUBc'](n, 0x1)); i++) {\n        const s_sum = EPNepG['dMXDe'](EPNepG['XkBvi'](EPNepG['fiXEe'](i, 0x1), i), 0x2);\n        const b_f = EPNepG['cnaQC'](EPNepG['fiXEe'](n, i), 0x1);\n        const b_sum = EPNepG['eHplb'](EPNepG['cnaQC'](b_f, n) * i, 0x2);\n        ans += EPNepG['XTUXF'](EPNepG['wFwhI'](b_sum, s_sum), 0x1);\n    }\n    return console['log'](EPNepG['SfDyv'](EPNepG['uMgdr'](EPNepG['mSDKE'](ans, mod), mod), mod));\n};\nprocess['env']['MYTEST'] ? process['env']['MYTEST'] === 'test' ? test() : main(require('fs')['readFileSync']('dev/stdin', 'utf8')) : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2", "10"], ["200000 200001", "1"], ["141421 35623", "220280457"]], "original": "const main = (input) => {\n  const mod = 10**9 + 7\n  const [n, k] = input.trim().split(' ').map(Number)\n  \n\n  let ans = 0\n\n  for (let i=k; i<=n+1; i++) {\n    const s_sum = (i-1) * i / 2\n\n    const b_f = n - i + 1\n\n    const b_sum = (b_f + n) * i / 2\n\n    ans += b_sum - s_sum + 1\n  }\n\n  return console.log((ans % mod + mod) % mod)\n}\n\nprocess.env.MYTEST\n  ? (process.env.MYTEST === 'test' ? test() : main(require('fs').readFileSync('dev/stdin', 'utf8')))\n  : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02850_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(inp) {\n    const ZFBxnM = {\n        'plFqA': function (callee, param1) {\n            return callee(param1);\n        },\n        'DitoP': function (x, y) {\n            return x === y;\n        },\n        'axvbA': function (x, y) {\n            return x + y;\n        }\n    };\n    inp = inp['trim']()['split']('\\x0a');\n    const N = ZFBxnM['plFqA'](Number, inp['shift']());\n    let G = [...new Array(N)]['map'](a => []);\n    let vp = new Array();\n    inp['forEach'](r => {\n        r = r['split']('\\x20')['map'](n => n - 0x1);\n        G[r[0x0]]['push'](r[0x1]);\n        G[r[0x1]]['push'](r[0x0]);\n        vp['push'](r[0x0] + '-' + r[0x1]);\n    });\n    let K = 0x0;\n    let I = new Map();\n    let cs = new Array(N)['fill'](0x0);\n    let used = new Array(N)['fill'](0x0);\n    let que = new Array();\n    used[0x0] = 0x1;\n    que['push'](0x0);\n    while (que['length']) {\n        let v = que['shift']();\n        if (K < G[v]['length'])\n            K = G[v]['length'];\n        let cur = 0x1;\n        for (const u of G[v]) {\n            if (used[u])\n                continue;\n            if (ZFBxnM['DitoP'](cur, cs[v]))\n                cur++;\n            cs[u] = I[ZFBxnM['axvbA'](u, '-') + v] = I[ZFBxnM['axvbA'](ZFBxnM['axvbA'](v, '-'), u)] = cur++;\n            used[u] = 0x1;\n            que['push'](u);\n        }\n    }\n    console['log'](K);\n    vp['forEach'](v => {\n        console['log'](I[v]);\n    });\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 2\n2 3", "2\n1\n2"], ["8\n1 2\n2 3\n2 4\n2 5\n4 7\n5 6\n6 8", "4\n1\n2\n3\n4\n1\n1\n2"], ["6\n1 2\n1 3\n1 4\n1 5\n1 6", "5\n1\n2\n3\n4\n5"]], "original": "'use strict'\nfunction main(inp) {\n  inp = inp.trim().split('\\n')\n  const N = Number(inp.shift())\n  let G = [...new Array(N)].map(a => [])\n  let vp = new Array()\n  \n  inp.forEach(r => {\n    r = r.split(' ').map(n => n - 1)\n    G[r[0]].push(r[1])\n    G[r[1]].push(r[0])\n    vp.push(r[0]+'-'+r[1])\n  })\n\n  let K = 0;\n  let I = new Map()\n  let cs = new Array(N).fill(0)\n  let used = new Array(N).fill(0)\n  let que = new Array()\n\n  used[0] = 1\n  que.push(0)\n\n  while(que.length) {\n    let v = que.shift()\n    if (K < G[v].length) K = G[v].length\n    let cur = 1\n    for (const u of G[v]) {\n      if (used[u]) continue;\n      if (cur === cs[v]) cur++\n      cs[u] = I[u+'-'+v] = I[v+'-'+u] = cur++\n      used[u] = 1\n      que.push(u)\n    }\n  }\n\n  console.log(K)\n  vp.forEach(v => {\n    console.log(I[v])\n  })\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02883_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var yGcYhB = {\n        'ZIVmF': function (x, y) {\n            return x - y;\n        },\n        'qkBlK': function (x, y) {\n            return x === y;\n        },\n        'zqVVd': function (x, y) {\n            return x < y;\n        },\n        'IgGze': function (x, y) {\n            return x * y;\n        },\n        'yNiou': function (x, y) {\n            return x > y;\n        },\n        'cZPcr': function (x, y) {\n            return x / y;\n        },\n        'ijFVG': function (x, y) {\n            return x + y;\n        },\n        'Bapkk': function (x, y) {\n            return x - y;\n        },\n        'puFyS': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (yGcYhB['qkBlK'](input[input['length'] - 0x1], '')) {\n        input['pop']();\n    }\n    const N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    const K = yGcYhB['ZIVmF'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    var A = input[0x1]['split']('\\x20')['map'](e => {\n        return yGcYhB['ZIVmF'](e, 0x0);\n    })['sort']((a, b) => {\n        return yGcYhB['ZIVmF'](a, b);\n    });\n    var F = input[0x2]['split']('\\x20')['map'](e => {\n        return e - 0x0;\n    })['sort']((a, b) => {\n        return yGcYhB['ZIVmF'](b, a);\n    });\n    var possible = 0x0;\n    for (var i = 0x0; yGcYhB['zqVVd'](i, N); i++) {\n        possible = Math['max'](possible, yGcYhB['IgGze'](A[i], F[i]));\n    }\n    var impossible = -0x1;\n    var temp;\n    var sum;\n    while (yGcYhB['yNiou'](yGcYhB['ZIVmF'](possible, impossible), 0x1)) {\n        temp = Math['ceil'](yGcYhB['cZPcr'](yGcYhB['ijFVG'](impossible, possible), 0x2));\n        sum = 0x0;\n        for (var i = 0x0; yGcYhB['zqVVd'](i, N); i++) {\n            sum += Math['max'](0x0, yGcYhB['Bapkk'](A[i], Math['floor'](temp / F[i])));\n        }\n        if (yGcYhB['puFyS'](sum, K)) {\n            possible = temp;\n        } else {\n            impossible = temp;\n        }\n    }\n    console['log'](possible);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 5\n4 2 1\n2 3 1", "2"], ["3 8\n4 2 1\n2 3 1", "0"], ["11 14\n3 1 4 1 5 9 2 6 5 3 5\n8 9 7 9 3 2 3 8 4 6 2", "12"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const K=input[0].split(' ')[1]-0;\n  var A=input[1].split(' ').map(e=>{\n    return e-0;\n  }).sort((a,b)=>{\n    return a-b;\n  });\n  var F=input[2].split(' ').map(e=>{\n    return e-0;\n  }).sort((a,b)=>{\n    return b-a;\n  });\n  var possible=0;\n  for(var i=0;i<N;i++){\n    possible=Math.max(possible,A[i]*F[i]);\n  }\n  var impossible=-1;\n  var temp;\n  var sum;\n  while(possible-impossible>1){\n    temp=Math.ceil((impossible+possible)/2);\n    sum=0;\n    for(var i=0;i<N;i++){\n      sum+=Math.max(0,A[i]-Math.floor(temp/F[i]));\n    }\n    if(sum<=K){\n      possible=temp;\n    }else{\n      impossible=temp;\n    }\n  }\n  console.log(possible);\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02960_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(inp) {\n    const iQOENS = {\n        'YxwTB': function (x, y) {\n            return x < y;\n        },\n        'gfRJc': function (x, y) {\n            return x === y;\n        },\n        'esoAQ': function (x, y) {\n            return x - y;\n        },\n        'JILRA': function (x, y) {\n            return x !== y;\n        },\n        'zBsVI': function (x, y) {\n            return x !== y;\n        },\n        'DOHNb': function (x, y) {\n            return x + y;\n        },\n        'mMxUw': function (x, y) {\n            return x % y;\n        },\n        'Kutwi': function (x, y) {\n            return x * y;\n        },\n        'jjtAt': function (x, y) {\n            return x < y;\n        }\n    };\n    inp = inp['trim']();\n    const MOD = 0x3b9aca07;\n    let dp = [new Array(0xd)['fill'](0x0)];\n    dp[0x0][0x0] = 0x1;\n    for (let i = 0x0; iQOENS['YxwTB'](i, inp['length']); i++) {\n        dp[i + 0x1] = new Array(0xd)['fill'](0x0);\n        const c = iQOENS['gfRJc'](inp[i], '?') ? -0x1 : iQOENS['esoAQ'](inp[i], 0x0);\n        for (let j = 0x0; iQOENS['YxwTB'](j, 0xa); j++) {\n            if (iQOENS['JILRA'](c, -0x1) && iQOENS['zBsVI'](c, j))\n                continue;\n            for (let k = 0x0; iQOENS['YxwTB'](k, 0xd); k++) {\n                dp[iQOENS['DOHNb'](i, 0x1)][iQOENS['mMxUw'](iQOENS['DOHNb'](iQOENS['Kutwi'](k, 0xa), j), 0xd)] += dp[i][k];\n            }\n        }\n        for (let j = 0x0; iQOENS['jjtAt'](j, 0xd); j++) {\n            dp[iQOENS['DOHNb'](i, 0x1)][j] %= MOD;\n        }\n    }\n    console['log'](dp[inp['length']][0x5]);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["??2??5", "768"], ["?44", "1"], ["7?4", "0"], ["?6?42???8??2??06243????9??3???7258??5??7???????774????4?1??17???9?5?70???76???", "153716888"]], "original": "'use strict'\nfunction main(inp) {\n  inp = inp.trim()\n\n  const MOD = 1000000007\n  let dp = [new Array(13).fill(0)]\n  dp[0][0] = 1\n  \n  for (let i = 0; i < inp.length; i++) {\n    dp[i + 1] = new Array(13).fill(0)\n    const c = inp[i] === '?' ? -1 : inp[i] - 0\n    for (let j = 0; j < 10; j++) {\n      if (c !== -1 && c !== j) continue\n      for (let k = 0; k < 13; k++) {\n        dp[i+1][(k * 10 + j) % 13] += dp[i][k]\n      }\n    }\n    for (let j = 0; j < 13; j++) {\n      dp[i+1][j] %= MOD\n    }\n  }\n  console.log(dp[inp.length][5])\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p02990_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TUYhyl = {\n        'GrARl': '3|4|2|1|0|7|5|6|8',\n        'zquLI': function (x, y) {\n            return x + y;\n        },\n        'JSvCQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'aIOgw': function (x, y) {\n            return x <= y;\n        },\n        'uhSJm': function (x, y) {\n            return x % y;\n        },\n        'glNSC': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'kmOUO': function (x, y) {\n            return x - y;\n        },\n        'HQaVn': function (x, y) {\n            return x - y;\n        },\n        'EHnvS': function (x, y) {\n            return x % y;\n        },\n        'JeFUF': function (x, y) {\n            return x * y;\n        }\n    };\n    var CmEPfT = TUYhyl['GrARl']['split']('|');\n    var SjoroQ = 0x0;\n    while (!![]) {\n        switch (CmEPfT[SjoroQ++]) {\n        case '0':\n            var mod = TUYhyl['zquLI'](Math['pow'](0xa, 0x9), 0x7);\n            continue;\n        case '1':\n            var anssub = new Array();\n            continue;\n        case '2':\n            var K = parseInt(input[0x0]['split']('\\x20')[0x1]);\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            var N = TUYhyl['JSvCQ'](parseInt, input[0x0]['split']('\\x20')[0x0]);\n            continue;\n        case '5':\n            var ans = anssub['join']('\\x0a');\n            continue;\n        case '6':\n            console['log']('%s', ans);\n            continue;\n        case '7':\n            for (var i = 0x1; TUYhyl['aIOgw'](i, K); i++) {\n                var a = TUYhyl['uhSJm'](TUYhyl['glNSC'](combination, TUYhyl['zquLI'](TUYhyl['kmOUO'](N, K), 0x1), i), mod);\n                var b = TUYhyl['glNSC'](combination, TUYhyl['HQaVn'](K, 0x1), i - 0x1) % mod;\n                var c = TUYhyl['EHnvS'](TUYhyl['JeFUF'](a, b), mod);\n                anssub['push'](c);\n            }\n            continue;\n        case '8':\n            return ans;\n        }\n        break;\n    }\n}\nfunction permutation(n, r) {\n    var jwLjHM = {\n        'dJViO': function (x, y) {\n            return x < y;\n        },\n        'ilkPm': function (x, y) {\n            return x - y;\n        }\n    };\n    for (var i = 0x0, res = 0x1; jwLjHM['dJViO'](i, r); i++) {\n        res *= jwLjHM['ilkPm'](n, i);\n    }\n    return res;\n}\nfunction combination(n, r) {\n    var MeArED = {\n        'JVibD': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return MeArED['JVibD'](permutation, n, r) / permutation(r, r);\n}\nfunction debug(n) {\n    var qEpoPE = {\n        'BFCmm': '4|3|0|1|2',\n        'Iyypw': function (x, y) {\n            return x == y;\n        },\n        'dXoZW': function (x, y) {\n            return x + y;\n        },\n        'gSELT': 'result',\n        'seKnr': function (x, y) {\n            return x + y;\n        },\n        'cvYzK': 'input'\n    };\n    var epIihn = qEpoPE['BFCmm']['split']('|');\n    var ooVPfT = 0x0;\n    while (!![]) {\n        switch (epIihn[ooVPfT++]) {\n        case '0':\n            var result = 'WA';\n            continue;\n        case '1':\n            if (qEpoPE['Iyypw'](ans, document['getElementById'](qEpoPE['dXoZW']('output', n))['value']['split']('\\x0a')[0x0])) {\n                result = 'AC';\n            }\n            continue;\n        case '2':\n            document['getElementById'](qEpoPE['dXoZW'](qEpoPE['gSELT'], n))['innerHTML'] = result;\n            continue;\n        case '3':\n            var ans = Main(input);\n            continue;\n        case '4':\n            var input = document['getElementById'](qEpoPE['seKnr'](qEpoPE['cvYzK'], n))['value'];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3", "3\n6\n1"], ["2000 3", "1998\n3990006\n327341989"]], "original": "\n\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0].split(\" \")[0]);\n  var K = parseInt(input[0].split(\" \")[1]);\n  var anssub=new Array();\n  var mod =Math.pow(10,9)+7;\n  for(var i=1;i<=K;i++){\n    var a = combination(N-K+1,i)%mod;\n    var b = combination(K-1,i-1)%mod;\n    var c = a*b%mod;\n    anssub.push(c);\n  }\n  var ans = anssub.join(\"\\n\");\n\n  console.log('%s', ans);\n  return ans;\n}\nfunction permutation(n, r) {\n  for(var i = 0, res = 1; i < r; i++) {\n  res *= n - i;\n  }\n  return res;\n}\n  \nfunction combination(n, r) {\n  return permutation(n, r) / permutation(r, r);\n}\n\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03156_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const gOTeUW = {\n        'toIiV': function (callee, param1) {\n            return callee(param1);\n        },\n        'hrylc': function (callee, param1) {\n            return callee(param1);\n        },\n        'dDmdx': function (x, y) {\n            return x < y;\n        },\n        'zgNWW': function (x, y) {\n            return x <= y;\n        }\n    };\n    let xs = input['trim']()['split']('\\x0a');\n    let N = gOTeUW['toIiV'](Number, xs[0x0]);\n    let A = Number(xs[0x1]['split']('\\x20')[0x0]);\n    let B = gOTeUW['hrylc'](Number, xs[0x1]['split']('\\x20')[0x1]);\n    let P1 = [];\n    let P2 = [];\n    let P3 = [];\n    let P = xs[0x2]['split']('\\x20')['map'](v => parseInt(v, 0xa));\n    for (let i = 0x0; gOTeUW['dDmdx'](i, N); i++) {\n        if (gOTeUW['zgNWW'](P[i], A)) {\n            P1['push'](P[i]);\n        } else if (gOTeUW['zgNWW'](P[i], B)) {\n            P2['push'](P[i]);\n        } else {\n            P3['push'](P[i]);\n        }\n    }\n    let ans = Math['min'](P1['length'], P2['length'], P3['length']);\n    console['log'](ans);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\n5 15\n1 10 16 2 7 20 12", "2"], ["8\n3 8\n5 5 5 10 10 10 15 20", "0"], ["3\n5 6\n5 6 10", "1"]], "original": "\"use strict\";\nconst Main = (input) =>{\n   let xs = input.trim().split('\\n');\n   let N = Number(xs[0]);\n   let A = Number(xs[1].split(\" \")[0]);\n   let B = Number(xs[1].split(\" \")[1]);\n   let P1 = [];\n   let P2 = [];\n   let P3 = [];\n   let P = xs[2].split(' ').map(v=>parseInt(v,10));\n   \n   for(let i=0; i<N; i++){\n     if(P[i]<=A){\n       P1.push(P[i]);\n     }else if(P[i]<=B){\n       P2.push(P[i]);\n     }else{\n       P3.push(P[i])\n     }\n   }\n   let ans =Math.min(P1.length,P2.length,P3.length);\n   console.log(ans)\n}\nMain(require('fs').readFileSync('/dev/stdin','utf8'));", "language": "JavaScript"}
{"filename": "p03296_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction myin() {\n    var bKozrx = {\n        'MHNCx': function (callee, param1) {\n            return callee(param1);\n        },\n        'mdrPL': '/dev/stdin',\n        'RNxZi': 'utf8'\n    };\n    return bKozrx['MHNCx'](require, 'fs')['readFileSync'](bKozrx['mdrPL'], bKozrx['RNxZi'])['trim']();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myconv(i, no) {\n    var rfkbKQ = {\n        'yVkdW': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return rfkbKQ['yVkdW'](parseInt, i);\n    case 0x2:\n        return i['split']('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i['split']('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i['split']('\\x0a')['map'](a => Number(a));\n    case 0x6:\n        return i['split']('');\n    case 0x7:\n        return i['split']('')['map'](a => Number(a));\n    }\n}\nfunction Main(input) {\n    var AzncWT = {\n        'dAqsl': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'tMctr': function (x, y) {\n            return x < y;\n        },\n        'NmDtH': function (x, y) {\n            return x + y;\n        },\n        'CHOPz': function (x, y) {\n            return x == y;\n        }\n    };\n    input = myconv(input, 0x3);\n    var N = AzncWT['dAqsl'](myconv, input[0x0], 0x1);\n    var list = AzncWT['dAqsl'](myconv, input[0x1], 0x4);\n    var output = 0x0;\n    for (var i = 0x0; AzncWT['tMctr'](i, N - 0x1); i++) {\n        var mae = list[i];\n        var ato = list[AzncWT['NmDtH'](i, 0x1)];\n        if (AzncWT['CHOPz'](mae, ato)) {\n            output++;\n            list[AzncWT['NmDtH'](i, 0x1)] = -0x1;\n        }\n    }\n    myout(output);\n}\nMain(myin());", "test_cases": [["5\n1 1 2 2 2", "2"], ["3\n1 2 1", "0"], ["5\n1 1 1 1 1", "2"], ["14\n1 2 2 3 3 3 4 4 4 4 1 2 3 4", "4"]], "original": "'use strict'\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  var N = myconv(input[0],1);\n  var list = myconv(input[1],4);\n  var output = 0;\n  for(var i = 0; i < N - 1; i++){\n    var mae = list[i];\n    var ato = list[i+1];\n    if(mae == ato){\n       output++;\n      list[i+1] = -1;\n       }\n  }\n  myout(output);\n}\n  \nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03341_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const SLlxtt = {\n        'bkxIz': function (callee, param1) {\n            return callee(param1);\n        },\n        'qVWcz': function (x, y) {\n            return x - y;\n        },\n        'DlCwp': function (x, y) {\n            return x === y;\n        },\n        'rYJcP': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = SLlxtt['bkxIz'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const A = arg[0x1]['split']('');\n    const Rsum = A['filter'](n => n === 'E')['length'];\n    const Lsum = N - Rsum;\n    let Rcnt = 0x0;\n    let Lcnt = 0x0;\n    let answer = Infinity;\n    for (let i = 0x0; i < N; i++) {\n        const needMoveLeft = Lcnt;\n        let needMoveRight = SLlxtt['qVWcz'](Rsum, Rcnt);\n        if (SLlxtt['DlCwp'](A[i], 'E')) {\n            needMoveRight--;\n        }\n        answer = Math['min'](answer, SLlxtt['rYJcP'](needMoveLeft, needMoveRight));\n        if (SLlxtt['DlCwp'](A[i], 'W')) {\n            Lcnt++;\n        } else {\n            Rcnt++;\n        }\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\nWEEWW", "1"], ["12\nWEWEWEEEWWWE", "4"], ["8\nWWWWWEEE", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const A = arg[1].split(\"\");\n    \n    const Rsum = A.filter(n=>n===\"E\").length;\n    const Lsum = N - Rsum;\n    \n    let Rcnt = 0;\n    let Lcnt = 0;\n    \n    let answer = Infinity;\n    \n    for(let i=0; i<N; i++) {\n        // 左半分\n        const needMoveLeft = Lcnt;\n        \n        // 右半分\n        let needMoveRight = Rsum - Rcnt;\n        \n        if(A[i] === \"E\") {\n            needMoveRight--;\n        }\n    \n        answer = Math.min(answer, needMoveLeft + needMoveRight);\n        \n        \n        if(A[i] === \"W\") {\n            Lcnt++;\n        } else {\n            Rcnt++;\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03346_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const JZSmBU = {\n        'ENAXi': function (callee, param1) {\n            return callee(param1);\n        },\n        'iGsZz': function (x, y) {\n            return x < y;\n        },\n        'ZqqkZ': function (x, y) {\n            return x + y;\n        }\n    };\n    const [N, ...P] = args['trim']()['split']('\\x0a')['map'](v => v | 0x0);\n    const dp = JZSmBU['ENAXi'](Array, N)['fill'](0x0);\n    for (let i = 0x0; JZSmBU['iGsZz'](i, N); i++)\n        dp[P[i] + 0x1] = JZSmBU['ZqqkZ'](dp[P[i]], 0x1);\n    return '' + (N - dp['reduce']((a, b) => a > b ? a : b, 0x0));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4\n1\n3\n2\n4", "2"], ["6\n3\n2\n5\n1\n4\n6", "4"], ["8\n6\n3\n1\n2\n7\n4\n8\n5", "5"]], "original": "console.log((args=>{\n  const [N,...P] = args.trim().split('\\n').map(v=>v|0);\n  const dp = Array(N).fill(0);\n  for ( let i = 0; i < N; i++ ) dp[P[i]+1] = dp[P[i]] + 1;\n  return `${N-dp.reduce((a,b)=>(a>b)?a:b,0)}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03524_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const jhXFPl = {\n        'aEXfr': function (x, y) {\n            return x >= y;\n        },\n        'oIpjY': function (x, y) {\n            return x - y;\n        },\n        'SJndf': 'YES'\n    };\n    const s = input['trim']();\n    let array = s['split']('')['reduce']((a, c) => {\n        a[c['charCodeAt']() - 'a'['charCodeAt']()]++;\n        return a;\n    }, [\n        0x0,\n        0x0,\n        0x0\n    ]);\n    if (jhXFPl['aEXfr'](jhXFPl['oIpjY'](Math['max'](...array), Math['min'](...array)), 0x2)) {\n        console['log']('NO');\n    } else {\n        console['log'](jhXFPl['SJndf']);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abac", "YES"], ["aba", "NO"], ["babacccabab", "YES"]], "original": "function main(input) {\n  const s = input.trim()\n\n  let array = s.split('').reduce((a, c) => {\n    a[c.charCodeAt() - 'a'.charCodeAt()]++\n    return a\n  }, [0, 0, 0])\n\n  if (Math.max(...array) - Math.min(...array) >= 2) {\n    console.log('NO')\n  } else {\n    console.log('YES')\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p03660_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var RGTQDW = {\n        'MECHf': function (x, y) {\n            return x < y;\n        },\n        'ubulk': function (x, y) {\n            return x - y;\n        },\n        'dlbkt': function (x, y) {\n            return x == y;\n        },\n        'OqxqG': function (x, y) {\n            return x > y;\n        },\n        'mZaiv': function (x, y) {\n            return x + y;\n        },\n        'WGZBy': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'wXgzi': function (x, y) {\n            return x == y;\n        },\n        'QCbiT': function (x, y) {\n            return x + y;\n        },\n        'uMrfb': function (callee, param1) {\n            return callee(param1);\n        },\n        'VDxJc': function (x, y) {\n            return x - y;\n        },\n        'TIvKb': function (x, y) {\n            return x - y;\n        },\n        'keccu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'QQMKZ': function (x, y) {\n            return x - y;\n        },\n        'eEyqB': function (x, y) {\n            return x != y;\n        },\n        'mjyjQ': function (x, y) {\n            return x != y;\n        },\n        'mqjyX': function (x, y) {\n            return x - y;\n        },\n        'kzOYJ': function (x, y) {\n            return x <= y;\n        },\n        'Ftvyb': 'Fennec',\n        'PSYzD': 'Snuke'\n    };\n    input = input['split']('\\x0a');\n    var n = RGTQDW['uMrfb'](parseInt, input[0x0]);\n    a = new Array(RGTQDW['ubulk'](n, 0x1))['fill'](0x0);\n    b = new Array(RGTQDW['VDxJc'](n, 0x1))['fill'](0x0);\n    for (i = 0x0; RGTQDW['MECHf'](i, RGTQDW['ubulk'](n, 0x1)); i++) {\n        tmp = input[RGTQDW['mZaiv'](i, 0x1)]['split']('\\x20');\n        a[i] = RGTQDW['ubulk'](RGTQDW['uMrfb'](parseInt, tmp[0x0]), 0x1);\n        b[i] = RGTQDW['uMrfb'](parseInt, tmp[0x1]) - 0x1;\n    }\n    d1 = new Array(n)['fill'](n);\n    d1[0x0] = 0x0;\n    d2 = new Array(n)['fill'](n);\n    d2[RGTQDW['TIvKb'](n, 0x1)] = 0x0;\n    function f(x, d) {\n        for (i = 0x0; RGTQDW['MECHf'](i, RGTQDW['ubulk'](n, 0x1)); i++) {\n            if (RGTQDW['dlbkt'](a[i], x) && RGTQDW['OqxqG'](d[b[i]], d[a[i]])) {\n                d[b[i]] = RGTQDW['mZaiv'](d[a[i]], 0x1);\n                var j = i;\n                RGTQDW['WGZBy'](f, b[i], d);\n                i = j;\n            }\n            if (RGTQDW['wXgzi'](b[i], x) && RGTQDW['OqxqG'](d[a[i]], d[b[i]])) {\n                d[a[i]] = RGTQDW['QCbiT'](d[b[i]], 0x1);\n                var j = i;\n                RGTQDW['WGZBy'](f, a[i], d);\n                i = j;\n            }\n        }\n        return d;\n    }\n    d1 = RGTQDW['WGZBy'](f, 0x0, d1);\n    d2 = RGTQDW['keccu'](f, RGTQDW['QQMKZ'](n, 0x1), d2);\n    var x = 0x0;\n    for (i = 0x0; RGTQDW['MECHf'](i, n); i++) {\n        if (RGTQDW['eEyqB'](i, 0x0) && RGTQDW['mjyjQ'](i, RGTQDW['mqjyX'](n, 0x1))) {\n            if (RGTQDW['kzOYJ'](d1[i], d2[i])) {\n                x++;\n            }\n        }\n    }\n    var ans = RGTQDW['Ftvyb'];\n    if (RGTQDW['kzOYJ'](x, n - 0x2 - x)) {\n        ans = RGTQDW['PSYzD'];\n    }\n    console['log']('%s', ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7\n3 6\n1 2\n3 1\n7 4\n5 7\n1 4", "Fennec"], ["4\n1 4\n4 2\n2 3", "Snuke"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  a = new Array(n-1).fill(0);\n  b = new Array(n-1).fill(0);\n  for(i=0;i<n-1;i++){\n    tmp = input[i+1].split(\" \");\n    a[i]=parseInt(tmp[0])-1;\n    b[i]=parseInt(tmp[1])-1;\n  }\n  d1 = new Array(n).fill(n);\n  d1[0]=0;\n  d2 = new Array(n).fill(n);\n  d2[n-1]=0;\n  function f(x,d){\n    for(i=0;i<n-1;i++){\n      if(a[i]==x&&d[b[i]]>d[a[i]]){\n        d[b[i]]=d[a[i]]+1;\n        var j =i;\n        f(b[i],d);\n        i=j;\n      }\n      if(b[i]==x&&d[a[i]]>d[b[i]]){\n        d[a[i]]=d[b[i]]+1;\n        var j =i;\n        f(a[i],d);\n        i=j;\n      }\n    }\n    return d;\n  }\n  d1=f(0,d1);\n  d2=f(n-1,d2);\n  var x=0;\n  for(i=0;i<n;i++){\n    if(i!=0&&i!=n-1){\n      if(d1[i]<=d2[i]){\n        x++;\n      }\n    }\n  }\n  var ans=\"Fennec\";\n  if(x<=n-2-x){\n    ans=\"Snuke\";\n  }\n\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03715_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TfJJUO = {\n        'jWwqu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'TiTiF': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var pYiRzt = '0|3|1|2|4'['split']('|');\n    var RCoPbN = 0x0;\n    while (!![]) {\n        switch (pYiRzt[RCoPbN++]) {\n        case '0':\n            input = input['trim']()['split']('\\x0a')['map'](function (x) {\n                return x['split']('\\x20');\n            });\n            continue;\n        case '1':\n            var W = TfJJUO['jWwqu'](parseInt, input[0x0][0x1], 0xa);\n            continue;\n        case '2':\n            var ans = TfJJUO['TiTiF'](calc, H, W);\n            continue;\n        case '3':\n            var H = parseInt(input[0x0][0x0], 0xa);\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n}\nfunction calc(H, W) {\n    var KbdPXz = {\n        'ESuDa': function (x, y) {\n            return x === y;\n        },\n        'LFTTY': function (x, y) {\n            return x === y;\n        },\n        'MaWBE': function (x, y) {\n            return x % y;\n        },\n        'XtfRf': function (x, y) {\n            return x <= y;\n        },\n        'chVkW': function (x, y) {\n            return x * y;\n        },\n        'WhoDu': function (x, y) {\n            return x / y;\n        },\n        'qKpaJ': function (x, y) {\n            return x * y;\n        },\n        'gmnqO': function (x, y) {\n            return x - y;\n        },\n        'rLwIN': function (x, y) {\n            return x / y;\n        },\n        'ClSTM': function (x, y) {\n            return x * y;\n        },\n        'GhmCW': function (x, y) {\n            return x - y;\n        },\n        'yBvCP': function (x, y) {\n            return x * y;\n        },\n        'IdQkV': function (x, y) {\n            return x - y;\n        },\n        'poADZ': function (x, y) {\n            return x - y;\n        },\n        'YfYjm': function (x, y) {\n            return x / y;\n        },\n        'NehqX': function (x, y) {\n            return x / y;\n        },\n        'yNsrW': function (x, y) {\n            return x % y;\n        },\n        'ekCeD': function (x, y) {\n            return x > y;\n        }\n    };\n    if (KbdPXz['ESuDa'](H % 0x3, 0x0) || KbdPXz['LFTTY'](KbdPXz['MaWBE'](W, 0x3), 0x0))\n        return 0x0;\n    var result = H * W;\n    var tmp;\n    var oldtmp = result;\n    for (var i = 0x0; KbdPXz['XtfRf'](i, W); i++) {\n        tmp = Math['max'](Math['abs'](i * H - KbdPXz['chVkW'](W - i, Math['ceil'](KbdPXz['WhoDu'](H, 0x2)))), Math['abs'](KbdPXz['chVkW'](i, H) - KbdPXz['qKpaJ'](KbdPXz['gmnqO'](W, i), Math['floor'](KbdPXz['rLwIN'](H, 0x2)))), KbdPXz['ClSTM'](KbdPXz['MaWBE'](H, 0x2), KbdPXz['GhmCW'](W, i)));\n        result = Math['min'](result, tmp);\n        if (tmp > oldtmp)\n            break;\n        oldtmp = tmp;\n    }\n    [W, H] = [\n        H,\n        W\n    ];\n    oldtmp = KbdPXz['yBvCP'](H, W);\n    for (var i = 0x0; i <= W; i++) {\n        tmp = Math['max'](Math['abs'](KbdPXz['IdQkV'](i * H, KbdPXz['chVkW'](KbdPXz['poADZ'](W, i), Math['ceil'](KbdPXz['YfYjm'](H, 0x2))))), Math['abs'](KbdPXz['gmnqO'](KbdPXz['ClSTM'](i, H), KbdPXz['GhmCW'](W, i) * Math['floor'](KbdPXz['NehqX'](H, 0x2)))), KbdPXz['yBvCP'](KbdPXz['yNsrW'](H, 0x2), KbdPXz['IdQkV'](W, i)));\n        result = Math['min'](result, tmp);\n        if (KbdPXz['ekCeD'](tmp, oldtmp))\n            break;\n        oldtmp = tmp;\n    }\n    return Math['min'](result, H, W);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 5", "0"], ["4 5", "2"], ["5 5", "4"], ["100000 2", "1"], ["100000 100000", "50000"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar H = parseInt(input[0][0], 10);\n\tvar W = parseInt(input[0][1], 10);\n\tvar ans = calc(H, W);\n\tconsole.log(ans);\n}\n\nfunction calc(H, W){\n\tif (H % 3 === 0 || W % 3 === 0) return 0;\n\tvar result = H * W;\n\tvar tmp;\n\tvar oldtmp = result;\n\tfor (var i = 0; i <= W; i++){\n\t\ttmp = Math.max(Math.abs(i * H - (W - i) * Math.ceil(H / 2)), Math.abs(i * H - (W - i) * Math.floor(H / 2)), (H % 2) * (W - i));\n\t\tresult = Math.min(result, tmp);\n\t\tif (tmp > oldtmp) break;\n\t\toldtmp = tmp;\n\t}\n\t[W, H] = [H, W];\n\toldtmp =  H * W;\n\tfor (var i = 0; i <= W; i++){\n\t\ttmp = Math.max(Math.abs(i * H - (W - i) * Math.ceil(H / 2)), Math.abs(i * H - (W - i) * Math.floor(H / 2)), (H % 2) * (W - i));\n\t\tresult = Math.min(result, tmp);\n\t\tif (tmp > oldtmp) break;\n\t\toldtmp = tmp;\n\t}\n\treturn Math.min(result, H, W);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03987_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst lines = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nconst N = +lines[0x0];\nconst A = lines[0x1]['split']('\\x20');\nlet indices = [];\nfor (let i = 0x0; i < N; i++) {\n    A[i] = +A[i];\n    indices[indices['length']] = i;\n}\nindices = indices['sort']((a, b) => A[a] - A[b]);\nlet sum = 0x0, que = [[\n            0x0,\n            N - 0x1,\n            0x0\n        ]];\nwhile (que['length'] > 0x0) {\n    let lri = que['shift'](), left = lri[0x0], right = lri[0x1], index = lri[0x2];\n    if (left > right)\n        continue;\n    let i = index;\n    while (indices[i] < left || indices[i] > right)\n        i++;\n    let ind = indices[i];\n    sum += A[ind] * (ind - left + 0x1) * (right - ind + 0x1);\n    if (left <= ind - 0x1)\n        que[que['length']] = [\n            left,\n            ind - 0x1,\n            i + 0x1\n        ];\n    if (ind + 0x1 <= right)\n        que[que['length']] = [\n            ind + 0x1,\n            right,\n            i + 0x1\n        ];\n}\nconsole['log'](sum);", "test_cases": [["3\n2 1 3", "9"], ["4\n1 3 2 4", "19"], ["8\n5 4 8 1 2 6 7 3", "85"]], "original": "'use strict';\n\nconst lines = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nconst N = +lines[0];\nconst A = lines[1].split(' ');\n\nlet indices = [];\nfor (let i = 0; i < N; i++) {\n\tA[i] = +A[i];\n\tindices[indices.length] = i;\n}\n\nindices = indices.sort((a, b) => A[a] - A[b]);\n\nlet sum = 0,\n\tque = [[0, N - 1, 0]];\n\nwhile (que.length > 0) {\n\tlet lri = que.shift(),\n\t\tleft = lri[0],\n\t\tright = lri[1],\n\t\tindex = lri[2];\n\t\n\tif (left > right) continue;\n\t\n\tlet i = index;\n\twhile (indices[i] < left || indices[i] > right) i++;\n\tlet ind = indices[i];\n\t\n\tsum += A[ind] * (ind - left + 1) * (right - ind + 1);\n\tif (left <= ind - 1) que[que.length] = [left, ind - 1, i + 1];\n\tif (ind + 1 <= right) que[que.length] = [ind + 1, right, i + 1];\n}\n\nconsole.log(sum);", "language": "JavaScript"}
{"filename": "p04047_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const wmkIhv = {\n        'fxAFu': function (x, y) {\n            return x < y;\n        },\n        'vWCbO': function (x, y) {\n            return x > y;\n        },\n        'kDxTO': function (x, y) {\n            return x + y;\n        },\n        'VGyZy': function (x, y) {\n            return x * y;\n        }\n    };\n    const data = input['split'](/\\n/);\n    const num = data[0x0];\n    const hoge = data[0x1]['split'](/\\s/)['map'](a => parseInt(a, 0xa))['sort']((a, b) => {\n        if (wmkIhv['fxAFu'](a, b))\n            return 0x1;\n        if (wmkIhv['vWCbO'](a, b))\n            return -0x1;\n        return 0x0;\n    });\n    var res = 0x0;\n    for (i = 0x0; wmkIhv['fxAFu'](i, num); i++) {\n        res += hoge[wmkIhv['kDxTO'](wmkIhv['VGyZy'](i, 0x2), 0x1)];\n    }\n    console['log'](res);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 3 1 2", "3"], ["5\n100 1 2 3 14 15 58 58 58 29", "135"]], "original": "const main = (input) =>  {\n  const data = input.split(/\\n/);\n  const num = data[0]\n  const hoge = data[1].split(/\\s/).map((a) => parseInt(a, 10)).sort((a, b) => {\n    if (a < b ) return 1;\n    if (a > b ) return -1;\n    return 0;\n  })\n  var res = 0;\n  for (i = 0; i < num; i ++ ) {\n    res += (hoge[i*2 + 1]);\n  }\n  console.log(res)\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p00013_1", "type": "JavaScript", "obfuscated": "q = [];\nrequire('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['some'](function (i) {\n    var MziHON = {\n        'mIBpc': function (x, y) {\n            return x != y;\n        }\n    };\n    MziHON['mIBpc'](i, 0x0) ? q['push'](i) : console['log'](q['pop']());\n});", "test_cases": [["1\n6\n0\n8\n10\n0\n0\n0", "6\n10\n8\n1"]], "original": "q=[];require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){i!=0?q.push(i):console.log(q.pop())})", "language": "JavaScript"}
{"filename": "p00050_1", "type": "JavaScript", "obfuscated": "console['log'](require('fs')['readFileSync']('/dev/stdin', 'utf8')['replace'](/apple/, '\\x09')['replace'](/peach/, 'apple')['replace'](/\\t/, 'peach')['trim']());", "test_cases": [["the cost of one peach is higher than that of one apple.", "the cost of one apple is higher than that of one peach."]], "original": "console.log(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").replace(/apple/,'\\t').replace(/peach/,'apple').replace(/\\t/,'peach').trim())", "language": "JavaScript"}
{"filename": "p00058_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    (function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        var eHwYBh = {\n            'gLFhw': '1|2|6|4|3|5|7|8|0',\n            'kcyRf': function (x, y) {\n                return x !== y;\n            },\n            'YFiMU': function (x, y) {\n                return x - y;\n            },\n            'jFFEU': function (x, y) {\n                return x / y;\n            },\n            'nZAfl': function (x, y) {\n                return x - y;\n            },\n            'tkIDF': function (x, y) {\n                return x == y;\n            },\n            'XKYag': function (x, y) {\n                return x == y;\n            },\n            'bmSLI': 'YES',\n            'uAHjc': function (x, y) {\n                return x - y;\n            },\n            'fQtfQ': function (x, y) {\n                return x == y;\n            },\n            'aXyGM': function (x, y) {\n                return x * y;\n            },\n            'NrBof': function (x, y) {\n                return x != y;\n            }\n        };\n        var BLSgni = eHwYBh['gLFhw']['split']('|');\n        var wYTHXk = 0x0;\n        while (!![]) {\n            switch (BLSgni[wYTHXk++]) {\n            case '0':\n                console['log'](ans);\n                continue;\n            case '1':\n                var k1;\n                continue;\n            case '2':\n                var k2;\n                continue;\n            case '3':\n                var ans = 'NO';\n                continue;\n            case '4':\n                if (eHwYBh['kcyRf'](eHwYBh['YFiMU'](x4, x3), 0x0))\n                    k2 = eHwYBh['jFFEU'](y4 - y3, eHwYBh['nZAfl'](x4, x3)['toFixed'](0xb));\n                else\n                    k2 = Infinity;\n                continue;\n            case '5':\n                if (eHwYBh['tkIDF'](k1, 0x0) && eHwYBh['XKYag'](k2, Infinity))\n                    ans = eHwYBh['bmSLI'];\n                continue;\n            case '6':\n                if (eHwYBh['kcyRf'](eHwYBh['uAHjc'](x2, x1), 0x0))\n                    k1 = (eHwYBh['YFiMU'](y2, y1) / (x2 - x1))['toFixed'](0xb);\n                else\n                    k1 = Infinity;\n                continue;\n            case '7':\n                if (eHwYBh['fQtfQ'](k2, 0x0) && k1 == Infinity)\n                    ans = eHwYBh['bmSLI'];\n                continue;\n            case '8':\n                if (k1 == eHwYBh['aXyGM'](-0x1, k2) && (eHwYBh['NrBof'](k1, 0x0) && eHwYBh['NrBof'](k2, 0x0)))\n                    ans = eHwYBh['bmSLI'];\n                continue;\n            }\n            break;\n        }\n    }['apply'](null, arr));\n}", "test_cases": [["1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0\n0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0\n10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1\n2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3", "YES\nNO\nNO\nYES"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   (function(x1, y1, x2, y2, x3, y3, x4, y4){\n      var k1;\n      var k2;\n      if(x2-x1!==0)k1=((y2-y1)/(x2-x1)).toFixed(11);\n      else k1=Infinity;\n      if(x4-x3!==0)k2=(y4-y3)/(x4-x3).toFixed(11);\n      else k2=Infinity;\n      var ans=\"NO\";\n      if(k1==0 && k2==Infinity)ans=\"YES\";\n      if(k2==0 && k1==Infinity)ans=\"YES\";\n      if(k1==(-1*k2) && (k1!=0 && k2!=0))ans=\"YES\";\n      console.log(ans);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00070_1", "type": "JavaScript", "obfuscated": "function perm(xs, n, s, callback) {\n    var OJIICu = {\n        'zAxVt': function (callee, param1) {\n            return callee(param1);\n        },\n        'otCSe': function (x, y) {\n            return x < y;\n        },\n        'FdUFU': '3|2|4|0|1',\n        'juYgG': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'BszWc': function (x, y) {\n            return x - y;\n        }\n    };\n    var x, i, len = xs['length'];\n    s = s || [];\n    if (n === 0x0) {\n        OJIICu['zAxVt'](callback, s);\n    } else {\n        for (i = 0x0; OJIICu['otCSe'](i, len); i++) {\n            var VvGawD = OJIICu['FdUFU']['split']('|');\n            var GEuHmk = 0x0;\n            while (!![]) {\n                switch (VvGawD[GEuHmk++]) {\n                case '0':\n                    s['pop']();\n                    continue;\n                case '1':\n                    xs['push'](x);\n                    continue;\n                case '2':\n                    s['push'](x);\n                    continue;\n                case '3':\n                    x = xs['shift']();\n                    continue;\n                case '4':\n                    OJIICu['juYgG'](perm, xs, OJIICu['BszWc'](n, 0x1), s, callback);\n                    continue;\n                }\n                break;\n            }\n        }\n    }\n}\nfunction main() {\n    var QcqnbX = {\n        'BBnfL': '0|2|3|5|7|1|6|4',\n        'fMxre': function (x, y) {\n            return x * y;\n        },\n        'ngOVH': function (x, y) {\n            return x === y;\n        },\n        'QSbrP': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        }\n    };\n    input['forEach'](function (line) {\n        var azxQUt = QcqnbX['BBnfL']['split']('|');\n        var aHIwNr = 0x0;\n        while (!![]) {\n            switch (azxQUt[aHIwNr++]) {\n            case '0':\n                var jToKwM = {\n                    'yzfFZ': function (x, y) {\n                        return QcqnbX['fMxre'](x, y);\n                    },\n                    'vBWPg': function (x, y) {\n                        return QcqnbX['ngOVH'](x, y);\n                    }\n                };\n                continue;\n            case '1':\n                s = line[0x1];\n                continue;\n            case '2':\n                var n, s, r = 0x0;\n                continue;\n            case '3':\n                if (line['trim']() === '')\n                    return;\n                continue;\n            case '4':\n                console['log'](r);\n                continue;\n            case '5':\n                line = line['split']('\\x20')['map'](parseFloat);\n                continue;\n            case '6':\n                QcqnbX['QSbrP'](perm, [\n                    0x0,\n                    0x1,\n                    0x2,\n                    0x3,\n                    0x4,\n                    0x5,\n                    0x6,\n                    0x7,\n                    0x8,\n                    0x9\n                ], n, [], function (xs) {\n                    r += jToKwM['vBWPg'](xs['reduce'](function (m, x, i) {\n                        return m + jToKwM['yzfFZ'](x, i + 0x1);\n                    }, 0x0), s) ? 0x1 : 0x0;\n                });\n                continue;\n            case '7':\n                n = line[0x0];\n                continue;\n            }\n            break;\n        }\n    });\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var NWlizO = {\n        'CEsSe': function (callee) {\n            return callee();\n        }\n    };\n    input = input['split']('\\x0a');\n    NWlizO['CEsSe'](main);\n});", "test_cases": [["3 10\n3 1", "8\n0"]], "original": "function perm(xs, n, s, callback) {\n  var\n  x, i, len = xs.length;\n  s = s || [];\n  if(n === 0) {\n    callback(s);\n  }else{\n    for(i = 0; i < len; i++){\n      x = xs.shift();\n      s.push(x);\n      perm(xs, n - 1, s, callback);\n      s.pop();\n      xs.push(x);\n    }\n  }\n}\n\nfunction main() {\n  input.forEach(function(line) {\n    var\n    n, s,\n    r = 0;\n    if(line.trim() === '') return;\n    line = line.split(' ').map(parseFloat);\n    n = line[0]; s = line[1];\n    perm([0,1,2,3,4,5,6,7,8,9], n, [], function(xs) {\n      r += xs.reduce(function(m, x, i) {\n        return m + x * (i + 1);\n      }, 0) === s ? 1 : 0;\n    });\n    console.log(r);\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p02241_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nA = require('fs')['readFileSync'](config['input'], 'ascii')['trim']()['split'](config['newline'])['map'](function (line) {\n    return line['trim']()['split']('\\x20')['map'](Number);\n});\nn = Number(A['shift']()[0x0]);\ncnt = 0x1;\ncost = 0x0;\nconn = new Array(n);\nconn[0x0] = !![];\nfor (i = 0x1; i < n; i++)\n    conn[i] = ![];\nwhile (cnt < n) {\n    min = Number['MAX_SAFE_INTEGER'];\n    for (i in conn) {\n        if (!conn[i])\n            continue;\n        Ai = A[i];\n        for (j in conn) {\n            if (conn[j])\n                continue;\n            if (Ai[j] !== -0x1 && Ai[j] < min) {\n                min = Ai[j];\n                min_j = j;\n            }\n        }\n    }\n    conn[min_j] = !![];\n    cost += min;\n    cnt++;\n}\nconsole['log'](cost);", "test_cases": [["5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1", "5"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nA = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline)\n  .map(function (line) { return line.trim().split(' ').map(Number); });\nn = Number(A.shift()[0]);\n\ncnt = 1;\ncost = 0;\nconn = new Array(n);\nconn[0] = true;\nfor (i = 1; i < n; i++) conn[i] = false;\n\nwhile (cnt < n) {\n  min = Number.MAX_SAFE_INTEGER;\n  for (i in conn) {\n    if (!conn[i]) continue;\n    Ai = A[i];\n    for (j in conn) {\n      if (conn[j]) continue;\n      if (Ai[j] !== -1 && Ai[j] < min) {\n        min = Ai[j];\n        min_j = j;\n      }\n    }\n  }\n  conn[min_j] = true;\n  cost += min;\n  cnt++;\n}\n\nconsole.log(cost);", "language": "JavaScript"}
{"filename": "p02720_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const GOwTXm = {\n        'wdGHY': function (callee, param1) {\n            return callee(param1);\n        },\n        'moDAS': function (x, y) {\n            return x + y;\n        },\n        'gsSOe': function (x, y) {\n            return x < y;\n        },\n        'ymsBH': function (x, y) {\n            return x > y;\n        },\n        'LuoKr': function (x, y) {\n            return x - y;\n        },\n        'fWImE': function (x, y) {\n            return x - y;\n        },\n        'MHnVZ': function (x, y) {\n            return x === y;\n        },\n        'CYAvn': function (callee, param1) {\n            return callee(param1);\n        },\n        'GkdJz': function (x, y) {\n            return x === y;\n        }\n    };\n    const k = GOwTXm['wdGHY'](parseInt, input[0x0]);\n    let i = 0x1;\n    let runruncounter = 0x0;\n    while (!![]) {\n        const j = GOwTXm['moDAS'](i, '')['split']('')['map'](a => parseInt(a));\n        let judge = !![];\n        for (let l = 0x1; GOwTXm['gsSOe'](l, j['length']); l++) {\n            if (GOwTXm['ymsBH'](Math['abs'](GOwTXm['LuoKr'](j[l], j[GOwTXm['fWImE'](l, 0x1)])), 0x1)) {\n                judge = ![];\n                if (GOwTXm['MHnVZ'](j[l], 0x9)) {\n                    j[l - 0x1] += 0x1;\n                    j[l] = 0x0;\n                } else {\n                    j[l] += 0x1;\n                }\n                i = GOwTXm['CYAvn'](parseInt, j['join'](''));\n                break;\n            }\n        }\n        if (judge) {\n            runruncounter++;\n            if (GOwTXm['GkdJz'](runruncounter, k)) {\n                console['log'](i);\n                break;\n            }\n            i++;\n        }\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["15", "23"], ["1", "1"], ["13", "21"], ["100000", "3234566667"]], "original": "\"use strict\";\nfunction main(input) {\n  const k = parseInt(input[0]);\n  let i = 1;\n  let runruncounter = 0;\n  while(true){\n    const j =  (i+\"\").split(\"\").map(a => parseInt(a));\n    let judge = true;\n\n    for(let l=1;l<j.length;l++){\n      //console.log(i);\n      if(Math.abs(j[l]-j[l-1])>1){\n        judge = false;\n        if(j[l]===9){\n          j[l-1]+=1;\n          j[l]=0;\n        }else{\n          j[l]+=1;\n        }\n        //console.log(i +\" \" + j + \" \" + runruncounter  )\n        i = parseInt(j.join(\"\"));\n        break;\n      }\n    }\n\n    if(judge){\n      runruncounter++;\n      if(runruncounter===k){\n        console.log(i);\n        break;\n      }\n      i++;\n    }\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02845_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var ZUwqZP = {\n        'cBIbo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'OVmnv': function (x, y) {\n            return x < y;\n        },\n        'HnXtS': function (x, y) {\n            return x === y;\n        },\n        'umEVV': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    var N = ZUwqZP['cBIbo'](parseInt, input[0x0][0x0], 0xa);\n    var RGBWithoutOrder = [\n        0x1,\n        0x0,\n        0x0\n    ];\n    var tmp1, tmp2, flag;\n    var ans = 0x3;\n    for (var i = 0x1; ZUwqZP['OVmnv'](i, N); i++) {\n        tmp2 = 0x0;\n        tmp1 = ZUwqZP['cBIbo'](parseInt, input[0x1][i], 0xa);\n        for (var x of RGBWithoutOrder) {\n            if (ZUwqZP['HnXtS'](x, tmp1))\n                tmp2++;\n        }\n        ans *= tmp2;\n        ans %= 0x3b9aca00 + 0x7;\n        for (var j = 0x0; ZUwqZP['umEVV'](j, 0x3); j++) {\n            if (ZUwqZP['HnXtS'](RGBWithoutOrder[j], tmp1)) {\n                RGBWithoutOrder[j]++;\n                break;\n            }\n        }\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n0 1 2 3 4 5", "3"], ["3\n0 0 0", "6"], ["54\n0 0 1 0 1 2 1 2 3 2 3 3 4 4 5 4 6 5 7 8 5 6 6 7 7 8 8 9 9 10 10 11 9 12 10 13 14 11 11 12 12 13 13 14 14 15 15 15 16 16 16 17 17 17", "115295190"]], "original": "function Main(input) {\n    input = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n    var N = parseInt(input[0][0], 10);\n    var RGBWithoutOrder = [1, 0, 0];\n    var tmp1, tmp2, flag;\n    var ans = 3;\n    for (var i = 1; i < N; i++){\n        tmp2 = 0;\n        tmp1 = parseInt(input[1][i], 10);\n        for (var x of RGBWithoutOrder){\n            if (x === tmp1) tmp2 ++;\n        }\n        ans *= tmp2;\n        ans %= (1e+9 + 7);\n\n        for (var j = 0; j < 3; j++){\n            if (RGBWithoutOrder[j] === tmp1){\n                RGBWithoutOrder[j] ++;\n                break;\n            }\n        }\n    }\n    console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03054_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var pFlUtO = {\n        'vsIHd': function (x, y) {\n            return x - y;\n        },\n        'abgLg': function (x, y) {\n            return x - y;\n        },\n        'clKBB': function (x, y) {\n            return x + y;\n        },\n        'YWApM': function (x, y) {\n            return x + y;\n        },\n        'XyRxy': function (x, y) {\n            return x - y;\n        },\n        'YPJyk': function (x, y) {\n            return x === y;\n        },\n        'PzNtq': function (x, y) {\n            return x === y;\n        },\n        'WcyWn': function (x, y) {\n            return x - y;\n        },\n        'gpoVb': function (x, y) {\n            return x === y;\n        },\n        'MjFkx': function (x, y) {\n            return x === y;\n        },\n        'mzsEP': function (x, y) {\n            return x + y;\n        },\n        'xszyU': function (x, y) {\n            return x + y;\n        },\n        'LtqrM': function (x, y) {\n            return x + y;\n        },\n        'bdwqG': function (x, y) {\n            return x === y;\n        },\n        'GtBgn': function (x, y) {\n            return x + y;\n        },\n        'XmbFi': function (x, y) {\n            return x + y;\n        },\n        'TVjlg': function (x, y) {\n            return x + y;\n        },\n        'pMckK': 'YES'\n    };\n    input = input['split'](/\\s+/);\n    var H = pFlUtO['vsIHd'](input['shift'](), 0x0);\n    var W = pFlUtO['vsIHd'](input['shift'](), 0x0);\n    var N = pFlUtO['vsIHd'](input['shift'](), 0x0);\n    var sr = pFlUtO['vsIHd'](input['shift'](), 0x0);\n    var sc = pFlUtO['abgLg'](input['shift'](), 0x0);\n    var S = input['shift']();\n    var T = input['shift']();\n    var dp = [[\n            sc,\n            sc,\n            sr,\n            sr\n        ]];\n    for (let i = 0x0; i < N; i++) {\n        dp[pFlUtO['clKBB'](i, 0x1)] = [];\n        dp[pFlUtO['YWApM'](i, 0x1)][0x0] = pFlUtO['XyRxy'](dp[i][0x0], pFlUtO['YPJyk'](S[i], 'L') ? 0x1 : 0x0);\n        dp[pFlUtO['clKBB'](i, 0x1)][0x1] = pFlUtO['YWApM'](dp[i][0x1], pFlUtO['PzNtq'](S[i], 'R') ? 0x1 : 0x0);\n        dp[pFlUtO['clKBB'](i, 0x1)][0x2] = pFlUtO['WcyWn'](dp[i][0x2], S[i] === 'U' ? 0x1 : 0x0);\n        dp[i + 0x1][0x3] = pFlUtO['YWApM'](dp[i][0x3], pFlUtO['gpoVb'](S[i], 'D') ? 0x1 : 0x0);\n        if (pFlUtO['MjFkx'](dp[i + 0x1][0x0], 0x0) || pFlUtO['MjFkx'](dp[pFlUtO['clKBB'](i, 0x1)][0x1], W + 0x1) || pFlUtO['PzNtq'](dp[pFlUtO['clKBB'](i, 0x1)][0x2], 0x0) || pFlUtO['MjFkx'](dp[pFlUtO['mzsEP'](i, 0x1)][0x3], H + 0x1)) {\n            console['log']('NO');\n            return;\n        }\n        dp[pFlUtO['clKBB'](i, 0x1)][0x0] = Math['min'](pFlUtO['xszyU'](dp[i + 0x1][0x0], pFlUtO['PzNtq'](T[i], 'R') ? 0x1 : 0x0), W);\n        dp[pFlUtO['LtqrM'](i, 0x1)][0x1] = Math['max'](dp[i + 0x1][0x1] - (pFlUtO['bdwqG'](T[i], 'L') ? 0x1 : 0x0), 0x1);\n        dp[pFlUtO['YWApM'](i, 0x1)][0x2] = Math['min'](pFlUtO['GtBgn'](dp[pFlUtO['LtqrM'](i, 0x1)][0x2], T[i] === 'D' ? 0x1 : 0x0), H);\n        dp[pFlUtO['XmbFi'](i, 0x1)][0x3] = Math['max'](dp[pFlUtO['TVjlg'](i, 0x1)][0x3] - (pFlUtO['bdwqG'](T[i], 'U') ? 0x1 : 0x0), 0x1);\n    }\n    console['log'](pFlUtO['pMckK']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 3\n2 2\nRRL\nLUD", "YES"], ["4 3 5\n2 2\nUDRRR\nLLDUD", "NO"], ["5 6 11\n2 1\nRLDRRUDDLRL\nURRDRLLDLRD", "NO"]], "original": "'use strict'\nfunction Main(input){\n  input=input.split(/\\s+/);\n  var H=input.shift()-0;\n  var W=input.shift()-0;\n  var N=input.shift()-0;\n  var sr=input.shift()-0;\n  var sc=input.shift()-0;\n  var S=input.shift();\n  var T=input.shift();\n  var dp=[[sc,sc,sr,sr]];\n  for(let i=0;i<N;i++){\n    dp[i+1]=[];\n    dp[i+1][0]=dp[i][0]-(S[i]==='L'?1:0);\n    dp[i+1][1]=dp[i][1]+(S[i]==='R'?1:0);\n    dp[i+1][2]=dp[i][2]-(S[i]==='U'?1:0);\n    dp[i+1][3]=dp[i][3]+(S[i]==='D'?1:0);\n    if(dp[i+1][0]===0||dp[i+1][1]===W+1||dp[i+1][2]===0||dp[i+1][3]===H+1){\n      console.log('NO');\n      return;\n    }\n    dp[i+1][0]=Math.min(dp[i+1][0]+(T[i]==='R'?1:0), W)\n    dp[i+1][1]=Math.max(dp[i+1][1]-(T[i]==='L'?1:0), 1)\n    dp[i+1][2]=Math.min(dp[i+1][2]+(T[i]==='D'?1:0), H)\n    dp[i+1][3]=Math.max(dp[i+1][3]-(T[i]==='U'?1:0), 1)\n  }\n  console.log('YES');\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03168_1", "type": "JavaScript", "obfuscated": "console['log'](function (args) {\n    const WogIIf = {\n        'rKKTx': function (x, y) {\n            return x | y;\n        },\n        'nYBfC': function (x, y) {\n            return x - y;\n        },\n        'yvekN': function (x, y) {\n            return x < y;\n        },\n        'AWfZX': function (x, y) {\n            return x - y;\n        },\n        'OaSYD': function (x, y) {\n            return x <= y;\n        },\n        'jfPRH': function (x, y) {\n            return x + y;\n        },\n        'DRRvf': function (x, y) {\n            return x + y;\n        },\n        'eCiFt': function (x, y) {\n            return x + y;\n        },\n        'lqykb': function (x, y) {\n            return x + y;\n        },\n        'fsECi': function (x, y) {\n            return x * y;\n        },\n        'ZPnlr': function (x, y) {\n            return x + y;\n        },\n        'OnoEH': function (x, y) {\n            return x - y;\n        },\n        'EgBSz': function (x, y) {\n            return x + y;\n        }\n    };\n    const tmp = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20'));\n    const N = WogIIf['rKKTx'](tmp['shift']()[0x0], 0x0);\n    const p = tmp[0x0]['map'](parseFloat);\n    const dp = Array(N)['fill'](0x0)['map'](r => Array(N + 0x1)['fill'](0x0));\n    dp[0x0][0x0] = WogIIf['nYBfC'](0x1, p[0x0]);\n    dp[0x0][0x1] = p[0x0];\n    for (let i = 0x0; WogIIf['yvekN'](i, WogIIf['AWfZX'](N, 0x1)); i++) {\n        for (let j = 0x0; WogIIf['OaSYD'](j, WogIIf['jfPRH'](i, 0x1)); j++) {\n            dp[WogIIf['jfPRH'](i, 0x1)][WogIIf['DRRvf'](j, 0x1)] += dp[i][j] * p[WogIIf['eCiFt'](i, 0x1)];\n            dp[WogIIf['lqykb'](i, 0x1)][j] += WogIIf['fsECi'](dp[i][j], WogIIf['AWfZX'](0x1, p[WogIIf['ZPnlr'](i, 0x1)]));\n        }\n    }\n    return dp[WogIIf['OnoEH'](N, 0x1)]['slice'](WogIIf['EgBSz'](N, 0x1) / 0x2)['reduce']((a, b) => a + b)['toString']();\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n0.30 0.60 0.80", "0.612"], ["1\n0.50", "0.5"], ["5\n0.42 0.01 0.42 0.99 0.42", "0.3821815872"]], "original": "console.log(function(args){\n  const tmp = args.trim().split('\\n').map( r=>r.split(' ') );\n  const N = tmp.shift()[0]|0;\n  const p = tmp[0].map(parseFloat);\n  const dp = Array(N).fill(0).map(r=>Array(N+1).fill(.0));\n  dp[0][0] = 1.0 - p[0];\n  dp[0][1] = p[0];\n  for ( let i = 0; i < N-1; i++ ) {\n    for ( let j = 0; j <= i + 1; j++ ) {\n      dp[i+1][j+1] += dp[i][j] * p[i+1];\n      dp[i+1][j] += dp[i][j] * (1.0-p[i+1]);\n    }\n  }\n  return dp[N-1].slice((N+1)/2).reduce((a,b)=>a+b).toString();\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03173_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (input) {\n    const cxMgCd = {\n        'kzwvD': function (x, y) {\n            return x > y;\n        },\n        'XvRtV': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['trim']()['split'](/\\s+/)['map'](x => x - 0x0);\n    const N = input['shift']();\n    const a = input;\n    var ans = 0x0;\n    while (cxMgCd['kzwvD'](a['length'], 0x1)) {\n        let x = a['splice'](a['indexOf'](Math['min']['apply'](null, a)), 0x1)[0x0];\n        let y = a['splice'](a['indexOf'](Math['min']['apply'](null, a)), 0x1)[0x0];\n        a['push'](cxMgCd['XvRtV'](x, y));\n        ans += cxMgCd['XvRtV'](x, y);\n    }\n    console['log'](ans);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4\n10 20 30 40", "190"], ["5\n10 10 10 10 10", "120"], ["3\n1000000000 1000000000 1000000000", "5000000000"], ["6\n7 6 8 6 1 1", "68"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const N=input.shift();\n  const a=input;\n  \n  var ans=0;\n  while(a.length>1){\n    let x=a.splice(a.indexOf(Math.min.apply(null,a)),1)[0];\n    let y=a.splice(a.indexOf(Math.min.apply(null,a)),1)[0];\n    a.push(x+y);\n    ans+=x+y;\n  }\n  \n  console.log(ans);\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03268_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const hCooUq = {\n        'aupsi': function (callee, param1) {\n            return callee(param1);\n        },\n        'clVnZ': function (x, y) {\n            return x % y;\n        },\n        'CpaMu': function (x, y) {\n            return x ** y;\n        },\n        'YFLxl': function (x, y) {\n            return x / y;\n        },\n        'scGBJ': function (x, y) {\n            return x ** y;\n        },\n        'jTLLj': function (x, y) {\n            return x + y;\n        },\n        'PijID': function (x, y) {\n            return x ** y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const line0 = input[0x0]['split']('\\x20');\n    let N = hCooUq['aupsi'](parseInt, line0[0x0]);\n    let K = hCooUq['aupsi'](parseInt, line0[0x1]);\n    if (hCooUq['clVnZ'](K, 0x2) === 0x0) {\n        console['log'](hCooUq['CpaMu'](Math['floor'](hCooUq['YFLxl'](N, K)), 0x3) + hCooUq['scGBJ'](Math['floor'](hCooUq['YFLxl'](hCooUq['jTLLj'](N, hCooUq['YFLxl'](K, 0x2)), K)), 0x3));\n    } else {\n        console['log'](hCooUq['PijID'](Math['floor'](hCooUq['YFLxl'](N, K)), 0x3));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2", "9"], ["5 3", "1"], ["31415 9265", "27"], ["35897 932", "114191"]], "original": "\"use strict\";\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  const line0 = input[0].split(\" \");\n  let N = parseInt(line0[0]);\n  let K = parseInt(line0[1]);\n  if (K % 2 === 0) {\n    console.log(Math.floor(N / K) ** 3 + Math.floor((N + K / 2) / K) ** 3);\n  } else {\n    console.log(Math.floor(N / K) ** 3);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03347_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const lSrvFF = {\n        'AtnsT': function (x, y) {\n            return x > y;\n        },\n        'gJQoB': function (x, y) {\n            return x < y;\n        },\n        'EiaKn': function (x, y) {\n            return x - y;\n        },\n        'ceYmI': function (x, y) {\n            return x === y;\n        },\n        'FAmZg': function (x, y) {\n            return x + y;\n        },\n        'IYNVL': function (x, y) {\n            return x <= y;\n        }\n    };\n    const [N, ...A] = args['trim']()['split']('\\x0a')['map'](v => v | 0x0);\n    if (lSrvFF['AtnsT'](A[0x0], 0x0))\n        return '-1';\n    let m = 0x0;\n    for (let i = 0x1; lSrvFF['gJQoB'](i, N); i++) {\n        if (lSrvFF['AtnsT'](A[i], i) || lSrvFF['AtnsT'](A[i], A[lSrvFF['EiaKn'](i, 0x1)] + 0x1))\n            return '-1';\n        if (lSrvFF['ceYmI'](A[i], lSrvFF['FAmZg'](A[lSrvFF['EiaKn'](i, 0x1)], 0x1)))\n            m++;\n        else if (lSrvFF['IYNVL'](A[i], A[i - 0x1]))\n            m += A[i];\n    }\n    return '' + m;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4\n0\n1\n1\n2", "3"], ["3\n1\n2\n1", "-1"], ["9\n0\n1\n1\n0\n1\n2\n2\n1\n2", "8"]], "original": "console.log((args=>{\n  const [N,...A] = args.trim().split('\\n').map(v=>v|0);\n  if ( A[0] > 0 ) return '-1';\n  let m = 0;\n  for ( let i = 1; i < N; i++ ) {\n    if ( A[i] > i || A[i] > A[i-1]+1) return '-1'\n    if ( A[i] === A[i-1]+1 ) m++;\n    else if ( A[i] <= A[i-1] ) m += A[i];\n  }\n  return `${m}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03464_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const VyKVRt = {\n        'yGeAz': function (x, y) {\n            return x >= y;\n        },\n        'KPPjJ': function (x, y) {\n            return x - y;\n        },\n        'FgiBi': function (x, y) {\n            return x + y;\n        },\n        'ZEaKx': function (x, y) {\n            return x + y;\n        },\n        'hKUnl': function (x, y) {\n            return x * y;\n        },\n        'jKZuh': function (x, y) {\n            return x / y;\n        },\n        'LPVbv': function (x, y) {\n            return x + y;\n        },\n        'wQUoN': function (x, y) {\n            return x / y;\n        }\n    };\n    const [[K], A] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => v | 0x0));\n    let min = 0x2, max = 0x3;\n    for (let i = K - 0x2; VyKVRt['yGeAz'](i, 0x0); i--) {\n        if (VyKVRt['KPPjJ'](VyKVRt['FgiBi'](max, A[VyKVRt['ZEaKx'](i, 0x1)]), 0x1) < A[i])\n            return '-1';\n        min = VyKVRt['hKUnl'](Math['ceil'](VyKVRt['jKZuh'](min, A[i])), A[i]);\n        max = VyKVRt['LPVbv'](VyKVRt['hKUnl'](Math['floor'](VyKVRt['wQUoN'](max, A[i])), A[i]), A[i]) - 0x1;\n    }\n    return min + '\\x20' + max;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4\n3 4 3 2", "6 8"], ["5\n3 4 100 3 2", "-1"], ["10\n2 2 2 2 2 2 2 2 2 2", "2 3"]], "original": "console.log((args=>{\n  const [[K],A] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let min = 2, max = 3;\n  for ( let i = K-2; i >= 0; i-- ) {\n    if ( max + A[i+1] - 1 < A[i] ) return '-1';\n    min = Math.ceil(min/A[i])*A[i];\n    max = Math.floor(max/A[i])*A[i] + A[i] - 1;\n  }\n  return `${min} ${max}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03617_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var JNvsZM = {\n        'dtQzg': function (x, y) {\n            return x < y;\n        },\n        'OtvAW': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; JNvsZM['dtQzg'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; JNvsZM['OtvAW'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var RgsktS = {\n        'IvnOB': function (x, y) {\n            return x + y;\n        },\n        'WouRx': 'Array(a[',\n        'jbqai': ';})',\n        'PiOeM': function (x, y) {\n            return x + y;\n        },\n        'oCPiy': function (x, y) {\n            return x + y;\n        },\n        'YqiDy': ']).fill().map(x=>',\n        'Gpxgw': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = RgsktS['IvnOB'](RgsktS['IvnOB'](RgsktS['WouRx'], --l) + ']).fill().map(x=>{return\\x20', v) + RgsktS['jbqai'];\n    while (--l)\n        r = RgsktS['PiOeM'](RgsktS['PiOeM'](RgsktS['IvnOB'](RgsktS['oCPiy']('Array(a[', l), RgsktS['YqiDy']), r), ')');\n    return RgsktS['Gpxgw'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var cuieeW = {\n        'VUDui': '2|5|3|1|0|4',\n        'zCuLn': function (x, y) {\n            return x < y;\n        },\n        'KdLjr': function (x, y) {\n            return x * y;\n        },\n        'hnoPq': function (x, y) {\n            return x * y;\n        },\n        'cQFGL': function (x, y) {\n            return x < y;\n        },\n        'FrpJB': function (x, y) {\n            return x * y;\n        },\n        'DsFlE': function (callee, param1) {\n            return callee(param1);\n        },\n        'LQARo': function (x, y) {\n            return x + y;\n        },\n        'mxXlN': function (x, y) {\n            return x | y;\n        },\n        'meIPf': function (callee, param1) {\n            return callee(param1);\n        },\n        'AZSBl': function (callee, param1) {\n            return callee(param1);\n        },\n        'Wdyyq': function (x, y) {\n            return x * y;\n        },\n        'KwOxZ': function (x, y) {\n            return x & y;\n        },\n        'HJlMk': function (callee) {\n            return callee();\n        }\n    };\n    var ujEOrU = cuieeW['VUDui']['split']('|');\n    var LfrBzG = 0x0;\n    while (!![]) {\n        switch (ujEOrU[LfrBzG++]) {\n        case '0':\n            if (cuieeW['zCuLn'](cuieeW['KdLjr'](s, 0x2), d))\n                d = cuieeW['hnoPq'](s, 0x2);\n            continue;\n        case '1':\n            if (cuieeW['cQFGL'](cuieeW['FrpJB'](h, 0x2), s))\n                s = cuieeW['KdLjr'](h, 0x2);\n            continue;\n        case '2':\n            var [q, h, s, d] = cuieeW['DsFlE'](nexts, 0x4);\n            continue;\n        case '3':\n            if (cuieeW['hnoPq'](q, 0x2) < h)\n                h = cuieeW['FrpJB'](q, 0x2);\n            continue;\n        case '4':\n            return cuieeW['LQARo'](cuieeW['DsFlE'](BigInt, cuieeW['mxXlN'](n / 0x2, 0x0)) * cuieeW['meIPf'](BigInt, d), cuieeW['AZSBl'](BigInt, cuieeW['Wdyyq'](cuieeW['KwOxZ'](n, 0x1), s)));\n        case '5':\n            var n = cuieeW['HJlMk'](next);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["20 30 70 90\n3", "150"], ["10000 1000 100 10\n1", "100"], ["10 100 1000 10000\n1", "40"], ["12345678 87654321 12345678 87654321\n123456789", "1524157763907942"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var [q,h,s,d] = nexts(4);\n  var n = next();\n  if(q*2 < h)h = q*2;\n  if(h*2 < s)s = h*2;\n  if(s*2 < d)d = s*2;\n  return BigInt(n/2|0)*BigInt(d) + BigInt((n&1)*s);\n}", "language": "JavaScript"}
{"filename": "p03637_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var oypKnS = {\n        'PYCtV': '7|8|3|0|10|6|1|4|5|2|9',\n        'xxFlq': function (x, y) {\n            return x <= y;\n        },\n        'WGZiL': 'Yes',\n        'REXeU': function (x, y) {\n            return x == y;\n        },\n        'wClSF': function (x, y) {\n            return x == y;\n        },\n        'umVyw': function (x, y) {\n            return x < y;\n        },\n        'hflvq': function (callee, param1) {\n            return callee(param1);\n        },\n        'CdfkX': function (x, y) {\n            return x % y;\n        },\n        'APQYN': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var swQgSd = oypKnS['PYCtV']['split']('|');\n    var GSdsjd = 0x0;\n    while (!![]) {\n        switch (swQgSd[GSdsjd++]) {\n        case '0':\n            a = new Array(n);\n            continue;\n        case '1':\n            var four = 0x0;\n            continue;\n        case '2':\n            if (oypKnS['xxFlq'](odd, four)) {\n                ans = oypKnS['WGZiL'];\n            } else if (oypKnS['REXeU'](four + 0x1, odd) && oypKnS['wClSF'](even, 0x0)) {\n                ans = oypKnS['WGZiL'];\n            }\n            continue;\n        case '3':\n            tmp = input[0x1]['split']('\\x20');\n            continue;\n        case '4':\n            for (i = 0x0; oypKnS['umVyw'](i, n); i++) {\n                a[i] = oypKnS['hflvq'](parseInt, tmp[i]);\n                if (oypKnS['wClSF'](oypKnS['CdfkX'](a[i], 0x4), 0x0)) {\n                    four++;\n                } else if (oypKnS['wClSF'](oypKnS['CdfkX'](a[i], 0x2), 0x0)) {\n                    even++;\n                } else {\n                    odd++;\n                }\n            }\n            continue;\n        case '5':\n            var ans = 'No';\n            continue;\n        case '6':\n            var even = 0x0;\n            continue;\n        case '7':\n            input = input['split']('\\x0a');\n            continue;\n        case '8':\n            var n = oypKnS['APQYN'](parseInt, input[0x0]);\n            continue;\n        case '9':\n            console['log']('%s', ans);\n            continue;\n        case '10':\n            var odd = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n1 10 100", "Yes"], ["4\n1 2 3 4", "No"], ["3\n1 4 1", "Yes"], ["2\n1 1", "No"], ["6\n2 7 1 8 2 8", "Yes"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  var n = parseInt(input[0]);\n  tmp = input[1].split(\" \");\n  a = new Array(n);\n  var odd=0;\n  var even=0;\n  var four=0;\n  for(i=0;i<n;i++){\n    a[i]=parseInt(tmp[i]);\n    if(a[i]%4==0){\n      four++;\n    }else if(a[i]%2==0){\n      even++;\n    }else{\n      odd++;\n    }\n  }\n  var ans =\"No\";\n  if(odd<=four){\n    ans=\"Yes\";\n  }else if(four+1==odd&&even==0){\n    ans=\"Yes\";\n  }\n\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03778_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const FgPyaF = {\n        'UOTrm': function (x, y) {\n            return x + y;\n        },\n        'OzBDn': function (x, y) {\n            return x <= y;\n        },\n        'yilcB': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split']('\\x20')['map'](v => parseInt(v));\n    const W = input[0x0];\n    const a = input[0x1];\n    const b = input[0x2];\n    const aw = FgPyaF['UOTrm'](a, W);\n    const bw = b + W;\n    let arr = [];\n    if (FgPyaF['OzBDn'](a, b)) {\n        arr = [\n            a,\n            aw,\n            b,\n            bw\n        ];\n    } else {\n        arr = [\n            b,\n            bw,\n            a,\n            aw\n        ];\n    }\n    if (FgPyaF['yilcB'](arr[0x1], arr[0x2])) {\n        console['log'](arr[0x2] - arr[0x1]);\n    } else {\n        console['log'](0x0);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf-8'));", "test_cases": [["3 2 6", "1"], ["3 1 3", "0"], ["5 10 1", "4"]], "original": "'use strict'\n\nconst main = (input) => {\n    input = input.split(' ').map(v => parseInt(v))\n    const W = input[0]\n    const a = input[1]\n    const b = input[2]\n    const aw = a + W\n    const bw = b + W\n\n    let arr = []\n    if(a <= b){\n        arr = [a, aw, b, bw]\n    }else{\n        arr = [b, bw, a, aw]\n    }\n    if(arr[1] < arr[2]){\n        console.log(arr[2] - arr[1])\n    }else{\n        console.log(0)\n    }\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf-8'))", "language": "JavaScript"}
{"filename": "p03815_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const WmKScQ = {\n        'NaUvh': function (callee, param1) {\n            return callee(param1);\n        },\n        'agqQq': function (x, y) {\n            return x % y;\n        },\n        'vkwux': function (x, y) {\n            return x + y;\n        },\n        'VEPOY': function (x, y) {\n            return x / y;\n        },\n        'ZirRz': function (x, y) {\n            return x > y;\n        },\n        'OKLTQ': function (x, y) {\n            return x % y;\n        },\n        'yOLAE': function (x, y) {\n            return x + y;\n        },\n        'rZhWp': function (x, y) {\n            return x * y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    let x = WmKScQ['NaUvh'](Number, input[0x0]['split']('\\x20')[0x0]);\n    if (WmKScQ['agqQq'](x, 0xb) > 0x6) {\n        console['log'](WmKScQ['vkwux'](Math['floor'](WmKScQ['VEPOY'](x, 0xb)) * 0x2, 0x2));\n    } else if (WmKScQ['ZirRz'](WmKScQ['OKLTQ'](x, 0xb), 0x0)) {\n        console['log'](WmKScQ['yOLAE'](WmKScQ['rZhWp'](Math['floor'](WmKScQ['VEPOY'](x, 0xb)), 0x2), 0x1));\n    } else {\n        console['log'](Math['floor'](x / 0xb) * 0x2);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7", "2"], ["149696127901", "27217477801"]], "original": "'use strict'\nconst main = arg => {\n\tconst input = arg.trim().split(\"\\n\");\n\tlet x = Number(input[0].split(' ')[0])\n\tif(x % 11 > 6) {\n\t\tconsole.log(Math.floor(x / 11) * 2 + 2)\n\t} else if(x % 11 > 0) {\n\t\tconsole.log(Math.floor(x / 11) * 2 + 1)\n\t} else {\n\t\tconsole.log(Math.floor(x / 11) * 2)\n\t}\n}   \nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03946_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var JahdoN = {\n        'eIhdJ': '9|4|6|5|3|1|8|2|7|0',\n        'nvITa': function (x, y) {\n            return x < y;\n        },\n        'JyOcC': function (callee, param1) {\n            return callee(param1);\n        },\n        'LIlJi': function (x, y) {\n            return x - y;\n        },\n        'EdghN': function (x, y) {\n            return x == y;\n        },\n        'cqAtw': function (x, y) {\n            return x - y;\n        }\n    };\n    var wxtjoM = JahdoN['eIhdJ']['split']('|');\n    var sjWQXW = 0x0;\n    while (!![]) {\n        switch (wxtjoM[sjWQXW++]) {\n        case '0':\n            console['log']('%s', ans);\n            continue;\n        case '1':\n            b = new Array(n)['fill'](0x0);\n            continue;\n        case '2':\n            var max = -0x1;\n            continue;\n        case '3':\n            for (i = 0x0; JahdoN['nvITa'](i, n); i++) {\n                a[i] = parseInt(input[0x1]['split']('\\x20')[i]);\n            }\n            continue;\n        case '4':\n            tmp = input[0x0]['split']('\\x20');\n            continue;\n        case '5':\n            a = new Array(n)['fill'](0x0);\n            continue;\n        case '6':\n            var n = JahdoN['JyOcC'](parseInt, tmp[0x0]);\n            continue;\n        case '7':\n            for (i = 0x0; i < n; i++) {\n                min = Math['min'](min, a[i]);\n                if (JahdoN['nvITa'](max, JahdoN['LIlJi'](a[i], min))) {\n                    ans = 0x1;\n                }\n                if (JahdoN['EdghN'](max, JahdoN['cqAtw'](a[i], min))) {\n                    ans++;\n                }\n                max = Math['max'](max, a[i] - min);\n            }\n            continue;\n        case '8':\n            var min = Math['pow'](0xa, 0x9);\n            continue;\n        case '9':\n            input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n100 50 200", "1"], ["5 8\n50 30 40 10 20", "2"], ["10 100\n7 10 4 5 9 3 6 8 2 1", "2"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  tmp = input[0].split(\" \");\n  var n = parseInt(tmp[0]);\n  a = new Array(n).fill(0);\n  for(i=0;i<n;i++){\n    a[i]=parseInt(input[1].split(\" \")[i]);\n  }\n  b = new Array(n).fill(0);\n  var min=Math.pow(10,9);\n  var max=-1;\n  for(i=0;i<n;i++){\n    min=Math.min(min,a[i]);\n    if(max<a[i]-min){\n      ans=1;\n    }\n    if(max==a[i]-min){\n      ans++;\n    }\n    max=Math.max(max,a[i]-min);\n  }\n  console.log('%s', ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04015_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var nsGCrW = {\n        'kNHSd': '8|3|1|2|5|11|9|7|0|12|6|4|10',\n        'jYBKh': function (x, y) {\n            return x < y;\n        },\n        'dsrKR': function (callee, param1) {\n            return callee(param1);\n        },\n        'UINoU': function (x, y) {\n            return x * y;\n        },\n        'AKNAE': function (x, y) {\n            return x + y;\n        },\n        'UhBDW': function (x, y) {\n            return x <= y;\n        },\n        'czBsz': function (x, y) {\n            return x + y;\n        },\n        'ZhOOm': function (x, y) {\n            return x < y;\n        },\n        'MEYnd': function (x, y) {\n            return x - y;\n        }\n    };\n    var gVtLuY = nsGCrW['kNHSd']['split']('|');\n    var LBbGbn = 0x0;\n    while (!![]) {\n        switch (gVtLuY[LBbGbn++]) {\n        case '0':\n            for (var i = 0x0; nsGCrW['jYBKh'](i, N); ++i)\n                dp[i][0x0][0x0] = 0x1;\n            continue;\n        case '1':\n            var N = nsGCrW['dsrKR'](Number, tmp[0x0]);\n            continue;\n        case '2':\n            var A = Number(tmp[0x1]);\n            continue;\n        case '3':\n            var tmp = input[0x0]['split']('\\x20');\n            continue;\n        case '4':\n            for (var j = 0x1; j <= N; ++j) {\n                ans += dp[N][j][nsGCrW['UINoU'](j, A)];\n            }\n            continue;\n        case '5':\n            var x = [0x0];\n            continue;\n        case '6':\n            var ans = 0x0;\n            continue;\n        case '7':\n            for (var i = 0x0; i <= N; ++i) {\n                dp[i] = new Array(nsGCrW['AKNAE'](N, 0x1));\n                for (var j = 0x0; nsGCrW['UhBDW'](j, N); ++j) {\n                    dp[i][j] = new Array(nsGCrW['UINoU'](A, N) + 0x1)['fill'](0x0);\n                }\n            }\n            continue;\n        case '8':\n            input = input['split']('\\x0a');\n            continue;\n        case '9':\n            var dp = new Array(nsGCrW['czBsz'](N, 0x1));\n            continue;\n        case '10':\n            console['log'](ans);\n            continue;\n        case '11':\n            x = x['concat'](input[0x1]['split']('\\x20')['map'](Number));\n            continue;\n        case '12':\n            for (var i = 0x1; nsGCrW['UhBDW'](i, N); ++i) {\n                for (var j = 0x1; nsGCrW['UhBDW'](j, i); ++j) {\n                    for (var k = 0x1; nsGCrW['UhBDW'](k, nsGCrW['UINoU'](A, N)); ++k) {\n                        if (nsGCrW['ZhOOm'](k, x[i])) {\n                            dp[i][j][k] = dp[nsGCrW['MEYnd'](i, 0x1)][j][k];\n                        } else {\n                            dp[i][j][k] = nsGCrW['AKNAE'](dp[nsGCrW['MEYnd'](i, 0x1)][j][k], dp[i - 0x1][nsGCrW['MEYnd'](j, 0x1)][nsGCrW['MEYnd'](k, x[i])]);\n                        }\n                    }\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 8\n7 9 8 9", "5"], ["3 8\n6 6 9", "0"], ["8 5\n3 6 2 8 7 6 5 9", "19"], ["33 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3", "8589934591"]], "original": "function main(input) {\n  input = input.split('\\n');\n  var tmp = input[0].split(' ');\n\n  var N = Number(tmp[0]);\n  var A = Number(tmp[1]);\n\n  var x = [0];\n  x = x.concat(input[1].split(' ').map(Number));\n\n  var dp = new Array(N + 1);\n  for (var i = 0; i <= N; ++i) {\n    dp[i] = new Array(N + 1);\n    for (var j = 0; j <= N; ++j) {\n      dp[i][j] = new Array(A * N + 1).fill(0);\n    }\n  }\n\n  for (var i = 0; i < N; ++i) dp[i][0][0] = 1;\n\n  for (var i = 1; i <= N; ++i) {\n    for (var j = 1; j <= i; ++j) {\n      for (var k = 1; k <= A * N; ++k) {\n        if (k < x[i]) {\n          dp[i][j][k] = dp[i - 1][j][k];\n        } else {\n          dp[i][j][k] = dp[i - 1][j][k] + dp[i - 1][j - 1][k - x[i]];\n        }\n      }\n    }\n  }\n\n  var ans = 0;\n  for (var j = 1; j <= N; ++j) {\n    ans += dp[N][j][j * A];\n  }\n\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p00047_1", "type": "JavaScript", "obfuscated": "var a = 'A';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var SgVApf = {\n        'fXWUn': function (x, y) {\n            return x == y;\n        },\n        'AbsTE': function (x, y) {\n            return x == y;\n        }\n    };\n    input = chunk['trim']()['split'](',');\n    if (SgVApf['fXWUn'](input[0x0], a))\n        a = input[0x1];\n    else if (SgVApf['AbsTE'](input[0x1], a))\n        a = input[0x0];\n});\nprocess['stdin']['on']('end', function () {\n    console['log'](a);\n});", "test_cases": [["B,C\nA,C\nC,B\nA,B\nC,B", "A"]], "original": "var a = 'A';\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk)\n{\n  input = chunk.trim().split(',');\n  if(input[0] == a)\n    a = input[1];\n  else if(input[1] == a)\n    a = input[0];\n});\nprocess.stdin.on('end', function(){console.log(a);});", "language": "JavaScript"}
{"filename": "p00056_1", "type": "JavaScript", "obfuscated": "function main() {\n    var JwAwSx = {\n        'ZhcHI': function (x, y) {\n            return x < y;\n        },\n        'ePUOf': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'vhhSt': function (x, y) {\n            return x === y;\n        },\n        'YboFT': function (x, y) {\n            return x % y;\n        },\n        'nzFlR': function (x, y) {\n            return x / y;\n        },\n        'xcpLc': function (x, y) {\n            return x <= y;\n        },\n        'HrmXu': function (x, y) {\n            return x !== y;\n        },\n        'kEDDg': function (x, y) {\n            return x - y;\n        }\n    };\n    var i, j, n, m, x, len = input['length'];\n    for (i = 0x0; JwAwSx['ZhcHI'](i, len); i++) {\n        n = JwAwSx['ePUOf'](parseInt, input[i], 0xa);\n        if (JwAwSx['vhhSt'](n, 0x0))\n            break;\n        if (JwAwSx['vhhSt'](JwAwSx['YboFT'](n, 0x2), 0x1)) {\n            console['log'](0x0);\n            continue;\n        }\n        m = ~~JwAwSx['nzFlR'](n, 0x2);\n        for (x = 0x0, j = 0x0; JwAwSx['xcpLc'](primes[j], m); j++) {\n            if (JwAwSx['HrmXu'](primes['indexOf'](JwAwSx['kEDDg'](n, primes[j])), -0x1))\n                x++;\n        }\n        console['log'](x);\n    }\n}\nvar primes = function (n) {\n    var JUQJme = {\n        'DQExK': function (x, y) {\n            return x < y;\n        },\n        'bhWos': function (x, y) {\n            return x <= y;\n        },\n        'nLmcy': function (x, y) {\n            return x * y;\n        },\n        'KPdRF': function (x, y) {\n            return x == y;\n        },\n        'lgIvo': function (x, y) {\n            return x % y;\n        }\n    };\n    var i, j, flag, primes = [0x2];\n    if (JUQJme['DQExK'](n, 0x2))\n        return [];\n    for (i = 0x3; JUQJme['bhWos'](i, n); i += 0x2) {\n        flag = !![];\n        for (j = 0x0; JUQJme['DQExK'](primes[j], JUQJme['nLmcy'](i, i)); j++) {\n            if (JUQJme['KPdRF'](JUQJme['lgIvo'](i, primes[j]), 0x0)) {\n                flag = ![];\n                break;\n            }\n        }\n        if (flag) {\n            primes['push'](i);\n        }\n    }\n    return primes;\n}(0xc350);\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var qTTcRt = {\n        'lUOSd': function (callee) {\n            return callee();\n        }\n    };\n    input = input['split']('\\x0a');\n    qTTcRt['lUOSd'](main);\n});", "test_cases": [["10\n11\n0", "2\n0"]], "original": "function main() {\n  var\n  i, j, n, m, x,\n  len = input.length;\n  for(i = 0; i < len; i++) {\n    n = parseInt(input[i], 10);\n    if(n === 0) break;\n    if(n % 2 === 1){\n      console.log(0);\n      continue;\n    }\n    m = ~~(n / 2);\n    for(x = 0, j = 0; primes[j] <= m; j++) {\n      if(primes.indexOf(n - primes[j]) !== -1) x++;\n    }\n    console.log(x);\n  }\n}\n\nvar\nprimes = (function(n){\n  var\n  i, j, flag,\n  primes = [2];\n  if(n < 2) return [];\n  for(i = 3;i <= n; i += 2) {\n    flag = true;\n    for(j = 0; primes[j] < i*i; j++) {\n      if(i % primes[j] == 0) {\n        flag = false;\n        break;\n      }\n    }\n    if(flag) {\n      primes.push(i);\n    }\n  }\n  return primes;\n})(50000);\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00086_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nwhile (lines['length'] > 0x0) {\n    var kjGTqU = '3|1|2|4|0'['split']('|');\n    var FEnvLt = 0x0;\n    while (!![]) {\n        switch (kjGTqU[FEnvLt++]) {\n        case '0':\n            if (path[0x1] % 0x2 == 0x1 && path[0x2] % 0x2 == 0x1 && odds['length'] > 0x2)\n                console['log']('NG');\n            else\n                console['log']('OK');\n            continue;\n        case '1':\n            var line;\n            continue;\n        case '2':\n            while ((line = lines['shift']()) != '0\\x200') {\n                var nums = line['split']('\\x20');\n                var from = +nums[0x0];\n                var to = +nums[0x1];\n                path[from] = (path[from] || 0x0) + 0x1;\n                path[to] = (path[to] || 0x0) + 0x1;\n            }\n            continue;\n        case '3':\n            var path = [];\n            continue;\n        case '4':\n            var odds = path['filter'](function (n) {\n                var bZgohF = {\n                    'LSMej': function (x, y) {\n                        return x == y;\n                    },\n                    'zpmlv': function (x, y) {\n                        return x % y;\n                    }\n                };\n                return bZgohF['LSMej'](bZgohF['zpmlv'](n, 0x2), 0x1);\n            });\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["1 3\n3 4\n3 5\n3 6\n4 6\n4 7\n4 7\n5 6\n6 7\n5 8\n5 8\n6 8\n6 9\n7 9\n8 9\n9 2\n0 0\n1 3\n3 4\n3 4\n4 2\n0 0", "OK\nNG"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nwhile (lines.length > 0) {\n    var path = [];\n    var line;\n    while ((line = lines.shift()) != '0 0') {\n        var nums = line.split(' ');\n        var from = +nums[0];\n        var to = +nums[1];\n\n        path[from] = (path[from] || 0) +1;\n        path[to] = (path[to] || 0) +1;\n    }\n    var odds = path.filter(function(n){return n % 2 == 1});\n    if (path[1] % 2 == 1 && path[2] % 2 == 1 && odds.length > 2)\n        console.log('NG');\n    else\n        console.log('OK');\n}", "language": "JavaScript"}
{"filename": "p00102_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar data = [];\nvar N;\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    if (arr['length'] == 0x1) {\n        if (i == 0x0) {\n            N = arr[0x0];\n            continue;\n        }\n        var DATA = [];\n        for (var j = 0x0; j < N + 0x1; j++) {\n            DATA['push'](0x0);\n        }\n        for (var k = 0x0; k < N; k++) {\n            var v = data[k];\n            for (var l = 0x0; l < N + 0x1; l++) {\n                DATA[l] += v[l];\n            }\n            v = v['map'](function (val) {\n                var FnDQVe = {\n                    'eoKqL': function (x, y) {\n                        return x + y;\n                    },\n                    'KYCTe': '\\x20\\x20\\x20\\x20\\x20'\n                };\n                return FnDQVe['eoKqL'](FnDQVe['KYCTe'], val)['slice'](-0x5);\n            });\n            console['log'](v['join'](''));\n        }\n        DATA = DATA['map'](function (val) {\n            var KXnAkv = { 'MrNDc': '\\x20\\x20\\x20\\x20\\x20' };\n            return (KXnAkv['MrNDc'] + val)['slice'](-0x5);\n        });\n        console['log'](DATA['join'](''));\n        if (arr[0x0] == 0x0)\n            break;\n        data = [];\n        N = arr[0x0];\n    } else {\n        var sum = arr['reduce'](function (a, b) {\n            var XvQcad = {\n                'EtMQh': function (x, y) {\n                    return x + y;\n                }\n            };\n            return XvQcad['EtMQh'](a, b);\n        });\n        arr['push'](sum);\n        data['push'](arr);\n    }\n}", "test_cases": [["4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n4\n52 96 15 20\n86 22 35 45\n45 78 54 36\n16 86 74 55\n0", "52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815\n   52   96   15   20  183\n   86   22   35   45  188\n   45   78   54   36  213\n   16   86   74   55  231\n  199  282  178  156  815"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar data=[];\nvar N;\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   if(arr.length==1){\n      if(i==0){N=arr[0];continue;}\n      var DATA=[];\n      for(var j=0;j<N+1;j++){DATA.push(0);}\n      for(var k=0;k<N;k++){\n         var v=data[k];\n         for(var l=0;l<N+1;l++){DATA[l]+=v[l];}\n         v=v.map(function(val){return (\"     \"+val).slice(-5);});\n         console.log(v.join(\"\"));\n      }\n      DATA=DATA.map(function(val){return (\"     \"+val).slice(-5);});\n      console.log(DATA.join(\"\"));\n      if(arr[0]==0)break;\n      data=[];\n      N=arr[0];\n   }else{\n      var sum=arr.reduce(function(a,b){return a+b;});\n      arr.push(sum);\n      data.push(arr);\n   }\n}", "language": "JavaScript"}
{"filename": "p00741_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var FidnZa = {\n        'fkUOR': function (x, y) {\n            return x + y;\n        },\n        'CLxoI': function (x, y) {\n            return x + y;\n        },\n        'EyjUI': function (x, y) {\n            return x < y;\n        },\n        'mawlg': function (x, y) {\n            return x >= y;\n        },\n        'HnlJL': function (x, y) {\n            return x < y;\n        },\n        'OYqos': function (x, y) {\n            return x == y;\n        },\n        'Iahmj': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var dy = [\n        -0x1,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x1,\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    for (var i = 0x0; i < 0x8; i++) {\n        var yy = FidnZa['fkUOR'](y, dy[i]);\n        var xx = FidnZa['CLxoI'](x, dx[i]);\n        if (FidnZa['EyjUI'](yy, 0x0) || FidnZa['mawlg'](yy, H) || FidnZa['HnlJL'](xx, 0x0) || xx >= W)\n            continue;\n        if (FidnZa['OYqos'](yx[yy][xx], 'a')) {\n            yx[yy][xx] = cnt;\n            FidnZa['Iahmj'](bomb, yy, xx);\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var WH = Arr['shift']()['split']('\\x20')['map'](Number);\n    var W = WH[0x0];\n    var H = WH[0x1];\n    if (W == 0x0 && H == 0x0)\n        break;\n    var yx = [];\n    var Y, X;\n    for (var i = 0x0; i < H; i++) {\n        var str = Arr['shift']();\n        str = str['replace'](/1/g, 'a');\n        var arr = str['split']('\\x20');\n        yx['push'](arr);\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < H; i++) {\n        for (var j = 0x0; j < W; j++) {\n            if (yx[i][j] == 'a') {\n                cnt++;\n                yx[i][j] = cnt;\n                bomb(i, j);\n            }\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["1 1\n0\n2 2\n0 1\n1 0\n3 2\n1 1 1\n1 1 1\n5 4\n1 0 1 0 0\n1 0 0 0 0\n1 0 1 0 1\n1 0 0 1 0\n5 4\n1 1 1 0 1\n1 0 1 0 1\n1 0 1 0 1\n1 0 1 1 1\n5 5\n1 0 1 0 1\n0 0 0 0 0\n1 0 1 0 1\n0 0 0 0 0\n1 0 1 0 1\n0 0", "0\n1\n1\n3\n1\n9"]], "original": "function bomb(y,x){\n   var dy=[-1,-1,-1,0,0,1,1,1];\n   var dx=[-1,0,1,-1,1,-1,0,1];\n   for(var i=0;i<8;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=H || xx<0 || xx>=W)continue;\n      if(yx[yy][xx]==\"a\"){yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var WH=(Arr.shift()).split(\" \").map(Number);\n   var W=WH[0];\n   var H=WH[1];\n   if(W==0 && H==0)break;\n      var yx=[];\n      var Y,X;\n      for(var i=0;i<H;i++){\n         var str=Arr.shift();\n         str=str.replace(/1/g,\"a\");\n         var arr=str.split(\" \");\n         yx.push(arr);\n      }\n     var cnt=0;\n     for(var i=0;i<H;i++){\n        for(var j=0;j<W;j++){\n           if(yx[i][j]==\"a\"){cnt++;yx[i][j]=cnt;bomb(i,j);}\n        }\n     }\n      console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p02262_1", "type": "JavaScript", "obfuscated": "const config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nconst line = require('fs')['readFileSync'](config['input'], 'utf-8')['split'](config['newline']);\nlet cnt = 0x0;\nconst isort = (arr, g) => {\n    const zlksUV = {\n        'Rzlzl': function (x, y) {\n            return x < y;\n        },\n        'Eykif': function (x, y) {\n            return x >= y;\n        },\n        'wlmbG': function (x, y) {\n            return x > y;\n        },\n        'rnfhC': function (x, y) {\n            return x - y;\n        },\n        'mOvBu': function (x, y) {\n            return x + y;\n        }\n    };\n    for (let i = g; zlksUV['Rzlzl'](i, arr['length']); i++) {\n        let v = arr[i];\n        let j = i - g;\n        while (zlksUV['Eykif'](j, 0x0) && zlksUV['wlmbG'](arr[j], v)) {\n            arr[j + g] = arr[j];\n            j = zlksUV['rnfhC'](j, g);\n            cnt++;\n        }\n        arr[zlksUV['mOvBu'](j, g)] = v;\n    }\n    return arr;\n};\nconst shellSort = arr => {\n    const wvMPlR = {\n        'BXUSZ': function (x, y) {\n            return x < y;\n        },\n        'CeQJP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    const g = arr['map']((_, i) => 0x3 * i + 0x1)['filter'](x => x <= arr['length'])['reverse']();\n    console['log'](g['length']);\n    console['log'](g['map'](x => x['toString']())['join']('\\x20'));\n    for (i = 0x0; wvMPlR['BXUSZ'](i, arr['length']); i++) {\n        arr = wvMPlR['CeQJP'](isort, arr, g[i]);\n    }\n    return arr;\n};\nconst n = parseInt(line[0x0]);\nconst data = line['slice'](0x1, n + 0x1)['map'](x => parseInt(x));\nconst sorted = shellSort(data);\nconsole['log'](cnt);\nconsole['log'](sorted['map'](x => x['toString']())['join']('\\x0a'));", "test_cases": [["5\n5\n1\n4\n3\n2", "2\n4 1\n3\n1\n2\n3\n4\n5"], ["3\n3\n2\n1", "1\n1\n3\n1\n2\n3"]], "original": "const config = {\n    input: '/dev/stdin',\n    newline: '\\n'\n};\n\nconst line = require('fs').readFileSync(config.input, 'utf-8').split(config.newline);\n\nlet cnt = 0;\n\nconst isort = (arr, g) => {\n    for (let i = g; i < arr.length; i++) {\n        let v = arr[i];\n        let j = i - g;\n        while (j >= 0 && arr[j] > v) {\n            arr[j+g] = arr[j];\n            j = j - g;\n            cnt++;\n        }\n        arr[j+g] = v;\n    }\n\n    return arr;\n};\n\nconst shellSort = (arr) => {\n    const g = arr.map((_, i) => 3 * i + 1).filter(x => x <= arr.length).reverse();\n\n    console.log(g.length);\n    console.log(g.map(x => x.toString()).join(' '));\n\n    for (i = 0; i < arr.length; i++) {\n        arr = isort(arr, g[i]);\n    }\n\n    return arr;\n};\n\nconst n = parseInt(line[0]);\nconst data = line.slice(1, n+1).map(x => parseInt(x));\nconst sorted = shellSort(data);\n\nconsole.log(cnt);\nconsole.log(sorted.map(x => x.toString()).join('\\n'));\n\n", "language": "JavaScript"}
{"filename": "p02317_1", "type": "JavaScript", "obfuscated": "function main() {\n    var DqDdGx = {\n        'BhUiw': '4|5|2|3|0|1',\n        'rQDzz': function (x, y) {\n            return x + y;\n        },\n        'Ixhmj': function (callee, param1) {\n            return callee(param1);\n        },\n        'GmUys': function (callee, param1) {\n            return callee(param1);\n        },\n        'CFWWc': function (callee) {\n            return callee();\n        }\n    };\n    var swgqHo = DqDdGx['BhUiw']['split']('|');\n    var wkFMxY = 0x0;\n    while (!![]) {\n        switch (swgqHo[wkFMxY++]) {\n        case '0':\n            var nums = ls['slice'](0x1, DqDdGx['rQDzz'](n, 0x1))['map'](function (s) {\n                return xfMRUA['ootSk'](parseInt, s);\n            });\n            continue;\n        case '1':\n            console['log'](DqDdGx['Ixhmj'](lis, nums));\n            continue;\n        case '2':\n            var ls = input['split']('\\x0a');\n            continue;\n        case '3':\n            var n = parseInt(ls[0x0]);\n            continue;\n        case '4':\n            var xfMRUA = {\n                'ootSk': function (callee, param1) {\n                    return DqDdGx['GmUys'](callee, param1);\n                }\n            };\n            continue;\n        case '5':\n            var input = DqDdGx['CFWWc'](getInput);\n            continue;\n        }\n        break;\n    }\n}\nfunction lis(xs) {\n    var vaoiRn = {\n        'oZcot': function (x, y) {\n            return x < y;\n        },\n        'PXaxW': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var table = [xs[0x0]];\n    for (var i = 0x1; vaoiRn['oZcot'](i, xs['length']); i++) {\n        var x = xs[i];\n        table[vaoiRn['PXaxW'](search, table, x) + 0x1] = x;\n    }\n    return table['length'];\n}\nfunction search(table, x) {\n    var LsJjKp = {\n        'KiVeC': function (x, y) {\n            return x == y;\n        },\n        'WaoMk': function (x, y) {\n            return x <= y;\n        },\n        'uOVjM': function (x, y) {\n            return x < y;\n        },\n        'RQTqF': function (x, y) {\n            return x / y;\n        },\n        'iUrFz': function (x, y) {\n            return x + y;\n        },\n        'dhwGV': function (x, y) {\n            return x < y;\n        }\n    };\n    var l = 0x0, h = table['length'];\n    if (LsJjKp['KiVeC'](table['length'], 0x0) || LsJjKp['WaoMk'](x, table[0x0])) {\n        return -0x1;\n    }\n    while (LsJjKp['uOVjM'](l + 0x1, h)) {\n        var pivot = LsJjKp['RQTqF'](LsJjKp['iUrFz'](LsJjKp['iUrFz'](l, h), 0x1), 0x2);\n        if (LsJjKp['dhwGV'](table[pivot], x)) {\n            l = pivot;\n        } else {\n            h = pivot;\n        }\n    }\n    return l;\n}\nnodeJS = typeof require != 'undefined';\nfunction getInput() {\n    var qSAhCm = {\n        'bjLVt': 'input',\n        'nAYuh': function (callee, param1) {\n            return callee(param1);\n        },\n        'ncSam': '/dev/stdin'\n    };\n    if (!nodeJS) {\n        return document['getElementById'](qSAhCm['bjLVt'])['value'];\n    }\n    return qSAhCm['nAYuh'](require, 'fs')['readFileSync'](qSAhCm['ncSam'])['toString']();\n}\nif (nodeJS) {\n    main();\n}", "test_cases": [["5\n5\n1\n3\n2\n4", "3"], ["3\n1\n1\n1", "1"]], "original": "function main() {\n  var input = getInput();\n  var ls = input.split('\\n');\n\n  var n = parseInt(ls[0])\n  var nums = ls.slice(1, n+1).map(function(s) {\n    return parseInt(s);\n  })\n  \n  console.log(lis(nums))\n}\n\nfunction lis(xs) {\n  var table = [xs[0]];\n  for (var i = 1; i < xs.length; i++) {\n    var x = xs[i];\n    table[search(table, x) + 1] = x;\n  }\n  return table.length;\n}\n \n\n/**\n * Returns i s.t. table[i] < x && x <= table[i+1]\n */\nfunction search(table, x) {\n  var l = 0, h = table.length;\n  \n  if (table.length == 0 || x <= table[0]) {\n    return -1;\n  }\n  \n  while (l + 1 < h) {\n    var pivot = (l + h + 1) / 2;\n    if (table[pivot] < x) {\n      l = pivot;\n    } else {\n      h = pivot;\n    }\n  }\n  return l;\n}\n\nnodeJS = typeof require != 'undefined';\n\nfunction getInput() {\n  if (!nodeJS) {\n    return document.getElementById('input').value\n  }\n  return require('fs').readFileSync('/dev/stdin').toString();\n}\n\nif (nodeJS) {\n  main()\n}", "language": "JavaScript"}
{"filename": "p02633_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const RUVBfM = {\n        'aDWWU': function (callee, param1) {\n            return callee(param1);\n        },\n        'JIwGL': function (x, y) {\n            return x / y;\n        }\n    };\n    let X = RUVBfM['aDWWU'](parseInt, arg);\n    let result = RUVBfM['JIwGL'](0x168, X);\n    result = RUVBfM['aDWWU'](String, result);\n    var answer = result['replace']('.', '');\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["90", "4"], ["1", "360"]], "original": "\"use strict\";\n\nconst main = (arg) => {\n  let X = parseInt(arg);\n  let result = 360 / X;\n  result = String(result);\n  var answer = result.replace(\".\", \"\");\n  console.log(answer);\n};\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02744_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var XDxJly = {\n        'jgyXO': function (x, y) {\n            return x < y;\n        },\n        'gHpWS': function (x, y) {\n            return x + y;\n        },\n        'BmWgM': function (x, y) {\n            return x == y;\n        },\n        'xRMDm': function (x, y) {\n            return x - y;\n        }\n    };\n    var N = XDxJly['xRMDm'](input[0x0], 0x0);\n    var list = [\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n        'j',\n        'k'\n    ];\n    var ans = {\n        0x0: [],\n        0x1: ['a']\n    };\n    for (var i = 0x2; i <= N; i++) {\n        ans[i] = [];\n        var preAns = ans[XDxJly['xRMDm'](i, 0x1)];\n        var nowAns = ans[i];\n        preAns['forEach'](preans => {\n            var HjfBpn = {\n                'UBEbS': function (x, y) {\n                    return XDxJly['jgyXO'](x, y);\n                }\n            };\n            var max = 'a';\n            preans['split']('')['forEach'](v => {\n                max = HjfBpn['UBEbS'](max, v) ? v : max;\n            });\n            var endflg = ![];\n            for (var i = 0x0; i < list['length'] - 0x1; i++) {\n                nowAns['push'](XDxJly['gHpWS'](preans, list[i]));\n                if (endflg)\n                    break;\n                if (XDxJly['BmWgM'](max, list[i]))\n                    endflg = !![];\n            }\n        });\n    }\n    console['log'](ans[N]['join']('\\x0a'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["1", "a"], ["2", "aa\nab"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n    var N = input[0]-0;\n    var list = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\", \"k\"];\n    var ans = {0:[], 1:[\"a\"]};\n    for(var i=2;i<=N;i++){\n        ans[i] = [];\n        var preAns = ans[i-1];\n        var nowAns = ans[i];\n        preAns.forEach(preans=>{\n            var max = \"a\";\n            preans.split(\"\").forEach(v=>{\n                max = max<v?v:max;\n            });\n            var endflg = false;\n            for(var i=0;i<list.length-1;i++){\n                nowAns.push(preans + list[i]);\n                \n                if(endflg) break;\n                if(max == list[i])endflg=true;\n            }\n        });\n        \n    }\n    console.log(ans[N].join(\"\\n\"));\n}\n\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\"));\n\n", "language": "JavaScript"}
{"filename": "p02792_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const wwWLUM = {\n        'qjeRw': function (x, y) {\n            return x < y;\n        },\n        'ozADJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'YcVBg': function (callee, param1) {\n            return callee(param1);\n        },\n        'VXvDw': function (x, y) {\n            return x - y;\n        },\n        'hCOYf': function (x, y) {\n            return x < y;\n        },\n        'BdFkb': function (x, y) {\n            return x * y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = parseInt(arg[0x0]);\n    const cnt = [];\n    for (let i = 0x0; wwWLUM['qjeRw'](i, 0xa); i++) {\n        cnt['push'](new Array(0xa)['fill'](0x0));\n    }\n    for (let i = 0x1; i <= N; i++) {\n        const S = String(i);\n        const head = wwWLUM['ozADJ'](parseInt, S[0x0]);\n        const tail = wwWLUM['YcVBg'](parseInt, S[wwWLUM['VXvDw'](S['length'], 0x1)]);\n        cnt[head][tail]++;\n    }\n    let answer = 0x0;\n    for (let i = 0x0; i < 0xa; i++) {\n        for (let j = 0x0; wwWLUM['hCOYf'](j, 0xa); j++) {\n            answer += wwWLUM['BdFkb'](cnt[i][j], cnt[j][i]);\n        }\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["25", "17"], ["1", "1"], ["100", "108"], ["2020", "40812"], ["200000", "400000008"]], "original": "\"use strict\";\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    \n    const cnt = [];\n    \n    for(let i=0; i<10; i++) {\n        cnt.push(new Array(10).fill(0));\n    }\n    \n    for(let i=1; i<=N; i++) {\n        const S = String(i);\n        const head = parseInt(S[0]);\n        const tail = parseInt(S[S.length-1]);\n        \n        cnt[head][tail]++;\n    }\n    \n    // console.log(cnt.join(\"\\n\"));\n    \n    let answer = 0;\n    \n    for(let i=0; i<10; i++) {\n        for(let j=0; j<10; j++) {\n            answer += cnt[i][j] * cnt[j][i];\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02846_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var JTXEIJ = {\n        'iekaf': '10|7|2|3|9|11|5|4|8|1|0|12|6',\n        'jJZoB': function (x, y) {\n            return x - y;\n        },\n        'lpufP': function (x, y) {\n            return x * y;\n        },\n        'grBrW': function (x, y) {\n            return x - y;\n        },\n        'esuwE': function (x, y) {\n            return x * y;\n        },\n        'WuhQe': function (x, y) {\n            return x == y;\n        },\n        'LFKCm': 'infinity',\n        'jfmVA': function (x, y) {\n            return x < y;\n        },\n        'YHdUX': function (x, y) {\n            return x % y;\n        },\n        'FdylB': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var FRttCO = JTXEIJ['iekaf']['split']('|');\n    var VvTqoI = 0x0;\n    while (!![]) {\n        switch (FRttCO[VvTqoI++]) {\n        case '0':\n            var pm = 0x0;\n            continue;\n        case '1':\n            var xmae = 0x1;\n            continue;\n        case '2':\n            var A = input[0x1]['split']('\\x20');\n            continue;\n        case '3':\n            var B = input[0x2]['split']('\\x20');\n            continue;\n        case '4':\n            sa[0x1] = JTXEIJ['jJZoB'](T[0x1] * A[0x1], JTXEIJ['lpufP'](T[0x1], B[0x1]));\n            continue;\n        case '5':\n            sa[0x0] = JTXEIJ['grBrW'](JTXEIJ['esuwE'](T[0x0], A[0x0]), JTXEIJ['esuwE'](T[0x0], B[0x0]));\n            continue;\n        case '6':\n            if (JTXEIJ['WuhQe'](sa[0x0], sa[0x1] * -0x1)) {\n                console['log'](JTXEIJ['LFKCm']);\n            } else {\n                for (var i = 0x0; JTXEIJ['jfmVA'](i, 0x1); i) {\n                    count++;\n                    xmae = x;\n                    x += sa[JTXEIJ['YHdUX'](count, 0x2)];\n                    if (x * xmae > 0x0) {\n                        i = 0x1;\n                    } else if (JTXEIJ['WuhQe'](x, 0x0)) {\n                        i = 0x1;\n                        count++;\n                    }\n                }\n                console['log'](count - 0x1);\n            }\n            continue;\n        case '7':\n            var T = input[0x0]['split']('\\x20');\n            continue;\n        case '8':\n            var x = 0x0;\n            continue;\n        case '9':\n            for (var i = 0x0; i < 0x2; i++) {\n                T[i] = Number(T[i]);\n                A[i] = JTXEIJ['FdylB'](Number, A[i]);\n                B[i] = Number(B[i]);\n            }\n            continue;\n        case '10':\n            input = input['split']('\\x0a');\n            continue;\n        case '11':\n            var sa = new Array(0x2);\n            continue;\n        case '12':\n            var count = -0x1;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 2\n10 10\n12 4", "1"], ["100 1\n101 101\n102 1", "infinity"], ["12000 15700\n3390000000 3810000000\n5550000000 2130000000", "113"]], "original": "function Main(input) {\n  input = input.split('\\n');\n  var T = input[0].split(' ');\n  var A = input[1].split(' ');\n  var B = input[2].split(' ');\n  for(var i=0; i<2; i++){\n  T[i] = Number(T[i]);\n  A[i] = Number(A[i]);\n  B[i] = Number(B[i]);\n  }\n  var sa = new Array(2);\n  sa[0] = T[0]*A[0]-T[0]*B[0];\n  sa[1] = T[1]*A[1]-T[1]*B[1];\n  var x = 0;\n  var xmae = 1;\n  var pm = 0;\n  var count = -1;\n  if(sa[0] == sa[1]*-1){\n     console.log('infinity');\n  }else{\n     for(var i=0; i<1; i){\n       count++;\n       xmae = x;\n       x += sa[count%2];\n       if(x*xmae > 0){\n          i = 1;\n          }else if(x == 0){\n                   i = 1;\n            count++;\n                   }\n     }\n    console.log(count-1);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03091_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction I(s, f) {\n    const KYxCBd = {\n        'HqiCW': function (x, y) {\n            return x || y;\n        }\n    };\n    this['_s'] = s['split']('\\x0a');\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = KYxCBd['HqiCW'](f, Number);\n}\nI['prototype']['a'] = function () {\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    var t = l['trim']()['split']('\\x20');\n    var a = t[this['_c']];\n    this['_c']++;\n    if (t['length'] === this['_c']) {\n        this['_c'] = 0x0;\n        this['_l']++;\n    }\n    return this['_f'](a);\n};\nI['prototype']['l'] = function () {\n    const hTlerB = '4|3|0|2|1'['split']('|');\n    let yVvtqB = 0x0;\n    while (!![]) {\n        switch (hTlerB[yVvtqB++]) {\n        case '0':\n            this['_c'] = 0x0;\n            continue;\n        case '1':\n            return l['split']('\\x20')['map'](this['_f']);\n        case '2':\n            this['_l']++;\n            continue;\n        case '3':\n            if (!l)\n                return;\n            continue;\n        case '4':\n            var l = this['_s'][this['_l']];\n            continue;\n        }\n        break;\n    }\n};\nmodule['exports'] = I;\nfunction main(input) {\n    const HkhWOP = {\n        'HPyWy': function (x, y) {\n            return x <= y;\n        },\n        'uSRKT': function (x, y) {\n            return x === y;\n        },\n        'GPhSK': function (x, y) {\n            return x !== y;\n        },\n        'gjOIT': function (x, y) {\n            return x % y;\n        },\n        'OtvPo': function (x, y) {\n            return x && y;\n        },\n        'AqJkr': 'Yes'\n    };\n    const o = new I(input);\n    const N = o['a']();\n    const M = o['a']();\n    const adj = [];\n    for (let i = 0x1; HkhWOP['HPyWy'](i, N); i++) {\n        adj[i] = [];\n    }\n    for (let i = 0x0; i < M; i++) {\n        let ai = o['a']();\n        let bi = o['a']();\n        adj[ai]['push'](bi);\n        adj[bi]['push'](ai);\n    }\n    let flag1 = ![];\n    let flag2 = !![];\n    for (let i = 0x1; HkhWOP['HPyWy'](i, N); i++) {\n        if (HkhWOP['uSRKT'](adj[i]['length'], 0x6)) {\n            flag1 = !![];\n        }\n        if (HkhWOP['GPhSK'](HkhWOP['gjOIT'](adj[i]['length'], 0x2), 0x0)) {\n            flag2 = ![];\n        }\n    }\n    console['log'](HkhWOP['OtvPo'](flag1, flag2) ? HkhWOP['AqJkr'] : 'No');\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 9\n1 2\n1 3\n2 3\n1 4\n1 5\n4 5\n1 6\n1 7\n6 7", "Yes"], ["3 3\n1 2\n2 3\n3 1", "No"], ["18 27\n17 7\n12 15\n18 17\n13 18\n13 6\n5 7\n7 1\n14 5\n15 11\n7 6\n1 9\n5 4\n18 16\n4 6\n7 2\n7 11\n6 3\n12 14\n5 2\n10 5\n7 8\n10 15\n3 15\n9 8\n7 15\n5 16\n18 15", "Yes"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s.split(\"\\n\");this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s[this._l];if(!l)return;this._c=0;this._l++;return l.split(\" \").map(this._f)};module.exports=I;\n\nfunction main(input) {\n  const o = new I(input);\n\n  const N = o.a();\n  const M = o.a();\n\n  const adj = [];\n  for (let i = 1; i <= N; i++) {\n    adj[i] = [];\n  }\n\n  for (let i = 0; i < M; i++) {\n    let ai = o.a();\n    let bi = o.a();\n    adj[ai].push(bi);\n    adj[bi].push(ai);\n  }\n\n  let flag1 = false;\n  let flag2 = true;\n  for (let i = 1; i <= N; i++) {\n    if (adj[i].length === 6) {\n      flag1 = true;\n    }\n\n    if (adj[i].length % 2 !== 0) {\n      flag2 = false;\n    }\n  }\n\n  console.log((flag1 && flag2) ? \"Yes\" : \"No\");\n\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03165_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var EEAehy = {\n        'oOrSn': function (x, y) {\n            return x <= y;\n        },\n        'VORHH': function (callee, param1) {\n            return callee(param1);\n        },\n        'YFOsE': function (x, y) {\n            return x + y;\n        },\n        'hRtzt': function (x, y) {\n            return x <= y;\n        },\n        'mVrYT': function (x, y) {\n            return x <= y;\n        },\n        'dzgNn': function (x, y) {\n            return x == y;\n        },\n        'nuIah': function (x, y) {\n            return x - y;\n        },\n        'kvyno': function (x, y) {\n            return x + y;\n        },\n        'vbKfU': function (x, y) {\n            return x - y;\n        },\n        'NFOGs': function (x, y) {\n            return x != y;\n        },\n        'gZxHr': function (x, y) {\n            return x - y;\n        },\n        'ZlEjG': function (x, y) {\n            return x - y;\n        },\n        'lYnqF': function (x, y) {\n            return x < y;\n        },\n        'mOjCV': function (x, y) {\n            return x - y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const S = lines['shift']()['split']('');\n    const T = lines['shift']()['split']('');\n    dp = [];\n    for (var i = 0x0; EEAehy['oOrSn'](i, S['length']); i++) {\n        dp['push'](EEAehy['VORHH'](Array, EEAehy['YFOsE'](T['length'], 0x1))['fill'](0x0));\n    }\n    for (var i = 0x1; EEAehy['hRtzt'](i, S['length']); i++) {\n        for (var j = 0x1; EEAehy['mVrYT'](j, T['length']); j++) {\n            if (EEAehy['dzgNn'](S[EEAehy['nuIah'](i, 0x1)], T[j - 0x1])) {\n                dp[i][j] = Math['max'](dp[i][j], EEAehy['kvyno'](dp[EEAehy['vbKfU'](i, 0x1)][EEAehy['nuIah'](j, 0x1)], 0x1));\n            } else {\n                dp[i][j] = Math['max'](dp[EEAehy['vbKfU'](i, 0x1)][j], dp[i][EEAehy['nuIah'](j, 0x1)]);\n            }\n        }\n    }\n    var i = S['length'];\n    var j = T['length'];\n    var result = [];\n    while (EEAehy['NFOGs'](i, 0x0) && EEAehy['NFOGs'](j, 0x0)) {\n        if (EEAehy['dzgNn'](S[EEAehy['nuIah'](i, 0x1)], T[EEAehy['gZxHr'](j, 0x1)])) {\n            result['unshift'](S[EEAehy['ZlEjG'](i, 0x1)]);\n            i--;\n            j--;\n        } else {\n            if (EEAehy['lYnqF'](dp[EEAehy['mOjCV'](i, 0x1)][j], dp[i][EEAehy['ZlEjG'](j, 0x1)])) {\n                j--;\n            } else {\n                i--;\n            }\n        }\n    }\n    console['log'](result['join'](''));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["axyb\nabyxb", "axb"], ["aa\nxayaz", "aa"], ["a\nz", ""], ["abracadabra\navadakedavra", "aaadara"]], "original": "function main(input){\n  const lines = input.split('\\n');\n  const S = lines.shift().split('');\n  const T = lines.shift().split('');\n\n//  console.log(S);\n//  console.log(T);\n\n  dp = []\n  for(var i=0;i<=S.length;i++){\n    dp.push( Array(T.length+1).fill(0) );\n  }\n\n  for(var i=1;i<=S.length;i++){\n    for(var j=1;j<=T.length;j++){\n      if(S[i-1]==T[j-1]){\n        dp[i][j]=Math.max(dp[i][j], dp[i-1][j-1]+1);\n      }else{\n        dp[i][j]=Math.max(dp[i-1][j], dp[i][j-1]);\n      }\n    }\n  }\n\n  var i = S.length;\n  var j = T.length;\n  var result = [];\n  while(i!=0 &&  j!=0){\n//  console.log([i,j]);\n//  console.log([S[i-1],T[j-1]]);\n    if(S[i-1]==T[j-1]){\n      result.unshift(S[i-1]);\n      i--;\n      j--;\n    }else{\n      if(dp[i-1][j] < dp[i][j-1]){\n        j--;\n      }else{\n        i--;\n      }\n    }\n  }\n\n//  console.log(dp);\n  console.log(result.join(''));\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03170_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (input) {\n    const bltvcQ = {\n        'OKSSm': function (x, y) {\n            return x + y;\n        },\n        'RKOlW': function (x, y) {\n            return x >= y;\n        },\n        'sjFAi': function (x, y) {\n            return x - y;\n        },\n        'bMGbU': function (x, y) {\n            return x === y;\n        },\n        'acePx': 'tbd',\n        'KqHdW': function (x, y) {\n            return x >= y;\n        },\n        'Lgznj': 'First',\n        'NvLoO': 'Second'\n    };\n    input = input['trim']()['split'](/\\s+/)['map'](x => x - 0x0);\n    const N = input['shift']();\n    const K = input['shift']();\n    const A = input;\n    const dp = new Array(bltvcQ['OKSSm'](K, 0x2))['fill']('tbd');\n    dp[K + 0x1] = !![];\n    for (let i = K + 0x1; bltvcQ['RKOlW'](i, 0x0); i--) {\n        if (dp[i])\n            if (dp[bltvcQ['sjFAi'](i, 0x1)] === !![]) {\n                i--;\n                continue;\n            }\n        for (let j = 0x1; j <= A[0x0]; j++)\n            if (bltvcQ['RKOlW'](bltvcQ['sjFAi'](i, j), 0x0))\n                if (bltvcQ['bMGbU'](dp[bltvcQ['sjFAi'](i, j)], bltvcQ['acePx']))\n                    dp[bltvcQ['sjFAi'](i, j)] = ![];\n        if (!dp[i])\n            for (let a = 0x0; a < N; a++)\n                if (bltvcQ['KqHdW'](i - A[a], 0x0))\n                    dp[bltvcQ['sjFAi'](i, A[a])] = !![];\n    }\n    if (dp[0x0])\n        console['log'](bltvcQ['Lgznj']);\n    else\n        console['log'](bltvcQ['NvLoO']);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 4\n2 3", "First"], ["2 5\n2 3", "Second"], ["2 7\n2 3", "First"], ["3 20\n1 2 3", "Second"], ["3 21\n1 2 3", "First"], ["1 100000\n1", "Second"]], "original": "'use strict';\n(function(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  const N=input.shift();\n  const K=input.shift();\n  const A=input;\n  const dp=new Array(K+2).fill('tbd');\n  \n  dp[K+1]=true;\n  for(let i=K+1;i>=0;i--){\n    if(dp[i])\n      if(dp[i-1]===true){\n        i--;\n        continue;\n      }\n      for(let j=1;j<=A[0];j++)\n        if(i-j>=0)\n          if(dp[i-j]==='tbd')\n            dp[i-j]=false;\n    if(!dp[i])\n      for(let a=0;a<N;a++)\n        if(i-A[a]>=0)\n          dp[i-A[a]]=true;\n  }\n  \n  if(dp[0])console.log('First');\n  else console.log('Second');\n})(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03197_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var zoSsSg = {\n        'whhxa': function (x, y) {\n            return x == y;\n        },\n        'kDXxw': function (x, y) {\n            return x % y;\n        },\n        'ndSeC': 'first',\n        'nVKcT': 'second'\n    };\n    input = input['split']('\\x0a')['map'](Number);\n    input['shift']();\n    var n = arrsum(input);\n    if (zoSsSg['whhxa'](n, input['length'])) {\n        n = 0x1;\n    }\n    if (zoSsSg['whhxa'](zoSsSg['kDXxw'](n, 0x2), 0x1)) {\n        console['log'](zoSsSg['ndSeC']);\n    } else {\n        console['log'](zoSsSg['nVKcT']);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());\nfunction arrsum(arr) {\n    var tKlzYr = {\n        'uSFqb': function (x, y) {\n            return x < y;\n        }\n    };\n    var sum = 0x0;\n    for (var i = 0x0, len = arr['length']; tKlzYr['uSFqb'](i, len); ++i) {\n        sum += arr[i];\n    }\n    ;\n    return sum;\n}", "test_cases": [["2\n1\n2", "first"], ["3\n100000\n30000\n20000", "second"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\").map(Number);\n  input.shift();\n  var n = arrsum(input);\n  if(n==input.length){\n  n = 1;\n  }\n  if(n%2==1){\n  console.log(\"first\");\n  }else{\n  console.log(\"second\");\n  }\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\nfunction arrsum(arr){\n    var sum = 0;\n    for (var i=0,len=arr.length; i<len; ++i) {\n        sum += arr[i];\n    };\n    return sum;\n}\n", "language": "JavaScript"}
{"filename": "p03228_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const qLUfMl = {\n        'nNWdV': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'vtUwS': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'mBEdn': function (x, y) {\n            return x < y;\n        },\n        'EztPk': function (x, y) {\n            return x % y;\n        },\n        'BFyCm': function (x, y) {\n            return x == y;\n        },\n        'juUAd': function (x, y) {\n            return x % y;\n        },\n        'JeIto': function (x, y) {\n            return x / y;\n        }\n    };\n    const tmp = input['split']('\\x20');\n    let A = qLUfMl['nNWdV'](parseInt, tmp[0x0], 0xa);\n    let B = qLUfMl['vtUwS'](parseInt, tmp[0x1], 0xa);\n    const K = tmp[0x2];\n    for (let i = 0x0; qLUfMl['mBEdn'](i, K); i++) {\n        if (qLUfMl['EztPk'](i, 0x2) == 0x0) {\n            if (qLUfMl['BFyCm'](qLUfMl['juUAd'](A, 0x2), 0x1)) {\n                A--;\n            }\n            B += qLUfMl['JeIto'](A, 0x2);\n            A /= 0x2;\n        } else {\n            if (qLUfMl['juUAd'](B, 0x2) == 0x1) {\n                B--;\n            }\n            A += qLUfMl['JeIto'](B, 0x2);\n            B /= 0x2;\n        }\n    }\n    console['log'](A, B);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 4 2", "5 3"], ["3 3 3", "1 3"], ["314159265 358979323 84", "448759046 224379523"]], "original": "'use strict';\n\nfunction Main(input) {\n    const tmp = input.split(' ');\n    let A = parseInt(tmp[0], 10);\n    let B = parseInt(tmp[1], 10);\n    const K = tmp[2];\n\n    for (let i = 0; i < K; i++) {\n        if (i % 2 == 0) {\n            if (A % 2 == 1) {\n                A--;\n            }\n            B += A / 2;\n            A /= 2;\n        } else {\n            if (B % 2 == 1) {\n                B--;\n            }\n            A += B / 2;\n            B /= 2;\n        }\n    }\n    console.log(A, B);\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03318_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const kXzMQV = {\n        'wWZMK': function (x, y) {\n            return x <= y;\n        },\n        'OiuPN': function (x, y) {\n            return x < y;\n        }\n    };\n    const K = Number(s['split']('\\x0a')[0x0]);\n    const list = [\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '19',\n        '29',\n        '39',\n        '49',\n        '59',\n        '69',\n        '79',\n        '89',\n        '99',\n        '199'\n    ];\n    const head = [\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n        '13',\n        '14',\n        '15',\n        '16',\n        '17',\n        '18',\n        '19'\n    ];\n    let rest = '99';\n    for (let i = 0x0; kXzMQV['wWZMK'](i, 0x14); i++) {\n        for (let j = 0x0; kXzMQV['OiuPN'](j, head['length']); j++) {\n            list['push'](head[j] + rest);\n        }\n        rest += '9';\n    }\n    const ans = list['slice'](0x0, K)['join']('\\x0a');\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "1\n2\n3\n4\n5\n6\n7\n8\n9\n19"]], "original": "'use strict'\n\nfunction main(s) {\n\n  const K = Number(s.split('\\n')[0]);\n\n  const list = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '19', '29', '39', '49', '59', '69', '79', '89', '99', '199'];\n\n  const head = ['2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'];\n\n  let rest = '99';\n\n  for (let i = 0; i <= 20; i++) {\n    for (let j = 0; j < head.length; j++) {\n      list.push(head[j] + rest);\n    }\n    rest += '9';\n  }\n\n  const ans = list.slice(0, K).join('\\n');\n  console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03354_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var zVhMrN = {\n        'uBURZ': function (x, y) {\n            return x < y;\n        },\n        'RmoxU': function (x, y) {\n            return x - y;\n        },\n        'wlhHb': function (x, y) {\n            return x * y;\n        },\n        'EtIje': function (x, y) {\n            return x < y;\n        },\n        'ebYyT': function (x, y) {\n            return x === y;\n        }\n    };\n    input = input['trim']()['split'](/\\s+/)['map'](x => x - 0x0);\n    var N = input['shift'](), M = input['shift']();\n    var p = input['splice'](0x0, N);\n    var nodes = [];\n    for (let k = 0x0; zVhMrN['uBURZ'](k, N); k++)\n        nodes[k] = new Node(k);\n    for (let k = 0x0; k < M; k++)\n        nodes[zVhMrN['RmoxU'](input[zVhMrN['wlhHb'](0x2, k)], 0x1)]['merge'](nodes[zVhMrN['RmoxU'](input[0x2 * k + 0x1], 0x1)]);\n    var counter = 0x0;\n    for (let k = 0x0; zVhMrN['EtIje'](k, N); k++)\n        if (zVhMrN['ebYyT'](nodes[k]['top'](), nodes[p[k] - 0x1]['top']()))\n            counter++;\n    console['log'](counter);\n}\nfunction Node(v) {\n    var t = this;\n    t['value'] = v;\n    t['parent'] = null;\n    t['weight'] = 0x1;\n}\nNode['prototype']['top'] = function () {\n    var t = this;\n    var p = t['parent'];\n    if (!p)\n        return t;\n    else\n        return p['top']();\n};\nNode['prototype']['adopt'] = function (progeny) {\n    var t = this['top']();\n    var c = progeny['top']();\n    c['parent'] = t;\n    t['weight'] += c['weight'];\n};\nNode['prototype']['merge'] = function (b) {\n    var QYGsNS = {\n        'PkRkX': function (x, y) {\n            return x < y;\n        }\n    };\n    var a = this['top']();\n    b = b['top']();\n    if (a === b)\n        return;\n    if (QYGsNS['PkRkX'](a['weight'], b['weight']))\n        b['adopt'](a);\n    else\n        a['adopt'](b);\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2\n5 3 1 4 2\n1 3\n5 4", "2"], ["3 2\n3 2 1\n1 2\n2 3", "3"], ["10 8\n5 3 6 8 7 10 9 1 2 4\n3 1\n4 1\n5 9\n2 5\n6 5\n3 5\n8 9\n7 9", "8"], ["5 1\n1 2 3 4 5\n1 5", "5"]], "original": "'use strict'\nfunction Main(input){\n  input=input.trim().split(/\\s+/).map(x=>x-0);\n  var N=input.shift(), M=input.shift();\n  var p=input.splice(0,N);\n  var nodes=[];\n  for(let k=0;k<N;k++)\n    nodes[k]=new Node(k);\n  for(let k=0;k<M;k++)\n    nodes[input[2*k]-1].merge(nodes[input[2*k+1]-1]);\n  var counter=0;\n  for(let k=0;k<N;k++)\n    if(nodes[k].top()===nodes[p[k]-1].top())\n      counter++;\n  console.log(counter);\n}\n\nfunction Node(v){\n  var t=this;\n  t.value=v;\n  t.parent=null;\n  t.weight=1;\n}\n\nNode.prototype.top=function(){\n  var t=this;\n  var p=t.parent;\n  if(!p)return t;\n  else return p.top();  \n}\n\nNode.prototype.adopt=function(progeny){\n  var t=this.top();\n  var c=progeny.top();\n  c.parent=t;\n  t.weight+=c.weight;\n}\n\nNode.prototype.merge=function(b){\n  var a=this.top();\n  b=b.top();\n  if(a===b)return;\n  if(a.weight<b.weight)b.adopt(a);\n  else a.adopt(b);\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03355_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var QvlVfO = {\n        'BXRZg': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; QvlVfO['BXRZg'](i, rest['length']); i++)\n        if (rest[i] < val)\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; i < rest['length']; i++)\n        if (rest[i] > val)\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var gAmGQM = {\n        'rnVKb': '7|0|5|2|1|4|9|6|3|8',\n        'CWKtH': function (x, y) {\n            return x < y;\n        },\n        'BvyiX': function (x, y) {\n            return x < y;\n        },\n        'WSCAj': function (x, y) {\n            return x + y;\n        }\n    };\n    var IJZyYD = gAmGQM['rnVKb']['split']('|');\n    var NqiwVy = 0x0;\n    while (!![]) {\n        switch (IJZyYD[NqiwVy++]) {\n        case '0':\n            var s = input[0x0];\n            continue;\n        case '1':\n            var arr = [];\n            continue;\n        case '2':\n            var l = s['length'];\n            continue;\n        case '3':\n            ans = arr[k - 0x1];\n            continue;\n        case '4':\n            var x;\n            continue;\n        case '5':\n            var k = toInt(input[0x1]);\n            continue;\n        case '6':\n            arr['sort']((a, b) => a < b ? -0x1 : 0x1);\n            continue;\n        case '7':\n            var input = input['split']('\\x0a');\n            continue;\n        case '8':\n            console['log'](ans);\n            continue;\n        case '9':\n            for (var i = 0x0; gAmGQM['CWKtH'](i, l); i++) {\n                for (var j = i; gAmGQM['BvyiX'](j, gAmGQM['WSCAj'](i, 0x5)); j++) {\n                    x = s['slice'](i, gAmGQM['WSCAj'](j, 0x1));\n                    if (arr['indexOf'](x) === -0x1)\n                        arr['push'](x);\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["aba\n4", "b"], ["atcoderandatcodeer\n5", "andat"], ["z\n1", "z"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\t//input = input.map(e => toIntArr(e.split(' ')));\n\tvar s = input[0];\n\tvar k = toInt(input[1]);\n\tvar l = s.length;\n\tvar arr = [];\n\tvar x;\n \n\tfor(var i = 0; i < l; i++){\n\t\tfor(var j = i ; j < i+5; j++){\n\t\t\tx = s.slice(i,j+1);\n\t\t\tif(arr.indexOf(x)===-1) arr.push(x);\n\t\t}\n\t}\n \n\tarr.sort((a,b)=>a<b? -1: 1);\n\tans = arr[k-1];\n \n\tconsole.log(ans);\n}", "language": "JavaScript"}
{"filename": "p03419_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const DNSAnr = {\n        'HpfqP': function (x, y) {\n            return x * y;\n        }\n    };\n    const [N, M] = args['trim']()['split']('\\x20')['map'](v => v - 0x2);\n    return '' + Math['abs'](DNSAnr['HpfqP'](N, M));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 2", "0"], ["1 7", "5"], ["314 1592", "496080"]], "original": "console.log((args=>{\n  const [N,M] = args.trim().split(' ').map(v=>v-2);\n  return `${Math.abs(N*M)}`\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03437_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var vegnrg = {\n        'rBkdT': '2|5|1|4|0|3',\n        'iGVGd': function (x, y) {\n            return x * y;\n        },\n        'JMoVs': function (x, y) {\n            return x - y;\n        },\n        'FKeEF': function (x, y) {\n            return x | y;\n        },\n        'nYOCn': function (x, y) {\n            return x > y;\n        },\n        'PCKlA': function (x, y) {\n            return x / y;\n        }\n    };\n    var WEmoNK = vegnrg['rBkdT']['split']('|');\n    var AxsPvA = 0x0;\n    while (!![]) {\n        switch (WEmoNK[AxsPvA++]) {\n        case '0':\n            if (a === !![]) {\n                ans = -0x1;\n            } else {\n                while (!![]) {\n                    num++;\n                    cal = vegnrg['iGVGd'](input[0x0], num) / input[0x1];\n                    var b = Number['isInteger'](cal);\n                    if (b === !![]) {\n                        ans = vegnrg['iGVGd'](input[0x0], vegnrg['JMoVs'](num, 0x1));\n                        break;\n                    }\n                    if (vegnrg['FKeEF'](vegnrg['FKeEF'](vegnrg['nYOCn'](input[0x0], Math['pow'](0xa, 0x9)), vegnrg['nYOCn'](input[0x1], Math['pow'](0xa, 0x9))), vegnrg['nYOCn'](input[0x0] * vegnrg['JMoVs'](num, 0x1), Math['pow'](0xa, 0x12)))) {\n                        ans = -0x1;\n                        break;\n                    }\n                }\n            }\n            continue;\n        case '1':\n            num = 0x0;\n            continue;\n        case '2':\n            input = input['split']('\\x20');\n            continue;\n        case '3':\n            console['log'](ans);\n            continue;\n        case '4':\n            var a = Number['isInteger'](ans);\n            continue;\n        case '5':\n            ans = vegnrg['PCKlA'](input[0x0], input[0x1]);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8 6", "16"], ["3 3", "-1"]], "original": "function Main(input) {\n\tinput = input.split(\" \");\n\tans = (input[0]/input[1]);\n  num =0;\nvar a = Number.isInteger(ans);\nif(a===true){ans=-1;}else{\nwhile(true){\nnum++;\ncal = ((input[0]*num)/input[1])\nvar b = Number.isInteger(cal)\n  if(b===true){ans=(input[0]*(num-1));break;}\n  if(input[0]>Math.pow(10,9)|input[1]>Math.pow(10,9)|(input[0]*(num-1))>Math.pow(10,18)){\n  ans=-1;break;\n  }\n}\n}\n  console.log(ans)\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03544_1", "type": "JavaScript", "obfuscated": "function main(s) {\n    var lAApiC = {\n        'WQxNC': function (x, y) {\n            return x === y;\n        },\n        'YgLMe': function (x, y) {\n            return x === y;\n        },\n        'mGxVs': '12360848946698171',\n        'ewnyb': '20000273725560978',\n        'tcelJ': '32361122672259149',\n        'UcsAV': '52361396397820127',\n        'jPFkm': '84722519070079276',\n        'JVDdO': function (x, y) {\n            return x === y;\n        },\n        'ImvAV': '137083915467899403',\n        'flZWy': '580696784543856761',\n        'lRpjq': '939587134549734843'\n    };\n    var n = Number(s['split']('\\x0a')[0x0]);\n    if (lAApiC['WQxNC'](n, 0x0)) {\n        console['log'](0x2);\n        return;\n    }\n    if (lAApiC['YgLMe'](n, 0x1)) {\n        console['log'](0x1);\n        return;\n    }\n    if (lAApiC['WQxNC'](n, 0x4d)) {\n        console['log'](lAApiC['mGxVs']);\n        return;\n    }\n    if (lAApiC['WQxNC'](n, 0x4e)) {\n        console['log'](lAApiC['ewnyb']);\n        return;\n    }\n    if (lAApiC['YgLMe'](n, 0x4f)) {\n        console['log'](lAApiC['tcelJ']);\n        return;\n    }\n    if (lAApiC['WQxNC'](n, 0x50)) {\n        console['log'](lAApiC['UcsAV']);\n        return;\n    }\n    if (lAApiC['YgLMe'](n, 0x51)) {\n        console['log'](lAApiC['jPFkm']);\n        return;\n    }\n    if (lAApiC['JVDdO'](n, 0x52)) {\n        console['log'](lAApiC['ImvAV']);\n        return;\n    }\n    if (lAApiC['JVDdO'](n, 0x53)) {\n        console['log']('221806434537978679');\n        return;\n    }\n    if (lAApiC['WQxNC'](n, 0x54)) {\n        console['log']('358890350005878082');\n        return;\n    }\n    if (lAApiC['JVDdO'](n, 0x55)) {\n        console['log'](lAApiC['flZWy']);\n        return;\n    }\n    if (n === 0x56) {\n        console['log'](lAApiC['lRpjq']);\n        return;\n    }\n    var x = 0x2;\n    var y = 0x1;\n    var z = 0x0;\n    for (var i = 0x2; i <= n; i++) {\n        z = x + y;\n        x = y;\n        y = z;\n    }\n    console['log'](z);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5", "11"], ["86", "939587134549734843"]], "original": "function main(s) {\n\tvar n = Number(s.split(\"\\n\")[0]);\n\tif (n === 0) {console.log(2); return;}\n\tif (n === 1) {console.log(1); return;}\n\tif (n === 77) {console.log(\"12360848946698171\"); return;}\n\tif (n === 78) {console.log(\"20000273725560978\"); return;}\n\tif (n === 79) {console.log(\"32361122672259149\"); return;}\n\tif (n === 80) {console.log(\"52361396397820127\"); return;}\n\tif (n === 81) {console.log(\"84722519070079276\"); return;}\n\tif (n === 82) {console.log(\"137083915467899403\"); return;}\n\tif (n === 83) {console.log(\"221806434537978679\"); return;}\n\tif (n === 84) {console.log(\"358890350005878082\"); return;}\n\tif (n === 85) {console.log(\"580696784543856761\"); return;}\n\tif (n === 86) {console.log(\"939587134549734843\"); return;}\n\tvar x = 2;\n\tvar y = 1;\n\tvar z = 0;\n\tfor (var i = 2; i <= n; i++) {\n\t\tz = x + y;\n\t\tx = y;\n\t\ty = z;\n\t}\n\tconsole.log(z);\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n", "language": "JavaScript"}
{"filename": "p03588_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var VmVtGK = {\n        'IiKkU': '1|2|4|3|0',\n        'HXQpt': function (x, y) {\n            return x < y;\n        },\n        'uhqVC': function (x, y) {\n            return x + y;\n        }\n    };\n    var CnLKVN = VmVtGK['IiKkU']['split']('|');\n    var qQIKOl = 0x0;\n    while (!![]) {\n        switch (CnLKVN[qQIKOl++]) {\n        case '0':\n            console['log'](ans);\n            continue;\n        case '1':\n            var max = 0x0;\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            for (var i = 0x1; VmVtGK['HXQpt'](i, input['length']); i++) {\n                var mem = input[i]['split']('\\x20')['map'](Number);\n                if (VmVtGK['HXQpt'](max, mem[0x0])) {\n                    max = mem[0x0];\n                    ans = VmVtGK['uhqVC'](mem[0x0], mem[0x1]);\n                }\n            }\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\n4 7\n2 9\n6 2", "8"], ["5\n1 10\n3 6\n5 2\n4 4\n2 8", "7"], ["2\n1 1000000000\n1000000000 1", "1000000001"]], "original": "function Main(input){\n\tvar max = 0;\n\tvar ans = 0;\n\tinput = input.split(\"\\n\");\n\tfor(var i=1;i<input.length;i++){\n\t\tvar mem = input[i].split(\" \").map(Number);\n\t\tif(max<mem[0]){\n\t\t\tmax = mem[0];\n\t\t\tans = mem[0]+mem[1];\n\t\t}\n\t}\n\tconsole.log(ans)\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03687_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const pPjskN = {\n        'yhxmi': function (x, y) {\n            return x < y;\n        },\n        'GUExW': function (x, y) {\n            return x < y;\n        },\n        'kPWnf': function (x, y) {\n            return x === y;\n        },\n        'vdWiB': function (x, y) {\n            return x + y;\n        }\n    };\n    const S = args['trim']()['split']``['map'](c => c['charCodeAt']() - 0x61);\n    const N = S['length'];\n    const a = Array(0x1a)['fill'](-0x1);\n    for (let i = 0x0; pPjskN['yhxmi'](i, 0x1a); i++) {\n        let d = 0x0;\n        for (let j = 0x0; pPjskN['GUExW'](j, N); j++) {\n            d = pPjskN['kPWnf'](S[j], i) ? 0x0 : pPjskN['vdWiB'](d, 0x1);\n            if (a[i] < d)\n                a[i] = d;\n        }\n    }\n    return Math['min'](...a['filter'](v => v >= 0x0));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["serval", "3"], ["jackal", "2"], ["zzz", "0"], ["whbrjpjyhsrywlqjxdbrbaomnw", "8"]], "original": "console.log((args=>{\n  const S = args.trim().split``.map(c=>c.charCodeAt()-97);\n  const N = S.length;\n  const a = Array(26).fill(-1);\n  for ( let i = 0; i < 26; i++ ) {\n    let d = 0;\n    for ( let j = 0; j < N; j++ ) {\n      d = S[j] === i ? 0 : d + 1;\n      if ( a[i] < d ) a[i] = d;\n    }\n  }\n  return Math.min(...a.filter(v=>v>=0));\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04005_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var rgQwJi = {\n        'fFGOB': function (x, y) {\n            return x - y;\n        },\n        'nUzLk': function (x, y) {\n            return x == y;\n        },\n        'iVBOW': function (x, y) {\n            return x == y;\n        },\n        'rREwH': function (x, y) {\n            return x % y;\n        },\n        'mtydb': function (x, y) {\n            return x == y;\n        },\n        'zxVRO': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x20')['map'](Number);\n    if (rgQwJi['nUzLk'](input[0x0] % 0x2, 0x0) && rgQwJi['iVBOW'](rgQwJi['rREwH'](input[0x1], 0x2), 0x0) && rgQwJi['mtydb'](input[0x2] % 0x2, 0x0)) {\n        console['log'](0x0);\n    } else {\n        input = input['sort'](function (a, b) {\n            return rgQwJi['fFGOB'](a, b);\n        });\n        console['log'](rgQwJi['zxVRO'](input[0x1], input[0x0]));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3 3 3", "9"], ["2 2 4", "0"], ["5 3 5", "15"]], "original": "function Main(input){\n  input = input.split(\" \").map(Number);\n  if(input[0]%2==0&&input[1]%2==0&&input[2]%2==0){\n    console.log(0);\n  }else{\n    input = input.sort(function(a,b){return a-b;});\n    console.log(input[1]*input[0]);\n  }\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00016_1", "type": "JavaScript", "obfuscated": "m = '+=+j[0]*Math.', n = '(s*Math.PI/180)', x = y = s = 0x0;\nrequire('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['some'](function (i) {\n    var CTuYpW = {\n        'fHJYe': function (callee, param1) {\n            return callee(param1);\n        },\n        'hwcWg': function (x, y) {\n            return x + y;\n        },\n        'aFZqZ': function (x, y) {\n            return x + y;\n        },\n        'CmECx': function (x, y) {\n            return x + y;\n        },\n        'SVFhm': 'sin',\n        'IjKON': 'cos'\n    };\n    j = i['split'](','), CTuYpW['fHJYe'](eval, CTuYpW['hwcWg'](CTuYpW['hwcWg'](CTuYpW['hwcWg'](CTuYpW['aFZqZ'](CTuYpW['CmECx']('x', m), CTuYpW['SVFhm']), n) + ',y' + m, CTuYpW['IjKON']), n)), s += +j[0x1];\n});\nconsole['log'](~~x), console['log'](~~y);", "test_cases": [["56,65\n97,54\n64,-4\n55,76\n42,-27\n43,80\n87,-86\n55,-6\n89,34\n95,5\n0,0", "171\n-302"]], "original": "m='+=+j[0]*Math.',n='(s*Math.PI/180)',x=y=s=0;require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').some(function(i){j=i.split(','),eval('x'+m+'sin'+n+',y'+m+'cos'+n),s+=+j[1]});console.log(~~x),console.log(~~y)", "language": "JavaScript"}
{"filename": "p00028_1", "type": "JavaScript", "obfuscated": "for (a = [], b = 0x64; b--;)\n    c = a[b] = 0x0;\nrequire('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a')['some'](function (i) {\n    var lfilge = {\n        'YhrDo': function (x, y) {\n            return x > y;\n        }\n    };\n    if (+i)\n        a[+i]++, c = lfilge['YhrDo'](a[+i], c) ? a[+i] : c;\n});\na['some'](function (i, j) {\n    var EpTkJK = {\n        'LUorz': function (x, y) {\n            return x == y;\n        }\n    };\n    if (EpTkJK['LUorz'](i, c))\n        console['log'](j);\n});", "test_cases": [["5\n6\n3\n5\n8\n7\n5\n3\n9\n7\n3\n4", "3\n5"]], "original": "for(a=[],b=100;b--;)c=a[b]=0;require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').some(function(i){if(+i)a[+i]++,c=a[+i]>c?a[+i]:c});a.some(function(i,j){if(i==c)console.log(j)})", "language": "JavaScript"}
{"filename": "p00030_1", "type": "JavaScript", "obfuscated": "function comb(r) {\n    var tPBvag = {\n        'DSpli': function (x, y) {\n            return x != y;\n        },\n        'OCHEZ': function (x, y) {\n            return x <= y;\n        },\n        'PFSrR': function (x, y) {\n            return x == y;\n        },\n        'ajyWA': function (x, y) {\n            return x + y;\n        },\n        'JqKpl': function (x, y) {\n            return x - y;\n        },\n        'YsByO': function (x, y) {\n            return x + y;\n        }\n    };\n    var cDdBVV = '4|6|2|1|0|3|5'['split']('|');\n    var vEVLWO = 0x0;\n    while (!![]) {\n        switch (cDdBVV[vEVLWO++]) {\n        case '0':\n            var ret = [];\n            continue;\n        case '1':\n            c[0x1] = 0x0;\n            continue;\n        case '2':\n            var k = 0x1;\n            continue;\n        case '3':\n            while (tPBvag['DSpli'](k, 0x0)) {\n                var jvnghS = '4|2|0|5|6|1|3'['split']('|');\n                var GnEpyK = 0x0;\n                while (!![]) {\n                    switch (jvnghS[GnEpyK++]) {\n                    case '0':\n                        for (var i = 0x1; tPBvag['OCHEZ'](i, r); i++) {\n                            arr['push'](c[i]);\n                        }\n                        continue;\n                    case '1':\n                        while (tPBvag['PFSrR'](c[k], tPBvag['ajyWA'](tPBvag['JqKpl'](0x9, r), k)))\n                            k = k - 0x1;\n                        continue;\n                    case '2':\n                        var arr = [];\n                        continue;\n                    case '3':\n                        c[k] = c[k] + 0x1;\n                        continue;\n                    case '4':\n                        for (var i = tPBvag['YsByO'](k, 0x1); i <= r; i++) {\n                            c[i] = c[tPBvag['JqKpl'](i, 0x1)] + 0x1;\n                        }\n                        continue;\n                    case '5':\n                        ret['push'](arr);\n                        continue;\n                    case '6':\n                        k = r;\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '4':\n            var c = [];\n            continue;\n        case '5':\n            return ret;\n        case '6':\n            c[0x0] = -0x1;\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var nums = line['split']('\\x20');\n    var n = +nums[0x0];\n    var s = +nums[0x1];\n    if (n + s == 0x0)\n        break;\n    var c = comb(n);\n    var cnt = 0x0;\n    for (var i = 0x0; i < c['length']; i++) {\n        var arr = c[i];\n        if (s == arr['reduce'](function (prev, now) {\n                var EeJNtn = {\n                    'CudrL': function (x, y) {\n                        return x + y;\n                    }\n                };\n                return EeJNtn['CudrL'](prev, now);\n            })) {\n            cnt++;\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 6\n3 1\n0 0", "3\n0"]], "original": "function comb(r) {\n\tvar c = [];\n\tc[0] = -1;\n\tvar k = 1;\n\tc[1] = 0;\n\tvar ret = [];\n\n\twhile (k != 0) {\n\t\tfor (var i = k + 1; i <= r; i++) {\n\t\t\tc[i] = c[i - 1] + 1;\n\t\t}\n\n\t\tvar arr = []\n\t\tfor (var i = 1; i <= r; i++) {\n\t\t\tarr.push(c[i]);\n\t\t}\n\t\tret.push(arr);\n\n\t\tk = r;\n\t\twhile (c[k] == 9 - r + k)\n\t\t\tk = k - 1;\n\n\t\tc[k] = c[k] + 1;\n\t}\n\n\treturn ret;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n\tvar nums = line.split(' ');\n\tvar n = +nums[0];\n\tvar s = +nums[1];\n\tif (n + s == 0)\n\t\tbreak;\n\n\tvar c = comb(n);\n\n\tvar cnt = 0;\n\tfor (var i = 0; i < c.length; i++) {\n\t\tvar arr = c[i];\n\t\tif (s == arr.reduce(function(prev, now){return prev + now;})) {\n\t\t\tcnt++;\n\t\t}\n\t}\n\n\tconsole.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00040_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var cjJjNA = {\n        'OxeIU': function (callee, param1) {\n            return callee(param1);\n        },\n        'IAjhs': function (x, y) {\n            return x < y;\n        },\n        'vdyOn': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var p = input['replace'](/\\n$/, '')['split']('\\x0a');\n    var n = cjJjNA['OxeIU'](Number, p['shift']());\n    for (var i = 0x0; cjJjNA['IAjhs'](i, n); i++) {\n        console['log'](cjJjNA['vdyOn'](conv, p['shift']()));\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));\nfunction conv(s) {\n    var auYopq = {\n        'AYmCw': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    a = s['split']('\\x20');\n    for (var i = 0x0; i < a['length']; i++) {\n        var r = check(a[i]);\n        if (r) {\n            return auYopq['AYmCw'](conv_, s, r);\n        }\n    }\n    return s;\n}\nfunction conv_(s, r) {\n    var xsBIcQ = {\n        'mHDTe': '4|2|1|3|0',\n        'zcBIp': function (x, y) {\n            return x === y;\n        },\n        'RfLEh': function (x, y) {\n            return x + y;\n        },\n        'NCtAj': function (x, y) {\n            return x % y;\n        }\n    };\n    var xRTGEQ = xsBIcQ['mHDTe']['split']('|');\n    var tNTehO = 0x0;\n    while (!![]) {\n        switch (xRTGEQ[tNTehO++]) {\n        case '0':\n            return s;\n        case '1':\n            var b = r[0x1];\n            continue;\n        case '2':\n            var a = r[0x0];\n            continue;\n        case '3':\n            var s = s['split']('')['map'](function (e) {\n                if (iQjYHn['SpfII'](e, '\\x20')) {\n                    return e;\n                }\n                return String['fromCharCode'](iQjYHn['yvjWS'](iQjYHn['KVxWg'](iQjYHn['yvjWS'](a * e['charCodeAt'](0x0), b), 0x1a), 'a'['charCodeAt'](0x0)));\n            })['join']('');\n            continue;\n        case '4':\n            var iQjYHn = {\n                'SpfII': function (x, y) {\n                    return xsBIcQ['zcBIp'](x, y);\n                },\n                'yvjWS': function (x, y) {\n                    return xsBIcQ['RfLEh'](x, y);\n                },\n                'KVxWg': function (x, y) {\n                    return xsBIcQ['NCtAj'](x, y);\n                }\n            };\n            continue;\n        }\n        break;\n    }\n}\nfunction check(str) {\n    var pcZeSi = {\n        'UQkbN': function (x, y) {\n            return x !== y;\n        },\n        'PyFPf': function (x, y) {\n            return x < y;\n        },\n        'lhHhm': function (x, y) {\n            return x === y;\n        },\n        'KbDps': 'this',\n        'lzFEV': function (x, y) {\n            return x === y;\n        },\n        'jHxoT': 'that'\n    };\n    if (pcZeSi['UQkbN'](str['length'], 0x4)) {\n        return ![];\n    }\n    for (var i = 0x0; i < 0x1a; i++) {\n        for (var j = 0x0; pcZeSi['PyFPf'](j, 0x1a); j++) {\n            var s = conv_(str, [\n                i,\n                j\n            ]);\n            if (pcZeSi['lhHhm'](s, pcZeSi['KbDps']) || pcZeSi['lzFEV'](s, pcZeSi['jHxoT'])) {\n                return [\n                    i,\n                    j\n                ];\n            }\n        }\n    }\n    return ![];\n}", "test_cases": [["1\ny eazqyp pnop pngtg ye obmpngt xmybp mr lygw", "i submit that there is another point of view"]], "original": "(function(input) {\n  var p = input.replace(/\\n$/, '').split('\\n');\n  var n = Number(p.shift());\n  for (var i = 0; i < n; i++) {\n    console.log(conv(p.shift()));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\nfunction conv(s) {\n  a = s.split(' ');\n  for (var i = 0; i < a.length; i++) {\n    var r = check(a[i]);\n    if (r) {\n      return conv_(s, r);\n    }\n  }\n  return s;\n}\n\nfunction conv_(s, r) {\n  var a = r[0];\n  var b = r[1];\n  var s = s.split('').map(function(e) {\n    if (e === ' ') {\n      return e;\n    }\n    return String.fromCharCode((a * e.charCodeAt(0) + b) % 26 + 'a'.charCodeAt(0));\n  }).join('');\n  return s;\n}\n\nfunction check(str) {\n  if (str.length !== 4) {\n    return false;\n  }\n  for (var i = 0; i < 26; i++) {\n    for (var j = 0; j < 26; j++) {\n      var s = conv_(str, [i, j]);\n      if (s === 'this' || s === 'that') {\n        return [i, j];\n      }\n    }\n  }\n  return false;\n}", "language": "JavaScript"}
{"filename": "p00054_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var RJZMCF = '1|2|4|0|3'['split']('|');\n    var CLAyrp = 0x0;\n    while (!![]) {\n        switch (RJZMCF[CLAyrp++]) {\n        case '0':\n            while (n--) {\n                var str = (arr[0x0] / arr[0x1])['toFixed'](n + 0x2)['slice'](-0x2);\n                sum += str[0x0] - 0x0;\n            }\n            continue;\n        case '1':\n            var arr = Arr[i]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            var n = arr[0x2];\n            continue;\n        case '3':\n            console['log'](sum);\n            continue;\n        case '4':\n            var sum = 0x0;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["1 2 3\n2 3 4\n5 4 3\n4 3 2", "5\n24\n7\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   var n=arr[2];\n   var sum=0;\n   while(n--){\n      var str=((arr[0]/arr[1]).toFixed(n+2)).slice(-2);\n      sum+=(str[0]-0);\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00110_1", "type": "JavaScript", "obfuscated": "function main() {\n    var CzFDqX = {\n        'WEyLg': function (x, y) {\n            return x === y;\n        },\n        'DZBYP': function (x, y) {\n            return x === y;\n        },\n        'kqaGA': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'qbQES': function (x, y) {\n            return x === y;\n        }\n    };\n    input['forEach'](function (line) {\n        var a, b, c, p, x, y, z, i;\n        if (CzFDqX['WEyLg'](line['trim'](), ''))\n            return;\n        p = line['match'](/([0-9X]+)\\+([0-9X]+)\\=([0-9X]+)/);\n        a = p[0x1];\n        b = p[0x2];\n        c = p[0x3];\n        for (i = 0x0; i <= 0x9; i++) {\n            if (CzFDqX['DZBYP'](i, 0x0) && (CzFDqX['WEyLg'](a['charAt'](0x0), 'X') || b['charAt'](0x0) === 'X' || c['charAt'](0x0) === 'X'))\n                continue;\n            x = CzFDqX['kqaGA'](parseInt, a['replace'](/X/g, i), 0xa);\n            y = parseInt(b['replace'](/X/g, i), 0xa);\n            z = parseInt(c['replace'](/X/g, i), 0xa);\n            if (CzFDqX['DZBYP'](x + y, z))\n                break;\n        }\n        console['log'](CzFDqX['qbQES'](i, 0xa) ? 'NA' : i);\n    });\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    input = input['split']('\\x0a');\n    main();\n});", "test_cases": [["123+4X6=X79\n12X+4X6=X79\nXX22+89=X2XX", "5\nNA\n1"]], "original": "function main() {\n  input.forEach(function(line) {\n    var\n    a, b, c, p,\n    x, y, z,\n    i;\n    if(line.trim() === '') return;\n    p = line.match(/([0-9X]+)\\+([0-9X]+)\\=([0-9X]+)/);\n    a = p[1]; b = p[2]; c = p[3];\n    for(i = 0; i <= 9; i++) {\n      if(i === 0 && (a.charAt(0) === 'X' || b.charAt(0) === 'X' || c.charAt(0) === 'X')) continue;\n      x = parseInt(a.replace(/X/g, i), 10);\n      y = parseInt(b.replace(/X/g, i), 10);\n      z = parseInt(c.replace(/X/g, i), 10);\n      if(x + y === z) break;\n    }\n    console.log(i === 10 ? 'NA' : i);\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00140_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nfor (var i = 0x0; i < n; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    var s = arr[0x0];\n    var g = arr[0x1];\n    var ans = [s];\n    var plus = 0x1;\n    if (s < g) {\n        do {\n            s++;\n            ans['push'](s);\n        } while (s != g);\n    } else if (s > g && s <= 0x5) {\n        do {\n            s--;\n            ans['push'](s);\n        } while (s != g);\n    } else if (s > g && s >= 0x6 && g >= 0x6) {\n        do {\n            s++;\n            if (s == 0xa) {\n                s = 0x5;\n            }\n            ans['push'](s);\n        } while (s != g);\n    } else if (s > g && s >= 0x6 && g <= 0x5) {\n        do {\n            s += plus;\n            if (s == 0xa) {\n                s = 0x5;\n                plus = -0x1;\n            }\n            ;\n            ans['push'](s);\n        } while (s != g);\n    }\n    console['log'](ans['join']('\\x20'));\n}", "test_cases": [["2\n2 4\n4 2", "2 3 4\n4 3 2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var i=0;i<n;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   var s=arr[0];\n   var g=arr[1];\n   var ans=[s];\n   var plus=1;\n   if(s<g){do{s++;ans.push(s);}while(s!=g);}\n   else if(s>g && s<=5){do{s--;ans.push(s);}while(s!=g);}\n   else if(s>g && s>=6 && g>=6){do{s++;if(s==10){s=5;}ans.push(s);}while(s!=g);}\n   else if(s>g && s>=6 && g<=5){do{s+=plus;if(s==10){s=5;plus=-1;};ans.push(s);}while(s!=g);}\n   console.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p02249_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')['readFileSync'](config['input'], 'ascii')['split'](config['newline']);\nline[0x0] = line[0x0]['split']('\\x20')['map'](Number);\nH = line[0x0][0x0];\nW = line[0x0][0x1];\nfield = line['slice'](0x1, 0x1 + H);\nline[0x1 + H] = line[0x1 + H]['split']('\\x20')['map'](Number);\nR = line[0x1 + H][0x0];\nC = line[0x1 + H][0x1];\npat = line['slice'](0x1 + H + 0x1, 0x1 + H + 0x1 + R);\nmem = new Array(H);\nfor (i = 0x0; i < H; i++) {\n    mem[i] = new Array(R);\n    for (j = 0x0; j < R; j++) {\n        mem[i][j] = {};\n        k = field[i]['indexOf'](pat[j]);\n        while (k !== -0x1) {\n            mem[i][j][k] = !![];\n            k = field[i]['indexOf'](pat[j], k + 0x1);\n        }\n    }\n}\nfor (i = 0x0; i <= H - R; i++) {\n    for (j = 0x0; j <= W - C; j++) {\n        flag = !![];\n        for (k = 0x0; k < R; k++) {\n            if (!mem[i + k][k]['hasOwnProperty'](j)) {\n                flag = ![];\n                break;\n            }\n        }\n        if (flag)\n            console['log']('%d\\x20%d', i, j);\n    }\n}", "test_cases": [["4 5\n00010\n00101\n00010\n00100\n3 2\n10\n01\n10", "0 3\n1 2"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline);\nline[0] = line[0].split(' ').map(Number);\nH = line[0][0];\nW = line[0][1];\nfield = line.slice(1, 1+H);\nline[1+H] = line[1+H].split(' ').map(Number);\nR = line[1+H][0];\nC = line[1+H][1];\npat = line.slice(1+H+1, 1+H+1+R);\n\nmem = new Array(H);\nfor (i = 0; i < H; i++) {\n  mem[i] = new Array(R);\n  for (j = 0; j < R; j++) {\n    mem[i][j] = {};\n    k = field[i].indexOf(pat[j])\n    while (k !== -1) {\n      mem[i][j][k] = true;\n      k = field[i].indexOf(pat[j], k + 1);\n    }\n  }\n}\n\nfor (i = 0; i <= H - R; i++) {\n  for (j = 0; j <= W - C; j++) {\n    flag = true;\n    for (k = 0; k < R; k++) {\n      if (!mem[i+k][k].hasOwnProperty(j)) {\n        flag = false;\n        break;\n      }\n    }\n    if (flag) console.log('%d %d', i, j);\n  }\n}", "language": "JavaScript"}
{"filename": "p02273_1", "type": "JavaScript", "obfuscated": "class Point {\n    constructor(x, y) {\n        this['x'] = x;\n        this['y'] = y;\n    }\n    ['print']() {\n        const AVEamx = {\n            'YBfsL': function (x, y) {\n                return x + y;\n            },\n            'PFNTj': function (x, y) {\n                return x + y;\n            }\n        };\n        console['log'](AVEamx['YBfsL'](AVEamx['PFNTj'](this['x']['toFixed'](0x8), '\\x20'), this['y']['toFixed'](0x8)));\n    }\n}\n(function main() {\n    const UWpszz = {\n        'zcKdF': function (callee, param1) {\n            return callee(param1);\n        },\n        'xnQET': '/dev/stdin',\n        'FWOQw': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const n = Number(UWpszz['zcKdF'](require, 'fs')['readFileSync'](UWpszz['xnQET'], 'utf8')['trim']());\n    let p1 = new Point(0x0, 0x0);\n    let p2 = new Point(0x64, 0x0);\n    p1['print']();\n    UWpszz['FWOQw'](kock, n, p1, p2);\n    p2['print']();\n}());\nfunction kock(n, p1, p2) {\n    const FVFeGo = {\n        'xBTNa': function (x, y) {\n            return x - y;\n        },\n        'JMpIK': function (x, y) {\n            return x + y;\n        },\n        'sOYvk': function (x, y) {\n            return x / y;\n        },\n        'CffYC': function (x, y) {\n            return x + y;\n        },\n        'cipxl': function (x, y) {\n            return x + y;\n        },\n        'dELRF': function (x, y) {\n            return x / y;\n        },\n        'lEAiK': function (x, y) {\n            return x + y;\n        },\n        'JRMYL': function (x, y) {\n            return x - y;\n        },\n        'cpYvL': function (x, y) {\n            return x - y;\n        },\n        'pBCww': function (x, y) {\n            return x * y;\n        },\n        'ZzAri': function (x, y) {\n            return x + y;\n        },\n        'OqFca': function (x, y) {\n            return x - y;\n        },\n        'kGxrS': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'jnyee': function (x, y) {\n            return x - y;\n        },\n        'imiTV': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'KJkJM': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'gTBKK': function (x, y) {\n            return x - y;\n        },\n        'hMrve': function (x, y) {\n            return x * y;\n        },\n        'zaUcf': function (x, y) {\n            return x * y;\n        }\n    };\n    const sin60 = Math['sin'](FVFeGo['sOYvk'](FVFeGo['hMrve'](0x3c, Math['PI']), 0xb4));\n    const cos60 = Math['cos'](FVFeGo['dELRF'](FVFeGo['zaUcf'](0x3c, Math['PI']), 0xb4));\n    function innerFunc(n, p1, p2) {\n        if (!n)\n            return;\n        xDiff = FVFeGo['xBTNa'](p2['x'], p1['x']);\n        yDiff = FVFeGo['xBTNa'](p2['y'], p1['y']);\n        let s = new Point(FVFeGo['JMpIK'](p1['x'], FVFeGo['sOYvk'](xDiff, 0x3)), FVFeGo['CffYC'](p1['y'], FVFeGo['sOYvk'](yDiff, 0x3)));\n        let t = new Point(FVFeGo['CffYC'](s['x'], xDiff / 0x3), FVFeGo['cipxl'](s['y'], FVFeGo['dELRF'](yDiff, 0x3)));\n        let u = new Point(FVFeGo['lEAiK'](FVFeGo['JRMYL'](FVFeGo['cpYvL'](t['x'], s['x']) * cos60, FVFeGo['pBCww'](FVFeGo['JRMYL'](t['y'], s['y']), sin60)), s['x']), FVFeGo['CffYC'](FVFeGo['ZzAri'](FVFeGo['pBCww'](FVFeGo['OqFca'](t['x'], s['x']), sin60), FVFeGo['JRMYL'](t['y'], s['y']) * cos60), s['y']));\n        FVFeGo['kGxrS'](kock, n - 0x1, p1, s);\n        s['print']();\n        kock(FVFeGo['jnyee'](n, 0x1), s, u);\n        u['print']();\n        FVFeGo['imiTV'](kock, n - 0x1, u, t);\n        t['print']();\n        FVFeGo['KJkJM'](kock, FVFeGo['gTBKK'](n, 0x1), t, p2);\n    }\n    kock = innerFunc;\n    innerFunc(n, p1, p2);\n}", "test_cases": [["1", "0.00000000 0.00000000\n33.33333333 0.00000000\n50.00000000 28.86751346\n66.66666667 0.00000000\n100.00000000 0.00000000"], ["2", "0.00000000 0.00000000\n11.11111111 0.00000000\n16.66666667 9.62250449\n22.22222222 0.00000000\n33.33333333 0.00000000\n38.88888889 9.62250449\n33.33333333 19.24500897\n44.44444444 19.24500897\n50.00000000 28.86751346\n55.55555556 19.24500897\n66.66666667 19.24500897\n61.11111111 9.62250449\n66.66666667 0.00000000\n77.77777778 0.00000000\n83.33333333 9.62250449\n88.88888889 0.00000000\n100.00000000 0.00000000"]], "original": "class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  print() {\n    console.log(this.x.toFixed(8) + ' ' + this.y.toFixed(8));\n  }\n}\n\n(function main(){\n  const n = Number(require('fs').readFileSync('/dev/stdin', 'utf8').trim());\n  let p1 = new Point(0, 0);\n  let p2 = new Point(100, 0);\n  p1.print();\n  kock(n, p1, p2);\n  p2.print();\n})();\n\nfunction kock(n, p1, p2) {\n  const sin60 = Math.sin(60 * Math.PI / 180);\n  const cos60 = Math.cos(60 * Math.PI / 180);\n  function innerFunc(n, p1, p2) {\n    if (!n) return;\n    xDiff = p2.x - p1.x;\n    yDiff = p2.y - p1.y;\n    let s = new Point(p1.x + xDiff / 3, p1.y + yDiff / 3);\n    let t = new Point(s.x + xDiff / 3, s.y + yDiff / 3);\n    let u = new Point((t.x - s.x) * cos60 - (t.y - s.y) * sin60 + s.x, (t.x - s.x) * sin60 + (t.y - s.y) * cos60 + s.y);\n    kock(n-1, p1, s); s.print();\n    kock(n-1, s, u);  u.print();\n    kock(n-1, u, t);  t.print();\n    kock(n-1, t, p2);\n  }\n  kock = innerFunc;\n  innerFunc(n, p1, p2);\n}\n\n", "language": "JavaScript"}
{"filename": "p02278_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nline = require('fs')['readFileSync'](config['input'], 'ascii')['split'](config['newline'], 0x2);\nw = line[0x1]['split']('\\x20')['map'](Number);\nsorted = []['concat'](w);\nsorted['sort'](function (a, b) {\n    var XDTLCH = {\n        'zoJZh': function (x, y) {\n            return x - y;\n        }\n    };\n    return XDTLCH['zoJZh'](a, b);\n});\ncost = 0x0;\nfor (i = w['length'] - 0x1; i >= 0x0; i--) {\n    idx = w['indexOf'](sorted[i]);\n    if (idx === i)\n        continue;\n    cost += w[i] + w[idx];\n    tmp = w[i];\n    w[i] = w[idx];\n    w[idx] = tmp;\n}\nconsole['log'](cost);", "test_cases": [["5\n1 5 3 4 2", "7"], ["4\n4 3 2 1", "10"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nline = require('fs').readFileSync(config.input, 'ascii')\n  .split(config.newline, 2);\n\nw = line[1].split(' ').map(Number);\n\nsorted = [].concat(w);\nsorted.sort(function (a, b) { return a - b; });\n\ncost = 0;\nfor (i = w.length - 1; i >= 0; i--) {\n  idx = w.indexOf(sorted[i]);\n  if (idx === i) continue;\n  cost += w[i] + w[idx];\n  tmp = w[i];\n  w[i] = w[idx];\n  w[idx] = tmp;\n}\n\nconsole.log(cost);", "language": "JavaScript"}
{"filename": "p02549_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['split']('\\x0a');\nconst [N, K] = lines[0x0]['split']('\\x20')['map'](Number);\nconst k = [];\nfor (let i = 0x1; i <= K; i++) {\n    const [L, R] = lines[i]['split']('\\x20')['map'](Number);\n    k['push']([\n        L,\n        R\n    ]);\n}\nconst ksum = Array(K)['fill'](0x0);\nconst mod = 0x3b800001;\nconst map = Array(N)['fill'](0x0);\nmap[0x0] = 0x1;\nfor (let i = 0x1; i < map['length']; i++) {\n    let c = 0x0;\n    for (let j = 0x0; j < k['length']; j++) {\n        ksum[j] = ksum[j] + (map[i - k[j][0x0]] || 0x0) - (map[i - k[j][0x1] - 0x1] || 0x0);\n    }\n    map[i] = ksum['reduce']((a, b) => a + b) % mod;\n}\nconsole['log'](map['pop']());", "test_cases": [["5 2\n1 1\n3 4", "4"], ["5 2\n3 3\n5 5", "0"], ["5 1\n1 2", "5"], ["60 3\n5 8\n1 3\n10 15", "221823067"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\nconst lines = input.split('\\n')\nconst [N, K] = lines[0].split(' ').map(Number)\nconst k = []\n\nfor (let i = 1; i <= K; i++) {\n    const [L, R] = lines[i].split(' ').map(Number)\n    k.push([L, R])\n}\nconst ksum = Array(K).fill(0)\n\nconst mod = 998244353\nconst map = Array(N).fill(0)\nmap[0] = 1\n\nfor (let i = 1; i < map.length; i++) {\n    let c = 0\n    for (let j = 0; j < k.length; j++) {\n        ksum[j] = ksum[j] + (map[i - k[j][0]] || 0) - (map[i - k[j][1] -1 ] || 0)\n    }\n    map[i] = ksum.reduce((a, b) => a + b) % mod\n}\n\nconsole.log(map.pop())\n", "language": "JavaScript"}
{"filename": "p02588_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const kqLwpW = {\n        'lAYuy': function (x, y) {\n            return x === y;\n        },\n        'eRGDa': function (x, y) {\n            return x * y;\n        },\n        'dXEhp': function (x, y) {\n            return x < y;\n        }\n    };\n    let [l, ...valArr] = input['split']('\\x0a');\n    valArr = valArr['map'](e => parseFloat(e));\n    let result = [];\n    for (let ele of valArr) {\n        let temp = valArr['map'](e => {\n            if (e !== ele && kqLwpW['lAYuy'](kqLwpW['eRGDa'](e, ele) % 0x1, 0x0) && kqLwpW['dXEhp'](ele, e)) {\n                return [\n                    ele,\n                    e\n                ];\n            }\n        });\n        temp = temp['filter'](e => e !== undefined);\n        if (temp['length']) {\n            result = [\n                ...result,\n                ...temp\n            ];\n        }\n    }\n    console['log'](result['length']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n7.5\n2.4\n17.000000001\n17\n16.000000000", "3"], ["11\n0.9\n1\n1\n1.25\n2.30000\n5\n70\n0.000000001\n9999.999999999\n0.999999999\n1.000000001", "8"]], "original": "function Main(input) {\n  let [l, ...valArr] = input.split('\\n')\n  valArr = valArr.map(e=>parseFloat(e))\n  let result = []\n  for(let ele of valArr){\n    let temp = valArr.map(e=>{\n    \tif((e !== ele && (e*ele)%1===0)&&ele<e){\n        \treturn [ele, e]\n        }\n    })\n    temp =temp.filter(e=>e!==undefined)\n    if(temp.length){result = [...result, ...temp]}\n  }\n  console.log(result.length)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02863_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var iNpUoP = {\n        'zjAsD': '5|6|2|9|3|1|0|7|10|8|4',\n        'TXzkg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'iuRJz': function (x, y) {\n            return x < y;\n        },\n        'jiOXC': function (x, y) {\n            return x + y;\n        },\n        'mXqeF': function (x, y) {\n            return x - y;\n        },\n        'QYaQr': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'psWkV': function (x, y) {\n            return x < y;\n        },\n        'iPXhr': function (x, y) {\n            return x + y;\n        },\n        'smOMZ': function (x, y) {\n            return x <= y;\n        },\n        'jyXkX': function (x, y) {\n            return x + y;\n        },\n        'EcMIz': function (x, y) {\n            return x - y;\n        },\n        'DrowV': function (x, y) {\n            return x + y;\n        }\n    };\n    var Kjdjog = iNpUoP['zjAsD']['split']('|');\n    var ubznyG = 0x0;\n    while (!![]) {\n        switch (Kjdjog[ubznyG++]) {\n        case '0':\n            var dp = [];\n            continue;\n        case '1':\n            arr_AB['sort']((a, b) => a[0x0] - b[0x0]);\n            continue;\n        case '2':\n            var T = iNpUoP['TXzkg'](parseInt, input[0x0][0x1], 0xa);\n            continue;\n        case '3':\n            for (var i = 0x0; iNpUoP['iuRJz'](i, N); i++) {\n                arr_AB['push'](input[iNpUoP['jiOXC'](i, 0x1)]['map'](e => parseInt(e, 0xa)));\n            }\n            continue;\n        case '4':\n            console['log'](dp[N][iNpUoP['mXqeF'](T, 0x1)][0x1]);\n            continue;\n        case '5':\n            input = input['trim']()['split']('\\x0a')['map'](function (x) {\n                return x['split']('\\x20');\n            });\n            continue;\n        case '6':\n            var N = iNpUoP['QYaQr'](parseInt, input[0x0][0x0], 0xa);\n            continue;\n        case '7':\n            var Ai, Bi;\n            continue;\n        case '8':\n            for (var i = 0x0; iNpUoP['psWkV'](i, N); i++) {\n                dp['push']([]);\n                Ai = arr_AB[i][0x0];\n                Bi = arr_AB[i][0x1];\n                for (var j = 0x0; iNpUoP['psWkV'](j, T); j++) {\n                    dp[iNpUoP['iPXhr'](i, 0x1)]['push']([\n                        0x0,\n                        0x0\n                    ]);\n                    if (iNpUoP['smOMZ'](Ai, j)) {\n                        dp[iNpUoP['jyXkX'](i, 0x1)][j][0x0] = Math['max'](dp[i][j][0x0], iNpUoP['iPXhr'](dp[i][iNpUoP['EcMIz'](j, Ai)][0x0], Bi));\n                    } else {\n                        dp[iNpUoP['jyXkX'](i, 0x1)][j][0x0] = dp[i][j][0x0];\n                    }\n                    dp[iNpUoP['DrowV'](i, 0x1)][j][0x1] = Math['max'](dp[i][j][0x1], iNpUoP['DrowV'](dp[i][j][0x0], Bi));\n                }\n            }\n            continue;\n        case '9':\n            var arr_AB = [];\n            continue;\n        case '10':\n            dp['push'](Array['from']({ 'length': T }, () => [\n                0x0,\n                0x0\n            ]));\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 60\n10 10\n100 100", "110"], ["3 60\n10 10\n10 20\n10 30", "60"], ["3 60\n30 10\n30 20\n30 30", "50"], ["10 100\n15 23\n20 18\n13 17\n24 12\n18 29\n19 27\n23 21\n18 20\n27 15\n22 25", "145"]], "original": "//TLEか？\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});    \n\tvar N = parseInt(input[0][0], 10);\n\tvar T = parseInt(input[0][1], 10);\n\tvar arr_AB = [];\n\tfor (var i = 0; i < N; i++){\n\t\tarr_AB.push(input[i + 1].map(e => parseInt(e, 10)));\n\t}\n\tarr_AB.sort((a, b) => a[0] - b[0]);\n\tvar dp = [];\n\tvar Ai, Bi;\n\tdp.push(Array.from({length: T}, () => [0, 0]));\n\tfor (var i = 0; i < N; i++){\n\t\tdp.push([]);\n\t\tAi = arr_AB[i][0];\n\t\tBi = arr_AB[i][1];\n\t\tfor (var j = 0; j < T; j++){\n\t\t\tdp[i + 1].push([0, 0])\n\t\t\t// console.log(i, j, dp);\n\t\t\tif (Ai <= j){\n\t\t\t\tdp[i + 1][j][0] = Math.max(dp[i][j][0], dp[i][j - Ai][0] + Bi);\n\t\t\t} else {\n\t\t\t\tdp[i + 1][j][0] = dp[i][j][0];\n\t\t\t}\n\t\t\tdp[i + 1][j][1] = Math.max(dp[i][j][1], dp[i][j][0] + Bi);\n\t\t}\n\t\t\n\t}\n\tconsole.log(dp[N][T - 1][1]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03151_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nN = inp['shift']() * 0x1;\nA = inp['shift']()['split']('\\x20');\nB = inp['shift']()['split']('\\x20');\nsumA = 0x0;\nsumB = 0x0;\ns = 0x0;\nt = [];\ncnt = 0x0;\nfor (i = 0x0; i < N; i++) {\n    var yJrFAc = '5|1|0|2|4|3'['split']('|');\n    var vZnpmP = 0x0;\n    while (!![]) {\n        switch (yJrFAc[vZnpmP++]) {\n        case '0':\n            d = a - b;\n            continue;\n        case '1':\n            b = B[i] * 0x1;\n            continue;\n        case '2':\n            if (d < 0x0) {\n                cnt++;\n                s += d;\n            } else {\n                t['push'](d);\n            }\n            continue;\n        case '3':\n            sumB += b;\n            continue;\n        case '4':\n            sumA += a;\n            continue;\n        case '5':\n            a = A[i] * 0x1;\n            continue;\n        }\n        break;\n    }\n}\nif (sumA >= sumB) {\n    t['sort']((a, b) => b - a);\n    j = 0x0;\n    while (s < 0x0) {\n        s += t[j];\n        j++;\n    }\n    console['log'](cnt + j);\n} else {\n    console['log'](-0x1);\n}", "test_cases": [["3\n2 3 5\n3 4 1", "3"], ["3\n2 3 3\n2 2 1", "0"], ["3\n17 7 1\n25 6 14", "-1"], ["12\n757232153 372327760 440075441 195848680 354974235 458054863 463477172 740174259 615762794 632963102 529866931 64991604\n74164189 98239366 465611891 362739947 147060907 118867039 63189252 78303147 501410831 110823640 122948912 572905212", "5"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nN = inp.shift() * 1\nA = inp.shift().split(' ')\nB = inp.shift().split(' ')\nsumA = 0\nsumB = 0\ns = 0\nt = []\ncnt = 0\nfor (i=0; i<N; i++) {\n  a = A[i] * 1\n  b = B[i] * 1\n  d = a - b\n  if (d < 0) {\n      cnt++\n      s += d \n  } else {\n      t.push(d)\n  }\n  sumA += a\n  sumB += b\n}\n\nif (sumA >= sumB) {\n  t.sort((a, b) => b - a)\n  j = 0\n  while (s < 0) {\n      s += t[j]\n      j++\n  }\n  console.log(cnt+j)\n} else {\n  console.log(-1)\n}\n", "language": "JavaScript"}
{"filename": "p03287_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var HaWgIS = {\n        'rRjCK': '0|8|1|5|6|2|3|10|9|7|4',\n        'kSjid': function (x, y) {\n            return x === y;\n        },\n        'NvBSU': function (x, y) {\n            return x * y;\n        },\n        'qrXHf': function (x, y) {\n            return x > y;\n        },\n        'mcJqd': function (x, y) {\n            return x / y;\n        },\n        'NiFBE': function (x, y) {\n            return x * y;\n        },\n        'mGRfm': function (x, y) {\n            return x - y;\n        },\n        'uhzwl': function (x, y) {\n            return x % y;\n        },\n        'tovPr': function (x, y) {\n            return x + y;\n        }\n    };\n    var bkpunc = HaWgIS['rRjCK']['split']('|');\n    var LMOifg = 0x0;\n    while (!![]) {\n        switch (bkpunc[LMOifg++]) {\n        case '0':\n            s = s['split']('\\x0a');\n            continue;\n        case '1':\n            var m = n[0x1];\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            var b = {};\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        case '5':\n            n = n[0x0];\n            continue;\n        case '6':\n            var a = s[0x1]['split']('\\x20')['map'](a => +a);\n            continue;\n        case '7':\n            for (i in b) {\n                i = +i;\n                if (HaWgIS['kSjid'](i, 0x0))\n                    ans += HaWgIS['NvBSU'](b[i], b[i] + 0x1) / 0x2;\n                else if (HaWgIS['qrXHf'](b[i], 0x1))\n                    ans += HaWgIS['mcJqd'](HaWgIS['NiFBE'](b[i], HaWgIS['mGRfm'](b[i], 0x1)), 0x2);\n            }\n            continue;\n        case '8':\n            var n = s[0x0]['split']('\\x20')['map'](a => +a);\n            continue;\n        case '9':\n            for (var i = 0x0; i < n; i++) {\n                t = HaWgIS['uhzwl'](HaWgIS['tovPr'](t, a[i]), m);\n                if (b[t])\n                    b[t]++;\n                else\n                    b[t] = 0x1;\n            }\n            continue;\n        case '10':\n            var t = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n4 1 5", "3"], ["13 17\n29 7 5 7 9 51 7 13 8 55 42 9 81", "6"], ["10 400000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000", "25"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1]; n = n[0];\n  var a = s[1].split(\" \").map(a=>+a);\n  var ans = 0;\n  var b = {};\n  var t = 0;\n  for(var i = 0; i < n; i++){\n    t = (t + a[i]) % m;\n    if(b[t])b[t]++; else b[t] = 1;\n  }\n  for(i in b){\n    i = +i;\n    if(i === 0)ans += b[i] * (b[i]+1) / 2;\n    else if(b[i] > 1)ans += b[i] * (b[i]-1) / 2;\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03426_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var xjJOfU = {\n        'sOeOC': '10|2|12|13|7|3|9|0|8|1|6|4|11|5',\n        'usPps': function (x, y) {\n            return x < y;\n        },\n        'wyqwH': function (x, y) {\n            return x + y;\n        },\n        'rvmSv': function (x, y) {\n            return x <= y;\n        },\n        'XtpSc': function (x, y) {\n            return x - y;\n        },\n        'oRxsn': function (x, y) {\n            return x + y;\n        },\n        'YAajS': function (x, y) {\n            return x * y;\n        },\n        'LoDVW': function (x, y) {\n            return x + y;\n        },\n        'zNgWK': function (x, y) {\n            return x - y;\n        }\n    };\n    var dvbuCV = xjJOfU['sOeOC']['split']('|');\n    var QVYPqf = 0x0;\n    while (!![]) {\n        switch (dvbuCV[QVYPqf++]) {\n        case '0':\n            for (var i = 0x0; i < H; i++) {\n                A = input[i + 0x1]['split']('\\x20')['map'](a => parseInt(a));\n                for (var j = 0x0; xjJOfU['usPps'](j, W); j++) {\n                    x[A[j]][0x0] = i;\n                    x[A[j]][0x1] = j;\n                }\n            }\n            continue;\n        case '1':\n            for (i = xjJOfU['wyqwH'](D, 0x1); xjJOfU['rvmSv'](i, H * W); i++) {\n                y[i] = xjJOfU['wyqwH'](xjJOfU['wyqwH'](y[i - D], Math['abs'](xjJOfU['XtpSc'](x[xjJOfU['XtpSc'](i, D)][0x0], x[i][0x0]))), Math['abs'](x[xjJOfU['XtpSc'](i, D)][0x1] - x[i][0x1]));\n            }\n            continue;\n        case '2':\n            var H = input[0x0]['split']('\\x20')['map'](a => parseInt(a));\n            continue;\n        case '3':\n            var A;\n            continue;\n        case '4':\n            var ans = new Array(Q)['fill'](0x0);\n            continue;\n        case '5':\n            console['log'](ans['join']('\\x0a'));\n            continue;\n        case '6':\n            var Q = parseInt(input[xjJOfU['oRxsn'](H, 0x1)]);\n            continue;\n        case '7':\n            H = H[0x0];\n            continue;\n        case '8':\n            var y = new Array(xjJOfU['YAajS'](H, W) + 0x1)['fill'](0x0);\n            continue;\n        case '9':\n            var x = new Array(xjJOfU['LoDVW'](xjJOfU['YAajS'](H, W), 0x1))['fill'](0x0)['map'](a => new Array(0x2));\n            continue;\n        case '10':\n            input = input['split']('\\x0a');\n            continue;\n        case '11':\n            for (i = 0x0; xjJOfU['usPps'](i, Q); i++) {\n                var L = input[xjJOfU['LoDVW'](H + 0x2, i)]['split']('\\x20')['map'](a => parseInt(a));\n                var R = L[0x1];\n                L = L[0x0];\n                ans[i] = xjJOfU['zNgWK'](y[R], y[L]);\n            }\n            continue;\n        case '12':\n            var W = H[0x1];\n            continue;\n        case '13':\n            var D = H[0x2];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8", "5"], ["4 2 3\n3 7\n1 4\n5 2\n6 8\n2\n2 2\n2 2", "0\n0"], ["5 5 4\n13 25 7 15 17\n16 22 20 2 9\n14 11 12 1 19\n10 6 23 8 18\n3 21 5 24 4\n3\n13 13\n2 10\n13 13", "0\n5\n0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar H = input[0].split(\" \").map(a => parseInt(a));\n\tvar W = H[1];\n\tvar D = H[2];\n\tH = H[0];\n\tvar A;\n\tvar x = new Array(H*W+1).fill(0).map(a => new Array(2));\n\tfor(var i = 0; i < H; i++){\n\t\tA = input[i+1].split(\" \").map(a => parseInt(a));\n\t\tfor(var j = 0; j < W; j++){\n\t\t\tx[A[j]][0] = i;\n\t\t\tx[A[j]][1] = j;\n\t\t}\n\t}\n\tvar y = new Array(H*W+1).fill(0);\n\tfor(i = D+1; i <= H*W; i++){\n\t\ty[i] = y [i-D] + Math.abs(x[i-D][0] - x[i][0]) + Math.abs(x[i-D][1] - x[i][1]);\n\t}\n\t\n\tvar Q = parseInt(input[H+1]);\n\tvar ans = new Array(Q).fill(0);\n\tfor(i = 0; i < Q; i++){\n\t\tvar L = input[H+2+i].split(\" \").map(a => parseInt(a));\n\t\tvar R = L[1];\n\t\tL = L[0];\n\t\tans[i] = y[R] - y[L];\n\t}\n\t\n\tconsole.log(ans.join(\"\\n\"));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03450_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var btALQH = {\n        'sdFpK': function (callee, param1) {\n            return callee(param1);\n        },\n        'zBKdi': function (x, y) {\n            return x <= y;\n        },\n        'VSuog': function (callee, param1) {\n            return callee(param1);\n        },\n        'sZOhL': function (callee, param1) {\n            return callee(param1);\n        },\n        'JiuSq': function (x, y) {\n            return x - y;\n        },\n        'cgosF': function (x, y) {\n            return x + y;\n        },\n        'FCOGx': function (x, y) {\n            return x - y;\n        },\n        'RRWGV': function (x, y) {\n            return x !== y;\n        },\n        'ApeGV': 'Yes'\n    };\n    var line = input['split']('\\x0a');\n    var tmp = line[0x0]['split']('\\x20');\n    var N = Number(tmp[0x0]);\n    var M = btALQH['sdFpK'](Number, tmp[0x1]);\n    var L = [];\n    var R = [];\n    var D = [];\n    for (var i = 0x1; btALQH['zBKdi'](i, M); i++) {\n        var tmp = line[i]['split']('\\x20');\n        L['push'](btALQH['VSuog'](Number, tmp[0x0]));\n        R['push'](btALQH['sZOhL'](Number, tmp[0x1]));\n        D['push'](btALQH['sZOhL'](Number, tmp[0x2]));\n    }\n    var pos = [];\n    var ans;\n    loopj:\n        for (var j = 0x0; j < M; j++) {\n            if (j === 0x0)\n                pos[btALQH['JiuSq'](L[j], 0x1)] = 0x1;\n            var rightpos = btALQH['cgosF'](pos[btALQH['JiuSq'](L[j], 0x1)], D[j]);\n            if (!pos[btALQH['FCOGx'](R[j], 0x1)]) {\n                pos[btALQH['JiuSq'](R[j], 0x1)] = rightpos;\n            } else {\n                if (btALQH['RRWGV'](pos[btALQH['JiuSq'](R[j], 0x1)], rightpos)) {\n                    ans = 'No';\n                    break loopj;\n                }\n            }\n        }\n    if (!ans)\n        ans = btALQH['ApeGV'];\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n1 2 1\n2 3 1\n1 3 2", "Yes"], ["3 3\n1 2 1\n2 3 1\n1 3 5", "No"], ["4 3\n2 1 1\n2 3 5\n3 4 2", "Yes"], ["10 3\n8 7 100\n7 9 100\n9 8 100", "No"], ["100 0", "Yes"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar line = input.split(\"\\n\");\n\tvar tmp = line[0].split(\" \");\n\tvar N = Number(tmp[0]);\n\tvar M = Number(tmp[1]);\n\tvar L = [];\n\tvar R = [];\n\tvar D = [];\n\tfor(var i = 1; i <= M; i++){\n\t\tvar tmp = line[i].split(\" \");\n\t\tL.push(Number(tmp[0]));\n\t\tR.push(Number(tmp[1]));\n\t\tD.push(Number(tmp[2]));\n\t}\n\tvar pos = [];\n\tvar ans;\n\tloopj : for(var j = 0; j < M; j++){\n\t\tif(j === 0) pos[L[j]-1] = 1;\n\t\tvar rightpos = pos[L[j]-1] + D[j];\n\t\tif(!pos[R[j]-1]){\n\t\t\tpos[R[j]-1] = rightpos;\n\t\t} else{\n\t\t\tif(pos[R[j]-1] !== rightpos){\n\t\t\t\tans = 'No';\n\t\t\t\tbreak loopj;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(!ans) ans = 'Yes';\n\n\tconsole.log(ans);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03497_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nN = l[0x0];\nK = l[0x1];\nA = inp['shift']()['split']('\\x20');\no = {};\na = [];\nfor (i = 0x0; i < N; i++) {\n    a[A[i]] = (a[A[i]] || 0x0) + 0x1;\n    o[A[i]] = 0x1;\n}\nkeys = Object['keys'](o);\nc = keys['length'] - K;\nif (c > 0x0) {\n    a['sort']();\n    cnt = 0x0;\n    for (k of a) {\n        cnt += k;\n        c--;\n        if (c === 0x0) {\n            break;\n        }\n    }\n    console['log'](cnt);\n} else {\n    console['log'](0x0);\n}", "test_cases": [["5 2\n1 1 2 2 5", "1"], ["4 4\n1 1 2 2", "0"], ["10 3\n5 1 3 2 4 1 1 2 3 4", "3"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nN = l[0]\nK = l[1]\nA = inp.shift().split(' ')\no = {}\na = []\nfor (i=0; i<N; i++) {\n    a[A[i]] = (a[A[i]] || 0) + 1\n    o[A[i]] = 1\n}\nkeys = Object.keys(o)\nc = keys.length - K\nif (c > 0) {\n    a.sort()\n    cnt = 0\n    for (k of a) {\n        cnt += k\n        c--\n        if (c===0) {\n            break;\n        }\n    }\n    console.log(cnt)    \n} else {\n    console.log(0)\n}\n", "language": "JavaScript"}
{"filename": "p03577_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar g_input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    g_input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    Main(g_input['split'](/\\r?\\n/));\n});\nfunction Main(input) {\n    var WMeDDI = {\n        'LWwFf': function (x, y) {\n            return x - y;\n        },\n        'jOBug': 'FESTIVAL'\n    };\n    console['log'](input[0x0]['slice'](0x0, WMeDDI['LWwFf'](input[0x0]['length'], WMeDDI['jOBug']['length'])));\n    return 0x0;\n}", "test_cases": [["CODEFESTIVAL", "CODE"], ["CODEFESTIVALFESTIVAL", "CODEFESTIVAL"], ["YAKINIKUFESTIVAL", "YAKINIKU"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar g_input = '';\nprocess.stdin.on('data', function(chunk) {\n    g_input += chunk;\n});\n\nprocess.stdin.on('end', function() {\n    Main(g_input.split(/\\r?\\n/));\n});\n\nfunction Main(input) {\n\n    console.log(input[0].slice(0, input[0].length - 'FESTIVAL'.length));\n\n    return 0;\n}\n", "language": "JavaScript"}
{"filename": "p03599_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\n(input => {\n    const VoztEl = {\n        'mOcHt': function (x, y) {\n            return x < y;\n        },\n        'RPlQg': function (x, y) {\n            return x + y;\n        },\n        'cGoAA': function (x, y) {\n            return x * y;\n        },\n        'gKlPr': function (x, y) {\n            return x * y;\n        },\n        'IksgW': function (x, y) {\n            return x > y;\n        },\n        'mqBLM': function (x, y) {\n            return x / y;\n        },\n        'EQCEA': function (x, y) {\n            return x < y;\n        },\n        'JyhIS': function (x, y) {\n            return x + y;\n        },\n        'agqQI': function (x, y) {\n            return x > y;\n        },\n        'RuOWV': function (x, y) {\n            return x / y;\n        },\n        'IlMGF': function (x, y) {\n            return x - y;\n        },\n        'aXcEE': function (x, y) {\n            return x - y;\n        }\n    };\n    const [A, B, C, D, E, F] = input['trim']()['split']('\\x20')['map'](Number);\n    let W = {};\n    let S = {};\n    for (let i = 0x1; VoztEl['mOcHt'](i, F); i++) {\n        for (let j = 0x0; j < F; j++) {\n            const s = VoztEl['RPlQg'](VoztEl['cGoAA'](VoztEl['cGoAA'](A, i), 0x64), VoztEl['cGoAA'](VoztEl['gKlPr'](j, B), 0x64));\n            if (VoztEl['IksgW'](s, F))\n                break;\n            W[s] = 0x1;\n        }\n    }\n    const p = VoztEl['mqBLM'](VoztEl['gKlPr'](F, E), 0x64);\n    for (let i = 0x0; VoztEl['EQCEA'](i, F); i++) {\n        for (let j = 0x0; VoztEl['mOcHt'](j, F); j++) {\n            const s = VoztEl['JyhIS'](VoztEl['gKlPr'](C, i), D * j);\n            if (VoztEl['agqQI'](s, p))\n                break;\n            S[s] = 0x1;\n        }\n    }\n    let ans = [\n        A * 0x64,\n        0x0\n    ];\n    let max = 0x0;\n    let r = VoztEl['RuOWV'](E, 0x64);\n    for (let i in W) {\n        for (let j in S) {\n            const t = VoztEl['RPlQg'](VoztEl['IlMGF'](i, 0x0), VoztEl['aXcEE'](j, 0x0));\n            const sw = VoztEl['mqBLM'](j, i);\n            if (VoztEl['IksgW'](sw, r) || t > F)\n                continue;\n            if (sw > max) {\n                max = sw;\n                ans = [\n                    t,\n                    j\n                ];\n            }\n        }\n    }\n    console['log'](ans[0x0], ans[0x1]);\n})(input);", "test_cases": [["1 2 10 20 15 200", "110 10"], ["1 2 1 2 100 1000", "200 100"], ["17 19 22 26 55 2802", "2634 934"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\n\n;(input => {\n  \n  const [A, B, C, D, E, F] = input.trim().split(' ').map(Number)\n\n  let W = {}\n  let S = {}\n  \n  for (let i = 1; i < F; i ++) {\n    for (let j = 0; j < F; j++) {\n      const s = A * i * 100 + j * B * 100\n      if (s > F) break\n\t  W[s] = 1\n    }\n  }\n  \n  const p = F * E / 100\n  for (let i = 0; i < F; i ++) {\n    for (let j = 0; j < F; j++) {\n      const s = C * i + D * j\n      if (s > p) break\n\t  S[s] = 1\n    }\n  }\n\n  let ans = [A * 100, 0]\n  let max = 0\n  let r = E / 100\n  for (let i in W) {\n    for (let j in S) {\n      const t = (i - 0) + (j - 0)\n      const sw = j / i\n      if (sw > r || t > F) continue\n      if (sw > max) {\n        max = sw\n\t    ans = [t, j]\n      }\n    }\n  }\n  \n  console.log(ans[0], ans[1])\n  \n    \n})(input)\n", "language": "JavaScript"}
{"filename": "p03612_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const RfjpIW = {\n        'UvVbD': function (callee, param1) {\n            return callee(param1);\n        },\n        'rOoPl': function (x, y) {\n            return x === y;\n        },\n        'HtvMg': function (x, y) {\n            return x + y;\n        },\n        'sfgRs': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = RfjpIW['UvVbD'](parseInt, arg[0x0]);\n    const P = arg[0x1]['split']('\\x20')['map'](n => parseInt(n));\n    let answer = 0x0;\n    for (let i in P) {\n        if (RfjpIW['rOoPl'](RfjpIW['HtvMg'](RfjpIW['UvVbD'](parseInt, i), 0x1), P[i])) {\n            let temp = P[i];\n            P[i] = P[RfjpIW['HtvMg'](RfjpIW['UvVbD'](parseInt, i), 0x1)];\n            P[RfjpIW['sfgRs'](RfjpIW['UvVbD'](parseInt, i), 0x1)] = temp;\n            answer++;\n        }\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 4 3 5 2", "2"], ["2\n1 2", "1"], ["2\n2 1", "0"], ["9\n1 2 4 9 5 8 7 3 6", "3"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0]);\n    const P = arg[1].split(\" \").map(n=>parseInt(n));\n    \n    let answer = 0;\n    \n    for(let i in P) {\n        if(parseInt(i) + 1 === P[i]) {\n            let temp = P[i];\n            P[i] = P[parseInt(i) + 1];\n            P[parseInt(i) + 1] = temp;\n            answer++;\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03681_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const BYimUF = {\n        'PCvor': function (x, y) {\n            return x + y;\n        },\n        'PWxkl': function (x, y) {\n            return x >= y;\n        },\n        'yHcbe': function (x, y) {\n            return x - y;\n        },\n        'YqybW': function (x, y) {\n            return x <= y;\n        },\n        'pTWRn': function (x, y) {\n            return x % y;\n        },\n        'hYDmB': function (x, y) {\n            return x <= y;\n        },\n        'OumhQ': function (x, y) {\n            return x == y;\n        },\n        'qZKFk': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x20')['map'](v => ~~v);\n    const n = input[0x0];\n    const m = input[0x1];\n    const limit = BYimUF['PCvor'](0x3b9aca00, 0x7);\n    if (BYimUF['PWxkl'](Math['abs'](BYimUF['yHcbe'](n, m)), 0x2)) {\n        console['log'](0x0);\n        return;\n    }\n    let nn = 0x1;\n    for (let i = 0x2; BYimUF['YqybW'](i, n); i++) {\n        nn *= i;\n        if (nn >= limit) {\n            nn = BYimUF['pTWRn'](nn, limit);\n        }\n    }\n    for (let i = 0x2; BYimUF['hYDmB'](i, m); i++) {\n        nn *= i;\n        if (nn >= limit) {\n            nn = nn % limit;\n        }\n    }\n    let tmp = BYimUF['pTWRn'](nn, limit);\n    if (BYimUF['OumhQ'](n, m)) {\n        tmp = BYimUF['qZKFk'](0x2, tmp);\n    }\n    const ans = tmp % limit;\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 2", "8"], ["3 2", "12"], ["1 8", "0"], ["100000 100000", "530123477"]], "original": "'use strict'\n\nfunction main(input) {\n  input = input.split(' ').map(v => ~~v)\n  const n = input[0]\n  const m = input[1]\n\n  const limit = 1e9 + 7 //(Math.pow(10, 9) + 7)\n\n  //交互に並べられない\n  if (Math.abs(n - m) >= 2) {\n    console.log(0)\n    return\n  }\n\n  let nn = 1\n  for (let i = 2; i <= n; i++) {\n    nn *= i\n    if (nn >= limit) {\n      nn = nn % limit\n    }\n  }\n  // let mm = 1\n  for (let i = 2; i <= m; i++) {\n    nn *= i\n    if (nn >= limit) {\n      nn = nn % limit\n    }\n  }\n  // console.log(nn,mm)\n\n  let tmp = nn % limit\n  // console.log(tmp)\n  if (n == m) {\n    tmp = 2 * tmp\n  }\n  const ans = tmp % limit\n\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p03732_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const gcxOyz = {\n        'oPPsg': function (callee, param1) {\n            return callee(param1);\n        },\n        'kUDuW': function (callee, param1) {\n            return callee(param1);\n        },\n        'iYteW': function (callee, param1) {\n            return callee(param1);\n        },\n        'aPIWj': function (x, y) {\n            return x + y;\n        },\n        'fiaQk': function (x, y) {\n            return x < y;\n        },\n        'UKnNz': function (x, y) {\n            return x - y;\n        },\n        'Jdwvi': function (x, y) {\n            return x + y;\n        },\n        'TCQVQ': function (x, y) {\n            return x > y;\n        },\n        'qBTRS': function (x, y) {\n            return x - y;\n        },\n        'NXAJL': function (x, y) {\n            return x - y;\n        },\n        'Pugbw': function (x, y) {\n            return x > y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = gcxOyz['oPPsg'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const W = gcxOyz['kUDuW'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    const wv = arg['slice'](0x1, N + 0x1)['map'](n => n['split']('\\x20')['map'](l => parseInt(l)));\n    let dp = [...gcxOyz['iYteW'](Array, gcxOyz['aPIWj'](N, 0x1))]['map'](n => [...Array(W + 0x1)]['fill'](0x0));\n    let answer = 0x0;\n    for (let i = 0x1; gcxOyz['fiaQk'](i, gcxOyz['aPIWj'](N, 0x1)); i++) {\n        const w = wv[gcxOyz['UKnNz'](i, 0x1)][0x0];\n        const v = wv[gcxOyz['UKnNz'](i, 0x1)][0x1];\n        for (let j = 0x0; j < gcxOyz['Jdwvi'](W, 0x1); j++) {\n            if (gcxOyz['TCQVQ'](w, j)) {\n                dp[i][j] = dp[gcxOyz['UKnNz'](i, 0x1)][j];\n            } else {\n                dp[i][j] = Math['max'](dp[gcxOyz['qBTRS'](i, 0x1)][j], gcxOyz['aPIWj'](v, dp[i - 0x1][gcxOyz['NXAJL'](j, w)]));\n            }\n            if (gcxOyz['Pugbw'](dp[i][j], answer)) {\n                answer = dp[i][j];\n            }\n        }\n    }\n    console['log'](answer);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 6\n2 1\n3 4\n4 10\n3 4", "11"], ["4 6\n2 1\n3 7\n4 10\n3 6", "13"], ["4 10\n1 100\n1 100\n1 100\n1 100", "400"], ["4 1\n10 100\n10 100\n10 100\n10 100", "0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const W = parseInt(arg[0].split(\" \")[1]);\n    \n    const wv = arg.slice(1, N + 1).map(n=>n.split(\" \").map(l=>parseInt(l)));\n    \n    let dp = [...Array(N+1)].map(n=>[...Array(W+1)].fill(0));\n    let answer = 0;\n    \n    for(let i=1; i<N+1; i++) {\n        const w = wv[i-1][0];\n        const v = wv[i-1][1];\n        \n        for(let j=0; j<W+1; j++) {\n            if(w > j) {\n                // 単体で重さオーバーなら前回のを引き継ぐ\n                dp[i][j] = dp[i-1][j];\n            } else {\n                dp[i][j] = Math.max(dp[i-1][j], v + dp[i-1][j - w]);\n            }\n            \n            if(dp[i][j] > answer) {\n                answer = dp[i][j];\n            }\n        }\n    }\n    \n    console.log(answer);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03779_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var WoUmrz = {\n        'cxmDv': '3|0|2|1|4',\n        'JpXDT': function (x, y) {\n            return x - y;\n        },\n        'XfazX': function (x, y) {\n            return x - y;\n        }\n    };\n    var HzFrkv = WoUmrz['cxmDv']['split']('|');\n    var pBDHKd = 0x0;\n    while (!![]) {\n        switch (HzFrkv[pBDHKd++]) {\n        case '0':\n            var cnt = 0x1;\n            continue;\n        case '1':\n            for (cnt = 0x1; ans < n; cnt++) {\n                ans += cnt;\n            }\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            var n = WoUmrz['JpXDT'](input[0x0], 0x0);\n            continue;\n        case '4':\n            console['log'](WoUmrz['XfazX'](cnt, 0x1));\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["6", "3"], ["2", "2"], ["11", "5"]], "original": "function main(input) {\n    var n = input[0]-0;\n    var cnt = 1;\n    var ans = 0;\n    for(cnt=1;ans<n;cnt++){\n        ans += cnt;\n    }\n    console.log(cnt-1);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p03957_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var Cuwlwf = {\n        'xWrgu': '4|0|1|3|2|5',\n        'OZURX': function (x, y) {\n            return x < y;\n        },\n        'ukdHK': function (x, y) {\n            return x == y;\n        },\n        'EESpX': 'Yes'\n    };\n    var WraiNH = Cuwlwf['xWrgu']['split']('|');\n    var bDDCnJ = 0x0;\n    while (!![]) {\n        switch (WraiNH[bDDCnJ++]) {\n        case '0':\n            var string = input[0x0];\n            continue;\n        case '1':\n            var c, f, Cfound = 0x0;\n            continue;\n        case '2':\n            ;\n            continue;\n        case '3':\n            for (var i = 0x0; Cuwlwf['OZURX'](i, string['length']); i++) {\n                if (Cuwlwf['ukdHK'](string[i], 'C') && !Cfound) {\n                    c = i;\n                    Cfound++;\n                }\n                ;\n                if (Cfound && string[i] == 'F') {\n                    f = i;\n                    return console['log'](Cuwlwf['EESpX']);\n                }\n            }\n            continue;\n        case '4':\n            var input = input['split']('\\x0a');\n            continue;\n        case '5':\n            return console['log']('No');\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["CODEFESTIVAL", "Yes"], ["FESTIVALCODE", "No"], ["CF", "Yes"], ["FCF", "Yes"]], "original": "function Main(input) {\n  var input = input.split(\"\\n\");\n  var string = input[0];\n  var c,f,Cfound = 0;\n  for(var i = 0;i < string.length;i++){\n    if(string[i] == \"C\" && !Cfound){\n      c = i;\n      Cfound++;\n    };\n    if(Cfound && string[i] == \"F\"){\n      f = i;\n      return console.log(\"Yes\");\n    }\n  };\n  return console.log(\"No\");\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04034_1", "type": "JavaScript", "obfuscated": "input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlines = input['split']('\\x0a');\nline = lines['shift']()['split']('\\x20');\nN = line[0x0] * 0x1;\nM = line[0x1] * 0x1;\nb = [];\nr = [];\nfor (i = 0x1; i <= N; i++) {\n    b[i] = 0x1;\n    r[i] = 0x0;\n}\nr[0x1] = 0x1;\nfor (i = 0x0; i < M; i++) {\n    var FpubcK = '5|3|6|1|2|0|4'['split']('|');\n    var nzRtiM = 0x0;\n    while (!![]) {\n        switch (FpubcK[nzRtiM++]) {\n        case '0':\n            b[x] -= 0x1;\n            continue;\n        case '1':\n            if (r[x]) {\n                r[y] += 0x1;\n            }\n            continue;\n        case '2':\n            if (r[x] && b[x] == 0x1) {\n                r[x] = 0x0;\n            }\n            continue;\n        case '3':\n            x = l[0x0] * 0x1;\n            continue;\n        case '4':\n            b[y] += 0x1;\n            continue;\n        case '5':\n            l = lines[i]['split']('\\x20');\n            continue;\n        case '6':\n            y = l[0x1] * 0x1;\n            continue;\n        }\n        break;\n    }\n}\ncnt = 0x0;\nfor (i = 0x1; i <= N; i++) {\n    if (r[i] > 0x0) {\n        cnt++;\n    }\n}\nconsole['log'](cnt);", "test_cases": [["3 2\n1 2\n2 3", "2"], ["3 3\n1 2\n2 3\n2 3", "1"], ["4 4\n1 2\n2 3\n4 1\n3 4", "3"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nline = lines.shift().split(' ')\nN = line[0] * 1\nM = line[1] * 1\nb = []\nr = []\nfor (i=1; i<=N; i++) {\n    b[i] = 1\n    r[i] = 0\n}\nr[1] = 1\nfor (i=0; i<M; i++) {\n  l = lines[i].split(' ')\n  x = l[0] * 1\n  y = l[1] * 1\n  if (r[x]) {\n      r[y] += 1\n  }\n  if (r[x] && b[x] == 1) {\n      r[x] = 0\n  }\n  b[x] -= 1\n  b[y] += 1\n}\ncnt = 0\nfor (i=1; i<=N; i++) {\n    if (r[i] > 0) {\n        cnt++\n    }\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p00011_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['split']('\\x0a');\nvar w = +lines['shift']();\nvar n = +lines['shift']();\nvar list = [];\nvar line = null;\nwhile (line = lines['shift']()) {\n    var args = line['split'](',');\n    list['push'](args);\n}\nvar answers = [];\nfor (var i = 0x1; i <= w; i++) {\n    var k = i;\n    list['forEach'](function (args) {\n        var ShEMsv = {\n            'EBHXp': function (x, y) {\n                return x == y;\n            }\n        };\n        if (ShEMsv['EBHXp'](args[0x0], k)) {\n            k = args[0x1];\n        } else if (ShEMsv['EBHXp'](args[0x1], k)) {\n            k = args[0x0];\n        }\n    });\n    answers[k] = i;\n}\nanswers['shift']();\nconsole['log'](answers['join']('\\x0a'));", "test_cases": [["5\n4\n2,4\n3,5\n1,2\n3,4", "4\n1\n2\n5\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nvar w = +lines.shift();\nvar n = +lines.shift();\n\nvar list = [];\nvar line = null;\nwhile (line = lines.shift()) {\n    var args = line.split(',');\n    list.push(args);\n}\n\nvar answers = [];\nfor (var i = 1; i <= w; i++) {\n    var k = i;\n    list.forEach(function(args) {\n        if (args[0] == k) {\n            k = args[1];\n        } else if (args[1] == k) {\n            k = args[0];\n        }\n    });\n    answers[k] = i;\n}\nanswers.shift();\nconsole.log(answers.join('\\n'));", "language": "JavaScript"}
{"filename": "p00025_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['split']('\\x0a');\nvar imagine;\nwhile (imagine = lines['shift']()) {\n    var JvLWAX = '5|1|2|7|0|4|6|3|8'['split']('|');\n    var xPAjQB = 0x0;\n    while (!![]) {\n        switch (JvLWAX[xPAjQB++]) {\n        case '0':\n            for (var i = 0x0; i < 0x4; i++) {\n                if (a[i] == b[i]) {\n                    hit++;\n                }\n            }\n            continue;\n        case '1':\n            var a = imagine['split']('\\x20')['map'](function (n) {\n                return +n;\n            });\n            continue;\n        case '2':\n            var b = guess['split']('\\x20')['map'](function (n) {\n                return +n;\n            });\n            continue;\n        case '3':\n            blow -= hit;\n            continue;\n        case '4':\n            var blow = 0x0;\n            continue;\n        case '5':\n            var guess = lines['shift']();\n            continue;\n        case '6':\n            for (var i = 0x0; i < 0x4; i++) {\n                if (a['indexOf'](b[i]) >= 0x0) {\n                    blow++;\n                }\n            }\n            continue;\n        case '7':\n            var hit = 0x0;\n            continue;\n        case '8':\n            console['log'](hit + '\\x20' + blow);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["9 1 8 2\n4 1 5 9\n4 6 8 2\n4 6 3 2", "1 1\n3 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n\nvar imagine;\nwhile (imagine = lines.shift()) {\n\tvar guess = lines.shift();\n\n\tvar a = imagine.split(' ').map(function(n){return +n;});\n\tvar b = guess.split(' ').map(function(n){return +n;});\n\n\tvar hit = 0;\n\tfor (var i = 0; i < 4; i++) {\n\t\tif (a[i] == b[i]) {\n\t\t\thit++;\n\t\t}\n\t}\n\n\tvar blow = 0;\n\tfor (var i = 0; i < 4; i++) {\n\t\tif (a.indexOf(b[i]) >= 0) {\n\t\t\tblow++;\n\t\t}\n\t}\n\tblow -= hit;\n\n\tconsole.log(hit + ' ' + blow);\n}", "language": "JavaScript"}
{"filename": "p00048_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\s/)['map'](function (i) {\n    var DUAoMi = {\n        'qPAox': function (x, y) {\n            return x <= y;\n        },\n        'ctYbq': 'light\\x20fly',\n        'HPLPG': 'fly',\n        'mklpT': 'bantam',\n        'huGWd': function (x, y) {\n            return x <= y;\n        },\n        'MkVdi': 'feather',\n        'TIMAG': 'light',\n        'hShsy': function (x, y) {\n            return x <= y;\n        },\n        'mAGRH': 'light\\x20welter',\n        'sgyRi': 'welter',\n        'EuFbn': 'light\\x20middle',\n        'mswsE': function (x, y) {\n            return x <= y;\n        },\n        'yBlgn': 'middle',\n        'gskan': function (x, y) {\n            return x <= y;\n        },\n        'simuv': 'heavy'\n    };\n    (j = +i) ? console['log'](DUAoMi['qPAox'](j, 0x30) ? DUAoMi['ctYbq'] : DUAoMi['qPAox'](j, 0x33) ? DUAoMi['HPLPG'] : DUAoMi['qPAox'](j, 0x36) ? DUAoMi['mklpT'] : DUAoMi['huGWd'](j, 0x39) ? DUAoMi['MkVdi'] : DUAoMi['qPAox'](j, 0x3c) ? DUAoMi['TIMAG'] : DUAoMi['hShsy'](j, 0x40) ? DUAoMi['mAGRH'] : DUAoMi['qPAox'](j, 0x45) ? DUAoMi['sgyRi'] : DUAoMi['hShsy'](j, 0x4b) ? DUAoMi['EuFbn'] : DUAoMi['mswsE'](j, 0x51) ? DUAoMi['yBlgn'] : DUAoMi['gskan'](j, 0x5b) ? 'light\\x20heavy' : DUAoMi['simuv']) : 0x0;\n});", "test_cases": [["60.2\n70.2\n48.0\n80.2", "light welter\nlight middle\nlight fly\nmiddle"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s/).map(function(i){(j=+i)?console.log(j<=48?'light fly':j<=51?'fly':j<=54?'bantam':j<=57?'feather':j<=60?'light':j<=64?'light welter':j<=69?'welter':j<=75?'light middle':j<=81?'middle':j<=91?'light heavy':'heavy'):0})", "language": "JavaScript"}
{"filename": "p00104_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    main(chunk['trim']());\n});\nfunction main(chunk) {\n    var QErfXQ = {\n        'PGBRg': function (x, y) {\n            return x < y;\n        },\n        'HtSCs': function (x, y) {\n            return x - y;\n        },\n        'YogMh': function (callee, param1) {\n            return callee(param1);\n        },\n        'UTKUJ': function (x, y) {\n            return x < y;\n        },\n        'MrkJL': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    var lines = chunk['split']('\\x0a');\n    for (var n = 0x0; QErfXQ['PGBRg'](n, QErfXQ['HtSCs'](lines['length'], 0x1));) {\n        var H = Number(lines[n]['split']('\\x20')[0x0]);\n        var W = QErfXQ['YogMh'](Number, lines[n]['split']('\\x20')[0x1]);\n        var map = [];\n        n++;\n        for (var i = 0x0; QErfXQ['UTKUJ'](i, H); i++) {\n            map[i] = lines[n]['split']('');\n            n++;\n        }\n        console['log'](QErfXQ['MrkJL'](calc, map, 0x0, 0x0));\n    }\n}\nfunction calc(map, h, w) {\n    var XjWgGO = {\n        'kElPb': function (x, y) {\n            return x == y;\n        },\n        'EcoHi': function (x, y) {\n            return x + y;\n        },\n        'zsQpp': 'LOOP',\n        'xpNhY': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'xyaDH': function (x, y) {\n            return x + y;\n        },\n        'piCqx': function (x, y) {\n            return x - y;\n        },\n        'XPdpQ': function (x, y) {\n            return x + y;\n        }\n    };\n    if (XjWgGO['kElPb'](map[h][w], '.')) {\n        return XjWgGO['EcoHi'](w + '\\x20', h);\n    }\n    if (XjWgGO['kElPb'](map[h][w], '1')) {\n        return XjWgGO['zsQpp'];\n    }\n    switch (map[h][w]) {\n    case '>':\n        map[h][w] = '1';\n        return XjWgGO['xpNhY'](calc, map, h, XjWgGO['xyaDH'](w, 0x1));\n    case '<':\n        map[h][w] = '1';\n        return XjWgGO['xpNhY'](calc, map, h, XjWgGO['piCqx'](w, 0x1));\n    case 'v':\n        map[h][w] = '1';\n        return XjWgGO['xpNhY'](calc, map, XjWgGO['XPdpQ'](h, 0x1), w);\n    case '^':\n        map[h][w] = '1';\n        return XjWgGO['xpNhY'](calc, map, XjWgGO['piCqx'](h, 0x1), w);\n    }\n}", "test_cases": [["10 10\n>>>v..>>>v\n...v..^..v\n>>>>>>^..v\n.........v\n.v<<<<...v\n.v.v.^...v\n.v.v.^<<<<\n.v.v.....v\n.v...^...v\n.>>>>^....\n6 10\n>>>>>>>>>v\n.........v\n.........v\n>>>>v....v\n^...v....v\n^<<<<<<<<<\n0 0", "5 7\nLOOP"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n    main(chunk.trim());\n});\n\nfunction main(chunk){\n    var lines = chunk.split(\"\\n\");\n    for(var n=0;n<lines.length-1;){\n        var H = Number(lines[n].split(\" \")[0]);\n        var W = Number(lines[n].split(\" \")[1]);\n        var map = [];\n        n++;\n        for(var i=0;i<H;i++){\n            map[i] = lines[n].split(\"\");\n            n++;\n        }\n        console.log(calc(map,0,0));\n    }\n}\nfunction calc(map,h,w){\n    if(map[h][w] == \".\"){\n        return w + \" \"+ h;\n    }\n    if(map[h][w] == \"1\"){\n        return \"LOOP\";\n    }\n    switch(map[h][w]){\n    case '>':\n        map[h][w] = \"1\";\n        return calc(map,h,w+1);\n    case '<':\n        map[h][w] = \"1\";\n        return calc(map,h,w-1);\n    case 'v':\n        map[h][w] = \"1\";\n        return calc(map,h+1,w);\n    case '^':\n        map[h][w] = \"1\";\n        return calc(map,h-1,w);\n    }\n}", "language": "JavaScript"}
{"filename": "p00122_1", "type": "JavaScript", "obfuscated": "function bomb(x, y, z) {\n    var kYTGUK = {\n        'YQlxV': function (x, y) {\n            return x <= y;\n        },\n        'GpxzD': function (x, y) {\n            return x + y;\n        },\n        'JljXk': function (x, y) {\n            return x * y;\n        },\n        'FfHth': function (x, y) {\n            return x + y;\n        },\n        'UPHdR': function (x, y) {\n            return x * y;\n        },\n        'KHrBE': function (x, y) {\n            return x < y;\n        },\n        'DSvgI': function (x, y) {\n            return x + y;\n        },\n        'znIIF': function (x, y) {\n            return x >= y;\n        },\n        'uHedR': function (x, y) {\n            return x + y;\n        }\n    };\n    max = Math['max'](max, z);\n    if (max == n)\n        return;\n    var dx = [\n        -0x1,\n        0x0,\n        0x1,\n        -0x2,\n        0x2,\n        -0x2,\n        0x2,\n        -0x2,\n        0x2,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    var dy = [\n        -0x2,\n        -0x2,\n        -0x2,\n        -0x1,\n        -0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1,\n        0x2,\n        0x2,\n        0x2\n    ];\n    var Safe = {};\n    for (var i = -0x1; kYTGUK['YQlxV'](i, 0x1); i++) {\n        for (var j = -0x1; kYTGUK['YQlxV'](j, 0x1); j++) {\n            Safe[kYTGUK['GpxzD'](kYTGUK['GpxzD'](water[kYTGUK['JljXk'](z, 0x2)] + i, '\\x20'), water[kYTGUK['FfHth'](kYTGUK['UPHdR'](z, 0x2), 0x1)] + j)] = !![];\n        }\n    }\n    for (var i = 0x0; kYTGUK['KHrBE'](i, 0xc); i++) {\n        var xx = kYTGUK['DSvgI'](x, dx[i]);\n        var yy = kYTGUK['FfHth'](y, dy[i]);\n        if (kYTGUK['KHrBE'](xx, 0x0) || kYTGUK['KHrBE'](yy, 0x0) || kYTGUK['znIIF'](xx, 0xa) || kYTGUK['znIIF'](yy, 0xa))\n            continue;\n        if (Safe['hasOwnProperty'](kYTGUK['uHedR'](kYTGUK['DSvgI'](xx, '\\x20'), yy)))\n            bomb(xx, yy, z + 0x1);\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var xy = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (xy[0x0] == 0x0 && xy[0x1] == 0x0)\n        break;\n    var map = [\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        []\n    ];\n    var n = Arr['shift']() - 0x0;\n    var water = Arr['shift']()['split']('\\x20')['map'](Number);\n    var max = 0x0;\n    bomb(xy[0x0], xy[0x1], 0x0);\n    console['log'](max == n ? 'OK' : 'NA');\n}", "test_cases": [["6 1\n10\n6 4 3 3 1 2 0 5 4 6 1 8 5 9 7 7 8 6 8 3\n6 1\n10\n6 4 3 3 1 2 0 5 4 6 1 8 5 9 7 7 8 6 9 0\n0 0", "OK\nNA"]], "original": "function bomb(x,y,z){\n   max=Math.max(max,z);\n   if(max==n)return;\n   var dx=[-1,0,1,-2,2,-2,2,-2,2,-1,0,1];\n   var dy=[-2,-2,-2,-1,-1,0,0,1,1,2,2,2];\n   var Safe={};\n   for(var i=-1;i<=1;i++){\n      for(var j=-1;j<=1;j++){\n         Safe[(water[z*2]+i)+\" \"+(water[z*2+1]+j)]=true;\n      }\n   }\n   for(var i=0;i<12;i++){\n      var xx=x+dx[i];\n      var yy=y+dy[i];\n      if(xx<0 || yy<0 || xx>=10 || yy>=10)continue;\n      if(Safe.hasOwnProperty(xx+\" \"+yy))bomb(xx,yy,z+1);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var xy=(Arr.shift()).split(\" \").map(Number);\n   if(xy[0]==0 && xy[1]==0)break;\n   var map=[[],[],[],[],[],[],[],[],[],[]];\n   var n=Arr.shift()-0;\n   var water=(Arr.shift()).split(\" \").map(Number);\n   var max=0;\n   bomb(xy[0],xy[1],0);\n   console.log((max==n)?\"OK\":\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00201_1", "type": "JavaScript", "obfuscated": "function bomb(name) {\n    var wToHGd = {\n        'AmhNA': function (x, y) {\n            return x == y;\n        }\n    };\n    var min = obj[name];\n    M['forEach'](function (v) {\n        if (wToHGd['AmhNA'](name, v[0x0])) {\n            var sum = 0x0;\n            v[0x1]['forEach'](function (value) {\n                sum += bomb(value);\n            });\n            min = Math['min'](min, sum);\n        }\n    });\n    return min;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var obj = {};\n    for (var i = 0x0; i < n; i++) {\n        var data = arr['shift']()['split']('\\x20');\n        obj[data[0x0]] = data[0x1] - 0x0;\n    }\n    var m = arr['shift']() - 0x0;\n    var M = [];\n    for (var i = 0x0; i < m; i++) {\n        var data = arr['shift']()['split']('\\x20');\n        var name = data['shift']();\n        data['shift']();\n        M['push']([\n            name,\n            data\n        ]);\n    }\n    var item = arr['shift']();\n    console['log'](bomb(item));\n}", "test_cases": [["8\nwood 3000\nstring 800\nrice 36\nwater 0\nracket 5000\nmicrophone 9800\nonigiri 140\nguitar 98000\n3\nracket 2 wood string\nonigiri 2 rice water\nguitar 3 racket microphone onigiri\nguitar\n1\ncomputer 300000\n0\ncomputer\n0", "13636\n300000"]], "original": "function bomb(name){\n   var min=obj[name];\n   M.forEach(function(v){\n      if(name==v[0]){\n         var sum=0;\n         v[1].forEach(function(value){\n            sum+=bomb(value);\n         });\n         min=Math.min(min,sum);\n      }\n   });\n   return min;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var obj={};\n   for(var i=0;i<n;i++){\n      var data=arr.shift().split(\" \");\n      obj[data[0]]=data[1]-0;\n   }\n   var m=arr.shift()-0;\n   var M=[];\n   for(var i=0;i<m;i++){\n      var data=arr.shift().split(\" \");\n      var name=data.shift();\n      data.shift();\n      M.push([name,data]);\n   }\n   var item=arr.shift();\n   console.log(bomb(item));\n}", "language": "JavaScript"}
{"filename": "p00380_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar b = a['slice']()['sort']((x, y) => x - y);\nvar q = arr['shift']() - 0x0;\nvar xy = arr['map'](v => v['split']('\\x20')['map'](Number)['map'](v => v - 0x1));\nxy['unshift']([\n    0x0,\n    0x0\n]);\nvar A = {};\nvar B = {};\nfor (var i = 0x0; i < a['length']; i++) {\n    if (a[i] != b[i]) {\n        A[i] = a[i];\n        B[i] = b[i];\n    }\n}\nvar BB = '';\nfor (var k in B)\n    BB += B[k];\nvar flag = ![];\nfor (var i = 0x0; i <= q; i++) {\n    [A[xy[i][0x0]], A[xy[i][0x1]]] = [\n        A[xy[i][0x1]],\n        A[xy[i][0x0]]\n    ];\n    var AA = '';\n    for (var k in A)\n        AA += A[k];\n    if (AA == BB) {\n        flag = !![];\n        break;\n    }\n}\nif (Object['keys'](A)['length'] == 0x0)\n    console['log'](0x0);\nelse if (flag)\n    console['log'](i);\nelse\n    console['log'](-0x1);", "test_cases": [["6\n9 7 5 6 3 1\n3\n1 6\n2 5\n3 4", "2"], ["4\n4 3 2 1\n2\n1 2\n3 4", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar b=a.slice().sort((x,y)=> x-y);\nvar q=arr.shift()-0;\nvar xy=arr.map(v=> v.split(\" \").map(Number).map(v=>v-1));\nxy.unshift([0,0]);\nvar A={};\nvar B={};\nfor(var i=0;i<a.length;i++){\n   if(a[i]!=b[i]){\n      A[i]=a[i];\n      B[i]=b[i];\n   }\n}\nvar BB=\"\";\nfor(var k in B)BB+=B[k];\nvar flag=false;\nfor(var i=0;i<=q;i++){\n   [A[xy[i][0]],A[xy[i][1]] ]= [A[xy[i][1]],A[xy[i][0]]];\n   var AA=\"\";\n   for(var k in A)AA+=A[k];\n   if(AA==BB){\n      flag=true;\n      break;\n   }\n}\nif(Object.keys(A).length==0)console.log(0);\nelse if(flag)console.log(i);\nelse console.log(-1);\n", "language": "JavaScript"}
{"filename": "p00669_1", "type": "JavaScript", "obfuscated": "function maxCards(arr, max) {\n    var TyRqbk = {\n        'fVTRj': function (x, y) {\n            return x < y;\n        },\n        'oiKzO': function (x, y) {\n            return x - y;\n        }\n    };\n    for (var i = 0x0; TyRqbk['fVTRj'](i, TyRqbk['oiKzO'](n, TyRqbk['oiKzO'](k, 0x1))); i++) {\n        var x = 0x1;\n        var j = 0x0;\n        while (j < k) {\n            x *= arr[i + j];\n            j++;\n        }\n        max = Math['max'](max, x);\n    }\n    return max;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar I = 0x0;\nwhile (!![]) {\n    var nk = Arr[I]['split']('\\x20')['map'](Number);\n    I++;\n    var n = nk[0x0];\n    var k = nk[0x1];\n    if (n == 0x0 && k == 0x0)\n        break;\n    var c = [];\n    for (var i = 0x0; i < n; i++) {\n        c['push'](Arr[I]);\n        I++;\n    }\n    var maxA = 0x1;\n    maxA = maxCards(c, maxA);\n    var maxB = 0x1;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = i + 0x1; j < n; j++) {\n            var wvjUFD = '1|2|3|0|5|4'['split']('|');\n            var ejPonC = 0x0;\n            while (!![]) {\n                switch (wvjUFD[ejPonC++]) {\n                case '0':\n                    maxB = maxCards(c, maxB);\n                    continue;\n                case '1':\n                    var memo = c[i];\n                    continue;\n                case '2':\n                    c[i] = c[j];\n                    continue;\n                case '3':\n                    c[j] = memo;\n                    continue;\n                case '4':\n                    c[i] = memo;\n                    continue;\n                case '5':\n                    c[j] = c[i];\n                    continue;\n                }\n                break;\n            }\n        }\n    }\n    console['log'](maxA > maxB ? 'NO\\x20GAME' : maxB - maxA);\n}", "test_cases": [["4 2\n2\n3\n7\n5\n0 0", "0"]], "original": "function maxCards(arr,max){\n   for(var i=0;i<n-(k-1);i++){\n      var x=1;\n      var j=0;\n      while(j<k){\n         x*=arr[i+j];\n         j++;\n      }\n      max=Math.max(max,x);\n   }\n   return max;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=0;\nwhile(true){\n   var nk=Arr[I].split(\" \").map(Number);\n   I++;\n   var n=nk[0];\n   var k=nk[1];\n   if(n==0 && k==0)break;\n   var c=[];\n   for(var i=0;i<n;i++){\n      c.push(Arr[I]);\n      I++;\n   }\n   var maxA=1;\n   maxA=maxCards(c,maxA);\n   var maxB=1;\n   for(var i=0;i<n;i++){\n      for(var j=i+1;j<n;j++){\n         var memo=c[i];\n         c[i]=c[j];\n         c[j]=memo;\n         maxB=maxCards(c,maxB);\n         c[j]=c[i];\n         c[i]=memo;\n      }\n   }\n   console.log((maxA>maxB)?\"NO GAME\":maxB-maxA);\n}", "language": "JavaScript"}
{"filename": "p02399_1", "type": "JavaScript", "obfuscated": "var x = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar array = x['split']('\\x20')['map'](Number);\nvar a = array[0x0];\nvar b = array[0x1];\nvar d = Math['floor'](a / b);\nvar r = a % b;\nvar f = (a / b)['toFixed'](0x5);\nconsole['log'](d + '\\x20' + r + '\\x20' + f);", "test_cases": [["3 2", "1 1 1.50000"]], "original": "var x = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar array = x.split(\" \").map(Number);\n\nvar a = array[0];\nvar b = array[1];\nvar d = Math.floor( a / b);\nvar r = a % b;\nvar f = ( a / b ).toFixed(5);\n\nconsole.log(d + \" \" + r + \" \" + f);\n\n", "language": "JavaScript"}
{"filename": "p02731_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    var xUPmWd = {\n        'xXHGr': function (x, y) {\n            return x * y;\n        },\n        'JlKdA': function (x, y) {\n            return x / y;\n        },\n        'uLSap': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var volume = xUPmWd['xXHGr'](xUPmWd['JlKdA'](xUPmWd['uLSap'](xUPmWd['JlKdA'](input, 0x3), input), 0x3), input) / 0x3;\n    console['log'](volume['toFixed'](0xc));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "1.000000000000"], ["999", "36926037.000000000000"]], "original": "\"use strict\";\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var volume=input/3*input/3*input/3;\n  console.log(volume.toFixed(12));\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03132_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const zFXuJf = {\n        'sDXhr': function (x, y) {\n            return x < y;\n        },\n        'YEplS': function (callee, param1) {\n            return callee(param1);\n        },\n        'aIyFm': function (x, y) {\n            return x + y;\n        },\n        'xlJSc': function (x, y) {\n            return x + y;\n        },\n        'vhhzv': function (x, y) {\n            return x <= y;\n        },\n        'JnyNG': function (x, y) {\n            return x - y;\n        },\n        'gExeu': function (x, y) {\n            return x - y;\n        },\n        'sFQbx': function (x, y) {\n            return x - y;\n        },\n        'NBHXR': function (x, y) {\n            return x - y;\n        }\n    };\n    const inputs = input['split']('\\x0a');\n    const L = Number(inputs[0x0]);\n    const A = [];\n    for (let i = 0x0; zFXuJf['sDXhr'](i, L); i++) {\n        A['push'](zFXuJf['YEplS'](Number, inputs[zFXuJf['aIyFm'](i, 0x1)]));\n    }\n    const dp = Array(zFXuJf['xlJSc'](L, 0x1))['fill']()['map'](() => Array(0x5)['fill']());\n    dp[0x0] = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (let i = 0x1; zFXuJf['vhhzv'](i, L); i++) {\n        let cur = A[i - 0x1];\n        let curEven = A[zFXuJf['JnyNG'](i, 0x1)] === 0x0 ? 0x2 : cur % 0x2;\n        let curOdd = (cur + 0x1) % 0x2;\n        dp[i][0x0] = zFXuJf['xlJSc'](dp[zFXuJf['JnyNG'](i, 0x1)][0x0], cur);\n        dp[i][0x1] = zFXuJf['xlJSc'](Math['min'](dp[zFXuJf['gExeu'](i, 0x1)][0x0], dp[zFXuJf['sFQbx'](i, 0x1)][0x1]), curEven);\n        dp[i][0x2] = zFXuJf['aIyFm'](Math['min'](dp[zFXuJf['gExeu'](i, 0x1)][0x0], dp[i - 0x1][0x1], dp[i - 0x1][0x2]), curOdd);\n        dp[i][0x3] = zFXuJf['xlJSc'](Math['min'](dp[zFXuJf['JnyNG'](i, 0x1)][0x2], dp[zFXuJf['NBHXR'](i, 0x1)][0x3]), curEven);\n        dp[i][0x4] = zFXuJf['aIyFm'](Math['min'](dp[zFXuJf['NBHXR'](i, 0x1)][0x2], dp[i - 0x1][0x3], dp[i - 0x1][0x4]), cur);\n    }\n    console['log'](Math['min'](...dp[L]));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1\n0\n2\n3", "1"], ["8\n2\n0\n0\n2\n1\n3\n4\n1", "3"], ["7\n314159265\n358979323\n846264338\n327950288\n419716939\n937510582\n0", "1"]], "original": "\"use strict\";\nfunction main(input) {\n  const inputs = input.split(\"\\n\");\n  const L = Number(inputs[0]);\n\n  const A = [];\n  for (let i = 0; i < L ; i++) {\n    A.push( Number(inputs[i+1]));\n  }\n  \n  const dp = Array(L + 1).fill().map(() => Array(5).fill());\n  dp[0] = [0, 0, 0, 0, 0];\n\n  for (let i = 1; i <= L; i++) {\n    let cur = A[i-1];\n    let curEven = A[i-1] === 0 ? 2 : cur % 2;\n    let curOdd = (cur + 1) % 2;\n\n    dp[i][0] = dp[i-1][0] + cur;\n    dp[i][1] = Math.min(dp[i-1][0], dp[i-1][1]) + curEven;\n    dp[i][2] = Math.min(dp[i-1][0], dp[i-1][1], dp[i-1][2]) + curOdd;\n    dp[i][3] = Math.min(dp[i-1][2], dp[i-1][3]) + curEven;\n    dp[i][4] = Math.min(dp[i-1][2], dp[i-1][3], dp[i-1][4]) + cur;\n  }\n\n  console.log(Math.min(...dp[L]));\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03213_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const IuVQaG = {\n        'OqRYk': function (x, y) {\n            return x - y;\n        },\n        'uQSfP': function (x, y) {\n            return x + y;\n        },\n        'tBxOj': function (x, y) {\n            return x == y;\n        },\n        'ziINA': function (callee, param1) {\n            return callee(param1);\n        },\n        'jeHfw': function (callee, param1) {\n            return callee(param1);\n        },\n        'upNFX': function (x, y) {\n            return x / y;\n        },\n        'rSyUk': function (x, y) {\n            return x * y;\n        },\n        'dYhBr': function (x, y) {\n            return x - y;\n        },\n        'LUqUl': function (x, y) {\n            return x * y;\n        },\n        'xUWnu': function (x, y) {\n            return x - y;\n        },\n        'mJVoX': function (x, y) {\n            return x - y;\n        }\n    };\n    const N = IuVQaG['OqRYk'](input['split']('\\x0a')[0x0], 0x0);\n    let e = new Array(IuVQaG['uQSfP'](N, 0x1))['fill'](0x0);\n    for (let i = 0x2; i <= N; i++) {\n        let cur = i;\n        for (let j = 0x2; j <= i; j++) {\n            while (IuVQaG['tBxOj'](cur % j, 0x0)) {\n                e[j] += 0x1;\n                cur /= j;\n            }\n        }\n    }\n    const num = m => e['reduce']((ac, x) => ac + (x >= m - 0x1 ? 0x1 : 0x0), 0x0);\n    let l75 = IuVQaG['ziINA'](num, 0x4b);\n    let l25 = num(0x19);\n    let l15 = IuVQaG['jeHfw'](num, 0xf);\n    let l5 = IuVQaG['ziINA'](num, 0x5);\n    let l3 = IuVQaG['ziINA'](num, 0x3);\n    let r5x5x3 = IuVQaG['upNFX'](IuVQaG['rSyUk'](IuVQaG['rSyUk'](l5, l5 - 0x1), IuVQaG['dYhBr'](l3, 0x2)), 0x2);\n    let r15x5 = IuVQaG['LUqUl'](l15, IuVQaG['xUWnu'](l5, 0x1));\n    let r25x3 = IuVQaG['rSyUk'](l25, IuVQaG['mJVoX'](l3, 0x1));\n    let r75 = l75;\n    console['log'](IuVQaG['uQSfP'](IuVQaG['uQSfP'](r75, r25x3), r15x5) + r5x5x3);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["9", "0"], ["10", "1"], ["100", "543"]], "original": "\"use strict\";\nfunction Main(input) {\n    const N = input.split(\"\\n\")[0] - 0;\n    let e = new Array(N + 1).fill(0);\n    for (let i = 2; i <= N; i++) {\n        let cur = i;\n        for (let j = 2; j <= i; j++) {\n            while (cur % j == 0) {\n                e[j] += 1;\n                cur /= j;\n            }\n        }\n    }\n    const num = (m) => e.reduce((ac, x) => ac + ((x >= m - 1) ? 1 : 0), 0);\n    let l75 = num(75);\n    let l25 = num(25);\n    let l15 = num(15);\n    let l5 = num(5);\n    let l3 = num(3);\n    let r5x5x3 = (l5 * (l5 - 1) * (l3 - 2)) / 2;\n    let r15x5 = l15 * (l5 - 1);\n    let r25x3 = l25 * (l3 - 1);\n    let r75 = l75;\n    console.log(r75 + r25x3 + r15x5 + r5x5x3);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03291_1", "type": "JavaScript", "obfuscated": "var line;\nvar S;\nvar MOD = Math['pow'](0xa, 0x9) + 0x7;\nvar readline = require('readline');\nvar rl = readline['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nrl['on']('line', function (x) {\n    line = x;\n});\nrl['on']('close', function () {\n    var aUrgXt = {\n        'vtMcA': function (callee, param1) {\n            return callee(param1);\n        },\n        'fJYmx': function (x, y) {\n            return x <= y;\n        },\n        'cvPTi': function (x, y) {\n            return x + y;\n        },\n        'DfLVm': function (x, y) {\n            return x >= y;\n        },\n        'VShbk': function (x, y) {\n            return x === y;\n        },\n        'gOfzw': function (x, y) {\n            return x * y;\n        },\n        'MmdRd': function (x, y) {\n            return x + y;\n        },\n        'hibtZ': function (x, y) {\n            return x < y;\n        },\n        'fpgmu': function (x, y) {\n            return x === y;\n        },\n        'ZICox': 'ABC'\n    };\n    S = line['split']('');\n    dp = aUrgXt['vtMcA'](Array, S['length'] + 0x1);\n    for (var i = 0x0; aUrgXt['fJYmx'](i, S['length']); i++) {\n        dp[i] = Array(aUrgXt['cvPTi'](0x3, 0x1))['fill'](0x0);\n    }\n    for (var i = S['length']; aUrgXt['DfLVm'](i, 0x0); i--) {\n        for (var j = 0x3; aUrgXt['DfLVm'](j, 0x0); j--) {\n            if (i === S['length']) {\n                dp[i][j] = aUrgXt['VShbk'](j, 0x3) ? 0x1 : 0x0;\n            } else {\n                dp[i][j] = aUrgXt['gOfzw'](dp[aUrgXt['MmdRd'](i, 0x1)][j], aUrgXt['VShbk'](S[i], '?') ? 0x3 : 0x1);\n                if (aUrgXt['hibtZ'](j, 0x3) && (aUrgXt['VShbk'](S[i], '?') || aUrgXt['fpgmu'](S[i], aUrgXt['ZICox'][j]))) {\n                    dp[i][j] += dp[i + 0x1][aUrgXt['MmdRd'](j, 0x1)];\n                }\n                dp[i][j] %= MOD;\n            }\n        }\n    }\n    console['log'](dp[0x0][0x0]);\n});", "test_cases": [["A??C", "8"], ["ABCBC", "3"], ["????C?????B??????A???????", "979596887"]], "original": "var line; var S;\nvar MOD = Math.pow(10, 9) + 7;\n\nvar readline = require('readline');\nvar rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n});\n\nrl.on('line', function (x) {\n    line = x;\n});\n\nrl.on('close', function () {\n    S = line.split(\"\");\n    dp = Array(S.length + 1);\n    \n    for (var i = 0; i <= S.length; i++) {\n        dp[i] = Array(3 + 1).fill(0);\n    }\n\n    for (var i = S.length; i >= 0; i--) {\n        for (var j = 3; j >= 0; j--) {\n            if (i === S.length) { dp[i][j] = (j === 3 ? 1 : 0); }\n            else {\n                dp[i][j] = dp[i + 1][j] * (S[i] === '?' ? 3 : 1);\n                if (j < 3 && (S[i] === '?' || S[i] === \"ABC\"[j])) {\n                    dp[i][j] += dp[i + 1][j + 1];\n                }\n                dp[i][j] %= MOD;\n            }\n        }\n    }\n    console.log(dp[0][0]);\n});\n", "language": "JavaScript"}
{"filename": "p03302_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var eLmHZL = {\n        'SFAxh': '1|0|2|3|4',\n        'beSGA': function (x, y) {\n            return x + y;\n        },\n        'LxcAN': function (x, y) {\n            return x === y;\n        },\n        'dxxXt': function (x, y) {\n            return x * y;\n        }\n    };\n    var abxiwv = eLmHZL['SFAxh']['split']('|');\n    var abOBKr = 0x0;\n    while (!![]) {\n        switch (abxiwv[abOBKr++]) {\n        case '0':\n            var ans = 'x';\n            continue;\n        case '1':\n            s = s['split']('\\x20')['map'](a => +a);\n            continue;\n        case '2':\n            if (eLmHZL['beSGA'](s[0x0], s[0x1]) === 0xf)\n                ans = '+';\n            continue;\n        case '3':\n            if (eLmHZL['LxcAN'](eLmHZL['dxxXt'](s[0x0], s[0x1]), 0xf))\n                ans = '*';\n            continue;\n        case '4':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 11", "+"], ["3 5", "*"], ["1 1", "x"]], "original": "function Main(s){\n  s = s.split(\" \").map(a=>+a);\n  var ans = \"x\";\n  if(s[0] + s[1] === 15)ans = \"+\";\n  if(s[0] * s[1] === 15)ans = \"*\";\n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03303_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var mySuHr = {\n        'HyBTx': function (x, y) {\n            return x != y;\n        },\n        'FbbQQ': function (x, y) {\n            return x != y;\n        },\n        'SuUUp': function (x, y) {\n            return x < y;\n        },\n        'umDwr': function (callee, param1) {\n            return callee(param1);\n        },\n        'MMgqH': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var JDTLmd = '0|5|4|8|6|3|1|7|2|9'['split']('|');\n    var ZhRGyY = 0x0;\n    while (!![]) {\n        switch (JDTLmd[ZhRGyY++]) {\n        case '0':\n            input = input['split']('\\x0a');\n            continue;\n        case '1':\n            while (mySuHr['HyBTx'](S['length'], 0x0)) {\n                var tmp = '';\n                for (var i = 0x0; i < w; i++) {\n                    if (mySuHr['FbbQQ'](S['length'], 0x0)) {\n                        tmp += S['shift']();\n                    }\n                }\n                list['push'](tmp);\n            }\n            continue;\n        case '2':\n            for (var i = 0x0; mySuHr['SuUUp'](i, list['length']); i++) {\n                output += list[i]['slice'](0x0, 0x1);\n            }\n            continue;\n        case '3':\n            var list = [];\n            continue;\n        case '4':\n            var w = parseInt(input[0x1]);\n            continue;\n        case '5':\n            var S = input[0x0];\n            continue;\n        case '6':\n            S = S['split']('');\n            continue;\n        case '7':\n            var output = '';\n            continue;\n        case '8':\n            if (w == 0x1) {\n                mySuHr['umDwr'](myout, S);\n                return;\n            }\n            continue;\n        case '9':\n            mySuHr['MMgqH'](myout, output);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["abcdefgh\n3", "adg"], ["lllll\n1", "lllll"], ["souuundhound\n2", "suudon"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.split(\" \");\n\tinput = input.split(\"\\n\");\n\t//input = input.split(\" \").map((a)=>Number(a));\n\t//input = input.split(\"\\n\").map((a)=>Number(a));\n  var S = input[0];\n  var w = parseInt(input[1]);\n  if(w == 1){\n     myout(S);\n    return;\n     }\n  S = S.split(\"\");\n  var list = [];\n  while(S.length != 0){\n    \tvar tmp = \"\";\n        for(var i = 0; i < w; i++){\n          if(S.length != 0){\n          \ttmp += S.shift();\n          }\n        }\n    list.push(tmp);\n  }\n  var output = \"\";\n  for(var i = 0; i < list.length; i++){\n    output += list[i].slice(0,1);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03452_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var nTjzCH = {\n        'ROwCz': function (x, y) {\n            return x + y;\n        },\n        'sljqQ': function (x, y) {\n            return x + y;\n        },\n        'fdeAT': 'Yes',\n        'JvHgl': function (x, y) {\n            return x !== y;\n        },\n        'ooeWB': function (x, y) {\n            return x - y;\n        },\n        'iLjFN': function (x, y) {\n            return x + y;\n        },\n        'QhcOU': function (x, y) {\n            return x === y;\n        }\n    };\n    var QJKFIy = '11|7|0|10|8|1|4|3|2|6|9|12|5'['split']('|');\n    var NNOgfX = 0x0;\n    while (!![]) {\n        switch (QJKFIy[NNOgfX++]) {\n        case '0':\n            var N = M[0x0];\n            continue;\n        case '1':\n            for (var i = 0x0; i < M; i++) {\n                L[i] = input[nTjzCH['ROwCz'](i, 0x1)]['split']('\\x20')['map'](a => parseInt(a));\n            }\n            continue;\n        case '2':\n            anc[0x0] = anc[0x1] = 0x1;\n            continue;\n        case '3':\n            var x = new Array(N + 0x1)['fill'](0x0);\n            continue;\n        case '4':\n            var anc = new Array(nTjzCH['sljqQ'](N, 0x1))['fill'](0x0);\n            continue;\n        case '5':\n            console['log'](ans);\n            continue;\n        case '6':\n            var i, j, low = 0x1;\n            continue;\n        case '7':\n            var M = input[0x0]['split']('\\x20')['map'](a => parseInt(a));\n            continue;\n        case '8':\n            var L = [];\n            continue;\n        case '9':\n            var ans = nTjzCH['fdeAT'];\n            continue;\n        case '10':\n            M = M[0x1];\n            continue;\n        case '11':\n            input = input['split']('\\x0a');\n            continue;\n        case '12':\n            top:\n                while (L['length']) {\n                    i = j = L['length'];\n                    while (i--) {\n                        if (anc[L[i][0x0]] && anc[L[i][0x1]]) {\n                            if (nTjzCH['JvHgl'](nTjzCH['ooeWB'](x[L[i][0x1]], x[L[i][0x0]]), L[i][0x2])) {\n                                ans = 'No';\n                                break top;\n                            } else {\n                                L['splice'](i, 0x1);\n                                continue;\n                            }\n                        }\n                        if (anc[L[i][0x0]]) {\n                            anc[L[i][0x1]] = 0x1;\n                            x[L[i][0x1]] = nTjzCH['iLjFN'](x[L[i][0x0]], L[i][0x2]);\n                            L['splice'](i, 0x1);\n                        } else if (anc[L[i][0x1]]) {\n                            anc[L[i][0x0]] = 0x1;\n                            x[L[i][0x0]] = nTjzCH['ooeWB'](x[L[i][0x1]], L[i][0x2]);\n                            L['splice'](i, 0x1);\n                        }\n                    }\n                    if (nTjzCH['QhcOU'](j, L['length'])) {\n                        i = anc['findIndex'](a => a === 0x0);\n                        anc[i] = 0x1;\n                    }\n                }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n1 2 1\n2 3 1\n1 3 2", "Yes"], ["3 3\n1 2 1\n2 3 1\n1 3 5", "No"], ["4 3\n2 1 1\n2 3 5\n3 4 2", "Yes"], ["10 3\n8 7 100\n7 9 100\n9 8 100", "No"], ["100 0", "Yes"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tvar M = input[0].split(\" \").map(a => parseInt(a));\n\tvar N = M[0];\n\tM = M[1];\n\tvar L = [];\n\tfor(var i = 0; i < M; i++){\n\t\tL[i] = input[i+1].split(\" \").map(a => parseInt(a));\n\t}\n\tvar anc = new Array(N+1).fill(0);\n\tvar x = new Array(N+1).fill(0);\n\tanc[0] = anc[1] = 1;\n\tvar i, j, low = 1;\n\tvar ans = \"Yes\";\n\t\n\ttop:\n\twhile(L.length){\n\t\ti = j = L.length;\n\t\twhile(i--){\n\t\t\tif(anc[L[i][0]] && anc[L[i][1]]){\n\t\t\t\tif(x[L[i][1]] - x[L[i][0]] !== L[i][2]){\n\t\t\t\t\tans = \"No\";\n\t\t\t\t\tbreak top;\n\t\t\t\t}else{\n\t\t\t\t\tL.splice(i, 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(anc[L[i][0]]){\n\t\t\t\tanc[L[i][1]] = 1;\n\t\t\t\tx[L[i][1]] = x[L[i][0]] + L[i][2];\n\t\t\t\tL.splice(i, 1);\n\t\t\t}else if(anc[L[i][1]]){\n\t\t\t\tanc[L[i][0]] = 1;\n\t\t\t\tx[L[i][0]] = x[L[i][1]] - L[i][2];\n\t\t\t\tL.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif(j === L.length){\n\t\t\ti = anc.findIndex(a => a === 0);\n\t\t\tanc[i] = 1;\n\t\t}\n\t}\n\t\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03587_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    arg = arg['trim']()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    console['log'](S['filter'](n => n === '1')['length']);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["111100", "4"], ["001001", "2"], ["000000", "0"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    console.log(S.filter(n=>n===\"1\").length);\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03627_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const HdFNKv = {\n        'lFuQi': function (callee, param1) {\n            return callee(param1);\n        },\n        'QqauY': function (x, y) {\n            return x === y;\n        },\n        'lerKm': function (callee, param1) {\n            return callee(param1);\n        },\n        'QHuzi': function (x, y) {\n            return x * y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = HdFNKv['lFuQi'](parseInt, arg[0x0]);\n    const A = arg[0x1]['split']('\\x20')['map'](n => parseInt(n))['sort']((a, b) => a - b);\n    let pairNums = [];\n    for (let i in A) {\n        if (HdFNKv['QqauY'](A[i], A[HdFNKv['lerKm'](parseInt, i) + 0x1])) {\n            pairNums['push'](A[i]);\n        }\n    }\n    pairNums['sort']((a, b) => b - a);\n    const set = new Set(pairNums);\n    console['log'](pairNums['length'] ? HdFNKv['QHuzi']([...set][0x0], [...set][0x1]) : 0x0);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6\n3 1 2 4 2 1", "2"], ["4\n1 2 3 4", "0"], ["10\n3 3 3 3 4 4 4 5 5 5", "20"]], "original": "\"use strict\"\n\nconst main = arg => {\n  arg = arg.trim().split(\"\\n\");\n  const N = parseInt(arg[0]);\n  const A = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>a-b);\n  \n  let pairNums = [];\n  \n  for(let i in A) {\n      if(A[i] === A[parseInt(i) + 1]) {\n        pairNums.push(A[i]);\n      }\n  }\n  \n  pairNums.sort((a,b)=>b-a);\n  const set = new Set(pairNums);\n\n  console.log(pairNums.length ? [...set][0] * [...set][1] : 0);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03818_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var CjiBIF = {\n        'ykZVs': function (callee, param1) {\n            return callee(param1);\n        },\n        'lvsBT': function (x, y) {\n            return x === y;\n        },\n        'BSHFp': function (x, y) {\n            return x == y;\n        },\n        'JUrWh': function (x, y) {\n            return x - y;\n        }\n    };\n    var len = input['split']('\\x0a')[0x0];\n    var list = input['split']('\\x0a')[0x1]['split']('\\x20');\n    list['sort'](function (a, b) {\n        return parseInt(a) - CjiBIF['ykZVs'](parseInt, b);\n    });\n    var b = list['filter'](function (x, i, self) {\n        return CjiBIF['lvsBT'](self['indexOf'](x), i);\n    });\n    if (CjiBIF['BSHFp'](b['length'] % 0x2, 0x1)) {\n        console['log'](b['length']);\n    } else {\n        console['log'](CjiBIF['JUrWh'](b['length'], 0x1));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1 2 1 3 7", "3"], ["15\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1", "7"]], "original": "function Main(input) {\n  var len = input.split(\"\\n\")[0];\n  var list = input.split(\"\\n\")[1].split(\" \");\n  list.sort(function(a,b){\n  \treturn parseInt(a) - parseInt(b);\n  });\n  \n  var b = list.filter(function (x, i, self) {\n            return self.indexOf(x) === i;\n        });\n  if(b.length % 2 == 1){\n     console.log(b.length);\n     }else{\n     console.log(b.length - 1);\n     }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03951_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var fOdAxQ = {\n        'hsxZJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'xclrh': function (x, y) {\n            return x != y;\n        },\n        'fSEop': function (x, y) {\n            return x == y;\n        },\n        'jtchl': function (x, y) {\n            return x * y;\n        },\n        'lwpPy': function (x, y) {\n            return x >= y;\n        },\n        'SuGZS': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var n = fOdAxQ['hsxZJ'](Number, input[0x0]);\n    var ans = 0x0;\n    for (var i = Math['min'](input[0x1]['length'], input[0x2]['length']); fOdAxQ['xclrh'](i, 0x0); i--) {\n        if (fOdAxQ['fSEop'](input[0x1]['substr'](fOdAxQ['jtchl'](-0x1, i)), input[0x2]['substr'](0x0, i)) && fOdAxQ['lwpPy'](fOdAxQ['SuGZS'](input[0x1]['length'], input[0x2]['length']) - i, n)) {\n            ans = i;\n            break;\n        }\n    }\n    console['log'](fOdAxQ['SuGZS'](input[0x1]['substr'](0x0, input[0x1]['length'] - ans), input[0x2])['length']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["3\nabc\ncde", "5"], ["1\na\nz", "2"], ["4\nexpr\nexpr", "4"]], "original": "function Main(input){\n\tinput = input.split(\"\\n\");\n\tvar n = Number(input[0]);\n\tvar ans = 0;\n\tfor(var i=Math.min(input[1].length,input[2].length);i!=0;i--){\n\t\tif(input[1].substr(-1*i)==input[2].substr(0,i)&&input[1].length+input[2].length-i>=n){\n\t\t\tans = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tconsole.log((input[1].substr(0,input[1].length-ans)+input[2]).length);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03966_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var KfTDUc = {\n        'QmQgg': '0|4|3|2|5|1',\n        'IfGnX': function (x, y) {\n            return x + y;\n        },\n        'YxggH': function (x, y) {\n            return x * y;\n        },\n        'lqgIE': function (x, y) {\n            return x <= y;\n        },\n        'ZonCC': function (x, y) {\n            return x <= y;\n        },\n        'fOkwu': '4|1|2|3|0',\n        'VfihL': function (x, y) {\n            return x / y;\n        },\n        'hLmcY': function (x, y) {\n            return x * y;\n        },\n        'dJzHJ': function (x, y) {\n            return x / y;\n        }\n    };\n    var KlSyCa = KfTDUc['QmQgg']['split']('|');\n    var QYRkiW = 0x0;\n    while (!![]) {\n        switch (KlSyCa[QYRkiW++]) {\n        case '0':\n            TT = 0x0;\n            continue;\n        case '1':\n            console['log'](KfTDUc['IfGnX'](TT, AA));\n            continue;\n        case '2':\n            N = input[0x0];\n            continue;\n        case '3':\n            input = input['split']('\\x0a');\n            continue;\n        case '4':\n            AA = 0x0;\n            continue;\n        case '5':\n            for (i = 0x1; i <= N; i++) {\n                tmp = input[i]['split']('\\x20');\n                T = KfTDUc['YxggH'](tmp[0x0], 0x1);\n                A = KfTDUc['YxggH'](tmp[0x1], 0x1);\n                if (KfTDUc['lqgIE'](TT, T) && KfTDUc['ZonCC'](AA, A)) {\n                    TT = T;\n                    AA = A;\n                } else {\n                    var xzDQvu = KfTDUc['fOkwu']['split']('|');\n                    var wzqdcC = 0x0;\n                    while (!![]) {\n                        switch (xzDQvu[wzqdcC++]) {\n                        case '0':\n                            AA = KfTDUc['YxggH'](A, ratio);\n                            continue;\n                        case '1':\n                            ratioA = KfTDUc['VfihL'](AA, A);\n                            continue;\n                        case '2':\n                            ratio = Math['ceil'](Math['max'](ratioT, ratioA));\n                            continue;\n                        case '3':\n                            TT = KfTDUc['hLmcY'](T, ratio);\n                            continue;\n                        case '4':\n                            ratioT = KfTDUc['dJzHJ'](TT, T);\n                            continue;\n                        }\n                        break;\n                    }\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2 3\n1 1\n3 2", "10"], ["4\n1 1\n1 1\n1 5\n1 100", "101"], ["5\n3 10\n48 17\n31 199\n231 23\n3 2", "6930"]], "original": "function Main(input) {\n    TT = 0;\n    AA = 0;\n \n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\"\\n\");\n\tN = input[0];\n//    console.log(N);\t\n    for (i = 1; i <= N; i++) {\n    \ttmp = input[i].split(\" \");\n    \tT = tmp[0] * 1;\n    \tA = tmp[1] * 1;\n        // console.log(\"T:\" + T + \" A:\" + A);\n \n        if ((TT <= T) && (AA <= A)) {\n            TT = T;\n            AA = A;\n        } else {\n            ratioT = TT / T;\n            ratioA = AA / A;\n            // console.log(\"ratioT:\" + ratioT + \" ratioA:\" + ratioA);\n            ratio = Math.ceil(Math.max(ratioT, ratioA));\n            TT = T * ratio;\n            AA = A * ratio;\n        }\n        // console.log(\"TT:\" + TT + \" AA:\" + AA);\n    }\n\t//出力\n    console.log(TT + AA);\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04020_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var ITQAOx = {\n        'OwAgW': '3|0|2|5|4|1',\n        'wZizt': function (callee, param1) {\n            return callee(param1);\n        },\n        'MLTXF': function (x, y) {\n            return x < y;\n        },\n        'JWrYl': function (x, y) {\n            return x == y;\n        },\n        'ZvuFw': function (x, y) {\n            return x - y;\n        },\n        'vndeU': function (x, y) {\n            return x / y;\n        },\n        'uhtAa': function (x, y) {\n            return x != y;\n        },\n        'YOgfI': function (x, y) {\n            return x + y;\n        },\n        'BPyhp': '0|2|4|3|1',\n        'nRsVk': function (x, y) {\n            return x + y;\n        },\n        'eMRqC': function (x, y) {\n            return x >= y;\n        }\n    };\n    var yLyLxK = ITQAOx['OwAgW']['split']('|');\n    var hSvuBb = 0x0;\n    while (!![]) {\n        switch (yLyLxK[hSvuBb++]) {\n        case '0':\n            var len = input[0x0];\n            continue;\n        case '1':\n            ITQAOx['wZizt'](myout, output);\n            continue;\n        case '2':\n            var output = 0x0;\n            continue;\n        case '3':\n            input = input['trim']()['split']('\\x0a')['map'](a => Number(a));\n            continue;\n        case '4':\n            for (var i = 0x0; ITQAOx['MLTXF'](i, len); i++) {\n                if (ITQAOx['JWrYl'](i, ITQAOx['ZvuFw'](len, 0x1))) {\n                    output += Math['floor'](ITQAOx['vndeU'](input[i], 0x2));\n                } else {\n                    if (input[i] != 0x0) {\n                        if (ITQAOx['uhtAa'](input[ITQAOx['YOgfI'](i, 0x1)], 0x0)) {\n                            var KoarGj = ITQAOx['BPyhp']['split']('|');\n                            var YbnSAH = 0x0;\n                            while (!![]) {\n                                switch (KoarGj[YbnSAH++]) {\n                                case '0':\n                                    var tmp = Math['min'](input[i], input[ITQAOx['nRsVk'](i, 0x1)]);\n                                    continue;\n                                case '1':\n                                    if (ITQAOx['eMRqC'](input[i], 0x2)) {\n                                        output += Math['floor'](ITQAOx['vndeU'](input[i], 0x2));\n                                    }\n                                    continue;\n                                case '2':\n                                    output += tmp;\n                                    continue;\n                                case '3':\n                                    input[ITQAOx['nRsVk'](i, 0x1)] -= tmp;\n                                    continue;\n                                case '4':\n                                    input[i] -= tmp;\n                                    continue;\n                                }\n                                break;\n                            }\n                        } else {\n                            output += Math['floor'](ITQAOx['vndeU'](input[i], 0x2));\n                        }\n                    }\n                }\n            }\n            continue;\n        case '5':\n            input['shift']();\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["4\n4\n0\n3\n2", "4"], ["8\n2\n0\n1\n6\n0\n8\n2\n1", "9"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\t//input = parseInt(input);\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\tinput = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var len = input[0];\n  var output = 0;\n  input.shift();\n  for(var i = 0; i < len; i++){\n    if(i == len - 1){\n       output += Math.floor(input[i] / 2);\n    }else{\n      if(input[i] != 0){\n         if(input[i+1] != 0){\n         \tvar tmp = Math.min(input[i],input[i+1]); \n           output += tmp;\n           input[i] -= tmp;\n           input[i+1] -= tmp;\n           if(input[i] >= 2){\n              output += Math.floor(input[i] / 2);\n              }\n         }else{\n            output += Math.floor(input[i] / 2);\n         }\n      }\n    }\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p00012_1", "type": "JavaScript", "obfuscated": "function area(x1, y1, x2, y2, x3, y3) {\n    var YxPEnm = {\n        'utUIK': function (x, y) {\n            return x - y;\n        },\n        'jAVIq': function (x, y) {\n            return x - y;\n        },\n        'YBiGb': function (x, y) {\n            return x * y;\n        },\n        'BJWwH': function (x, y) {\n            return x - y;\n        },\n        'fEwnF': function (x, y) {\n            return x - y;\n        },\n        'RJoMi': function (x, y) {\n            return x * y;\n        },\n        'TMKQT': function (x, y) {\n            return x - y;\n        },\n        'AitSZ': function (x, y) {\n            return x * y;\n        },\n        'CpHek': function (x, y) {\n            return x + y;\n        },\n        'mhLTI': function (x, y) {\n            return x + y;\n        },\n        'trjhJ': function (x, y) {\n            return x * y;\n        },\n        'QxweP': function (x, y) {\n            return x * y;\n        }\n    };\n    var ab = Math['sqrt'](YxPEnm['utUIK'](x1, x2) * YxPEnm['jAVIq'](x1, x2) + YxPEnm['YBiGb'](YxPEnm['BJWwH'](y1, y2), y1 - y2)), bc = Math['sqrt'](YxPEnm['YBiGb'](YxPEnm['jAVIq'](x2, x3), YxPEnm['fEwnF'](x2, x3)) + YxPEnm['fEwnF'](y2, y3) * YxPEnm['jAVIq'](y2, y3)), ca = Math['sqrt'](YxPEnm['YBiGb'](x3 - x1, YxPEnm['utUIK'](x3, x1)) + YxPEnm['RJoMi'](y3 - y1, YxPEnm['TMKQT'](y3, y1))), s = YxPEnm['AitSZ'](0.5, YxPEnm['CpHek'](YxPEnm['mhLTI'](ab, bc), ca)), S = Math['sqrt'](YxPEnm['trjhJ'](YxPEnm['RJoMi'](YxPEnm['QxweP'](s, s - ab), YxPEnm['utUIK'](s, bc)), YxPEnm['BJWwH'](s, ca)));\n    return S;\n}\nfunction inTriangle(x1, y1, x2, y2, x3, y3, xp, yp) {\n    var pjbcrB = {\n        'Malaj': function (callee, param1, param2, param3, param4, param5, param6) {\n            return callee(param1, param2, param3, param4, param5, param6);\n        },\n        'vOYdZ': function (x, y) {\n            return x - y;\n        },\n        'oDpYH': function (x, y) {\n            return x + y;\n        },\n        'gSwhV': function (x, y) {\n            return x <= y;\n        }\n    };\n    var abc = area(x1, y1, x2, y2, x3, y3), abp = pjbcrB['Malaj'](area, x1, y1, x2, y2, xp, yp), bcp = area(x2, y2, x3, y3, xp, yp), cap = area(x3, y3, x1, y1, xp, yp), sub = pjbcrB['vOYdZ'](abc, pjbcrB['oDpYH'](pjbcrB['oDpYH'](abp, bcp), cap));\n    return pjbcrB['gSwhV'](Math['abs'](sub), 0.01);\n}\nfunction main() {\n    var CpoQXJ = {\n        'veZVU': function (x, y) {\n            return x === y;\n        },\n        'oDWvG': 'YES'\n    };\n    input['forEach'](function (line) {\n        if (CpoQXJ['veZVU'](line['trim'](), ''))\n            return;\n        console['log'](inTriangle['apply'](null, line['split']('\\x20')['map'](parseFloat)) ? CpoQXJ['oDWvG'] : 'NO');\n    });\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var wxXlJa = {\n        'InlHU': function (callee) {\n            return callee();\n        }\n    };\n    input = input['split']('\\x0a');\n    wxXlJa['InlHU'](main);\n});", "test_cases": [["0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5\n0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0", "YES\nNO"]], "original": "function area(x1, y1, x2, y2, x3, y3) {\n    var\n    ab = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)),\n    bc = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3)),\n    ca = Math.sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1)),\n    s = 0.5*(ab+bc+ca),\n    S= Math.sqrt(s*(s-ab)*(s-bc)*(s-ca));\n    return S;\n}\n\nfunction inTriangle(x1, y1, x2, y2, x3, y3, xp, yp) {\n  var\n  abc = area(x1, y1, x2, y2, x3, y3),\n  abp = area(x1, y1, x2, y2, xp, yp),\n  bcp = area(x2, y2, x3, y3, xp, yp),\n  cap = area(x3, y3, x1, y1, xp, yp),\n  sub = abc-(abp+bcp+cap);\n  return Math.abs(sub) <= 0.01;\n}\n\nfunction main() {\n  input.forEach(function(line) {\n    if(line.trim() === '') return;\n    console.log(inTriangle.apply(null, line.split(' ').map(parseFloat)) ? 'YES' : 'NO');\n  });\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00014_1", "type": "JavaScript", "obfuscated": "process['stdin']['on']('data', function (c) {\n    var juJGnC = {\n        'xsjdV': function (x, y) {\n            return x * y;\n        },\n        'TDofq': function (x, y) {\n            return x * y;\n        }\n    };\n    (c + '')['trim']()['split']('\\x0a')['some'](function (n) {\n        for (var d = +n, i = 0x1, a = 0x0, t; t = juJGnC['xsjdV'](i++, d), t < 0x258 ? a += juJGnC['TDofq'](juJGnC['TDofq'](t, t), d) : 0x0;);\n        console['log'](a);\n    });\n})['resume']();", "test_cases": [["20\n10", "68440000\n70210000"]], "original": "process.stdin.on(\"data\",function(c){\n  (c+\"\").trim().split(\"\\n\").some(function(n){\n    for(var d=+n,i=1,a=0,t;t=i++*d,t<600?a+=t*t*d:0;);\n    console.log(a);\n  });\n}).resume();", "language": "JavaScript"}
{"filename": "p00022_1", "type": "JavaScript", "obfuscated": "function main() {\n    var TFCfCt = {\n        'aHvRp': function (callee) {\n            return callee();\n        },\n        'ugRhT': function (x, y) {\n            return x - y;\n        },\n        'fxPTX': function (x, y) {\n            return x < y;\n        },\n        'qjOMo': function (x, y) {\n            return x - y;\n        },\n        'WsDZw': function (x, y) {\n            return x - y;\n        },\n        'PlfXJ': function (x, y) {\n            return x == y;\n        },\n        'sQJyQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'CuqEY': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    while (0x1) {\n        var n = scan();\n        if (TFCfCt['PlfXJ'](n, 0x0)) {\n            break;\n        }\n        var x = TFCfCt['sQJyQ'](Array, n);\n        TFCfCt['CuqEY'](rep, n, function (i) {\n            x[i] = TFCfCt['aHvRp'](scan);\n        });\n        x[-0x1] = 0x0;\n        TFCfCt['CuqEY'](rep, n, function (i) {\n            x[i] += x[TFCfCt['ugRhT'](i, 0x1)];\n        });\n        var a = -Infinity;\n        rep(n, function (i) {\n            for (var j = i; TFCfCt['fxPTX'](j, n); ++j) {\n                a = Math['max'](TFCfCt['qjOMo'](x[j], x[TFCfCt['WsDZw'](i, 0x1)]), a);\n            }\n        });\n        print(a);\n    }\n}\nfunction rep(n, func) {\n    var cuOfQZ = {\n        'pawEI': function (x, y) {\n            return x < y;\n        },\n        'CdrxJ': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    for (var i = 0x0; cuOfQZ['pawEI'](i, n); ++i) {\n        cuOfQZ['CdrxJ'](func, i);\n    }\n}\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar input = '';\nvar input_index = 0x0;\nfunction scan(type) {\n    if (type === 'string') {\n        return input[input_index++];\n    } else {\n        return +input[input_index++];\n    }\n}\nfunction print(val) {\n    console['log'](val);\n}\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    input = input['split'](/\\s+/);\n    main();\n});", "test_cases": [["7\n-5\n-1\n6\n4\n9\n-6\n-7\n13\n1\n2\n3\n2\n-2\n-1\n1\n2\n3\n2\n1\n-2\n1\n3\n1000\n-200\n201\n0", "19\n14\n1001"]], "original": "function main(){\n\twhile(1){\n\t\tvar n = scan();\n\t\tif(n == 0){\n\t\t\tbreak;\n\t\t}\n\t\tvar x = Array(n);\n\t\trep(n, function(i){\n\t\t\tx[i] = scan();\n\t\t});\n\t\tx[-1] = 0;\n\t\trep(n, function(i){\n\t\t\tx[i] += x[i - 1];\n\t\t});\n\t\tvar a = -Infinity;\n\t\trep(n, function(i){\n\t\t\tfor(var j = i; j < n; ++j){\n\t\t\t\ta = Math.max(x[j] - x[i - 1], a);\n\t\t\t}\n\t\t});\n\t\tprint(a);\n\t}\n}\n\nfunction rep(n, func){\n\tfor(var i = 0; i < n; ++i){\n\t\tfunc(i);\n\t}\n}\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nvar input = '';\nvar input_index = 0;\n\nfunction scan(type){\n\tif(type === 'string'){\n\t\treturn input[input_index++];\n\t}\n\telse{\n\t\treturn +input[input_index++];\n\t}\n}\n\nfunction print(val){\n\tconsole.log(val);\n}\n\nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.split(/\\s+/);\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00042_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar cnt = 0x1;\nwhile (!![]) {\n    var W = Arr['shift']() - 0x0;\n    if (W == 0x0)\n        break;\n    var N = Arr['shift']() - 0x0;\n    var dp = [];\n    for (var y = 0x0; y < N + 0x1; y++) {\n        dp[y] = [];\n        for (var x = 0x0; x <= W; x++) {\n            dp[y][x] = 0x0;\n        }\n    }\n    var v = [];\n    var w = [];\n    for (var i = 0x0; i < N; i++) {\n        var arr = Arr['shift']()['split'](',')['map'](Number);\n        v['push'](arr[0x0]);\n        w['push'](arr[0x1]);\n    }\n    for (var y = 0x0; y < N; y++) {\n        for (var x = 0x0; x <= W; x++) {\n            if (x - w[y] >= 0x0)\n                dp[y + 0x1][x] = Math['max'](dp[y][x], dp[y][x - w[y]] + v[y]);\n            else\n                dp[y + 0x1][x] = dp[y][x];\n        }\n    }\n    console['log']('Case\\x20' + cnt + ':');\n    cnt++;\n    console['log'](dp[N][W]);\n    var maxValue = dp[N][W];\n    while (maxValue == dp[N][W - 0x1])\n        W--;\n    console['log'](W);\n}", "test_cases": [["50\n5\n60,10\n100,20\n120,30\n210,45\n10,4\n50\n5\n60,10\n100,20\n120,30\n210,45\n10,4\n0", "Case 1:\n220\n49\nCase 2:\n220\n49"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar cnt=1;\nwhile(true){\n   var W=Arr.shift()-0;\n   if(W==0)break;\n   var N=Arr.shift()-0;\n   var dp=[];\n   for(var y=0;y<N+1;y++){\n      dp[y]=[];\n      for(var x=0;x<=W;x++){\n         dp[y][x]=0;\n      }\n   }\n   var v=[];\n   var w=[];\n   for(var i=0;i<N;i++){\n      var arr=(Arr.shift()).split(\",\").map(Number);\n      v.push(arr[0]);\n      w.push(arr[1]);\n   }\n   for(var y=0;y<N;y++){\n      for(var x=0;x<=W;x++){\n         if(x-w[y]>=0)dp[y+1][x]=Math.max(dp[y][x],dp[y][x-w[y]]+v[y]);\n         else dp[y+1][x]=dp[y][x];\n      }\n   }\n   console.log(\"Case \"+cnt+\":\");\n   cnt++;\n   console.log(dp[N][W]);\n   var maxValue=dp[N][W];\n   while(maxValue==dp[N][W-1])W--;\n   console.log(W);\n}", "language": "JavaScript"}
{"filename": "p00051_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar AL = Arr['shift']();\nfor (var i = 0x0; i < AL; i++) {\n    var cJenKV = '1|4|5|3|0|2'['split']('|');\n    var KkBhcY = 0x0;\n    while (!![]) {\n        switch (cJenKV[KkBhcY++]) {\n        case '0':\n            var b = arr['join']('');\n            continue;\n        case '1':\n            var arr = Arr[i]['split']('')['map'](Number);\n            continue;\n        case '2':\n            console['log'](parseInt(a) - parseInt(b));\n            continue;\n        case '3':\n            arr['sort'](function (a, b) {\n                var xWAwSl = {\n                    'mGtmb': function (x, y) {\n                        return x - y;\n                    }\n                };\n                return xWAwSl['mGtmb'](a, b);\n            });\n            continue;\n        case '4':\n            arr['sort'](function (a, b) {\n                var vsJWKx = {\n                    'vzFvp': function (x, y) {\n                        return x - y;\n                    }\n                };\n                return vsJWKx['vzFvp'](b, a);\n            });\n            continue;\n        case '5':\n            var a = arr['join']('');\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n65539010\n65539010", "96417531\n96417531"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nfor(var i=0;i<AL;i++){\n   var arr=Arr[i].split(\"\").map(Number);\n   arr.sort(function(a,b){return b-a;});\n   var a=arr.join(\"\");\n   arr.sort(function(a,b){return a-b;});\n   var b=arr.join(\"\");\n   console.log(parseInt(a)-parseInt(b));\n}", "language": "JavaScript"}
{"filename": "p00065_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split']('\\x0a');\nvar lm = [];\nvar line;\nwhile (line = lines['shift']()) {\n    lm['push'](line['split'](',')[0x0]);\n}\nvar tm = [];\nwhile (line = lines['shift']()) {\n    tm['push'](line['split'](',')[0x0]);\n}\nlm['sort'](function (a, b) {\n    var BNghYi = {\n        'nqZgU': function (x, y) {\n            return x - y;\n        }\n    };\n    return BNghYi['nqZgU'](a, b);\n});\nlm['forEach'](function (c) {\n    var YiwMTd = {\n        'lZuNO': function (x, y) {\n            return x == y;\n        },\n        'aVQyp': function (x, y) {\n            return x == y;\n        },\n        'Sdqrh': function (x, y) {\n            return x > y;\n        },\n        'FhXFm': function (x, y) {\n            return x + y;\n        }\n    };\n    var cnt = tm['filter'](function (n) {\n        return YiwMTd['lZuNO'](n, c);\n    })['length'];\n    if (YiwMTd['Sdqrh'](cnt, 0x0)) {\n        var tcnt = lm['filter'](function (n) {\n            return YiwMTd['aVQyp'](n, c);\n        })['length'];\n        console['log'](c, YiwMTd['FhXFm'](cnt, tcnt));\n    }\n});", "test_cases": [["123,10\n56,12\n34,14\n\n123,3\n56,4\n123,5", "56 2\n123 3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar lm = [];\nvar line;\nwhile (line = lines.shift()) {\n    lm.push(line.split(',')[0]);\n}\n\nvar tm = [];\nwhile (line = lines.shift()) {\n    tm.push(line.split(',')[0]);\n}\n\nlm.sort(function(a,b){return a-b;});\n\nlm.forEach(function(c) {\n    var cnt = tm.filter(function(n){return n == c;}).length;\n    if (cnt > 0) {\n        var tcnt = lm.filter(function(n){return n == c}).length;\n        console.log(c, cnt + tcnt);\n    }\n});", "language": "JavaScript"}
{"filename": "p00087_1", "type": "JavaScript", "obfuscated": "x = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ny = x['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (y['length'] == 0x0)\n        break;\n    var z = y['shift']()['split']('\\x20');\n    var s = [];\n    z['forEach'](function (v) {\n        var AFyOEn = {\n            'TMWrl': function (x, y) {\n                return x - y;\n            },\n            'oKKkf': '4|0|2|5|1|3',\n            'mNWUd': function (x, y) {\n                return x == y;\n            },\n            'amAOU': function (x, y) {\n                return x * y;\n            },\n            'zvaAx': function (x, y) {\n                return x + y;\n            },\n            'ZWYoL': function (x, y) {\n                return x / y;\n            },\n            'xGKQN': function (x, y) {\n                return x == y;\n            }\n        };\n        if (/\\d/['test'](v)) {\n            s['unshift'](AFyOEn['TMWrl'](v, 0x0));\n        } else {\n            var ufzoFK = AFyOEn['oKKkf']['split']('|');\n            var pWAmlD = 0x0;\n            while (!![]) {\n                switch (ufzoFK[pWAmlD++]) {\n                case '0':\n                    b = s['shift']();\n                    continue;\n                case '1':\n                    if (AFyOEn['mNWUd'](v, '*'))\n                        s['unshift'](AFyOEn['amAOU'](b, a));\n                    continue;\n                case '2':\n                    if (AFyOEn['mNWUd'](v, '+'))\n                        s['unshift'](AFyOEn['zvaAx'](b, a));\n                    continue;\n                case '3':\n                    if (AFyOEn['mNWUd'](v, '/'))\n                        s['unshift'](AFyOEn['ZWYoL'](b, a));\n                    continue;\n                case '4':\n                    a = s['shift']();\n                    continue;\n                case '5':\n                    if (AFyOEn['xGKQN'](v, '-'))\n                        s['unshift'](AFyOEn['TMWrl'](b, a));\n                    continue;\n                }\n                break;\n            }\n        }\n    });\n    console['log'](s[0x0]['toFixed'](0x6));\n}", "test_cases": [["10 2 12 - /\n3 4 - 7 2 3 * + *\n-1 -2 3 + +", "-1.000000\n-13.000000\n0.000000"]], "original": "x=require('fs').readFileSync('/dev/stdin', 'utf8');\ny=x.trim().split(\"\\n\");\nwhile(true){\n   if(y.length==0)break;\n   var z=y.shift().split(\" \");\n   var s=[];\n   z.forEach(function(v){\n      if(/\\d/.test(v)){\n         s.unshift(v-0);\n      }else{\n         a=s.shift();\n         b=s.shift();\n         if(v==\"+\")s.unshift(b+a);\n         if(v==\"-\")s.unshift(b-a);\n         if(v==\"*\")s.unshift(b*a);\n         if(v==\"/\")s.unshift(b/a);\n      }\n   });\n   console.log(s[0].toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00103_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nvar inning = +lines['shift']();\nvar out = 0x0;\nvar score = 0x0;\nvar runner = 0x0;\nvar line;\nwhile (line = lines['shift']()) {\n    if (line == 'HIT') {\n        runner++;\n        if (runner > 0x3) {\n            score++;\n            runner--;\n        }\n    } else if (line == 'HOMERUN') {\n        score += runner + 0x1;\n        runner = 0x0;\n    } else {\n        out++;\n        if (out == 0x3) {\n            console['log'](score);\n            out = 0x0;\n            score = 0x0;\n            runner = 0x0;\n            continue;\n        }\n    }\n}", "test_cases": [["2\nHIT\nOUT\nHOMERUN\nHIT\nHIT\nHOMERUN\nHIT\nOUT\nHIT\nHIT\nHIT\nHIT\nOUT\nHIT\nHIT\nOUT\nHIT\nOUT\nOUT", "7\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar inning = +lines.shift();\n\nvar out = 0;\nvar score = 0;\nvar runner = 0;\n\nvar line;\nwhile (line = lines.shift()) {\n    if (line == 'HIT') {\n        runner++;\n        if (runner > 3) {\n            score++;\n            runner--;\n        }\n    } else if (line == 'HOMERUN') {\n        score += runner + 1;\n        runner = 0;\n    } else {\n        out++;\n        if (out == 3) {\n            console.log(score);\n            out = 0;\n            score = 0;\n            runner = 0;\n            continue;\n        }\n    }\n}", "language": "JavaScript"}
{"filename": "p00142_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nwhile (!![]) {\n    var n = arr['shift']();\n    if (n == 0x0)\n        break;\n    if (n == 0x1) {\n        console['log']('');\n        continue;\n    }\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary[i] = ![];\n    for (var i = 0x1; i < n; i++) {\n        ary[i * i % n] = !![];\n    }\n    var m = [];\n    ary['forEach'](function (v, i) {\n        if (v)\n            m['push'](i);\n    });\n    var ans = [];\n    var len = (n - 0x1) / 0x2;\n    for (var i = 0x0; i <= len; i++)\n        ans[i] = 0x0;\n    for (var i = 0x0; i < m['length']; i++) {\n        for (var j = i + 0x1; j < m['length']; j++) {\n            var x = m[i] - m[j];\n            if (x < 0x0)\n                x += n;\n            if (len < x)\n                x = n - x;\n            ans[x] += 0x2;\n        }\n    }\n    ans['shift']();\n    ans['forEach'](function (v) {\n        console['log'](v);\n    });\n}", "test_cases": [["11\n15\n0", "4\n4\n4\n4\n4\n2\n2\n4\n2\n4\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   if(n==1){\n      console.log(\"\");\n      continue;\n   }\n   var ary=[];\n   for(var i=0;i<n;i++)ary[i]=false;\n   for(var i=1;i<n;i++){\n      ary[i*i%n]=true;\n   }\n   var m=[];\n   ary.forEach(function(v,i){\n      if(v)m.push(i);\n   });\n   var ans=[];\n   var len=(n-1)/2 ;\n   for(var i=0;i<=len;i++)ans[i]=0;\n   for(var i=0;i<m.length;i++){\n      for(var j=i+1;j<m.length;j++){\n         var x=m[i]-m[j];\n         if(x<0)x+=n;\n         if(len<x)x=n-x;\n         ans[x]+=2;\n      }\n   }\n   ans.shift();\n   ans.forEach(function(v){\n      console.log(v);\n   });\n}", "language": "JavaScript"}
{"filename": "p00147_1", "type": "JavaScript", "obfuscated": "function main() {\n    var SyjgMg = {\n        'lBQzi': function (x, y) {\n            return x < y;\n        },\n        'UCeVT': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var waitTime = [\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0x0,\n        0xe,\n        0x9,\n        0x4,\n        0x0,\n        0x0,\n        0x8,\n        0x3,\n        0x2,\n        0x0,\n        0x0,\n        0xf,\n        0xa,\n        0xf,\n        0xa,\n        0x6,\n        0xc,\n        0x7,\n        0x9,\n        0xb,\n        0x6,\n        0x17,\n        0x12,\n        0xd,\n        0x8,\n        0x3,\n        0x17,\n        0x12,\n        0xd,\n        0x8,\n        0x3,\n        0x22,\n        0x1d,\n        0x18,\n        0x16,\n        0x11,\n        0x1c,\n        0x17,\n        0x18,\n        0x13,\n        0x1b,\n        0x22,\n        0x1d,\n        0x23,\n        0x1e,\n        0x1c,\n        0x1f,\n        0x1c,\n        0x17,\n        0x18,\n        0x1c,\n        0x2a,\n        0x25,\n        0x20,\n        0x1b,\n        0x16,\n        0x2a,\n        0x25,\n        0x20,\n        0x1b,\n        0x16,\n        0x35,\n        0x30,\n        0x2b,\n        0x29,\n        0x24,\n        0x2f,\n        0x2a,\n        0x2b,\n        0x26,\n        0x2e,\n        0x40,\n        0x3b,\n        0x36,\n        0x31,\n        0x2c,\n        0x3d,\n        0x38,\n        0x33,\n        0x2e,\n        0x2c,\n        0x48,\n        0x43,\n        0x3e,\n        0x39,\n        0x34,\n        0x48,\n        0x43,\n        0x3e,\n        0x39,\n        0x34,\n        0x53,\n        0x4e,\n        0x49,\n        0x47\n    ];\n    for (var i = 0x0; SyjgMg['lBQzi'](i, input['length']); i++) {\n        var idx = SyjgMg['UCeVT'](parseInt, input[i], 0xa);\n        console['log']('%d', waitTime[idx]);\n    }\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    input = input['split']('\\x0a');\n    main();\n});", "test_cases": [["5\n6\n7\n8", "0\n14\n9\n4"]], "original": "function main(){\n  var waitTime = [0,0,0,0,0,0,14,9,4,0,0,8,3,2,0,0,15,10,15,10,6,12,7,9,11,6,23,18,13,8,3,23,18,13,8,3,34,29,24,22,17,28,23,24,19,27,34,29,35,30,28,31,28,23,24,28,42,37,32,27,22,42,37,32,27,22,53,48,43,41,36,47,42,43,38,46,64,59,54,49,44,61,56,51,46,44,72,67,62,57,52,72,67,62,57,52,83,78,73,71];\n  for(var i = 0; i < input.length; i++){\n    var idx = parseInt(input[i], 10);\n    console.log('%d', waitTime[idx]);\n  }\n}\nvar\ninput = '';\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00188_1", "type": "JavaScript", "obfuscated": "function binarySearch(A, key) {\n    var VQeZBg = {\n        'ulCtw': '4|1|0|3|2',\n        'EWXDH': function (x, y) {\n            return x - y;\n        },\n        'rFOwv': function (x, y) {\n            return x == y;\n        },\n        'WFeeh': function (x, y) {\n            return x + y;\n        },\n        'gMuZf': function (x, y) {\n            return x < y;\n        }\n    };\n    var jgBQPw = VQeZBg['ulCtw']['split']('|');\n    var VUWVAo = 0x0;\n    while (!![]) {\n        switch (jgBQPw[VUWVAo++]) {\n        case '0':\n            var cnt = 0x0;\n            continue;\n        case '1':\n            var right = VQeZBg['EWXDH'](A['length'], 0x1);\n            continue;\n        case '2':\n            return cnt;\n        case '3':\n            while (!![]) {\n                cnt++;\n                if (VQeZBg['rFOwv'](left, right))\n                    break;\n                var mid = Math['floor'](VQeZBg['WFeeh'](left, right) / 0x2);\n                if (A[mid] == key)\n                    return cnt;\n                if (VQeZBg['gMuZf'](key, A[mid]))\n                    right = mid;\n                else\n                    left = VQeZBg['WFeeh'](mid, 0x1);\n            }\n            continue;\n        case '4':\n            var left = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++)\n        arr['push'](Arr['shift']() - 0x0);\n    console['log'](binarySearch(arr, Arr['shift']() - 0x0));\n}", "test_cases": [["7\n11\n15\n23\n36\n51\n61\n86\n51\n4\n1\n2\n3\n5\n4\n0", "3\n3"]], "original": "function binarySearch(A,key){\n    var left = 0;\n    var right = A.length-1;\n    var cnt=0;\n    while(true){\n        cnt++;\n        if(left==right)break;\n        var mid =Math.floor((left + right)/2);\n        if (A[mid] == key)return cnt;\n        if (key < A[mid]) right = mid;\n        else left = mid+1;\n    }\n    return cnt;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++)arr.push(Arr.shift()-0);\n   console.log(binarySearch(arr,Arr.shift()-0));\n}", "language": "JavaScript"}
{"filename": "p00231_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var plus = {};\n    var minus = {};\n    var pm = [];\n    for (var i = 0x0; i < N; i++) {\n        var EBxSOc = '2|4|3|6|5|1|0|7'['split']('|');\n        var DTvbvA = 0x0;\n        while (!![]) {\n            switch (EBxSOc[DTvbvA++]) {\n            case '0':\n                pm['push'](a);\n                continue;\n            case '1':\n                minus[b] = m;\n                continue;\n            case '2':\n                var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            case '3':\n                var a = arr[0x1];\n                continue;\n            case '4':\n                var m = arr[0x0];\n                continue;\n            case '5':\n                plus[a] = m;\n                continue;\n            case '6':\n                var b = arr[0x2] - 0.001 * N;\n                continue;\n            case '7':\n                pm['push'](b);\n                continue;\n            }\n            break;\n        }\n    }\n    pm['sort'](function (a, b) {\n        var GuzOxP = {\n            'AEtZj': function (x, y) {\n                return x - y;\n            }\n        };\n        return GuzOxP['AEtZj'](a, b);\n    });\n    var flag = 'OK';\n    var sum = 0x0;\n    for (var i = 0x0; i < pm['length']; i++) {\n        var v = pm[i];\n        if (plus['hasOwnProperty'](v))\n            sum += plus[v];\n        if (minus['hasOwnProperty'](v))\n            sum -= minus[v];\n        if (sum > 0x96) {\n            flag = 'NG';\n            break;\n        }\n    }\n    console['log'](flag);\n}", "test_cases": [["3\n80 0 30\n50 5 25\n90 27 50\n3\n80 0 30\n70 5 25\n71 30 50\n0", "NG\nOK"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var plus={};\n   var minus={};\n   var pm=[];\n   for(var i=0;i<N;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var m=arr[0];\n      var a=arr[1];\n      var b=arr[2]-(0.001*N);\n      plus[a]=m;\n      minus[b]=m;\n      pm.push(a);\n      pm.push(b);\n   }\n   pm.sort(function(a,b){return a-b;});\n   var flag=\"OK\";\n   var sum=0;\n   for(var i=0;i<pm.length;i++){\n      var v=pm[i];\n      if(plus.hasOwnProperty(v))sum+=plus[v];\n      if(minus.hasOwnProperty(v))sum-=minus[v];\n      if(sum>150){flag=\"NG\";break;}\n   }\n   console.log(flag);\n}", "language": "JavaScript"}
{"filename": "p00241_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    for (var I = 0x0; I < N; I++) {\n        var MRyBla = '16|0|21|19|17|12|2|5|9|18|25|15|8|7|4|22|20|23|6|13|14|24|10|3|1|11'['split']('|');\n        var bKNSHI = 0x0;\n        while (!![]) {\n            switch (MRyBla[bKNSHI++]) {\n            case '0':\n                var x1 = A[0x0];\n                continue;\n            case '1':\n                a -= w1 * w2;\n                continue;\n            case '2':\n                var y2 = A[0x5];\n                continue;\n            case '3':\n                i -= w1 * z2;\n                continue;\n            case '4':\n                a -= y1 * y2;\n                continue;\n            case '5':\n                var z2 = A[0x6];\n                continue;\n            case '6':\n                k -= z1 * y2;\n                continue;\n            case '7':\n                i += y1 * x2;\n                continue;\n            case '8':\n                var k = x1 * w2;\n                continue;\n            case '9':\n                var w2 = A[0x7];\n                continue;\n            case '10':\n                j += w1 * y2;\n                continue;\n            case '11':\n                console['log'](a + '\\x20' + i + '\\x20' + j + '\\x20' + k);\n                continue;\n            case '12':\n                var x2 = A[0x4];\n                continue;\n            case '13':\n                a -= z1 * z2;\n                continue;\n            case '14':\n                i += z1 * w2;\n                continue;\n            case '15':\n                var j = x1 * z2;\n                continue;\n            case '16':\n                var A = Arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            case '17':\n                var w1 = A[0x3];\n                continue;\n            case '18':\n                var a = x1 * x2;\n                continue;\n            case '19':\n                var z1 = A[0x2];\n                continue;\n            case '20':\n                j -= y1 * w2;\n                continue;\n            case '21':\n                var y1 = A[0x1];\n                continue;\n            case '22':\n                k += y1 * z2;\n                continue;\n            case '23':\n                j += z1 * x2;\n                continue;\n            case '24':\n                k += w1 * x2;\n                continue;\n            case '25':\n                var i = x1 * y2;\n                continue;\n            }\n            break;\n        }\n    }\n}", "test_cases": [["2\n1 2 3 4 7 6 7 8\n5 6 7 8 3 2 3 4\n0", "-58 16 36 32\n-50 32 28 48"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\nvar N=Arr.shift()-0;\nif(N==0)break;\nfor(var I=0;I<N;I++){\nvar A=Arr.shift().split(\" \").map(Number);\nvar x1=A[0];\nvar y1=A[1];\nvar z1=A[2];\nvar w1=A[3];\n \nvar x2=A[4];\nvar y2=A[5];\nvar z2=A[6];\nvar w2=A[7];\n \n   var a = x1 * x2;\n   var i = x1 * y2;\n   var j = x1 * z2;\n   var k = x1 * w2;\n \n   i += y1 * x2;\n   a -= y1 * y2;\n   k += y1 * z2;\n   j -= y1 * w2;\n              \n   j += z1 * x2;\n   k -= z1 * y2;\n   a -= z1 * z2;\n   i += z1 * w2;\n              \n   k += w1 * x2;\n   j += w1 * y2;\n   i -= w1 * z2;\n   a -= w1 * w2;\nconsole.log(a+\" \"+i+\" \"+j+\" \"+k);\n}\n}", "language": "JavaScript"}
{"filename": "p00884_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var first = Arr['shift']()['split'](':');\n    first = first[0x1]['slice'](0x0, -0x1)['split'](',');\n    var F = {};\n    first['forEach'](function (v) {\n        F[v] = !![];\n    });\n    var obj = {};\n    for (var i = 0x0; i < n - 0x1; i++) {\n        var arr = Arr['shift']()['split'](':');\n        obj[arr[0x0]] = arr[0x1]['slice'](0x0, -0x1)['split'](',');\n    }\n    var L = 0x0;\n    while (!![]) {\n        if (L == Object['keys'](F)['length'])\n            break;\n        L = Object['keys'](F)['length'];\n        for (var k in F) {\n            if (obj['hasOwnProperty'](k) && F[k]) {\n                obj[k]['forEach'](function (v) {\n                    F[v] = !![];\n                });\n                F[k] = ![];\n            }\n        }\n    }\n    var cnt = 0x0;\n    for (var k in F)\n        if (obj['hasOwnProperty'](k) == ![])\n            cnt++;\n    console['log'](cnt);\n}", "test_cases": [["2\ndevelopment:alice,bob,design,eve.\ndesign:carol,alice.\n3\none:another.\nanother:yetanother.\nyetanother:dave.\n3\nfriends:alice,bob,bestfriends,carol,fran,badcompany.\nbestfriends:eve,alice.\nbadcompany:dave,carol.\n5\na:b,c,d,e.\nb:c,d,e,f.\nc:d,e,f,g.\nd:e,f,g,h.\ne:f,g,h,i.\n4\naa:bb.\ncc:dd,ee.\nff:gg.\nbb:cc.\n0", "4\n1\n6\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var first=Arr.shift().split(\":\");\n   first=first[1].slice(0,-1).split(\",\");\n   var F={};\n   first.forEach(function(v){F[v]=true;});\n   var obj={};\n   for(var i=0;i<n-1;i++){\n      var arr=Arr.shift().split(\":\");\n      obj[arr[0]]=arr[1].slice(0,-1).split(\",\");\n   }\n   var L=0;\n   while(true){\n      if(L==Object.keys(F).length)break;\n      L=Object.keys(F).length;\n      for(var k in F){\n         if(obj.hasOwnProperty(k) && F[k]){\n            obj[k].forEach(function(v){F[v]=true;});\n            F[k]=false;\n         }\n      }\n   }\n   var cnt=0;\n   for(var k in F)if(obj.hasOwnProperty(k)==false)cnt++;\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p02316_1", "type": "JavaScript", "obfuscated": "function knapsack() {\n    var MilVyS = {\n        'BcNaf': '0|1|4|3|5|2',\n        'digNP': function (x, y) {\n            return x <= y;\n        },\n        'bCgJN': function (x, y) {\n            return x <= y;\n        },\n        'zdhps': function (x, y) {\n            return x <= y;\n        },\n        'sefPj': function (x, y) {\n            return x + y;\n        },\n        'BEKKj': function (x, y) {\n            return x - y;\n        },\n        'OjzOl': function (x, y) {\n            return x - y;\n        },\n        'atgWE': function (x, y) {\n            return x - y;\n        }\n    };\n    var TwflSh = MilVyS['BcNaf']['split']('|');\n    var MnAxlc = 0x0;\n    while (!![]) {\n        switch (TwflSh[MnAxlc++]) {\n        case '0':\n            var C = [];\n            continue;\n        case '1':\n            for (var i = 0x0; MilVyS['digNP'](i, N); i++)\n                C[i] = [];\n            continue;\n        case '2':\n            return C[N][W];\n        case '3':\n            for (var i = 0x0; MilVyS['bCgJN'](i, N); i++)\n                C[i][0x0] = 0x0;\n            continue;\n        case '4':\n            for (var i = 0x0; i <= W; i++)\n                C[0x0][i] = 0x0;\n            continue;\n        case '5':\n            for (var i = 0x1; MilVyS['digNP'](i, N); i++) {\n                for (var j = 0x1; j <= W; j++) {\n                    if (MilVyS['zdhps'](items[i]['w'], W)) {\n                        if (MilVyS['sefPj'](items[i]['v'], C[MilVyS['BEKKj'](i, 0x1)][MilVyS['OjzOl'](j, items[i]['w'])]) > C[MilVyS['BEKKj'](i, 0x1)][j]) {\n                            C[i][j] = MilVyS['sefPj'](items[i]['v'], C[MilVyS['OjzOl'](i, 0x1)][MilVyS['OjzOl'](j, items[i]['w'])]);\n                        } else {\n                            C[i][j] = C[MilVyS['atgWE'](i, 0x1)][j];\n                        }\n                    } else {\n                        C[i][j] = C[MilVyS['BEKKj'](i, 0x1)][j];\n                    }\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar nW = Arr['shift']()['split']('\\x20')['map'](Number);\nvar n = nW[0x0];\nvar W = nW[0x1];\nvar N = 0x0;\nvar items = [null];\nfor (var i = 0x1; i <= n; i++) {\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var k = 0x1;\n    do {\n        items['push']({\n            'v': arr[0x0] * k,\n            'w': arr[0x1] * k\n        });\n        N++;\n        k++;\n    } while (arr[0x1] * k <= W);\n}\nvar max = knapsack();\nconsole['log'](max);", "test_cases": [["4 8\n4 2\n5 2\n2 1\n8 3", "21"], ["2 20\n5 9\n4 10", "10"], ["3 9\n2 1\n3 1\n5 2", "27"]], "original": "function knapsack(){\n   var C=[];\n   for(var i=0;i<=N;i++)C[i]=[];\n   for(var i=0;i<=W;i++)C[0][i]=0;\n   for(var i=0;i<=N;i++)C[i][0]=0;\n   for(var i=1;i<=N;i++){\n      for(var j=1;j<=W;j++){\n         if(items[i].w<=W){\n            if(items[i].v+C[i-1][j-items[i].w]>C[i-1][j]){\n               C[i][j]=items[i].v+C[i-1][j-items[i].w];\n            }else{\n               C[i][j]=C[i-1][j];\n            }\n         }else{\n            C[i][j]=C[i-1][j];\n         } \n      }  \n   }\n   return C[N][W];\n}   \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar nW=(Arr.shift()).split(\" \").map(Number);\nvar n=nW[0];\nvar W=nW[1];\nvar N=0;\nvar items=[null];\nfor(var i=1;i<=n;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var k=1;\n   do{\n      items.push({v:arr[0]*k,w:arr[1]*k});\n      N++;\n      k++;\n   }while(arr[1]*k<=W);\n}\nvar max=knapsack();\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p02468_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar nums = input['split']('\\x20')['map'](function (num) {\n    return +num;\n});\nvar n = nums[0x0];\nvar m = nums[0x1];\nvar mod = 0x1;\nfor (var i = 0x0; i < m; i++) {\n    mod = mod * n % 0x3b9aca07;\n}\nconsole['log'](mod);", "test_cases": [["2 3", "8"], ["5 8", "390625"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar nums = input.split(' ').map(function(num){return +num;});\nvar n = nums[0];\nvar m = nums[1];\n\nvar mod = 1;\nfor (var i = 0; i < m; i++) {\n    mod = (mod * n) % 1000000007;\n}\n\nconsole.log(mod);", "language": "JavaScript"}
{"filename": "p02541_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var XYRsXr = {\n        'BHBDK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'AndUZ': function (x, y) {\n            return x > y;\n        },\n        'DwWxv': function (x, y) {\n            return x * y;\n        },\n        'mYegc': function (x, y) {\n            return x - y;\n        },\n        'rfWiR': function (x, y) {\n            return x + y;\n        },\n        'lPfPj': function (x, y) {\n            return x * y;\n        },\n        'ZcLer': function (x, y) {\n            return x * y;\n        },\n        'sFEsb': function (x, y) {\n            return x == y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = XYRsXr['BHBDK'](parseInt, input[0x0], 0xa);\n    for (var i = 0x1; XYRsXr['AndUZ'](i, 0x0); i++) {\n        var n = XYRsXr['DwWxv'](0.5, XYRsXr['mYegc'](Math['sqrt'](XYRsXr['rfWiR'](XYRsXr['lPfPj'](XYRsXr['ZcLer'](0x8, N), i), 0x1)), 0x1));\n        if (XYRsXr['sFEsb'](Number['isInteger'](n), !![])) {\n            console['log'](n);\n            break;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["11", "10"], ["20200920", "1100144"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  \n  const N = parseInt(input[0], 10);\n\n  for (var i = 1; i > 0; i++) {\n    var n = 0.5*(Math.sqrt((8*N*i)+1)-1);\n    if(Number.isInteger(n) == true){\n      console.log(n);\n      break;\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02736_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gjGTUD = {\n        'TmUpE': function (x, y) {\n            return x < y;\n        },\n        'wtvMw': function (x, y) {\n            return x + y;\n        },\n        'bDHCz': function (x, y) {\n            return x > y;\n        },\n        'wxJZr': function (x, y) {\n            return x < y;\n        },\n        'mAQoQ': function (x, y) {\n            return x - y;\n        },\n        'BRcgd': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    for (i = 0x0; gjGTUD['TmUpE'](i, input['length']); i = gjGTUD['wtvMw'](i, 0x2)) {\n        var xnkEBL = '4|0|1|3|2'['split']('|');\n        var ZBjXzh = 0x0;\n        while (!![]) {\n            switch (xnkEBL[ZBjXzh++]) {\n            case '0':\n                var a = input[gjGTUD['wtvMw'](i, 0x1)]['split']('');\n                continue;\n            case '1':\n                var aa = a['map'](Number);\n                continue;\n            case '2':\n                console['log'](aa[0x0]);\n                continue;\n            case '3':\n                for (j = N; gjGTUD['bDHCz'](j, 0x1); j--) {\n                    for (k = 0x0; gjGTUD['wxJZr'](k, j); k++) {\n                        var e = Math['abs'](gjGTUD['mAQoQ'](aa[0x0], aa[0x1]));\n                        aa['push'](e);\n                        aa['shift']();\n                    }\n                    aa['pop']();\n                }\n                continue;\n            case '4':\n                var N = gjGTUD['BRcgd'](parseInt, input[i]);\n                continue;\n            }\n            break;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1231", "1"], ["10\n2311312312", "0"]], "original": "function Main(input) {\n    input = input.split(\"\\n\");\n    for (i=0; i < input.length; i=i+2) {\n        var N = parseInt(input[i])\n        var a = input[i+1].split(\"\")\n        var aa = a.map(Number)\n        for (j=N; j > 1; j--) {\n            for (k=0; k < j; k++) {\n                var e = Math.abs(aa[0]-aa[1])\n                aa.push(e)\n                aa.shift()\n            }\n            aa.pop()\n        }\n        console.log(aa[0])\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02763_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const sjeNsU = {\n        'CDBBK': function (callee, param1) {\n            return callee(param1);\n        },\n        'eICZG': function (callee, param1) {\n            return callee(param1);\n        },\n        'XSlfc': function (x, y) {\n            return x < y;\n        },\n        'nzYcT': function (x, y) {\n            return x + y;\n        },\n        'gAZOD': function (x, y) {\n            return x === y;\n        },\n        'OCKgm': function (callee, param1) {\n            return callee(param1);\n        },\n        'KRmsO': function (callee, param1) {\n            return callee(param1);\n        },\n        'ZFzbd': function (x, y) {\n            return x - y;\n        }\n    };\n    let n = sjeNsU['CDBBK'](parseInt, input[0x0]);\n    let s = input[0x1];\n    let q_l = sjeNsU['eICZG'](parseInt, input[0x2]);\n    let q = [];\n    for (let j = 0x0; sjeNsU['XSlfc'](j, q_l); j++) {\n        let kari = input[sjeNsU['nzYcT'](j, 0x3)]['trim']()['split']('\\x20');\n        q[j] = sjeNsU['CDBBK'](parseInt, kari[0x0]);\n        if (sjeNsU['gAZOD'](q[j], 0x1)) {\n            let i = sjeNsU['OCKgm'](parseInt, kari[0x1]);\n            let c = kari[0x2];\n            let str1 = s['slice'](0x0, i - 0x1);\n            let str2 = s['slice'](i);\n            s = str1 + c + str2;\n        } else {\n            let l = sjeNsU['CDBBK'](parseInt, kari[0x1]);\n            let r = sjeNsU['KRmsO'](parseInt, kari[0x2]);\n            let str = s['slice'](sjeNsU['ZFzbd'](l, 0x1), r);\n            let list = {};\n            let counter = 0x0;\n            for (let i = 0x0; i < str['length']; i++) {\n                if (sjeNsU['gAZOD'](list[str[i]], undefined)) {\n                    counter++;\n                    list[str[i]] = !![];\n                }\n            }\n            console['log'](counter);\n        }\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["7\nabcdbbd\n6\n2 3 6\n1 5 z\n2 1 1\n1 4 a\n1 7 d\n2 1 7", "3\n1\n5"]], "original": "\"use strict\";\nfunction main(input) {\n  let n = parseInt(input[0]);\n  let s = input[1];\n \n  let q_l = parseInt(input[2]);\n  let q = [];\n \n  for(let j=0;j<q_l;j++){\n    let kari = input[j+3].trim().split(\" \")\n    q[j] = parseInt(kari[0]);\n    if(q[j]===1){\n      let i = parseInt(kari[1]);\n      let c = kari[2];\n      let str1 = s.slice(0, i-1);\n      let str2 = s.slice(i);\n \n      s = str1 + c + str2;\n    }else{\n      let l = parseInt(kari[1]);\n      let r = parseInt(kari[2]);\n      let str = s.slice(l-1, r);\n \n      //カウント\n      let list = {};\n      let counter = 0;\n \n      for(let i=0;i<str.length;i++){\n        if(list[str[i]]===undefined){\n          counter++;\n          list[str[i]] = true;\n        }\n      }\n      console.log(counter);\n    }\n  }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02775_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uSZzga = {\n        'TykWr': function (x, y) {\n            return x === y;\n        },\n        'wqHvR': function (x, y) {\n            return x - y;\n        },\n        'PlQNN': function (x, y) {\n            return x < y;\n        },\n        'KjGno': function (x, y) {\n            return x + y;\n        },\n        'uKjvD': function (x, y) {\n            return x + y;\n        },\n        'prNdr': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (uSZzga['TykWr'](input[uSZzga['wqHvR'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = input[0x0];\n    var up = 0x1;\n    var down = 0x0;\n    var nup, ndown;\n    for (var i = 0x0; uSZzga['PlQNN'](i, N['length']); i++) {\n        nup = Math['min'](uSZzga['wqHvR'](0x9, N[i]) + up, uSZzga['KjGno'](uSZzga['uKjvD'](0x1, down), uSZzga['wqHvR'](N[i], 0x0)));\n        ndown = Math['min'](uSZzga['prNdr'](0xa, N[i]) + up, down + uSZzga['wqHvR'](N[i], 0x0));\n        up = nup;\n        down = ndown;\n    }\n    console['log'](down);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["36", "8"], ["91", "3"], ["314159265358979323846264338327950288419716939937551058209749445923078164062862089986280348253421170", "243"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0];\n  var up=1;\n  var down=0;\n  var nup,ndown;\n  for(var i=0;i<N.length;i++){\n    nup=Math.min(9-N[i]+up,1+down+(N[i]-0));\n    ndown=Math.min(10-N[i]+up,down+(N[i]-0));\n    up=nup;\n    down=ndown;\n  }\n  console.log(down);\n\n}\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n\n\n\n  \n", "language": "JavaScript"}
{"filename": "p02851_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const TwlLho = {\n        'tbMfZ': function (x, y) {\n            return x % y;\n        },\n        'iDnra': function (x, y) {\n            return x + y;\n        },\n        'zoYWQ': function (x, y) {\n            return x + y;\n        }\n    };\n    const k = input[0x0][0x1];\n    const as = input[0x1]['map'](Number);\n    const answer = as['reduce']((total, cv, ci) => {\n        const LFOyHg = {\n            'DFRDC': function (x, y) {\n                return TwlLho['tbMfZ'](x, y);\n            },\n            'PNUfe': function (x, y) {\n                return TwlLho['iDnra'](x, y);\n            },\n            'kXiHn': function (x, y) {\n                return TwlLho['iDnra'](x, y);\n            }\n        };\n        var result = 0x0;\n        as['slice'](ci)['reduce']((pv, value, index) => {\n            const remainder = LFOyHg['DFRDC'](LFOyHg['PNUfe'](pv, value), k);\n            if (remainder === LFOyHg['kXiHn'](index, 0x1)) {\n                result++;\n            }\n            return remainder;\n        }, 0x0);\n        return TwlLho['zoYWQ'](total, result);\n    }, null);\n    console['log'](answer);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['map'](line => line['split']('\\x20')));", "test_cases": [["5 4\n1 4 2 3 5", "4"], ["8 4\n4 2 4 2 4 2 4 2", "7"], ["10 7\n14 15 92 65 35 89 79 32 38 46", "8"]], "original": "function Main(input) {\n  const k = input[0][1];\n\n  /** @type {number[]} */\n  const as = input[1].map(Number);\n\n  const answer = as.reduce((total, cv, ci) => {\n    var result = 0;\n\n    as.slice(ci).reduce((pv, value, index) => {\n      const remainder = (pv + value) % k;\n\n      if (remainder === (index + 1)) {\n        result++;\n      }\n\n      return remainder;\n    }, 0);\n\n    return total + result;\n  }, null);\n\n  console.log(answer);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim().split(\"\\n\").map(line => line.split(' ')));", "language": "JavaScript"}
{"filename": "p02852_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const YtdIJr = {\n        'FONxW': function (x, y) {\n            return x === y;\n        },\n        'mrWNw': function (x, y) {\n            return x - y;\n        },\n        'MorNH': function (x, y) {\n            return x - y;\n        },\n        'SyuHZ': function (x, y) {\n            return x > y;\n        },\n        'zhhQK': function (x, y) {\n            return x <= y;\n        },\n        'FjNvl': function (x, y) {\n            return x < y;\n        },\n        'XWzam': function (x, y) {\n            return x === y;\n        },\n        'aKduR': function (x, y) {\n            return x + y;\n        },\n        'AZsRr': function (x, y) {\n            return x - y;\n        },\n        'cTzpC': function (x, y) {\n            return x + y;\n        },\n        'SqdQJ': function (x, y) {\n            return x === y;\n        },\n        'iAFcN': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (YtdIJr['FONxW'](input[YtdIJr['mrWNw'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = YtdIJr['MorNH'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    const M = YtdIJr['mrWNw'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    const S = input[0x1];\n    var cur = S['length'] - 0x1;\n    var ret = [];\n    while (YtdIJr['SyuHZ'](cur, 0x0)) {\n        if (YtdIJr['zhhQK'](cur, M)) {\n            ret['unshift'](cur);\n            break;\n        }\n        for (var i = 0x0; YtdIJr['FjNvl'](i, M); i++) {\n            if (YtdIJr['XWzam'](S[YtdIJr['aKduR'](YtdIJr['AZsRr'](cur, M), i)], '0')) {\n                ret['unshift'](YtdIJr['mrWNw'](M, i));\n                cur = YtdIJr['cTzpC'](YtdIJr['AZsRr'](cur, M), i);\n                break;\n            }\n            if (YtdIJr['SqdQJ'](i, YtdIJr['iAFcN'](M, 0x1))) {\n                console['log'](-0x1);\n                return;\n            }\n        }\n    }\n    console['log'](ret['join']('\\x20'));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["9 3\n0001000100", "1 3 2 3"], ["5 4\n011110", "-1"], ["6 6\n0101010", "6"]], "original": "\n\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  const S=input[1];\n  var cur=S.length-1;\n  var ret=[];\n  while(cur>0){\n    if(cur<=M){\n      ret.unshift(cur);\n      break;\n    }\n    for(var i=0;i<M;i++){\n      if(S[cur-M+i]==='0'){\n        ret.unshift(M-i);\n        cur=cur-M+i;\n        break;\n      }\n      if(i===M-1){\n        console.log(-1);\n        return;\n      }\n    }\n  }\n  console.log(ret.join(' '));\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02962_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const DIwVXw = {\n        'ixWsM': function (x, y) {\n            return x < y;\n        },\n        'uFkXU': function (x, y) {\n            return x == y;\n        },\n        'rHifR': function (x, y) {\n            return x + y;\n        },\n        'JOONG': function (x, y) {\n            return x < y;\n        },\n        'zDrZK': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const s = input[0x0];\n    const t = input[0x1];\n    const match = [];\n    for (i = 0x0; DIwVXw['ixWsM'](i, s['length']); i++) {\n        if (DIwVXw['uFkXU']((s + t)['slice'](i, DIwVXw['rHifR'](i, t['length'])), t)) {\n            match['push'](!![]);\n        } else {\n            match['push'](![]);\n        }\n    }\n    max = 0x0;\n    for (i = 0x0; DIwVXw['JOONG'](i, s['length']); i++) {\n        isInf = ![];\n        now = i;\n        getted = [];\n        while (match[now]) {\n            getted['push'](now);\n            now = DIwVXw['zDrZK'](now + t['length'], s['length']);\n            if (getted['indexOf'](now) != -0x1) {\n                isInf = !![];\n                break;\n            }\n        }\n        if (isInf) {\n            max = -0x1;\n            break;\n        } else {\n            if (DIwVXw['JOONG'](max, getted['length']))\n                max = getted['length'];\n        }\n    }\n    console['log'](max);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abcabab\nab", "3"], ["aa\naaaaaaa", "-1"], ["aba\nbaaab", "0"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst s = input[0]\n\tconst t = input[1]\n\tconst match = []\n\tfor(i=0; i < s.length; i++){\n\t\tif((s+t).slice(i,i+t.length) == t){\n\t\t\tmatch.push(true)\n\t\t}else{\n\t\t\tmatch.push(false)\n\t\t}\n\t}\n\tmax = 0\n\tfor(i=0; i < s.length; i++){\n\t\tisInf = false\n\t\tnow = i\n\t\tgetted = []\n\t\twhile(match[now]){\n\t\t\tgetted.push(now)\n\t\t\tnow = (now + t.length) % s.length\n\t\t\tif(getted.indexOf(now) != -1){\n\t\t\t\tisInf = true\n\t\t\t\tbreak\n\t\t\t} \n\t\t}\n\t\tif(isInf){\n\t\t\tmax = -1\n\t\t\tbreak\n\t\t}else{\n\t\t\tif(max < getted.length) max = getted.length\n\t\t}\n\t}\n\tconsole.log(max)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02964_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const pXHrUA = {\n        'rmbxd': function (callee, param1) {\n            return callee(param1);\n        },\n        'wiIpC': function (callee, param1) {\n            return callee(param1);\n        },\n        'eQDLJ': function (x, y) {\n            return x < y;\n        },\n        'hrLSM': function (x, y) {\n            return x != y;\n        },\n        'BirHz': function (x, y) {\n            return x == y;\n        },\n        'WiJWK': function (x, y) {\n            return x % y;\n        },\n        'EoVDF': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    input1 = input[0x0]['split']('\\x20');\n    const N = pXHrUA['rmbxd'](parseInt, input1[0x0]);\n    const K = pXHrUA['wiIpC'](parseInt, input1[0x1]);\n    const As = input[0x1]['split']('\\x20');\n    var filtered = [];\n    var results = [''];\n    for (i = 0x0; pXHrUA['eQDLJ'](i, K); i++) {\n        for (j = 0x0; j < N; j++) {\n            if (pXHrUA['hrLSM'](filtered['indexOf'](As[j]), -0x1)) {\n                var id = filtered['indexOf'](As[j]);\n                filtered = filtered['slice'](0x0, id);\n            } else {\n                filtered['push'](As[j]);\n            }\n        }\n        if (results['indexOf'](filtered['join']('\\x20')) == -0x1) {\n            results['push'](filtered['join']('\\x20'));\n        } else {\n            break;\n        }\n    }\n    const roopstart = results['indexOf'](filtered['join']('\\x20'));\n    if (pXHrUA['BirHz'](roopstart, K)) {\n        console['log'](results[roopstart]);\n    } else {\n        const roopId = pXHrUA['WiJWK'](pXHrUA['EoVDF'](K, roopstart), results['length'] - roopstart);\n        console['log'](results[roopstart + roopId]);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n1 2 3", "2 3"], ["5 10\n1 2 3 2 3", "3"], ["6 1000000000000\n1 1 2 2 3 3", ""], ["11 97\n3 1 4 1 5 9 2 6 5 3 5", "9 2 6"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tinput1 = input[0].split(\" \")\n\tconst N = parseInt(input1[0])\n\tconst K = parseInt(input1[1])\n\tconst As = input[1].split(\" \")\n\tvar filtered = []\n\tvar results = [\"\"]\n\tfor(i=0; i < K; i++){\n\t\tfor(j=0; j < N; j++){\n\t\t\tif(filtered.indexOf(As[j]) != -1){\n\t\t\t\tvar id = filtered.indexOf(As[j])\n\t\t\t\tfiltered = filtered.slice(0, id)\n\t\t\t}else{\n\t\t\t\tfiltered.push(As[j])\n\t\t\t}\n\t\t}\n\t\tif(results.indexOf(filtered.join(\" \")) == -1){\n\t\t\tresults.push(filtered.join(\" \"))\n\t\t}else{\n\t\t\tbreak\n\t\t}\n\t}\n\tconst roopstart = results.indexOf(filtered.join(\" \"))\n\tif(roopstart == K){\n\t\tconsole.log(results[roopstart])\n\t}else{\n\t\tconst roopId = (K - roopstart) % (results.length - roopstart)\n\t\tconsole.log(results[roopstart + roopId])\n\t}\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03007_1", "type": "JavaScript", "obfuscated": "log = console['log'];\nvar stdin = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nvar lines = stdin['split']('\\x0a')['filter'](v => v !== '')['map'](v => v['split']('\\x20')['map'](Number));\nvar N = lines[0x0];\nvar A = lines[0x1];\nvar processList = [];\nA['sort']((a, b) => a - b);\nvar plusList = [];\nvar minusList = [];\nplusList['push'](A['pop']());\nminusList['push'](A['shift']());\nA['forEach'](v => {\n    var EXHWhN = {\n        'QOPib': function (x, y) {\n            return x >= y;\n        }\n    };\n    EXHWhN['QOPib'](v, 0x0) ? plusList['push'](v) : minusList['push'](v);\n});\nvar tmp = minusList['pop']();\nfor (var i = 0x0; i < plusList['length'] - 0x1; i++) {\n    var plus = plusList['pop']();\n    processList['push'](tmp + '\\x20' + plus);\n    tmp = tmp - plus;\n}\nvar lastplus = plusList['pop']();\nfor (var i = 0x0; i < minusList['length']; i++) {\n    var minus = minusList['pop']();\n    processList['push'](lastplus + '\\x20' + minus);\n    lastplus = lastplus - minus;\n}\nprocessList['push'](lastplus + '\\x20' + tmp);\nlog(lastplus - tmp);\nprocessList['forEach'](v => log(v));", "test_cases": [["3\n1 -1 2", "4\n-1 1\n2 -2"], ["3\n1 1 1", "1\n1 1\n1 0"]], "original": "log = console.log;\nvar stdin = require(\"fs\").readFileSync(\"/dev/stdin\", \"UTF-8\");\nvar lines = stdin\n  .split(\"\\n\")\n  .filter(v => v !== \"\")\n  .map(v => v.split(\" \").map(Number));\n\nvar N = lines[0];\nvar A = lines[1];\nvar processList = [];\n\nA.sort((a, b) => a - b);\nvar plusList = [];\nvar minusList = [];\nplusList.push(A.pop());\nminusList.push(A.shift());\n\nA.forEach(v => {\n  v >= 0 ? plusList.push(v) : minusList.push(v);\n});\n\nvar tmp = minusList.pop();\nfor (var i = 0; i < plusList.length - 1; i++) {\n  var plus = plusList.pop();\n  processList.push(tmp + \" \" + plus);\n  tmp = tmp - plus;\n}\n\nvar lastplus = plusList.pop()\nfor (var i = 0; i < minusList.length; i++) {\n  var minus = minusList.pop();\n  processList.push(lastplus + \" \" + minus);\n  lastplus = lastplus - minus;\n}\n\nprocessList.push(lastplus + \" \" + tmp)\nlog(lastplus - tmp)\nprocessList.forEach(v=>log(v))", "language": "JavaScript"}
{"filename": "p03027_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bNcnHp = {\n        'YdEwx': function (x, y) {\n            return x < y;\n        },\n        'Ezsym': function (x, y) {\n            return x % y;\n        },\n        'DERAT': function (x, y) {\n            return x * y;\n        },\n        'CVMrw': function (x, y) {\n            return x + y;\n        },\n        'RiHKD': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var SHBqEW = '4|3|2|5|0|1'['split']('|');\n    var sFxHzi = 0x0;\n    while (!![]) {\n        switch (SHBqEW[sFxHzi++]) {\n        case '0':\n            ans['fill'](0x0);\n            continue;\n        case '1':\n            for (var i = 0x0; bNcnHp['YdEwx'](i, Qs['length']); i++) {\n                for (var j = 0x0; j < Qs[i][0x2]; j++) {\n                    if (j == 0x0) {\n                        ans[i] = bNcnHp['Ezsym'](Qs[i][0x0], 0xf4243);\n                    } else {\n                        ans[i] = bNcnHp['Ezsym'](bNcnHp['DERAT'](ans[i], bNcnHp['CVMrw'](Qs[i][0x0], bNcnHp['DERAT'](j, Qs[i][0x1]))), 0xf4243);\n                    }\n                }\n                console['log'](ans[i]);\n            }\n            continue;\n        case '2':\n            var Qs = input['slice'](0x1, bNcnHp['CVMrw'](Q, 0x1))['map'](x => x['split']('\\x20')['map'](y => parseInt(y)));\n            continue;\n        case '3':\n            var Q = bNcnHp['RiHKD'](parseInt, input[0x0]);\n            continue;\n        case '4':\n            input = input['split']('\\x0a');\n            continue;\n        case '5':\n            var ans = new Array(Q);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n7 2 4\n12345 67890 2019", "9009\n916936"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\");\n  \tvar Q = parseInt(input[0]);\n      var Qs = input.slice(1, Q+1).map(x => x.split(\" \").map(y => parseInt(y)));\n \tvar ans = new Array(Q);\n    ans.fill(0);\n  \tfor(var i=0; i < Qs.length; i++){\n       for(var j=0; j < Qs[i][2]; j++){\n         if(j == 0){\n           ans[i] = Qs[i][0] % 1000003;\n         }else{\n           ans[i] = ans[i]*(Qs[i][0] + j*Qs[i][1]) % 1000003;\n         }\n       }\n      console.log(ans[i]);\n    }\n }\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03040_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction I(t, i) {\n    this['_s'] = t['split']('\\x0a'), this['_c'] = 0x0, this['_l'] = 0x0, this['_f'] = i || Number;\n}\nI['prototype']['a'] = function (t) {\n    var GEWeEk = {\n        'FsPeO': function (x, y) {\n            return x === y;\n        }\n    };\n    var i = this['_s'][this['_l']];\n    if (i) {\n        var s = i['trim']()['split']('\\x20'), h = s[this['_c']];\n        return this['_c']++, GEWeEk['FsPeO'](s['length'], this['_c']) && (this['_c'] = 0x0, this['_l']++), t ? t(h) : this['_f'](h);\n    }\n}, I['prototype']['l'] = function (t) {\n    var i = this['_s'][this['_l']];\n    if (i)\n        return this['_c'] = 0x0, this['_l']++, i['split']('\\x20')['map'](t || this['_f']);\n}, module['exports'] = I;\nfunction main(input) {\n    var bvzHjP = {\n        'jmxku': '3|0|4|2|1',\n        'EFVkH': function (x, y) {\n            return x < y;\n        },\n        'oMAdm': function (x, y) {\n            return x === y;\n        },\n        'jpAOS': function (x, y) {\n            return x / y;\n        }\n    };\n    var GvELEu = bvzHjP['jmxku']['split']('|');\n    var vtKilm = 0x0;\n    while (!![]) {\n        switch (GvELEu[vtKilm++]) {\n        case '0':\n            var q = o['a']();\n            continue;\n        case '1':\n            for (var i = 0x0; bvzHjP['EFVkH'](i, q); i++) {\n                var q1 = o['a']();\n                if (bvzHjP['oMAdm'](q1, 0x1)) {\n                    var a = o['a']();\n                    var b = o['a']();\n                    c += b;\n                    sorted['push'](a);\n                } else {\n                    sorted = sorted['sort']((a, b) => a - b);\n                    var mid = sorted[Math['floor'](bvzHjP['jpAOS'](sorted['length'] - 0x1, 0x2))];\n                    var ans = sorted['map'](x => Math['abs'](x - mid))['reduce']((acc, cur) => acc + cur) + c;\n                    console['log'](mid, ans);\n                }\n            }\n            continue;\n        case '2':\n            var sorted = [];\n            continue;\n        case '3':\n            var o = new I(input);\n            continue;\n        case '4':\n            var c = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 4 2\n2\n1 1 -8\n2", "4 2\n1 -3"], ["4\n1 -1000000000 1000000000\n1 -1000000000 1000000000\n1 -1000000000 1000000000\n2", "-1000000000 3000000000"]], "original": "\"use strict\";\nfunction I(t,i){this._s=t.split(\"\\n\"),this._c=0,this._l=0,this._f=i||Number}I.prototype.a=function(t){var i=this._s[this._l];if(i){var s=i.trim().split(\" \"),h=s[this._c];return this._c++,s.length===this._c&&(this._c=0,this._l++),t?t(h):this._f(h)}},I.prototype.l=function(t){var i=this._s[this._l];if(i)return this._c=0,this._l++,i.split(\" \").map(t||this._f)},module.exports=I;\n\nfunction main(input) {\n  var o = new I(input);\n\n  var q = o.a();\n\n  var c = 0;\n  var sorted = [];\n\n  for (var i = 0; i < q; i ++) {\n    var q1 = o.a();\n    if (q1 === 1) {\n      var a = o.a();\n      var b = o.a();\n      c += b;\n      \n      sorted.push(a);\n    } else {\n      sorted = sorted.sort((a, b) => a - b);\n      var mid = sorted[Math.floor((sorted.length - 1) / 2)];\n      var ans = sorted.map(x => Math.abs(x - mid)).reduce((acc, cur) => acc + cur) + c;\n      console.log(mid, ans);\n    }\n  }\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03090_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var CqvmFd = {\n        'IqaSt': function (x, y) {\n            return x === y;\n        },\n        'vJxiJ': 'string'\n    };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var KFuMpb = '2|1|0|3|4'['split']('|');\n        var uWKxKa = 0x0;\n        while (!![]) {\n            switch (KFuMpb[uWKxKa++]) {\n            case '0':\n                r = s[y]['pop']();\n                continue;\n            case '1':\n                if (CqvmFd['IqaSt'](typeof s[y], CqvmFd['vJxiJ']))\n                    s[y] = s[y]['split']('\\x20')['reverse']();\n                continue;\n            case '2':\n                var s = this['_s'], y = this['_y'], r;\n                continue;\n            case '3':\n                if (!s[y]['length'])\n                    this['_y']++;\n                continue;\n            case '4':\n                return f ? r : +r;\n            }\n            break;\n        }\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](main());\nfunction main() {\n    var BxjBNh = {\n        'dkgXx': function (x, y) {\n            return x + y;\n        },\n        'rEfpP': function (x, y) {\n            return x === y;\n        },\n        'JRKLS': function (x, y) {\n            return x === y;\n        },\n        'UmeWb': function (x, y) {\n            return x + y;\n        }\n    };\n    var n = o['a']();\n    var ans = [];\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = BxjBNh['dkgXx'](i, 0x1); j <= n; j++) {\n            if (n % 0x2 && BxjBNh['rEfpP'](BxjBNh['dkgXx'](i, j), n))\n                continue;\n            if (n % 0x2 === 0x0 && BxjBNh['JRKLS'](i + j, BxjBNh['UmeWb'](n, 0x1)))\n                continue;\n            ans['push'](BxjBNh['UmeWb'](BxjBNh['UmeWb'](i, '\\x20'), j));\n        }\n    }\n    console['log'](ans['length']);\n    return ans['join']('\\x0a');\n}", "test_cases": [["3", "2\n1 3\n2 3"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var ans = [];\n  for(var i = 1; i <= n; i++){\n    for(var j = i+1; j <= n; j++){\n      if(n % 2 && i+j === n)continue;\n      if(n % 2 === 0 && i+j === n+1)continue;\n      ans.push(i+\" \"+j);\n    }\n  }\n  console.log(ans.length);\n  return ans.join(\"\\n\");\n}", "language": "JavaScript"}
{"filename": "p03176_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var znPXTx = {\n        'YGZxQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'xXuez': function (x, y) {\n            return x + y;\n        },\n        'WJVxT': function (x, y) {\n            return x < y;\n        },\n        'daSLd': function (x, y) {\n            return x > y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var N = znPXTx['YGZxQ'](parseInt, input[0x0]);\n    var h = input[0x1]['split']('\\x20')['map'](i => parseInt(i));\n    var a = input[0x2]['split']('\\x20')['map'](i => parseInt(i));\n    var dp = new Array(znPXTx['xXuez'](N, 0x1))['fill'](0x0);\n    var ans = 0x0;\n    for (var i = 0x0; i < N; i++) {\n        var max = 0x0;\n        tmp = a[i] + dp[h[i]];\n        for (var j = h[i]; znPXTx['WJVxT'](j, znPXTx['xXuez'](N, 0x1)); j++) {\n            if (znPXTx['daSLd'](tmp, dp[j])) {\n                dp[j] = tmp;\n            } else {\n                break;\n            }\n        }\n        ans = Math['max'](ans, dp[h[i]]);\n    }\n    console['log']('%s', ans);\n    return ans;\n}\nfunction debug(n) {\n    var wbwCqh = {\n        'nEXVO': function (x, y) {\n            return x + y;\n        },\n        'yCBWw': 'input',\n        'mlrab': function (callee, param1) {\n            return callee(param1);\n        },\n        'NAGlN': function (x, y) {\n            return x == y;\n        },\n        'XJStT': 'output',\n        'UlMHl': 'result'\n    };\n    var input = document['getElementById'](wbwCqh['nEXVO'](wbwCqh['yCBWw'], n))['value'];\n    var ans = wbwCqh['mlrab'](Main, input);\n    var result = 'WA';\n    if (wbwCqh['NAGlN'](ans, document['getElementById'](wbwCqh['nEXVO'](wbwCqh['XJStT'], n))['value']['split']('\\x0a')[0x0])) {\n        result = 'AC';\n    }\n    document['getElementById'](wbwCqh['nEXVO'](wbwCqh['UlMHl'], n))['innerHTML'] = result;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n3 1 4 2\n10 20 30 40", "60"], ["1\n1\n10", "10"], ["5\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000", "5000000000"], ["9\n4 2 5 8 3 6 1 7 9\n6 8 8 4 6 3 5 7 5", "31"]], "original": "\n\nfunction Main(input) {\n  input = input.split(\"\\n\");\n  var N = parseInt(input[0]);\n  var h = input[1].split(\" \").map(i => parseInt(i));\n  var a = input[2].split(\" \").map(i => parseInt(i));\n  var dp = new Array(N+1).fill(0);\n  //dp[h[0]]=a[0];\n  var ans=0;\n  for(var i=0;i<N;i++){\n    var max=0;\n    tmp=a[i]+dp[h[i]];\n    for(var j=h[i];j<N+1;j++){\n      if(tmp>dp[j]){\n        dp[j]=tmp;\n      }else{\n        break;\n      }\n\n    }\n    ans=Math.max(ans,dp[h[i]]);\n  }\n\n  console.log('%s', ans);\n  return ans;\n}\n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(n){\n  var input = document.getElementById(\"input\"+n).value;\n  var ans=Main(input);\n  var result=\"WA\";\n  if(ans==document.getElementById(\"output\"+n).value.split(\"\\n\")[0]){\n    result=\"AC\";\n  }\n  document.getElementById(\"result\"+n).innerHTML=result;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03255_1", "type": "JavaScript", "obfuscated": "var toInt = x => parseInt(x, 0xa);\nvar toIntArr = arr => arr['map'](x => toInt(x));\nvar abs = x => x > 0x0 ? x : -x;\nfunction min() {\n    var yXGQfz = {\n        'UQukA': function (x, y) {\n            return x < y;\n        },\n        'MOazn': function (x, y) {\n            return x < y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; yXGQfz['UQukA'](i, rest['length']); i++)\n        if (yXGQfz['MOazn'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nfunction max() {\n    var bNcBGY = {\n        'vCIke': function (x, y) {\n            return x < y;\n        },\n        'IBXgz': function (x, y) {\n            return x > y;\n        }\n    };\n    var rest = arguments, val = rest[0x0];\n    for (var i = 0x1; bNcBGY['vCIke'](i, rest['length']); i++)\n        if (bNcBGY['IBXgz'](rest[i], val))\n            val = rest[i];\n    return val;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction Main(input) {\n    var JqeCud = {\n        'gxaWm': '6|10|5|9|0|8|3|7|2|4|1',\n        'QkAhc': function (x, y) {\n            return x < y;\n        },\n        'jeKpL': function (x, y) {\n            return x + y;\n        },\n        'mfSBR': function (x, y) {\n            return x - y;\n        },\n        'mxGcs': function (x, y) {\n            return x > y;\n        },\n        'kGLyz': function (x, y) {\n            return x < y;\n        },\n        'kPkuK': function (x, y) {\n            return x * y;\n        },\n        'Ubytt': function (x, y) {\n            return x * y;\n        },\n        'SjHLk': function (x, y) {\n            return x * y;\n        },\n        'oKtWd': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'zlMPu': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var mZQGTd = JqeCud['gxaWm']['split']('|');\n    var eXguzd = 0x0;\n    while (!![]) {\n        switch (mZQGTd[eXguzd++]) {\n        case '0':\n            var xs = toIntArr(input[0x1]['split']('\\x20'));\n            continue;\n        case '1':\n            console['log'](ans);\n            continue;\n        case '2':\n            var has = 0x0;\n            continue;\n        case '3':\n            for (var i = 0x1; JqeCud['QkAhc'](i, n); i++) {\n                ss[i] = JqeCud['jeKpL'](xs[i], ss[JqeCud['mfSBR'](i, 0x1)]);\n            }\n            continue;\n        case '4':\n            for (var i = JqeCud['mfSBR'](n, 0x1); JqeCud['mxGcs'](i, -0x1); i--) {\n                has++;\n                if (has > 0x2 && JqeCud['kGLyz'](x, JqeCud['mfSBR'](JqeCud['kPkuK'](ss[i] * JqeCud['mfSBR'](has, 0x1), 0x2), JqeCud['kPkuK'](xs[i], 0x2)))) {\n                    has = 0x1;\n                    ans += x;\n                }\n                ans += JqeCud['Ubytt'](xs[i], JqeCud['SjHLk'](JqeCud['oKtWd'](max, has, 0x2), 0x2) + 0x1);\n            }\n            continue;\n        case '5':\n            var n = temp[0x0];\n            continue;\n        case '6':\n            var input = input['split']('\\x0a');\n            continue;\n        case '7':\n            var ans = JqeCud['Ubytt'](n + 0x1, x);\n            continue;\n        case '8':\n            var ss = [xs[0x0]];\n            continue;\n        case '9':\n            var x = temp[0x1];\n            continue;\n        case '10':\n            var temp = JqeCud['zlMPu'](toIntArr, input[0x0]['split']('\\x20'));\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2 100\n1 10", "355"], ["5 1\n1 999999997 999999998 999999999 1000000000", "19999999983"], ["10 8851025\n38 87 668 3175 22601 65499 90236 790604 4290609 4894746", "150710136"], ["16 10\n1 7 12 27 52 75 731 13856 395504 534840 1276551 2356789 9384806 19108104 82684732 535447408", "3256017715"]], "original": "var toInt = x=>parseInt(x,10);\nvar toIntArr = arr=>arr.map(x=>toInt(x));\nvar abs = x=>x>0?x:-x;\nfunction min(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]<val)val = rest[i];return val}\nfunction max(){var rest = arguments,val=rest[0];for(var i=1;i<rest.length;i++)if(rest[i]>val)val = rest[i];return val}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n \nfunction Main(input){\n\tvar input = input.split('\\n');\n\tvar temp = toIntArr(input[0].split(' '));\n\tvar n = temp[0];\n\tvar x = temp[1];\n\tvar xs = toIntArr(input[1].split(' '));\n\tvar ss = [xs[0]];\n\n\tfor(var i = 1; i < n; i++){\n\t\tss[i] = xs[i] + ss[i-1];\n\t}\n\tvar ans = (n+1)*x;\n\n\tvar has = 0;\n\tfor(var i = n-1; i > -1; i--){\n\t\thas++;\n\t\tif(has>2 && x < ss[i]*(has-1)*2 - xs[i]*2){\n\t\t\thas = 1;\n\t\t\tans += x;\n\t\t}\n\t\tans += xs[i]*(max(has,2)*2 + 1);\n\t}\n\t\n\tconsole.log(ans);\n\n}", "language": "JavaScript"}
{"filename": "p03277_1", "type": "JavaScript", "obfuscated": "function gets(str) {\n    this['_s'] = str['split']('\\x0a');\n    this['_y'] = 0x0;\n}\n;\ngets['prototype'] = {\n    'a': function (f) {\n        var rSxlcN = {\n            'AudBF': function (x, y) {\n                return x === y;\n            }\n        };\n        var s = this['_s'], y = this['_y'], r;\n        if (rSxlcN['AudBF'](typeof s[y], 'string'))\n            s[y] = s[y]['split']('\\x20')['reverse']();\n        r = s[y]['pop']();\n        if (!s[y]['length'])\n            this['_y']++;\n        return f ? r : +r;\n    },\n    'l': function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    },\n    'm': function (n, f) {\n        var qBKpOt = {\n            'IHSzG': function (x, y) {\n                return x + y;\n            },\n            'yFnuq': function (x, y) {\n                return x < y;\n            }\n        };\n        var s = this['_s'], y = this['_y'], r = [], i = 0x0;\n        if (f)\n            for (; i < n; i++)\n                r[i] = s[qBKpOt['IHSzG'](y, i)]['split']('\\x20');\n        else\n            for (; qBKpOt['yFnuq'](i, n); i++)\n                r[i] = s[y + i]['split']('\\x20')['map'](a => +a);\n        this['_y'] += n;\n        return r;\n    }\n};\nvar o = new gets(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](main());\nfunction main() {\n    var hBUHyP = {\n        'FPeie': function (x, y) {\n            return x < y;\n        },\n        'ICevp': function (x, y) {\n            return x + y;\n        },\n        'IrUdZ': function (x, y) {\n            return x + y;\n        },\n        'MqLDt': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var n = o['a']();\n    var a = o['l']();\n    var b = [];\n    if (n <= 0x2)\n        return Math['max'](...a);\n    for (var i = 0x0; hBUHyP['FPeie'](i, n - 0x1); i++)\n        a[hBUHyP['ICevp'](n, i)] = Math['max'](a[i], a[hBUHyP['IrUdZ'](i, 0x1)]);\n    return hBUHyP['MqLDt'](middle, a);\n    function middle(a) {\n        a['sort']((a, b) => a - b);\n        return a[a['length'] >> 0x1];\n    }\n}", "test_cases": [["3\n10 30 20", "30"], ["1\n10", "10"], ["10\n5 9 5 9 8 9 3 5 4 3", "8"]], "original": "function gets(str){\n  this._s = str.split(\"\\n\");\n  this._y = 0;\n};\ngets.prototype = {\n  a: function(f){\n    var s = this._s, y = this._y, r;\n    if(typeof s[y] === \"string\")s[y] = s[y].split(\" \").reverse();\n    r = s[y].pop();\n    if(!s[y].length)this._y++;\n    return f?r:+r;\n  },\n  l: function(f){\n    var s = this._s[this._y++].split(\" \");\n    return f?s:s.map(a=>+a);\n  },\n  m: function(n,f){\n    var s = this._s, y = this._y, r = [], i = 0;\n    if(f)for(;i < n; i++)r[i] = s[y+i].split(\" \");\n    else for(;i < n; i++)r[i] = s[y+i].split(\" \").map(a=>+a);\n    this._y += n;\n    return r;\n  },\n};\nvar o=new gets(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var a = o.l();\n  var b = [];\n  if(n <= 2)return Math.max(...a);\n  for(var i = 0; i < n-1; i++)a[n+i] = Math.max(a[i],a[i+1]);\n  return middle(a);\n\n  function middle(a){\n    a.sort((a,b)=>a-b);\n    return a[a.length>>1];\n  }\n}", "language": "JavaScript"}
{"filename": "p03298_1", "type": "JavaScript", "obfuscated": "m = ('' + require('fs')['readFileSync'](0x0))['split']`\n`;\nn = m[a = 0x0];\ns = m[0x1];\nfor (b = 0x1 << n; b--;) {\n    u = 0x0;\n    for (i = n; i--;)\n        u = b & 0x1 << i ? s[i] + u : u + s[i];\n    m[u] = -~m[u];\n}\nfor (b = 0x1 << n; b--;) {\n    u = 0x0;\n    for (i = n; i--;)\n        u = b & 0x1 << i ? s[0x2 * n + ~i] + u : u + s[0x2 * n + ~i];\n    a += ~~m[u];\n}\nconsole['log'](a);", "test_cases": [["4\ncabaacba", "4"], ["11\nmippiisssisssiipsspiim", "504"], ["4\nabcdefgh", "0"], ["18\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "9075135300"]], "original": "m=(\"\"+require(\"fs\").readFileSync(0)).split`\n`;n=m[a=0];s=m[1];for(b=1<<n;b--;){u=0;for(i=n;i--;)u=b&(1<<i)?s[i]+u:u+s[i];m[u]=-~m[u]}for(b=1<<n;b--;){u=0;for(i=n;i--;)u=b&(1<<i)?s[2*n+~i]+u:u+s[2*n+~i];a+=~~m[u]}console.log(a)", "language": "JavaScript"}
{"filename": "p03330_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var BTwmYA = {\n        'iPQfG': function (x, y) {\n            return x < y;\n        },\n        'zZHrQ': function (x, y) {\n            return x + y;\n        },\n        'qNOkH': function (x, y) {\n            return x + y;\n        },\n        'FGqDM': function (callee, param1) {\n            return callee(param1);\n        },\n        'lTZKy': function (x, y) {\n            return x % y;\n        },\n        'CBLHP': function (x, y) {\n            return x < y;\n        },\n        'SItBb': function (x, y) {\n            return x === y;\n        },\n        'fIMjl': function (x, y) {\n            return x * y;\n        }\n    };\n    s = s['split']('\\x0a');\n    s[0x0] = s[0x0]['split']('\\x20')['map'](a => +a);\n    var n = s[0x0][0x0];\n    var c = s[0x0][0x1];\n    var d = [], a = [];\n    for (var i = 0x0; BTwmYA['iPQfG'](i, c); i++) {\n        d[i] = s[BTwmYA['zZHrQ'](i, 0x1)]['split']('\\x20')['map'](a => +a);\n    }\n    for (i = 0x0; i < n; i++) {\n        a[i] = s[BTwmYA['qNOkH'](i + 0x1, c)]['split']('\\x20')['map'](a => +a - 0x1);\n    }\n    var z = BTwmYA['FGqDM'](Array, 0x3)['fill'](0x0)['map'](a => Array(c)['fill'](0x0));\n    for (i = 0x0; i < n; i++)\n        for (var j = 0x0; j < n; j++) {\n            var t = BTwmYA['lTZKy'](i + j, 0x3);\n            z[t][a[i][j]]++;\n        }\n    var ans = 0x218711a00;\n    for (i = 0x0; BTwmYA['iPQfG'](i, c); i++) {\n        for (j = 0x0; BTwmYA['CBLHP'](j, c); j++) {\n            if (i === j)\n                continue;\n            for (var k = 0x0; k < c; k++) {\n                if (BTwmYA['SItBb'](i, k) || BTwmYA['SItBb'](j, k))\n                    continue;\n                t = 0x0;\n                for (var l = 0x0; BTwmYA['iPQfG'](l, c); l++) {\n                    t += BTwmYA['fIMjl'](z[0x0][l], d[l][i]);\n                    t += z[0x1][l] * d[l][j];\n                    t += z[0x2][l] * d[l][k];\n                }\n                ans = Math['min'](ans, t);\n            }\n        }\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3", "3"], ["4 3\n0 12 71\n81 0 53\n14 92 0\n1 1 2 1\n2 1 1 2\n2 2 1 3\n1 1 2 2", "428"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  s[0] = s[0].split(\" \").map(a=>+a);\n  var n = s[0][0];\n  var c = s[0][1];\n  var d = [], a = [];\n  for(var i = 0; i < c; i++){\n    d[i] = s[i+1].split(\" \").map(a=>+a);\n  }\n  for(i = 0; i < n; i++){\n    a[i] = s[i+1+c].split(\" \").map(a=>+a-1);\n  }\n  var z = Array(3).fill(0).map(a=>Array(c).fill(0));\n  for(i = 0; i < n; i++)\n  for(var j = 0; j < n; j++){\n    var t = (i + j) % 3;\n    z[t][a[i][j]]++;\n  }\n  var ans = 9e9;\n  for(i = 0; i < c; i++){\n    for(j = 0; j < c; j++){\n      if(i === j)continue;\n      for(var k = 0; k < c; k++){\n        if(i === k || j === k)continue;\n        t = 0;\n        for(var l = 0; l < c; l++){\n          t += z[0][l] * d[l][i];\n          t += z[1][l] * d[l][j];\n          t += z[2][l] * d[l][k];\n        }\n        ans = Math.min(ans, t);\n      }\n    }\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03373_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(s) {\n    const ScVUEf = {\n        'tsiky': function (x, y) {\n            return x + y;\n        },\n        'utGeJ': function (x, y) {\n            return x * y;\n        },\n        'XVTbJ': function (x, y) {\n            return x * y;\n        },\n        'FxbUQ': function (x, y) {\n            return x - y;\n        },\n        'uGgHn': function (x, y) {\n            return x - y;\n        },\n        'CsPvP': function (x, y) {\n            return x * y;\n        }\n    };\n    s = s['split']('\\x0a')[0x0]['split']('\\x20')['map'](n => Number(n));\n    const A = s[0x0];\n    const B = s[0x1];\n    const C = s[0x2];\n    const X = s[0x3];\n    const Y = s[0x4];\n    const min = Math['min'](X, Y);\n    const case1 = ScVUEf['tsiky'](ScVUEf['utGeJ'](A, X), ScVUEf['XVTbJ'](B, Y));\n    const case2 = ScVUEf['utGeJ'](ScVUEf['utGeJ'](0x2, C), min) + ScVUEf['FxbUQ'](X, min) * A + ScVUEf['XVTbJ'](ScVUEf['uGgHn'](Y, min), B);\n    const case3 = ScVUEf['XVTbJ'](ScVUEf['CsPvP'](0x2, C), Math['max'](X, Y));\n    const answer = Math['min'](...[\n        case1,\n        case2,\n        case3\n    ]);\n    console['log'](answer);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1500 2000 1600 3 2", "7900"], ["1500 2000 1900 3 2", "8500"], ["1500 2000 500 90000 100000", "100000000"]], "original": "'use strict'\n\nfunction main(s) {\n  s = s.split('\\n')[0].split(' ').map(n => Number(n));\n\n  const A = s[0];\n  const B = s[1];\n  const C = s[2];\n  const X = s[3];\n  const Y = s[4];\n  const min = Math.min(X, Y);\n\n  // AとBをそれぞれ買う\n  const case1 = A * X + B * Y\n\n  // ABセットで可能な限り組み替えて、残りをそれぞれ買う\n  const case2 = (2 * C * min) + ((X - min) * A) + ((Y - min) * B)\n\n  // 全てABセットで組み替える\n  const case3 = 2 * C * Math.max(X, Y);\n\n  const answer = Math.min(...[case1, case2, case3]);\n  console.log(answer);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03436_1", "type": "JavaScript", "obfuscated": "'use strict';\nconsole['log'](function (args) {\n    const BsGAFa = {\n        'JXoDp': function (callee, param1) {\n            return callee(param1);\n        },\n        'cUtOL': function (x, y) {\n            return x <= y;\n        },\n        'YCepp': function (x, y) {\n            return x < y;\n        },\n        'kcsHa': function (callee, param1) {\n            return callee(param1);\n        },\n        'wvCBv': function (x, y) {\n            return x + y;\n        },\n        'KJdDD': function (x, y) {\n            return x === y;\n        },\n        'fJDft': function (x, y) {\n            return x - y;\n        }\n    };\n    const tmp = args['trim']()['split']('\\x0a');\n    const HW = tmp[0x0]['split']('\\x20')['map'](v => v | 0x0);\n    const H = HW[0x0], W = HW[0x1];\n    const map = [BsGAFa['JXoDp'](Array, W + 0x2)['fill'](Infinity)];\n    let s = 0x0;\n    for (let y = 0x1; BsGAFa['cUtOL'](y, H); y++) {\n        map['push']([Infinity]);\n        for (let x = 0x0; BsGAFa['YCepp'](x, W); x++) {\n            if (tmp[y][x] === '.') {\n                s++;\n                map[y]['push'](0x0);\n            } else\n                map[y]['push'](Infinity);\n        }\n        map[y]['push'](Infinity);\n    }\n    map['push'](BsGAFa['kcsHa'](Array, W + 0x2)['fill'](Infinity));\n    const dir = [\n        [\n            -0x1,\n            0x0\n        ],\n        [\n            0x0,\n            -0x1\n        ],\n        [\n            0x1,\n            0x0\n        ],\n        [\n            0x0,\n            0x1\n        ]\n    ];\n    const queue = [[\n            0x1,\n            0x1,\n            0x2\n        ]];\n    do {\n        const q = queue['shift']();\n        for (const d of dir) {\n            const x = BsGAFa['wvCBv'](q[0x0], d[0x0]), y = q[0x1] + d[0x1];\n            if (BsGAFa['KJdDD'](x, W) && BsGAFa['KJdDD'](y, H))\n                return BsGAFa['fJDft'](s, q[0x2]);\n            if (map[y][x] === 0x0) {\n                map[y][x] = BsGAFa['wvCBv'](q[0x2], 0x1);\n                queue['push']([\n                    x,\n                    y,\n                    BsGAFa['wvCBv'](q[0x2], 0x1)\n                ]);\n            }\n        }\n    } while (queue[0x0]);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3 3\n..#\n#..\n...", "2"], ["10 37\n.....................................\n...#...####...####..###...###...###..\n..#.#..#...#.##....#...#.#...#.#...#.\n..#.#..#...#.#.....#...#.#...#.#...#.\n.#...#.#..##.#.....#...#.#.###.#.###.\n.#####.####..#.....#...#..##....##...\n.#...#.#...#.#.....#...#.#...#.#...#.\n.#...#.#...#.##....#...#.#...#.#...#.\n.#...#.####...####..###...###...###..\n.....................................", "209"]], "original": "'use strict';\nconsole.log(function(args){\n  const tmp = args.trim().split('\\n');\n  const HW = tmp[0].split(' ').map(v=>v|0);\n  const H = HW[0], W = HW[1];\n  const map = [Array(W+2).fill(Infinity)]\n  let s = 0;\n  for ( let y = 1; y <= H; y++ ) {\n    map.push([Infinity]);\n    for ( let x = 0; x < W; x++ ) {\n      if ( tmp[y][x] === '.' ) {\n        s++; map[y].push( 0 );\n      } else map[y].push( Infinity );\n    }\n    map[y].push(Infinity);\n  }\n  map.push(Array(W+2).fill(Infinity));\n  const dir = [[-1,0],[0,-1],[1,0],[0,1]];\n  const queue = [[1,1,2]];\n  do {\n    const q = queue.shift();\n    for ( const d of dir ) {\n      const x = q[0] + d[0], y = q[1] + d[1];\n      if ( x === W && y === H ) return s - q[2];\n      if ( map[y][x] === 0 ) {\n        map[y][x] = q[2]+1;\n        queue.push([x,y,q[2]+1]);\n      }\n    }\n  } while ( queue[0] );\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p03503_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const SvmXpX = {\n        'JjXND': function (callee, param1) {\n            return callee(param1);\n        },\n        'uwtSO': function (x, y) {\n            return x < y;\n        },\n        'gdilZ': function (x, y) {\n            return x < y;\n        },\n        'APklu': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'qDKqe': function (x, y) {\n            return x > y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const N = SvmXpX['JjXND'](parseInt, lines['shift']());\n    const F = [];\n    for (let i = 0x0; SvmXpX['uwtSO'](i, N); i++) {\n        F['push'](lines[i]['split']('\\x20')['map'](x => parseInt(x)));\n    }\n    const P = [];\n    for (let i = 0x0; SvmXpX['uwtSO'](i, N); i++) {\n        P['push'](lines[i + N]['split']('\\x20')['map'](x => parseInt(x)));\n    }\n    let result = -Infinity;\n    for (let i = 0x1; SvmXpX['uwtSO'](i, 0x400); i++) {\n        let score = 0x0;\n        for (let j = 0x0; SvmXpX['gdilZ'](j, N); j++) {\n            let store = F[j];\n            let p_index = (SvmXpX['APklu'](parseInt, store['join'](''), 0x2) & i)['toString'](0x2)['split']('')['map'](x => Number(x))['reduce']((a, b) => a + b, 0x0);\n            score += P[j][p_index];\n        }\n        if (SvmXpX['qDKqe'](score, result)) {\n            result = score;\n        }\n    }\n    console['log'](result);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2", "8"], ["2\n1 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 1\n0 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1\n0 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1", "-2"], ["3\n1 1 1 1 1 1 0 0 1 1\n0 1 0 1 1 1 1 0 1 0\n1 0 1 1 0 1 0 1 0 1\n-8 6 -2 -8 -8 4 8 7 -6 2 2\n-9 2 0 1 7 -5 0 -2 -6 5 5\n6 -6 7 -9 6 -5 8 0 -9 -7 -7", "23"]], "original": "'use strict'\n\nfunction main(input){\n  const lines = input.split('\\n')\n  const N = parseInt( lines.shift() );\n  const F = [];\n  for(let i=0; i<N;i++){\n    F.push( lines[i].split(' ').map( x => parseInt(x) ) );\n  }\n\n  const P=[];\n  for(let i=0; i<N;i++){\n    P.push(lines[i+N].split(' ').map( x => parseInt(x)) );\n  }\n\n  let result = -Infinity;\n  for(let i=1; i<1024;i++){\n    let score = 0;\n    for(let j=0; j<N;j++){\n      let store = F[j];\n      let p_index = (parseInt(store.join(''), 2) & i).toString(2).split('').map(x=>Number(x)).reduce((a,b)=>a+b,0)\n      score += P[j][p_index];\n    }\n    if(score > result){result = score;}\n  }\n\n  console.log(result);\n}\n\n\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03651_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst getGcd = (a, b) => {\n    const tUwOgA = {\n        'hXOud': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'mcDRR': function (x, y) {\n            return x % y;\n        }\n    };\n    return a ? tUwOgA['hXOud'](getGcd, tUwOgA['mcDRR'](b, a), a) : b;\n};\nconst main = arg => {\n    const gGeHLG = {\n        'yoRwk': function (callee, param1) {\n            return callee(param1);\n        },\n        'QbeAJ': 'IMPOSSIBLE',\n        'YTPHZ': function (x, y) {\n            return x < y;\n        },\n        'Wfpys': function (x, y) {\n            return x + y;\n        },\n        'JCCSa': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'WbYOy': function (x, y) {\n            return x === y;\n        },\n        'gQslD': function (x, y) {\n            return x % y;\n        },\n        'dfmhO': 'POSSIBLE'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const N = gGeHLG['yoRwk'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const K = parseInt(arg[0x0]['split']('\\x20')[0x1]);\n    let A = arg[0x1]['split']('\\x20')['map'](n => parseInt(n))['sort']((a, b) => b - a);\n    const max = A[0x0];\n    let gcd = Infinity;\n    if (max < K) {\n        console['log'](gGeHLG['QbeAJ']);\n        return;\n    }\n    for (let i = 0x0; gGeHLG['YTPHZ'](i, N); i++) {\n        for (let j = gGeHLG['Wfpys'](i, 0x1); gGeHLG['YTPHZ'](j, N); j++) {\n            gcd = Math['min'](gcd, gGeHLG['JCCSa'](getGcd, A[i], A[j]));\n        }\n    }\n    console['log'](gGeHLG['WbYOy'](gGeHLG['gQslD'](K, gcd), 0x0) ? gGeHLG['dfmhO'] : 'IMPOSSIBLE');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 7\n9 3 4", "POSSIBLE"], ["3 5\n6 9 3", "IMPOSSIBLE"], ["4 11\n11 3 7 15", "POSSIBLE"], ["5 12\n10 2 8 6 4", "IMPOSSIBLE"]], "original": "\"use strict\";\n    \nconst getGcd = (a, b) => {\n    return a ? getGcd(b % a, a) : b;\n}\n\nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const N = parseInt(arg[0].split(\" \")[0]);\n    const K = parseInt(arg[0].split(\" \")[1]);\n    \n    let A = arg[1].split(\" \").map(n=>parseInt(n)).sort((a,b)=>b-a);\n    \n    const max = A[0];\n    let   gcd = Infinity;\n    \n    if(max < K) {\n        console.log(\"IMPOSSIBLE\");\n        return;\n    }\n    \n    for(let i=0; i<N; i++) {\n        for(let j=i+1; j<N; j++) {\n            gcd = Math.min(gcd, getGcd(A[i], A[j]));\n        }\n    }\n    \n    console.log(K % gcd === 0 ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03821_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var XQOrNc = {\n        'EXNcc': function (x, y) {\n            return x < y;\n        },\n        'ozNwC': function (x, y) {\n            return x + y;\n        },\n        'wFBXE': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['split']('\\x0a');\n    var n = +s[0x0];\n    for (var i = 0x0; XQOrNc['EXNcc'](i, n); i++) {\n        s[i] = s[XQOrNc['ozNwC'](i, 0x1)]['split']('\\x20')['map'](a => +a);\n    }\n    var ans = 0x0;\n    for (i = XQOrNc['wFBXE'](n, 0x1); i >= 0x0; i--) {\n        var x = (s[i][0x0] + ans) % s[i][0x1];\n        if (x)\n            ans += s[i][0x1] - x;\n    }\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n3 5\n2 7\n9 4", "7"], ["7\n3 1\n4 1\n5 9\n2 6\n5 3\n5 8\n9 7", "22"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = +s[0];\n  for(var i = 0; i < n; i++){\n    s[i] = s[i+1].split(\" \").map(a=>+a);\n  }\n  var ans = 0;\n  for(i = n-1; i >= 0; i--){\n    var x = (s[i][0] + ans) % s[i][1];\n    if(x)ans += s[i][1] - x;\n  }\n  console.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03838_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\nx = l[0x0] * 0x1;\ny = l[0x1] * 0x1;\ncnt = 0x0;\nif (x == y) {\n} else if (Math['abs'](x) == Math['abs'](y)) {\n    cnt++;\n} else if (x == 0x0 || y == 0x0) {\n    if (y < x) {\n        cnt++;\n    }\n    cnt += Math['abs'](Math['abs'](x) - Math['abs'](y));\n} else {\n    if (x > y) {\n        if (x > 0x0 && y > 0x0) {\n            cnt += 0x2;\n        } else if (x > 0x0 && y < 0x0) {\n            cnt += 0x1;\n        } else {\n            cnt += 0x2;\n        }\n    } else {\n        if (x < 0x0 && y > 0x0) {\n            cnt += 0x1;\n        }\n    }\n    cnt += Math['abs'](Math['abs'](x) - Math['abs'](y));\n}\nconsole['log'](cnt);", "test_cases": [["10 20", "10"], ["10 -10", "1"], ["-10 -20", "12"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').split('\\n')\nl = inp.shift().split(' ')\nx = l[0] * 1\ny = l[1] * 1 \ncnt = 0\nif (x == y) {\n    \n} else if (Math.abs(x) == Math.abs(y)) {\n    cnt++\n} else if (x == 0 || y == 0) {\n    if (y < x) {\n        cnt++\n    }\n    cnt += Math.abs(Math.abs(x) - Math.abs(y))\n} else {\n    if (x > y) {\n        if (x > 0 && y > 0) {\n            cnt += 2\n        } else if (x > 0 && y < 0) {\n            cnt += 1\n        } else {\n            cnt += 2\n        }\n    } else {\n        if (x < 0 && y > 0) {\n            cnt += 1\n        }\n    }\n    cnt += Math.abs(Math.abs(x) - Math.abs(y))\n}\nconsole.log(cnt)", "language": "JavaScript"}
{"filename": "p03890_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var zKBFpX = {\n        'BntZU': function (x, y) {\n            return x < y;\n        },\n        'ULQGx': function (x, y) {\n            return x > y;\n        },\n        'WSjmx': function (x, y) {\n            return x - y;\n        },\n        'CaCkI': function (x, y) {\n            return x + y;\n        },\n        'ovXxq': function (x, y) {\n            return x == y;\n        }\n    };\n    var data = input['split']('\\x0a');\n    var n = data[0x0];\n    var a = data['slice'](0x1);\n    for (var i = 0x0; zKBFpX['BntZU'](i, n); ++i) {\n        var b = [];\n        for (var j = 0x0; j < a['length']; j += 0x2) {\n            if (zKBFpX['ULQGx'](a[j], a[j + 0x1])) {\n                b['push'](zKBFpX['WSjmx'](a[j], a[zKBFpX['CaCkI'](j, 0x1)]));\n            } else if (zKBFpX['ovXxq'](a[j], a[j + 0x1])) {\n                b['push'](a[j]);\n            } else {\n                b['push'](zKBFpX['WSjmx'](a[zKBFpX['CaCkI'](j, 0x1)], a[j]));\n            }\n        }\n        a = b;\n    }\n    console['log'](a[0x0]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1\n3\n10\n19", "7"], ["3\n1\n3\n2\n4\n6\n8\n100\n104", "2"]], "original": "function Main(input) {\n\tvar data = input.split(\"\\n\")\n\tvar n = data[0]\n\tvar a = data.slice(1)\n\t\n\tfor (var i = 0; i < n; ++i) {\n\t\tvar b = []\n\t\tfor (var j = 0; j < a.length; j += 2) {\n\t\t\tif (a[j] > a[j + 1]) {\n\t\t\t\tb.push(a[j] - a[j + 1])\n\t\t\t} else if (a[j] == a[j + 1]) {\n\t\t\t\tb.push(a[j])\n\t\t\t} else {\n\t\t\t\tb.push(a[j + 1] - a[j])\n\t\t\t}\n\t\t}\n\t\ta = b\n\t}\n\t\n\tconsole.log(a[0])\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03909_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const NQwPEd = {\n        'HsPso': function (callee, param1) {\n            return callee(param1);\n        },\n        'idTyj': function (callee, param1) {\n            return callee(param1);\n        },\n        'XTsrh': function (x, y) {\n            return x + y;\n        },\n        'omKqG': 'ABCDEFGHIJ',\n        'ErvOK': function (x, y) {\n            return x < y;\n        },\n        'haECT': function (x, y) {\n            return x === y;\n        },\n        'GXlTn': 'snuke',\n        'QnAek': function (x, y) {\n            return x + y;\n        }\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const H = NQwPEd['HsPso'](parseInt, arg[0x0]['split']('\\x20')[0x0]);\n    const W = NQwPEd['idTyj'](parseInt, arg[0x0]['split']('\\x20')[0x1]);\n    const words = arg['slice'](0x1, NQwPEd['XTsrh'](H, 0x1))['map'](s => s['split']('\\x20'));\n    const alpha = NQwPEd['omKqG']['split']('');\n    for (let i = 0x0; NQwPEd['ErvOK'](i, H); i++) {\n        for (let j = 0x0; j < W; j++) {\n            if (NQwPEd['haECT'](words[i][j], NQwPEd['GXlTn'])) {\n                console['log'](NQwPEd['XTsrh'](alpha[j], NQwPEd['QnAek'](i, 0x1)));\n                return;\n            }\n        }\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["15 10\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snuke snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake\nsnake snake snake snake snake snake snake snake snake snake", "H6"], ["1 1\nsnuke", "A1"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const H = parseInt(arg[0].split(\" \")[0]);\n    const W = parseInt(arg[0].split(\" \")[1]);\n    \n    const words = arg.slice(1, H + 1).map(s=>s.split(\" \"));\n    const alpha = \"ABCDEFGHIJ\".split(\"\");\n    \n    for(let i=0; i<H; i++) {\n        for(let j=0; j<W; j++) {\n            if(words[i][j] === \"snuke\") {\n                console.log(alpha[j] + (i + 1));\n                return;\n            }\n        }\n    }\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03970_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var eNDiyU = {\n        'tlXcS': '0|4|3|2|1',\n        'PPpuT': function (x, y) {\n            return x != y;\n        }\n    };\n    var qHYudj = eNDiyU['tlXcS']['split']('|');\n    var YozfFz = 0x0;\n    while (!![]) {\n        switch (qHYudj[YozfFz++]) {\n        case '0':\n            input = input['trim']();\n            continue;\n        case '1':\n            console['log'](output);\n            continue;\n        case '2':\n            for (var i = 0x0; i < input['length']; i++) {\n                var tmp1 = input['slice'](i, i + 0x1);\n                var tmp2 = seijou['slice'](i, i + 0x1);\n                if (eNDiyU['PPpuT'](tmp1, tmp2)) {\n                    output++;\n                }\n            }\n            continue;\n        case '3':\n            var seijou = 'CODEFESTIVAL2016';\n            continue;\n        case '4':\n            var output = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["C0DEFESTIVAL2O16", "2"], ["FESTIVAL2016CODE", "16"]], "original": "function Main(input) {\n\tinput = input.trim();\n  var output = 0;\n  var seijou = \"CODEFESTIVAL2016\";\n  for(var i = 0; i < input.length; i++){\n    var tmp1 = input.slice(i,i+1);\n    var tmp2 = seijou.slice(i,i+1);\n    if(tmp1 != tmp2){\n       output++;\n       }\n  }\n  \n  console.log(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03971_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst Main = input => {\n    const tcziyr = {\n        'XmkRf': function (callee, param1) {\n            return callee(param1);\n        },\n        'VCDSL': function (callee, param1) {\n            return callee(param1);\n        },\n        'jhMIQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'XuacB': function (x, y) {\n            return x === y;\n        },\n        'ZNLlX': function (x, y) {\n            return x < y;\n        },\n        'FXnvm': function (x, y) {\n            return x + y;\n        },\n        'XAQCh': 'Yes',\n        'BmOMx': function (x, y) {\n            return x === y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a');\n    const N = tcziyr['XmkRf'](parseInt, tmp[0x0]['split']('\\x20')[0x0]);\n    const A = tcziyr['VCDSL'](parseInt, tmp[0x0]['split']('\\x20')[0x1]);\n    const B = tcziyr['jhMIQ'](parseInt, tmp[0x0]['split']('\\x20')[0x2]);\n    const S = tmp[0x1];\n    let result = [];\n    let count = 0x0;\n    let overseas = 0x0;\n    for (let i = 0x0; i < N; i++) {\n        const participant = S['split']('')[i];\n        if (tcziyr['XuacB'](participant, 'a')) {\n            if (tcziyr['ZNLlX'](count, tcziyr['FXnvm'](A, B))) {\n                result['push'](tcziyr['XAQCh']);\n                count += 0x1;\n            } else {\n                result['push']('No');\n            }\n        } else if (tcziyr['BmOMx'](participant, 'b')) {\n            if (count < tcziyr['FXnvm'](A, B) && overseas < B) {\n                result['push'](tcziyr['XAQCh']);\n                count += 0x1;\n                overseas += 0x1;\n            } else {\n                result['push']('No');\n            }\n        } else {\n            result['push']('No');\n        }\n    }\n    result = result['join']('\\x0a');\n    console['log'](result);\n    return result;\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 2 3\nabccabaabb", "Yes\nYes\nNo\nNo\nYes\nYes\nYes\nNo\nNo\nNo"], ["12 5 2\ncabbabaacaba", "No\nYes\nYes\nYes\nYes\nNo\nYes\nYes\nNo\nYes\nNo\nNo"], ["5 2 2\nccccc", "No\nNo\nNo\nNo\nNo"]], "original": "'use strict'\n\nconst Main = (input) => {\n  const tmp = input.trim().split('\\n')\n  const N = parseInt(tmp[0].split(' ')[0])\n  const A = parseInt(tmp[0].split(' ')[1])\n  const B = parseInt(tmp[0].split(' ')[2])\n  const S = tmp[1]\n  //a 国内\n  //b 海外\n  //c どちらでもない\n\n  let result = []\n  let count = 0\n  let overseas = 0\n\n  for (let i = 0; i < N; i++) {\n    const participant = S.split('')[i]\n    if (participant === 'a') {\n      if (count < (A + B)) {\n        result.push('Yes')\n        count += 1\n      } else {\n        result.push('No')\n      }\n    } else if (participant === 'b') {\n      if (count < (A + B) && overseas < B) {\n        result.push('Yes')\n        count += 1\n        overseas += 1\n      } else {\n        result.push('No')\n      }\n    } else {\n      result.push('No')\n    }\n  }\n  result = result.join('\\n')\n\n  console.log(result)\n  return result\n}\n\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p00032_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split']('\\x0a');\nvar line;\nvar rectangles = 0x0;\nvar lozenges = 0x0;\nwhile (line = lines['shift']()) {\n    var lImdex = '0|4|3|2|1'['split']('|');\n    var qZhSfd = 0x0;\n    while (!![]) {\n        switch (lImdex[qZhSfd++]) {\n        case '0':\n            var l = line['split'](',')['map'](function (n) {\n                return +n;\n            });\n            continue;\n        case '1':\n            if (a * a + b * b == c * c)\n                rectangles++;\n            else if (a == b)\n                lozenges++;\n            continue;\n        case '2':\n            var c = l[0x2];\n            continue;\n        case '3':\n            var b = l[0x1];\n            continue;\n        case '4':\n            var a = l[0x0];\n            continue;\n        }\n        break;\n    }\n}\nconsole['log'](rectangles);\nconsole['log'](lozenges);", "test_cases": [["3,4,5\n5,5,8\n4,4,4\n5,4,3", "1\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n\nvar line;\nvar rectangles = 0;\nvar lozenges = 0;\nwhile (line = lines.shift()) {\n\tvar l = line.split(',').map(function(n){return +n;});\n\tvar a = l[0];\n\tvar b = l[1];\n\tvar c = l[2];\n\n\tif (a * a + b * b == c * c)\n\t\trectangles++;\n\telse if (a == b)\n\t\tlozenges++;\n}\nconsole.log(rectangles);\nconsole.log(lozenges);", "language": "JavaScript"}
{"filename": "p00045_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar sum = 0x0;\nvar cnt = 0x0;\nArr['forEach'](function (v) {\n    var AYuHyl = {\n        'YSIIA': function (x, y) {\n            return x * y;\n        }\n    };\n    var arr = v['split'](',')['map'](Number);\n    sum += AYuHyl['YSIIA'](arr[0x0], arr[0x1]);\n    cnt += arr[0x1];\n});\nconsole['log'](sum);\nconsole['log'](Math['round'](cnt / Arr['length']));", "test_cases": [["100,20\n50,10\n70,35", "4950\n22"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar sum=0;\nvar cnt=0;\n\nArr.forEach(function(v){\nvar arr=v.split(\",\").map(Number);\nsum+=arr[0]*arr[1];\ncnt+=arr[1];\n});\n\nconsole.log(sum);\nconsole.log(Math.round(cnt/Arr.length));", "language": "JavaScript"}
{"filename": "p00049_1", "type": "JavaScript", "obfuscated": "for (w = x = y = z = 0x0, i = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\s|,/), c = j = -0x1; c = i[j += 0x2]; n = '\\x0a')\n    c == 'A' ? w++ : c == 'B' ? x++ : c == 'O' ? z++ : y++;\nconsole['log'](w + n + x + n + y + n + z);", "test_cases": [["1,B\n2,A\n3,B\n4,AB\n5,B\n6,O\n7,A\n8,O\n9,AB\n10,A\n11,A\n12,B\n13,AB\n14,A", "5\n4\n3\n2"]], "original": "for(w=x=y=z=0,i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s|,/),c=j=-1;c=i[j+=2];n='\\n')c=='A'?w++:c=='B'?x++:c=='O'?z++:y++;console.log(w+n+x+n+y+n+z)", "language": "JavaScript"}
{"filename": "p00052_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a')['map'](function (i) {\n    j = +i, s = 0x0;\n    if (j) {\n        while (j = ~~(j / 0x5))\n            s += j;\n        console['log'](s);\n    }\n});", "test_cases": [["2\n12\n10000\n0", "0\n2\n2499"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').map(function(i){j=+i,s=0;if(j){while(j=~~(j/5))s+=j;console.log(s)}})", "language": "JavaScript"}
{"filename": "p00105_1", "type": "JavaScript", "obfuscated": "var d = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nvar info = line = '';\nvar map = [];\nwhile (line = d['shift']()) {\n    info = line['split']('\\x20');\n    map['push']([\n        info[0x0],\n        +info[0x1]\n    ]);\n}\nmap['sort'](function (a, b) {\n    var tDUiNA = {\n        'CpLIm': function (x, y) {\n            return x < y;\n        },\n        'WuTfi': function (x, y) {\n            return x > y;\n        },\n        'TqREH': function (x, y) {\n            return x < y;\n        }\n    };\n    if (tDUiNA['CpLIm'](a[0x0], b[0x0]))\n        return -0x1;\n    if (tDUiNA['WuTfi'](a[0x0], b[0x0]))\n        return 0x1;\n    if (tDUiNA['TqREH'](a[0x1], b[0x1]))\n        return -0x1;\n    if (tDUiNA['WuTfi'](a[0x1], b[0x1]))\n        return 0x1;\n    return 0x0;\n});\nvar word = '';\nvar pages = [];\nmap['forEach'](function (info, i) {\n    var LlfRFU = {\n        'UIxfL': function (x, y) {\n            return x !== y;\n        }\n    };\n    if (word !== info[0x0]) {\n        if (LlfRFU['UIxfL'](i, 0x0)) {\n            console['log'](pages['join']('\\x20'));\n            pages = [];\n        }\n        console['log'](info[0x0]);\n    }\n    pages['push'](info[0x1]);\n    word = info[0x0];\n});\nconsole['log'](pages['join']('\\x20'));", "test_cases": [["style 12\neven 25\nintroduction 3\neasy 9\nstyle 7\ndocument 13\nstyle 21\neven 18", "document\n13\neasy\n9\neven\n18 25\nintroduction\n3\nstyle\n7 12 21"]], "original": "var d = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\nvar info = line = '';\nvar map = [];\n\nwhile (line = d.shift()) {\n  info = line.split(' ');\n  map.push([info[0], +info[1]]);\n}\nmap.sort(function(a, b) {\n  if (a[0] < b[0]) return -1;\n  if (a[0] > b[0]) return 1;\n  if (a[1] < b[1]) return -1;\n  if (a[1] > b[1]) return 1;\n  return 0;\n});\n\nvar word = '';\nvar pages = [];\nmap.forEach(function(info, i) {\n  if (word !== info[0]) {\n    if (i !== 0) {\n      console.log(pages.join(' '));\n      pages = [];\n    }\n    console.log(info[0]);\n  }\n  pages.push(info[1]);\n  word = info[0];\n});\nconsole.log(pages.join(' '));", "language": "JavaScript"}
{"filename": "p00179_1", "type": "JavaScript", "obfuscated": "function BFS(x) {\n    var cGsBMN = {\n        'qMcHA': function (x, y) {\n            return x == y;\n        },\n        'eidQY': function (x, y) {\n            return x < y;\n        },\n        'jSKFV': function (x, y) {\n            return x - y;\n        },\n        'uxHfp': function (x, y) {\n            return x + y;\n        },\n        'fQnuK': function (x, y) {\n            return x - y;\n        },\n        'IzkKG': function (x, y) {\n            return x - y;\n        },\n        'zeMmv': function (x, y) {\n            return x + y;\n        }\n    };\n    var obj = {};\n    var bfs = [[\n            x,\n            0x0\n        ]];\n    obj[x] = !![];\n    while (!![]) {\n        if (cGsBMN['qMcHA'](bfs['length'], 0x0)) {\n            ans = 'NA';\n            break;\n        }\n        var leaf = bfs['shift']();\n        var str = leaf[0x0];\n        var cnt = leaf[0x1];\n        if (/^0+$|^1+$|^2+$/['test'](str)) {\n            ans = cnt;\n            break;\n        }\n        for (var i = 0x0; cGsBMN['eidQY'](i, cGsBMN['jSKFV'](str['length'], 0x1)); i++) {\n            if (str[i] == str[cGsBMN['uxHfp'](i, 0x1)])\n                continue;\n            var arr = str['split']('');\n            var color = cGsBMN['fQnuK'](cGsBMN['IzkKG'](0x3, +arr[i]), +arr[cGsBMN['zeMmv'](i, 0x1)]);\n            arr[i] = color;\n            arr[cGsBMN['uxHfp'](i, 0x1)] = color;\n            var Str = arr['join']('');\n            if (cGsBMN['qMcHA'](obj['hasOwnProperty'](Str), ![])) {\n                bfs['push']([\n                    Str,\n                    cnt + 0x1\n                ]);\n                obj[Str] = !![];\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var rgb = Arr['shift']();\n    if (rgb == '0')\n        break;\n    rgb = rgb['replace'](/r/g, '0')['replace'](/g/g, '1')['replace'](/b/g, '2');\n    var ans;\n    BFS(rgb);\n    console['log'](ans);\n}", "test_cases": [["rbgrg\nrbbgbbr\nbgr\nbgrbrgbr\nbggrgbgrr\ngbrggrbggr\nrrrrr\nbgbr\n0", "5\n7\n1\n6\nNA\n8\n0\n4"]], "original": "function BFS(x){\n   var obj={};\n   var bfs=[[x,0]];\n   obj[x]=true;\n   while(true){\n      if(bfs.length==0){ans=\"NA\";break;}\n      var leaf=bfs.shift();\n      var str=leaf[0];\n      var cnt=leaf[1];\n      if(/^0+$|^1+$|^2+$/.test(str)){ans=cnt;break;}\n      for(var i=0;i<str.length-1;i++){\n         if(str[i]==str[i+1])continue;\n         var arr=str.split(\"\");\n         var color=3-(+arr[i])-(+arr[i+1]);\n         arr[i]=color;\n         arr[i+1]=color;\n         var Str=arr.join(\"\");\n         if(obj.hasOwnProperty(Str)==false){\n            bfs.push([Str,cnt+1]);\n            obj[Str]=true;\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var rgb=Arr.shift();\n   if(rgb==\"0\")break;\n   rgb=rgb.replace(/r/g,\"0\").replace(/g/g,\"1\").replace(/b/g,\"2\")\n   var ans;\n   BFS(rgb);\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00205_1", "type": "JavaScript", "obfuscated": "function main() {\n    var xbxMNU = {\n        'VHZWs': function (x, y) {\n            return x - y;\n        },\n        'xcUrf': function (x, y) {\n            return x + y;\n        },\n        'ODLSC': function (x, y) {\n            return x == y;\n        },\n        'XPdSi': function (x, y) {\n            return x < y;\n        },\n        'hchdI': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var hands, pattern, swap, i = 0x0, j;\n    for (;;) {\n        if (xbxMNU['ODLSC'](input[i], 0x0))\n            break;\n        hands = [];\n        for (j = 0x0; xbxMNU['XPdSi'](j, 0x5); j++) {\n            hands['push'](xbxMNU['hchdI'](Number, input[i++]));\n        }\n        pattern = hands['reduce'](function (pat, h) {\n            return pat[h] = !![], pat;\n        }, {});\n        keys = Object['keys'](pattern)['map'](Number)['sort'](function (x, y) {\n            return xbxMNU['VHZWs'](x, y);\n        });\n        if (keys['length'] === 0x2) {\n            if (xbxMNU['ODLSC'](keys[0x1] - keys[0x0], 0x2)) {\n                swap = keys[0x0];\n                keys[0x0] = keys[0x1];\n                keys[0x1] = swap;\n            }\n            hands['forEach'](function (h) {\n                console['log'](xbxMNU['xcUrf'](keys['indexOf'](h), 0x1));\n            });\n        } else {\n            hands['forEach'](function () {\n                console['log'](0x3);\n            });\n        }\n    }\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var HgQzrE = {\n        'KrSXb': function (callee) {\n            return callee();\n        }\n    };\n    input = input['split']('\\x0a');\n    HgQzrE['KrSXb'](main);\n});", "test_cases": [["1\n2\n3\n2\n1\n1\n2\n2\n2\n1\n0", "3\n3\n3\n3\n3\n1\n2\n2\n2\n1"]], "original": "function main() {\n  var\n  hands, pattern,\n  swap,\n  i = 0, j;\n  for (;;) {\n    if (input[i] == 0) break;\n    \n    \n    hands = [];\n    for (j = 0; j < 5; j++) {\n      hands.push(Number(input[i++]));\n    }\n    \n    pattern = hands.reduce(function (pat, h) {\n      return (pat[h] = true, pat);\n    }, {});\n    \n    keys = Object.keys(pattern).map(Number).sort(function (x, y) { return x - y; });\n    \n    if (keys.length === 2) {\n      if (keys[1] - keys[0] == 2) {\n        swap = keys[0];\n        keys[0] = keys[1];\n        keys[1] = swap;\n      }\n      hands.forEach(function (h) {\n        console.log(keys.indexOf(h) + 1);\n      });\n    } else {\n      hands.forEach(function () {\n        console.log(3);\n      });\n    }\n  }\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00277_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar nrl = arr['shift']()['split']('\\x20')['map'](Number);\nvar n = nrl[0x0];\nvar L = nrl[0x2];\nvar t = [];\nvar max = [\n    0x0,\n    0x0\n];\nvar time = 0x0;\nfor (var i = 0x0; i < n; i++)\n    t[i] = [\n        0x0,\n        0x0,\n        i\n    ];\narr['push']([\n    0x1,\n    L,\n    0x0\n]['join']('\\x20'));\narr['forEach'](function (v) {\n    var JTvMlr = {\n        'ajGAh': '8|0|3|7|2|1|5|4|6',\n        'YqZPO': function (x, y) {\n            return x - y;\n        },\n        'uKvFE': function (x, y) {\n            return x > y;\n        },\n        'ccGKA': function (x, y) {\n            return x == y;\n        },\n        'DwVxp': function (x, y) {\n            return x <= y;\n        },\n        'rYVcY': function (x, y) {\n            return x < y;\n        }\n    };\n    var VTvJKJ = JTvMlr['ajGAh']['split']('|');\n    var qaMTTk = 0x0;\n    while (!![]) {\n        switch (VTvJKJ[qaMTTk++]) {\n        case '0':\n            var d = JTvMlr['YqZPO'](v[0x0], 0x1);\n            continue;\n        case '1':\n            time = T;\n            continue;\n        case '2':\n            t[max[0x0]][0x1] += T - time;\n            continue;\n        case '3':\n            var T = v[0x1];\n            continue;\n        case '4':\n            if (JTvMlr['uKvFE'](x, 0x0)) {\n                if (t[d][0x0] > max[0x1])\n                    max = [\n                        d,\n                        t[d][0x0]\n                    ];\n                else if (JTvMlr['ccGKA'](t[d][0x0], max[0x1]) && JTvMlr['DwVxp'](d, max[0x0]))\n                    max = [\n                        d,\n                        t[d][0x0]\n                    ];\n            }\n            continue;\n        case '5':\n            t[d][0x0] += x;\n            continue;\n        case '6':\n            if (JTvMlr['rYVcY'](x, 0x0)) {\n                var MAX = 0x0;\n                var m = 0x0;\n                t['forEach'](function (V, index) {\n                    if (MAX < V[0x0])\n                        m = index;\n                });\n                max = [\n                    m,\n                    t[m][0x0]\n                ];\n            }\n            continue;\n        case '7':\n            var x = v[0x2];\n            continue;\n        case '8':\n            v = v['split']('\\x20')['map'](Number);\n            continue;\n        }\n        break;\n    }\n});\nt['sort'](function (a, b) {\n    var YoobRE = {\n        'mxFWf': function (x, y) {\n            return x - y;\n        }\n    };\n    if (a[0x1] == b[0x1])\n        return YoobRE['mxFWf'](a[0x2], b[0x2]);\n    else\n        return YoobRE['mxFWf'](b[0x1], a[0x1]);\n});\nconsole['log'](t[0x0][0x2] + 0x1);", "test_cases": [["3 4 600\n3 100 5\n1 200 10\n2 400 20\n3 500 20", "1"], ["3 5 600\n3 100 5\n1 200 10\n2 300 30\n1 400 -8\n2 400 -27", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\n\nvar arr=input.trim().split(\"\\n\");\nvar nrl=arr.shift().split(\" \").map(Number);\nvar n=nrl[0];\nvar L=nrl[2];\nvar t=[];\nvar max=[0,0];\nvar time=0;\nfor(var i=0;i<n;i++)t[i]=[0,0,i];\narr.push([1,L,0].join(\" \"));\narr.forEach(function(v){\nv=v.split(\" \").map(Number);\nvar d=v[0]-1;\nvar T=v[1];\nvar x=v[2];\n\nt[max[0]][1]+=T-time;\ntime=T;\nt[d][0]+=x;\n\nif(x>0){\nif(t[d][0]>max[1])max=[d,t[d][0]];\nelse if(t[d][0]==max[1] && d<=max[0])max=[d,t[d][0]];\n}\n\nif(x<0){\nvar MAX=0;\nvar m=0;\nt.forEach(function(V,index){\nif(MAX<V[0])m=index;\n});\n\nmax=[m,t[m][0]];\n\n\n}\n\n\n});\n\n\n\nt.sort(function(a,b){\nif(a[1]==b[1])return a[2]-b[2];\nelse return b[1]-a[1];});\n\n\nconsole.log(t[0][2]+1);", "language": "JavaScript"}
{"filename": "p00670_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nS = Arr['shift']()['split']('\\x20')['map'](Number);\n    var n = nS[0x0];\n    var S = nS[0x1];\n    if (n == 0x0 && S == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i <= 0x64; i++)\n        arr[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr['shift']() - 0x0;\n        arr[v]++;\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i <= 0x64; i++) {\n        for (var j = i + 0x1; j <= 0x64; j++) {\n            if (i + j > S)\n                cnt += Math['min'](arr[i], arr[j]);\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 7\n1\n3\n10\n0 0", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nS=Arr.shift().split(\" \").map(Number);\n   var n=nS[0];\n   var S=nS[1];\n   if(n==0 && S==0)break;\n   var arr=[];\n   for(var i=0;i<=100;i++)arr[i]=0;\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr[v]++;\n   }\n   var cnt=0;\n   for(var i=0;i<=100;i++){\n      for(var j=i+1;j<=100;j++){\n         if(i+j>S)cnt+=Math.min(arr[i],arr[j]);\n      } \n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00734_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = Arr['shift']();\n    if (nm == '0\\x200')\n        break;\n    nm = nm['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var N = [];\n    var M = [];\n    for (var i = 0x0; i < n; i++)\n        N['push'](Arr['shift']() - 0x0);\n    for (var i = 0x0; i < m; i++)\n        M['push'](Arr['shift']() - 0x0);\n    var sumN = N['reduce'](function (a, b) {\n        var QLdjpn = {\n            'gWRIS': function (x, y) {\n                return x + y;\n            }\n        };\n        return QLdjpn['gWRIS'](a, b);\n    });\n    var sumM = M['reduce'](function (a, b) {\n        var ZJEwwc = {\n            'XUfnU': function (x, y) {\n                return x + y;\n            }\n        };\n        return ZJEwwc['XUfnU'](a, b);\n    });\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < m; j++) {\n            var a = sumN - N[i] + M[j];\n            var b = sumM + N[i] - M[j];\n            if (a == b)\n                arr['push']([\n                    N[i] + M[j],\n                    N[i],\n                    M[j]\n                ]);\n        }\n    }\n    if (arr['length'] == 0x0) {\n        console['log'](-0x1);\n        continue;\n    }\n    arr['sort'](function (a, b) {\n        var IcqLEQ = {\n            'QrZEF': function (x, y) {\n                return x - y;\n            }\n        };\n        return IcqLEQ['QrZEF'](a[0x0], b[0x0]);\n    });\n    console['log'](arr[0x0][0x1] + '\\x20' + arr[0x0][0x2]);\n}", "test_cases": [["2 2\n1\n5\n3\n7\n6 5\n3\n9\n5\n2\n3\n3\n12\n2\n7\n3\n5\n4 5\n10\n0\n3\n8\n1\n9\n6\n0\n6\n7 4\n1\n1\n2\n1\n2\n1\n4\n2\n3\n4\n3\n2 3\n1\n1\n2\n2\n2\n0 0", "1 3\n3 5\n-1\n2 2\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=Arr.shift();\n   if(nm==\"0 0\")break;\n   nm=nm.split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   var N=[];\n   var M=[];\n   for(var i=0;i<n;i++)N.push(Arr.shift()-0);\n   for(var i=0;i<m;i++)M.push(Arr.shift()-0);\n   var sumN=N.reduce(function(a,b){return a+b;});\n   var sumM=M.reduce(function(a,b){return a+b;});\n   var arr=[];\n   for(var i=0;i<n;i++){\n      for(var j=0;j<m;j++){\n         var a=sumN-N[i]+M[j];\n         var b=sumM+N[i]-M[j];\n         if(a==b)arr.push([N[i]+M[j],N[i],M[j]]);\n      }\n   }\n   if(arr.length==0){console.log(-1);continue;}\n   arr.sort(function(a,b){return a[0]-b[0];});\n   console.log(arr[0][1]+\" \"+arr[0][2]);\n}", "language": "JavaScript"}
{"filename": "p01125_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var a = Arr['shift']();\n    if (a == '0')\n        break;\n    var xy = [];\n    for (var i = 0x0; i < a; i++)\n        xy['push'](Arr['shift']());\n    var b = Arr['shift']();\n    var news = [];\n    for (var i = 0x0; i < b; i++)\n        news['push'](Arr['shift']());\n    var X = 0xa;\n    var Y = 0xa;\n    var XY = [];\n    news['forEach'](function (v) {\n        var MVZGBJ = {\n            'PINWT': function (x, y) {\n                return x < y;\n            },\n            'qkZJa': function (x, y) {\n                return x - y;\n            },\n            'jhydE': '1|0|4|2|3',\n            'QrACu': function (x, y) {\n                return x == y;\n            },\n            'zYuln': function (x, y) {\n                return x == y;\n            },\n            'yLMJO': function (x, y) {\n                return x == y;\n            },\n            'WMBhj': function (x, y) {\n                return x + y;\n            },\n            'dqHIn': function (x, y) {\n                return x + y;\n            },\n            'UusTW': function (x, y) {\n                return x == y;\n            }\n        };\n        var arr = v['split']('\\x20');\n        for (var i = 0x0; MVZGBJ['PINWT'](i, MVZGBJ['qkZJa'](arr[0x1], 0x0)); i++) {\n            var mhWUWP = MVZGBJ['jhydE']['split']('|');\n            var VYdYxJ = 0x0;\n            while (!![]) {\n                switch (mhWUWP[VYdYxJ++]) {\n                case '0':\n                    if (MVZGBJ['QrACu'](arr[0x0], 'E'))\n                        X++;\n                    continue;\n                case '1':\n                    if (MVZGBJ['zYuln'](arr[0x0], 'N'))\n                        Y++;\n                    continue;\n                case '2':\n                    if (MVZGBJ['yLMJO'](arr[0x0], 'S'))\n                        Y--;\n                    continue;\n                case '3':\n                    XY['push'](MVZGBJ['WMBhj'](MVZGBJ['dqHIn'](X, '\\x20'), Y));\n                    continue;\n                case '4':\n                    if (MVZGBJ['UusTW'](arr[0x0], 'W'))\n                        X--;\n                    continue;\n                }\n                break;\n            }\n        }\n    });\n    var flag = xy['every'](function (v) {\n        var hucfdb = {\n            'UlnCl': function (x, y) {\n                return x != y;\n            }\n        };\n        return hucfdb['UlnCl'](XY['indexOf'](v), -0x1);\n    });\n    console['log'](flag ? 'Yes' : 'No');\n}", "test_cases": [["2\n10 11\n11 12\n2\nN 2\nE 1\n2\n10 11\n11 12\n2\nN 2\nW 1\n3\n0 15\n5 10\n5 15\n5\nW 10\nS 10\nN 20\nE 10\nS 10\n0", "Yes\nNo\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var a=Arr.shift();\n   if(a==\"0\")break;\n   var xy=[];\n   for(var i=0;i<a;i++)xy.push(Arr.shift());\n   var b=Arr.shift();\n   var news=[];\n   for(var i=0;i<b;i++)news.push(Arr.shift());\n   var X=10;\n   var Y=10;\n   var XY=[];\n   news.forEach(function(v){\n      var arr=v.split(\" \");\n      for(var i=0;i<(arr[1]-0);i++){\n         if(arr[0]==\"N\")Y++;\n         if(arr[0]==\"E\")X++;\n         if(arr[0]==\"W\")X--;\n         if(arr[0]==\"S\")Y--;\n         XY.push(X+\" \"+Y);\n      }\n   });\n   var flag=xy.every(function(v){return (XY.indexOf(v)!=-1);});\n   console.log(flag?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p01701_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var SbUIqa = {\n        'NrSPV': function (x, y) {\n            return x < y;\n        },\n        'atzfO': function (x, y) {\n            return x == y;\n        },\n        'YXFXG': function (x, y) {\n            return x >= y;\n        },\n        'QmJvM': function (x, y) {\n            return x * y;\n        },\n        'eiWkn': function (x, y) {\n            return x > y;\n        },\n        'kFsYw': function (x, y) {\n            return x > y;\n        },\n        'yhTtV': function (x, y) {\n            return x % y;\n        },\n        'SgwRA': function (x, y) {\n            return x + y;\n        }\n    };\n    var line, lines = chunk['split']('\\x0a'), i, len = lines['length'], j, jLen, deg, pow, max;\n    for (i = 0x0; SbUIqa['NrSPV'](i, len); i++) {\n        line = lines[i];\n        if (SbUIqa['atzfO'](line, '#')) {\n            break;\n        }\n        line = line['replace'](/north/g, 0x0);\n        line = line['replace'](/west/g, 0x1);\n        deg = 0x0;\n        jLen = line['length'];\n        pow = line['length'] - 0x1;\n        max = 0x5a * Math['pow'](0x2, pow);\n        for (j = jLen; SbUIqa['YXFXG'](j, 0x0); j--) {\n            if (SbUIqa['QmJvM'](line[j], 0x1)) {\n                if (SbUIqa['NrSPV'](deg, max)) {\n                    deg += SbUIqa['QmJvM'](0x5a, Math['pow'](0x2, j));\n                }\n            } else {\n                if (SbUIqa['eiWkn'](deg, 0x0)) {\n                    deg -= SbUIqa['QmJvM'](0x5a, Math['pow'](0x2, j));\n                }\n            }\n        }\n        while (SbUIqa['kFsYw'](pow, 0x0) && SbUIqa['yhTtV'](deg, 0x2) === 0x0) {\n            deg = deg / 0x2;\n            pow--;\n        }\n        if (SbUIqa['eiWkn'](pow, 0x0)) {\n            console['log'](SbUIqa['SgwRA'](SbUIqa['SgwRA'](deg, '/'), Math['pow'](0x2, pow)));\n        } else {\n            console['log'](deg);\n        }\n    }\n});", "test_cases": [["north\nwest\nnorthwest\nnorthnorthwest\nwestwestwestnorth\n#", "0\n90\n45\n45/2\n315/4"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  var line, lines = chunk.split(\"\\n\"),\n      i, len = lines.length, j, jLen,\n      deg, pow, max;\n\n  for (i=0; i<len; i++) {\n    line = lines[i];\n    if (line == \"#\") {\n      break;\n    }\n\n    line = line.replace(/north/g, 0);\n    line = line.replace(/west/g, 1);\n\n    deg = 0;\n\n    jLen = line.length;\n    pow = line.length - 1;\n    max = 90 * Math.pow(2, pow);\n    for (j=jLen; j>=0; j--) {\n      if (line[j]*1) {\n        if (deg < max) {\n          deg += 90 * Math.pow(2, j);\n        }   \n      } else {\n        if (deg > 0) {\n          deg -= 90 * Math.pow(2, j);\n        }\n      }\n    }\n\n    while(pow > 0 && deg % 2 === 0) {\n      deg = deg / 2;\n      pow--;\n    }\n    \n    if (pow > 0) {\n      console.log(deg + \"/\" + Math.pow(2, pow));\n    } else {\n      console.log(deg);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p02537_1", "type": "JavaScript", "obfuscated": "const main = arg => {\n    const PDFNdR = {\n        'RwAVo': function (x, y) {\n            return x < y;\n        },\n        'JYWdd': function (x, y) {\n            return x <= y;\n        },\n        'ZbgAI': function (x, y) {\n            return x - y;\n        }\n    };\n    const [N, K] = arg['split']('\\x0a')[0x0]['split']('\\x20')['map'](Number);\n    arg = arg['split']('\\x0a')['slice'](0x1);\n    const a = arg['map'](Number);\n    let b = [];\n    b['push'](a[0x0]);\n    for (let i = 0x1; PDFNdR['RwAVo'](i, N); i++) {\n        if (PDFNdR['JYWdd'](Math['abs'](PDFNdR['ZbgAI'](a[i], b[PDFNdR['ZbgAI'](b['length'], 0x1)])), K)) {\n            b['push'](a[i]);\n        }\n    }\n    console['log'](b['length']);\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 3\n1\n5\n4\n3\n8\n6\n9\n7\n2\n4", "7"]], "original": "const main = (arg) => {\n    const [N,K] = arg.split(\"\\n\")[0].split(\" \").map(Number)\n    arg = arg.split(\"\\n\").slice(1)\n    const a = arg.map(Number)\n    \n    let b = []\n    b.push(a[0])\n    for(let i=1; i<N; i++) {\n        if(Math.abs(a[i]-b[b.length-1]) <= K) {\n            // last = a[i]\n            b.push(a[i])\n        }\n    }\n    console.log(b.length)\n\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02550_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['split']('\\x0a');\nconst [N, X, M] = lines[0x0]['split']('\\x20')['map'](Number);\nlet a = X;\nconst map = {};\nconst loop = [];\nconst pre = [a];\nfor (let i = 0x1; i < N; i++) {\n    a = a * a % M;\n    if (map[a] === 0x2) {\n        break;\n    } else if (map[a]) {\n        loop['push'](a);\n        pre['pop']();\n    } else {\n        pre['push'](a);\n    }\n    map[a] = (map[a] || 0x0) + 0x1;\n}\nconst suf = [];\nfor (let i = 0x0; i < (N - pre['length']) % (loop['length'] || 0x1); i++) {\n    suf['push'](loop[i]);\n}\nconst sum = loop['reduce']((a, b) => a + b, 0x0);\nconst lt = loop['length'] ? Math['floor']((N - pre['length']) / loop['length']) : 0x0;\nconsole['log'](pre['reduce']((a, b) => a + b, 0x0) + sum * lt + suf['reduce']((a, b) => a + b, 0x0));", "test_cases": [["6 2 1001", "1369"], ["1000 2 16", "6"], ["10000000000 10 99959", "492443256176507"]], "original": "const input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")\nconst lines = input.split('\\n')\nconst [N, X, M] = lines[0].split(' ').map(Number)\n\nlet a = X\nconst map = {}\nconst loop = []\nconst pre = [a]\nfor (let i = 1; i < N; i++) {\n    a = a * a % M\n    if (map[a] === 2){\n        break\n    } else if (map[a]) {\n        loop.push(a)\n        pre.pop()\n    } else {\n        pre.push(a)\n    }\n    map[a] = (map[a] || 0) + 1\n}\n\nconst suf = []\nfor (let i = 0; i < (N - pre.length) % (loop.length || 1); i++) {\n    suf.push(loop[i])\n}\n\nconst sum = loop.reduce((a, b) => a + b, 0)\nconst lt = loop.length ? Math.floor(((N - pre.length) / loop.length)) : 0\n\nconsole.log(\n    pre.reduce((a, b) => a + b, 0) +\n    sum * lt +\n    suf.reduce((a, b) => a + b, 0)\n)\n", "language": "JavaScript"}
{"filename": "p02619_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const BQARAw = {\n        'NfXQb': function (callee, param1) {\n            return callee(param1);\n        },\n        'DyqKD': function (x, y) {\n            return x - y;\n        },\n        'hEWfS': function (x, y) {\n            return x < y;\n        },\n        'ftQgi': function (x, y) {\n            return x === y;\n        },\n        'NDKEZ': function (x, y) {\n            return x - y;\n        },\n        'QTEXm': function (x, y) {\n            return x * y;\n        },\n        'YmPcE': function (x, y) {\n            return x - y;\n        }\n    };\n    const tmp = input['trim']()['split']('\\x0a');\n    const D = BQARAw['NfXQb'](Number, tmp[0x0]);\n    const C = tmp[0x1]['split']('\\x20')['map'](v => Number(v));\n    const S = tmp['slice'](0x2, 0x7)['map'](v => v['split']('\\x20')['map'](v => Number(v)));\n    const T = tmp['slice'](-0x5)['map'](v => Number(v));\n    let LastContestDays = Array(0x1a)['fill'](0x0);\n    let currnetContestLebels = BQARAw['NfXQb'](Array, 0x1a)['fill'](0x0);\n    let lebel = 0x0;\n    for (let i = 0x1; i <= D; i++) {\n        LastContestDays[T[BQARAw['DyqKD'](i, 0x1)] - 0x1] = i;\n        for (let j = 0x0; BQARAw['hEWfS'](j, C['length']); j++) {\n            if (BQARAw['ftQgi'](LastContestDays[j], i)) {\n                currnetContestLebels[j] = S[BQARAw['NDKEZ'](i, 0x1)][j];\n            } else {\n                currnetContestLebels[j] = BQARAw['QTEXm'](C[j] * BQARAw['YmPcE'](i, LastContestDays[j]), -0x1);\n            }\n        }\n        lebel += currnetContestLebels['reduce']((acc, cur) => acc + cur);\n        console['log'](BQARAw['NfXQb'](String, lebel));\n    }\n    return;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n86 90 69 51 2 96 71 47 88 34 45 46 89 34 31 38 97 84 41 80 14 4 50 83 7 82\n19771 12979 18912 10432 10544 12928 13403 3047 10527 9740 8100 92 2856 14730 1396 15905 6534 4650 11469 3628 8433 2994 10899 16396 18355 11424\n6674 17707 13855 16407 12232 2886 11908 1705 5000 1537 10440 10711 4917 10770 17272 15364 19277 18094 3929 3705 7169 6159 18683 15410 9092 4570\n6878 4239 19925 1799 375 9563 3445 5658 19857 11401 6997 6498 19933 3848 2426 2146 19745 16880 17773 18359 3921 14172 16730 11157 5439 256\n8633 15862 15303 10749 18499 7792 10317 5901 9395 11433 3514 3959 5202 19850 19469 9790 5653 784 18500 10552 17975 16615 7852 197 8471 7452\n19855 17918 7990 10572 4333 438 9140 9104 12622 4985 12319 4028 19922 12132 16259 17476 2976 547 19195 19830 16285 4806 4471 9457 2864 2192\n1\n17\n13\n14\n13", "18398\n35037\n51140\n65837\n79325"]], "original": "'use strict';\n\nfunction Main(input) {\n    const tmp = input.trim().split('\\n');\n    const D = Number(tmp[0]);\n    const C = tmp[1].split(' ').map((v) => Number(v));\n    const S = tmp.slice(2, 7).map((v) => v.split(' ').map((v) => Number(v)));\n    const T = tmp.slice(-5).map((v) => Number(v));\n\n    let LastContestDays = Array(26).fill(0); // コンテストの種類ごとの最終開催日\n    let currnetContestLebels = Array(26).fill(0); // ある開催日のコンテストごとの満足度\n    let lebel = 0; // 満足度の累計\n\n    for (let i = 1; i <= D; i++) {\n        LastContestDays[T[i - 1] - 1] = i;\n        for (let j = 0; j < C.length; j++) {\n            if (LastContestDays[j] === i) {\n                currnetContestLebels[j] = S[i - 1][j];\n            } else {\n                currnetContestLebels[j] = C[j] * (i - LastContestDays[j]) * -1;\n            }\n        }\n        lebel += currnetContestLebels.reduce((acc, cur) => acc + cur);\n        console.log(String(lebel));\n    }\n\n    return;\n}\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p02709_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const vAHfyV = {\n        'Ijmoa': function (x, y) {\n            return x > y;\n        },\n        'PwWWB': function (x, y) {\n            return x - y;\n        },\n        'eWOlW': function (x, y) {\n            return x + y;\n        },\n        'vFDrm': function (x, y) {\n            return x * y;\n        },\n        'QyuLh': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KpruK': function (x, y) {\n            return x - y;\n        },\n        'QJHbg': function (callee, param1) {\n            return callee(param1);\n        },\n        'xJDJe': function (x, y) {\n            return x - y;\n        }\n    };\n    const input = arg['trim']()['split']('\\x0a');\n    const n = vAHfyV['QJHbg'](parseInt, input[0x0]);\n    const arr = input[0x1]['split']('\\x20')['map'](n => parseInt(n));\n    function cal(i, dst) {\n        if (i === -0x1)\n            return 0x0;\n        const results = [];\n        for (const j of dst) {\n            const next_dst = dst['filter'](v => v !== j);\n            const abs = vAHfyV['Ijmoa'](i, j) ? vAHfyV['PwWWB'](i, j) : vAHfyV['PwWWB'](j, i);\n            const val = vAHfyV['eWOlW'](vAHfyV['vFDrm'](arr[i], abs), vAHfyV['QyuLh'](cal, vAHfyV['KpruK'](i, 0x1), next_dst));\n            results['push'](val);\n        }\n        return Math['max'](...results);\n    }\n    console['log'](vAHfyV['QyuLh'](cal, vAHfyV['xJDJe'](n, 0x1), [...vAHfyV['QJHbg'](Array, n)['keys']()]));\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 3 4 2", "20"], ["6\n5 5 6 1 1 1", "58"], ["6\n8 6 9 1 2 1", "85"]], "original": "\"use strict\";\n\nconst main = arg => {\n  const input = arg.trim().split(\"\\n\");\n\n  const n = parseInt(input[0]);\n  const arr = input[1].split(\" \").map(n => parseInt(n));\n\n  function cal(i, dst) {\n    if (i === -1) return 0;\n\n    const results = [];\n    for (const j of dst) {\n      const next_dst = dst.filter(v => v !== j);\n      const abs = i > j ? i - j : j - i;\n      const val = arr[i] * abs + cal(i - 1, next_dst);\n      results.push(val);\n    }\n\n    return Math.max(...results);\n  }\n\n  console.log(cal(n - 1, [...Array(n).keys()]));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02814_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var cDsrWZ = {\n        'fpkMr': function (x, y) {\n            return x - y;\n        },\n        'vGJsE': function (callee, param1) {\n            return callee(param1);\n        },\n        'jhEKj': function (x, y) {\n            return x / y;\n        },\n        'eSpSi': function (x, y) {\n            return x / y;\n        }\n    };\n    var N = cDsrWZ['fpkMr'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    var M = input[0x0]['split']('\\x20')[0x1] - 0x0;\n    var list = input[0x1]['split']('\\x20')['map'](v => v / 0x2);\n    var l = cDsrWZ['vGJsE'](lcm, list);\n    console['log'](Math['trunc'](cDsrWZ['jhEKj'](M, l)) - Math['trunc'](cDsrWZ['eSpSi'](M, l * 0x2)));\n}\nfunction lcm(args) {\n    var a = args;\n    var g = (n, m) => m ? g(m, n % m) : n;\n    var l = (n, m) => n * m / g(n, m);\n    var ans = a[0x0];\n    for (var i = 0x1; i < a['length']; i++) {\n        ans = l(ans, a[i]);\n    }\n    return ans;\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a'));", "test_cases": [["2 50\n6 10", "2"], ["3 100\n14 22 40", "0"], ["5 1000000000\n6 6 2 6 2", "166666667"]], "original": "function main(input) {\n  var N = input[0].split(\" \")[0]-0;\n  var M = input[0].split(\" \")[1]-0;\n  var list = input[1].split(\" \").map(v=>v/2);\n  var l = lcm(list);\n  console.log(Math.trunc(M/l) - Math.trunc(M/(l*2)));\n}\n\nfunction lcm(args) {\n    var a = args\n    var g = (n, m) => m ? g(m, n % m) : n\n    var l = (n, m) => n * m / g(n, m)\n    var ans = a[0]\n\n    for (var i = 1; i < a.length; i++) {\n        ans = l(ans, a[i])\n    }\n    return ans\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02821_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var YTeyJD = {\n        'gJsGj': function (x, y) {\n            return x + y;\n        },\n        'xaFJR': function (x, y) {\n            return x < y;\n        }\n    };\n    const M = input[0x0][0x1];\n    const alist = input[0x1];\n    const kumiList = alist['reduce']((arr, ai, i) => {\n        arr['push'](ai * 0x2);\n        var kumiVal;\n        for (var j = YTeyJD['gJsGj'](i, 0x1); j < alist['length']; j++) {\n            kumiVal = ai + alist[j];\n            arr['push'](kumiVal, kumiVal);\n        }\n        return arr;\n    }, [])['sort']((a1, a2) => a2 - a1);\n    var answer = 0x0;\n    for (var i = 0x0; YTeyJD['xaFJR'](i, M); i++) {\n        answer += kumiList[i];\n    }\n    console['log'](answer);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['map'](line => line['split']('\\x20')['map'](Number)));", "test_cases": [["5 3\n10 14 19 34 33", "202"], ["9 14\n1 3 5 110 24 21 34 5 3", "1837"], ["9 73\n67597 52981 5828 66249 75177 64141 40773 79105 16076", "8128170"]], "original": "/**\n * @param input number[][]\n */\nfunction Main(input) {\n  const M = input[0][1];\n  const alist = input[1];\n\n  const kumiList = alist.reduce((arr, ai, i) => {\n    arr.push(ai * 2);\n\n    var kumiVal;\n    for (var j = i + 1; j < alist.length; j++) {\n      kumiVal = ai + alist[j];\n      arr.push(kumiVal, kumiVal);\n    }\n\n    return arr;\n  }, []).sort((a1, a2) => a2 - a1);\n\n  var answer = 0;\n  for (var i = 0; i < M; i++) {\n    answer += kumiList[i];\n  }\n\n  console.log(answer);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim()\n  .split('\\n')\n  .map((line) => line.split(' ').map(Number))\n);", "language": "JavaScript"}
{"filename": "p03381_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const RnaKyA = {\n        'OMLme': function (x, y) {\n            return x - y;\n        },\n        'riaIb': function (x, y) {\n            return x <= y;\n        },\n        'vybVc': function (callee, param1) {\n            return callee(param1);\n        },\n        'lzZNu': function (x, y) {\n            return x - y;\n        },\n        'IbTNq': function (x, y) {\n            return x / y;\n        },\n        'twGgM': function (x, y) {\n            return x / y;\n        }\n    };\n    const lines = input['split']('\\x0a');\n    let N = RnaKyA['vybVc'](parseInt, lines[0x0]);\n    let a = lines[0x1]['split']('\\x20')['map'](function (i) {\n        return parseInt(i);\n    });\n    let sortedA = a['slice']()['sort'](function (a, b) {\n        return RnaKyA['OMLme'](a, b);\n    });\n    const med1 = sortedA[RnaKyA['lzZNu'](RnaKyA['IbTNq'](N, 0x2), 0x1)];\n    const med2 = sortedA[RnaKyA['twGgM'](N, 0x2)];\n    a['forEach'](function (i) {\n        console['log'](RnaKyA['riaIb'](i, med1) ? med2 : med1);\n    });\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n2 4 4 3", "4\n3\n3\n4"], ["2\n1 2", "2\n1"], ["6\n5 5 4 4 3 3", "4\n4\n4\n4\n4\n4"]], "original": "function Main(input) {\n    const lines = input.split(\"\\n\");\n    let N = parseInt(lines[0]);\n    let a = lines[1].split(\" \").map(function(i) { return parseInt(i);});\n    let sortedA = a.slice().sort(function(a,b) { return a - b;});\n    const med1 = sortedA[N/2-1];\n    const med2 = sortedA[N/2];\n    a.forEach(function(i) {console.log(i<=med1 ? med2 : med1);})\n}\n\nMain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03418_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var ZprUTn = {\n        'uJdGx': '2|3|4|5|6|0|1',\n        'ucDmK': function (x, y) {\n            return x || y;\n        },\n        'BykSZ': function (x, y) {\n            return x <= y;\n        },\n        'dMEcQ': function (x, y) {\n            return x || y;\n        },\n        'deFyN': function (x, y) {\n            return x <= y;\n        },\n        'VGNim': function (x, y) {\n            return x < y;\n        },\n        'mnZOA': function (x, y) {\n            return x >= y;\n        },\n        'Qerxh': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var VYqWLx = ZprUTn['uJdGx']['split']('|');\n    var pWQOcU = 0x0;\n    while (!![]) {\n        switch (VYqWLx[pWQOcU++]) {\n        case '0':\n            for (var a = ZprUTn['ucDmK'](minrest, 0x1); ZprUTn['BykSZ'](a, maxint); a++) {\n                for (var b = ZprUTn['dMEcQ'](minrest, 0x1); ZprUTn['deFyN'](b, maxint); b++) {\n                    if (ZprUTn['VGNim'](a, b)) {\n                        ans++;\n                    } else {\n                        if (ZprUTn['mnZOA'](a % b, minrest))\n                            ans++;\n                    }\n                }\n            }\n            continue;\n        case '1':\n            console['log'](ans);\n            continue;\n        case '2':\n            var line = input['split']('\\x0a');\n            continue;\n        case '3':\n            var tmp = line[0x0]['split']('\\x20');\n            continue;\n        case '4':\n            var maxint = ZprUTn['Qerxh'](Number, tmp[0x0]);\n            continue;\n        case '5':\n            var minrest = ZprUTn['Qerxh'](Number, tmp[0x1]);\n            continue;\n        case '6':\n            var ans = 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2", "7"], ["10 0", "100"], ["31415 9265", "287927211"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tvar line = input.split(\"\\n\");\n\tvar tmp = line[0].split(\" \");\n\tvar maxint = Number(tmp[0]);\n\tvar minrest = Number(tmp[1]);\n\tvar ans = 0;\n\tfor(var a = minrest || 1; a <= maxint; a++){\n\t\tfor(var b = minrest || 1; b <= maxint; b++){\n\t\t\tif(a < b){\n\t\t\t\tans++;\n\t\t\t} else{\n\t\t\t\tif(a%b >= minrest) ans++;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(ans);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03533_1", "type": "JavaScript", "obfuscated": "var s = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconsole['log'](s['trim']()['match'](/^A?KIHA?BA?RA?$/) ? 'YES' : 'NO');", "test_cases": [["KIHBR", "YES"], ["AKIBAHARA", "NO"], ["AAKIAHBAARA", "NO"]], "original": "var s = require('fs').readFileSync('/dev/stdin', 'utf8');\nconsole.log((s.trim().match(/^A?KIHA?BA?RA?$/)) ? \"YES\" : \"NO\");", "language": "JavaScript"}
{"filename": "p03568_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var iNevdk = {\n        'iEQEL': function (x, y) {\n            return x - y;\n        },\n        'IOXfC': function (x, y) {\n            return x == y;\n        }\n    };\n    var xLsmiM = '3|2|4|0|5|6|1'['split']('|');\n    var dFCrMy = 0x0;\n    while (!![]) {\n        switch (xLsmiM[dFCrMy++]) {\n        case '0':\n            var sum = 0x1;\n            continue;\n        case '1':\n            console['log'](iNevdk['iEQEL'](n, sum));\n            continue;\n        case '2':\n            input = input['split']('\\x0a');\n            continue;\n        case '3':\n            var umcawW = {\n                'xShhH': function (x, y) {\n                    return iNevdk['IOXfC'](x, y);\n                }\n            };\n            continue;\n        case '4':\n            var n = Math['pow'](0x3, input[0x0]);\n            continue;\n        case '5':\n            var arr = input[0x1]['split']('\\x20')['map'](Number);\n            continue;\n        case '6':\n            arr['forEach'](function (val) {\n                if (umcawW['xShhH'](val % 0x2, 0x0))\n                    sum *= 0x2;\n            });\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["2\n2 3", "7"], ["3\n3 3 3", "26"], ["1\n100", "1"], ["10\n90 52 56 71 44 8 13 30 57 84", "58921"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n  var n = Math.pow(3,input[0]);\n  var sum = 1;\n  var arr = input[1].split(\" \").map(Number);\n  arr.forEach(function(val){if(val%2==0)sum *= 2});\n  console.log(n-sum);\n}Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03578_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const qDExBa = {\n        'vnQwN': function (x, y) {\n            return x < y;\n        },\n        'VdWXM': function (x, y) {\n            return x < y;\n        },\n        'ZGnRw': function (x, y) {\n            return x > y;\n        },\n        'tGLSF': function (x, y) {\n            return x === y;\n        },\n        'sCTbb': 'YES'\n    };\n    const [[N], D, [M], T] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    D['sort']((a, b) => a - b);\n    T['sort']((a, b) => a - b);\n    let j = -0x1;\n    Q:\n        for (let i = 0x0; qDExBa['vnQwN'](i, M); i++) {\n            while (qDExBa['VdWXM'](++j, N)) {\n                if (qDExBa['ZGnRw'](D[j], T[i]))\n                    return 'NO';\n                if (qDExBa['tGLSF'](D[j], T[i]))\n                    continue Q;\n            }\n            return 'NO';\n        }\n    return qDExBa['sCTbb'];\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["5\n3 1 4 1 5\n3\n5 4 3", "YES"], ["7\n100 200 500 700 1200 1600 2000\n6\n100 200 500 700 1600 1600", "NO"], ["1\n800\n5\n100 100 100 100 100", "NO"], ["15\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5\n9\n5 4 3 2 1 2 3 4 5", "YES"]], "original": "console.log((args=>{\n  const [[N],D,[M],T] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  D.sort((a,b)=>a-b);\n  T.sort((a,b)=>a-b);\n  let j = -1;\n  Q: for ( let i = 0; i < M; i++ ) {\n    while ( ++j < N ) {\n      if ( D[j] > T[i] ) return 'NO';\n      if ( D[j] === T[i] ) continue Q;\n    }\n    return 'NO';\n  }\n  return 'YES';\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03733_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const ayIyWl = {\n        'zCeJZ': function (x, y) {\n            return x < y;\n        },\n        'fOJmW': function (x, y) {\n            return x + y;\n        },\n        'RCnYO': function (x, y) {\n            return x - y;\n        },\n        'culXu': function (x, y) {\n            return x - y;\n        }\n    };\n    const [[N, T], t] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => v | 0x0));\n    t['sort']((a, b) => a - b);\n    let s = T;\n    for (let i = 0x1; ayIyWl['zCeJZ'](i, N); i++) {\n        if (ayIyWl['fOJmW'](t[ayIyWl['RCnYO'](i, 0x1)], T) > t[i])\n            s += ayIyWl['culXu'](t[i], t[i - 0x1]);\n        else\n            s += T;\n    }\n    return '' + s;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["2 4\n0 3", "7"], ["2 4\n0 5", "8"], ["4 1000000000\n0 1000 1000000 1000000000", "2000000000"], ["1 1\n0", "1"], ["9 10\n0 3 5 7 100 110 200 300 311", "67"]], "original": "console.log((args=>{\n  const [[N,T],t] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  t.sort((a,b)=>a-b);\n  let s = T;\n  for ( let i = 1; i < N; i++ ) {\n    if ( t[i-1] + T > t[i] ) s += t[i] - t[i-1];\n    else s += T;\n  }\n  return `${s}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03817_1", "type": "JavaScript", "obfuscated": "input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlines = input['split']('\\x0a');\nN = lines['shift']() * 0x1;\nans = Math['floor'](N / 0xb) * 0x2;\nm = N % 0xb;\nif (m == 0x0) {\n} else if (m <= 0x6) {\n    ans += 0x1;\n} else {\n    ans += 0x2;\n}\nconsole['log'](ans);", "test_cases": [["7", "2"], ["149696127901", "27217477801"]], "original": "input = require('fs').readFileSync('/dev/stdin', 'utf8')\nlines = input.split('\\n')\nN = lines.shift() * 1\nans = Math.floor(N / 11) * 2\nm = N % 11\nif (m == 0) {\n} else if (m <= 6) {\n    ans += 1\n} else {\n    ans += 2\n} \nconsole.log(ans)", "language": "JavaScript"}
{"filename": "p03889_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const VltdPR = {\n        'zHwps': function (x, y) {\n            return x !== y;\n        },\n        'wTkkt': function (x, y) {\n            return x % y;\n        },\n        'etGRI': function (x, y) {\n            return x / y;\n        },\n        'VJUkt': function (x, y) {\n            return x === y;\n        },\n        'Iwcot': 'Yes'\n    };\n    const arr = input['split']('');\n    if (VltdPR['zHwps'](VltdPR['wTkkt'](arr['length'], 0x2), 0x0)) {\n        console['log']('No');\n        return;\n    }\n    const a = arr['slice'](0x0, VltdPR['etGRI'](arr['length'], 0x2));\n    const b = arr['slice'](VltdPR['etGRI'](arr['length'], 0x2), arr['length']);\n    if (VltdPR['VJUkt'](a['join'](''), b['reverse']()['map'](mirror)['join'](''))) {\n        console['log'](VltdPR['Iwcot']);\n    } else {\n        console['log']('No');\n    }\n    function mirror(a) {\n        switch (a) {\n        case 'b':\n            return 'd';\n        case 'd':\n            return 'b';\n        case 'p':\n            return 'q';\n        case 'q':\n            return 'p';\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["pdbq", "Yes"], ["ppqb", "No"]], "original": "function Main(input) {\n  const arr = input.split(\"\");\n  if(arr.length % 2 !== 0){\n    console.log(\"No\");\n    return;\n  }\n  const a = arr.slice(0, arr.length/2);\n  const b = arr.slice(arr.length/2, arr.length);\n  if(a.join(\"\") === b.reverse().map(mirror).join(\"\")){\n    console.log(\"Yes\");\n  }else{ console.log(\"No\"); }\n  function mirror(a){\n    switch (a) {\n        case \"b\": return \"d\";\n        case \"d\": return \"b\";\n        case \"p\": return \"q\";\n        case \"q\": return \"p\";\n    }\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04033_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const VlvJyb = {\n        'kkvPi': function (x, y) {\n            return x <= y;\n        },\n        'HikeX': 'Zero',\n        'cmZgd': function (x, y) {\n            return x % y;\n        },\n        'VsYMD': function (x, y) {\n            return x - y;\n        },\n        'ZfUen': 'Negative'\n    };\n    const data = input['split'](/\\n|\\s/)['map'](a => parseInt(a, 0xa));\n    const a = data[0x0];\n    const b = data[0x1];\n    if (a <= 0x0 && VlvJyb['kkvPi'](0x0, b)) {\n        return VlvJyb['HikeX'];\n    }\n    if (VlvJyb['cmZgd'](VlvJyb['VsYMD'](b, a), 0x2) || a > 0x0) {\n        return 'Positive';\n    } else {\n        return VlvJyb['ZfUen'];\n    }\n};\nconsole['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["1 3", "Positive"], ["-3 -1", "Negative"], ["-1 1", "Zero"]], "original": "const main = (input) =>  {\n  const data = input.split(/\\n|\\s/).map((a) => parseInt(a, 10));\n  const a = data[0];\n  const b = data[1];\n  if (a <= 0 && 0 <= b) {\n    return \"Zero\"\n  }\n\n  if ((b - a) % 2  || a > 0) {\n    return \"Positive\";\n  } else {\n    return \"Negative\";\n  }\n}\n\nconsole.log(main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")))\n\n\n\n", "language": "JavaScript"}
{"filename": "p00034_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split'](/\\s/)['map'](function (i) {\n    var oohZaF = {\n        'QjuJI': function (x, y) {\n            return x / y;\n        },\n        'qBbfn': function (x, y) {\n            return x - y;\n        },\n        'HUmNu': function (x, y) {\n            return x >= y;\n        }\n    };\n    j = i['split'](',');\n    for (s = 0x0, m = n = 0xa; m--;)\n        j[m] = s -= j[m];\n    for (s *= oohZaF['QjuJI'](j[0xb], oohZaF['qBbfn'](-j[0xb], j[n])); oohZaF['HUmNu'](j[--n], -s););\n    console['log'](++n);\n});", "test_cases": [["1,1,1,1,1,1,1,1,1,1,40,60\n1,1,1,1,1,3,3,3,3,3,50,50\n10,10,10,10,10,10,10,10,10,10,50,49", "4\n7\n6"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",'utf8').trim().split(/\\s/).map(function(i){j=i.split(',');for(s=0,m=n=10;m--;)j[m]=s-=j[m];for(s*=j[11]/(-j[11]-j[n]);j[--n]>=-s;);console.log(++n);})", "language": "JavaScript"}
{"filename": "p00039_1", "type": "JavaScript", "obfuscated": "r = '.IVXLCDM', require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a')['map'](function (i) {\n    var lRBwBl = {\n        'hfytq': function (x, y) {\n            return x / y;\n        },\n        'KhWIU': function (x, y) {\n            return x - y;\n        },\n        'qZrKF': function (x, y) {\n            return x % y;\n        },\n        'QmfwR': function (x, y) {\n            return x > y;\n        }\n    };\n    i ? (n = s = p = 0x0, i['split']('')['map'](function (c) {\n        n = Math['pow'](0xa, ~~lRBwBl['hfytq'](n = r['indexOf'](c), 0x2)) / lRBwBl['KhWIU'](0x2, lRBwBl['qZrKF'](n, 0x2)), lRBwBl['QmfwR'](n, p) ? s -= p * 0x2 : 0x0, s += n, p = n;\n    }), console['log'](s)) : 0x0;\n});", "test_cases": [["IV\nCCCCLXXXXVIIII\nCDXCIX", "4\n499\n499"]], "original": "r=\".IVXLCDM\",require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split('\\n').map(function(i){i?(n=s=p=0,i.split('').map(function(c){n=Math.pow(10,~~((n=r.indexOf(c))/2))/(2-(n%2)),n>p?s-=p*2:0,s+=n,p=n}),console.log(s)):0})", "language": "JavaScript"}
{"filename": "p00064_1", "type": "JavaScript", "obfuscated": "var ans = 0x0;\nrequire('fs')['readFileSync']('/dev/stdin', 'utf8')['match'](/\\d+/g)['forEach'](function (elem) {\n    var oLWBtn = {\n        'ZLwWg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    ans += oLWBtn['ZLwWg'](parseInt, elem, 0xa);\n});\nconsole['log'](ans);", "test_cases": [["Thereare100yenonthetable.Iam17yearsold.\nIshouldgohomeat6pm.", "123"]], "original": "var ans=0;\nrequire(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").match(/\\d+/g).forEach(function(elem){\n\tans += parseInt(elem, 10);\n});\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p00092_1", "type": "JavaScript", "obfuscated": "function seach(y, x) {\n    var uGCVxl = {\n        'xagnE': function (x, y) {\n            return x == y;\n        },\n        'QOOUA': function (x, y) {\n            return x < y;\n        },\n        'JHhEE': function (x, y) {\n            return x + y;\n        },\n        'fcZYE': function (x, y) {\n            return x + y;\n        },\n        'gjUjS': function (x, y) {\n            return x >= y;\n        },\n        'TjXgU': function (x, y) {\n            return x + y;\n        }\n    };\n    if (uGCVxl['xagnE'](yx[y][x], '*'))\n        return 0x0;\n    var dy = [\n        -0x1,\n        -0x1,\n        0x0\n    ];\n    var dx = [\n        -0x1,\n        0x0,\n        -0x1\n    ];\n    var min = n;\n    for (var i = 0x0; uGCVxl['QOOUA'](i, 0x3); i++) {\n        var yy = uGCVxl['JHhEE'](y, dy[i]);\n        var xx = uGCVxl['fcZYE'](x, dx[i]);\n        if (yy < 0x0 || uGCVxl['gjUjS'](yy, n) || uGCVxl['QOOUA'](xx, 0x0) || xx >= n)\n            return 0x1;\n        min = Math['min'](min, yx[yy][xx]);\n    }\n    return uGCVxl['TjXgU'](min, 0x1);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var max = 0x0;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        var str = Arr['shift']();\n        yx['push'](str['split'](''));\n    }\n    for (var y = 0x0; y < n; y++) {\n        for (var x = 0x0; x < n; x++) {\n            yx[y][x] = seach(y, x);\n            max = Math['max'](max, yx[y][x]);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["10\n...*....**\n..........\n**....**..\n........*.\n..*.......\n..........\n.*........\n..........\n....*..***\n.*....*...\n10\n****.*****\n*..*.*....\n****.*....\n*....*....\n*....*****\n..........\n****.*****\n*..*...*..\n****...*..\n*..*...*..\n0", "5\n3"]], "original": "function seach(y,x){\n   if(yx[y][x]==\"*\")return 0;\n   var dy=[-1,-1,0];\n   var dx=[-1,0,-1];\n   var min=n;\n   for(var i=0;i<3;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=n || xx<0 || xx>=n)return 1;\n      min=Math.min(min,yx[yy][xx]);\n   }\n   return min+1;\n}\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var max=0;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      var str=Arr.shift();\n      yx.push(str.split(\"\"));\n   }\n   for(var y=0;y<n;y++){\n      for(var x=0;x<n;x++){\n         yx[y][x]=seach(y,x);\n         max=Math.max(max,yx[y][x]);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00118_1", "type": "JavaScript", "obfuscated": "function bomb(y, x, v) {\n    var HbYuCE = {\n        'rEQRV': function (x, y) {\n            return x < y;\n        },\n        'udFwT': function (x, y) {\n            return x + y;\n        },\n        'YoRrF': function (x, y) {\n            return x >= y;\n        },\n        'kqftx': function (x, y) {\n            return x == y;\n        },\n        'HWtyG': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; HbYuCE['rEQRV'](i, 0x4); i++) {\n        var yy = HbYuCE['udFwT'](y, dy[i]);\n        var xx = HbYuCE['udFwT'](x, dx[i]);\n        if (HbYuCE['rEQRV'](yy, 0x0) || yy >= n[0x0] || xx < 0x0 || HbYuCE['YoRrF'](xx, n[0x1]))\n            continue;\n        if (HbYuCE['kqftx'](v, yx[yy][xx])) {\n            yx[yy][xx] = 0x0;\n            HbYuCE['HWtyG'](bomb, yy, xx, v);\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (n[0x0] == 0x0 && n[0x1] == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n[0x0]; i++) {\n        var arr = Arr['shift']()['split']('');\n        yx['push'](arr);\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < n[0x0]; i++) {\n        for (var j = 0x0; j < n[0x1]; j++) {\n            var v = yx[i][j];\n            if (v == '@' || v == '#' || v == '*') {\n                cnt++;\n                yx[i][j] = 0x0;\n                bomb(i, j, v);\n            }\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["10 10\n####*****@\n@#@@@@#*#*\n@##***@@@*\n#****#*@**\n##@*#@@*##\n*@@@@*@@@#\n***#@*@##*\n*@@@*@@##@\n*@*#*@##**\n@****#@@#@\n0 0", "33"]], "original": "function bomb(y,x,v){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=n[0] || xx<0 || xx>=n[1])continue;\n      if(v==yx[yy][xx]){yx[yy][xx]=0;bomb(yy,xx,v);}\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=(Arr.shift()).split(\" \").map(Number);\n   if(n[0]==0 && n[1]==0)break;\n   var yx=[];\n   for(var i=0;i<n[0];i++){\n      var arr=(Arr.shift()).split(\"\");\n      yx.push(arr);\n   }\n   var cnt=0;\n   for(var i=0;i<n[0];i++){\n      for(var j=0;j<n[1];j++){\n         var v=yx[i][j];\n         if(v==\"@\" || v==\"#\" || v==\"*\"){cnt++;yx[i][j]=0;bomb(i,j,v);}\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00168_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar dp = [\n    0x1,\n    0x2,\n    0x4\n];\nfor (var i = 0x3; i <= 0x1f; i++) {\n    dp[i] = dp[i - 0x1] + dp[i - 0x2] + dp[i - 0x3];\n}\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    console['log'](Math['ceil'](dp[n - 0x1] / 0xe42));\n}", "test_cases": [["1\n10\n20\n25\n0", "1\n1\n34\n701"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dp=[1,2,4];\nfor(var i=3;i<=31;i++){\n   dp[i]=dp[i-1]+dp[i-2]+dp[i-3];\n}\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   console.log(Math.ceil(dp[n-1]/3650));\n}", "language": "JavaScript"}
{"filename": "p00181_1", "type": "JavaScript", "obfuscated": "function seach(x) {\n    var FzGwjr = {\n        'eohPZ': function (x, y) {\n            return x < y;\n        },\n        'YmWJn': function (x, y) {\n            return x == y;\n        },\n        'hdvwu': function (x, y) {\n            return x + y;\n        },\n        'GIggH': function (x, y) {\n            return x > y;\n        },\n        'NiMLJ': function (x, y) {\n            return x < y;\n        },\n        'YLNHP': function (x, y) {\n            return x == y;\n        }\n    };\n    var flag = !![];\n    var cnt = 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; i < ary['length']; i++) {\n        if (FzGwjr['eohPZ'](x, ary[i])) {\n            flag = ![];\n            break;\n        } else if (FzGwjr['YmWJn'](FzGwjr['hdvwu'](sum, ary[i]), x)) {\n            sum = 0x0;\n            cnt++;\n        } else if (FzGwjr['GIggH'](FzGwjr['hdvwu'](sum, ary[i]), x)) {\n            sum = ary[i];\n            cnt++;\n        } else if (FzGwjr['NiMLJ'](FzGwjr['hdvwu'](sum, ary[i]), x)) {\n            sum += ary[i];\n        }\n        if (FzGwjr['YLNHP'](cnt, m)) {\n            flag = ![];\n            break;\n        }\n    }\n    return flag;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var mn = arr['shift']();\n    if (mn == '0\\x200')\n        break;\n    mn = mn['split']('\\x20')['map'](Number);\n    var m = mn[0x0];\n    var n = mn[0x1];\n    var ary = [];\n    while (n--)\n        ary['push'](arr['shift']() - 0x0);\n    var L = 0x0;\n    var R = 0x16e360;\n    while (!![]) {\n        var middle = Math['floor']((L + R) / 0x2);\n        if (seach(middle)) {\n            R = middle - 0x1;\n        } else {\n            L = middle + 0x1;\n        }\n        if (L > R)\n            break;\n    }\n    console['log'](R + 0x1);\n}", "test_cases": [["3 9\n500\n300\n800\n200\n100\n600\n900\n700\n400\n4 3\n1000\n1000\n1000\n0 0", "1800\n1000"]], "original": "function seach(x){\n   var flag=true;\n   var cnt=0;\n   var sum=0;\n   for(var i=0;i<ary.length;i++){\n      if(x<ary[i]){\n         flag=false;\n         break;\n      }else if(sum+ary[i]==x){\n         sum=0;\n         cnt++;\n      }else if(sum+ary[i]>x){\n         sum=ary[i];\n         cnt++;\n      }else if(sum+ary[i]<x){\n         sum+=ary[i];\n      }\n      if(cnt==m){\n         flag=false;\n         break;\n      }\n   }\n   return flag;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var mn=arr.shift();\n   if(mn==\"0 0\")break;\n   mn=mn.split(\" \").map(Number);\n   var m=mn[0];\n   var n=mn[1];\n   var ary=[];\n   while(n--)ary.push(arr.shift()-0);\n   var L=0;\n   var R=1500000\n   while(true){\n      var middle=Math.floor((L+R)/2);\n      if(seach(middle)){\n         R=middle-1;\n      }else{\n         L=middle+1;\n      }\n      if(L>R)break;\n   }\n   console.log(R+1);\n}", "language": "JavaScript"}
{"filename": "p00230_1", "type": "JavaScript", "obfuscated": "function bomb() {\n    var dqhQEf = {\n        'WXraQ': function (x, y) {\n            return x + y;\n        },\n        'GdPVi': function (x, y) {\n            return x == y;\n        },\n        'avLGM': function (x, y) {\n            return x != y;\n        },\n        'BnHTR': function (x, y) {\n            return x <= y;\n        },\n        'SvxSP': function (x, y) {\n            return x - y;\n        },\n        'QgGSx': function (x, y) {\n            return x + y;\n        },\n        'yWEuQ': function (x, y) {\n            return x + y;\n        }\n    };\n    var obj = {};\n    var ans = 'NA';\n    var leaf = [\n        [\n            0x0,\n            0x0,\n            0x0\n        ],\n        [\n            0x1,\n            0x0,\n            0x0\n        ]\n    ];\n    while (!![]) {\n        if (leaf['length'] == 0x0)\n            break;\n        var ary = leaf['shift']();\n        var x = ary[0x0];\n        var y = ary[0x1];\n        if (obj['hasOwnProperty'](dqhQEf['WXraQ'](x, ',') + y))\n            continue;\n        else\n            obj[dqhQEf['WXraQ'](x, ',') + y] = !![];\n        var cnt = ary[0x2];\n        var v = xy[x][y];\n        if (dqhQEf['GdPVi'](v, 0x1)) {\n            while (!![]) {\n                y++;\n                if (xy[x][y] != 0x1) {\n                    y--;\n                    break;\n                }\n            }\n        } else if (v == 0x2) {\n            while (!![]) {\n                y--;\n                if (dqhQEf['avLGM'](xy[x][y], 0x2))\n                    break;\n            }\n        }\n        if (dqhQEf['GdPVi'](y, n - 0x1)) {\n            ans = cnt;\n            break;\n        }\n        for (var i = 0x0; dqhQEf['BnHTR'](i, 0x2); i++)\n            leaf['push']([\n                dqhQEf['SvxSP'](0x1, x),\n                dqhQEf['QgGSx'](y, i),\n                dqhQEf['yWEuQ'](cnt, 0x1)\n            ]);\n    }\n    return ans;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var xy = [];\n    xy[0x0] = arr['shift']()['split']('\\x20')['map'](Number);\n    xy[0x1] = arr['shift']()['split']('\\x20')['map'](Number);\n    console['log'](bomb());\n}", "test_cases": [["8\n0 0 0 2 2 2 0 0\n1 1 1 1 0 0 0 0\n4\n1 1 2 2\n0 0 2 2\n0", "4\nNA"]], "original": "function bomb(){\n   var obj={};\n   var ans=\"NA\";\n   var leaf=[[0,0,0],[1,0,0]];\n   while(true){\n      if(leaf.length==0)break;\n      var ary=leaf.shift();\n      var x=ary[0];\n      var y=ary[1];\n      if(obj.hasOwnProperty(x+\",\"+y))continue;\n      else obj[x+\",\"+y]=true;\n      var cnt=ary[2];\n      var v=xy[x][y];\n      if(v==1){\n         while(true){\n            y++;\n            if(xy[x][y]!=1){\n               y--;\n               break;\n            }\n         }\n      }else if(v==2){\n         while(true){\n            y--;\n            if(xy[x][y]!=2)break;\n         }\n      }\n       if(y==n-1){\n         ans=cnt;\n         break;\n      }\n      for(var i=0;i<=2;i++)leaf.push([1-x,y+i,cnt+1]);\n   }\n   return ans;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var xy=[];\n   xy[0]=arr.shift().split(\" \").map(Number);\n   xy[1]=arr.shift().split(\" \").map(Number);\n   console.log(bomb());\n}", "language": "JavaScript"}
{"filename": "p00251_1", "type": "JavaScript", "obfuscated": "var plus = function (a, b) {\n    var VsCbzJ = {\n        'NCaIU': function (x, y) {\n            return x + y;\n        }\n    };\n    return VsCbzJ['NCaIU'](a, b);\n};\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar sum = 0x0;\nconsole['log'](Arr['reduce'](plus));", "test_cases": [["1\n2\n3\n4\n5\n6\n7\n8\n9\n10", "55"], ["4\n4\n8\n8\n8\n10\n10\n12\n16\n20", "100"]], "original": "var plus = function(a, b)\n{\n  return a + b;\n};\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar sum=0;\n\nconsole.log(Arr.reduce(plus));", "language": "JavaScript"}
{"filename": "p00423_1", "type": "JavaScript", "obfuscated": "(function (stdin) {\n    var sucKRH = {\n        'uemel': function (callee, param1) {\n            return callee(param1);\n        },\n        'BkvDl': function (x, y) {\n            return x < y;\n        },\n        'PdEsN': function (x, y) {\n            return x > y;\n        },\n        'lZboV': function (x, y) {\n            return x + y;\n        }\n    };\n    var lines = stdin['trim']()['split']('\\x0a');\n    while (0x1) {\n        var line = lines['shift']();\n        if (line == '0') {\n            break;\n        }\n        var n = sucKRH['uemel'](Number, line);\n        var a = 0x0, b = 0x0;\n        for (var i = 0x0; sucKRH['BkvDl'](i, n); i++) {\n            var numbers = lines['shift']()['split']('\\x20')['map'](Number);\n            if (numbers[0x0] == numbers[0x1]) {\n                a += numbers[0x0];\n                b += numbers[0x0];\n            } else if (sucKRH['PdEsN'](numbers[0x0], numbers[0x1])) {\n                a += sucKRH['lZboV'](numbers[0x0], numbers[0x1]);\n            } else {\n                b += numbers[0x0] + numbers[0x1];\n            }\n        }\n        console['log']([\n            a,\n            b\n        ]['join']('\\x20'));\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n9 1\n5 4\n0 8\n3\n9 1\n5 4\n1 0\n3\n9 1\n5 5\n1 8\n0", "19 8\n20 0\n15 14"]], "original": "(function(stdin) {\n  var lines = stdin.trim().split('\\n');\n  while(1) {\n    var line = lines.shift();\n    if (line == '0') {\n      break;\n    }\n    var n = Number(line);\n    var a = 0, b = 0;\n    for (var i = 0; i < n; i++) {\n      var numbers = lines.shift().split(' ').map(Number);\n      if (numbers[0] == numbers[1]) {\n        a += numbers[0];\n        b += numbers[0];\n      } else if (numbers[0] > numbers[1]) {\n        a += numbers[0] + numbers[1];\n      } else {\n      \tb += numbers[0] + numbers[1];\n      }\n    }\n    console.log([a, b].join(' '));\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p00740_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var np = Arr['shift']();\n    if (np == '0\\x200')\n        break;\n    np = np['split']('\\x20')['map'](Number);\n    var n = np[0x0];\n    var p = np[0x1];\n    var sum = p;\n    var arr = [];\n    for (var i = 0x0; i < n; i++)\n        arr['push'](0x0);\n    var j = 0x0;\n    for (var i = 0x0; i < 0xf4240; i++) {\n        if (j == arr['length'])\n            j = 0x0;\n        if (p > 0x0) {\n            p--;\n            arr[j]++;\n            if (p == 0x0 && sum == arr[j]) {\n                console['log'](j);\n                break;\n            }\n        } else {\n            p = arr[j];\n            arr[j] = 0x0;\n        }\n        j++;\n    }\n}", "test_cases": [["3 2\n3 3\n3 50\n10 29\n31 32\n50 2\n50 50\n0 0", "1\n0\n1\n5\n30\n1\n13"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var np=Arr.shift();\n   if(np==\"0 0\")break;\n   np=np.split(\" \").map(Number);\n   var n=np[0];\n   var p=np[1];\n   var sum=p;\n   var arr=[];\n   for(var i=0;i<n;i++)arr.push(0);\n   var j=0;\n   for(var i=0;i<1000000;i++){\n      if(j==arr.length)j=0;\n      if(p>0){\n         p--;\n         arr[j]++;\n         if(p==0 && sum==arr[j]){console.log(j);break;}\n      }else{\n         p=arr[j];\n         arr[j]=0;\n      }\n      j++;\n   }\n}", "language": "JavaScript"}
{"filename": "p00748_1", "type": "JavaScript", "obfuscated": "var a = [0x1];\nfor (var i = 0x1; i < 0x186a0; i++)\n    a[i] = a[i - 0x1] + i + 0x1;\nvar b = [0x1];\nvar i = 0x1;\nwhile (!![]) {\n    b[i] = b[i - 0x1] + a[i];\n    if (b[i] > 0x186a0)\n        break;\n    i++;\n}\nvar dpA = [];\nvar dpB = [];\nfor (var i = 0x0; i < 0x186a0; i++)\n    dpA[i] = Infinity;\nfor (var i = 0x0; i < 0x186a0; i++)\n    dpB[i] = Infinity;\ndpA[0x0] = 0x0;\ndpB[0x0] = 0x0;\nfor (var i = 0x0; i < 0x186a0; i++) {\n    for (var j = 0x0; j < b['length']; j++) {\n        if (i - b[j] >= 0x0)\n            dpA[i] = Math['min'](dpA[i - b[j]] + 0x1, dpA[i]);\n        if (b[j] % 0x2 == 0x1 && i - b[j] >= 0x0)\n            dpB[i] = Math['min'](dpB[i - b[j]] + 0x1, dpB[i]);\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nwhile (!![]) {\n    var n = arr['shift']();\n    if (n == 0x0)\n        break;\n    console['log'](dpA[n] + '\\x20' + dpB[n]);\n}", "test_cases": [["40\n14\n5\n165\n120\n103\n106\n139\n0", "2 6\n2 14\n2 5\n1 1\n1 18\n5 35\n4 4\n3 37"]], "original": "var a=[1];\nfor(var i=1;i<100000;i++)a[i]=a[i-1]+i+1;\nvar b=[1];\nvar i=1;\nwhile(true){\n   b[i]=b[i-1]+a[i];\n   if(b[i]>100000)break;\n   i++;\n}\nvar dpA=[];\nvar dpB=[];\nfor(var i=0;i<100000;i++)dpA[i]=Infinity;\nfor(var i=0;i<100000;i++)dpB[i]=Infinity;\ndpA[0]=0;\ndpB[0]=0;\nfor(var i=0;i<100000;i++){\n   for(var j=0;j<b.length;j++){\n      if(i-b[j]>=0)dpA[i]=Math.min(dpA[i-b[j]]+1,dpA[i]);\n      if(b[j]%2==1 && i-b[j]>=0)dpB[i]=Math.min(dpB[i-b[j]]+1,dpB[i]);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   console.log(dpA[n]+\" \"+dpB[n]);\n}", "language": "JavaScript"}
{"filename": "p00760_1", "type": "JavaScript", "obfuscated": "const input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nconst lines = input['trim']()['split']('\\x0a');\nconst nextDay = (y, m, d) => {\n    const OcJkBn = {\n        'hCIRw': function (x, y) {\n            return x + y;\n        },\n        'ehaNs': function (x, y) {\n            return x % y;\n        },\n        'LNBZF': function (x, y) {\n            return x > y;\n        },\n        'uMGjm': function (x, y) {\n            return x === y;\n        },\n        'ezflT': function (x, y) {\n            return x > y;\n        },\n        'foLxp': function (x, y) {\n            return x % y;\n        }\n    };\n    d = OcJkBn['hCIRw'](d, 0x1);\n    if (OcJkBn['ehaNs'](y, 0x3) === 0x0) {\n        if (OcJkBn['LNBZF'](d, 0x14)) {\n            d = 0x1;\n            m += 0x1;\n            if (OcJkBn['uMGjm'](m, 0xb)) {\n                m = 0x1;\n                y++;\n            }\n        }\n    } else {\n        if (OcJkBn['ezflT'](d, 0x14)) {\n            d = 0x1;\n            m += 0x1;\n            if (OcJkBn['uMGjm'](m, 0xb)) {\n                m = 0x1;\n                y++;\n            }\n        } else if (OcJkBn['LNBZF'](d, 0x13) && OcJkBn['uMGjm'](OcJkBn['foLxp'](m, 0x2), 0x0)) {\n            d = 0x1;\n            m += 0x1;\n            if (OcJkBn['uMGjm'](m, 0xb)) {\n                m = 0x1;\n                y++;\n            }\n        }\n    }\n    return [\n        y,\n        m,\n        d\n    ];\n};\nlines['shift']();\nlines['forEach'](line => {\n    const SjxyjZ = {\n        'VvmJM': function (x, y) {\n            return x !== y;\n        },\n        'lCqgN': function (x, y) {\n            return x !== y;\n        }\n    };\n    let [y, m, d] = line['trim']()['split']('\\x20')['map'](Number);\n    let count = 0x1;\n    while (SjxyjZ['VvmJM'](y, 0x3e8) || SjxyjZ['lCqgN'](m, 0x1) || d !== 0x1) {\n        [y, m, d] = nextDay(y, m, d);\n        count++;\n    }\n    console['log'](count - 0x1);\n});", "test_cases": [["8\n1 1 1\n344 3 1\n696 5 1\n182 9 5\n998 8 7\n344 2 19\n696 4 19\n999 10 20", "196470\n128976\n59710\n160715\n252\n128977\n59712\n1"]], "original": "const input = require('fs').readFileSync('/dev/stdin', 'utf8').trim()\nconst lines = input.trim().split(\"\\n\")\n\nconst nextDay = (y,m,d) => {\n    d = d + 1\n    if(y%3 === 0) {\n        if(d > 20) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        }\n    } else {\n        if(d > 20) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        } else if(d > 19 && m %2 === 0) {\n            d = 1\n            m += 1\n            if(m === 11) {\n                m = 1\n                y++\n            }\n        }\n    }\n    return [y,m,d]\n}\nlines.shift()\nlines.forEach(line => {\n    let [y,m,d] = line.trim().split(' ').map(Number)\n    let count = 1\n    while (y !== 1000 || m !== 1 || d !== 1) {\n         [y,m,d] = nextDay(y,m,d)\n        count++\n    }\n    console.log(count - 1)\n})\n", "language": "JavaScript"}
{"filename": "p01049_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar [a, d] = arr['shift']()['split']('\\x20')['map'](Number);\nvar retu = [];\nfor (var i = 0x0; i < n; i++) {\n    retu['push'](a + i * d);\n}\nvar m = arr['shift']() - 0x0;\nfor (var i = 0x0; i < m; i++) {\n    var [x, y, z] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (x == 0x0)\n        [retu[y - 0x1], retu[z - 0x1]] = [\n            retu[z - 0x1],\n            retu[y - 0x1]\n        ];\n    else\n        retu[y - 0x1] = retu[z - 0x1];\n}\nvar k = arr['shift']() - 0x0;\nconsole['log'](retu[k - 0x1]);", "test_cases": [["5\n2 3\n3\n0 2 5\n0 3 5\n1 2 4\n2", "11"], ["6\n5 5\n4\n0 1 2\n1 1 2\n0 4 1\n1 1 6\n3", "15"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar [a,d]=arr.shift().split(\" \").map(Number);\nvar retu=[];\nfor(var i=0;i<n;i++){\n   retu.push(a+i*d);\n}\nvar m=arr.shift()-0;\nfor(var i=0;i<m;i++){\n   var [x,y,z] = arr.shift().split(\" \").map(Number);\n   if(x==0) [retu[y-1],retu[z-1]]=[retu[z-1],retu[y-1]]\n   else retu[y-1]=retu[z-1];\n}\nvar k=arr.shift()-0;\nconsole.log(retu[k-1]);\n\n", "language": "JavaScript"}
{"filename": "p01273_1", "type": "JavaScript", "obfuscated": "var data = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar input = data['trim']()['split']('\\x0a');\nvar line = 0x0;\nwhile (!![]) {\n    var nm = input[line]['split']('\\x20')['map'](Number);\n    line++;\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0 && m == 0x0)\n        break;\n    var infected = [];\n    for (var i = 0x0; i < n; i++)\n        infected[i] = !![];\n    infected[0x0] = ![];\n    var tsd = [];\n    for (var i = 0x0; i < m; i++) {\n        var packet = input[line]['split']('\\x20')['map'](Number);\n        line++;\n        tsd['push']([\n            packet[0x0],\n            packet[0x1] - 0x1,\n            packet[0x2] - 0x1\n        ]);\n    }\n    tsd['sort'](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    tsd['forEach'](function (packet) {\n        var s = packet[0x1];\n        var d = packet[0x2];\n        if (!infected[s])\n            infected[d] = ![];\n    });\n    var answer = 0x0;\n    infected['forEach'](function (packet) {\n        if (!packet)\n            answer++;\n    });\n    console['log'](answer);\n}", "test_cases": [["3 2\n1 1 2\n2 2 3\n3 2\n2 3 2\n1 2 1\n0 0", "3\n1"]], "original": "var data = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar input = data.trim().split(\"\\n\");\nvar line = 0;\nwhile (true) {\n    var nm = input[line].split(\" \").map(Number);\n    line++;\n    var n = nm[0];\n    var m = nm[1];\n    if (n == 0 && m == 0)\n        break;\n    var infected = [];\n    for (var i = 0; i < n; i++)\n        infected[i] = true;\n    infected[0] = false;\n    var tsd = [];\n    for (var i = 0; i < m; i++) {\n        var packet = input[line].split(\" \").map(Number);\n        line++;\n        tsd.push([packet[0], packet[1] - 1, packet[2] - 1]);\n    }\n    tsd.sort(function (a, b) {\n        return a[0] - b[0];\n    });\n    tsd.forEach(function (packet) {\n        var s = packet[1];\n        var d = packet[2];\n        if (!infected[s])\n            infected[d] = false;\n    });\n    var answer = 0;\n    infected.forEach(function (packet) {\n        if (!packet)\n            answer++;\n    });\n    console.log(answer);\n}", "language": "JavaScript"}
{"filename": "p01314_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var jPUYqN = {\n        'nezPG': function (x, y) {\n            return x == y;\n        },\n        'hQEgR': function (x, y) {\n            return x < y;\n        },\n        'ZEwkc': function (x, y) {\n            return x > y;\n        },\n        'HXKTb': function (x, y) {\n            return x - y;\n        },\n        'AIZuO': function (x, y) {\n            return x / y;\n        },\n        'RZMzr': function (x, y) {\n            return x * y;\n        },\n        'UkoQQ': function (x, y) {\n            return x - y;\n        },\n        'ETLrK': function (x, y) {\n            return x == y;\n        },\n        'tRHoc': function (x, y) {\n            return x - y;\n        },\n        'kmsfU': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['split']('\\x0a');\n    for (var i = 0x0; 0x1; i++) {\n        var n = parseInt(input[i], 0xa);\n        var ans = 0x0;\n        if (jPUYqN['nezPG'](n, 0x0))\n            break;\n        for (var j = 0x2; jPUYqN['hQEgR'](j, n); j++) {\n            if (jPUYqN['ZEwkc'](jPUYqN['HXKTb'](n, jPUYqN['AIZuO'](jPUYqN['RZMzr'](j, jPUYqN['UkoQQ'](j, 0x1)), 0x2)), 0x0) && jPUYqN['ETLrK'](jPUYqN['tRHoc'](n, jPUYqN['kmsfU'](j * jPUYqN['UkoQQ'](j, 0x1), 0x2)) % j, 0x0)) {\n                ans++;\n            }\n        }\n        console['log'](ans);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["9\n500\n0", "2\n3"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    for(var i = 0;1;i++){\n        var n = parseInt(input[i],10);var ans = 0;\n        if(n == 0)\n            break;\n        for(var j = 2;j < n;j++){\n            if(n - j * (j - 1) / 2 > 0 && (n - j * (j - 1) / 2) % j == 0){\n                ans++;\n            }\n        }\n        console.log(ans);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p01316_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = arr['shift']()['split']('\\x20');\n    if (nm['join']('\\x20') == '0\\x200')\n        break;\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var M = [];\n    for (var i = 0x0; i < m; i++)\n        M['push'](arr['shift']() - 0x0);\n    var N = [];\n    for (var i = 0x0; i < n; i++)\n        N['push'](arr['shift']() - 0x0);\n    var dp = [];\n    for (var i = 0x0; i <= n; i++) {\n        dp[i] = [];\n        for (var j = 0x0; j <= 0xff; j++) {\n            dp[i][j] = Infinity;\n        }\n    }\n    dp[0x0][0x80] = 0x0;\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = 0x0; j <= 0xff; j++) {\n            if (dp[i - 0x1][j] != Infinity) {\n                for (var k = 0x0; k < m; k++) {\n                    var jm = j + M[k];\n                    if (jm < 0x0)\n                        jm = 0x0;\n                    if (jm > 0xff)\n                        jm = 0xff;\n                    dp[i][jm] = Math['min'](dp[i][jm], dp[i - 0x1][j] + Math['pow'](N[i - 0x1] - jm, 0x2));\n                }\n            }\n        }\n    }\n    var min = Infinity;\n    dp[n]['forEach'](function (v) {\n        min = Math['min'](min, v);\n    });\n    console['log'](min);\n}", "test_cases": [["2 7\n4\n2\n1\n0\n-1\n-2\n-4\n131\n137\n2 7\n4\n2\n1\n0\n-1\n-2\n-4\n131\n123\n10 7\n-4\n-2\n-1\n0\n1\n2\n4\n132\n134\n135\n134\n132\n128\n124\n122\n121\n122\n5 1\n255\n0\n0\n0\n0\n0\n4 1\n0\n255\n0\n255\n0\n0 0", "2\n8\n0\n325125\n65026"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nm=arr.shift().split(\" \");\n   if(nm.join(\" \")==\"0 0\")break;\n   var n=nm[0];\n   var m=nm[1];\n   var M=[];\n   for(var i=0;i<m;i++)M.push(arr.shift()-0);\n   var N=[];\n   for(var i=0;i<n;i++)N.push(arr.shift()-0);\n   var dp=[];\n   for(var i=0;i<=n;i++){\n      dp[i]=[];\n      for(var j=0;j<=255;j++){\n         dp[i][j]=Infinity;\n      }\n   }\n   dp[0][128]=0;\n   for(var i=1;i<=n;i++){\n      for(var j=0;j<=255;j++){\n         if(dp[i-1][j]!=Infinity){\n            for(var k=0;k<m;k++){\n               var jm=j+M[k];\n               if(jm<0)jm=0;\n               if(jm>255)jm=255;\n               dp[i][jm]=Math.min(dp[i][jm],dp[i-1][j]+Math.pow(N[i-1]-jm,2));\n            }\n         }\n      }\n   }\n   var min=Infinity;\n   dp[n].forEach(function(v){\n      min=Math.min(min,v);\n   });\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01479_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar str = input['replace'](/egg/g, 'E')['replace'](/chicken/g, 'C');\nvar ary = str['replace'](/EE/g, 'EAE')['replace'](/CC/g, 'CAC')['split']('A');\nvar ans = '';\nary['forEach'](function (v) {\n    var BZTlLJ = {\n        'FTtvT': function (x, y) {\n            return x < y;\n        }\n    };\n    if (BZTlLJ['FTtvT'](ans['length'], v['length']))\n        ans = v;\n});\nconsole['log'](ans['slice'](-0x1) == 'E' ? 'egg' : 'chicken');", "test_cases": [["eggchickenegg", "egg"], ["chickeneggeggchicken", "egg"], ["eggeggchicken", "chicken"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str=input.replace(/egg/g,\"E\").replace(/chicken/g,\"C\");\nvar ary=str.replace(/EE/g,\"EAE\").replace(/CC/g,\"CAC\").split(\"A\");\nvar ans=\"\";\nary.forEach(function(v){\n   if(ans.length<v.length)ans=v;\n});\nconsole.log((ans.slice(-1)==\"E\")?\"egg\":\"chicken\");", "language": "JavaScript"}
{"filename": "p02234_1", "type": "JavaScript", "obfuscated": "config = {\n    'input': '/dev/stdin',\n    'newline': '\\x0a'\n};\nM = require('fs')['readFileSync'](config['input'], 'ascii')['trim']()['split'](config['newline']);\nM = M['map'](function (line) {\n    return line['split']('\\x20')['map'](Number);\n});\nn = M[0x0][0x0];\nmin = {};\nfor (i = 0x1; i <= n; i++)\n    min[i] = {};\nfor (i = 0x1; i <= n; i++)\n    min[i][i] = 0x0;\nfor (i = 0x1; i < n; i++) {\n    for (j = 0x1, k = 0x1 + i; k <= n; j++, k++) {\n        min[j][k] = Number['MAX_VALUE'];\n        for (l = j; l < k; l++) {\n            min[j][k] = Math['min'](min[j][k], M[j][0x0] * M[l][0x1] * M[k][0x1] + min[j][l] + min[l + 0x1][k]);\n        }\n    }\n}\nconsole['log'](min[0x1][n]);", "test_cases": [["6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25", "15125"]], "original": "//config = { input: 'tmp', newline: '\\r\\n' }; // win\nconfig = { input: '/dev/stdin', newline: '\\n' }; // linux\n\nM = require('fs').readFileSync(config.input, 'ascii')\n  .trim()\n  .split(config.newline);\nM = M.map(\n  function (line) {\n    return line.split(' ').map(Number);\n  });\nn = M[0][0];\n\nmin = {};\nfor (i = 1; i <= n; i++) min[i] = {};\nfor (i = 1; i <= n; i++) min[i][i] = 0;\nfor (i = 1; i < n; i++) {\n  for (j = 1, k = 1 + i; k <= n; j++, k++) {\n    min[j][k] = Number.MAX_VALUE;\n    for (l = j; l < k; l++) {\n      min[j][k] = Math.min(\n        min[j][k],\n        M[j][0] * M[l][1] * M[k][1] + min[j][l] + min[l+1][k]);\n    }\n  }\n}\nconsole.log(min[1][n]);", "language": "JavaScript"}
{"filename": "p02250_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar str = arr[0x0];\nvar n = arr[0x1] - 0x0 + 0x2;\nvar ans = '';\nfor (var i = 0x2; i < n; i++) {\n    ans += (str['includes'](arr[i]) ? 0x1 : 0x0) + '\\x0a';\n}\nconsole['log'](ans['trim']());", "test_cases": [["aabaaa\n4\naa\nba\nbb\nxyz", "1\n1\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar str=arr[0];\nvar n = (arr[1]-0)+2;\nvar ans=\"\";\nfor(var i=2;i<n;i++){\n   ans += (str.includes(arr[i])?1:0) +\"\\n\";\n}\nconsole.log(ans.trim());\n", "language": "JavaScript"}
{"filename": "p02343_1", "type": "JavaScript", "obfuscated": "const findSet = p => {\n    const UeTRbW = {\n        'TgHVl': function (x, y) {\n            return x != y;\n        }\n    };\n    return x => {\n        if (UeTRbW['TgHVl'](x, p[x]))\n            p[x] = findSet(p)(p[x]);\n        return p[x];\n    };\n};\nconst link = (p, r) => {\n    const NXirzW = {\n        'idDPF': function (x, y) {\n            return x > y;\n        }\n    };\n    return (x, y) => {\n        if (NXirzW['idDPF'](r[x], r[y]))\n            p[y] = x;\n        else {\n            p[x] = y;\n            if (r[x] === r[y])\n                r[y]++;\n        }\n    };\n};\nconst dsFactory = n => {\n    const NiGDTg = {\n        'lYnqT': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    this['p'] = [];\n    this['r'] = [];\n    for (let i = 0x0; i < n; i++) {\n        this['p'][i] = i;\n        this['r'][i] = 0x0;\n    }\n    this['findSet'] = NiGDTg['lYnqT'](findSet, this['p']);\n    this['link'] = link(this['p'], this['r']);\n    return {\n        'same': (x, y) => this['findSet'](x) === this['findSet'](y),\n        'unite': (x, y) => this['link'](this['findSet'](x), this['findSet'](y))\n    };\n};\nconst input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst lines = input['split']('\\x0a');\nconst [n, q] = lines['shift']()['split']('\\x20')['map'](Number);\nconst ds = dsFactory(n);\nlines['forEach'](x => {\n    const [t, a, b] = x['split']('\\x20')['map'](Number);\n    switch (t) {\n    case 0x0:\n        ds['unite'](a, b);\n        break;\n    case 0x1:\n        const ret = ds['same'](a, b) ? 0x1 : 0x0;\n        console['log'](ret);\n        break;\n    }\n});", "test_cases": [["5 12\n0 1 4\n0 2 3\n1 1 2\n1 3 4\n1 1 4\n1 3 2\n0 1 3\n1 2 4\n1 3 0\n0 0 4\n1 0 2\n1 3 0", "0\n0\n1\n1\n1\n0\n1\n1"]], "original": "const findSet = p => {\n\treturn x => {\n\t\tif (x != p[x]) p[x] = findSet(p)(p[x]);\n\t\treturn p[x];\n\t}\n}\nconst link = (p,r) => {\n\treturn (x,y) => {\n\t\tif (r[x] > r[y]) p[y] = x;\n\t\telse {\n\t\t\tp[x] = y;\n\t\t\tif (r[x] === r[y]) r[y]++;\n\t\t}\n\t}\n}\nconst dsFactory = n => {\n\tthis.p = [];\n\tthis.r = [];\n\tfor (let i = 0; i < n; i++) {\n\t\tthis.p[i] = i;\n\t\tthis.r[i] = 0;\n\t}\n\tthis.findSet = findSet(this.p);\n\tthis.link = link(this.p,this.r);\n\treturn {\n\t\tsame: (x,y) => this.findSet(x) === this.findSet(y),\n\t\tunite: (x,y) => this.link(this.findSet(x),this.findSet(y))\n\t}\n}\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8');\nconst lines = input.split(\"\\n\");\nconst [n,q] = lines.shift().split(\" \").map(Number);\n\nconst ds = dsFactory(n);\n\nlines.forEach(x => {\n\tconst [t,a,b] = x.split(\" \").map(Number);\n\tswitch (t) {\n\t\tcase 0:\n\t\t\tds.unite(a,b);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tconst ret = ds.same(a,b) ? 1 : 0;\n\t\t\tconsole.log(ret);\n\t\t\tbreak;\n\t}\n});\n", "language": "JavaScript"}
{"filename": "p02555_1", "type": "JavaScript", "obfuscated": "const main = input => {\n    const nQeFIn = {\n        'hNASL': function (x, y) {\n            return x ** y;\n        },\n        'NeGcI': function (callee, param1) {\n            return callee(param1);\n        },\n        'tAMDb': function (x, y) {\n            return x < y;\n        },\n        'XPhjc': function (x, y) {\n            return x - y;\n        },\n        'QzxMB': function (x, y) {\n            return x >= y;\n        },\n        'pmrhQ': function (x, y) {\n            return x % y;\n        },\n        'yCLXt': function (x, y) {\n            return x + y;\n        },\n        'qasjt': function (x, y) {\n            return x + y;\n        },\n        'VvPdI': function (x, y) {\n            return x % y;\n        }\n    };\n    const mod = nQeFIn['hNASL'](0xa, 0x9) + 0x7;\n    const s = nQeFIn['NeGcI'](Number, input['trim']());\n    const dp = [\n        0x1,\n        ...new Array(s)['fill'](0x0)\n    ];\n    for (let x = 0x3; nQeFIn['tAMDb'](x, dp['length']); x++) {\n        let sum = 0x0;\n        for (let i = nQeFIn['XPhjc'](x, 0x3); nQeFIn['QzxMB'](i, 0x0); i--) {\n            sum = nQeFIn['pmrhQ'](nQeFIn['yCLXt'](sum, dp[i]), mod);\n        }\n        dp[x] = sum;\n    }\n    return console['log'](nQeFIn['qasjt'](nQeFIn['VvPdI'](dp[s], mod), mod) % mod);\n};\nprocess['env']['MYTEST'] ? process['env']['MYTEST'] === 'test' ? test() : main(require('fs')['readFileSync']('dev/stdin', 'utf8')) : main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7", "3"], ["2", "0"], ["1729", "294867501"]], "original": "const main = (input) => {\n  const mod = (10**9 + 7)\n  const s = Number(input.trim())\n\n  const dp = [1, ...new Array(s).fill(0)]\n\n  for (let x=3; x<dp.length; x++) {\n    let sum = 0\n\n    for (let i=x-3; i>=0; i--) {\n      sum = (sum + dp[i]) % mod\n    }\n\n    dp[x] = sum\n  }\n\n  return console.log((dp[s] % mod + mod) % mod)\n}\n\nprocess.env.MYTEST\n  ? (process.env.MYTEST === 'test' ? test() : main(require('fs').readFileSync('dev/stdin', 'utf8')))\n  : main(require('fs').readFileSync('/dev/stdin', 'utf8'))", "language": "JavaScript"}
{"filename": "p02678_1", "type": "JavaScript", "obfuscated": "(args => {\n    const DxpAQp = {\n        'nAcFz': function (x, y) {\n            return x > y;\n        },\n        'BTfYJ': function (x, y) {\n            return x <= y;\n        },\n        'cihmX': function (callee) {\n            return callee();\n        },\n        'SHTQb': function (x, y) {\n            return x + y;\n        },\n        'Kyrsd': 'Yes\\x0a'\n    };\n    const [[N, M], ...path] = args['trim']()['split']('\\x0a')['map'](a => a['split']('\\x20')['map'](a => a | 0x0));\n    const dist = [], sign = [0x0], branch = [];\n    for (let i = 0x1; DxpAQp['BTfYJ'](i, N); i++) {\n        dist[i] = Infinity;\n        sign[i] = Infinity;\n        branch[i] = [];\n    }\n    for (let i = 0x0; i < M; i++) {\n        const [A, B] = path[i];\n        branch[A]['push'](B);\n        branch[B]['push'](A);\n    }\n    let stack = [];\n    function mark(step, i) {\n        for (let next of branch[i]) {\n            if (DxpAQp['nAcFz'](dist[next], step)) {\n                dist[next] = step;\n                sign[next] = i;\n                stack['push'](() => mark(step + 0x1, next));\n            }\n        }\n    }\n    mark(0x0, 0x1);\n    while (stack['length']) {\n        let s;\n        while (s = stack['pop']())\n            DxpAQp['cihmX'](s);\n    }\n    if (sign['slice'](0x2)['some'](v => v > N))\n        return console['log']('No');\n    console['log'](DxpAQp['SHTQb'](DxpAQp['Kyrsd'], sign['slice'](0x2)['join']('\\x0a')));\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 4\n1 2\n2 3\n3 4\n4 2", "Yes\n1\n2\n2"], ["6 9\n3 4\n6 1\n2 4\n5 3\n4 6\n1 5\n6 2\n4 5\n5 6", "Yes\n6\n5\n5\n1\n1"]], "original": "(args => {\n  const [[N,M],...path] = args.trim().split('\\n').map(a=>a.split(' ').map(a=>a|0));\n  const dist = [], sign = [0], branch = [];\n  for ( let i = 1; i <= N; i++ ) {\n    dist[i] = Infinity; sign[i] = Infinity; branch[i] = [];\n  }\n  for ( let i = 0; i < M; i++ ) {\n    const [A,B] = path[i];\n    branch[A].push(B);\n    branch[B].push(A);\n  }\n  let stack = [];\n  function mark( step, i ) {\n    for ( let next of branch[i] ) {\n      if ( dist[next] > step ) {\n        dist[next] = step;\n        sign[next] = i;\n        stack.push(()=>mark(step+1,next));\n      }\n    }\n  }\n  mark(0,1);\n  while( stack.length ) {\n    let s;\n    while ( s = stack.pop() ) s();\n  }\n  if ( sign.slice(2).some(v=>v>N) ) return console.log('No');\n  console.log('Yes\\n'+sign.slice(2).join('\\n'));\n})(require('fs').readFileSync('/dev/stdin', 'utf8'))\n", "language": "JavaScript"}
{"filename": "p02788_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var MnMiRy = {\n        'snBjq': function (x, y) {\n            return x - y;\n        },\n        'TRGQd': function (x, y) {\n            return x <= y;\n        },\n        'sIvZb': function (x, y) {\n            return x < y;\n        },\n        'gfnkP': function (x, y) {\n            return x > y;\n        },\n        'PmBlK': function (x, y) {\n            return x / y;\n        },\n        'trEgH': function (x, y) {\n            return x + y;\n        },\n        'HccfU': function (x, y) {\n            return x * y;\n        },\n        'bghCM': function (x, y) {\n            return x * y;\n        }\n    };\n    var N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    var D = MnMiRy['snBjq'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    var A = MnMiRy['snBjq'](input[0x0]['split']('\\x20')[0x2], 0x0);\n    var list = [];\n    for (var i = 0x1; MnMiRy['TRGQd'](i, N); i++) {\n        list['push'](input[i]['split']('\\x20')['map'](v => v - 0x0));\n    }\n    list = list['sort']((a, b) => a[0x0] - b[0x0]);\n    var ans = 0x0;\n    for (var i = 0x0; MnMiRy['sIvZb'](i, N); i++) {\n        var x = list[i];\n        if (MnMiRy['gfnkP'](x[0x1], 0x0)) {\n            var time = Math['ceil'](MnMiRy['PmBlK'](x[0x1], A));\n            ans += time;\n            for (var j = i; MnMiRy['sIvZb'](j, N); j++) {\n                var y = list[j];\n                if (MnMiRy['TRGQd'](y[0x0], MnMiRy['trEgH'](x[0x0], MnMiRy['HccfU'](D, 0x2)) + 0x1)) {\n                    y[0x1] -= MnMiRy['bghCM'](A, time);\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["3 3 2\n1 2\n5 4\n9 2", "2"], ["9 4 1\n1 5\n2 4\n3 3\n4 2\n5 1\n6 2\n7 3\n8 4\n9 5", "5"], ["3 0 1\n300000000 1000000000\n100000000 1000000000\n200000000 1000000000", "3000000000"]], "original": "function main(input) {\n  var N = input[0].split(\" \")[0]-0;\n  var D = input[0].split(\" \")[1]-0;\n  var A = input[0].split(\" \")[2]-0;\n  var list = [];\n  for(var i=1;i<=N;i++){\n    list.push(input[i].split(\" \").map(v=>v-0));\n  }\n  list = list.sort((a,b)=>a[0]-b[0]);\n\n  var ans = 0;\n  for (var i = 0; i < N; i++) {\n    var x = list[i];\n    if(x[1] > 0){\n      var time = Math.ceil(x[1]/A);\n      ans += time;\n      for(var j=i;j<N;j++){\n        var y = list[j];\n        if(y[0]<=x[0]+D*2+1){\n          y[1] -= A*time;\n        }else{\n          break;\n        }\n      }\n    }\n  }\n  console.log(ans);\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8').split(\"\\n\"))\n", "language": "JavaScript"}
{"filename": "p02862_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst ncr = (n, r, mod) => {\n    const pyWtwR = {\n        'okJLd': function (x, y) {\n            return x + y;\n        },\n        'JYMDA': function (x, y) {\n            return x > y;\n        },\n        'pCARD': function (x, y) {\n            return x <= y;\n        },\n        'QwPli': function (x, y) {\n            return x + y;\n        },\n        'parNS': function (x, y) {\n            return x - y;\n        },\n        'xBDkx': function (x, y) {\n            return x % y;\n        },\n        'SzXFy': function (x, y) {\n            return x > y;\n        },\n        'LVMeA': function (x, y) {\n            return x % y;\n        },\n        'GxemV': function (x, y) {\n            return x * y;\n        }\n    };\n    mod = mod || 0x3b9aca00 + 0x7;\n    const a = Math['max'](n, r);\n    const b = Math['min'](n, r);\n    const p = Math['min'](b, a - b);\n    const nu = new Array(p + 0x1);\n    const de = new Array(pyWtwR['okJLd'](p, 0x1));\n    let dest = 0x1;\n    if (pyWtwR['JYMDA'](p, 0x0)) {\n        for (let i = 0x1; pyWtwR['pCARD'](i, p); i++) {\n            nu[i] = pyWtwR['QwPli'](pyWtwR['parNS'](a, p), i);\n            de[i] = i;\n        }\n        for (let k = 0x2; pyWtwR['pCARD'](k, p); k++) {\n            const piv = de[k];\n            const j = pyWtwR['JYMDA'](piv, 0x1) ? -pyWtwR['xBDkx'](pyWtwR['parNS'](a, p), k) : 0x0;\n            for (let i = k; pyWtwR['pCARD'](i, p); i += k) {\n                nu[pyWtwR['okJLd'](i, j)] /= piv;\n                de[i] /= piv;\n            }\n        }\n        for (let i = 0x1; i <= p; i++) {\n            if (pyWtwR['SzXFy'](nu[i], 0x1))\n                dest = pyWtwR['LVMeA'](pyWtwR['GxemV'](dest, nu[i]), mod);\n        }\n    }\n    return dest;\n};\nfunction main(inp) {\n    const fUUCUm = {\n        'msnoE': function (callee, param1) {\n            return callee(param1);\n        },\n        'CvKgn': function (x, y) {\n            return x / y;\n        },\n        'Fgocz': function (x, y) {\n            return x >= y;\n        },\n        'oPsCC': function (x, y) {\n            return x - y;\n        },\n        'kKzZU': function (x, y) {\n            return x * y;\n        },\n        'nOPgB': function (x, y) {\n            return x * y;\n        },\n        'hGqcU': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'Ophvd': function (x, y) {\n            return x + y;\n        }\n    };\n    inp = inp['trim']()['split']('\\x20');\n    const x = Number(inp[0x0]);\n    const y = fUUCUm['msnoE'](Number, inp[0x1]);\n    let sum = 0x0;\n    for (let i = Math['floor'](fUUCUm['CvKgn'](x, 0x2)); fUUCUm['Fgocz'](i, 0x0); i--) {\n        const a = fUUCUm['oPsCC'](x, fUUCUm['kKzZU'](i, 0x2));\n        if (fUUCUm['nOPgB'](a, 0x2) + i === y) {\n            sum = fUUCUm['hGqcU'](ncr, fUUCUm['Ophvd'](i, a), i);\n        }\n    }\n    console['log'](sum);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3", "2"], ["2 2", "0"], ["999999 999999", "151840682"]], "original": "'use strict'\n\nconst ncr = (n, r, mod) => {\n  mod = mod || 1e9+7\n  const a = Math.max(n, r)\n  const b = Math.min(n, r)\n  const p = Math.min(b, a-b)\n  const nu = new Array(p + 1)\n  const de = new Array(p + 1)\n  let dest = 1\n  if (p > 0) {\n    for (let i = 1; i <= p; i++) {\n      nu[i] = a - p + i \n      de[i] = i\n    }\n    for (let k = 2; k <= p; k++) {\n      const piv = de[k]\n      const j = (piv > 1) ? -((a - p) % k) : 0\n      for (let i = k; i <= p; i += k) {\n        nu[i + j] /= piv; de[i] /= piv\n      }\n    }\n    for (let i = 1; i <= p; i++) {\n      if (nu[i] > 1) dest = dest * nu[i] % mod\n    }\n  }\n  return dest\n}\n\nfunction main(inp) {\n  inp = inp.trim().split(' ');\n  const x = Number(inp[0])\n  const y = Number(inp[1])\n\n  let sum = 0\n  for (let i = Math.floor(x / 2); i >= 0; i--) {\n    const a = x - i * 2\n    if (a * 2 + i === y) {\n      sum = ncr(i+a, i)\n    }\n  }\n  \n  console.log(sum)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03008_1", "type": "JavaScript", "obfuscated": "'use strict';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf-8');\nlet inputString = '';\nlet currentLine = 0x0;\nprocess['stdin']['on']('data', inputStdin => {\n    inputString += inputStdin;\n});\nprocess['stdin']['on']('end', _ => {\n    const ZTotLw = {\n        'TNbWo': function (callee) {\n            return callee();\n        }\n    };\n    inputString = inputString['split']('\\x0a');\n    ZTotLw['TNbWo'](main);\n});\nfunction readLine() {\n    return inputString[currentLine++];\n}\nfunction F(N, A, B) {\n    const eHYXSM = {\n        'ZrMJa': function (callee, param1) {\n            return callee(param1);\n        },\n        'WyIVe': function (x, y) {\n            return x + y;\n        },\n        'nTynF': function (x, y) {\n            return x <= y;\n        },\n        'uQGhw': function (x, y) {\n            return x < y;\n        },\n        'xcAwz': function (x, y) {\n            return x >= y;\n        },\n        'Xwsxh': function (x, y) {\n            return x - y;\n        }\n    };\n    let dp = eHYXSM['ZrMJa'](Array, eHYXSM['WyIVe'](N, 0x1))['fill'](0x0);\n    for (let n = 0x0; eHYXSM['nTynF'](n, N); n++) {\n        let x = n;\n        for (let j = 0x0; eHYXSM['uQGhw'](j, 0x3); j++) {\n            if (eHYXSM['xcAwz'](n, A[j])) {\n                let y = eHYXSM['WyIVe'](dp[eHYXSM['Xwsxh'](n, A[j])], B[j]);\n                if (eHYXSM['uQGhw'](x, y)) {\n                    x = y;\n                }\n            }\n        }\n        dp[n] = x;\n    }\n    return dp[N];\n}\nfunction main() {\n    const WrBquk = {\n        'WFqLv': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'bdKWq': function (callee) {\n            return callee();\n        },\n        'fWYXP': function (callee) {\n            return callee();\n        },\n        'yzXUA': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const n = WrBquk['WFqLv'](parseInt, WrBquk['bdKWq'](readLine), 0xa);\n    const a = WrBquk['fWYXP'](readLine)['split']('\\x20')['map'](_ => parseInt(_, 0xa));\n    const b = WrBquk['fWYXP'](readLine)['split']('\\x20')['map'](_ => parseInt(_, 0xa));\n    let n1 = F(n, a, b);\n    let n2 = WrBquk['yzXUA'](F, n1, b, a);\n    console['log'](n2);\n}", "test_cases": [["23\n1 1 1\n2 1 1", "46"]], "original": "'use strict';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.split('\\n')\n        // .map(str => str.trim());\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\nfunction F(N, A, B) {\n\tlet dp = Array(N+1).fill(0);\n\tfor (let n=0;n<=N;n++){\n\t\tlet x = n;\n\t\tfor (let j=0;j<3;j++){\n\t\t\tif (n>=A[j]){\n\t\t\t\tlet y = dp[n-A[j]] + B[j];\n\t\t\t\tif (x<y){\n\t\t\t\t\tx = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdp[n] = x;\n\t}\n\treturn dp[N];\n}\n\nfunction main() {\n    const n = parseInt(readLine(), 10);\n    const a = readLine().split(' ').map(_ => parseInt(_, 10));\n    const b = readLine().split(' ').map(_ => parseInt(_, 10));\n    let n1 = F(n, a, b);\n    let n2 = F(n1, b, a);\n\tconsole.log(n2);\n}\n", "language": "JavaScript"}
{"filename": "p03063_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction I(s, f) {\n    var Ilkaus = {\n        'GZlhz': function (x, y) {\n            return x || y;\n        }\n    };\n    this['_s'] = s['split']('\\x0a');\n    this['_c'] = 0x0;\n    this['_l'] = 0x0;\n    this['_f'] = Ilkaus['GZlhz'](f, Number);\n}\nI['prototype']['a'] = function () {\n    var euyZIa = {\n        'IxanH': function (x, y) {\n            return x === y;\n        }\n    };\n    var iVUNyg = '0|2|3|6|4|5|1'['split']('|');\n    var mmTDmO = 0x0;\n    while (!![]) {\n        switch (iVUNyg[mmTDmO++]) {\n        case '0':\n            var l = this['_s'][this['_l']];\n            continue;\n        case '1':\n            return this['_f'](a);\n        case '2':\n            if (!l)\n                return;\n            continue;\n        case '3':\n            var t = l['trim']()['split']('\\x20');\n            continue;\n        case '4':\n            this['_c']++;\n            continue;\n        case '5':\n            if (euyZIa['IxanH'](t['length'], this['_c'])) {\n                this['_c'] = 0x0;\n                this['_l']++;\n            }\n            continue;\n        case '6':\n            var a = t[this['_c']];\n            continue;\n        }\n        break;\n    }\n};\nI['prototype']['l'] = function () {\n    var l = this['_s'][this['_l']];\n    if (!l)\n        return;\n    this['_c'] = 0x0;\n    this['_l']++;\n    return l['split']('\\x20')['map'](this['_f']);\n};\nfunction main(input) {\n    var sjORJi = {\n        'YcUMC': function (x, y) {\n            return x === y;\n        },\n        'puYNF': function (x, y) {\n            return x < y;\n        }\n    };\n    var o = new I(input, String);\n    var n = Number(o['a']());\n    var s = o['a']();\n    var white = 0x0;\n    var black = 0x0;\n    for (var i = 0x0; i < s['length']; i++) {\n        if (s[i] === '.')\n            white += 0x1;\n    }\n    let min = white;\n    for (var i = 0x0; i < s['length']; i++) {\n        if (sjORJi['YcUMC'](s[i], '#')) {\n            black += 0x1;\n        } else {\n            white -= 0x1;\n        }\n        if (sjORJi['puYNF'](black + white, min)) {\n            min = black + white;\n        }\n    }\n    console['log'](min);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n#.#", "1"], ["5\n#.##.", "2"], ["9\n.........", "0"]], "original": "\"use strict\";\nfunction I(s,f){this._s=s.split(\"\\n\");this._c=0;this._l=0;this._f=f||Number}I.prototype.a=function(){var l=this._s[this._l];if(!l)return;var t=l.trim().split(\" \");var a=t[this._c];this._c++;if(t.length===this._c){this._c=0;this._l++}return this._f(a)};I.prototype.l=function(){var l=this._s[this._l];if(!l)return;this._c=0;this._l++;return l.split(\" \").map(this._f)};\n\nfunction main(input) {\n  var o = new I(input,String);\n\n  var n = Number(o.a());\n  var s = o.a();\n\n  var white = 0;\n  var black = 0;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] === \".\") white += 1;\n  }\n\n  let min = white;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] === \"#\") {\n      black += 1;\n    } else {\n      white -= 1;\n    }\n\n    if (black + white < min) {\n      min = black + white;\n    }\n  }\n  console.log(min);\n}\n\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03275_1", "type": "JavaScript", "obfuscated": "function median(l) {\n    var PZnmjj = {\n        'taJuu': function (x, y) {\n            return x / y;\n        }\n    };\n    return l['sort']()[Math['floor'](PZnmjj['taJuu'](l['length'], 0x2))];\n}\nfunction Main(input) {\n    var eZwfzA = {\n        'cdtLB': '0|1|4|2|3|5',\n        'UCLQQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'pkCNP': function (x, y) {\n            return x < y;\n        },\n        'cPqqc': function (x, y) {\n            return x + y;\n        },\n        'UNpIN': function (x, y) {\n            return x < y;\n        },\n        'MOWQd': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var epUEWu = eZwfzA['cdtLB']['split']('|');\n    var PNufqN = 0x0;\n    while (!![]) {\n        switch (epUEWu[PNufqN++]) {\n        case '0':\n            input = input['split']('\\x0a');\n            continue;\n        case '1':\n            N = eZwfzA['UCLQQ'](parseInt, input[0x0]);\n            continue;\n        case '2':\n            m = [];\n            continue;\n        case '3':\n            for (var i = 0x0; eZwfzA['pkCNP'](i, N); i++) {\n                for (var j = eZwfzA['cPqqc'](i, 0x1); eZwfzA['UNpIN'](j, N + 0x1); j++) {\n                    m['push'](eZwfzA['UCLQQ'](median, a['slice'](i, j)));\n                }\n            }\n            continue;\n        case '4':\n            a = input[0x1]['split']('\\x20');\n            continue;\n        case '5':\n            console['log'](eZwfzA['MOWQd'](median, m));\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n10 30 20", "30"], ["1\n10", "10"], ["10\n5 9 5 9 8 9 3 5 4 3", "8"]], "original": "function median (l) {\n  return l.sort()[Math.floor(l.length / 2)]\n}\n\nfunction Main(input) {\n  input = input.split(\"\\n\")\n  N = parseInt(input[0])\n  a = input[1].split(\" \")\n  m = []\n\n  for (var i = 0 ; i < N ; i++ ) {\n    for (var j = i + 1 ; j < N + 1 ; j++ ) {\n      m.push(median(a.slice(i, j)))\n    }\n  }\n  console.log(median(m))\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03364_1", "type": "JavaScript", "obfuscated": "var lines = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a');\nvar n = lines[0x0] | 0x0;\nvar s = lines['slice'](0x1);\nfunction good(a, b) {\n    var YAgtsV = {\n        'ylrym': function (x, y) {\n            return x < y;\n        },\n        'ToRNc': function (x, y) {\n            return x < y;\n        },\n        'hcMnF': function (x, y) {\n            return x !== y;\n        },\n        'IgQFg': function (x, y) {\n            return x % y;\n        },\n        'RvSJC': function (x, y) {\n            return x + y;\n        },\n        'jONzE': function (x, y) {\n            return x % y;\n        },\n        'aOFve': function (x, y) {\n            return x + y;\n        }\n    };\n    for (var i = 0x0; YAgtsV['ylrym'](i, n); ++i) {\n        for (var j = 0x0; YAgtsV['ToRNc'](j, n); ++j) {\n            if (YAgtsV['hcMnF'](s[YAgtsV['IgQFg'](YAgtsV['RvSJC'](i, a), n)][YAgtsV['jONzE'](YAgtsV['RvSJC'](j, b), n)], s[YAgtsV['IgQFg'](YAgtsV['aOFve'](j, a), n)][(i + b) % n]))\n                return 0x0;\n        }\n    }\n    return 0x1;\n}\nvar ans = 0x0;\nfor (var a = 0x0; a < n; ++a) {\n    for (var b = 0x0; b < n; ++b) {\n        ans += good(a, b);\n    }\n}\nconsole['log'](ans);", "test_cases": [["2\nab\nca", "2"], ["4\naaaa\naaaa\naaaa\naaaa", "16"], ["5\nabcde\nfghij\nklmno\npqrst\nuvwxy", "0"]], "original": "var lines = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\");\n\nvar n=lines[0]|0;\nvar s=lines.slice(1);\n\nfunction good(a,b){\n    for(var i=0;i<n;++i){\n        for(var j=0;j<n;++j){\n            if(s[(i+a)%n][(j+b)%n]!==s[(j+a)%n][(i+b)%n])return 0;\n        }\n    }\n    return 1;\n}\n\nvar ans=0;\nfor(var a=0;a<n;++a){\n    for(var b=0;b<n;++b){\n        ans+=good(a,b);\n    }\n}\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p03388_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var LtjyRG = {\n        'QlYow': function (x, y) {\n            return x < y;\n        },\n        'ajDuI': function (x, y) {\n            return x + y;\n        },\n        'jlMHE': function (x, y) {\n            return x * y;\n        },\n        'bDPvP': function (x, y) {\n            return x + y;\n        },\n        'htDBQ': function (x, y) {\n            return x * y;\n        },\n        'QRdgM': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['split']('\\x0a');\n    const q = +s[0x0];\n    for (var i = 0x0; LtjyRG['QlYow'](i, q); i++) {\n        var kybWgc = '0|2|5|1|7|3|6|4'['split']('|');\n        var lIoSCO = 0x0;\n        while (!![]) {\n            switch (kybWgc[lIoSCO++]) {\n            case '0':\n                var a = s[LtjyRG['ajDuI'](i, 0x1)]['split']('\\x20')['map'](a => +a);\n                continue;\n            case '1':\n                var c = Math['ceil'](Math['sqrt'](LtjyRG['jlMHE'](a, b)));\n                continue;\n            case '2':\n                var b = Math['max'](a[0x0], a[0x1]);\n                continue;\n            case '3':\n                if (LtjyRG['QlYow'](a, b - 0x1))\n                    ans++;\n                continue;\n            case '4':\n                console['log'](ans);\n                continue;\n            case '5':\n                a = Math['min'](a[0x0], a[0x1]);\n                continue;\n            case '6':\n                for (var j = LtjyRG['bDPvP'](a, 0x1); LtjyRG['QlYow'](j, c); j++) {\n                    if (Math['floor'](LtjyRG['jlMHE'](a / j, b)) === j)\n                        ans++;\n                    else\n                        ans += 0x2;\n                }\n                continue;\n            case '7':\n                var ans = LtjyRG['htDBQ'](LtjyRG['QRdgM'](a, 0x1), 0x2);\n                continue;\n            }\n            break;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8\n1 4\n10 5\n3 3\n4 11\n8 9\n22 40\n8 36\n314159265 358979323", "1\n12\n4\n11\n14\n57\n31\n671644785"]], "original": "function Main(s) {\n  s = s.split(\"\\n\");\n  const q = +s[0];\n  for(var i = 0; i < q; i++){\n    var a = s[i+1].split(\" \").map(a => +a);\n    var b = Math.max(a[0], a[1]);\n    a = Math.min(a[0], a[1]);\n    var c = Math.ceil(Math.sqrt(a * b));\n    var ans = (a - 1) * 2;\n    if(a < b - 1) ans++;\n    for(var j = a + 1; j < c; j++){\n      if(Math.floor(a / j * b) === j)ans++;\n      else ans += 2;\n    }\n    console.log(ans);\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03393_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var PyvaRU = {\n        'IPfYR': function (callee, param1) {\n            return callee(param1);\n        },\n        'DbMLZ': function (x, y) {\n            return x < y;\n        },\n        'OGKnG': function (x, y) {\n            return x - y;\n        },\n        'gzBaf': function (x, y) {\n            return x < y;\n        },\n        'GJlEq': function (x, y) {\n            return x + y;\n        },\n        'EeZyZ': function (x, y) {\n            return x === y;\n        },\n        'CCOff': 'zyxwvutsrqponmlkjihgfedcba',\n        'hVSZb': function (x, y) {\n            return x >= y;\n        },\n        'QENsi': function (x, y) {\n            return x > y;\n        },\n        'jnBOQ': function (x, y) {\n            return x < y;\n        },\n        'nsXit': function (x, y) {\n            return x === y;\n        }\n    };\n    const n = s['length'];\n    const a = 'a'['charCodeAt']();\n    var b = PyvaRU['IPfYR'](Array, 0x1a)['fill'](0x1);\n    var i;\n    if (n < 0x1a) {\n        for (i = 0x0; PyvaRU['DbMLZ'](i, n); i++) {\n            b[PyvaRU['OGKnG'](s['charCodeAt'](i), a)] = 0x0;\n        }\n        for (i = 0x0; PyvaRU['gzBaf'](i, 0x1a); i++) {\n            if (b[i]) {\n                s += String['fromCharCode'](PyvaRU['GJlEq'](a, i));\n                break;\n            }\n        }\n    } else {\n        if (PyvaRU['EeZyZ'](s, PyvaRU['CCOff'])) {\n            console['log'](-0x1);\n            return;\n        }\n        var c = s[0x19];\n        b[PyvaRU['OGKnG'](s['charCodeAt'](0x19), a)] = 0x0;\n        for (i = 0x18; PyvaRU['hVSZb'](i, 0x0); i--) {\n            if (PyvaRU['QENsi'](c, s[i])) {\n                c = s['charCodeAt'](i) - a;\n                s = s['slice'](0x0, i);\n                break;\n            } else {\n                b[PyvaRU['OGKnG'](s['charCodeAt'](i), a)] = 0x0;\n            }\n        }\n        for (var j = PyvaRU['OGKnG'](c, a); PyvaRU['jnBOQ'](j, 0x1a); j++) {\n            if (PyvaRU['nsXit'](b[j], 0x0)) {\n                s += String['fromCharCode'](PyvaRU['GJlEq'](a, j));\n                break;\n            }\n        }\n    }\n    console['log'](s);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["atcoder", "atcoderb"], ["abc", "abcd"], ["zyxwvutsrqponmlkjihgfedcba", "-1"], ["abcdefghijklmnopqrstuvwzyx", "abcdefghijklmnopqrstuvx"]], "original": "function Main(s){\n  const n = s.length;\n  const a = \"a\".charCodeAt();\n  var b = Array(26).fill(1);\n  var i;\n  if(n < 26){\n    for(i = 0; i < n; i++){\n      b[s.charCodeAt(i) - a] = 0;\n    }\n    for(i = 0; i < 26; i++){\n      if(b[i]){\n        s += String.fromCharCode(a + i);\n        break;\n      }\n    }\n  }else{\n    if(s === \"zyxwvutsrqponmlkjihgfedcba\"){\n      console.log(-1); return;\n    }\n    var c = s[25];\n    b[s.charCodeAt(25) - a] = 0;\n    for(i = 24; i >= 0; i--){\n      if(c > s[i]){\n        c = s.charCodeAt(i) - a;\n        s = s.slice(0,i)\n        break;\n      }else{\n        b[s.charCodeAt(i) - a] = 0;\n      }\n    }\n    for(var j = c - a; j < 26; j++){\n      if(b[j] === 0){\n        s += String.fromCharCode(a + j);\n        break;\n      }\n    }\n  }\n  console.log(s);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p03411_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const QrmQuC = {\n        'meyhF': function (x, y) {\n            return x < y;\n        },\n        'bpeuG': function (x, y) {\n            return x + y;\n        },\n        'CbShX': function (x, y) {\n            return x < y;\n        }\n    };\n    const [[N], ...tmp] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    const rp = [], bp = [];\n    for (let i = 0x0; QrmQuC['meyhF'](i, N); i++) {\n        rp['push'](tmp[i]);\n        bp['push'](tmp[QrmQuC['bpeuG'](N, i)]);\n    }\n    bp['sort'](([a], [b]) => a - b);\n    let count = 0x0;\n    const test = [];\n    for (let i = 0x0; i < N; i++) {\n        const [bx, by] = bp[i];\n        let max = [\n            -0x1,\n            -0x1\n        ];\n        for (let j = 0x0; QrmQuC['CbShX'](j, rp['length']); j++) {\n            const [rx, ry] = rp[j];\n            if (bx < rx)\n                continue;\n            if (by > ry && ry > max[0x1])\n                max = [\n                    j,\n                    ry\n                ];\n        }\n        if (max[0x1] >= 0x0) {\n            rp['splice'](max[0x0], 0x1);\n            count++;\n        }\n    }\n    return '' + count;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5", "2"], ["3\n0 0\n1 1\n5 2\n2 3\n3 4\n4 5", "2"], ["2\n2 2\n3 3\n0 0\n1 1", "0"], ["5\n0 0\n7 3\n2 2\n4 8\n1 6\n8 5\n6 9\n5 4\n9 1\n3 7", "5"], ["5\n0 0\n1 1\n5 5\n6 6\n7 7\n2 2\n3 3\n4 4\n8 8\n9 9", "4"]], "original": "console.log((args=>{\n  const [[N],...tmp] = args.trim().split('\\n').map(r=>r.split(' ').map(v=>v|0));\n  const rp = [], bp = [];\n  for ( let i = 0; i < N; i++ ) {\n    rp.push(tmp[i]);\n    bp.push(tmp[N+i]);\n  }\n  bp.sort(([a],[b])=>a-b);\n  let count = 0;\n  const test = [];\n  for ( let i = 0; i < N; i++ ) {\n    const [bx,by] = bp[i];\n    let max = [-1,-1];\n    for ( let j = 0; j < rp.length; j++ ) {\n      const [rx,ry] = rp[j];\n      if ( bx < rx ) continue;\n      if ( by > ry && ry > max[1] ) max = [j,ry];\n    }\n    if ( max[1] >= 0 ) {\n      rp.splice( max[0], 1 );\n      count++;\n    }\n  }\n  return `${count}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03558_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var OPJGtc = {\n        'pCjyW': function (callee, param1) {\n            return callee(param1);\n        },\n        'XOgMQ': function (x, y) {\n            return x <= y;\n        },\n        'jTJBf': function (x, y) {\n            return x * y;\n        },\n        'vVcfy': function (x, y) {\n            return x < y;\n        },\n        'IWKHT': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = OPJGtc['pCjyW'](parseInt, input);\n    var output = 0x3b9aca00;\n    for (var i = 0x1; OPJGtc['XOgMQ'](i, 0xa); i++) {\n        var tmp = OPJGtc['jTJBf'](input, i)['toString']()['split']('')['map'](a => Number(a));\n        var check = 0x0;\n        for (var j = 0x0; OPJGtc['vVcfy'](j, tmp['length']); j++) {\n            check += tmp[j];\n        }\n        output = Math['min'](output, check);\n    }\n    OPJGtc['IWKHT'](myout, output);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["6", "3"], ["41", "5"], ["79992", "36"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input);\n\t//input = input.trim().split(\" \");\n\t//input = input.trim().split(\"\\n\");\n\t//input = input.trim().split(\" \").map((a)=>Number(a));\n\t//input = input.trim().split(\"\\n\").map((a)=>Number(a));\n  var output = 1000000000;\n  for(var i = 1; i <= 10; i ++){\n    var tmp = (input * i).toString().split(\"\").map((a)=>Number(a));\n    var check = 0;\n    for(var j = 0; j < tmp.length; j++){\n      check += tmp[j];\n    }\n    output = Math.min(output, check);\n  }\n  myout(output);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03567_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = arg => {\n    const XiwUoa = {\n        'eXDmT': function (x, y) {\n            return x === y;\n        },\n        'Gziyw': function (x, y) {\n            return x === y;\n        },\n        'cOsjX': 'Yes'\n    };\n    arg = arg['trim']()['split']('\\x0a');\n    const S = arg[0x0]['split']('');\n    let previous = null;\n    for (let i in S) {\n        if (XiwUoa['eXDmT'](previous, 'A') && XiwUoa['Gziyw'](S[i], 'C')) {\n            console['log'](XiwUoa['cOsjX']);\n            return;\n        }\n        previous = S[i];\n    }\n    console['log']('No');\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["BACD", "Yes"], ["ABCD", "No"], ["CABD", "No"], ["ACACA", "Yes"], ["XX", "No"]], "original": "\"use strict\";\n    \nconst main = arg => {\n    arg = arg.trim().split(\"\\n\");\n    const S = arg[0].split(\"\");\n    \n    let previous = null;\n    \n    for(let i in S) {\n        if(previous === \"A\" && S[i] === \"C\") {\n            console.log(\"Yes\");\n            return;\n        }\n        \n        previous = S[i];\n    }\n    \n    console.log(\"No\");\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03840_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next(a) {\n    return a ? cin[cid++] : +cin[cid++];\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var auOHtL = {\n        'LTtIb': function (x, y) {\n            return x < y;\n        },\n        'lsEdr': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; auOHtL['LTtIb'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; auOHtL['lsEdr'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var HcLooH = {\n        'mYkYb': function (x, y) {\n            return x + y;\n        },\n        'Kxiba': 'Array(a[',\n        'YczmB': ']).fill().map(x=>{return\\x20',\n        'SnQGB': ';})',\n        'RfxBn': ']).fill().map(x=>',\n        'duCZU': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = HcLooH['mYkYb'](HcLooH['mYkYb'](HcLooH['mYkYb'](HcLooH['Kxiba'], --l), HcLooH['YczmB']) + v, HcLooH['SnQGB']);\n    while (--l)\n        r = HcLooH['mYkYb'](HcLooH['mYkYb'](HcLooH['mYkYb']('Array(a[', l) + HcLooH['RfxBn'], r), ')');\n    return HcLooH['duCZU'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction main() {\n    var QdqmTb = {\n        'mfeYi': function (callee, param1) {\n            return callee(param1);\n        },\n        'nyPJa': function (x, y) {\n            return x + y;\n        },\n        'ifNsL': function (x, y) {\n            return x * y;\n        },\n        'sAbqt': function (x, y) {\n            return x + y;\n        },\n        'KbCoW': function (x, y) {\n            return x | y;\n        },\n        'KmHKE': function (x, y) {\n            return x / y;\n        },\n        'pbYrK': function (x, y) {\n            return x + y;\n        },\n        'xuZxP': function (x, y) {\n            return x % y;\n        },\n        'YtHyu': function (x, y) {\n            return x * y;\n        }\n    };\n    var a = QdqmTb['mfeYi'](nexts, 0x7);\n    var ans = QdqmTb['nyPJa'](a[0x1], QdqmTb['ifNsL'](QdqmTb['sAbqt'](QdqmTb['KbCoW'](QdqmTb['KmHKE'](a[0x0], 0x2), 0x0), QdqmTb['KbCoW'](QdqmTb['KmHKE'](a[0x3], 0x2), 0x0)) + (QdqmTb['KmHKE'](a[0x4], 0x2) | 0x0), 0x2));\n    switch (QdqmTb['pbYrK'](QdqmTb['xuZxP'](a[0x0], 0x2) + QdqmTb['xuZxP'](a[0x3], 0x2), QdqmTb['xuZxP'](a[0x4], 0x2))) {\n    case 0x3:\n        ans += 0x3;\n        break;\n    case 0x2:\n        if (QdqmTb['YtHyu'](QdqmTb['ifNsL'](a[0x0], a[0x3]), a[0x4]))\n            ans += 0x1;\n        break;\n    }\n    return ans;\n}", "test_cases": [["2 1 1 0 0 0 0", "3"], ["0 0 10 0 0 0 0", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(a){return a?cin[cid++]:+cin[cid++];}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(myOut);\n\nfunction main(){\n  var a = nexts(7);\n  var ans = a[1] + ((a[0]/2|0) + (a[3]/2|0)+ (a[4]/2|0)) * 2;\n  switch(a[0]%2 + a[3]%2 + a[4]%2){\n    case 3: ans += 3; break;\n    case 2: if(a[0]*a[3]*a[4])ans += 1; break;\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03967_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const ySFvOP = {\n        'Guhlf': function (callee, param1) {\n            return callee(param1);\n        },\n        'vzeYu': function (x, y) {\n            return x + y;\n        },\n        'FTnXL': function (x, y) {\n            return x === y;\n        },\n        'tTicA': function (x, y) {\n            return x < y;\n        },\n        'QHBgh': function (x, y) {\n            return x === y;\n        },\n        'rPQOZ': function (x, y) {\n            return x > y;\n        }\n    };\n    const s = args['trim']();\n    const L = s['length'];\n    const p = ySFvOP['Guhlf'](Array, L)['fill'](0x0);\n    for (let i = L; --i;)\n        p[i - 0x1] = ySFvOP['vzeYu'](p[i], ySFvOP['FTnXL'](s[i], 'p'));\n    let g = 0x0, w = 0x0;\n    for (let i = 0x0; ySFvOP['tTicA'](i, L); i++) {\n        if (ySFvOP['QHBgh'](s[i], 'g')) {\n            if (ySFvOP['rPQOZ'](g, p[i])) {\n                g--;\n                w++;\n            } else\n                g++;\n        } else\n            g--;\n    }\n    return '' + w;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["gpg", "0"], ["ggppgggpgg", "2"]], "original": "console.log((args=>{\n  const s = args.trim();\n  const L = s.length;\n  const p = Array(L).fill(0);\n  for ( let i = L; --i;) p[i-1] = p[i] + (s[i]==='p');\n  let g = 0, w = 0;\n  for ( let i = 0; i < L; i++ ) {\n    if ( s[i] === 'g' ) {\n      if ( g > p[i] ) {\n        g--; w++;\n      } else g++;\n    } else g--;\n  }\n  return `${w}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p04013_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var UpVwxz = {\n        'fvCAD': '13|8|4|14|10|2|5|12|6|1|3|0|15|7|11|9',\n        'HILxI': function (x, y) {\n            return x + y;\n        },\n        'Kzdbf': function (x, y) {\n            return x + y;\n        },\n        'wOgFi': function (x, y) {\n            return x < y;\n        },\n        'kLmnD': function (x, y) {\n            return x + y;\n        },\n        'DYBUO': function (x, y) {\n            return x >= y;\n        },\n        'ceBOH': function (x, y) {\n            return x + y;\n        },\n        'byESY': function (x, y) {\n            return x + y;\n        },\n        'FKMfD': function (x, y) {\n            return x <= y;\n        },\n        'fuBKT': function (x, y) {\n            return x * y;\n        },\n        'AnbHu': function (x, y) {\n            return x < y;\n        },\n        'rUriT': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var RhohMj = UpVwxz['fvCAD']['split']('|');\n    var gderVO = 0x0;\n    while (!![]) {\n        switch (RhohMj[gderVO++]) {\n        case '0':\n            for (var y = 0x0; y < sum2 + 0x1; y++) {\n                b[y] = new Array(UpVwxz['HILxI'](n, 0x1))['fill'](0x0);\n            }\n            continue;\n        case '1':\n            for (i = 0x0; i < n; i++) {\n                sum2 = sum2 + x[i];\n            }\n            continue;\n        case '2':\n            x = new Array(n);\n            continue;\n        case '3':\n            var b = new Array(UpVwxz['Kzdbf'](sum2, 0x1));\n            continue;\n        case '4':\n            var n = parseInt(tmp1[0x0]);\n            continue;\n        case '5':\n            var sum2 = 0x0;\n            continue;\n        case '6':\n            var s = 0x0;\n            continue;\n        case '7':\n            for (j = 0x0; UpVwxz['wOgFi'](j, n); j++) {\n                for (i = sum2; i >= 0x0; i--) {\n                    for (k = 0x0; k < UpVwxz['kLmnD'](n, 0x1); k++) {\n                        if (UpVwxz['DYBUO'](b[i][k], 0x1)) {\n                            b[UpVwxz['ceBOH'](i, x[j])][UpVwxz['kLmnD'](k, 0x1)] = b[i + x[j]][UpVwxz['byESY'](k, 0x1)] + b[i][k];\n                        }\n                    }\n                }\n            }\n            continue;\n        case '8':\n            tmp1 = input[0x0]['split']('\\x20');\n            continue;\n        case '9':\n            console['log']('%s', s);\n            continue;\n        case '10':\n            tmp = input[0x1]['split']('\\x20');\n            continue;\n        case '11':\n            for (i = 0x1; UpVwxz['FKMfD'](i, n) && UpVwxz['FKMfD'](UpVwxz['fuBKT'](i, a), sum2); i++) {\n                s = UpVwxz['HILxI'](s, b[i * a][i]);\n            }\n            continue;\n        case '12':\n            for (i = 0x0; UpVwxz['AnbHu'](i, tmp['length']); i++) {\n                x[i] = parseInt(tmp[i]);\n            }\n            continue;\n        case '13':\n            input = input['split']('\\x0a');\n            continue;\n        case '14':\n            var a = UpVwxz['rUriT'](parseInt, tmp1[0x1]);\n            continue;\n        case '15':\n            b[0x0][0x0] = 0x1;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 8\n7 9 8 9", "5"], ["3 8\n6 6 9", "0"], ["8 5\n3 6 2 8 7 6 5 9", "19"], ["33 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3", "8589934591"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  tmp1 = input[0].split(\" \");\n  var n = parseInt(tmp1[0]);\n  var a = parseInt(tmp1[1]);\n  tmp= input[1].split(\" \");\n  x=new Array(n);\n  var sum2=0;\n  for(i=0;i<tmp.length;i++){\n    x[i]=parseInt(tmp[i]);\n  }\n  var s=0;\n  for(i=0;i<n;i++){\n    sum2=sum2+x[i];\n  }\n  var b = new Array(sum2+1);\n  for(var y = 0; y < sum2+1; y++) {\n    b[y] = new Array(n+1).fill(0);\n  }\n  b[0][0]=1;\n  for(j=0;j<n;j++){\n    for(i=sum2;i>=0;i--){\n      for(k=0;k<n+1;k++){\n        if(b[i][k]>=1){\n          b[i+x[j]][k+1]=b[i+x[j]][k+1]+b[i][k];\n        }\n      }\n    }\n  }\n  for(i=1;i<=n && i*a<=sum2;i++){\n      s=s+b[i*a][i];\n  }\n\n\n  console.log('%s', s);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04025_1", "type": "JavaScript", "obfuscated": "'use strict';\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nconst info = input['trim']()['split']('\\x0a');\nconst nums = info[0x1]['split']('\\x20')['map'](x => x * 0x1);\nconst ave = Math['round'](nums['reduce']((x, a) => {\n    return a += x;\n}) / info[0x0]);\nlet sum = 0x0;\nfor (let i = 0x0; i < info[0x0]; i++) {\n    sum += Math['pow'](nums[i] - ave, 0x2);\n}\nconsole['log'](sum);", "test_cases": [["2\n4 8", "8"], ["3\n1 1 3", "3"], ["3\n4 2 5", "5"], ["4\n-100 -100 -100 -100", "0"]], "original": "\"use strict\";\n\nlet input = require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\");\nconst info = input.trim().split('\\n');\nconst nums = info[1].split(' ').map(x => x*1);\n// 平均値出す\nconst ave = Math.round( nums.reduce((x,a) => {return a += x}) / info[0] );\nlet sum = 0;\nfor(let i = 0; i < info[0]; i++){\n  sum += Math.pow( nums[i] - ave ,2 )\n}\nconsole.log(sum);", "language": "JavaScript"}
{"filename": "p00015_1", "type": "JavaScript", "obfuscated": "function pad(n) {\n    var BggiNZ = {\n        'whYQe': function (x, y) {\n            return x < y;\n        }\n    };\n    while (BggiNZ['whYQe'](n['length'], 0x7)) {\n        n = '0' + n;\n    }\n    return n;\n}\nfunction divide(s) {\n    var sJaFiX = {\n        'hBfDn': function (x, y) {\n            return x > y;\n        },\n        'DIifT': function (x, y) {\n            return x * y;\n        },\n        'jlBuA': function (x, y) {\n            return x + y;\n        }\n    };\n    var a = [], i = 0x0, l = s['length'], d = 0x7;\n    for (; sJaFiX['hBfDn']((a[i] = s['slice'](sJaFiX['DIifT'](sJaFiX['jlBuA'](i, 0x1), -d), sJaFiX['jlBuA'](l, sJaFiX['DIifT'](i, -d))))['length'], d - 0x1); i++);\n    return a;\n}\nfunction unite(a) {\n    return a['concat']()['reverse']()['join']('')['replace'](/^0*/, '');\n}\nfunction largeSum(n, m) {\n    var lciWnK = {\n        'Jeyhz': function (x, y) {\n            return x < y;\n        },\n        'mkrmP': function (x, y) {\n            return x != y;\n        },\n        'KrrRD': function (x, y) {\n            return x + y;\n        },\n        'bJgWU': function (x, y) {\n            return x > y;\n        },\n        'WitWZ': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    for (var h = 0x0, o = [], i = 0x0, l = Math['max'](n['length'], m['length']); lciWnK['Jeyhz'](i, l) || lciWnK['mkrmP'](h, 0x0); i++) {\n        var a = lciWnK['KrrRD']((parseInt(n[i], 0xa) || 0x0) + (parseInt(m[i], 0xa) || 0x0), +h)['toString'](0xa);\n        o[i] = lciWnK['bJgWU'](a['length'], 0x7) ? (h = a['slice'](0x0, 0x1), a['slice'](0x1)) : (h = 0x0, lciWnK['WitWZ'](pad, a));\n    }\n    return o;\n}\nprocess['stdin']['on']('data', function (c) {\n    var fTALsi = {\n        'TMXec': function (x, y) {\n            return x * y;\n        },\n        'EGUnm': function (x, y) {\n            return x < y;\n        },\n        'YKXgA': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'GawOR': function (x, y) {\n            return x == y;\n        }\n    };\n    var a = (c + '')['trim']()['split']('\\x0a');\n    for (var i = 0x0, l = fTALsi['TMXec'](+a['shift'](), 0x2); fTALsi['EGUnm'](i, l); i += 0x2) {\n        var s = unite(fTALsi['YKXgA'](largeSum, divide(a[i]), divide(a[i + 0x1])));\n        console['log'](fTALsi['GawOR'](s, '') ? 0x0 : s['length'] > 0x50 ? 'overflow' : s);\n    }\n})['resume']();", "test_cases": [["6\n1000\n800\n9999999999999999999999999999999999999999\n1\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\n1\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\n0\n100000000000000000000000000000000000000000000000000000000000000000000000000000000\n1\n100000000000000000000000000000000000000000000000000000000000000000000000000000000\n100000000000000000000000000000000000000000000000000000000000000000000000000000000", "1800\n10000000000000000000000000000000000000000\noverflow\n99999999999999999999999999999999999999999999999999999999999999999999999999999999\noverflow\noverflow"]], "original": "function pad(n){\n\twhile(n.length<7){\n\t\tn=\"0\"+n\n\t}\n\treturn n;\n}\nfunction divide(s){\n\tvar a=[],i=0,l=s.length,d=7;\n\tfor(;(a[i]=s.slice((i+1)*-d,l+i*-d)).length>d-1;i++);\n\treturn a;\n}\nfunction unite(a){\n\treturn a.concat().reverse().join(\"\").replace(/^0*/,\"\");\n}\nfunction largeSum(n,m){\n\tfor(var h=0,o=[],i=0,l=Math.max(n.length,m.length);i<l||h!=0;i++){\n\t\tvar a=((parseInt(n[i],10)||0)+(parseInt(m[i],10)||0)+(+h)).toString(10);\n\t\to[i]=a.length>7?(h=a.slice(0,1),a.slice(1)):(h=0,pad(a));\n\t}\n\treturn o;\n}\nprocess.stdin.on(\"data\",function(c){\n\tvar a=(c+\"\").trim().split(\"\\n\");\n\tfor(var i=0,l=+a.shift()*2;i<l;i+=2){\n\t\tvar s=unite(largeSum(divide(a[i]),divide(a[i+1])));\n\t\tconsole.log(s==\"\"?0:s.length>80?\"overflow\":s);\n\t}\n}).resume();", "language": "JavaScript"}
{"filename": "p00038_1", "type": "JavaScript", "obfuscated": "require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a')['map'](function (i) {\n    var MxMxVJ = {\n        'eChUy': function (x, y) {\n            return x == y;\n        },\n        'LKIvl': 'four\\x20card',\n        'qsPpO': function (x, y) {\n            return x == y;\n        },\n        'tvHtN': 'full\\x20house',\n        'VEDac': 'three\\x20card',\n        'tTGLD': 'two\\x20pair',\n        'zgqPc': 'one\\x20pair',\n        'ZiGYe': function (x, y) {\n            return x == y;\n        },\n        'ZksIx': function (x, y) {\n            return x - y;\n        },\n        'umKaN': 'null'\n    };\n    var chtQIj = '2|0|5|1|3|4'['split']('|');\n    var HXsXZh = 0x0;\n    while (!![]) {\n        switch (chtQIj[HXsXZh++]) {\n        case '0':\n            a = [], c = i['split'](',')['sort'](f);\n            continue;\n        case '1':\n            a['sort'](f);\n            continue;\n        case '2':\n            f = function (a, b) {\n                return b - a;\n            };\n            continue;\n        case '3':\n            l = a[0x0], n = a[0x1];\n            continue;\n        case '4':\n            console['log'](MxMxVJ['eChUy'](l, 0x4) ? MxMxVJ['LKIvl'] : MxMxVJ['eChUy'](l, 0x3) ? MxMxVJ['qsPpO'](n, 0x2) ? MxMxVJ['tvHtN'] : MxMxVJ['VEDac'] : l == 0x2 ? MxMxVJ['eChUy'](n, 0x2) ? MxMxVJ['tTGLD'] : MxMxVJ['zgqPc'] : MxMxVJ['eChUy'](0x4, c[0x0] - c[0x4]) || MxMxVJ['ZiGYe'](MxMxVJ['ZksIx'](c[0x0], c[0x3]), 0x3) && +c[0x4] == 0x1 ? 'straight' : MxMxVJ['umKaN']);\n            continue;\n        case '5':\n            c['map'](function (j) {\n                a[j] ? a[j]++ : a[j] = 0x1;\n            });\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["1,2,3,4,1\n2,3,2,3,12\n12,13,11,12,12\n7,6,7,6,7\n3,3,2,3,3\n6,7,8,9,10\n11,12,10,1,13\n11,12,13,1,2", "one pair\ntwo pair\nthree card\nfull house\nfour card\nstraight\nstraight\nnull"]], "original": "require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").trim().split('\\n').map(function(i){f=function(a,b){return b-a};a=[],c=i.split(\",\").sort(f);c.map(function(j){a[j]?a[j]++:a[j]=1});a.sort(f);l=a[0],n=a[1];console.log(l==4?\"four card\":l==3?(n==2?\"full house\":\"three card\"):l==2?(n==2?\"two pair\":\"one pair\"):4==c[0]-c[4]||(c[0]-c[3]==3&&+c[4]==1)?\"straight\":\"null\")})", "language": "JavaScript"}
{"filename": "p00043_1", "type": "JavaScript", "obfuscated": "function Puzzle() {\n    var zBVFnM = {\n        'aNuim': function (x, y) {\n            return x - y;\n        },\n        'WKHbl': '123,234,345,456,567,678,789,111,222,333,444,555,666,777,888,999',\n        'MqlZH': '11,22,33,44,55,66,77,88,99',\n        'jJxxb': function (x, y) {\n            return x < y;\n        },\n        'beLZV': function (x, y) {\n            return x < y;\n        },\n        'wlivZ': function (x, y) {\n            return x + y;\n        }\n    };\n    var obj = {};\n    var arrA = zBVFnM['WKHbl']['split'](',');\n    var arrB = zBVFnM['MqlZH']['split'](',');\n    var i, j, k, l, m;\n    for (i = 0x0; i < 0x10; i++)\n        for (j = 0x0; zBVFnM['jJxxb'](j, 0x10); j++)\n            for (k = 0x0; zBVFnM['beLZV'](k, 0x10); k++)\n                for (l = 0x0; l < 0x10; l++)\n                    for (m = 0x0; zBVFnM['beLZV'](m, 0x9); m++) {\n                        var str = zBVFnM['wlivZ'](zBVFnM['wlivZ'](zBVFnM['wlivZ'](arrA[i], arrA[j]), arrA[k]) + arrA[l], arrB[m]);\n                        str = str['split']('')['map'](Number)['sort'](function (a, b) {\n                            return zBVFnM['aNuim'](a, b);\n                        })['join']('');\n                        obj[str] = !![];\n                    }\n    return obj;\n}\nvar P = Puzzle();\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (Arr['length'] == 0x0)\n        break;\n    var str = Arr['shift']();\n    var ans = [];\n    for (var i = 0x1; i <= 0x9; i++) {\n        var arr = str['split']('')['map'](Number);\n        arr['push'](i);\n        arr['sort'](function (a, b) {\n            return a - b;\n        });\n        var v = arr['join']('');\n        if (/(.)\\1\\1\\1\\1/['test'](v))\n            continue;\n        if (P['hasOwnProperty'](v))\n            ans['push'](i);\n    }\n    console['log'](ans['length'] == 0x0 ? '0' : ans['join']('\\x20'));\n}", "test_cases": [["3649596966777\n6358665788577\n9118992346175\n9643871425498\n7755542764533\n1133557799246", "2 3 5 8\n3 4\n1 2 3 4 5 6 7 8 9\n7 8 9\n1 2 3 4 6 7 8\n0"]], "original": "function Puzzle(){\n   var obj={};\n   var arrA=\"123,234,345,456,567,678,789,111,222,333,444,555,666,777,888,999\".split(\",\");\n   var arrB=\"11,22,33,44,55,66,77,88,99\".split(\",\");\n   var i,j,k,l,m;\n   for(i=0;i<16;i++)for(j=0;j<16;j++)for(k=0;k<16;k++)for(l=0;l<16;l++)for(m=0;m<9;m++){\n      var str=arrA[i]+arrA[j]+arrA[k]+arrA[l]+arrB[m];\n      str=str.split(\"\").map(Number).sort(function(a,b){return a-b;}).join(\"\");\n      obj[str]=true;\n   }\n   return obj;\n}\nvar P=Puzzle();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var str=Arr.shift();\n   var ans=[];\n   for(var i=1;i<=9;i++){\n      var arr=str.split(\"\").map(Number);\n      arr.push(i);\n      arr.sort(function(a,b){return a-b;});\n      var v=arr.join(\"\");\n      if(/(.)\\1\\1\\1\\1/.test(v))continue;\n      if(P.hasOwnProperty(v))ans.push(i);\n   }\n   console.log((ans.length==0)?\"0\":ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00044_1", "type": "JavaScript", "obfuscated": "function isPrime(num) {\n    var jZDice = {\n        'HRdNc': '1|3|0|4|5|2',\n        'BQVce': function (x, y) {\n            return x == y;\n        },\n        'XRiDn': function (x, y) {\n            return x == y;\n        },\n        'eVLXx': function (x, y) {\n            return x % y;\n        },\n        'DBkHg': function (x, y) {\n            return x <= y;\n        },\n        'VTlSr': function (x, y) {\n            return x - y;\n        },\n        'ZbrKB': function (x, y) {\n            return x * y;\n        },\n        'rJrnK': function (x, y) {\n            return x % y;\n        },\n        'tNiAR': function (x, y) {\n            return x + y;\n        }\n    };\n    var UKZjEP = jZDice['HRdNc']['split']('|');\n    var QTqzxJ = 0x0;\n    while (!![]) {\n        switch (UKZjEP[QTqzxJ++]) {\n        case '0':\n            var limit = Math['round'](Math['sqrt'](num));\n            continue;\n        case '1':\n            if (jZDice['BQVce'](num, 0x2) || num == 0x3)\n                return !![];\n            continue;\n        case '2':\n            return !![];\n        case '3':\n            if (num < 0x2 || jZDice['XRiDn'](jZDice['eVLXx'](num, 0x2), 0x0) || jZDice['BQVce'](num % 0x3, 0x0))\n                return ![];\n            continue;\n        case '4':\n            var i = 0x1;\n            continue;\n        case '5':\n            while (jZDice['DBkHg'](jZDice['VTlSr'](jZDice['ZbrKB'](i, 0x6), 0x1), limit)) {\n                if (jZDice['XRiDn'](jZDice['rJrnK'](num, jZDice['VTlSr'](jZDice['ZbrKB'](i, 0x6), 0x1)), 0x0) || jZDice['BQVce'](num % jZDice['tNiAR'](i * 0x6, 0x1), 0x0))\n                    return ![];\n                i++;\n            }\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var zRziFs = '5|4|3|2|6|1|0'['split']('|');\n    var dLDjtE = 0x0;\n    while (!![]) {\n        switch (zRziFs[dLDjtE++]) {\n        case '0':\n            console['log'](mp, lp);\n            continue;\n        case '1':\n            while (!![]) {\n                if (isPrime(i) && i < num) {\n                    mp = i;\n                }\n                if (isPrime(i) && i > num) {\n                    lp = i;\n                    break;\n                }\n                i += 0x2;\n            }\n            continue;\n        case '2':\n            if (num == 0x3)\n                mp = 0x2;\n            continue;\n        case '3':\n            var lp;\n            continue;\n        case '4':\n            var mp;\n            continue;\n        case '5':\n            var num = +line;\n            continue;\n        case '6':\n            var i = 0x3;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["19\n3517", "17 23\n3511 3527"]], "original": "function isPrime(num) {\n    if (num == 2 || num == 3) return true;\n    if (num < 2 || num % 2 == 0 || num % 3 == 0) return false;\n    var limit = Math.round(Math.sqrt(num));\n \n    var i = 1;\n    while(i * 6 - 1 <= limit) {\n        if (num % (i * 6 - 1) == 0 || num % (i * 6 + 1) == 0) return false;\n        i++;\n    }\n    return true;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var num = +line;\n\n    var mp;\n    var lp;\n\n    if (num == 3)\n        mp = 2;\n\n    var i = 3;\n    while (true) {\n        if (isPrime(i) && i < num) {\n            mp = i;\n        }\n        if (isPrime(i) && i > num) {\n            lp = i;\n            break;\n        }\n        i += 2;\n    }\n    console.log(mp, lp);\n}", "language": "JavaScript"}
{"filename": "p00060_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['forEach'](function (v) {\n    var EnsKhr = {\n        'LlrDO': function (x, y) {\n            return x != y;\n        },\n        'jFQGz': function (x, y) {\n            return x != y;\n        },\n        'Kwfff': function (x, y) {\n            return x + y;\n        },\n        'kRqlF': function (x, y) {\n            return x + y;\n        },\n        'pqfYD': function (x, y) {\n            return x >= y;\n        },\n        'HvrAg': 'YES'\n    };\n    var arr = v['split']('\\x20')['map'](Number);\n    var m = [\n        0x1,\n        0x2,\n        0x3,\n        0x4,\n        0x5,\n        0x6,\n        0x7,\n        0x8,\n        0x9,\n        0xa\n    ];\n    m = m['filter'](function (v) {\n        return EnsKhr['LlrDO'](v, arr[0x0]) || EnsKhr['jFQGz'](v, arr[0x1]) || EnsKhr['jFQGz'](v, arr[0x2]);\n    });\n    var y = 0x0;\n    var n = 0x0;\n    m['forEach'](function (v) {\n        EnsKhr['Kwfff'](EnsKhr['kRqlF'](arr[0x0], arr[0x1]), v) <= 0x14 ? y++ : n++;\n    });\n    console['log'](EnsKhr['pqfYD'](y, n) ? EnsKhr['HvrAg'] : 'NO');\n});", "test_cases": [["1 2 3\n5 6 9\n8 9 10", "YES\nYES\nNO"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var m=[1,2,3,4,5,6,7,8,9,10];\n   m=m.filter(function(v){return (v!=arr[0] || v!= arr[1] || v!=arr[2]);});\n   var y=0;\n   var n=0;\n   m.forEach(function(v){((arr[0]+arr[1]+v)<=20)?y++:n++;});\n   console.log(y>=n?\"YES\":\"NO\");\n});", "language": "JavaScript"}
{"filename": "p00083_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var arr = line['split']('\\x20')['map'](function (n) {\n        return +n;\n    });\n    var year = arr[0x0];\n    var month = arr[0x1];\n    var day = arr[0x2];\n    var era = '';\n    var today = new Date(year, month - 0x1, day);\n    if (today < new Date(0x74c, 0x8, 0x8)) {\n        era = 'pre-meiji';\n    } else if (today < new Date(0x778, 0x6, 0x1e)) {\n        era = 'meiji';\n        year -= 0x74b;\n    } else if (today < new Date(0x786, 0xb, 0x19)) {\n        era = 'taisho';\n        year -= 0x777;\n    } else if (today < new Date(0x7c5, 0x0, 0x8)) {\n        era = 'showa';\n        year -= 0x785;\n    } else {\n        era = 'heisei';\n        year -= 0x7c4;\n    }\n    if (era == 'pre-meiji') {\n        console['log']('pre-meiji');\n        continue;\n    }\n    console['log'](era, year, month, day);\n}", "test_cases": [["2005 9 3\n1868 12 2\n1868 9 7", "heisei 17 9 3\nmeiji 1 12 2\npre-meiji"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n    var arr = line.split(' ').map(function(n){return +n;});\n    var year = arr[0];\n    var month = arr[1];\n    var day = arr[2];\n    var era = '';\n\n    var today = new Date(year, month - 1, day);\n    if (today < new Date(1868, 8, 8)) {\n        era = 'pre-meiji';\n    } else if (today < new Date(1912, 6, 30)) {\n        era = 'meiji';\n        year -= 1867;\n    } else if (today < new Date(1926, 11, 25)) {\n        era = 'taisho';\n        year -= 1911;\n    } else if (today < new Date(1989, 0, 8)) {\n        era = 'showa';\n        year -= 1925;\n    } else {\n        era = 'heisei';\n        year -= 1988;\n    }\n\n    if (era == 'pre-meiji') {\n        console.log('pre-meiji');\n        continue;\n    }\n    console.log(era, year, month, day);\n}", "language": "JavaScript"}
{"filename": "p00085_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (Arr[i] == '0\\x200')\n        break;\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    var N = arr[0x0];\n    var m = arr[0x1];\n    var n = {};\n    for (var j = 0x0; j < N; j++)\n        n[j] = null;\n    var x = 0x0;\n    for (var k = 0x0; k < N; k++) {\n        var y = 0x0;\n        do {\n            x++;\n            if (x == N)\n                x = 0x0;\n            if (n[x] === null)\n                y++;\n        } while (y != m);\n        n[x] = k;\n    }\n    console['log'](x);\n}", "test_cases": [["41 3\n30 9\n0 0", "31\n21"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==\"0 0\")break;\n   var arr=Arr[i].split(\" \").map(Number);\n   var N=arr[0];\n   var m=arr[1];\n   var n={};\n   for(var j=0;j<N;j++)n[j]=null;\n   var x=0;\n   for(var k=0;k<N;k++){\n      var y=0;\n      do{\n         x++;\n         if(x==N)x=0;\n         if(n[x]===null)y++;\n      }while(y!=m);\n      n[x]=k;\n   }\n   console.log(x);\n}", "language": "JavaScript"}
{"filename": "p00106_1", "type": "JavaScript", "obfuscated": "var obj = {};\nfor (var i = 0x0; i <= 0x19; i++) {\n    for (var j = 0x0; j <= 0x10; j++) {\n        for (var k = 0x0; k <= 0xa; k++) {\n            var weight = 0xc8 * i + 0x12c * j + 0x1f4 * k;\n            if (weight > 0x1388)\n                continue;\n            var money = 0x0;\n            money += 0x17c * 0x5 * 0.8 * Math['floor'](i / 0x5);\n            money += 0x226 * 0x4 * 0.85 * Math['floor'](j / 0x4);\n            money += 0x352 * 0x3 * 0.88 * Math['floor'](k / 0x3);\n            money += 0x17c * (i % 0x5);\n            money += 0x226 * (j % 0x4);\n            money += 0x352 * (k % 0x3);\n            if (obj['hasOwnProperty'](weight))\n                obj[weight] = Math['min'](obj[weight], money);\n            else\n                obj[weight] = money;\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    console['log'](obj[n]);\n}", "test_cases": [["500\n2200\n0", "850\n3390"]], "original": "var obj={};\nfor(var i=0;i<=25;i++){\n   for(var j=0;j<=16;j++){\n      for(var k=0;k<=10;k++){\n         var weight=200*i+300*j+500*k;\n         if(weight>5000)continue;\n         var money=0;\n         money+=380*5*0.8*Math.floor(i/5);\n         money+=550*4*0.85*Math.floor(j/4);\n         money+=850*3*0.88*Math.floor(k/3);\n         money+=380*(i%5);\n         money+=550*(j%4);\n         money+=850*(k%3);\n         if(obj.hasOwnProperty(weight))obj[weight]=Math.min(obj[weight],money);\n         else obj[weight]=money;\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   console.log(obj[n]);\n}", "language": "JavaScript"}
{"filename": "p00135_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr[I]['split'](':');\n    var h = parseInt(arr[0x0], 0xa);\n    var m = parseInt(arr[0x1], 0xa);\n    var H = h * (0x168 / 0xc) + m * (0x168 / 0xc / 0x3c);\n    var M = m * (0x168 / 0x3c);\n    var hm = Math['abs'](H - M);\n    var ans;\n    if (hm >= 0x0 && hm < 0x1e)\n        ans = 'alert';\n    else if (hm >= 0x5a && hm <= 0xb4)\n        ans = 'safe';\n    else\n        ans = 'warning';\n    console['log'](ans);\n}", "test_cases": [["4\n02:15\n06:01\n11:55\n10:40", "alert\nsafe\nalert\nwarning"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=Arr[I].split(\":\");\n   var h=parseInt(arr[0],10);\n   var m=parseInt(arr[1],10);\n   var H=h*(360/12)+m*((360/12)/60);\n   var M=m*(360/60);\n   var hm=Math.abs(H-M);\n   var ans;\n   if(hm>=0 && hm<30)ans=\"alert\";\n   else if(hm>=90 && hm<=180)ans=\"safe\";\n   else ans=\"warning\"\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00206_1", "type": "JavaScript", "obfuscated": "function main() {\n    var QAuRtu = {\n        'uZjvx': function (callee, param1) {\n            return callee(param1);\n        },\n        'qxrFA': function (x, y) {\n            return x < y;\n        },\n        'mvKPs': function (x, y) {\n            return x - y;\n        },\n        'kvoEb': function (x, y) {\n            return x <= y;\n        }\n    };\n    var i = 0x0, j, flag, L, MN;\n    for (;;) {\n        L = QAuRtu['uZjvx'](Number, input[i++]);\n        if (L === 0x0)\n            break;\n        flag = !![];\n        for (j = 0x0; QAuRtu['qxrFA'](j, 0xc); j++) {\n            MN = input[i++]['split']('\\x20')['map'](Number);\n            L -= QAuRtu['mvKPs'](MN[0x0], MN[0x1]);\n            if (flag && QAuRtu['kvoEb'](L, 0x0)) {\n                console['log'](j + 0x1);\n                flag = ![];\n            }\n        }\n        if (flag)\n            console['log']('NA');\n    }\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    input = input['split']('\\x0a');\n    main();\n});", "test_cases": [["10000\n5000 3150\n5000 5000\n0 0\n5000 1050\n5000 3980\n5000 210\n5000 5000\n5000 5000\n0 0\n5000 2100\n5000 2100\n5000 2100\n29170\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 70831\n0", "6\nNA"]], "original": "function main() {\n  var\n  i = 0, j, flag,\n  L, MN;\n  for (;;) {\n    L = Number(input[i++]);\n    if (L === 0) break;\n    \n    flag = true;\n    for (j = 0; j < 12; j++) {\n      MN = input[i++].split(' ').map(Number);\n      L -= MN[0] - MN[1];\n      if (flag && L <= 0) {\n        console.log(j + 1);\n        flag = false;\n      }\n    }\n    \n    if (flag) console.log('NA');\n  }\n}\n\nvar\ninput = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main();\n});", "language": "JavaScript"}
{"filename": "p00211_1", "type": "JavaScript", "obfuscated": "function GCD(a, b) {\n    var cenXEG = {\n        'vViKA': function (x, y) {\n            return x != y;\n        },\n        'ZXRXO': function (x, y) {\n            return x % y;\n        }\n    };\n    var m = Math['max'](a, b);\n    var n = Math['min'](a, b);\n    while (cenXEG['vViKA'](n, 0x0)) {\n        var N = n;\n        n = cenXEG['ZXRXO'](m, n);\n        m = N;\n    }\n    return m;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var I = 0x0; I < n; I++) {\n        var v = Arr['shift']()['split']('\\x20')['map'](Number);\n        var gcd = GCD(v[0x0], v[0x1]);\n        arr['push']([\n            v[0x0] / gcd,\n            v[0x1] / gcd\n        ]);\n    }\n    var lcm = 0x1;\n    arr['forEach'](function (v) {\n        var Xayzrq = {\n            'aEWEQ': function (callee, param1, param2) {\n                return callee(param1, param2);\n            },\n            'NleHA': function (x, y) {\n                return x / y;\n            }\n        };\n        var gcd = Xayzrq['aEWEQ'](GCD, v[0x1], lcm);\n        lcm = Xayzrq['NleHA'](v[0x1] * lcm, gcd);\n    });\n    arr = arr['map'](function (v, i) {\n        var CyTcMh = {\n            'flxsx': function (x, y) {\n                return x * y;\n            },\n            'JacrV': function (x, y) {\n                return x / y;\n            }\n        };\n        return CyTcMh['flxsx'](v[0x0], CyTcMh['JacrV'](lcm, v[0x1]));\n    });\n    var lcm = 0x1;\n    arr['forEach'](function (v) {\n        var nDYcbV = {\n            'JsSLj': function (callee, param1, param2) {\n                return callee(param1, param2);\n            },\n            'EgZba': function (x, y) {\n                return x / y;\n            }\n        };\n        var gcd = nDYcbV['JsSLj'](GCD, v, lcm);\n        lcm = nDYcbV['EgZba'](v * lcm, gcd);\n    });\n    arr['forEach'](function (v) {\n        var ihVKJk = {\n            'nMONh': function (x, y) {\n                return x / y;\n            }\n        };\n        console['log'](ihVKJk['nMONh'](lcm, v));\n    });\n}", "test_cases": [["2\n4 3\n5 4\n5\n789 289\n166 46\n9 4\n617 252\n972 303\n2\n8 5\n32 20\n0", "15\n16\n1598397732\n1209243492\n1939462992\n1782294192\n1360317793\n1\n1"]], "original": "function GCD(a,b){\n   var m=Math.max(a,b);\n   var n=Math.min(a,b);\n   while(n!=0){\n      var N=n;\n      n=m%n;\n      m=N;\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var I=0;I<n;I++){\n      var v=Arr.shift().split(\" \").map(Number);\n      var gcd=GCD(v[0],v[1]);\n      arr.push([v[0]/gcd,v[1]/gcd]);\n   }\n   var lcm=1;\n   arr.forEach(function(v){\n      var gcd=GCD(v[1],lcm);\n      lcm=(v[1]*lcm)/gcd;\n   });\n   arr=arr.map(function(v,i){return v[0]*(lcm/v[1]);});\n   var lcm=1;\n   arr.forEach(function(v){\n      var gcd=GCD(v,lcm);\n      lcm=(v*lcm)/gcd;\n   });\n   arr.forEach(function(v){console.log(lcm/v);});\n}", "language": "JavaScript"}
{"filename": "p00638_1", "type": "JavaScript", "obfuscated": "var n;\nvar x = [];\nfunction main() {\n    var kwRSuJ = {\n        'IHnlx': function (callee) {\n            return callee();\n        },\n        'cTigR': function (x, y) {\n            return x - y;\n        },\n        'NaYVj': function (x, y) {\n            return x <= y;\n        },\n        'hgBKK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'xEkDE': 'Yes'\n    };\n    while (n = kwRSuJ['IHnlx'](scan)) {\n        kwRSuJ['hgBKK'](rep, n, function (i) {\n            x[i] = [\n                kwRSuJ['IHnlx'](scan),\n                scan()\n            ];\n        });\n        x['sort'](function (a, b) {\n            return kwRSuJ['cTigR'](a[0x1], b[0x1]);\n        });\n        var ans = !![];\n        var w = 0x0;\n        kwRSuJ['hgBKK'](rep, n, function (i) {\n            w += x[i][0x0];\n            ans = kwRSuJ['NaYVj'](w, x[i][0x1]) && ans;\n        });\n        print(ans ? kwRSuJ['xEkDE'] : 'No');\n    }\n}\nfunction rep(a, b, c) {\n    var lODHiE = {\n        'XvonN': function (x, y) {\n            return x < y;\n        }\n    };\n    if (c === undefined) {\n        c = b;\n        b = a;\n        a = 0x0;\n    }\n    for (var i = a; lODHiE['XvonN'](i, b); ++i) {\n        if (c(i) === ![]) {\n            break;\n        }\n    }\n}\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar input = '';\nvar input_index = 0x0;\nfunction scan(type) {\n    var PCVjhn = {\n        'cuTnu': function (x, y) {\n            return x === y;\n        },\n        'scvOw': 'string'\n    };\n    if (PCVjhn['cuTnu'](type, PCVjhn['scvOw'])) {\n        return input[input_index++];\n    } else {\n        return +input[input_index++];\n    }\n}\nfunction print(val) {\n    console['log'](val);\n}\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var DpDVKf = {\n        'uhNcT': function (callee) {\n            return callee();\n        }\n    };\n    input = input['trim']()['split'](/\\s+/);\n    DpDVKf['uhNcT'](main);\n});", "test_cases": [["3\n2 3\n3 6\n1 2\n3\n2 3\n3 5\n1 2\n0", "Yes\nNo"]], "original": "var n;\nvar x = [];\n\nfunction main(){\n\twhile(n = scan()){\n\t\trep(n, function(i){\n\t\t\tx[i] = [scan(), scan()];\n\t\t});\n\t\tx.sort(function(a, b){\n\t\t\treturn a[1] - b[1];\n\t\t});\n\t\t//print(x);\n\t\tvar ans = true;\n\t\tvar w = 0;\n\t\trep(n, function(i){\n\t\t\tw += x[i][0];\n\t\t\tans = w <= x[i][1] && ans;\n\t\t});\n\t\tprint(ans ? \"Yes\" : \"No\");\n\t}\n}\n \nfunction rep(a, b, c){\n\tif(c === undefined){\n\t\tc = b;\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tfor(var i = a; i < b; ++i){\n\t\tif(c(i) === false){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n \nvar input = '';\nvar input_index = 0;\n \nfunction scan(type){\n\tif(type === 'string'){\n\t\treturn input[input_index++];\n\t}\n\telse{\n\t\treturn +input[input_index++];\n\t}\n}\n \nfunction print(val){\n\tconsole.log(val);\n}\n \nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.trim().split(/\\s+/);\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00691_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var z = arr['shift']() - 0x0;\n    if (z == 0x0)\n        break;\n    var zzz = z * z * z;\n    var ary = [];\n    for (var i = z - 0x1; i > 0x0; i--) {\n        for (var j = i; j > 0x0; j--) {\n            var x = zzz - i * i * i - j * j * j;\n            if (x > 0x0)\n                ary['push'](x);\n        }\n    }\n    console['log'](Math['min']['apply'](null, ary));\n}", "test_cases": [["6\n4\n2\n0", "27\n10\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var z=arr.shift()-0;\n   if(z==0)break;\n   var zzz=z*z*z;\n   var ary=[];\n   for(var i=z-1;i>0;i--){\n      for(var j=i;j>0;j--){\n         var x=zzz-i*i*i-j*j*j\n         if(x>0)ary.push(x);\n      }\n   }\n   console.log(Math.min.apply(null, ary));\n}", "language": "JavaScript"}
{"filename": "p00710_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var CofNbu = {\n        'TfMLx': function (callee, param1) {\n            return callee(param1);\n        },\n        'EHziy': function (x, y) {\n            return x === y;\n        },\n        'RUBgS': function (x, y) {\n            return x - y;\n        }\n    };\n    var inputs = input['replace'](/\\r/g, '')['split']('\\x0a');\n    while (!![]) {\n        var cards = [], line = inputs['shift']()['split']('\\x20'), n = parseInt(line[0x0]), r = CofNbu['TfMLx'](parseInt, line[0x1]);\n        if (CofNbu['EHziy'](n, 0x0) && r === 0x0)\n            break;\n        for (var i = n; i > 0x0; i--) {\n            cards['push'](i);\n        }\n        while (r--) {\n            var line = inputs['shift']()['split']('\\x20'), p = CofNbu['RUBgS'](parseInt(line[0x0]), 0x1), c = CofNbu['TfMLx'](parseInt, line[0x1]), tmp;\n            tmp = cards['splice'](p, c);\n            cards = tmp['concat'](cards);\n        }\n        console['log'](cards['shift']());\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["5 2\n3 1\n3 1\n10 3\n1 10\n10 1\n8 3\n0 0", "4\n4"]], "original": "(function (input) {\n    var inputs = input.replace(/\\r/g, '').split(\"\\n\");\n\n    while(true) {\n        var cards = [],\n            line = inputs.shift().split(\" \"),\n            n = parseInt(line[0]),\n            r = parseInt(line[1]);\n\n        if ( n === 0 && r === 0 ) break;\n\n        for ( var i = n; i > 0; i-- ) {\n            cards.push(i);\n        }\n\n        // シャッフルする回数分だけ\n        while(r--) {\n            var line = inputs.shift().split(\" \"),\n                p = parseInt(line[0]) - 1,  // 添字なので\n                c = parseInt(line[1]),\n                tmp;\n\n            tmp = cards.splice(p, c);\n            cards = tmp.concat(cards);\n        }\n\n        console.log(cards.shift());\n    }\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00854_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = arr['shift']();\n    if (nm == '0\\x200\\x200')\n        break;\n    nm = nm['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var start = nm[0x2];\n    var ary = [];\n    for (var i = 0x0; i <= n; i++)\n        ary[i] = !![];\n    var i = start;\n    var j = 0x0;\n    ary[start] = ![];\n    var cnt = 0x1;\n    while (!![]) {\n        if (cnt == ary['length'] - 0x2)\n            break;\n        if (ary[i]) {\n            j++;\n            if (j == m) {\n                ary[i] = ![];\n                j = 0x0;\n                cnt++;\n            }\n        }\n        i++;\n        if (ary['length'] - 0x1 < i)\n            i = 0x1;\n    }\n    for (var i = 0x1; i <= n; i++) {\n        if (ary[i])\n            console['log'](i);\n    }\n}", "test_cases": [["8 5 3\n100 9999 98\n10000 10000 10000\n0 0 0", "1\n93\n2019"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=arr.shift();\n   if(nm==\"0 0 0\")break;\n   nm=nm.split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   var start=nm[2];\n   var ary=[];\n   for(var i=0;i<=n;i++)ary[i]=true;\n   var i=start;\n   var j=0;\n   ary[start]=false;\n   var cnt=1;\n   while(true){\n      if(cnt==ary.length-2)break;\n      if(ary[i]){\n         j++;\n         if(j==m){\n            ary[i]=false;\n            j=0;\n            cnt++;\n         }\n      }\n      i++;\n      if(ary.length-1<i)i=1;\n   }\n   for(var i=1;i<=n;i++){\n      if(ary[i])console.log(i);\n   }\n}", "language": "JavaScript"}
{"filename": "p00999_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var abc = arr['shift']();\n    if (abc == '0\\x200\\x200\\x200\\x200')\n        break;\n    var ary = (abc + '\\x20' + arr['shift']())['split']('\\x20')['map'](Number);\n    (function (a, b, c, d, e, na, nb, nc) {\n        var fwpAmz = {\n            'WPOus': function (x, y) {\n                return x * y;\n            },\n            'wrveM': function (x, y) {\n                return x + y;\n            },\n            'VVKUa': function (x, y) {\n                return x == y;\n            },\n            'BHugF': function (x, y) {\n                return x * y;\n            },\n            'oktOA': function (x, y) {\n                return x > y;\n            },\n            'ndHAf': function (x, y) {\n                return x * y;\n            },\n            'PpwIX': function (x, y) {\n                return x != y;\n            },\n            'FuaDY': function (x, y) {\n                return x + y;\n            },\n            'mgWOF': function (x, y) {\n                return x / y;\n            }\n        };\n        var ans = fwpAmz['WPOus'](fwpAmz['WPOus'](Math['floor'](fwpAmz['mgWOF'](nc, d)), d), e);\n        var nokori = nc % d;\n        var A = function (ans) {\n            ans += fwpAmz['WPOus'](nokori, c);\n            ans += fwpAmz['wrveM'](na * a, fwpAmz['WPOus'](nb, b));\n            return ans;\n        }(ans);\n        var B = function (ans, na, nb) {\n            if (fwpAmz['VVKUa'](ans, 0x0)) {\n                var yobun = fwpAmz['VVKUa'](nokori, 0x0) ? 0x0 : d - nokori;\n                if (yobun > 0x0)\n                    ans += fwpAmz['BHugF'](e, d);\n                while (yobun--) {\n                    if (fwpAmz['oktOA'](nb, 0x0))\n                        nb--;\n                    else if (na > 0x0)\n                        na--;\n                }\n                ans += fwpAmz['wrveM'](fwpAmz['WPOus'](na, a), fwpAmz['ndHAf'](nb, b));\n                return ans;\n            }\n            if (fwpAmz['PpwIX'](ans, 0x0)) {\n                return fwpAmz['FuaDY'](fwpAmz['FuaDY'](na * a, fwpAmz['WPOus'](nb, b)), fwpAmz['BHugF'](nc, e));\n            }\n        }(ans, na, nb);\n        console['log'](Math['min'](A, B));\n    }['apply'](null, ary));\n}", "test_cases": [["70 100 340 4 200\n1 1 4\n70 100 340 4 200\n0 1 3\n70 100 340 4 200\n1 1 2\n0 0 0 0 0", "970\n800\n800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var abc=arr.shift();\n   if(abc==\"0 0 0 0 0\")break;\n   var ary=(abc+\" \"+arr.shift()).split(\" \").map(Number);\n   (function(a,b,c,d,e,na,nb,nc){\n      var ans=Math.floor(nc/d)*d*e;\n      var nokori=nc%d;\n      var A=(function(ans){\n         ans+=nokori*c;\n         ans+=na*a+nb*b;\n         return ans;\n      })(ans);\n      var B=(function(ans,na,nb){\n         if(ans==0){\n            var yobun=(nokori==0)?0:d-nokori;\n            if(yobun>0)ans+=e*d;\n            while(yobun--){\n               if(nb>0)nb--;\n               else if(na>0)na--;\n            }\n            ans+=na*a+nb*b;\n            return ans;\n         }\n         if(ans!=0){\n            return na*a+nb*b+nc*e;\n         }\n      })(ans,na,nb);\n      console.log(Math.min(A,B));\n   }).apply(null,ary);\n}", "language": "JavaScript"}
{"filename": "p01131_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar AL = Arr['shift']();\nvar abc = [\n    '',\n    '.,!?\\x20',\n    'abc',\n    'def',\n    'ghi',\n    'jkl',\n    'mno',\n    'pqrs',\n    'tuv',\n    'wxyz'\n];\nabc = abc['map'](function (v) {\n    return v['split']('');\n});\nfor (var i = 0x0; i < AL; i++) {\n    var tLENjw = '2|4|5|1|3|0'['split']('|');\n    var qXqONN = 0x0;\n    while (!![]) {\n        switch (tLENjw[qXqONN++]) {\n        case '0':\n            console['log'](str);\n            continue;\n        case '1':\n            var n = -0x1;\n            continue;\n        case '2':\n            var arr = Arr[i]['split']('')['map'](Number);\n            continue;\n        case '3':\n            arr['forEach'](function (v) {\n                var xlEaWD = {\n                    'urSZH': function (x, y) {\n                        return x > y;\n                    },\n                    'pCEuV': function (x, y) {\n                        return x % y;\n                    }\n                };\n                if (xlEaWD['urSZH'](v, 0x0)) {\n                    n++;\n                    a = abc[v][xlEaWD['pCEuV'](n, abc[v]['length'])];\n                } else {\n                    str += a;\n                    n = -0x1;\n                    a = '';\n                }\n            });\n            continue;\n        case '4':\n            var str = '';\n            continue;\n        case '5':\n            var a = '';\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["5\n20\n220\n222220\n44033055505550666011011111090666077705550301110\n000555555550000330000444000080000200004440000", "a\nb\nb\nhello, world!\nkeitai"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nvar abc=[\"\",\".,!? \",\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"];\nabc=abc.map(function(v){return v.split(\"\");});\nfor(var i=0;i<AL;i++){\n   var arr=Arr[i].split(\"\").map(Number);\n   var str=\"\";\n   var a=\"\";\n   var n=-1;\n   arr.forEach(function(v){\n      if(v>0){\n         n++;\n         a=abc[v][n%abc[v].length];\n      }else{\n         str+=a;\n         n=-1;\n         a=\"\";\n      }\n   });\nconsole.log(str);\n}", "language": "JavaScript"}
{"filename": "p01132_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar j = 0x0;\nwhile (!![]) {\n    var v = Arr['shift']() - 0x0;\n    if (v == 0x0)\n        break;\n    var m = Arr['shift']()['split']('\\x20')['map'](Number);\n    var money = 0xa * m[0x0] + 0x32 * m[0x1] + 0x64 * m[0x2] + 0x1f4 * m[0x3] - v;\n    var M = [\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ];\n    while (0x1f4 <= money) {\n        M[0x3]++;\n        money -= 0x1f4;\n    }\n    while (0x64 <= money) {\n        M[0x2]++;\n        money -= 0x64;\n    }\n    while (0x32 <= money) {\n        M[0x1]++;\n        money -= 0x32;\n    }\n    while (0xa <= money) {\n        M[0x0]++;\n        money -= 0xa;\n    }\n    var coin = [\n        0xa,\n        0x32,\n        0x64,\n        0x1f4\n    ];\n    var str = '';\n    m['forEach'](function (v, i) {\n        var IWBXuU = {\n            'pgfxn': function (x, y) {\n                return x > y;\n            },\n            'eWnMD': function (x, y) {\n                return x + y;\n            },\n            'IcXMO': function (x, y) {\n                return x + y;\n            },\n            'BLNqE': function (x, y) {\n                return x + y;\n            },\n            'eOwAx': function (x, y) {\n                return x - y;\n            }\n        };\n        if (IWBXuU['pgfxn'](v, M[i]))\n            str += IWBXuU['eWnMD'](IWBXuU['IcXMO'](IWBXuU['BLNqE'](coin[i], '\\x20'), IWBXuU['eOwAx'](v, M[i])), '\\x0a');\n    });\n    console['log'](str);\n}", "test_cases": [["160\n1 1 2 0\n160\n1 0 2 10\n0", "10 1\n50 1\n100 1\n\n10 1\n100 2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar j=0;\nwhile(true){\n   var v=Arr.shift()-0;\n   if(v==0)break;\n   var m=(Arr.shift()).split(\" \").map(Number);\n   var money=(10*m[0]+50*m[1]+100*m[2]+500*m[3])-v;\n   var M=[0,0,0,0];\n   while(500<=money){M[3]++;money-=500;}\n   while(100<=money){M[2]++;money-=100;}\n   while(50<=money){M[1]++;money-=50;}\n   while(10<=money){M[0]++;money-=10;}\n   var coin=[10,50,100,500];\n   var str=\"\";\n   m.forEach(function(v,i){\n      if(v>M[i])str+=coin[i]+\" \"+(v-M[i])+\"\\n\";\n   });\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p01140_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var str = arr['shift']();\n    if (str == '0\\x200')\n        break;\n    var ary = str['split']('\\x20')['map'](Number);\n    var h = [];\n    var w = [];\n    for (var i = 0x0; i < ary[0x0]; i++)\n        h['push'](arr['shift']() - 0x0);\n    for (var i = 0x0; i < ary[0x1]; i++)\n        w['push'](arr['shift']() - 0x0);\n    var H = {};\n    for (var i = 0x0; i < h['length']; i++) {\n        var sum = 0x0;\n        for (var j = i; j < h['length']; j++) {\n            if (j != i)\n                sum += h[j];\n            H['hasOwnProperty'](h[i] + sum) ? H[h[i] + sum]++ : H[h[i] + sum] = 0x1;\n        }\n    }\n    var W = {};\n    for (var i = 0x0; i < w['length']; i++) {\n        var sum = 0x0;\n        for (var j = i; j < w['length']; j++) {\n            if (j != i)\n                sum += w[j];\n            W['hasOwnProperty'](w[i] + sum) ? W[w[i] + sum]++ : W[w[i] + sum] = 0x1;\n        }\n    }\n    var cnt = 0x0;\n    for (var k in H) {\n        if (W['hasOwnProperty'](k))\n            cnt += H[k] * W[k];\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 3\n1\n1\n4\n2\n3\n1\n1 2\n10\n10\n10\n0 0", "6\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var str=arr.shift();\n   if(str==\"0 0\")break;\n   var ary=str.split(\" \").map(Number);\n   var h=[];\n   var w=[];\n   for(var i=0;i<ary[0];i++)h.push(arr.shift()-0);\n   for(var i=0;i<ary[1];i++)w.push(arr.shift()-0);\n   var H={};\n   for(var i=0;i<h.length;i++){\n      var sum=0;\n      for(var j=i;j<h.length;j++){\n         if(j!=i)sum+=h[j];\n         (H.hasOwnProperty(h[i]+sum))?H[h[i]+sum]++:H[h[i]+sum]=1;\n      }\n   }\n   var W={};\n   for(var i=0;i<w.length;i++){\n      var sum=0;\n      for(var j=i;j<w.length;j++){\n         if(j!=i)sum+=w[j];\n         (W.hasOwnProperty(w[i]+sum))?W[w[i]+sum]++:W[w[i]+sum]=1;\n      }\n   }\n   var cnt=0;\n   for(var k in H){\n      if(W.hasOwnProperty(k))cnt+=H[k]*W[k];\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01803_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var Arr = arr['splice'](0x0, n);\n    var obj = {};\n    var max = 0x0;\n    Arr['forEach'](function (v) {\n        var vMaKbm = {\n            'tTRKz': function (x, y) {\n                return x < y;\n            }\n        };\n        var APeuXe = '3|2|1|0|5|4'['split']('|');\n        var ohMtSp = 0x0;\n        while (!![]) {\n            switch (APeuXe[ohMtSp++]) {\n            case '0':\n                for (var i = 0x0; vMaKbm['tTRKz'](i, str['length']); i++) {\n                    if (flag)\n                        s += str[i];\n                    flag = /[aiueo]/['test'](str[i]) ? !![] : ![];\n                }\n                continue;\n            case '1':\n                var flag = ![];\n                continue;\n            case '2':\n                var s = str[0x0];\n                continue;\n            case '3':\n                var str = v;\n                continue;\n            case '4':\n                max = Math['max'](max, s['length']);\n                continue;\n            case '5':\n                obj[s] = !![];\n                continue;\n            }\n            break;\n        }\n    });\n    for (var i = 0x1; i <= max; i++) {\n        var Obj = {};\n        for (var key in obj) {\n            Obj[key['slice'](0x0, i)] = !![];\n        }\n        if (Object['keys'](Obj)['length'] == n) {\n            console['log'](i);\n            break;\n        }\n        if (i == max)\n            console['log'](-0x1);\n    }\n}", "test_cases": [["3\nhaneda\noookayama\ntsu\n2\nazusa\nazishirabe\n2\nsnuke\nsnake\n4\nhaneda\nhonda\nhanamaki\nhawaii\n0", "1\n4\n-1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var Arr = arr.splice(0,n);\n   var obj = {};\n   var max = 0;\n   Arr.forEach(function(v){\n      var str = v;\n      var s = str[0];\n      var flag = false;\n      for (var i = 0; i < str.length; i++) {\n         if (flag) s += str[i];\n         flag = (/[aiueo]/.test(str[i])) ? true : false;\n      }\n      obj[s] = true;\n      max = Math.max(max, s.length);\n   });\n   for (var i = 1; i <= max; i++) {\n      var Obj = {};\n      for (var key in obj) {\n         Obj[key.slice(0, i)] = true;\n      }\n      if (Object.keys(Obj).length == n) {\n         console.log(i);\n         break;\n      }\n      if (i == max) console.log(-1);\n   }\n}", "language": "JavaScript"}
{"filename": "p02318_1", "type": "JavaScript", "obfuscated": "function LD(a, b) {\n    var sFeYbJ = {\n        'meLby': function (x, y) {\n            return x < y;\n        },\n        'fKZUu': function (x, y) {\n            return x + y;\n        },\n        'RLPTW': function (x, y) {\n            return x < y;\n        },\n        'eIcME': function (x, y) {\n            return x + y;\n        },\n        'vOuKz': function (x, y) {\n            return x < y;\n        },\n        'eTKCo': function (x, y) {\n            return x - y;\n        },\n        'Ormks': function (x, y) {\n            return x - y;\n        },\n        'OZYjY': function (x, y) {\n            return x - y;\n        },\n        'hgmIM': function (x, y) {\n            return x + y;\n        },\n        'dxQqf': function (x, y) {\n            return x + y;\n        },\n        'mJKGI': function (x, y) {\n            return x - y;\n        },\n        'CJJuH': function (x, y) {\n            return x - y;\n        },\n        'iNlEY': function (x, y) {\n            return x < y;\n        },\n        'SycTw': function (x, y) {\n            return x + y;\n        },\n        'tmKRm': function (x, y) {\n            return x + y;\n        }\n    };\n    var QxAvBP = '4|3|1|5|2|0'['split']('|');\n    var nnIKLr = 0x0;\n    while (!![]) {\n        switch (QxAvBP[nnIKLr++]) {\n        case '0':\n            return ar[a['length']][b['length']];\n        case '1':\n            for (var i = 0x0; sFeYbJ['meLby'](i, sFeYbJ['fKZUu'](a['length'], 0x1)); i++) {\n                ar[i][0x0] = i;\n            }\n            continue;\n        case '2':\n            for (var i = 0x1; sFeYbJ['RLPTW'](i, sFeYbJ['eIcME'](a['length'], 0x1)); i++) {\n                for (var j = 0x1; sFeYbJ['vOuKz'](j, sFeYbJ['eIcME'](b['length'], 0x1)); j++) {\n                    if (a['charAt'](sFeYbJ['eTKCo'](i, 0x1)) == b['charAt'](sFeYbJ['eTKCo'](j, 0x1))) {\n                        ar[i][j] = Math['min'](sFeYbJ['fKZUu'](ar[i - 0x1][j], 0x1), sFeYbJ['fKZUu'](ar[i][sFeYbJ['Ormks'](j, 0x1)], 0x1), ar[sFeYbJ['OZYjY'](i, 0x1)][j - 0x1]);\n                    } else {\n                        ar[i][j] = Math['min'](sFeYbJ['hgmIM'](ar[sFeYbJ['Ormks'](i, 0x1)][j], 0x1), sFeYbJ['hgmIM'](ar[i][j - 0x1], 0x1), sFeYbJ['dxQqf'](ar[sFeYbJ['mJKGI'](i, 0x1)][sFeYbJ['CJJuH'](j, 0x1)], 0x1));\n                    }\n                }\n            }\n            continue;\n        case '3':\n            for (var i = 0x0; sFeYbJ['iNlEY'](i, sFeYbJ['SycTw'](a['length'], 0x1)); i++) {\n                var subar = new Array();\n                for (var j = 0x0; sFeYbJ['meLby'](j, sFeYbJ['SycTw'](b['length'], 0x1)); j++) {\n                    subar['push'](0x0);\n                }\n                ar['push'](subar);\n            }\n            continue;\n        case '4':\n            var ar = new Array();\n            continue;\n        case '5':\n            for (var i = 0x0; sFeYbJ['iNlEY'](i, sFeYbJ['tmKRm'](b['length'], 0x1)); i++) {\n                ar[0x0][i] = i;\n            }\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar strings = input['split']('\\x0a');\nconsole['log'](LD(strings[0x0], strings[0x1]));", "test_cases": [["acac\nacm", "2"], ["icpc\nicpc", "0"]], "original": "function LD(a, b){\n    var ar = new Array();\n    for(var i = 0; i < a.length + 1; i++){\n        var subar = new Array();\n        for(var j = 0; j < b.length + 1; j++){\n            subar.push(0);\n        }\n        ar.push(subar);\n    }\n\n    for(var i = 0; i < a.length + 1; i++){\n        ar[i][0] = i;\n    }\n\n    for(var i = 0; i < b.length + 1; i++){\n        ar[0][i] = i;\n    }\n\n    for(var i = 1; i < a.length + 1; i++){\n        for(var j = 1; j < b.length + 1; j++){\n            if(a.charAt(i - 1) == b.charAt(j - 1)){\n                ar[i][j] = Math.min(ar[i - 1][j] + 1, ar[i][j - 1] + 1, ar[i - 1][j - 1]);\n            }else{\n                ar[i][j] = Math.min(ar[i - 1][j] + 1, ar[i][j - 1] + 1, ar[i - 1][j - 1] + 1);\n            }\n        }\n    }\n    return ar[a.length][b.length];\n} \n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar strings = input.split('\\n');\n\nconsole.log(LD(strings[0], strings[1]));", "language": "JavaScript"}
{"filename": "p02379_1", "type": "JavaScript", "obfuscated": "var reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    var WSiqqv = {\n        'bQPyK': '3|2|4|6|7|5|0|1',\n        'ddATy': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'uCCQl': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'NchKO': function (x, y) {\n            return x + y;\n        },\n        'rMFfF': function (x, y) {\n            return x * y;\n        },\n        'SxroB': function (x, y) {\n            return x - y;\n        },\n        'YlnQk': function (x, y) {\n            return x - y;\n        },\n        'LcScD': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var LsyVZH = WSiqqv['bQPyK']['split']('|');\n    var tIahoK = 0x0;\n    while (!![]) {\n        switch (LsyVZH[tIahoK++]) {\n        case '0':\n            console['log'](b['toFixed'](0x8));\n            continue;\n        case '1':\n            process['exit']();\n            continue;\n        case '2':\n            var b = WSiqqv['ddATy'](parseInt, a[0x0], 0xa);\n            continue;\n        case '3':\n            var a = line['split']('\\x20');\n            continue;\n        case '4':\n            var c = WSiqqv['uCCQl'](parseInt, a[0x1], 0xa);\n            continue;\n        case '5':\n            b = Math['sqrt'](WSiqqv['NchKO'](WSiqqv['rMFfF'](WSiqqv['SxroB'](b, d), WSiqqv['SxroB'](b, d)), WSiqqv['rMFfF'](WSiqqv['YlnQk'](c, e), c - e)));\n            continue;\n        case '6':\n            var d = WSiqqv['LcScD'](parseInt, a[0x2], 0xa);\n            continue;\n        case '7':\n            var e = parseInt(a[0x3], 0xa);\n            continue;\n        }\n        break;\n    }\n});\nprocess['stdin']['on']('end', function () {\n});", "test_cases": [["0 0 1 1", "1.41421356"]], "original": "var reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var a = line.split(' ');\n  var b = parseInt(a[0],10);\n  var c = parseInt(a[1],10);\n  var d = parseInt(a[2],10);\n  var e = parseInt(a[3],10);\n  b = Math.sqrt((b-d)*(b-d)+(c-e)*(c-e));\n  console.log(b.toFixed(8));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02538_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const AthniD = {\n        'OExLg': function (x, y) {\n            return x - y;\n        },\n        'frbUw': function (x, y) {\n            return x % y;\n        },\n        'iMisb': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a')['map'](v => v['split']('\\x20'));\n    const [n, q] = input[0x0]['map'](v => +v);\n    input['shift']();\n    const mod = 0x3b800001;\n    const str = new Array(n)['fill'](0x1);\n    input['map'](value => {\n        const [l, r, d] = [\n            AthniD['OExLg'](value[0x0], 0x1),\n            AthniD['OExLg'](value[0x1], 0x1),\n            +value[0x2]\n        ];\n        for (let i = l; i <= r; i++) {\n            str[i] = d;\n        }\n        let num = 0x0;\n        for (let s = 0x0; s < n; s++) {\n            num = AthniD['frbUw'](AthniD['iMisb'](num * 0xa, str[s]), mod);\n        }\n        console['log'](num);\n    });\n}\nfunction toInt(v) {\n    const qMkSHQ = {\n        'DTElZ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return qMkSHQ['DTElZ'](parseInt, v, 0xa);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8 5\n3 6 2\n1 4 7\n3 8 3\n2 2 2\n4 5 1", "11222211\n77772211\n77333333\n72333333\n72311333"], ["200000 1\n123 456 7", "641437905"]], "original": "function Main(input) {\n  input = input.split(\"\\n\").map(v => v.split(\" \"));\n  const [n, q] = input[0].map(v => +v);\n  input.shift();\n  \n  \n  const mod = 998244353;\n  const str = (new Array(n)).fill(1);\n  \n  input.map(value => {\n    const [l, r, d] = [(value[0] - 1), (value[1] - 1), +value[2]];\n    for (let i = l; i <= r; i++) {\n      str[i] = d;\n    }\n\n    let num = 0;\n    for (let s = 0; s < n; s++) {\n      num = (num * 10 + str[s]) % mod;\n    }\n    console.log(num);\n  });  \n}\n\nfunction toInt(v) {\n    //return BigInt(v);\n    return parseInt(v, 10);\n}\n// 魔法\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p02722_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction arrayOfDivisors(n) {\n    const sRLhVw = {\n        'MYpPq': function (x, y) {\n            return x <= y;\n        },\n        'LRjgp': function (x, y) {\n            return x % y;\n        },\n        'vlNhz': function (x, y) {\n            return x !== y;\n        },\n        'KwWPZ': function (x, y) {\n            return x - y;\n        },\n        'KnlDf': function (x, y) {\n            return x / y;\n        },\n        'xRvJI': function (x, y) {\n            return x - y;\n        }\n    };\n    const divisor = new Array();\n    divisor[0x0] = 0x1;\n    for (let i = 0x2; sRLhVw['MYpPq'](i, Math['sqrt'](n)); i++) {\n        if (sRLhVw['LRjgp'](n, i) === 0x0) {\n            divisor['push'](i);\n        }\n    }\n    const p = divisor['length'];\n    if (sRLhVw['vlNhz'](Math['sqrt'](n), divisor[sRLhVw['KwWPZ'](p, 0x1)])) {\n        divisor['push'](sRLhVw['KnlDf'](n, divisor[sRLhVw['xRvJI'](p, 0x1)]));\n    }\n    for (let i = sRLhVw['xRvJI'](p, 0x2); sRLhVw['MYpPq'](0x0, i); i--) {\n        divisor['push'](sRLhVw['KnlDf'](n, divisor[i]));\n    }\n    return divisor;\n}\n(function main(input) {\n    const RSjppb = {\n        'Hvnft': function (x, y) {\n            return x - y;\n        },\n        'vZQWt': function (x, y) {\n            return x === y;\n        },\n        'TjJsK': function (x, y) {\n            return x > y;\n        },\n        'MUtlt': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const n = Number(input['trim']());\n    const subOnly = RSjppb['Hvnft'](arrayOfDivisors(RSjppb['Hvnft'](n, 0x1))['length'], 0x1);\n    let divIncluded = 0x0;\n    const divOfN = arrayOfDivisors(n);\n    divOfN['shift']();\n    for (let d of divOfN) {\n        let n1 = n;\n        do {\n            n1 /= d;\n        } while (RSjppb['vZQWt'](n1 % d, 0x0));\n        if (n1 === 0x1) {\n            divIncluded++;\n        } else if (RSjppb['TjJsK'](RSjppb['MUtlt'](arrayOfDivisors, n1 - 0x1)['indexOf'](d), -0x1)) {\n            divIncluded++;\n        }\n    }\n    console['log'](subOnly + divIncluded);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["6", "3"], ["3141", "13"], ["314159265358", "9"]], "original": "\"use strict\";\n\nfunction arrayOfDivisors(n){\n  const divisor = new Array();\n  divisor[0] = 1;\n  \n  for(let i = 2; i <= Math.sqrt(n); i++){\n    if(n % i === 0){\n      divisor.push(i);\n    }\n  }\n  \n  const p = divisor.length;\n  \n  if(Math.sqrt(n) !== divisor[p - 1]){\n    divisor.push(n / divisor[p - 1]);\n  }\n  \n  for(let i = p - 2; 0 <= i; i--){\n    divisor.push(n / divisor[i]);\n  }\n  \n  return divisor;\n}\n\n(function main(input){\n  const n = Number(input.trim());\n  \n  const subOnly = arrayOfDivisors(n - 1).length - 1;\n  \n  let divIncluded = 0;\n  \n  const divOfN = arrayOfDivisors(n);\n  divOfN.shift();\n  for (let d of divOfN){\n    let n1 = n;\n    do{\n      n1 /= d;\n    } while (n1 % d === 0);\n    \n    if (n1 === 1){\n      divIncluded++;\n    } else if (arrayOfDivisors(n1 - 1).indexOf(d) > -1){\n      divIncluded++;\n    }\n  }\n  \n  console.log(subOnly + divIncluded);\n  \n})(require('fs').readFileSync('/dev/stdin', 'utf8'));\n\n", "language": "JavaScript"}
{"filename": "p02780_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst fact = n => {\n    const meRZTC = {\n        'NDeMS': function (x, y) {\n            return x === y;\n        },\n        'UlawS': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    if (meRZTC['NDeMS'](n, 0x1))\n        0x1;\n    return n + meRZTC['UlawS'](fact, n - 0x1);\n};\nfunction Main(input) {\n    const acQDLg = {\n        'SftLn': function (x, y) {\n            return x < y;\n        },\n        'eQnKE': function (x, y) {\n            return x > y;\n        },\n        'iGVft': function (x, y) {\n            return x - y;\n        },\n        'hJcnG': function (x, y) {\n            return x < y;\n        },\n        'nPPyS': function (x, y) {\n            return x + y;\n        },\n        'geldr': function (x, y) {\n            return x / y;\n        },\n        'FVERi': function (x, y) {\n            return x * y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const array = input[0x0]['split']('\\x20')['map'](s => parseInt(s));\n    const N = array[0x0];\n    const K = array[0x1];\n    let A = input[0x1]['split']('\\x20')['map'](s => parseInt(s));\n    let dp = {};\n    for (let i = 0x0; acQDLg['SftLn'](i, N); ++i) {\n        const a = A[i];\n        if (dp[a])\n            continue;\n        let tmp = 0x0;\n        for (let j = a; acQDLg['eQnKE'](j, 0x0); --j) {\n            tmp += j;\n        }\n        dp[a] = tmp;\n    }\n    let result = 0x0;\n    for (let i = 0x0; acQDLg['SftLn'](i, N - acQDLg['iGVft'](K, 0x1)); ++i) {\n        let total = 0x0;\n        for (let j = i; acQDLg['hJcnG'](j, acQDLg['nPPyS'](i, K)); ++j) {\n            total += acQDLg['geldr'](acQDLg['FVERi'](dp[A[j]], 0x1), A[j]);\n        }\n        result = Math['max'](total, result);\n    }\n    console['log'](result['toFixed'](0xc));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n1 2 2 4 5", "7.000000000000"], ["4 1\n6 6 6 6", "3.500000000000"], ["10 4\n17 13 13 12 15 20 10 13 17 11", "32.000000000000"]], "original": "'use strict'\n\nconst fact = (n) => {\n  if (n === 1) 1\n  return n + fact(n - 1)\n}\n\nfunction Main(input) {\n  input = input.trim().split('\\n')\n  const array = input[0].split(' ').map(s => parseInt(s))\n  const N = array[0]\n  const K = array[1]\n\n  let A = input[1].split(' ').map(s => parseInt(s))\n\n  let dp = {}\n  // 各値の期待値を計算する\n  for(let i = 0; i < N; ++i) {\n    const a = A[i]\n    if (dp[a]) continue\n\n    let tmp = 0\n    for(let j = a; j > 0; --j) {\n      tmp += j\n    }\n    dp[a] = tmp\n  }\n\n  let result = 0\n\n  // 前から順番に組み合わせる\n  for (let i = 0; i < N - (K - 1); ++i) {\n\n    let total = 0\n    for(let j = i; j < i + K; ++j) {\n      total += dp[A[j]] * 1/A[j]\n    }\n\n    result = Math.max(total, result)\n  }\n\n  console.log(result.toFixed(12))\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02890_1", "type": "JavaScript", "obfuscated": "function Main(arg) {\n    var bGpLqr = {\n        'EnQJe': '7|4|3|6|2|5|1|0',\n        'FNpdH': function (x, y) {\n            return x <= y;\n        },\n        'PYIXE': function (x, y) {\n            return x < y;\n        },\n        'LFdIb': function (x, y) {\n            return x / y;\n        }\n    };\n    var gZyTHn = bGpLqr['EnQJe']['split']('|');\n    var CMLlJB = 0x0;\n    while (!![]) {\n        switch (gZyTHn[CMLlJB++]) {\n        case '0':\n            return;\n        case '1':\n            console['log'](ans['join']('\\x0a')['toString']());\n            continue;\n        case '2':\n            ans['push'](N);\n            continue;\n        case '3':\n            var tmp = new Set(A);\n            continue;\n        case '4':\n            var A = arg['split']('\\x0a')[0x1]['split']('\\x20')['map'](v => v - 0x0);\n            continue;\n        case '5':\n            for (var K = 0x2; bGpLqr['FNpdH'](K, N); K++) {\n                if (bGpLqr['PYIXE'](tmp['size'], K)) {\n                    ans['push'](0x0);\n                } else {\n                    ans['push'](Math['floor'](bGpLqr['LFdIb'](tmp['size'], K)));\n                }\n            }\n            continue;\n        case '6':\n            var ans = [];\n            continue;\n        case '7':\n            var N = arg['split']('\\x0a')[0x0] - 0x0;\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n2 1 2", "3\n1\n0"], ["5\n1 2 3 4 5", "5\n2\n1\n1\n1"], ["4\n1 3 3 3", "4\n1\n0\n0"]], "original": "function Main(arg) {\n \n    var N = arg.split(\"\\n\")[0]-0;\n    var A = arg.split(\"\\n\")[1].split(\" \").map(v=>v-0);\n \n    var tmp = new Set(A);\n    var ans = [];\n\n    ans.push(N);\n\n    for (var K = 2; K <= N; K++){\n        if (tmp.size < K) {\n            ans.push(0);\n        }\n        else {\n            ans.push(Math.floor(tmp.size / K));\n        }\n    }\n\n    console.log(ans.join(\"\\n\").toString());\n\n    return;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02941_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst arg_str = require('fs')['readFileSync']('/dev/stdin', 'UTF-8');\nconst args_lines = arg_str['split']('\\x0a');\nconst n = args_lines[0x0];\nconst a = args_lines[0x1]['split']('\\x20')['map'](x => parseInt(x));\nconst b = args_lines[0x2]['split']('\\x20')['map'](x => parseInt(x));\nlet cnt = 0x0;\nlet current_b = b;\nwhile (!![]) {\n    const max_index = current_b['indexOf'](Math['max'](...current_b));\n    if (max_index == 0x0) {\n        current_b[max_index] = current_b[max_index] - current_b[0x1] - current_b[n - 0x1];\n    } else if (max_index == n - 0x1) {\n        current_b[max_index] = current_b[max_index] - current_b[n - 0x2] - current_b[0x0];\n    } else {\n        current_b[max_index] = current_b[max_index] - current_b[max_index - 0x1] - current_b[max_index + 0x1];\n    }\n    cnt++;\n    if (JSON['stringify'](current_b) == JSON['stringify'](a)) {\n        console['log'](cnt);\n        break;\n    }\n    if (current_b['find'](x => x < 0x1)) {\n        console['log'](-0x1);\n        break;\n    }\n}", "test_cases": [["3\n1 1 1\n13 5 7", "4"], ["4\n1 2 3 4\n2 3 4 5", "-1"], ["5\n5 6 5 2 1\n9817 1108 6890 4343 8704", "25"]], "original": "\"use strict\"\n\nconst arg_str = require('fs').readFileSync('/dev/stdin', 'UTF-8')\nconst args_lines = arg_str.split('\\n')\nconst n = args_lines[0]\nconst a = args_lines[1].split(' ').map(x=>parseInt(x))\nconst b = args_lines[2].split(' ').map(x=>parseInt(x))\n\nlet cnt = 0\n\nlet current_b = b\n\nwhile (true){\n    const max_index = current_b.indexOf(Math.max(...current_b))\n\n    if(max_index == 0){\n        current_b[max_index] = current_b[max_index] - current_b[1] - current_b[n - 1]\n    }else if(max_index == (n - 1)){\n        current_b[max_index] = current_b[max_index] - current_b[n - 2] - current_b[0]\n    }else{\n        current_b[max_index] = current_b[max_index] - current_b[max_index - 1] - current_b[max_index + 1]\n    }\n    cnt++\n    if(JSON.stringify(current_b) == JSON.stringify(a)){\n        console.log(cnt)\n        break\n    }\n    if(current_b.find(x=>x<1)){\n        console.log(-1)\n        break\n    }\n}\n", "language": "JavaScript"}
{"filename": "p03171_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction solve(N, A) {\n    var aXkjQD = {\n        'eCHbL': function (x, y) {\n            return x + y;\n        },\n        'UWVBh': function (x, y) {\n            return x <= y;\n        },\n        'XPIYB': function (x, y) {\n            return x > y;\n        },\n        'gERQv': function (x, y) {\n            return x === y;\n        },\n        'eCHRB': function (x, y) {\n            return x - y;\n        },\n        'vOgLd': function (x, y) {\n            return x + y;\n        },\n        'aydkU': function (x, y) {\n            return x - y;\n        },\n        'aRHuw': function (x, y) {\n            return x + y;\n        },\n        'xlGPm': function (x, y) {\n            return x - y;\n        },\n        'xwsWn': function (x, y) {\n            return x + y;\n        },\n        'sWrwN': function (x, y) {\n            return x + y;\n        },\n        'knTqi': function (x, y) {\n            return x + y;\n        },\n        'PuUvf': function (x, y) {\n            return x - y;\n        },\n        'IBHLd': function (x, y) {\n            return x - y;\n        }\n    };\n    var dp = new Array(aXkjQD['eCHbL'](N, 0x1))['fill'](0x0)['map'](e => new Array(N + 0x1)['fill'](0x0));\n    var row = 0x1;\n    var col = 0x1;\n    while (aXkjQD['UWVBh'](col, N)) {\n        var c = col;\n        for (var r = row; aXkjQD['UWVBh'](r, N); r++) {\n            if (aXkjQD['XPIYB'](c, N)) {\n                break;\n            }\n            if (aXkjQD['gERQv'](c, r)) {\n                dp[r][c] = A[aXkjQD['eCHRB'](r, 0x1)];\n            } else if (aXkjQD['gERQv'](c, aXkjQD['vOgLd'](r, 0x1))) {\n                dp[r][c] = Math['max'](A[aXkjQD['aydkU'](r, 0x1)], A[aXkjQD['eCHRB'](c, 0x1)]);\n            } else {\n                dp[r][c] = Math['max'](aXkjQD['aRHuw'](A[aXkjQD['xlGPm'](r, 0x1)], Math['min'](dp[aXkjQD['aRHuw'](r, 0x1)][aXkjQD['eCHRB'](c, 0x1)], dp[aXkjQD['xwsWn'](r, 0x2)][c])), aXkjQD['sWrwN'](A[c - 0x1], Math['min'](dp[aXkjQD['knTqi'](r, 0x1)][aXkjQD['PuUvf'](c, 0x1)], dp[r][aXkjQD['eCHRB'](c, 0x2)])));\n            }\n            c++;\n        }\n        col++;\n    }\n    var taro = dp[0x1][N];\n    var sum = A['reduce']((acc, current) => acc + current);\n    return aXkjQD['IBHLd'](taro, sum - taro);\n}\nfunction main(input) {\n    var uRsCxS = {\n        'Slzgt': '4|1|2|0|3',\n        'RdFSo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var ouqrAl = uRsCxS['Slzgt']['split']('|');\n    var wdXvnR = 0x0;\n    while (!![]) {\n        switch (ouqrAl[wdXvnR++]) {\n        case '0':\n            var ans = uRsCxS['RdFSo'](solve, N, A);\n            continue;\n        case '1':\n            var N = parseInt(lines[0x0]);\n            continue;\n        case '2':\n            var A = lines[0x1]['split']('\\x20')['map'](l => parseInt(l));\n            continue;\n        case '3':\n            console['log'](ans);\n            continue;\n        case '4':\n            var lines = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n10 80 90 30", "10"], ["3\n10 100 10", "-80"], ["1\n10", "10"], ["10\n1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000 1", "4999999995"], ["6\n4 2 9 7 1 5", "2"]], "original": "'use strict'\n\nfunction solve(N, A) {\n  var dp = new Array(N+1).fill(0).map(e => new Array(N+1).fill(0))\n  var row = 1\n  var col = 1\n  while (col <= N) {\n    var c = col\n    for (var r = row; r <= N; r++) {\n      if (c > N) {\n        break\n      }\n      if (c === r) {\n        dp[r][c] = A[r-1]\n      } else if (c === (r+1)) {\n        dp[r][c] = Math.max(A[r-1], A[c-1])\n      } else {\n        dp[r][c] = Math.max(A[r-1] + Math.min(dp[r+1][c-1], dp[r+2][c]), A[c-1] + Math.min(dp[r+1][c-1], dp[r][c-2]))\n      }\n      c++\n    }\n    col++\n  }\n  var taro = dp[1][N]\n  var sum = A.reduce((acc, current) => acc + current)\n  return taro - (sum - taro)\n}\n\nfunction main(input) {\n  var lines = input.split(\"\\n\")\n  var N = parseInt(lines[0])\n  var A = lines[1].split(' ').map(l => parseInt(l))\n  var ans = solve(N, A)\n  console.log(ans)\n}\n\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03222_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var adXJIF = {\n        'bLnWK': function (x, y) {\n            return x < y;\n        },\n        'zJBxA': function (x, y) {\n            return x + y;\n        },\n        'CwYZx': function (x, y) {\n            return x + y;\n        },\n        'sdssm': function (x, y) {\n            return x ** y;\n        },\n        'bXWjY': function (x, y) {\n            return x ** y;\n        },\n        'DKIYA': function (callee, param1) {\n            return callee(param1);\n        },\n        'ecjew': function (x, y) {\n            return x + y;\n        },\n        'sIcim': function (x, y) {\n            return x <= y;\n        },\n        'uxXdZ': function (x, y) {\n            return x <= y;\n        }\n    };\n    input = input['split']('\\x20')['map'](a => ~~a);\n    var H = input[0x0];\n    var W = input[0x1];\n    var K = input[0x2];\n    var mod = adXJIF['CwYZx'](adXJIF['sdssm'](0xa, 0x9), 0x7);\n    if (W == 0x1)\n        return 0x1;\n    var validAmidaList = Array(adXJIF['bXWjY'](0x2, W - 0x1))['fill'](0x0)['map']((a, b) => b)['map'](a => a['toString'](0x2))['filter'](a => !/11/['test'](a))['map'](a => '000000' + a)['map'](a => a['slice'](0x1 - W))['map'](a => '0' + a + '0');\n    var dp = adXJIF['DKIYA'](Array, adXJIF['ecjew'](H, 0x1));\n    for (var i = 0x0; adXJIF['sIcim'](i, H); i++) {\n        dp[i] = adXJIF['DKIYA'](Array, W)['fill'](0x0);\n    }\n    dp[0x0][0x0] = 0x1;\n    for (var i = 0x1; adXJIF['uxXdZ'](i, H); i++) {\n        validAmidaList['forEach'](function (elem) {\n            for (var j = 0x0; adXJIF['bLnWK'](j, W); j++) {\n                ({\n                    '10': a => dp[i][j] += dp[i - 0x1][j - 0x1],\n                    '01': a => dp[i][j] += dp[i - 0x1][j + 0x1],\n                    '00': a => dp[i][j] += dp[i - 0x1][j]\n                }[adXJIF['zJBxA'](elem[j], elem[j + 0x1])]());\n                dp[i][j] %= mod;\n            }\n        });\n    }\n    return dp[H][K - 0x1];\n}\nif (typeof require !== 'undefined')\n    console['log'](Main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["1 3 2", "1"], ["1 3 1", "2"], ["2 3 3", "1"], ["2 3 1", "5"], ["7 1 1", "1"], ["15 8 5", "437760187"]], "original": "function Main(input){\n  input = input.split(\" \").map(a=>~~a)\n\tvar H = input[0];\n  var W = input[1];\n  var K = input[2];\n  var mod = 10**9+7;\n  \n  if(W == 1)return 1;\n  \n  var validAmidaList = Array(2**(W-1))\n  \t.fill(0)\n    .map((a,b)=>b)\n    .map(a=>a.toString(2))\n    .filter(a=>!/11/.test(a))\n    .map(a=>\"000000\"+a)\n    .map(a=>a.slice(1-W))\n    .map(a=>\"0\"+a+\"0\")\n  \n  var dp = Array(H+1);\n  for(var i = 0; i <= H;i++){\n  \tdp[i] = Array(W).fill(0);\n  }\n  dp[0][0] = 1;\n  \n  for(var i = 1; i <= H;i++){\n  \tvalidAmidaList.forEach(function(elem){\n    \tfor(var j = 0; j < W; j++){\n      \t({\n        \t\"10\":a=>dp[i][j] += dp[i-1][j-1],\n          \"01\":a=>dp[i][j] += dp[i-1][j+1],\n          \"00\":a=>dp[i][j] += dp[i-1][j]\n        })[elem[j]+elem[j+1]]();\n        dp[i][j] %= mod;\n      }\n    })\n  }\n  \n  return dp[H][K-1];\n}\n\nif(typeof require !== 'undefined')console.log(Main(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")));", "language": "JavaScript"}
{"filename": "p03223_1", "type": "JavaScript", "obfuscated": "console['log'](main(require('fs')['readFileSync']('/dev/stdin', 'utf8')));\nfunction main(s) {\n    var uxrQPx = {\n        'leKSi': '7|5|4|2|3|6|10|1|8|0|9',\n        'kWOwe': function (x, y) {\n            return x % y;\n        },\n        'DtHxX': function (x, y) {\n            return x + y;\n        },\n        'jQVOT': function (x, y) {\n            return x - y;\n        },\n        'WVLbb': function (x, y) {\n            return x < y;\n        },\n        'XdfHZ': function (x, y) {\n            return x * y;\n        },\n        'mxRoW': function (x, y) {\n            return x < y;\n        },\n        'gdRyA': function (x, y) {\n            return x * y;\n        },\n        'AXtel': function (x, y) {\n            return x - y;\n        },\n        'KuFZX': function (x, y) {\n            return x - y;\n        },\n        'hSiPS': function (x, y) {\n            return x + y;\n        },\n        'CuFNW': function (x, y) {\n            return x - y;\n        },\n        'Jtlxe': function (x, y) {\n            return x - y;\n        },\n        'ewKdM': function (x, y) {\n            return x + y;\n        },\n        'CVJKG': function (x, y) {\n            return x - y;\n        }\n    };\n    var aKPwgL = uxrQPx['leKSi']['split']('|');\n    var sQNYVA = 0x0;\n    while (!![]) {\n        switch (aKPwgL[sQNYVA++]) {\n        case '0':\n            if (uxrQPx['kWOwe'](n, 0x2) === 0x0)\n                return uxrQPx['DtHxX'](uxrQPx['jQVOT'](ans, s[m]), s[m - 0x1]);\n            continue;\n        case '1':\n            for (var i = 0x0; uxrQPx['WVLbb'](i, m); i++) {\n                ans -= uxrQPx['XdfHZ'](s[i], 0x2);\n            }\n            continue;\n        case '2':\n            s['pop']();\n            continue;\n        case '3':\n            s['sort']((a, b) => a - b);\n            continue;\n        case '4':\n            s[0x0] = s[n];\n            continue;\n        case '5':\n            var n = s[0x0];\n            continue;\n        case '6':\n            var ans = 0x0;\n            continue;\n        case '7':\n            s = s['split']('\\x0a')['map'](a => +a);\n            continue;\n        case '8':\n            for (; uxrQPx['mxRoW'](i, n); i++) {\n                ans += uxrQPx['gdRyA'](s[i], 0x2);\n            }\n            continue;\n        case '9':\n            if (s[uxrQPx['AXtel'](m, 0x1)] + s[uxrQPx['jQVOT'](m, 0x2)] > s[uxrQPx['KuFZX'](m, 0x1)] * 0x3 - s[m])\n                return uxrQPx['hSiPS'](ans, s[uxrQPx['CuFNW'](m, 0x1)]) + s[uxrQPx['CuFNW'](m, 0x2)];\n            else\n                return uxrQPx['Jtlxe'](uxrQPx['ewKdM'](ans, s[uxrQPx['CVJKG'](m, 0x1)] * 0x3), s[m]);\n            continue;\n        case '10':\n            var m = n + 0x1 >> 0x1;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["5\n6\n8\n1\n2\n3", "21"], ["6\n3\n1\n4\n1\n5\n9", "25"], ["3\n5\n5\n1", "8"]], "original": "console.log(main(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\")));\nfunction main(s){\n  s = s.split(\"\\n\").map(a=>+a);\n  var n = s[0];\n  s[0] = s[n];\n  s.pop();\n  s.sort((a,b)=>a-b);\n  var ans = 0;\n  var m = n + 1 >> 1;\n  for(var i = 0; i < m; i++){\n    ans -= s[i] * 2;\n  }\n  for(; i < n; i++){\n    ans += s[i] * 2;\n  }\n  if(n % 2 === 0)return ans - s[m] + s[m-1];\n  if(s[m-1]+s[m-2] > s[m-1]*3-s[m])return ans + s[m-1] + s[m-2];\n  else return ans + s[m-1]*3 - s[m];\n}", "language": "JavaScript"}
{"filename": "p03320_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var lXMZFJ = {\n        'HBQbt': '3|5|4|2|1|0',\n        'AojQi': function (x, y) {\n            return x + y;\n        },\n        'ejXkS': function (x, y) {\n            return x === y;\n        }\n    };\n    var lpHyec = lXMZFJ['HBQbt']['split']('|');\n    var alkUdk = 0x0;\n    while (!![]) {\n        switch (lpHyec[alkUdk++]) {\n        case '0':\n            console['log'](ans['join']('\\x0a'));\n            continue;\n        case '1':\n            for (var i = 0x0; i < k; i++) {\n                ans[i] = lXMZFJ['AojQi'](x, y);\n                if (lXMZFJ['ejXkS'](x, 0x9)) {\n                    x = 0x1;\n                    y += '9';\n                } else\n                    x++;\n            }\n            continue;\n        case '2':\n            var y = '';\n            continue;\n        case '3':\n            k = +s;\n            continue;\n        case '4':\n            var x = 0x1;\n            continue;\n        case '5':\n            var ans = [];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10", "1\n2\n3\n4\n5\n6\n7\n8\n9\n19"]], "original": "function Main(s){\n  k = +s;\n  var ans = [];\n  var x = 1;\n  var y = \"\";\n  for(var i = 0; i < k; i++){\n    ans[i] = x + y;\n    if(x === 9){\n      x = 1; y += \"9\";\n    }else x++;\n  }\n  console.log(ans.join(\"\\n\"));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03321_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var Bbmaps = {\n        'oTAPG': function (callee, param1) {\n            return callee(param1);\n        },\n        'CLeZf': function (x, y) {\n            return x < y;\n        },\n        'zPDGb': function (x, y) {\n            return x < y;\n        },\n        'tfVpA': function (x, y) {\n            return x > y;\n        },\n        'kMwOT': function (x, y) {\n            return x < y;\n        },\n        'BPGdW': function (x, y) {\n            return x === y;\n        },\n        'xhncr': function (x, y) {\n            return x + y;\n        },\n        'MlmeV': function (x, y) {\n            return x < y;\n        },\n        'kRVbq': function (x, y) {\n            return x / y;\n        },\n        'xkTBF': function (x, y) {\n            return x * y;\n        },\n        'UEVSM': function (x, y) {\n            return x - y;\n        },\n        'sDKrO': function (x, y) {\n            return x - y;\n        },\n        'MyERo': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['split']('\\x0a');\n    var n = s[0x0]['split']('\\x20')['map'](a => +a);\n    var m = n[0x1];\n    n = n[0x0];\n    var b = Bbmaps['oTAPG'](Array, n)['fill'](0x0)['map'](a => Array(n)['fill'](0x0));\n    for (var i = 0x0; Bbmaps['CLeZf'](i, m); i++) {\n        var a = s[i + 0x1]['split']('\\x20')['map'](a => a - 0x1);\n        b[a[0x0]][a[0x1]] = b[a[0x1]][a[0x0]] = 0x1;\n    }\n    var k = 0x218711a00;\n    var x;\n    for (i = 0x0; Bbmaps['zPDGb'](i, n); i++) {\n        var t = b[i]['reduce']((a, b) => a + b);\n        if (Bbmaps['tfVpA'](k, t)) {\n            k = t;\n            x = i;\n        }\n    }\n    var y = [], z = [];\n    for (i = 0x0; Bbmaps['kMwOT'](i, n); i++) {\n        if (Bbmaps['BPGdW'](i, x))\n            continue;\n        if (b[x][i])\n            y['push'](i);\n        else\n            z['push'](i);\n    }\n    for (i = 0x0; i < y['length']; i++)\n        for (var j = Bbmaps['xhncr'](i, 0x1); Bbmaps['kMwOT'](j, y['length']); j++) {\n            if (!b[y[i]][y[j]]) {\n                console['log'](-0x1);\n                return;\n            }\n        }\n    for (i = 0x0; Bbmaps['MlmeV'](i, z['length']); i++)\n        for (j = i + 0x1; Bbmaps['kMwOT'](j, z['length']); j++) {\n            if (!b[z[i]][z[j]]) {\n                console['log'](-0x1);\n                return;\n            }\n        }\n    console['log'](Bbmaps['kRVbq'](k * Bbmaps['xhncr'](k, 0x1), 0x2) + Bbmaps['xkTBF'](Bbmaps['UEVSM'](Bbmaps['sDKrO'](n, k), 0x1), Bbmaps['UEVSM'](Bbmaps['MyERo'](n, k), 0x2)) / 0x2);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 5\n1 2\n1 3\n3 4\n3 5\n4 5", "4"], ["5 1\n1 2", "-1"], ["4 3\n1 2\n1 3\n2 3", "3"], ["10 39\n7 2\n7 1\n5 6\n5 8\n9 10\n2 8\n8 7\n3 10\n10 1\n8 10\n2 3\n7 4\n3 9\n4 10\n3 4\n6 1\n6 7\n9 5\n9 7\n6 9\n9 4\n4 6\n7 5\n8 3\n2 5\n9 2\n10 7\n8 6\n8 9\n7 3\n5 3\n4 5\n6 3\n2 10\n5 10\n4 2\n6 2\n8 4\n10 6", "21"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = s[0].split(\" \").map(a=>+a);\n  var m = n[1];\n  n = n[0];\n  var b = Array(n).fill(0).map(a=>Array(n).fill(0));\n  for(var i = 0; i < m; i++){\n    var a = s[i+1].split(\" \").map(a=>a-1);\n    b[a[0]][a[1]] = b[a[1]][a[0]] = 1;\n  }\n  var k = 9e9;\n  var x;\n  for(i = 0; i < n; i++){\n    var t = b[i].reduce((a,b)=>a+b);\n    if(k > t){k = t; x = i;}\n  }\n  var y=[], z=[];\n  for(i = 0; i < n; i++){\n    if(i === x)continue;\n    if(b[x][i])y.push(i); else z.push(i);\n  }\n  for(i = 0; i < y.length; i++)\n  for(var j = i + 1; j < y.length; j++){\n    if(!b[y[i]][y[j]]){console.log(-1);return;}\n  }\n  for(i = 0; i < z.length; i++)\n  for(j = i + 1; j < z.length; j++){\n    if(!b[z[i]][z[j]]){console.log(-1);return;}\n  }\n  console.log(k*(k+1)/2+(n-k-1)*(n-k-2)/2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03391_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction myin() {\n    var IspHRV = {\n        'rfMRK': function (callee, param1) {\n            return callee(param1);\n        },\n        'Bvkiq': '/dev/stdin'\n    };\n    return IspHRV['rfMRK'](require, 'fs')['readFileSync'](IspHRV['Bvkiq'], 'utf8')['trim']();\n}\nfunction myout(t) {\n    console['log'](t);\n}\nfunction myconv(i, no) {\n    var hNEUvF = {\n        'DRBVM': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    switch (no) {\n    case 0x0:\n        return i;\n    case 0x1:\n        return hNEUvF['DRBVM'](parseInt, i);\n    case 0x2:\n        return i['split']('\\x20');\n    case 0x3:\n        return i['split']('\\x0a');\n    case 0x4:\n        return i['split']('\\x20')['map'](a => Number(a));\n    case 0x5:\n        return i['split']('\\x0a')['map'](a => Number(a));\n    case 0x6:\n        return i['split']('');\n    case 0x7:\n        return i['split']('')['map'](a => Number(a));\n    }\n}\nfunction Main(input) {\n    var RJVAHd = {\n        'XlWke': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'YoOiG': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = RJVAHd['XlWke'](myconv, input, 0x3);\n    input['shift']();\n    var output = 0x0;\n    for (var i = 0x0; i < input['length']; i++) {\n        var A = RJVAHd['YoOiG'](parseInt, input[i]['split']('\\x20')[0x0]);\n        var B = RJVAHd['YoOiG'](parseInt, input[i]['split']('\\x20')[0x1]);\n        if (A < B) {\n            output += B;\n        }\n    }\n    RJVAHd['YoOiG'](myout, output);\n}\nMain(myin());", "test_cases": [["2\n1 2\n3 2", "2"], ["3\n8 3\n0 1\n4 8", "9"], ["1\n1 1", "0"]], "original": "'use strict'\nfunction myin(){return require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim();}\nfunction myout(t){console.log(t);}//standard output\n//[no]param\n//0:何もしない  1:数値へ変換  2:半角SPで分割  3:改行で分割  4:半角SPで分割し、数値配列へ\n//5:改行で分割し、数値配列へ  6:1文字に分割  7:1文字に分割し、数値配列へ\nfunction myconv(i,no){switch(no){case 0:return i;case 1:return parseInt(i);case 2:return i.split(\" \");case 3:return i.split(\"\\n\");case 4:return i.split(\" \").map((a)=>Number(a));case 5:return i.split(\"\\n\").map((a)=>Number(a));case 6:return i.split(\"\");case 7:return i.split(\"\").map((a)=>Number(a));}}\n\nfunction Main(input) {\n  input = myconv(input,3);\n  input.shift();\n  var output = 0;\n  for(var i = 0; i < input.length; i++){\n    var A = parseInt(input[i].split(\" \")[0]);\n\tvar B = parseInt(input[i].split(\" \")[1]);\n    if(A < B){\n       output += B;\n    }\n  }\n  myout(output);\n}\n  \nMain(myin());\n", "language": "JavaScript"}
{"filename": "p03403_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const KoyAwA = {\n        'iCeTg': function (x, y) {\n            return x + y;\n        },\n        'fmQLk': function (x, y) {\n            return x - y;\n        },\n        'RQecX': function (x, y) {\n            return x < y;\n        },\n        'uUyQd': function (x, y) {\n            return x + y;\n        },\n        'fXnoS': function (x, y) {\n            return x - y;\n        },\n        'dvflJ': function (x, y) {\n            return x - y;\n        },\n        'XAMyp': function (x, y) {\n            return x + y;\n        },\n        'fzeaU': function (x, y) {\n            return x - y;\n        },\n        'PUhwQ': function (x, y) {\n            return x - y;\n        }\n    };\n    const [[N], A] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    let C = KoyAwA['iCeTg'](Math['abs'](A[0x0]), Math['abs'](A[KoyAwA['fmQLk'](N, 0x1)]));\n    for (let i = 0x1; KoyAwA['RQecX'](i, N); i++) {\n        C += Math['abs'](KoyAwA['fmQLk'](A[i], A[i - 0x1]));\n    }\n    const c = [KoyAwA['uUyQd'](KoyAwA['fmQLk'](KoyAwA['fmQLk'](C, Math['abs'](A[0x0])), Math['abs'](KoyAwA['fXnoS'](A[0x1], A[0x0]))), Math['abs'](A[0x1]))];\n    for (let i = 0x1; i < KoyAwA['fmQLk'](N, 0x1); i++) {\n        c['push'](KoyAwA['dvflJ'](KoyAwA['fmQLk'](C, Math['abs'](KoyAwA['dvflJ'](A[KoyAwA['XAMyp'](i, 0x1)], A[i]))), Math['abs'](A[i] - A[KoyAwA['fzeaU'](i, 0x1)])) + Math['abs'](KoyAwA['fXnoS'](A[KoyAwA['XAMyp'](i, 0x1)], A[KoyAwA['fmQLk'](i, 0x1)])));\n    }\n    c['push'](KoyAwA['fXnoS'](C - Math['abs'](A[KoyAwA['dvflJ'](N, 0x1)]), Math['abs'](KoyAwA['dvflJ'](A[KoyAwA['fzeaU'](N, 0x2)], A[KoyAwA['PUhwQ'](N, 0x1)]))) + Math['abs'](A[N - 0x2]));\n    return c['join']`\\n`;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n3 5 -1", "12\n8\n10"], ["5\n1 1 1 2 0", "4\n4\n4\n2\n4"], ["6\n-679 -2409 -3258 3095 -3291 -4462", "21630\n21630\n19932\n8924\n21630\n19288"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  let C = Math.abs(A[0]) + Math.abs(A[N-1]);\n  for ( let i = 1; i < N; i++ ) {\n    C += Math.abs( A[i] - A[i-1] );\n  }\n  const c = [C - Math.abs(A[0]) - Math.abs(A[1]-A[0]) + Math.abs(A[1])];\n  for ( let i = 1; i < N-1; i++ ) {\n    c.push( C - Math.abs(A[i+1]-A[i]) - Math.abs(A[i]-A[i-1]) + Math.abs(A[i+1]-A[i-1]) );\n  }\n  c.push( C - Math.abs(A[N-1]) - Math.abs(A[N-2]-A[N-1]) + Math.abs(A[N-2]));\n  return c.join`\\n`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03480_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var kDjJqo = {\n        'pLsvi': function (x, y) {\n            return x === y;\n        },\n        'zUgTg': 'string'\n    };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var s = this['_s'], y = this['_y'], r;\n        if (kDjJqo['pLsvi'](typeof s[y], kDjJqo['zUgTg']))\n            s[y] = s[y]['split']('\\x20')['reverse']();\n        r = s[y]['pop']();\n        if (!s[y]['length'])\n            this['_y']++;\n        return f ? r : +r;\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](main());\nfunction main() {\n    var WrLOJh = {\n        'lutRI': function (x, y) {\n            return x >> y;\n        },\n        'rTeSU': function (x, y) {\n            return x + y;\n        },\n        'XeWja': function (x, y) {\n            return x - y;\n        },\n        'WxzaW': function (x, y) {\n            return x & y;\n        },\n        'fakQm': function (x, y) {\n            return x - y;\n        },\n        'rspPG': function (x, y) {\n            return x >= y;\n        },\n        'dKVXg': function (x, y) {\n            return x !== y;\n        },\n        'azXxh': function (x, y) {\n            return x !== y;\n        }\n    };\n    var s = o['a'](0x1);\n    var n = s['length'];\n    var l = WrLOJh['lutRI'](WrLOJh['rTeSU'](n, 0x1), 0x1), u, v = l;\n    var f = s[WrLOJh['XeWja'](l, 0x1)];\n    if (WrLOJh['WxzaW'](n, 0x1))\n        u = l - 0x2;\n    else\n        u = WrLOJh['fakQm'](l, 0x1);\n    for (; WrLOJh['rspPG'](u, 0x0); u--, v++) {\n        if (WrLOJh['dKVXg'](s[u], f) || WrLOJh['azXxh'](s[v], f))\n            break;\n        l++;\n    }\n    return l;\n}", "test_cases": [["010", "2"], ["100000000", "8"], ["00001111", "4"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var s = o.a(1);\n  var n = s.length;\n  var l = n + 1 >> 1, u, v = l;\n  var f = s[l-1];\n  if(n & 1)u = l-2;\n  else u = l-1;\n  for(; u >= 0; u--, v++){\n    if(s[u] !== f || s[v] !== f)break;\n    l++;\n  }\n  return l;\n}", "language": "JavaScript"}
{"filename": "p03553_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    return BigInt(cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var flQWrl = {\n        'daWHl': function (x, y) {\n            return x < y;\n        },\n        'qgQqA': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; flQWrl['daWHl'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; flQWrl['qgQqA'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var paQKkl = {\n        'nCesT': function (x, y) {\n            return x + y;\n        },\n        'cYUEI': function (x, y) {\n            return x + y;\n        },\n        'ryGGe': ';})',\n        'EgkCM': function (x, y) {\n            return x + y;\n        },\n        'fyuCE': 'Array(a[',\n        'dZGKN': ']).fill().map(x=>',\n        'Nhnqh': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = paQKkl['nCesT'](paQKkl['nCesT'](paQKkl['cYUEI']('Array(a[' + --l, ']).fill().map(x=>{return\\x20'), v), paQKkl['ryGGe']);\n    while (--l)\n        r = paQKkl['cYUEI'](paQKkl['cYUEI'](paQKkl['EgkCM'](paQKkl['fyuCE'], l), paQKkl['dZGKN']) + r, ')');\n    return paQKkl['Nhnqh'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var ihgyXk = {\n        'kQFtq': function (callee, param1) {\n            return callee(param1);\n        },\n        'rLmEd': function (x, y) {\n            return x >= y;\n        },\n        'cpIZK': function (x, y) {\n            return x <= y;\n        },\n        'atZWs': function (x, y) {\n            return x < y;\n        }\n    };\n    var n = next();\n    var a = [0x0]['concat'](ihgyXk['kQFtq'](nexts, n));\n    for (var i = n; ihgyXk['rLmEd'](i, 0x1); i--) {\n        var sum = 0x0;\n        for (var j = i; ihgyXk['cpIZK'](j, n); j += i)\n            sum += a[j];\n        if (ihgyXk['atZWs'](sum, 0x0))\n            for (var j = i; j <= n; j += i)\n                a[j] = 0x0;\n    }\n    return a['reduce']((a, b) => a + b);\n}", "test_cases": [["6\n1 2 -6 4 5 3", "12"], ["6\n100 -100 -100 -100 100 -100", "200"], ["5\n-1 -2 -3 -4 -5", "0"], ["2\n-1000 100000", "99000"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var a = [0].concat(nexts(n));\n  for(var i = n; i >= 1; i--){\n    var sum = 0;\n    for(var j = i; j <= n; j+=i)sum += a[j];\n    if(sum < 0)for(var j = i; j <= n; j+=i)a[j] = 0;\n  }\n  return a.reduce((a,b)=>a+b);\n}", "language": "JavaScript"}
{"filename": "p03569_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const BraOIw = {\n        'JQxjA': function (x, y) {\n            return x - y;\n        },\n        'TxmpU': function (x, y) {\n            return x < y;\n        },\n        'xrYuC': function (x, y) {\n            return x !== y;\n        },\n        'gvcWS': function (x, y) {\n            return x === y;\n        },\n        'KDQXf': function (x, y) {\n            return x === y;\n        }\n    };\n    const s = args['trim']();\n    const N = BraOIw['JQxjA'](s['length'], 0x1);\n    let x = 0x0;\n    for (let i = 0x0, j = N; BraOIw['TxmpU'](i, j); i++, j--) {\n        while (BraOIw['xrYuC'](s[i], s[j])) {\n            if (BraOIw['gvcWS'](s[i], 'x'))\n                x++, i++;\n            else if (BraOIw['KDQXf'](s[j], 'x'))\n                x++, j--;\n            else\n                return '-1';\n        }\n    }\n    return '' + x;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["xabxa", "2"], ["ab", "-1"], ["a", "0"], ["oxxx", "3"]], "original": "console.log((args=>{\n  const s = args.trim();\n  const N = s.length-1;\n  let x = 0;\n  for ( let i = 0, j = N; i < j; i++, j-- ) {\n    while ( s[i] !== s[j] ) {\n      if ( s[i] === 'x' ) x++,i++;\n      else if ( s[j] === 'x' ) x++,j--;\n      else return '-1';\n    }\n  }\n  return `${x}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03639_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const aexgQb = {\n        'orHZb': function (x, y) {\n            return x < y;\n        },\n        'noufD': function (x, y) {\n            return x % y;\n        },\n        'JOrCy': function (x, y) {\n            return x - y;\n        },\n        'IYYyM': function (x, y) {\n            return x + y;\n        },\n        'tbvId': 'Yes'\n    };\n    const [[N], a] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => v | 0x0));\n    let odd = 0x0, p4 = 0x0;\n    for (let i = 0x0; aexgQb['orHZb'](i, N); i++) {\n        odd += a[i] & 0x1;\n        p4 += !aexgQb['noufD'](a[i], 0x4);\n    }\n    return aexgQb['JOrCy'](odd, aexgQb['IYYyM'](odd, p4) === N) <= p4 ? aexgQb['tbvId'] : 'No';\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n1 10 100", "Yes"], ["4\n1 2 3 4", "No"], ["3\n1 4 1", "Yes"], ["2\n1 1", "No"], ["6\n2 7 1 8 2 8", "Yes"]], "original": "console.log((args=>{\n  const [[N],a] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let odd = 0, p4 = 0;\n  for ( let i = 0; i < N; i++ ) {\n    odd += a[i]&1;\n    p4 += !(a[i]%4);\n  }\n  return (odd-(odd+p4===N)<=p4)?'Yes':'No';\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03799_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var GcgGle = {\n        'viGTP': '3|1|4|0|2|5',\n        'hkzpw': function (callee, param1) {\n            return callee(param1);\n        },\n        'rykzu': function (x, y) {\n            return x > y;\n        },\n        'mMWNZ': function (x, y) {\n            return x / y;\n        },\n        'zFnJi': function (x, y) {\n            return x / y;\n        },\n        'vBPqV': function (x, y) {\n            return x * y;\n        },\n        'EWwoI': function (x, y) {\n            return x / y;\n        }\n    };\n    var WNtXUw = GcgGle['viGTP']['split']('|');\n    var DlxdbZ = 0x0;\n    while (!![]) {\n        switch (WNtXUw[DlxdbZ++]) {\n        case '0':\n            var result = 0x0;\n            continue;\n        case '1':\n            var sNum = GcgGle['hkzpw'](Number, inputArr[0x0]);\n            continue;\n        case '2':\n            if (GcgGle['rykzu'](sNum, GcgGle['mMWNZ'](cNum, 0x2))) {\n                result += Math['floor'](GcgGle['zFnJi'](cNum, 0x2));\n            } else {\n                result += sNum;\n                cNum -= GcgGle['vBPqV'](result, 0x2);\n                result += Math['floor'](GcgGle['EWwoI'](cNum, 0x4));\n            }\n            continue;\n        case '3':\n            var inputArr = input['split']('\\x20');\n            continue;\n        case '4':\n            var cNum = GcgGle['hkzpw'](Number, inputArr[0x1]);\n            continue;\n        case '5':\n            console['log'](result);\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1 6", "2"], ["12345 678901", "175897"]], "original": "function Main (input) {\n\tvar inputArr = input.split(' ');\n\tvar sNum = Number(inputArr[0]);\n\tvar cNum = Number(inputArr[1]);\n\tvar result = 0;\n\t// Sを使う組み合わせ\n\tif (sNum > (cNum/2)) {\n\t\tresult += Math.floor(cNum/2);\n\t} else {\n\t\tresult += sNum;\n\t\tcNum -= result * 2;\n\t\tresult += Math.floor(cNum/4)\n\t}\n\tconsole.log(result);\n}\n// Main(\"12345 678901\");\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03828_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst pf = (n, res) => {\n    const AyoBgF = {\n        'FPxal': function (x, y) {\n            return x <= y;\n        },\n        'vuRER': function (x, y) {\n            return x % y;\n        },\n        'GtXeu': function (x, y) {\n            return x in y;\n        }\n    };\n    for (let i = 0x2; AyoBgF['FPxal'](i, n); i++) {\n        while (AyoBgF['vuRER'](n, i) === 0x0) {\n            n /= i;\n            if (!AyoBgF['GtXeu'](i, res))\n                res[i] = 0x0;\n            res[i]++;\n        }\n    }\n    return res;\n};\nfunction main(input) {\n    const Pkbxwf = {\n        'PVSNA': function (x, y) {\n            return x % y;\n        },\n        'ApSau': function (x, y) {\n            return x + y;\n        },\n        'ptlIf': function (x, y) {\n            return x <= y;\n        },\n        'bwXRP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    input = Number(input['trim']());\n    const mod = Pkbxwf['ApSau'](0x3b9aca00, 0x7);\n    let obj = {};\n    let ans = 0x1;\n    for (let i = 0x1; Pkbxwf['ptlIf'](i, input); i++) {\n        obj = Pkbxwf['bwXRP'](pf, i, obj);\n    }\n    Object['keys'](obj)['forEach'](n => {\n        ans = Pkbxwf['PVSNA'](ans * Pkbxwf['ApSau'](obj[n], 0x1), mod);\n    });\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "4"], ["6", "30"], ["1000", "972926972"]], "original": "'use strict'\n\nconst pf = (n, res) => {\n  for (let i = 2; i <= n; i++) {\n    while(n % i === 0) {\n      n /= i;\n      if (!(i in res)) res[i] = 0\n      res[i]++\n    }\n  }\n  return res\n}\n\nfunction main(input) {\n  input = Number(input.trim())\n  const mod = 1e9 + 7\n  let obj = {}\n  let ans = 1\n\n  for (let i = 1; i <= input; i++) {\n    obj = pf(i, obj)\n  }\n\n  Object.keys(obj).forEach(n => {\n    ans = ans * (obj[n] + 1) % mod\n  })\n  console.log(ans)\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03830_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var WCQkKp = {\n        'qysmC': function (callee, param1) {\n            return callee(param1);\n        },\n        'Jouwb': function (x, y) {\n            return x <= y;\n        },\n        'tDhXA': function (x, y) {\n            return x * y;\n        },\n        'OdDTp': function (x, y) {\n            return x == y;\n        },\n        'iQEPb': function (x, y) {\n            return x % y;\n        },\n        'HddJv': function (x, y) {\n            return x + y;\n        },\n        'TEhFZ': function (x, y) {\n            return x != y;\n        },\n        'bVXbb': function (x, y) {\n            return x * y;\n        }\n    };\n    var n = WCQkKp['qysmC'](parseInt, input);\n    var map = {};\n    for (var i = 0x2; WCQkKp['Jouwb'](i, n); i++) {\n        var t = i;\n        for (var j = 0x2; WCQkKp['tDhXA'](j, j) <= t; j++) {\n            if (WCQkKp['OdDTp'](WCQkKp['iQEPb'](t, j), 0x0)) {\n                var cnt = 0x0;\n                while (WCQkKp['OdDTp'](WCQkKp['iQEPb'](t, j), 0x0)) {\n                    cnt++;\n                    t /= j;\n                }\n                if (map[j]) {\n                    map[j] = WCQkKp['HddJv'](map[j], cnt);\n                } else {\n                    map[j] = cnt;\n                }\n            }\n        }\n        if (WCQkKp['TEhFZ'](t, 0x1)) {\n            if (map[t]) {\n                map[t]++;\n            } else {\n                map[t] = 0x1;\n            }\n        }\n    }\n    var ans = 0x1;\n    var mod = 0x3b9aca07;\n    for (var x in map) {\n        ans = WCQkKp['bVXbb'](ans, map[x] + 0x1) % mod;\n    }\n    console['log'](ans);\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3", "4"], ["6", "30"], ["1000", "972926972"]], "original": "function main(input) {\n    var n = parseInt(input);\n\n    var map = {};\n    for (var i = 2; i <= n; i++) {\n        var t = i;\n        for (var j = 2; j * j <= t; j++) {\n            if (t % j == 0) {\n                var cnt = 0;\n                while (t % j == 0) {\n                    cnt++;\n                    t /= j;\n                }\n                if (map[j]) {\n                    map[j] = map[j] + cnt;\n                } else {\n                    map[j] = cnt;\n                }\n            }\n        }\n        if (t != 1) {\n            if (map[t]) {\n                map[t]++;\n            } else {\n                map[t] = 1;\n            }\n        }\n    }\n\n    var ans = 1;\n    var mod = 1000000007;\n    for (var x in map) {\n        ans = (ans * (map[x] + 1)) % mod;\n    }\n\n    console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03948_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var SfBjDJ = {\n        'ZMeWx': function (x, y) {\n            return x < y;\n        },\n        'QzLuL': function (x, y) {\n            return x - y;\n        },\n        'chDhg': function (x, y) {\n            return x - y;\n        },\n        'yTuQE': function (x, y) {\n            return x == y;\n        },\n        'BKKTO': function (x, y) {\n            return x - y;\n        },\n        'sXsrX': function (callee, param1) {\n            return callee(param1);\n        },\n        'ChWeT': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'JCGPy': function (x, y) {\n            return x / y;\n        },\n        'ntOuj': function (x, y) {\n            return x > y;\n        }\n    };\n    var LGeevw = '9|7|5|6|14|1|12|11|3|4|10|13|2|0|8'['split']('|');\n    var AuCnut = 0x0;\n    while (!![]) {\n        switch (LGeevw[AuCnut++]) {\n        case '0':\n            for (var i = 0x0; SfBjDJ['ZMeWx'](i, n); ++i) {\n                var val = a[i];\n                if (SfBjDJ['QzLuL'](val, min) > rieki) {\n                    rieki = SfBjDJ['chDhg'](val, min);\n                    rieki_place_count = 0x1;\n                } else if (SfBjDJ['yTuQE'](SfBjDJ['BKKTO'](val, min), rieki)) {\n                    rieki_place_count++;\n                }\n                min = val < min ? val : min;\n            }\n            continue;\n        case '1':\n            var l0 = SfBjDJ['sXsrX'](space_numinput, lines[0x0]);\n            continue;\n        case '2':\n            var max = a[0x0];\n            continue;\n        case '3':\n            var a = space_numinput(lines[0x1]);\n            continue;\n        case '4':\n            var rieki = 0x0;\n            continue;\n        case '5':\n            var space_numinput = function (line) {\n                var arr = line['replace'](/(^\\s+)|(\\s+$)/g, '')['split']('\\x20');\n                for (var i = 0x0; sjvcMp['wjKjs'](i, arr['length']); ++i) {\n                    arr[i] = +arr[i];\n                }\n                return arr;\n            };\n            continue;\n        case '6':\n            var getmin = function (a, b) {\n                return sjvcMp['kjJCy'](a, b) ? b : a;\n            };\n            continue;\n        case '7':\n            var space_strinput = function (line) {\n                var arr = line['replace'](/(^\\s+)|(\\s+$)/g, '')['split']('\\x20');\n                for (var i = 0x0; sjvcMp['HlvLJ'](i, arr['length']); ++i) {\n                    arr[i] = arr[i];\n                }\n                return arr;\n            };\n            continue;\n        case '8':\n            console['log'](SfBjDJ['ChWeT'](getmin, rieki_place_count, Math['floor'](SfBjDJ['JCGPy'](t, 0x2))));\n            continue;\n        case '9':\n            var sjvcMp = {\n                'HlvLJ': function (x, y) {\n                    return x < y;\n                },\n                'wjKjs': function (x, y) {\n                    return SfBjDJ['ZMeWx'](x, y);\n                },\n                'kjJCy': function (x, y) {\n                    return SfBjDJ['ntOuj'](x, y);\n                }\n            };\n            continue;\n        case '10':\n            var rieki_place_count = 0x0;\n            continue;\n        case '11':\n            var t = l0[0x1];\n            continue;\n        case '12':\n            var n = l0[0x0];\n            continue;\n        case '13':\n            var min = a[0x0];\n            continue;\n        case '14':\n            lines = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 2\n100 50 200", "1"], ["5 8\n50 30 40 10 20", "2"], ["10 100\n7 10 4 5 9 3 6 8 2 1", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\nvar space_strinput = function(line){\n\tvar arr= line.replace(/(^\\s+)|(\\s+$)/g, \"\").split(\" \");\n\tfor(var i=0;i<arr.length;++i){\n\t\tarr[i]=arr[i];\n\t}\n\treturn arr;\n};\nvar space_numinput = function(line){\n\tvar arr= line.replace(/(^\\s+)|(\\s+$)/g, \"\").split(\" \");\n\tfor(var i=0;i<arr.length;++i){\n\t\tarr[i]=+arr[i];\n\t}\n\treturn arr;\n};\n\nvar getmin = function(a,b){return a>b?b:a;};\n\tlines = input.split(\"\\n\"); // 1行目がinput[0], 2行目がinput[1], …に入る\n\tvar l0 = space_numinput(lines[0]);\n\tvar n = l0[0];\n\tvar t = l0[1];\n\tvar a = space_numinput(lines[1]);\n\tvar rieki = 0;\n\tvar rieki_place_count = 0;\n\tvar min = a[0];\n\tvar max = a[0];\n\tfor(var i=0;i<n;++i){\n\t\tvar val = a[i];\n\t\tif(val-min>rieki){\n\t\t\trieki=val-min;\n\t\t\trieki_place_count = 1;\n\t\t}else if(val-min==rieki){\n\t\t\trieki_place_count++;\n\t\t}\n\t\t\n\t\tmin = val < min? val:min;\n\t}\n\tconsole.log(getmin(rieki_place_count,Math.floor(t/2)));\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03958_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst main = input => {\n    const ugNWnL = {\n        'QDtwo': function (callee, param1) {\n            return callee(param1);\n        },\n        'hoWUc': function (x, y) {\n            return x > y;\n        },\n        'dTKVH': function (x, y) {\n            return x > y;\n        },\n        'bSwNL': function (x, y) {\n            return x - y;\n        },\n        'EDGuN': function (x, y) {\n            return x - y;\n        },\n        'iPhtm': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    const K = parseInt(input[0x0]['split']('\\x20')[0x0]);\n    const T = ugNWnL['QDtwo'](parseInt, input[0x0]['split']('\\x20')[0x1]);\n    let a = input[0x1]['split']('\\x20')['map'](el => {\n        return ugNWnL['QDtwo'](parseInt, el);\n    });\n    let max = a['reduce'](function (previous, current) {\n        return ugNWnL['hoWUc'](previous, current) ? previous : current;\n    });\n    if (ugNWnL['dTKVH'](ugNWnL['bSwNL'](ugNWnL['bSwNL'](max, 0x1), K - max), 0x0)) {\n        console['log'](ugNWnL['bSwNL'](ugNWnL['EDGuN'](max, 0x1), ugNWnL['iPhtm'](K, max)));\n    } else {\n        console['log'](0x0);\n    }\n};\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 3\n3 2 2", "0"], ["6 3\n1 4 1", "1"], ["100 1\n100", "99"]], "original": "\"use strict\";\n\nconst main = input => {\n  input = input.trim().split(\"\\n\");\n  const K = parseInt(input[0].split(\" \")[0]);\n  const T = parseInt(input[0].split(\" \")[1]);\n  let a = input[1].split(\" \").map((el)=>{\n    return parseInt(el);\n  });\n  let max = a.reduce( function (previous, current) {\n  \treturn previous > current ? previous:current;\n  });\n  if(max-1-(K-max) > 0){\n    console.log(max-1-(K-max));\n  }else{\n    console.log(0);\n  }\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03965_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    const n = s['length'];\n    const p = s['match'](/p/g)['length'];\n    console['log'](Math['floor'](n / 0x2 - p));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["gpg", "0"], ["ggppgggpgg", "2"]], "original": "function Main(s){\n  const n = s.length;\n  const p = s.match(/p/g).length;\n  console.log(Math.floor(n / 2 - p));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
{"filename": "p04019_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const bbHqUj = {\n        'Qqixh': function (x, y) {\n            return x && y;\n        },\n        'mKMJE': function (x, y) {\n            return x && y;\n        },\n        'vDxmV': function (x, y) {\n            return x && y;\n        },\n        'KjWpF': 'Yes'\n    };\n    input = input['split']('');\n    let N = input['includes']('N');\n    let S = input['includes']('S');\n    let E = input['includes']('E');\n    let W = input['includes']('W');\n    let NS = N && S || bbHqUj['Qqixh'](!N, !S);\n    let EW = bbHqUj['mKMJE'](E, W) || bbHqUj['vDxmV'](!E, !W);\n    if (NS && EW) {\n        console['log'](bbHqUj['KjWpF']);\n    } else {\n        console['log']('No');\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["SENW", "Yes"], ["NSNNSNSN", "Yes"], ["NNEW", "No"], ["W", "No"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\");\n\tlet N = input.includes(\"N\");\n  \tlet S = input.includes(\"S\");\n  \tlet E = input.includes(\"E\");\n  \tlet W = input.includes(\"W\");\n\t\n  \tlet NS = N&&S || !N&&!S;\n  \tlet EW = E&&W || !E&&!W;\n\t  \n\tif(NS&&EW){\n      console.log(\"Yes\");\n    }else{\n      console.log(\"No\");\n    }\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00035_1", "type": "JavaScript", "obfuscated": "function heron(a, b, c) {\n    var rxKdDu = {\n        'WTIkY': function (x, y) {\n            return x / y;\n        },\n        'bNoxu': function (x, y) {\n            return x + y;\n        },\n        'JliDq': function (x, y) {\n            return x * y;\n        },\n        'jKhXL': function (x, y) {\n            return x * y;\n        },\n        'WElnl': function (x, y) {\n            return x - y;\n        },\n        'XVPiy': function (x, y) {\n            return x - y;\n        }\n    };\n    var s = rxKdDu['WTIkY'](rxKdDu['bNoxu'](a, b) + c, 0x2);\n    var S = Math['sqrt'](rxKdDu['JliDq'](rxKdDu['jKhXL'](s, s - a), rxKdDu['WElnl'](s, b)) * rxKdDu['XVPiy'](s, c));\n    return S;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split'](',')['map'](Number);\n    (function (x1, y1, x2, y2, x3, y3, x4, y4) {\n        var GdUuwP = {\n            'xyrEP': function (x, y) {\n                return x + y;\n            },\n            'UrTgs': function (x, y) {\n                return x - y;\n            },\n            'bzIlG': function (x, y) {\n                return x + y;\n            },\n            'kCoAs': function (x, y) {\n                return x - y;\n            },\n            'TnXNT': function (callee, param1, param2, param3) {\n                return callee(param1, param2, param3);\n            },\n            'cTSEx': function (x, y) {\n                return x + y;\n            },\n            'XlrfY': function (x, y) {\n                return x - y;\n            },\n            'xuwHJ': function (x, y) {\n                return x - y;\n            },\n            'TSwhq': function (callee, param1, param2, param3) {\n                return callee(param1, param2, param3);\n            },\n            'zNEpE': function (x, y) {\n                return x + y;\n            },\n            'xkCyN': function (x, y) {\n                return x - y;\n            },\n            'FHtQf': function (x, y) {\n                return x - y;\n            },\n            'TKdQG': function (x, y) {\n                return x - y;\n            },\n            'TZyat': 'YES'\n        };\n        var hHIVyy = '1|4|0|6|8|3|5|2|9|7'['split']('|');\n        var pRYEKO = 0x0;\n        while (!![]) {\n            switch (hHIVyy[pRYEKO++]) {\n            case '0':\n                var d34 = Math['sqrt'](GdUuwP['xyrEP'](Math['pow'](GdUuwP['UrTgs'](x3, x4), 0x2), Math['pow'](y3 - y4, 0x2)));\n                continue;\n            case '1':\n                var d12 = Math['sqrt'](GdUuwP['bzIlG'](Math['pow'](GdUuwP['kCoAs'](x1, x2), 0x2), Math['pow'](GdUuwP['kCoAs'](y1, y2), 0x2)));\n                continue;\n            case '2':\n                var B = GdUuwP['bzIlG'](heron(d12, d23, d13), GdUuwP['TnXNT'](heron, d13, d34, d41));\n                continue;\n            case '3':\n                var d24 = Math['sqrt'](GdUuwP['cTSEx'](Math['pow'](GdUuwP['kCoAs'](x2, x4), 0x2), Math['pow'](GdUuwP['kCoAs'](y2, y4), 0x2)));\n                continue;\n            case '4':\n                var d23 = Math['sqrt'](GdUuwP['cTSEx'](Math['pow'](GdUuwP['XlrfY'](x2, x3), 0x2), Math['pow'](GdUuwP['xuwHJ'](y2, y3), 0x2)));\n                continue;\n            case '5':\n                var A = GdUuwP['cTSEx'](GdUuwP['TSwhq'](heron, d12, d24, d41), GdUuwP['TSwhq'](heron, d23, d34, d24));\n                continue;\n            case '6':\n                var d41 = Math['sqrt'](GdUuwP['zNEpE'](Math['pow'](GdUuwP['UrTgs'](x4, x1), 0x2), Math['pow'](GdUuwP['xuwHJ'](y4, y1), 0x2)));\n                continue;\n            case '7':\n                console['log'](ans);\n                continue;\n            case '8':\n                var d13 = Math['sqrt'](GdUuwP['zNEpE'](Math['pow'](GdUuwP['xkCyN'](x1, x3), 0x2), Math['pow'](GdUuwP['FHtQf'](y1, y3), 0x2)));\n                continue;\n            case '9':\n                var ans = Math['abs'](GdUuwP['TKdQG'](A, B)) < 0.00001 ? GdUuwP['TZyat'] : 'NO';\n                continue;\n            }\n            break;\n        }\n    }['apply'](null, arr));\n}", "test_cases": [["0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0\n0.0,0.0,3.0,0.0,1.0,1.0,1.0,3.0", "YES\nNO"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\",\").map(Number);\n   (function(x1,y1,x2,y2,x3,y3,x4,y4){\n      var d12=Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));\n      var d23=Math.sqrt(Math.pow(x2-x3,2)+Math.pow(y2-y3,2));\n      var d34=Math.sqrt(Math.pow(x3-x4,2)+Math.pow(y3-y4,2));\n      var d41=Math.sqrt(Math.pow(x4-x1,2)+Math.pow(y4-y1,2));\n      var d13=Math.sqrt(Math.pow(x1-x3,2)+Math.pow(y1-y3,2));\n      var d24=Math.sqrt(Math.pow(x2-x4,2)+Math.pow(y2-y4,2));\n      var A=heron(d12,d24,d41)+heron(d23,d34,d24);\n      var B=heron(d12,d23,d13)+heron(d13,d34,d41);\n      var ans=(Math.abs(A-B)<1.0e-5)?\"YES\":\"NO\";\n      console.log(ans);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00053_1", "type": "JavaScript", "obfuscated": "var m = [\n    -0x1,\n    0x2,\n    0x3,\n    0x5,\n    0x7,\n    0xb,\n    0xd\n];\nfunction p(n) {\n    var jbQeQM = {\n        'Nszso': function (x, y) {\n            return x - y;\n        },\n        'LyBaK': function (x, y) {\n            return x + y;\n        },\n        'rNsjv': function (callee, param1) {\n            return callee(param1);\n        },\n        'dqalC': function (x, y) {\n            return x == y;\n        }\n    };\n    if (m[n])\n        return m[n];\n    var found = jbQeQM['Nszso'](m['length'], 0x1);\n    var foundP = m[found];\n    for (var i = jbQeQM['LyBaK'](foundP, 0x2);; i += 0x2) {\n        if (jbQeQM['rNsjv'](isPrime, i)) {\n            found++;\n            m[found] = i;\n            if (jbQeQM['dqalC'](found, n))\n                return i;\n        }\n    }\n}\nfunction isPrime(num) {\n    var WZJmjT = {\n        'dAkbr': '4|1|2|3|0',\n        'vcxey': function (x, y) {\n            return x <= y;\n        },\n        'qxHoN': function (x, y) {\n            return x - y;\n        },\n        'IKGxP': function (x, y) {\n            return x * y;\n        },\n        'PkjkU': function (x, y) {\n            return x == y;\n        },\n        'WFGLY': function (x, y) {\n            return x + y;\n        }\n    };\n    var EUqepA = WZJmjT['dAkbr']['split']('|');\n    var SbCpXA = 0x0;\n    while (!![]) {\n        switch (EUqepA[SbCpXA++]) {\n        case '0':\n            return !![];\n        case '1':\n            var limit = Math['round'](Math['sqrt'](num));\n            continue;\n        case '2':\n            var i = 0x1;\n            continue;\n        case '3':\n            while (WZJmjT['vcxey'](WZJmjT['qxHoN'](WZJmjT['IKGxP'](i, 0x6), 0x1), limit)) {\n                if (WZJmjT['PkjkU'](num % WZJmjT['qxHoN'](i * 0x6, 0x1), 0x0) || WZJmjT['PkjkU'](num % WZJmjT['WFGLY'](i * 0x6, 0x1), 0x0))\n                    return ![];\n                i++;\n            }\n            continue;\n        case '4':\n            if (WZJmjT['PkjkU'](num % 0x3, 0x0))\n                return ![];\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var num = +line;\n    if (num == 0x0)\n        break;\n    var s = 0x0;\n    for (var i = num; i > 0x0; i--) {\n        s += p(i);\n    }\n    console['log'](s);\n}", "test_cases": [["2\n9\n0", "5\n100"]], "original": "var m = [-1, 2, 3, 5, 7, 11, 13];\nfunction p(n) {\n    if (m[n])\n        return m[n];\n\n    var found = m.length - 1;\n    var foundP = m[found];\n    for (var i = foundP + 2;; i += 2) {\n        if (isPrime(i)) {\n            found++;\n            m[found] = i;\n            if (found == n)\n                return i;\n        }\n    }\n}\n\nfunction isPrime(num) {\n    if (num % 3 == 0) return false;\n    var limit = Math.round(Math.sqrt(num));\n    var i = 1;\n    while(i * 6 - 1 <= limit) {\n        if (num % (i * 6 - 1) == 0 || num % (i * 6 + 1) == 0) return false;\n        i++;\n    }\n    return true;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var num = +line;\n    if (num == 0)\n        break;\n\n    var s = 0;\n    for (var i = num; i > 0; i--) {\n        s += p(i);\n    }\n    console.log(s);\n}", "language": "JavaScript"}
{"filename": "p00059_1", "type": "JavaScript", "obfuscated": "for (j = 0x0, i = require('fs')['readFileSync']('/dev/stdin', 'utf8')['split'](/\\s/); a = +i[j++], b = +i[j++], c = +i[j++], d = +i[j++], e = +i[j++], f = +i[j++], g = +i[j++], h = +i[j++];)\n    console['log'](+a <= g & e <= c & b <= h & f <= d ? 'YES' : 'NO');", "test_cases": [["0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0\n0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0\n0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0", "YES\nYES\nNO"]], "original": "for(j=0,i=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\").split(/\\s/);a=+i[j++],b=+i[j++],c=+i[j++],d=+i[j++],e=+i[j++],f=+i[j++],g=+i[j++],h=+i[j++];)console.log(+a<=g&e<=c&b<=h&f<=d?'YES':'NO')", "language": "JavaScript"}
{"filename": "p00062_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var nums = line['split']('')['map'](function (n) {\n        return +n;\n    });\n    var n = nums['length'];\n    while (n > 0x1) {\n        var a = [];\n        for (var i = 0x0; i < n - 0x1; i++) {\n            a['push']((nums[i] + nums[i + 0x1]) % 0xa);\n        }\n        n--;\n        nums = a;\n    }\n    console['log'](nums[0x0]);\n}", "test_cases": [["4823108376\n1234567890\n0123456789", "5\n6\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.split('\\n');\n \nvar line;\nwhile (line = lines.shift()) {\n    var nums = line.split('').map(function(n){return +n;});\n    var n = nums.length;\n    while (n > 1) {\n        var a = [];\n        for (var i = 0; i < n - 1; i++) {\n            a.push((nums[i] + nums[i+1]) % 10);\n        }\n        n--;\n        nums = a;\n    }\n    console.log(nums[0]);\n}", "language": "JavaScript"}
{"filename": "p00063_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar cnt = 0x0;\nArr['forEach'](function (v) {\n    var fYoQJT = {\n        'HqHmZ': function (x, y) {\n            return x == y;\n        }\n    };\n    var str = v['split']('')['reverse']()['join']('');\n    if (fYoQJT['HqHmZ'](str, v))\n        cnt++;\n});\nconsole['log'](cnt);", "test_cases": [["abcba\nsx\nabcddcba\nrttrd", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar cnt=0;\nArr.forEach(function(v){\nvar str=v.split(\"\").reverse().join(\"\");\nif(str==v)cnt++;\n});\nconsole.log(cnt);", "language": "JavaScript"}
{"filename": "p00089_1", "type": "JavaScript", "obfuscated": "function bomb(y, x, sum) {\n    var EYvbcw = {\n        'Folcs': function (x, y) {\n            return x > y;\n        },\n        'KPpfq': function (x, y) {\n            return x / y;\n        },\n        'WzSig': function (x, y) {\n            return x - y;\n        },\n        'kUCcn': function (x, y) {\n            return x < y;\n        },\n        'sPgmQ': function (x, y) {\n            return x + y;\n        },\n        'hTDJW': function (x, y) {\n            return x + y;\n        },\n        'YvnTd': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'cUYGp': function (x, y) {\n            return x + y;\n        },\n        'QBbeB': function (x, y) {\n            return x < y;\n        },\n        'rCPoH': function (x, y) {\n            return x + y;\n        },\n        'pvLNs': function (x, y) {\n            return x + y;\n        },\n        'EzCcE': function (x, y) {\n            return x + y;\n        },\n        'zGfPa': function (x, y) {\n            return x <= y;\n        },\n        'jgJzA': function (x, y) {\n            return x >= y;\n        },\n        'NSfYF': function (x, y) {\n            return x - y;\n        },\n        'yjfHG': function (x, y) {\n            return x < y;\n        },\n        'YghxS': function (x, y) {\n            return x + y;\n        },\n        'uuQKY': function (x, y) {\n            return x + y;\n        },\n        'SOMav': function (x, y) {\n            return x < y;\n        },\n        'lQjeH': function (x, y) {\n            return x + y;\n        }\n    };\n    YX[y][x] = sum;\n    if (y == yx['length'] - 0x1) {\n        max = Math['max'](max, sum);\n    } else if (EYvbcw['Folcs'](EYvbcw['KPpfq'](EYvbcw['WzSig'](yx['length'], 0x1), 0x2), y)) {\n        if (EYvbcw['kUCcn'](YX[y + 0x1][x], EYvbcw['sPgmQ'](sum, yx[EYvbcw['hTDJW'](y, 0x1)][x])))\n            EYvbcw['YvnTd'](bomb, y + 0x1, x, EYvbcw['hTDJW'](sum, yx[EYvbcw['cUYGp'](y, 0x1)][x]));\n        if (EYvbcw['QBbeB'](YX[EYvbcw['cUYGp'](y, 0x1)][EYvbcw['rCPoH'](x, 0x1)], sum + yx[EYvbcw['rCPoH'](y, 0x1)][EYvbcw['cUYGp'](x, 0x1)]))\n            bomb(y + 0x1, EYvbcw['cUYGp'](x, 0x1), EYvbcw['pvLNs'](sum, yx[EYvbcw['EzCcE'](y, 0x1)][x + 0x1]));\n    } else if (EYvbcw['zGfPa'](EYvbcw['KPpfq'](yx['length'] - 0x1, 0x2), y)) {\n        if (EYvbcw['jgJzA'](EYvbcw['NSfYF'](x, 0x1), 0x0)) {\n            if (EYvbcw['yjfHG'](YX[EYvbcw['YghxS'](y, 0x1)][x - 0x1], EYvbcw['EzCcE'](sum, yx[EYvbcw['sPgmQ'](y, 0x1)][EYvbcw['WzSig'](x, 0x1)])))\n                EYvbcw['YvnTd'](bomb, EYvbcw['hTDJW'](y, 0x1), EYvbcw['WzSig'](x, 0x1), EYvbcw['uuQKY'](sum, yx[y + 0x1][EYvbcw['NSfYF'](x, 0x1)]));\n        }\n        if (EYvbcw['yjfHG'](x, EYvbcw['NSfYF'](yx[y]['length'], 0x1))) {\n            if (EYvbcw['SOMav'](YX[EYvbcw['lQjeH'](y, 0x1)][x], EYvbcw['rCPoH'](sum, yx[EYvbcw['uuQKY'](y, 0x1)][x])))\n                bomb(y + 0x1, x, EYvbcw['lQjeH'](sum, yx[EYvbcw['uuQKY'](y, 0x1)][x]));\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar yx = [];\nvar YX = [];\nArr['forEach'](function (v) {\n    var x = v['split'](',')['map'](Number);\n    var X = x['map'](function (v) {\n        return 0x0;\n    });\n    yx['push'](x);\n    YX['push'](X);\n});\nvar max = 0x0;\nbomb(0x0, 0x0, yx[0x0][0x0]);\nconsole['log'](max);", "test_cases": [["7\n3,8\n8,1,0\n2,7,4,4\n4,5,2,6,5\n2,7,4,4\n8,1,0\n3,8\n7", "55"]], "original": "function bomb(y,x,sum){\n   YX[y][x]=sum;\n   if(y==yx.length-1){\n      max=Math.max(max,sum);\n   }else if((yx.length-1)/2>y){\n      if(YX[y+1][x]<sum+yx[y+1][x])bomb(y+1,x,sum+yx[y+1][x]);\n      if(YX[y+1][x+1]<sum+yx[y+1][x+1])bomb(y+1,x+1,sum+yx[y+1][x+1]);      \n   }else if((yx.length-1)/2<=y){\n      if(x-1>=0){\n         if(YX[y+1][x-1]<sum+yx[y+1][x-1])bomb(y+1,x-1,sum+yx[y+1][x-1]);\n      }\n      if(x<yx[y].length-1){\n         if(YX[y+1][x]<sum+yx[y+1][x])bomb(y+1,x,sum+yx[y+1][x]);\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar yx=[];\nvar YX=[];\nArr.forEach(function(v){\n   var x=v.split(\",\").map(Number);\n   var X=x.map(function(v){return 0;});\n   yx.push(x);\n   YX.push(X);\n});\nvar max=0;\nbomb(0,0,yx[0][0]);\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p00095_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var LCQcLS = {\n        'YLLut': '0|2|4|3|1|5',\n        'zxfLy': function (callee, param1) {\n            return callee(param1);\n        },\n        'AXYlN': function (x, y) {\n            return x > y;\n        },\n        'epJKV': function (x, y) {\n            return x === y;\n        },\n        'koIxQ': function (x, y) {\n            return x < y;\n        },\n        'Vkbml': function (x, y) {\n            return x + y;\n        }\n    };\n    var WEePsY = LCQcLS['YLLut']['split']('|');\n    var zStnOG = 0x0;\n    while (!![]) {\n        switch (WEePsY[zStnOG++]) {\n        case '0':\n            var inputs = input['replace'](/\\r/g, '')['split']('\\x0a'), data = [], n, line, max_index, a, b;\n            continue;\n        case '1':\n            while (n--) {\n                line = inputs['shift']()['split']('\\x20');\n                a = parseInt(line[0x0]);\n                b = LCQcLS['zxfLy'](parseInt, line[0x1]);\n                if (LCQcLS['AXYlN'](b, max_value) || LCQcLS['epJKV'](b, max_value) && LCQcLS['koIxQ'](a, max_index)) {\n                    max_index = a;\n                    max_value = b;\n                }\n            }\n            continue;\n        case '2':\n            n = LCQcLS['zxfLy'](parseInt, inputs['shift']());\n            continue;\n        case '3':\n            max_value = -0x1;\n            continue;\n        case '4':\n            max_index = 0x65;\n            continue;\n        case '5':\n            console['log'](LCQcLS['Vkbml'](max_index, '\\x20') + max_value);\n            continue;\n        }\n        break;\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["6\n1 14\n2 25\n3 42\n4 11\n5 40\n6 37", "3 42"]], "original": "(function (input) {\n    var inputs = input.replace(/\\r/g, '').split(\"\\n\"),\n        data = [],\n        n, line, max_index, a, b;\n\n    n = parseInt(inputs.shift());\n\n    max_index = 101;\n    max_value = -1;\n    while ( n-- ) {\n        line = inputs.shift().split(' ');\n        a = parseInt(line[0]);\n        b = parseInt(line[1]);\n\n        if ( b > max_value || b === max_value && a < max_index ) {\n            max_index = a;\n            max_value = b;\n        }\n    }\n    console.log(max_index+\" \"+max_value);\n\n})(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00096_1", "type": "JavaScript", "obfuscated": "var ab = [];\nfor (var i = 0x0; i <= 0x3e8; i++) {\n    for (var j = 0x0; j <= 0x3e8; j++) {\n        ab['push'](i + j);\n    }\n}\nab['sort'](function (a, b) {\n    return a - b;\n});\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (Arr['length'] == 0x0)\n        break;\n    var n = Arr['shift']() - 0x0;\n    var cnt = 0x0;\n    var k = ab['length'] - 0x1;\n    for (var i = 0x0; i < ab['length']; i++) {\n        while (ab[i] + ab[k] > n)\n            k--;\n        var memo = k;\n        while (ab[i] + ab[memo] == n) {\n            cnt++;\n            memo--;\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["2\n3\n35", "10\n20\n8436"]], "original": "var ab=[];\nfor(var i=0;i<=1000;i++){\n   for(var j=0;j<=1000;j++){\n      ab.push(i+j);\n   }\n}\nab.sort(function(a,b){return a-b;});\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var n=Arr.shift()-0;\n   var cnt=0;\n   var k=ab.length-1;\n   for(var i=0;i<ab.length;i++){\n      while(ab[i]+ab[k]>n)k--;\n      var memo=k;\n      while(ab[i]+ab[memo]==n){\n         cnt++;\n         memo--;\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00099_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar nq = arr['shift']()['split']('\\x20')['map'](Number);\nvar player = [];\nvar maxValue = 0x0;\nvar maxId = 0x0;\nfor (var i = 0x0; i < nq[0x0]; i++)\n    player[i] = 0x0;\narr['forEach'](function (V) {\n    var aQxhWT = {\n        'yWHoR': function (x, y) {\n            return x == y;\n        },\n        'nhmFG': function (x, y) {\n            return x >= y;\n        },\n        'paGKN': function (x, y) {\n            return x > y;\n        },\n        'Gvlmr': function (x, y) {\n            return x < y;\n        },\n        'BNjCy': function (x, y) {\n            return x < y;\n        },\n        'SUASH': function (x, y) {\n            return x + y;\n        }\n    };\n    var Zqbzqb = '3|4|5|6|2|0|1'['split']('|');\n    var Hxpvoh = 0x0;\n    while (!![]) {\n        switch (Zqbzqb[Hxpvoh++]) {\n        case '0':\n            if (aQxhWT['yWHoR'](a, maxId) && aQxhWT['nhmFG'](v, 0x0))\n                maxValue += v;\n            else if (aQxhWT['yWHoR'](maxValue, player[a]) && aQxhWT['paGKN'](maxId, a))\n                maxId = a;\n            else if (aQxhWT['Gvlmr'](maxValue, player[a])) {\n                maxValue = player[a];\n                maxId = a;\n            } else if (aQxhWT['yWHoR'](a, maxId) && aQxhWT['BNjCy'](v, 0x0)) {\n                var max = -0x1 * Infinity;\n                player['forEach'](function (value, index) {\n                    if (RbPqRm['yMpge'](max, value)) {\n                        max = value;\n                        maxValue = value;\n                        maxId = index;\n                    }\n                });\n            }\n            continue;\n        case '1':\n            console['log'](aQxhWT['SUASH'](aQxhWT['SUASH'](maxId, 0x1), '\\x20') + maxValue);\n            continue;\n        case '2':\n            player[a] += v;\n            continue;\n        case '3':\n            var RbPqRm = {\n                'yMpge': function (x, y) {\n                    return aQxhWT['Gvlmr'](x, y);\n                }\n            };\n            continue;\n        case '4':\n            var av = V['split']('\\x20')['map'](Number);\n            continue;\n        case '5':\n            var a = av[0x0] - 0x1;\n            continue;\n        case '6':\n            var v = av[0x1];\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["3 5\n1 4 \n2 5 \n1 3\n3 6\n2 7", "1 4\n2 5\n1 7\n1 7\n2 12"], ["3 5\n1 4 \n2 5 \n2 -3\n3 4\n1 -1", "1 4\n2 5\n1 4\n1 4\n3 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar nq=arr.shift().split(\" \").map(Number);\nvar player=[];\nvar maxValue=0;\nvar maxId=0;\nfor(var i=0;i<nq[0];i++)player[i]=0;\narr.forEach(function(V){\n   var av=V.split(\" \").map(Number);\n   var a=av[0]-1;\n   var v=av[1];\n   player[a]+=v;\n   if(a==maxId && v>=0)maxValue+=v;\n   else if(maxValue==player[a] && maxId>a)maxId=a;\n   else if(maxValue<player[a]){maxValue=player[a];maxId=a;}\n   else if(a==maxId && v<0){\n      var max=(-1*Infinity);\n      player.forEach(function(value,index){\n         if(max<value){max=value;maxValue=value;maxId=index;}\n      });\n   }\n   console.log((maxId+1)+\" \"+maxValue);\n});", "language": "JavaScript"}
{"filename": "p00139_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nvar n = Arr['shift']();\nfor (var i = 0x0; i < n; i++) {\n    if (/^>'(=+)#\\1~$/['test'](Arr[i]))\n        console['log']('A');\n    else if (/^>\\^(Q=)+~~$/['test'](Arr[i]))\n        console['log']('B');\n    else\n        console['log']('NA');\n}", "test_cases": [["3\n>'======#======~\n>^Q=Q=Q=Q=Q=Q=Q=Q=Q=~~\n>'===#====~", "A\nB\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar n=Arr.shift();\nfor(var i=0;i<n;i++){\n   if(/^>'(=+)#\\1~$/.test(Arr[i]))console.log(\"A\");\n   else if(/^>\\^(Q=)+~~$/.test(Arr[i]))console.log(\"B\");\n   else console.log(\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00151_1", "type": "JavaScript", "obfuscated": "function count(y, x) {\n    var VDewAd = {\n        'RrNpq': function (x, y) {\n            return x < y;\n        },\n        'rGUmk': function (x, y) {\n            return x + y;\n        },\n        'jXeyb': function (x, y) {\n            return x * y;\n        },\n        'VVBhN': function (x, y) {\n            return x + y;\n        },\n        'jWGWq': function (x, y) {\n            return x * y;\n        },\n        'ZXVQh': function (x, y) {\n            return x < y;\n        },\n        'eDoMC': function (x, y) {\n            return x < y;\n        },\n        'xediH': function (x, y) {\n            return x >= y;\n        },\n        'YyZGC': function (x, y) {\n            return x >= y;\n        },\n        'kHjiJ': function (x, y) {\n            return x != y;\n        }\n    };\n    var dy = [\n        0x0,\n        0x1,\n        0x1,\n        0x1\n    ];\n    var dx = [\n        0x1,\n        -0x1,\n        0x0,\n        0x1\n    ];\n    var max = 0x1;\n    for (var i = 0x0; VDewAd['RrNpq'](i, 0x4); i++) {\n        var cnt = 0x1;\n        for (var j = 0x1; j <= n; j++) {\n            var yy = VDewAd['rGUmk'](y, VDewAd['jXeyb'](dy[i], j));\n            var xx = VDewAd['VVBhN'](x, VDewAd['jWGWq'](dx[i], j));\n            if (VDewAd['ZXVQh'](yy, 0x0) || VDewAd['eDoMC'](xx, 0x0) || VDewAd['xediH'](yy, n) || VDewAd['YyZGC'](xx, n))\n                break;\n            if (VDewAd['kHjiJ'](yx[yy][xx], 0x1))\n                break;\n            cnt++;\n        }\n        max = Math['max'](max, cnt);\n        cnt = 0x1;\n    }\n    return max;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        yx[i] = Arr['shift']()['split']('')['map'](Number);\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            if (yx[i][j] == 0x1)\n                max = Math['max'](max, count(i, j));\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["5\n00011\n00101\n01000\n10101\n00010\n8\n11000001\n10110111\n01100111\n01111010\n11111111\n01011010\n10100010\n10000001\n2\n01\n00\n3\n000\n000\n000\n0", "4\n8\n1\n0"]], "original": "function count(y,x){\n   var dy=[0,1,1,1];\n   var dx=[1,-1,0,1];\n   var max=1;\n   for(var i=0;i<4;i++){\n      var cnt=1;\n      for(var j=1;j<=n;j++){\n         var yy=y+(dy[i]*j);\n         var xx=x+(dx[i]*j);\n         if(yy<0 || xx<0 || yy>=n || xx>=n)break;\n         if(yx[yy][xx]!=1)break;\n         cnt++;\n      }\n      max=Math.max(max,cnt);\n      cnt=1;\n   }\n   return max;\n}\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      yx[i]=(Arr.shift()).split(\"\").map(Number);\n   }\n   var max=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         if(yx[i][j]==1)max=Math.max(max,count(i,j));\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00176_1", "type": "JavaScript", "obfuscated": "(function (input) {\n    var ZUVNap = {\n        'bsoGx': 'black',\n        'iFjvv': 'blue',\n        'sGdFK': 'lime',\n        'tJMhi': 'yellow',\n        'vYvho': 'white',\n        'LQwMH': function (x, y) {\n            return x === y;\n        },\n        'IeRCI': '1|2|5|3|4|6|0',\n        'fhXpb': function (x, y) {\n            return x * y;\n        },\n        'eIHmW': function (x, y) {\n            return x < y;\n        },\n        'OXjaT': function (x, y) {\n            return x + y;\n        },\n        'eoAxw': function (x, y) {\n            return x + y;\n        },\n        'iODJi': function (x, y) {\n            return x - y;\n        }\n    };\n    var lines = input['split']('\\x0a');\n    var colors = [\n        [\n            ZUVNap['bsoGx'],\n            0x0,\n            0x0,\n            0x0\n        ],\n        [\n            ZUVNap['iFjvv'],\n            0x0,\n            0x0,\n            0xff\n        ],\n        [\n            ZUVNap['sGdFK'],\n            0x0,\n            0xff,\n            0x0\n        ],\n        [\n            'aqua',\n            0x0,\n            0xff,\n            0x0\n        ],\n        [\n            'red',\n            0xff,\n            0x0,\n            0x0\n        ],\n        [\n            'fuchsia',\n            0xff,\n            0x0,\n            0xff\n        ],\n        [\n            ZUVNap['tJMhi'],\n            0xff,\n            0xff,\n            0x0\n        ],\n        [\n            ZUVNap['vYvho'],\n            0xff,\n            0xff,\n            0xff\n        ]\n    ];\n    for (var i = 0x0; i < lines['length']; ++i) {\n        if (ZUVNap['LQwMH'](lines[i][0x0], '#')) {\n            var ZPIUHv = ZUVNap['IeRCI']['split']('|');\n            var cOakyF = 0x0;\n            while (!![]) {\n                switch (ZPIUHv[cOakyF++]) {\n                case '0':\n                    console['log'](best_color);\n                    continue;\n                case '1':\n                    var best_color;\n                    continue;\n                case '2':\n                    var min_d = ZUVNap['fhXpb'](0x3, 0x100) * 0x100 + 0x1;\n                    continue;\n                case '3':\n                    var g = parseInt(lines[i]['substr'](0x3, 0x2), 0x10);\n                    continue;\n                case '4':\n                    var b = parseInt(lines[i]['substr'](0x5, 0x2), 0x10);\n                    continue;\n                case '5':\n                    var r = parseInt(lines[i]['substr'](0x1, 0x2), 0x10);\n                    continue;\n                case '6':\n                    for (var j = 0x0; ZUVNap['eIHmW'](j, colors['length']); ++j) {\n                        var d = ZUVNap['OXjaT'](ZUVNap['eoAxw'](Math['pow'](r - colors[j][0x1], 0x2), Math['pow'](ZUVNap['iODJi'](g, colors[j][0x2]), 0x2)), Math['pow'](ZUVNap['iODJi'](b, colors[j][0x3]), 0x2));\n                        if (d < min_d) {\n                            min_d = d;\n                            best_color = colors[j][0x0];\n                        }\n                    }\n                    continue;\n                }\n                break;\n            }\n        }\n    }\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()));", "test_cases": [["#ffe085\n#787878\n#decade\n#ff55ff\n0", "white\nblack\nwhite\nfuchsia"]], "original": "(function(input) {\n  var lines = input.split(\"\\n\");\n  var colors = [\n    ['black', 0x00, 0x00, 0x00],\n    ['blue', 0x00, 0x00, 0xff],\n    ['lime', 0x00, 0xff, 0x00],\n    ['aqua', 0x00, 0xff, 0x00],\n    ['red', 0xff, 0x00, 0x00],\n    ['fuchsia', 0xff, 0x00, 0xff],\n    ['yellow', 0xff, 0xff, 0x00],\n    ['white', 0xff, 0xff, 0xff],\n  ];\n  for (var i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '#') {\n      var best_color;\n      var min_d = 3 * 256 * 256 + 1;\n      var r = parseInt(lines[i].substr(1, 2), 16);\n      var g = parseInt(lines[i].substr(3, 2), 16);\n      var b = parseInt(lines[i].substr(5, 2), 16);\n      for (var j = 0; j < colors.length; ++j) {\n        var d = Math.pow(r - colors[j][1], 2) + Math.pow(g - colors[j][2], 2) + Math.pow(b - colors[j][3], 2);\n        if (d < min_d) {\n          min_d = d;\n          best_color = colors[j][0];\n        }\n      }\n      console.log(best_color);\n    }\n  }\n})(require('fs').readFileSync('/dev/stdin', 'utf8').trim());", "language": "JavaScript"}
{"filename": "p00208_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var str = n['toString'](0x8) + '';\n    str = str['replace'](/7/g, '9');\n    str = str['replace'](/6/g, '8');\n    str = str['replace'](/5/g, '7');\n    str = str['replace'](/4/g, '5');\n    console['log'](str);\n}", "test_cases": [["15\n100\n1000000000\n3\n0", "19\n155\n9358757000\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var str=n.toString(8)+\"\";\n   str=str.replace(/7/g,\"9\");\n   str=str.replace(/6/g,\"8\");\n   str=str.replace(/5/g,\"7\");\n   str=str.replace(/4/g,\"5\");\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00217_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var AL = Arr['shift']();\n    if (AL == 0x0)\n        break;\n    var pd = [];\n    for (var i = 0x0; i < AL; i++) {\n        var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n        var p = arr[0x0];\n        var d = arr[0x1] + arr[0x2];\n        pd['push']([\n            p,\n            d\n        ]);\n    }\n    pd['sort'](function (a, b) {\n        var ryWnZI = {\n            'WLLIl': function (x, y) {\n                return x <= y;\n            }\n        };\n        if (ryWnZI['WLLIl'](a[0x1], b[0x1]))\n            return 0x1;\n        else\n            return -0x1;\n    });\n    console['log'](pd[0x0]['join']('\\x20'));\n}", "test_cases": [["5\n263 2345 2504\n1 3210 1985\n5000 1501 4132\n10000 503 3107\n51 1758 2690\n3\n345 5000 2396\n7 3910 1590\n6789 2525 3616\n0", "5000 5633\n345 7396"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n    var AL=Arr.shift();\n    if(AL==0)break;\n    var pd=[];\n    for(var i=0;i<AL;i++){\n        var arr=(Arr.shift()).split(\" \").map(Number);\n        var p=arr[0];\n        var d=arr[1]+arr[2];\n        pd.push([p,d]);\n    }\n    pd.sort(function(a,b){\n        if(a[1]<=b[1])return 1;\n        else return -1;\n    });\n    console.log(pd[0].join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00253_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n === 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    for (var i = 0x0; i < n + 0x1; i++) {\n        var a = arr['filter'](function (v, index) {\n            var vcsfbe = {\n                'TDuWK': function (x, y) {\n                    return x != y;\n                }\n            };\n            return vcsfbe['TDuWK'](i, index);\n        });\n        var h = a[0x1] - a[0x0];\n        var flag = !![];\n        for (var j = 0x1; j < n; j++) {\n            if (h != a[j] - a[j - 0x1])\n                flag = ![];\n        }\n        if (flag == !![])\n            break;\n    }\n    console['log'](arr[i]);\n}", "test_cases": [["5\n1 2 3 6 4 5\n6\n1 3 6 9 12 15 18\n4\n5 7 9 11 12\n0", "6\n1\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n===0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   for(var i=0;i<n+1;i++){\n      var a=arr.filter(function(v,index){return i!=index;});\n      var h=a[1]-a[0];\n      var flag=true;\n      for(var j=1;j<n;j++){\n         if(h!=a[j]-a[j-1])flag=false;\n      }\n      if(flag==true)break;\n   }\n   console.log(arr[i]);\n}", "language": "JavaScript"}
{"filename": "p00255_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var p = Arr['shift']()['split']('\\x20')['map'](Number);\n    var j = Arr['shift']()['split']('\\x20')['map'](Number);\n    var sum = p['reduce'](function (a, b) {\n        var SurUlf = {\n            'SyDOg': function (x, y) {\n                return x + y;\n            }\n        };\n        return SurUlf['SyDOg'](a, b);\n    });\n    j['sort'](function (a, b) {\n        var vxjatv = {\n            'QIwHG': function (x, y) {\n                return x - y;\n            }\n        };\n        return vxjatv['QIwHG'](b, a);\n    });\n    var max = sum * n;\n    while (!![]) {\n        if (j['length'] == 0x0)\n            break;\n        n--;\n        max = Math['max'](max, (sum + j['shift']()) * n);\n    }\n    console['log'](max);\n}", "test_cases": [["3\n1 1 1\n3 3\n4\n3 3 3 3\n1 1 1\n5\n1 2 3 4 5\n4 3 2 1\n0", "12\n48\n76"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var p=Arr.shift().split(\" \").map(Number);\n   var j=Arr.shift().split(\" \").map(Number);\n   var sum=p.reduce(function(a,b){return a+b;});\n   j.sort(function(a,b){return b-a;});\n   var max=sum*n;\n   while(true){\n      if(j.length==0)break;\n      n--;\n      max=Math.max(max,(sum+j.shift())*n);\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00429_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i = i + 0x2) {\n    var n = Arr[i] - 0x0;\n    var str = Arr[i + 0x1];\n    for (var j = 0x0; j < n; j++) {\n        str = str['replace'](/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g, function (s) {\n            var qoKIVc = {\n                'BVSav': function (x, y) {\n                    return x + y;\n                }\n            };\n            return qoKIVc['BVSav'](s['length'], s[0x0]);\n        });\n    }\n    console['log'](str);\n    if (Arr[i + 0x2] == '0')\n        break;\n}", "test_cases": [["5\n11\n5\n11\n0", "13112221\n13112221"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n   var Arr=(input.trim()).split(\"\\n\");\n   for(var i=0;i<Arr.length;i=i+2){\n      var n=Arr[i]-0;\n      var str=Arr[i+1];\n      for(var j=0;j<n;j++){\n      str=str.replace(/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g,function(s){\n      return s.length+s[0];\n      });\n      }\n      console.log(str);\n      if(Arr[i+2]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00430_1", "type": "JavaScript", "obfuscated": "function bomb(arr) {\n    var uQkwpO = {\n        'XqzvL': function (x, y) {\n            return x === y;\n        },\n        'RQGRY': function (x, y) {\n            return x - y;\n        },\n        'cgqQS': function (x, y) {\n            return x !== y;\n        },\n        'xawmt': function (x, y) {\n            return x === y;\n        },\n        'rGHOJ': function (x, y) {\n            return x - y;\n        },\n        'cGXza': function (x, y) {\n            return x + y;\n        }\n    };\n    console['log'](arr['join']('\\x20'));\n    if (uQkwpO['XqzvL'](arr[0x0], 0x1))\n        return;\n    var i = uQkwpO['RQGRY'](arr['length'], 0x1);\n    while (!![]) {\n        if (uQkwpO['cgqQS'](arr[i], 0x1)) {\n            if (uQkwpO['xawmt'](arr[i], 0x2) || i === uQkwpO['rGHOJ'](arr['length'], 0x1)) {\n                arr[i]--;\n                arr['push'](0x1);\n            } else {\n                arr[i]--;\n                arr[uQkwpO['cGXza'](i, 0x1)]++;\n            }\n            break;\n        }\n        i--;\n    }\n    bomb(arr);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    bomb([n]);\n}", "test_cases": [["5\n5\n0", "5\n4 1\n3 2\n3 1 1\n2 2 1\n2 1 1 1\n1 1 1 1 1\n5\n4 1\n3 2\n3 1 1\n2 2 1\n2 1 1 1\n1 1 1 1 1"]], "original": "function bomb(arr){\n   console.log(arr.join(\" \"));\n   if(arr[0]===1)return;\n   var i=arr.length-1;\n   while(true){\n      if(arr[i]!==1){\n         if(arr[i]===2 || i===arr.length-1){arr[i]--;arr.push(1);}\n         else{arr[i]--;arr[i+1]++;}\n         break;\n      }\n      i--;\n   }\n   bomb(arr);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   bomb([n]);\n}", "language": "JavaScript"}
{"filename": "p00594_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n === 0x0)\n        break;\n    var ary = arr['shift']()['split']('\\x20');\n    var obj = {};\n    ary['forEach'](function (v) {\n        obj[v] = 0x0;\n    });\n    ary['forEach'](function (v) {\n        obj[v]++;\n    });\n    var ans = 'NO\\x20COLOR';\n    var half = n / 0x2;\n    for (var k in obj) {\n        if (obj[k] > half) {\n            ans = k;\n            break;\n        }\n    }\n    console['log'](ans);\n}", "test_cases": [["8\n3 1 2 3 3 1 5 3\n7\n5 2 5 3 4 5 5\n0", "NO COLOR\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n===0)break;\n   var ary=arr.shift().split(\" \");\n   var obj={};\n   ary.forEach(function(v){obj[v]=0;});\n   ary.forEach(function(v){obj[v]++;});\n   var ans=\"NO COLOR\";\n   var half=n/2;\n   for(var k in obj){\n      if(obj[k]>half){ans=k;break;}\n   }\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00616_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nh = arr['shift']();\n    if (nh == '0\\x200')\n        break;\n    nh = nh['split']('\\x20')['map'](Number);\n    var n = nh[0x0];\n    var h = nh[0x1];\n    var xyz = [];\n    for (var i = 0x0; i < n; i++) {\n        xyz[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            xyz[i][j] = [];\n            for (var k = 0x0; k < n; k++) {\n                xyz[i][j][k] = 0x0;\n            }\n        }\n    }\n    for (var I = 0x0; I < h; I++) {\n        var ary = arr['shift']()['split']('\\x20');\n        var c = ary['shift']();\n        ary = ary['map'](function (v) {\n            var brcsdw = {\n                'GqaYp': function (x, y) {\n                    return x - y;\n                }\n            };\n            return brcsdw['GqaYp'](v, 0x1);\n        });\n        if (c == 'xy') {\n            for (var i = 0x0; i < n; i++)\n                xyz[ary[0x0]][ary[0x1]][i] = 0x1;\n        } else if (c == 'xz') {\n            for (var i = 0x0; i < n; i++)\n                xyz[ary[0x0]][i][ary[0x1]] = 0x1;\n        } else if (c == 'yz') {\n            for (var i = 0x0; i < n; i++)\n                xyz[i][ary[0x0]][ary[0x1]] = 0x1;\n        }\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            for (var k = 0x0; k < n; k++) {\n                if (xyz[i][j][k] == 0x0)\n                    cnt++;\n                ;\n            }\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["4 3\nxy 4 4\nxz 1 2\nyz 2 3\n4 5\nxy 1 1\nxy 3 3\nxz 3 3\nyz 2 1\nyz 3 3\n0 0", "52\n46"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nh=arr.shift();\n   if(nh==\"0 0\")break;\n   nh=nh.split(\" \").map(Number);\n   var n=nh[0];\n   var h=nh[1];\n   var xyz=[];\n   for(var i=0;i<n;i++){\n      xyz[i]=[];\n      for(var j=0;j<n;j++){\n         xyz[i][j]=[];\n         for(var k=0;k<n;k++){\n            xyz[i][j][k]=0;\n         }\n      }\n   }\n   for(var I=0;I<h;I++){\n      var ary=arr.shift().split(\" \");\n      var c=ary.shift();\n      ary=ary.map(function(v){return v-1;});\n      if(c==\"xy\"){for(var i=0;i<n;i++)xyz[ary[0]][ary[1]][i]=1;}\n      else if(c==\"xz\"){for(var i=0;i<n;i++)xyz[ary[0]][i][ary[1]]=1;}\n      else if(c==\"yz\"){for(var i=0;i<n;i++)xyz[i][ary[0]][ary[1]]=1;}\n   }\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         for(var k=0;k<n;k++){\n            if(xyz[i][j][k]==0)cnt++;;\n         }\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00716_1", "type": "JavaScript", "obfuscated": "function F1(m, b, c) {\n    var sHkVWP = {\n        'QBaXk': function (x, y) {\n            return x < y;\n        },\n        'fPKxY': function (x, y) {\n            return x + y;\n        }\n    };\n    var sum = 0x0;\n    for (var i = 0x0; sHkVWP['QBaXk'](i, Y); i++) {\n        sum += Math['floor'](m * b);\n        m -= c;\n    }\n    return sHkVWP['fPKxY'](m, sum);\n}\nfunction F2(m, b, c) {\n    var lWKPyo = {\n        'XhvIx': function (x, y) {\n            return x * y;\n        }\n    };\n    for (var i = 0x0; i < Y; i++) {\n        m += Math['floor'](lWKPyo['XhvIx'](m, b)) - c;\n    }\n    return m;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar M = Arr['shift']() - 0x0;\nfor (var i = 0x0; i < M; i++) {\n    var ViNkSJ = '3|2|0|1|5|4'['split']('|');\n    var LIYDZH = 0x0;\n    while (!![]) {\n        switch (ViNkSJ[LIYDZH++]) {\n        case '0':\n            var N = Arr['shift']() - 0x0;\n            continue;\n        case '1':\n            var arr = [];\n            continue;\n        case '2':\n            var Y = Arr['shift']() - 0x0;\n            continue;\n        case '3':\n            var money = Arr['shift']() - 0x0;\n            continue;\n        case '4':\n            console['log'](Math['max']['apply'](null, arr));\n            continue;\n        case '5':\n            for (var j = 0x0; j < N; j++) {\n                var D = Arr['shift']()['split']('\\x20')['map'](Number);\n                if (D[0x0] == 0x0)\n                    arr['push'](F1(money, D[0x1], D[0x2]));\n                if (D[0x0] == 0x1)\n                    arr['push'](F2(money, D[0x1], D[0x2]));\n            }\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["4\n1000000\n5\n2\n0 0.03125 3000\n1 0.03125 3000\n6620000\n7\n2\n0 0.0732421875 42307\n1 0.0740966796875 40942\n39677000\n4\n4\n0 0.0709228515625 30754\n1 0.00634765625 26165\n0 0.03662109375 79468\n0 0.0679931640625 10932\n10585000\n6\n4\n1 0.0054931640625 59759\n1 0.12353515625 56464\n0 0.0496826171875 98193\n0 0.0887451171875 78966", "1150357\n10559683\n50796918\n20829397"]], "original": "function F1(m,b,c){\n   var sum=0;\n   for(var i=0;i<Y;i++){\n      sum+=Math.floor(m*b);\n      m-=c;\n   }\n   return m+sum;\n}\nfunction F2(m,b,c){\n   for(var i=0;i<Y;i++){\n      m+=Math.floor(m*b)-c;\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar M=Arr.shift()-0;\nfor(var i=0;i<M;i++){\n   var money=Arr.shift()-0;\n   var Y=Arr.shift()-0;\n   var N=Arr.shift()-0;\n   var arr=[];\n   for(var j=0;j<N;j++){\n      var D=(Arr.shift()).split(\" \").map(Number);\n      if(D[0]==0)arr.push(F1(money,D[1],D[2]));\n      if(D[0]==1)arr.push(F2(money,D[1],D[2]));\n   }\n   console.log(Math.max.apply(null,arr));\n}", "language": "JavaScript"}
{"filename": "p00723_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var lKXfnN = '2|4|1|3|0|5'['split']('|');\n    var SJiIYy = 0x0;\n    while (!![]) {\n        switch (lKXfnN[SJiIYy++]) {\n        case '0':\n            for (var i = 0x0; i < arr['length']; i++) {\n                var vzRNuK = '6|1|0|7|11|9|10|5|2|3|8|4'['split']('|');\n                var aQBvJS = 0x0;\n                while (!![]) {\n                    switch (vzRNuK[aQBvJS++]) {\n                    case '0':\n                        var a = A['split']('')['reverse']()['join']('');\n                        continue;\n                    case '1':\n                        var B = arr[i][0x1];\n                        continue;\n                    case '2':\n                        obj[B + A] = !![];\n                        continue;\n                    case '3':\n                        obj[B + a] = !![];\n                        continue;\n                    case '4':\n                        obj[b + a] = !![];\n                        continue;\n                    case '5':\n                        obj[a + b] = !![];\n                        continue;\n                    case '6':\n                        var A = arr[i][0x0];\n                        continue;\n                    case '7':\n                        var b = B['split']('')['reverse']()['join']('');\n                        continue;\n                    case '8':\n                        obj[b + A] = !![];\n                        continue;\n                    case '9':\n                        obj[A + b] = !![];\n                        continue;\n                    case '10':\n                        obj[a + B] = !![];\n                        continue;\n                    case '11':\n                        obj[A + B] = !![];\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '1':\n            for (var i = 0x1; i < str['length']; i++) {\n                arr['push']([\n                    str['slice'](0x0, i),\n                    str['slice'](i, str['length'])\n                ]);\n            }\n            continue;\n        case '2':\n            var str = Arr['shift']();\n            continue;\n        case '3':\n            var obj = {};\n            continue;\n        case '4':\n            var arr = [];\n            continue;\n        case '5':\n            console['log'](Object['keys'](obj)['length']);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["4\naa\nabba\nabcd\nabcde", "1\n6\n12\n18"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var str=Arr.shift();\n   var arr=[];\n   for(var i=1;i<str.length;i++){\n      arr.push([str.slice(0,i),str.slice(i,str.length)]);\n   }\n   var obj={};\n   for(var i=0;i<arr.length;i++){\n      var A=arr[i][0];\n      var B=arr[i][1];\n      var a=A.split(\"\").reverse().join(\"\");\n      var b=B.split(\"\").reverse().join(\"\");\n      obj[A+B]=true;\n      obj[A+b]=true;\n      obj[a+B]=true;\n      obj[a+b]=true;\n      obj[B+A]=true;\n      obj[B+a]=true;\n      obj[b+A]=true;\n      obj[b+a]=true;\n   }\n   console.log(Object.keys(obj).length);\n}", "language": "JavaScript"}
{"filename": "p00774_1", "type": "JavaScript", "obfuscated": "function stoneRemove() {\n    var qqAlgb = {\n        'mXFFp': function (x, y) {\n            return x * y;\n        },\n        'btHhq': function (x, y) {\n            return x < y;\n        },\n        'eNwTa': function (x, y) {\n            return x < y;\n        },\n        'Khdhu': function (x, y) {\n            return x != y;\n        },\n        'KjLtm': function (x, y) {\n            return x + y;\n        },\n        'EHtQN': function (x, y) {\n            return x + y;\n        }\n    };\n    yx['forEach'](function (v, i) {\n        var str = v['join']('')['replace'](/([1-9])\\1{2,}/, function (x) {\n            point += qqAlgb['mXFFp'](x[0x0] - 0x0, x['length']);\n            return x['replace'](/./g, '0');\n        });\n        yx[i] = str['split']('')['map'](Number);\n    });\n    var flag = !![];\n    while (flag) {\n        flag = ![];\n        for (var i = 0x0; qqAlgb['btHhq'](i, H - 0x1); i++) {\n            for (var j = 0x0; qqAlgb['eNwTa'](j, 0x5); j++) {\n                if (qqAlgb['Khdhu'](yx[i][j], 0x0) && yx[qqAlgb['KjLtm'](i, 0x1)][j] == 0x0) {\n                    yx[qqAlgb['EHtQN'](i, 0x1)][j] = yx[i][j];\n                    yx[i][j] = 0x0;\n                    flag = !![];\n                }\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var h = arr['shift']() - 0x0;\n    if (h == 0x0)\n        break;\n    var H = h;\n    var yx = [];\n    while (h--)\n        yx['push'](arr['shift']()['split']('\\x20')['map'](Number));\n    var point = 0x0;\n    var p = point;\n    while (!![]) {\n        stoneRemove();\n        if (p == point)\n            break;\n        p = point;\n    }\n    console['log'](point);\n}", "test_cases": [["1\n6 9 9 9 9\n5\n5 9 5 5 9\n5 5 6 9 9\n4 6 3 6 9\n3 3 2 9 9\n2 2 1 1 1\n10\n3 5 6 5 6\n2 2 2 8 3\n6 2 5 9 2\n7 7 7 6 1\n4 6 6 4 9\n8 9 1 1 8\n5 6 1 8 1\n6 8 2 1 2\n9 6 3 3 5\n5 3 8 8 8\n5\n1 2 3 4 5\n6 7 8 9 1\n2 3 4 5 6\n7 8 9 1 2\n3 4 5 6 7\n3\n2 2 8 7 4\n6 5 7 7 7\n8 8 9 9 9\n0", "36\n38\n99\n0\n72"]], "original": "function stoneRemove(){\n   yx.forEach(function(v,i){\n      var str=v.join(\"\").replace(/([1-9])\\1{2,}/,function(x){\n         point+=(x[0]-0)*x.length;\n         return x.replace(/./g,\"0\");\n      });\n      yx[i]=str.split(\"\").map(Number);\n   });\n   var flag=true;\n   while(flag){\n      flag=false;\n      for(var i=0;i<H-1;i++){\n         for(var j=0;j<5;j++){\n            if(yx[i][j]!=0 && yx[i+1][j]==0){\n               yx[i+1][j]=yx[i][j];\n               yx[i][j]=0;\n               flag=true;\n            }\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var h=arr.shift()-0;\n   if(h==0)break;\n   var H=h;\n   var yx=[];\n   while(h--)yx.push(arr.shift().split(\" \").map(Number));\n   var point=0;\n   var p=point;\n   while(true){\n      stoneRemove();\n      if(p==point)break;\n      p=point;\n   }\n   console.log(point);\n}", "language": "JavaScript"}
{"filename": "p00946_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']()['split']('\\x20')[0x0] - 0x0;\nvar x = [];\nfor (var i = 0x1; i <= n; i++)\n    x['push']([\n        i,\n        -0x1 * i\n    ]);\narr['forEach'](function (v, i) {\n    var nlBaFy = {\n        'hWAbK': function (x, y) {\n            return x - y;\n        }\n    };\n    x[nlBaFy['hWAbK'](nlBaFy['hWAbK'](v, 0x0), 0x1)][0x1] = i;\n});\nx['sort'](function (a, b) {\n    var XzmVqy = {\n        'KVBjj': function (x, y) {\n            return x - y;\n        }\n    };\n    return XzmVqy['KVBjj'](b[0x1], a[0x1]);\n});\nx = x['map'](function (v) {\n    return v[0x0];\n});\nconsole['log'](x['join']('\\x0a'));", "test_cases": [["5 3\n4\n2\n5", "5\n2\n4\n1\n3"], ["10 8\n1\n4\n7\n3\n4\n10\n1\n3", "3\n1\n10\n4\n7\n2\n5\n6\n8\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n = arr.shift().split(\" \")[0] - 0;\nvar x = [];\nfor (var i = 1; i <= n; i++) x.push([i,-1*i]);\narr.forEach(function(v,i) {\n   x[v-0-1][1]=i;\n});\nx.sort(function(a,b){\n   return b[1]-a[1];\n});\nx=x.map(function(v){\n   return v[0];\n});\nconsole.log(x.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p01109_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var a = arr['shift']()['split']('\\x20')['map'](Number);\n    var sum = a['reduce']((a, b) => a + b);\n    console['log'](a['filter'](v => v <= sum / n)['length']);\n}", "test_cases": [["7\n15 15 15 15 15 15 15\n4\n10 20 30 60\n10\n1 1 1 1 1 1 1 1 1 100\n7\n90 90 90 90 90 90 10\n7\n2 7 1 8 2 8 4\n0", "7\n3\n9\n1\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var a = arr.shift().split(\" \").map(Number);\n   var sum = a.reduce((a,b)=>a+b);\n   console.log(a.filter(v => v<=sum/n).length);\n}\n", "language": "JavaScript"}
{"filename": "p01138_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = [];\n    while (n--) {\n        var wiURQk = '3|1|5|4|0|2'['split']('|');\n        var IQtQJy = 0x0;\n        while (!![]) {\n            switch (wiURQk[IQtQJy++]) {\n            case '0':\n                end = end[0x0] * 0x3c * 0x3c + end[0x1] * 0x3c + end[0x2];\n                continue;\n            case '1':\n                var start = hms[0x0]['split'](':')['map'](Number);\n                continue;\n            case '2':\n                ary['push']([\n                    start,\n                    end\n                ]);\n                continue;\n            case '3':\n                var hms = arr['shift']()['split']('\\x20');\n                continue;\n            case '4':\n                start = start[0x0] * 0x3c * 0x3c + start[0x1] * 0x3c + start[0x2];\n                continue;\n            case '5':\n                var end = hms[0x1]['split'](':')['map'](Number);\n                continue;\n            }\n            break;\n        }\n    }\n    ary['sort'](function (a, b) {\n        return a[0x0] - b[0x0];\n    });\n    var train = [];\n    var cnt = 0x0;\n    ary['forEach'](function (v) {\n        var WVCkqQ = {\n            'ZBOvk': function (x, y) {\n                return x == y;\n            },\n            'eczeY': function (x, y) {\n                return x <= y;\n            }\n        };\n        if (WVCkqQ['ZBOvk'](train['length'], 0x0)) {\n            cnt++;\n            train['push'](v[0x1]);\n        } else {\n            train['sort'](function (a, b) {\n                return a - b;\n            });\n            if (WVCkqQ['eczeY'](train[0x0], v[0x0])) {\n                train['shift']();\n                train['push'](v[0x1]);\n            } else {\n                cnt++;\n                train['push'](v[0x1]);\n            }\n        }\n    });\n    console['log'](cnt);\n}", "test_cases": [["3\n05:47:15 09:54:40\n12:12:59 12:13:00\n16:30:20 21:18:53\n6\n00:00:00 03:00:00\n01:00:00 03:00:00\n02:00:00 03:00:00\n03:00:00 04:00:00\n03:00:00 05:00:00\n03:00:00 06:00:00\n0", "1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=[];\n   while(n--){\n      var hms=arr.shift().split(\" \");\n      var start=hms[0].split(\":\").map(Number);\n      var end=hms[1].split(\":\").map(Number);\n      start=start[0]*60*60+start[1]*60+start[2];\n      end=end[0]*60*60+end[1]*60+end[2];\n      ary.push([start,end]);\n   }\n   ary.sort(function(a,b){return a[0]-b[0];});\n   var train=[];\n   var cnt=0;\n   ary.forEach(function(v){\n      if(train.length==0){\n         cnt++;\n         train.push(v[1]);\n      }else{\n         train.sort(function(a,b){return a-b;});\n         if(train[0]<=v[0]){\n            train.shift();\n            train.push(v[1]);\n         }else{\n            cnt++;\n            train.push(v[1]);\n         }\n      }\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01143_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nmp = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (nmp[0x0] == 0x0 && nmp[0x1] == 0x0 && nmp[0x2] == 0x0)\n        break;\n    var n = nmp[0x0];\n    var m = nmp[0x1] - 0x1;\n    var p = nmp[0x2];\n    var arr = [];\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr['shift']() - 0x0;\n        arr['push'](v);\n        sum += v * 0x64;\n    }\n    sum = sum * (0x64 - p) / 0x64;\n    var ans = 0x0;\n    if (arr[m] != 0x0)\n        ans = Math['floor'](sum / arr[m]);\n    console['log'](ans);\n}", "test_cases": [["3 2 50\n1\n2\n3\n4 4 75\n1\n2\n3\n0\n3 1 10\n8\n1\n1\n0 0 0", "150\n0\n112"]], "original": "\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nmp=(Arr.shift()).split(\" \").map(Number);\n   if(nmp[0]==0 && nmp[1]==0 && nmp[2]==0)break;\n   var n=nmp[0];\n   var m=nmp[1]-1;\n   var p=nmp[2];\n   var arr=[];\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr.push(v);\n      sum+=(v*100);\n   }\n   sum=sum*(100-p)/100;\n   var ans=0;\n   if(arr[m]!=0)ans=Math.floor(sum/arr[m]);\n   console.log(ans);\n}\n", "language": "JavaScript"}
{"filename": "p01313_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar n = -0x1, i = function (d) {\n        return Math['pow'](0xa, ~~d);\n    }, l, p, c, r, o, a, b, am, bm, d;\nprocess['stdin']['on']('data', function (ip) {\n    var nFzHXZ = {\n        'UDemT': function (x, y) {\n            return x < y;\n        },\n        'TfMXJ': function (x, y) {\n            return x + y;\n        },\n        'BRPHv': function (x, y) {\n            return x - y;\n        },\n        'umYYn': function (callee, param1) {\n            return callee(param1);\n        },\n        'OWEHF': function (callee, param1) {\n            return callee(param1);\n        },\n        'ZZdOl': function (x, y) {\n            return x == y;\n        },\n        'ImPLC': function (x, y) {\n            return x + y;\n        },\n        'Flktj': function (x, y) {\n            return x * y;\n        },\n        'rSkWy': function (x, y) {\n            return x + y;\n        }\n    };\n    p = ip['split']('\\x0a');\n    l = ~~p[0x0];\n    for (c = 0x0; nFzHXZ['UDemT'](c, l); ++c) {\n        r = [], o = p[nFzHXZ['TfMXJ'](c, 0x1)]['split']('\\x20'), d = 0x0;\n        for (a = i(o[0x0] - 0x1), am = nFzHXZ['BRPHv'](i(o[0x0]), 0x1); a < am; ++a)\n            for (b = nFzHXZ['umYYn'](i, o[0x1] - 0x1), bm = nFzHXZ['OWEHF'](i, o[0x1]) - 0x1; b < bm; ++b)\n                nFzHXZ['ZZdOl'](nFzHXZ['TfMXJ'](nFzHXZ['ImPLC'](nFzHXZ['Flktj'](b, b), b) - nFzHXZ['Flktj'](a, a), a) / 0x2, nFzHXZ['TfMXJ']('', a) + b) && (console['log'](nFzHXZ['TfMXJ'](nFzHXZ['rSkWy'](a, '\\x20'), b)), ++d);\n        d || console['log']('No\\x20cats.');\n    }\n});", "test_cases": [["4\n1 1\n1 3\n1 4\n2 2", "1 5\n2 7\n7 119\nNo cats.\n13 53\n18 63\n33 88\n35 91"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar n = -1, i = function(d){return Math.pow(10, ~~d)}, l, p, c, r, o, a, b, am, bm, d;\nprocess.stdin.on('data', function(ip){\n\tp = ip.split('\\n'); l = ~~p[0];\n\tfor(c = 0; c < l; ++c) {\n\t\tr = [], o = p[c+1].split(' '), d = 0;\n\t\tfor(a = i(o[0] - 1), am = i(o[0]) - 1; a < am; ++a)\n\t\tfor(b = i(o[1] - 1), bm = i(o[1]) - 1; b < bm; ++b)\n\t\t\t(b * b + b - a * a + a) / 2 == ('' + a + b) && (console.log(a + ' ' + b), ++d);\n\t\td || console.log('No cats.');\n\t}\n});", "language": "JavaScript"}
{"filename": "p01359_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [n, q] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (n == 0x0 && q == 0x0)\n        break;\n    var g = [];\n    for (var i = 0x0; i < n; i++) {\n        var [e, ey, wy] = arr['shift']()['split']('\\x20');\n        [ey, wy] = [\n            ey - 0x0,\n            wy - 0x0\n        ];\n        g['push']([\n            e,\n            wy - ey,\n            wy\n        ]);\n    }\n    for (var i = 0x0; i < q; i++) {\n        var n = arr['shift']() - 0x0;\n        var ans = 'Unknown';\n        for (var j = 0x0; j < g['length']; j++) {\n            var a = g[j][0x1];\n            var b = g[j][0x2];\n            if (a < n && n <= b) {\n                ans = [\n                    g[j][0x0],\n                    n - a\n                ]['join']('\\x20');\n            }\n        }\n        console['log'](ans);\n    }\n}", "test_cases": [["4 3\nmeiji 10 1877\ntaisho 6 1917\nshowa 62 1987\nheisei 22 2010\n1868\n1917\n1988\n1 1\nuniversalcentury 123 2168\n2010\n0 0", "meiji 1\ntaisho 6\nUnknown\nUnknown"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\n\nvar arr = input.trim().split(\"\\n\");\nwhile(true){\n   var [n,q]=arr.shift().split(\" \").map(Number);\n   if(n==0 && q==0)break;\n   var g=[];\n   for(var i=0;i<n;i++){\n      var [e,ey,wy]=arr.shift().split(\" \");\n      [ey,wy]=[ey-0,wy-0];\n      g.push([e,wy-ey,wy]);\n   }\n   for(var i=0;i<q;i++){\n      var n = arr.shift() - 0;\n      var ans=\"Unknown\";\n      for(var j=0;j<g.length;j++){\n         var a = g[j][1];\n         var b = g[j][2];\n         if(a<n && n<=b){\n            ans=[g[j][0],n-a].join(\" \");\n         }\n      }\n      console.log(ans);\n   }\n}\n\n", "language": "JavaScript"}
{"filename": "p01447_1", "type": "JavaScript", "obfuscated": "console['log'](Math['ceil'](Math['log'](+require('fs')['readFileSync']('/dev/stdin', 'utf-8')) / Math['log'](0x3)));", "test_cases": [["8", "2"], ["30", "4"], ["2000000000", "20"]], "original": "console.log(Math.ceil(Math.log(+require(\"fs\").readFileSync(\"/dev/stdin\",\"utf-8\"))/Math.log(3)))", "language": "JavaScript"}
{"filename": "p01687_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar s = input['trim']();\nfor (var i = 0x0; i < s['length'] - 0x7; i++) {\n    var arr = [\n        s[i],\n        s[i + 0x1],\n        s[i + 0x2],\n        s[i + 0x3],\n        s[i + 0x4],\n        s[i + 0x5],\n        s[i + 0x6],\n        s[i + 0x7]\n    ];\n    if (arr['join']('') == 'AIZUNYAN') {\n        i += 0x7;\n        continue;\n    }\n    var str = arr['sort']()['join']('');\n    if (str == 'AADINNUY') {\n        s = s['slice'](0x0, i) + 'AIZUNYAN' + s['slice'](i + 0x8, s['length']);\n        i += 0x7;\n    }\n}\nconsole['log'](s);", "test_cases": [["AIDUNYAN", "AIZUNYAN"], ["ZDD", "ZDD"], ["AADINNUYHAMAJIDETENSHIDAKARANYANAIDUPEROPEROSHITAI", "AIZUNYANHAMAJIDETENSHIDAKARAAIZUNYANPEROPEROSHITAI"], ["NYANAIDUAIDU", "AIZUNYANAIDU"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim();\nfor(var i=0;i<s.length-7;i++){\n   var arr=[s[i],s[i+1],s[i+2],s[i+3],s[i+4],s[i+5],s[i+6],s[i+7]]; \n   if(arr.join(\"\")==\"AIZUNYAN\"){\n      i+=7;\n      continue;\n   }  \n   var str=arr.sort().join(\"\");\n   if(str==\"AADINNUY\"){\n      s=s.slice(0,i)+\"AIZUNYAN\"+s.slice(i+8,s.length);\n      i+=7;\n   }\n}\nconsole.log(s);", "language": "JavaScript"}
{"filename": "p01924_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var tdl = arr[0x0];\n    if (tdl == '0\\x200\\x200')\n        break;\n    var [t, d, l] = tdl['split']('\\x20')['map'](Number);\n    var cnt = 0x0;\n    var time = 0x0;\n    for (var i = 0x0; i < t; i++) {\n        if (time != 0x0)\n            cnt++;\n        if (time > 0x0)\n            time--;\n        var x = arr[i + 0x1] - 0x0;\n        if (x >= l)\n            time = d;\n    }\n    console['log'](cnt);\n    arr = arr['slice'](t + 0x1);\n}", "test_cases": [["5 2 3\n3\n5\n1\n2\n3\n3 100 100\n3\n3\n4\n20 3 8\n3\n2\n6\n1\n9\n1\n8\n4\n2\n2\n8\n1\n8\n8\n2\n5\n3\n4\n3\n8\n7 2 2\n0\n2\n5\n2\n5\n2\n1\n0 0 0", "3\n0\n11\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var tdl = arr[0];\n   if (tdl == \"0 0 0\") break;\n   var [t,d,l]=tdl.split(\" \").map(Number);\n   var cnt=0;\n   var time=0;\n   for(var i=0;i<t;i++){\n      if(time!=0)cnt++;\n      if(time>0)time--;\n      var x=arr[i+1]-0;\n      if(x>=l)time=d;\n   }\n   console.log(cnt);\n   arr=arr.slice(t+1);\n}\n", "language": "JavaScript"}
{"filename": "p02247_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar a = arr[0x0];\nvar b = arr[0x1];\nvar len = b['length'] - 0x1;\nvar reg = new RegExp(b, 'g');\nvar ans = [];\nwhile (reg['test'](a)) {\n    reg['lastIndex'] -= len;\n    ans['push'](reg['lastIndex'] - 0x1);\n}\nif (ans['length'] != 0x0)\n    console['log'](ans['join']('\\x0a'));", "test_cases": [["aabaaa\naa", "0\n3\n4"], ["xyzz\nyz", "1"], ["abc\nxyz", ""]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar a=arr[0];\nvar b=arr[1];\nvar len=b.length-1;\nvar reg = new RegExp(b,\"g\");\nvar ans=[];\nwhile (reg.test(a)) {\n   reg.lastIndex -= len;\n   ans.push(reg.lastIndex-1);\n}\nif(ans.length!=0)console.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p02381_1", "type": "JavaScript", "obfuscated": "'use strict';\n(function (stdin) {\n    var uaioJh = {\n        'SEhPG': function (x, y) {\n            return x / y;\n        },\n        'vzPhw': function (x, y) {\n            return x - y;\n        }\n    };\n    var lines = stdin['toString']();\n    var re = /\\w+\\n[\\w\\s]*?\\n/g;\n    var result = function (data) {\n        var AXRlFC = {\n            'XDcrX': function (x, y) {\n                return uaioJh['vzPhw'](x, y);\n            }\n        };\n        return data['map'](stdev)['join']('\\x0a');\n        function stdev(scores) {\n            var count = scores['length'];\n            var mean = uaioJh['SEhPG'](scores['reduce'](sum), count);\n            return Math['sqrt'](uaioJh['SEhPG'](scores['map'](function (v) {\n                return Math['pow'](AXRlFC['XDcrX'](v, mean), 0x2);\n            })['reduce'](sum), count))['toFixed'](0x8);\n        }\n        function sum(a, b) {\n            return a + b;\n        }\n    }(lines['match'](re)['map'](function (v) {\n        return v['split']('\\x0a')[0x1]['split']('\\x20')['slice'](0x0, v['split']('\\x0a')[0x0])['map'](Number);\n    }));\n    console['log'](result);\n}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["5\n70 80 100 90 20\n3\n80 80 80\n0", "27.85677655\n0.00000000"]], "original": "'use strict';\n(function(stdin) {\n  var lines  = stdin.toString();\n  var re = /\\w+\\n[\\w\\s]*?\\n/g;\n  var result = (function(data) {\n\n    return data.map(stdev).join('\\n');\n\n    function stdev(scores) {\n      var count = scores.length;\n      var mean  = scores.reduce(sum) / count;\n\n      return Math.sqrt(scores.map(function(v) {\n          return Math.pow(v - mean,2);\n        })\n        .reduce(sum) / count).toFixed(8);\n    }\n\n    function sum(a,b) {\n      return a + b;\n    }\n  }(lines.match(re).map(function(v) {\n      return v.split('\\n')[1].split(' ')\n        .slice(0,v.split('\\n')[0]).map(Number);\n   })\n  ));\n  console.log(result);\n}(require('fs').readFileSync('/dev/stdin', 'utf8')));", "language": "JavaScript"}
{"filename": "p02431_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar Q = arr[0x0] - 0x0;\nvar a = [];\nvar s = '';\nfor (var i = 0x1; i <= Q; i++) {\n    var q = arr[i]['split']('\\x20');\n    if (q[0x0] == '0')\n        a['push'](q[0x1] - 0x0);\n    else if (q[0x0] == '1')\n        s += a[q[0x1]] - 0x0 + '\\x0a';\n    else\n        a['pop']();\n}\nconsole['log'](s['trim']());", "test_cases": [["8\n0 1\n0 2\n0 3\n2\n0 4\n1 0\n1 1\n1 2", "1\n2\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar Q=arr[0]-0;\nvar a=[];\nvar s=\"\";\nfor(var i=1;i<=Q;i++){\n   var q=arr[i].split(\" \");\n   if(q[0]==\"0\")a.push(q[1]-0);\n   else if(q[0]==\"1\")s+=(a[q[1]]-0)+\"\\n\";\n   else a.pop();\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02470_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var xqfaRh = {\n        'wiObN': function (x, y) {\n            return x < y;\n        },\n        'BplwM': function (x, y) {\n            return x == y;\n        },\n        'uFJOU': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var n = parseInt(input, 0xa);\n    var count = 0x0;\n    for (i = 0x1; xqfaRh['wiObN'](i, n); i++) {\n        if (xqfaRh['BplwM'](xqfaRh['uFJOU'](gcd, n, i), 0x1))\n            count++;\n    }\n    console['log'](count);\n}\nfunction gcd(n, m) {\n    var JLZHXU = {\n        'DpnZJ': function (x, y) {\n            return x == y;\n        },\n        'rbLgx': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var KlNVLw = '1|0|3|2|4'['split']('|');\n    var FpgmAp = 0x0;\n    while (!![]) {\n        switch (KlNVLw[FpgmAp++]) {\n        case '0':\n            a = Math['max'](n, m);\n            continue;\n        case '1':\n            var a, b, c;\n            continue;\n        case '2':\n            c = a % b;\n            continue;\n        case '3':\n            b = Math['min'](n, m);\n            continue;\n        case '4':\n            if (JLZHXU['DpnZJ'](c, 0x0)) {\n                return b;\n            } else {\n                return JLZHXU['rbLgx'](gcd, b, c);\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6", "2"], ["1000000", "400000"]], "original": "function Main(input) {\n    var n = parseInt(input, 10);\n    var count = 0;\n    for (i = 1; i < n; i++) {\n        if (gcd(n, i) == 1) count++;\n    }\n    console.log(count);\n}\n\nfunction gcd(n, m) {\n    var a, b, c;\n    a = Math.max(n, m);\n    b = Math.min(n, m);\n    c = a % b; \n    if (c == 0) {\n        return b;\n    } else {\n        return gcd(b, c);\n    }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02551_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var wvdTco = {\n        'hdBDg': function (callee, param1) {\n            return callee(param1);\n        },\n        'JNmaT': function (callee, param1) {\n            return callee(param1);\n        },\n        'PhmlT': function (x, y) {\n            return x - y;\n        },\n        'QhioD': function (callee, param1) {\n            return callee(param1);\n        },\n        'pSUIR': function (x, y) {\n            return x - y;\n        },\n        'APhwl': function (x, y) {\n            return x * y;\n        },\n        'utUlE': function (x, y) {\n            return x - y;\n        },\n        'xBVCQ': function (x, y) {\n            return x - y;\n        },\n        'ZwfRP': function (x, y) {\n            return x < y;\n        },\n        'CxEHr': function (x, y) {\n            return x + y;\n        },\n        'bpWaN': function (callee, param1) {\n            return callee(param1);\n        },\n        'dKuQN': function (x, y) {\n            return x - y;\n        },\n        'AqfIn': function (x, y) {\n            return x == y;\n        },\n        'ooYrV': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split']('\\x0a');\n    tmp = input[0x0]['split']('\\x20');\n    var N = parseInt(tmp[0x0]);\n    var Q = wvdTco['hdBDg'](parseInt, tmp[0x1]);\n    var minRows = wvdTco['JNmaT'](Array, wvdTco['PhmlT'](N, 0x2));\n    var minCols = wvdTco['QhioD'](Array, wvdTco['pSUIR'](N, 0x2));\n    minRows['fill'](wvdTco['PhmlT'](N, 0x2));\n    minCols['fill'](wvdTco['pSUIR'](N, 0x2));\n    var result = wvdTco['QhioD'](BigInt, wvdTco['APhwl'](wvdTco['utUlE'](N, 0x2), wvdTco['xBVCQ'](N, 0x2)));\n    for (var i = 0x0; wvdTco['ZwfRP'](i, Q); i++) {\n        var query = input[wvdTco['CxEHr'](i, 0x1)]['split']('\\x20');\n        var q_1 = wvdTco['hdBDg'](parseInt, query[0x0]);\n        var q_2 = wvdTco['bpWaN'](parseInt, query[0x1]);\n        var myArray = minRows;\n        var myArray2 = minCols;\n        var index = wvdTco['dKuQN'](q_2, 0x2);\n        var closest = minCols[index];\n        if (wvdTco['AqfIn'](q_1, 0x1)) {\n            myArray = minCols;\n            myArray2 = minRows;\n            closest = minRows[index];\n        }\n        result -= wvdTco['QhioD'](BigInt, closest);\n        for (var j = 0x0; wvdTco['ooYrV'](j, closest); j++) {\n            if (myArray[j] > index)\n                myArray[j] = index;\n        }\n        myArray2[index] = 0x0;\n    }\n    console['log']('%d', wvdTco['hdBDg'](Number, result));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 5\n1 3\n2 3\n1 4\n2 2\n1 2", "1"], ["200000 0", "39999200004"], ["176527 15\n1 81279\n2 22308\n2 133061\n1 80744\n2 44603\n1 170938\n2 139754\n2 15220\n1 172794\n1 159290\n2 156968\n1 56426\n2 77429\n1 97459\n2 71282", "31159505795"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n  // 1行目がinput[0], 2行目がinput[1], …に入る\n  input = input.split(\"\\n\");\n  tmp = input[0].split(\" \");\n  var N = parseInt(tmp[0]);\n  var Q = parseInt(tmp[1]);\n  var minRows = Array(N-2);\n  var minCols = Array(N-2);\n  minRows.fill(N-2);\n  minCols.fill(N-2);\n  var result = BigInt((N-2)*(N-2));\n  for(var i=0; i<Q; i++) {\n    var query = input[i+1].split(\" \");\n    var q_1 = parseInt(query[0]);\n    var q_2 = parseInt(query[1]);\n    var myArray = minRows;\n    var myArray2 = minCols;\n    \n    var index = q_2-2;\n    var closest = minCols[index];\n    if(q_1 == 1) {\n      myArray = minCols;\n      myArray2 = minRows;\n      closest = minRows[index];\n    }\n    result -= BigInt(closest);\n    for(var j=0; j<closest; j++) {\n      if(myArray[j] > index) myArray[j] = index;\n    }\n    myArray2[index] = 0;\n  }\n  //出力\n  console.log(\"%d\", Number(result));\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02618_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(input) {\n    const HpqSRn = {\n        'KGZfe': function (x, y) {\n            return x < y;\n        },\n        'sGdfu': function (x, y) {\n            return x - y;\n        },\n        'pWzFK': function (x, y) {\n            return x > y;\n        },\n        'GXafF': function (x, y) {\n            return x < y;\n        }\n    };\n    const inputRows = input['split']('\\x0a');\n    const d = parseInt(inputRows[0x0]);\n    let cStrArray = inputRows[0x1]['split']('\\x20');\n    const c = cStrArray['map'](str => parseInt(str));\n    let s = [];\n    for (let i = 0x2; i < inputRows['length']; i++) {\n        s['push']([]);\n        const tmpRow = inputRows[i]['split']('\\x20');\n        for (let j = 0x0; HpqSRn['KGZfe'](j, tmpRow['length']); j++) {\n            s[HpqSRn['sGdfu'](i, 0x2)]['push'](parseInt(tmpRow[j]));\n        }\n    }\n    let t = [];\n    for (let i = 0x0; HpqSRn['KGZfe'](i, s['length']); i++) {\n        let tmpMax = s[i][0x0];\n        let index = 0x0;\n        for (let j = 0x1; j < s[i]['length']; j++) {\n            if (HpqSRn['pWzFK'](s[i][j], tmpMax)) {\n                index = j;\n                tmpMax = s[i][j];\n            }\n        }\n        t['push'](index + 0x1);\n    }\n    for (let i = 0x0; HpqSRn['GXafF'](i, t['length']); i++) {\n        console['log'](t[i]);\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nmain(input);", "test_cases": [["5\n86 90 69 51 2 96 71 47 88 34 45 46 89 34 31 38 97 84 41 80 14 4 50 83 7 82\n19771 12979 18912 10432 10544 12928 13403 3047 10527 9740 8100 92 2856 14730 1396 15905 6534 4650 11469 3628 8433 2994 10899 16396 18355 11424\n6674 17707 13855 16407 12232 2886 11908 1705 5000 1537 10440 10711 4917 10770 17272 15364 19277 18094 3929 3705 7169 6159 18683 15410 9092 4570\n6878 4239 19925 1799 375 9563 3445 5658 19857 11401 6997 6498 19933 3848 2426 2146 19745 16880 17773 18359 3921 14172 16730 11157 5439 256\n8633 15862 15303 10749 18499 7792 10317 5901 9395 11433 3514 3959 5202 19850 19469 9790 5653 784 18500 10552 17975 16615 7852 197 8471 7452\n19855 17918 7990 10572 4333 438 9140 9104 12622 4985 12319 4028 19922 12132 16259 17476 2976 547 19195 19830 16285 4806 4471 9457 2864 2192", "1\n17\n13\n14\n13"]], "original": "'use strict'\n\nfunction main(input) {\n  const inputRows = input.split('\\n');\n  const d = parseInt(inputRows[0])\n  let cStrArray = inputRows[1].split(' ')\n  const c = cStrArray.map(str => parseInt(str))\n  let s = []\n  for (let i = 2; i < inputRows.length; i++) {\n    s.push([])\n    const tmpRow = inputRows[i].split(' ')\n    for (let j = 0; j < tmpRow.length; j++) {\n      s[i - 2].push(parseInt(tmpRow[j]))\n    }\n  }\n\n  let t = []\n\n  for (let i = 0; i < s.length; i++) {\n    let tmpMax = s[i][0]\n    let index = 0\n    for (let j = 1; j < s[i].length; j++) {\n      if (s[i][j] > tmpMax) {\n        index = j\n        tmpMax = s[i][j]\n      }\n    }\n    t.push(index + 1)\n  }\n\n\n  // output\n  for (let i = 0; i < t.length; i++) {\n    console.log(t[i])\n  }\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nmain(input)", "language": "JavaScript"}
{"filename": "p02652_1", "type": "JavaScript", "obfuscated": "function Main(str) {\n    const kpNNFj = {\n        'qsxln': function (x, y) {\n            return x < y;\n        },\n        'ITVYv': function (x, y) {\n            return x === y;\n        },\n        'LCIYx': function (x, y) {\n            return x === y;\n        }\n    };\n    let zero = 0x0;\n    let one = 0x0;\n    for (let i = 0x0; kpNNFj['qsxln'](i, str['length']); i++) {\n        if (kpNNFj['ITVYv'](str[i], '1')) {\n            one++;\n        } else if (kpNNFj['LCIYx'](str[i], '0')) {\n            zero++;\n        }\n    }\n    console['log'](Math['abs'](one - zero));\n}\nlet input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nMain(input);", "test_cases": [["0??", "1"], ["0??0", "2"], ["??00????0??0????0?0??00??1???11?1?1???1?11?111???1", "4"]], "original": "function Main(str) {\n  \tlet zero = 0;\n  \tlet one = 0;\n  \tfor(let i=0;i<str.length;i++) {\n    \tif(str[i] === '1') {\n        \tone++;\n        } else if(str[i] === '0') {\n        \tzero++;\n        }\n    }\n  \n  \tconsole.log(Math.abs(one - zero));\n}\n\nlet input = require('fs').readFileSync('/dev/stdin', 'utf8');\nMain(input);\n", "language": "JavaScript"}
{"filename": "p02856_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const RQpdVC = {\n        'dfweS': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'GHMNw': function (x, y) {\n            return x < y;\n        },\n        'FZWhv': function (x, y) {\n            return x * y;\n        },\n        'urDiP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'BFQyP': function (x, y) {\n            return x + y;\n        },\n        'MnAVw': function (x, y) {\n            return x + y;\n        },\n        'wiUEs': function (x, y) {\n            return x / y;\n        },\n        'khINs': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a')['map'](function (x) {\n        return x['split']('\\x20');\n    });\n    let M = RQpdVC['dfweS'](parseInt, input[0x0][0x0], 0xa);\n    let ans = -0x1;\n    let tmp = 0x0;\n    for (let i = 0x0; RQpdVC['GHMNw'](i, M); i++) {\n        ans += RQpdVC['dfweS'](parseInt, input[i + 0x1][0x1], 0xa);\n        tmp += RQpdVC['FZWhv'](RQpdVC['urDiP'](parseInt, input[RQpdVC['BFQyP'](i, 0x1)][0x0], 0xa), parseInt(input[RQpdVC['MnAVw'](i, 0x1)][0x1], 0xa));\n    }\n    ans += Math['floor'](RQpdVC['wiUEs'](RQpdVC['khINs'](tmp, 0x1), 0x9));\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n2 2\n9 1", "3"], ["3\n1 1\n0 8\n7 1", "9"]], "original": "function Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tlet M = parseInt(input[0][0], 10);\n\tlet ans = -1;\n\tlet tmp = 0;\n\tfor (let i = 0; i < M; i++){\n\t\tans += parseInt(input[i + 1][1],10);\n\t\ttmp += parseInt(input[i + 1][0],10) * parseInt(input[i + 1][1],10);\n\t}\n\tans += Math.floor((tmp - 1) / 9);\n\tconsole.log(ans);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n", "language": "JavaScript"}
{"filename": "p02897_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var llkFVO = {\n        'HcYgr': function (x, y) {\n            return x == y;\n        },\n        'ksXPr': function (callee, param1) {\n            return callee(param1);\n        },\n        'yegJk': function (x, y) {\n            return x / y;\n        },\n        'fJshe': function (x, y) {\n            return x + y;\n        },\n        'rRhZc': function (x, y) {\n            return x / y;\n        }\n    };\n    var Gusu = 0x0;\n    var Kisu = 0x0;\n    var Out = 0x0;\n    if (input > 0x0) {\n        if (llkFVO['HcYgr'](input % 0x2, 0x0)) {\n            Gusu = input / 0x2;\n            Kisu = Gusu;\n            Out = Kisu / input;\n        } else if (llkFVO['HcYgr'](input % 0x2, 0x1)) {\n            Gusu = llkFVO['ksXPr'](parseInt, llkFVO['yegJk'](input, 0x2));\n            Kisu = llkFVO['fJshe'](Gusu, 0x1);\n            Out = llkFVO['rRhZc'](Kisu, input);\n        }\n    }\n    console['log'](Out['toFixed'](0xa));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4", "0.5000000000"], ["5", "0.6000000000"], ["1", "1.0000000000"]], "original": "function main(input){\n  var Gusu = 0;//偶数の個数\n  var Kisu = 0;//奇数の個数\n  var Out = 0;//出力\n  if(input > 0){\n  \tif(input % 2 == 0){\n      Gusu = input / 2;\n      Kisu = Gusu;\n      Out = Kisu/input;\n  \t}\n    else if(input % 2 == 1){\n      Gusu = parseInt(input / 2);\n      Kisu = Gusu+1;\n      Out = Kisu/input;\n  \t}\n  }\n  console.log(Out.toFixed(10));\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03001_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var uhcaVO = {\n        'SNWjF': '1|7|11|3|19|2|18|5|12|13|14|9|16|17|15|4|6|0|10|8',\n        'UlXyM': function (x, y) {\n            return x > y;\n        },\n        'uTMux': function (x, y) {\n            return x + y;\n        },\n        'BKodc': function (x, y) {\n            return x == y;\n        },\n        'tJgTa': function (x, y) {\n            return x * y;\n        },\n        'bENft': function (x, y) {\n            return x & y;\n        },\n        'NyFTy': function (x, y) {\n            return x / y;\n        }\n    };\n    var YhZmBz = uhcaVO['SNWjF']['split']('|');\n    var DwIjLA = 0x0;\n    while (!![]) {\n        switch (YhZmBz[DwIjLA++]) {\n        case '0':\n            if (a < b) {\n                reault = b;\n            }\n            continue;\n        case '1':\n            var input = input['split']('\\x0a');\n            continue;\n        case '2':\n            var y = arya[0x3];\n            continue;\n        case '3':\n            var h = arya[0x1];\n            continue;\n        case '4':\n            if (uhcaVO['UlXyM'](b1, b2)) {\n                b = b2;\n            }\n            continue;\n        case '5':\n            var a1 = x * h;\n            continue;\n        case '6':\n            var reault = a;\n            continue;\n        case '7':\n            var arya = input[0x0]['split']('\\x20')['map'](val => parseInt(val, 0xa))['slice'](0x0, 0x4);\n            continue;\n        case '8':\n            console['log'](uhcaVO['uTMux'](reault['toFixed'](0x6), '\\x20') + counter);\n            continue;\n        case '9':\n            var a = a1;\n            continue;\n        case '10':\n            if (uhcaVO['BKodc'](a, b)) {\n                var counter = 0x1;\n            }\n            continue;\n        case '11':\n            var w = arya[0x0];\n            continue;\n        case '12':\n            var a2 = uhcaVO['tJgTa'](w - x, h);\n            continue;\n        case '13':\n            var b1 = uhcaVO['tJgTa'](y, w);\n            continue;\n        case '14':\n            var b2 = uhcaVO['tJgTa'](h - y, w);\n            continue;\n        case '15':\n            if (uhcaVO['UlXyM'](a1, a2)) {\n                a = a2;\n            }\n            continue;\n        case '16':\n            var b = b1;\n            continue;\n        case '17':\n            var counter = 0x0;\n            continue;\n        case '18':\n            if (uhcaVO['bENft'](uhcaVO['BKodc'](x, 0x0), uhcaVO['BKodc'](y, 0x0)) || uhcaVO['BKodc'](x, w) && uhcaVO['BKodc'](y, h)) {\n                console['log'](uhcaVO['uTMux'](uhcaVO['NyFTy'](uhcaVO['tJgTa'](w, h), 0x2)['toFixed'](0x6), '\\x200'));\n                return !![];\n            }\n            continue;\n        case '19':\n            var x = arya[0x2];\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 1 2", "3.000000 0"], ["2 2 1 1", "2.000000 1"]], "original": "function Main(input) {\n\n  var input = input.split(\"\\n\");\n  var arya = input[0].split(\" \").map(val => parseInt(val, 10)).slice(0, 4);\n  var w = arya[0];\n  var h = arya[1];\n  var x = arya[2];\n  var y = arya[3];\n\n  if(x == 0 & y == 0 || x == w && y == h){\n    console.log((w*h/2).toFixed(6) + \" 0\");\n    return true;\n  }\n\n\n\n  var a1 = x*h;\n  var a2 = (w - x)*h;\n  var b1 = y*w;\n  var b2 = (h - y)*w;\n  var a = a1;\n  var b = b1;\n  var counter = 0;\n\n  if(a1 > a2){\n    a = a2;\n  }\n\n  if(b1 > b2){\n    b = b2;\n  }\n\n  var reault = a;\n  if(a < b) {\n    reault = b;\n  }\n\n  if(a == b) {\n    var counter = 1;\n  }\n\n\n  console.log(reault.toFixed(6) + \" \" + counter);\n\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03174_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const WZkAKV = {\n        'WOXBV': function (x, y) {\n            return x < y;\n        },\n        'ZNBmD': function (x, y) {\n            return x > y;\n        },\n        'zTrBH': function (x, y) {\n            return x & y;\n        },\n        'UnZvu': function (x, y) {\n            return x + y;\n        },\n        'BilIr': function (x, y) {\n            return x + y;\n        },\n        'lUaoG': function (x, y) {\n            return x + y;\n        },\n        'uEPoO': function (x, y) {\n            return x + y;\n        },\n        'fQDEp': function (x, y) {\n            return x < y;\n        },\n        'CtvvS': function (x, y) {\n            return x - y;\n        },\n        'ZoOPF': function (x, y) {\n            return x % y;\n        }\n    };\n    input = input['trim']()['split'](/\\n/);\n    const N = input['shift']() - 0x0;\n    const M = Math['pow'](0x2, N);\n    const K = WZkAKV['lUaoG'](Math['pow'](0xa, 0x9), 0x7);\n    input = input['map'](str => str['split'](/\\s+/)['map'](x => x === '1'));\n    const Match = input;\n    const dp = new Array(N)['fill'](0x0)['map']((x, j) => new Object());\n    dp[-0x1] = { 0x0: 0x1 };\n    const p = new Array(N)['fill'](0x0)['map']((x, i) => 0x1 << i);\n    for (let i = -0x1; WZkAKV['fQDEp'](i, WZkAKV['CtvvS'](N, 0x1)); i++) {\n        Object['keys'](dp[i])['forEach'](function (J) {\n            J = J - 0x0;\n            dp[i][J] %= K;\n            for (let j = 0x0; WZkAKV['WOXBV'](j, N); j++) {\n                if (WZkAKV['ZNBmD'](WZkAKV['zTrBH'](J, p[j]), 0x0))\n                    continue;\n                if (Match[WZkAKV['UnZvu'](i, 0x1)][j])\n                    dp[WZkAKV['BilIr'](i, 0x1)][WZkAKV['lUaoG'](J, p[j])] = WZkAKV['uEPoO'](dp[i + 0x1][J + p[j]] || 0x0, dp[i][J]);\n            }\n        });\n    }\n    console['log'](WZkAKV['ZoOPF'](dp[N - 0x1][M - 0x1] || 0x0, K));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\n0 1 1\n1 0 1\n1 1 1", "3"], ["4\n0 1 0 0\n0 0 0 1\n1 0 0 0\n0 0 1 0", "1"], ["1\n0", "0"], ["21\n0 0 0 0 0 0 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1\n1 1 1 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 1 1 0\n0 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 0 0 1 1\n0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 1 1 0\n1 1 0 0 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 0 0 1\n0 1 0 0 0 1 0 1 0 0 0 1 1 1 0 0 1 1 0 1 0\n0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1\n0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 0 1 1 1\n0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 0 1\n0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 1 0 1 1 0\n0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1\n0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 1 0 1 0 1 1\n1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 0 1\n0 0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1\n1 0 1 1 0 1 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0\n0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1\n0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1\n0 0 0 0 1 1 1 0 1 0 1 1 1 0 1 1 0 0 1 1 0\n1 1 0 1 1 0 0 1 1 0 1 1 0 1 1 1 1 1 0 1 0\n1 0 0 1 1 0 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0", "102515160"]], "original": "'use strict';\nfunction Main(input){\n  input=input.trim().split(/\\n/);\n  const N=input.shift()-0;\n  const M=Math.pow(2,N);\n  const K=Math.pow(10,9)+7;\n  input=input.map(str=>str.split(/\\s+/).map(x=>x==='1'));\n  const Match=input;\n  \n  const dp=new Array(N).fill(0).map((x,j)=>new Object);\n  dp[-1]={0:1,};\n  \n  const p=new Array(N).fill(0).map((x,i)=>(1<<i));\n  \n  /*\n    男N-1から降順に売れてゆく場合を考える。\n    dp[i][j]で男0~iと「女i+1人の組み合わせのうちj番目」が残っているとき、\n    残りのマッチングの場合の数。\n  */\n  \n  for(let i=-1;i<N-1;i++){\n    Object.keys(dp[i]).forEach(function(J){\n      J=J-0;\n      dp[i][J]%=K;\n      for(let j=0;j<N;j++){\n        if((J&p[j])>0)continue;\n        if(Match[i+1][j])\n          dp[i+1][J+p[j]]=(dp[i+1][J+p[j]]||0)+dp[i][J];\n      }\n    });\n  }\n  console.log((dp[N-1][M-1]||0)%K);\n}\n\nMain(require('fs').readFileSync('/dev/stdin','utf8'));\n", "language": "JavaScript"}
{"filename": "p03336_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const nsrLcO = {\n        'igTnz': function (callee, param1) {\n            return callee(param1);\n        },\n        'nQkCX': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'tPzGt': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'hlhFQ': function (x, y) {\n            return x < y;\n        },\n        'erLPZ': function (x, y) {\n            return x & y;\n        },\n        'MIZkS': function (x, y) {\n            return x + y;\n        },\n        'bryoR': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    const row1 = input[0x0]['split']('\\x20');\n    const N = nsrLcO['igTnz'](parseInt, row1[0x0]);\n    const M = parseInt(row1[0x1]);\n    const K = nsrLcO['igTnz'](parseInt, row1[0x2]);\n    var S = nsrLcO['nQkCX'](parseInt, input[0x1], 0x2);\n    var T = nsrLcO['tPzGt'](parseInt, input[0x2], 0x2);\n    for (var i = 0x0; nsrLcO['hlhFQ'](i, K); i++) {\n        var sANDt = nsrLcO['erLPZ'](S, T);\n        S = nsrLcO['MIZkS'](S, sANDt);\n        T = T + sANDt;\n    }\n    const sBinary = nsrLcO['igTnz'](toBinary, S);\n    const tBinary = nsrLcO['bryoR'](toBinary, T);\n    console['log'](sBinary);\n    console['log'](tBinary);\n}\nfunction toBinary(a) {\n    const lPIdNa = {\n        'yoDUI': function (x, y) {\n            return x > y;\n        },\n        'DQLwD': function (x, y) {\n            return x + y;\n        },\n        'SBXXc': function (x, y) {\n            return x % y;\n        },\n        'RoNCO': function (x, y) {\n            return x / y;\n        }\n    };\n    var num = a, binary = '';\n    while (lPIdNa['yoDUI'](num, 0x0)) {\n        binary = lPIdNa['DQLwD'](lPIdNa['SBXXc'](num, 0x2), binary);\n        num = Math['floor'](lPIdNa['RoNCO'](num, 0x2));\n    }\n    return binary;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3 3\n11\n101", "10000\n10010"], ["5 8 3\n10101\n10101001", "100000\n10110100"], ["10 10 10\n1100110011\n1011001101", "10000100000010001000\n10000100000000100010"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\tinput = input.split(\"\\n\");\n  \tconst row1 = input[0].split(\" \");\n  \tconst N = parseInt(row1[0]);\n  const M = parseInt(row1[1]);\n  const K = parseInt(row1[2]);\n  var S = parseInt(input[1],2);\n  var T = parseInt(input[2],2);\n  for(var i=0; i < K; i++){\n    var sANDt = S & T;\n    S = S + sANDt;\n    T = T + sANDt;\n  }\n  const sBinary = toBinary(S);\n  const tBinary = toBinary(T);\n  console.log(sBinary);\n  console.log(tBinary);\n  \n }\n\nfunction toBinary( a ){ \n  var num = a, binary = ''; \n  while ( num > 0 ) { \n    binary = ( num % 2 ) + binary; \n    num = Math.floor( num / 2 ); \n  } \n  return binary; \n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03481_1", "type": "JavaScript", "obfuscated": "'use strict';\nconst input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x20')['map'](x => x * 0x1);\nlet ans = 0x0;\nlet max = input[0x1];\nlet div = input[0x0];\nlet tmpNum = div;\nwhile (tmpNum < max + 0x1) {\n    tmpNum *= 0x2;\n    ans++;\n}\nconsole['log'](ans);", "test_cases": [["3 20", "3"], ["25 100", "3"], ["314159265 358979323846264338", "31"]], "original": "'use strict';\n\nconst input = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split(' ').map(x => x*1);\nlet ans = 0;\nlet max = input[1];\nlet div = input[0];\nlet tmpNum = div;\nwhile(tmpNum < max+1){\n  tmpNum *= 2;\n  ans++;\t\n}\n\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p03551_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var AbWKDq = {\n        'sKpRy': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return AbWKDq['sKpRy'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var cnQDpT = {\n        'UnJQG': function (x, y) {\n            return x + y;\n        },\n        'pTfcf': 'Array(a[',\n        'MmvDM': ']).fill().map(x=>{return\\x20',\n        'tCTAR': function (x, y) {\n            return x + y;\n        },\n        'sPplK': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = cnQDpT['UnJQG'](cnQDpT['UnJQG'](cnQDpT['pTfcf'], --l), cnQDpT['MmvDM']) + v + ';})';\n    while (--l)\n        r = cnQDpT['UnJQG'](cnQDpT['tCTAR'](cnQDpT['pTfcf'], l) + ']).fill().map(x=>', r) + ')';\n    return cnQDpT['sPplK'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var mqrcTd = {\n        'rqAhP': function (callee) {\n            return callee();\n        },\n        'PamtI': function (x, y) {\n            return x + y;\n        },\n        'RQLzF': function (x, y) {\n            return x * y;\n        },\n        'oARak': function (x, y) {\n            return x << y;\n        }\n    };\n    var n = next();\n    var m = mqrcTd['rqAhP'](next);\n    var ans = mqrcTd['PamtI'](mqrcTd['RQLzF'](m, 0x708), n * 0x64);\n    return mqrcTd['oARak'](ans, m);\n}", "test_cases": [["1 1", "3800"], ["10 2", "18400"], ["100 5", "608000"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var m = next();\n  var ans = m*1800 + n*100;\n  return ans << m;\n}", "language": "JavaScript"}
{"filename": "p03618_1", "type": "JavaScript", "obfuscated": "main();\nfunction main() {\n    var JOcgBl = {\n        'lHVpc': '5|4|0|2|3|1',\n        'dzRWI': 'close',\n        'WAPIb': 'line',\n        'MtjwY': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var QlozDZ = JOcgBl['lHVpc']['split']('|');\n    var bwVgcF = 0x0;\n    while (!![]) {\n        switch (QlozDZ[bwVgcF++]) {\n        case '0':\n            var reader = readline['createInterface']({\n                'input': process['stdin'],\n                'output': process['stdout']\n            });\n            continue;\n        case '1':\n            reader['on'](JOcgBl['dzRWI'], function () {\n                console['log'](NnCQrv['mPCfo'](countSequencePattern, lines[0x0]));\n            });\n            continue;\n        case '2':\n            var lines = [];\n            continue;\n        case '3':\n            reader['on'](JOcgBl['WAPIb'], function (line) {\n                lines['push'](line);\n            });\n            continue;\n        case '4':\n            var readline = require('readline');\n            continue;\n        case '5':\n            var NnCQrv = {\n                'mPCfo': function (callee, param1) {\n                    return JOcgBl['MtjwY'](callee, param1);\n                }\n            };\n            continue;\n        }\n        break;\n    }\n}\nfunction countSequencePattern(str) {\n    var kujmeE = {\n        'ydXrj': function (x, y) {\n            return x < y;\n        },\n        'ddKLq': function (x, y) {\n            return x != y;\n        }\n    };\n    var numberOfPattern = 0x1;\n    var characters = str['split']('');\n    for (var i = 0x0; kujmeE['ydXrj'](i, characters['length']); i++) {\n        for (var j = i; j < characters['length']; j++) {\n            if (kujmeE['ddKLq'](characters[i], characters[j]))\n                numberOfPattern++;\n        }\n    }\n    return numberOfPattern;\n}", "test_cases": [["aatt", "5"], ["xxxxxxxxxx", "1"], ["abracadabra", "44"]], "original": "main();\n\nfunction main() {\n  var readline = require('readline');\n  var reader = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n  });\n  var lines = [];\n  reader.on('line', function (line) {\n    lines.push(line);\n  });\n  reader.on('close', function () {\n    console.log(countSequencePattern(lines[0]));\n  });\n\n}\n\nfunction countSequencePattern(str) {\n  var numberOfPattern = 1;\n  var characters = str.split(\"\");\n  for (var i = 0; i < characters.length; i++) {\n    for (var j = i; j < characters.length; j++) {\n      if (characters[i] != characters[j]) numberOfPattern++;\n    }\n  }\n  return numberOfPattern;\n}\n", "language": "JavaScript"}
{"filename": "p03786_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const IHdwHK = {\n        'IxMtS': function (x, y) {\n            return x < y;\n        },\n        'yodXE': function (x, y) {\n            return x >= y;\n        },\n        'gHszH': function (x, y) {\n            return x * y;\n        },\n        'ugBtF': function (x, y) {\n            return x + y;\n        },\n        'TWLSJ': function (x, y) {\n            return x - y;\n        },\n        'GgOPR': function (x, y) {\n            return x + y;\n        }\n    };\n    const [[N], A] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    A['sort']((a, b) => a - b);\n    let sum = A[0x0], n = 0x0;\n    for (let i = 0x1; IHdwHK['IxMtS'](i, N); i++) {\n        if (IHdwHK['yodXE'](IHdwHK['gHszH'](sum, 0x2), A[i]))\n            n++;\n        else\n            n = 0x0;\n        if (IHdwHK['yodXE'](IHdwHK['ugBtF'](sum, A[i]), 0x3b9aca00))\n            return '' + IHdwHK['TWLSJ'](IHdwHK['ugBtF'](n, N), i);\n        sum = IHdwHK['ugBtF'](sum, A[i]);\n    }\n    return '' + IHdwHK['GgOPR'](n, 0x1);\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n3 1 4", "2"], ["5\n1 1 1 1 1", "5"], ["6\n40 1 30 2 7 20", "4"]], "original": "console.log((args=>{\n  const [[N],A] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0) );\n  A.sort((a,b)=>a-b);\n  let sum = A[0], n = 0;\n  for ( let i = 1; i < N; i++ ) {\n    if ( sum * 2 >= A[i] ) n++;\n    else n = 0;\n    if ( sum + A[i] >= 1e9 ) return `${n+N-i}`;\n    sum = sum + A[i];\n  }\n  return `${n+1}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03831_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var fYIHig = {\n        'FhUPt': '0|1|8|3|7|2|5|4|6',\n        'sQxzs': function (callee, param1) {\n            return callee(param1);\n        },\n        'mVbcO': function (x, y) {\n            return x < y;\n        },\n        'ykeKb': function (x, y) {\n            return x - y;\n        },\n        'Xlgqt': function (x, y) {\n            return x * y;\n        },\n        'mjhzB': function (x, y) {\n            return x - y;\n        },\n        'dcMMk': function (x, y) {\n            return x + y;\n        },\n        'OQHrc': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var MFktaE = fYIHig['FhUPt']['split']('|');\n    var LnnxKF = 0x0;\n    while (!![]) {\n        switch (MFktaE[LnnxKF++]) {\n        case '0':\n            var lines = input['split']('\\x0a');\n            continue;\n        case '1':\n            var line0 = lines[0x0]['split']('\\x20');\n            continue;\n        case '2':\n            var x = lines[0x1]['split']('\\x20')['map'](t => parseInt(t));\n            continue;\n        case '3':\n            var a = fYIHig['sQxzs'](parseInt, line0[0x1]);\n            continue;\n        case '4':\n            for (var i = 0x0; fYIHig['mVbcO'](i, fYIHig['ykeKb'](n, 0x1)); i++) {\n                ans += Math['min'](fYIHig['Xlgqt'](a, fYIHig['mjhzB'](x[fYIHig['dcMMk'](i, 0x1)], x[i])), b);\n            }\n            continue;\n        case '5':\n            var ans = 0x0;\n            continue;\n        case '6':\n            console['log'](ans);\n            continue;\n        case '7':\n            var b = fYIHig['OQHrc'](parseInt, line0[0x2]);\n            continue;\n        case '8':\n            var n = parseInt(line0[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 2 5\n1 2 5 7", "11"], ["7 1 100\n40 43 45 105 108 115 124", "84"], ["7 1 2\n24 35 40 68 72 99 103", "12"]], "original": "function main(input) {\n    var lines = input.split('\\n');\n    var line0 = lines[0].split(' ');\n    var n = parseInt(line0[0]);\n    var a = parseInt(line0[1]);\n    var b = parseInt(line0[2]);\n    var x = lines[1].split(' ').map(t => parseInt(t));\n\n    var ans = 0;\n    for (var i = 0; i < n - 1; i++) {\n        ans += Math.min(a * (x[i + 1] - x[i]), b);\n    }\n    console.log(ans);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04021_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var OvDQNI = {\n        'HLslr': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return OvDQNI['HLslr'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var LlDUKh = {\n        'jHMeI': function (x, y) {\n            return x + y;\n        },\n        'aojRY': function (x, y) {\n            return x + y;\n        },\n        'dhAJX': 'Array(a[',\n        'evrGt': ']).fill().map(x=>{return\\x20',\n        'oVhzS': function (x, y) {\n            return x + y;\n        },\n        'dgepf': ']).fill().map(x=>',\n        'dVxgr': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = LlDUKh['jHMeI'](LlDUKh['jHMeI'](LlDUKh['aojRY'](LlDUKh['dhAJX'], --l) + LlDUKh['evrGt'], v), ';})');\n    while (--l)\n        r = LlDUKh['aojRY'](LlDUKh['jHMeI'](LlDUKh['oVhzS'](LlDUKh['dhAJX'] + l, LlDUKh['dgepf']), r), ')');\n    return LlDUKh['dVxgr'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var fMgdeX = {\n        'ChgDV': '6|5|2|3|1|4|0',\n        'QVjkA': function (callee) {\n            return callee();\n        },\n        'lGsLu': function (x, y) {\n            return x & y;\n        },\n        'wLxmj': function (x, y) {\n            return x === y;\n        },\n        'hEzTy': function (callee) {\n            return callee();\n        }\n    };\n    var oUNYuJ = fMgdeX['ChgDV']['split']('|');\n    var YfesjU = 0x0;\n    while (!![]) {\n        switch (oUNYuJ[YfesjU++]) {\n        case '0':\n            return ans;\n        case '1':\n            var ans = 0x0;\n            continue;\n        case '2':\n            for (var i = 0x0; i < n; i++) {\n                a['push']([\n                    fMgdeX['QVjkA'](next),\n                    fMgdeX['lGsLu'](i, 0x1)\n                ]);\n            }\n            continue;\n        case '3':\n            a['sort']((a, b) => a[0x0] - b[0x0]);\n            continue;\n        case '4':\n            for (var i = 0x0; i < n; i += 0x2)\n                if (fMgdeX['wLxmj'](a[i][0x1], 0x1))\n                    ans++;\n            continue;\n        case '5':\n            var a = [];\n            continue;\n        case '6':\n            var n = fMgdeX['hEzTy'](next);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["4\n2\n4\n3\n1", "1"], ["5\n10\n8\n5\n3\n2", "0"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var a = [];\n  for(var i = 0; i < n; i++){\n    a.push([next(),i&1]);\n  }\n  a.sort((a,b)=>a[0]-b[0]);\n  var ans = 0;\n  for(var i = 0; i < n; i+=2)if(a[i][1] === 1)ans++;\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p00061_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a0,0\\x0a');\nvar inputA = Arr[0x0]['split']('\\x0a');\nvar inputB = Arr[0x1]['split']('\\x0a')['map'](Number);\nvar obj = {};\nvar s = [];\ninputA['forEach'](function (v) {\n    var arr = v['split'](',')['map'](Number);\n    obj[arr[0x0]] = arr[0x1];\n    s['push'](arr[0x1]);\n});\ns['sort'](function (a, b) {\n    return b - a;\n});\nvar s0 = s[0x0];\nvar t = [s0];\nfor (var i = 0x1; i < s['length']; i++) {\n    if (s0 == s[i])\n        continue;\n    s0 = s[i];\n    t['push'](s[i]);\n}\ninputB['forEach'](function (v) {\n    console['log'](t['indexOf'](obj[v]) + 0x1);\n});", "test_cases": [["1,20\n2,20\n3,30\n4,10\n5,10\n6,20\n0,0\n1\n2\n4\n5", "2\n2\n3\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n0,0\\n\");\nvar inputA=Arr[0].split(\"\\n\");\nvar inputB=Arr[1].split(\"\\n\").map(Number);\n\nvar obj={};\nvar s=[];\n\ninputA.forEach(function(v){\nvar arr=v.split(\",\").map(Number);\nobj[arr[0]]=arr[1];\ns.push(arr[1]);\n});\n\ns.sort(function(a,b){return b-a;});\n\nvar s0=s[0];\nvar t=[s0];\nfor(var i=1;i<s.length;i++){\nif(s0==s[i])continue;\ns0=s[i];\nt.push(s[i]);\n}\n\ninputB.forEach(function(v){\nconsole.log(t.indexOf(obj[v])+1);\n});", "language": "JavaScript"}
{"filename": "p00071_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var FBhBSI = {\n        'brESX': function (x, y) {\n            return x < y;\n        },\n        'xNHMq': function (x, y) {\n            return x <= y;\n        },\n        'VfUHz': function (x, y) {\n            return x + y;\n        },\n        'TmJrp': function (x, y) {\n            return x * y;\n        },\n        'aRTVY': function (x, y) {\n            return x * y;\n        },\n        'XiJod': function (x, y) {\n            return x >= y;\n        },\n        'zNgIg': function (x, y) {\n            return x >= y;\n        },\n        'VtINA': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    for (var i = 0x0; FBhBSI['brESX'](i, 0x4); i++) {\n        for (var j = 0x1; FBhBSI['xNHMq'](j, 0x3); j++) {\n            var yy = FBhBSI['VfUHz'](y, FBhBSI['TmJrp'](dy[i], j));\n            var xx = FBhBSI['VfUHz'](x, FBhBSI['aRTVY'](dx[i], j));\n            if (FBhBSI['brESX'](yy, 0x0) || FBhBSI['XiJod'](yy, 0x8) || FBhBSI['brESX'](xx, 0x0) || FBhBSI['zNgIg'](xx, 0x8))\n                continue;\n            if (yx[yy][xx] == 0x1) {\n                yx[yy][xx] = 0x0;\n                FBhBSI['VtINA'](bomb, yy, xx);\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar AL = Arr['shift']();\nfor (var i = 0x0; i < AL; i++) {\n    var lAXnIb = '6|5|0|7|1|3|4|2'['split']('|');\n    var qZPzsg = 0x0;\n    while (!![]) {\n        switch (lAXnIb[qZPzsg++]) {\n        case '0':\n            for (var j = 0x0; j < 0x8; j++) {\n                var line = Arr['shift']()['split']('')['map'](Number);\n                yx['push'](line);\n            }\n            continue;\n        case '1':\n            var Y = Arr['shift']() - 0x0 - 0x1;\n            continue;\n        case '2':\n            for (var j = 0x0; j < 0x8; j++)\n                console['log'](yx[j]['join'](''));\n            continue;\n        case '3':\n            if (yx[Y][X] == 0x1) {\n                yx[Y][X] = 0x0;\n                bomb(Y, X);\n            }\n            continue;\n        case '4':\n            console['log']('Data\\x20' + (i + 0x1) + ':');\n            continue;\n        case '5':\n            var yx = [];\n            continue;\n        case '6':\n            Arr['shift']();\n            continue;\n        case '7':\n            var X = Arr['shift']() - 0x0 - 0x1;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n\n00010010\n00000100\n10001001\n00100010\n01000000\n00001000\n10100010\n01010010\n2\n5\n\n00010010\n00000100\n10001001\n00100010\n01000000\n00001000\n10100010\n01010010\n2\n5", "Data 1:\n00000000\n00000100\n10001001\n00100000\n00000000\n00001000\n10100000\n00000000\nData 2:\n00000000\n00000100\n10001001\n00100000\n00000000\n00001000\n10100000\n00000000"]], "original": "function bomb(y,x){\n   var dx=[-1,1,0,0];\n   var dy=[0,0,-1,1];\n   for(var i=0;i<4;i++){\n      for(var j=1;j<=3;j++){\n         var yy=y+(dy[i]*j);\n         var xx=x+(dx[i]*j);\n         if(yy<0 || yy>=8 || xx<0 || xx>=8)continue;\n         if(yx[yy][xx]==1){yx[yy][xx]=0;bomb(yy,xx);}\n      }\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar AL=Arr.shift();\nfor(var i=0;i<AL;i++){\n   Arr.shift();\n   var yx=[];\n   for(var j=0;j<8;j++){\n      var line=Arr.shift().split(\"\").map(Number);\n      yx.push(line);\n   }\n   var X=(Arr.shift()-0)-1;\n   var Y=(Arr.shift()-0)-1;\n   if(yx[Y][X]==1){yx[Y][X]=0;bomb(Y,X);}\n   console.log(\"Data \"+(i+1)+\":\");\n   for(var j=0;j<8;j++)console.log(yx[j].join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00072_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var m = Arr['shift']() - 0x0;\n    var N = [];\n    for (var i = 0x0; i < n; i++) {\n        N[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            N[i][j] = Infinity;\n            if (i == j)\n                N[i][j] = 0x0;\n        }\n    }\n    var arr = [];\n    for (var i = 0x0; i < m; i++) {\n        var kruwxH = '1|3|2|4|0|5'['split']('|');\n        var mfDrmn = 0x0;\n        while (!![]) {\n            switch (kruwxH[mfDrmn++]) {\n            case '0':\n                N[a][b] = c;\n                continue;\n            case '1':\n                var abc = Arr['shift']()['split'](',')['map'](Number);\n                continue;\n            case '2':\n                var b = abc[0x1];\n                continue;\n            case '3':\n                var a = abc[0x0];\n                continue;\n            case '4':\n                var c = abc[0x2] / 0x64;\n                continue;\n            case '5':\n                N[b][a] = c;\n                continue;\n            }\n            break;\n        }\n    }\n    var city = [0x0];\n    var cost = 0x0;\n    while (!![]) {\n        if (city['length'] == n)\n            break;\n        var min = Infinity;\n        var select = -0x1;\n        for (var i = 0x0; i < city['length']; i++) {\n            for (var j = 0x0; j < n; j++) {\n                if (city['indexOf'](j) != -0x1)\n                    continue;\n                if (N[city[i]][j] < min) {\n                    select = j;\n                    min = N[city[i]][j] - 0x1;\n                }\n            }\n        }\n        if (select != -0x1) {\n            cost += min;\n            city['push'](select);\n        }\n    }\n    console['log'](cost);\n}", "test_cases": [["4\n4\n0,1,1500\n0,2,2000\n1,2,600\n1,3,500\n0", "23"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\nvar n=Arr.shift()-0;\nif(n==0)break;\nvar m=Arr.shift()-0;\nvar N=[];\nfor(var i=0;i<n;i++){\n   N[i]=[];\n   for(var j=0;j<n;j++){\n      N[i][j]=Infinity;\n      if(i==j)N[i][j]=0;\n   }\n}\nvar arr=[];\nfor(var i=0;i<m;i++){\n   var abc=Arr.shift().split(\",\").map(Number);\n   var a=abc[0];\n   var b=abc[1];\n   var c=abc[2]/100;\n   N[a][b]=c;\n   N[b][a]=c;\n}\nvar city=[0];\nvar cost=0;\nwhile(true){\n   if(city.length==n)break;\n   var min=Infinity;\n   var select=-1;\n   for(var i=0;i<city.length;i++){\n      for(var j=0;j<n;j++){\n         if(city.indexOf(j)!=-1)continue;\n         if(N[city[i]][j]<min){\n            select=j;\n            min=N[city[i]][j]-1;\n         }\n      }\n   }\n   if(select!=-1){\n      cost+=min;\n      city.push(select);\n   }\n}\nconsole.log(cost);\n}", "language": "JavaScript"}
{"filename": "p00074_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nvar line;\nwhile (line = lines['shift']()) {\n    var time = line['split']('\\x20')['map'](function (n) {\n        return +n;\n    });\n    if (time[0x0] == -0x1 && time[0x1] == -0x1 && time[0x2] == -0x1)\n        break;\n    var hour = time[0x0];\n    var min = time[0x1] + hour * 0x3c;\n    var sec = time[0x2] + min * 0x3c;\n    var rem = 0x78 * 0x3c - sec;\n    var rem3 = rem * 0x3;\n    var remSec = rem % 0x3c;\n    var remSec3 = rem3 % 0x3c;\n    rem = Math['floor'](rem / 0x3c);\n    rem3 = Math['floor'](rem3 / 0x3c);\n    var remMin = rem % 0x3c;\n    var remMin3 = rem3 % 0x3c;\n    var remHour = Math['floor'](rem / 0x3c);\n    var remHour3 = Math['floor'](rem3 / 0x3c);\n    console['log'](('0' + remHour)['slice'](-0x2) + ':' + ('0' + remMin)['slice'](-0x2) + ':' + ('0' + remSec)['slice'](-0x2));\n    console['log'](('0' + remHour3)['slice'](-0x2) + ':' + ('0' + remMin3)['slice'](-0x2) + ':' + ('0' + remSec3)['slice'](-0x2));\n}", "test_cases": [["1 30 0\n-1 -1 -1", "00:30:00\n01:30:00"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar line;\nwhile (line = lines.shift()) {\n    var time = line.split(' ').map(function(n){return +n;});\n    if (time[0] == -1 && time[1] == -1 && time[2] == -1)\n        break;\n\n    var hour = time[0];\n    var min = time[1] + hour * 60;\n    var sec = time[2] + min * 60;\n\n    var rem = 120 * 60 - sec;\n    var rem3 = rem * 3;\n    var remSec = rem % 60;\n    var remSec3 = rem3 % 60;\n    rem = Math.floor(rem / 60);\n    rem3 = Math.floor(rem3 / 60);\n    var remMin = rem % 60;\n    var remMin3 = rem3 % 60;\n    var remHour = Math.floor(rem / 60);\n    var remHour3 = Math.floor(rem3 / 60);\n\n    console.log(('0' + remHour).slice(-2) + ':' + ('0' + remMin).slice(-2) + ':' + ('0' + remSec).slice(-2));\n    console.log(('0' + remHour3).slice(-2) + ':' + ('0' + remMin3).slice(-2) + ':' + ('0' + remSec3).slice(-2));\n}", "language": "JavaScript"}
{"filename": "p00075_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar lines = input['trim']()['split']('\\x0a');\nvar ret = lines['filter'](function (line) {\n    var ZqraOK = {\n        'AZXQq': function (x, y) {\n            return x >= y;\n        },\n        'jfFCi': function (x, y) {\n            return x / y;\n        },\n        'mTDtZ': function (x, y) {\n            return x * y;\n        }\n    };\n    var items = line['split'](',');\n    var w = +items[0x1];\n    var h = +items[0x2];\n    return ZqraOK['AZXQq'](ZqraOK['jfFCi'](w, ZqraOK['mTDtZ'](h, h)), 0x19);\n});\nret['forEach'](function (line) {\n    console['log'](line['split'](',')[0x0]);\n});", "test_cases": [["1001,50.0,1.60 \n1002,60.0,1.70 \n1003,70.0,1.80 \n1004,80.0,1.70 \n1005,90.0,1.60", "1004\n1005"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar lines = input.trim().split('\\n');\n \nvar ret = lines.filter(function(line) {\n    var items = line.split(',');\n    var w = +items[1];\n    var h = +items[2];\n\n    return w / (h * h) >= 25;\n});\n\nret.forEach(function(line) {\n    console.log(line.split(',')[0]);\n});", "language": "JavaScript"}
{"filename": "p00078_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var amzYZP = {\n        'mOxJE': function (x, y) {\n            return x < y;\n        },\n        'GTXYj': function (x, y) {\n            return x == y;\n        },\n        'vbFYT': function (x, y) {\n            return x >= y;\n        },\n        'VpBoI': function (x, y) {\n            return x - y;\n        },\n        'dENYm': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'oDKVN': function (x, y) {\n            return x + y;\n        },\n        'OPgZD': function (x, y) {\n            return x - y;\n        },\n        'OOwcG': function (x, y) {\n            return x + y;\n        }\n    };\n    var kTPWMU = '1|4|0|2|3|5'['split']('|');\n    var lFxndO = 0x0;\n    while (!![]) {\n        switch (kTPWMU[lFxndO++]) {\n        case '0':\n            if (amzYZP['mOxJE'](y, 0x0))\n                y = n - 0x1;\n            continue;\n        case '1':\n            if (amzYZP['GTXYj'](N, max))\n                return;\n            continue;\n        case '2':\n            if (amzYZP['vbFYT'](x, n))\n                x = 0x0;\n            continue;\n        case '3':\n            if (y >= n)\n                y = 0x0;\n            continue;\n        case '4':\n            if (amzYZP['mOxJE'](x, 0x0))\n                x = amzYZP['VpBoI'](n, 0x1);\n            continue;\n        case '5':\n            if (yx[y][x] != -0x1) {\n                amzYZP['dENYm'](bomb, amzYZP['oDKVN'](y, 0x1), amzYZP['OPgZD'](x, 0x1));\n            } else {\n                yx[y][x] = amzYZP['OOwcG']('\\x20\\x20\\x20', N)['slice'](-0x4);\n                N++;\n                amzYZP['dENYm'](bomb, amzYZP['oDKVN'](y, 0x1), amzYZP['OOwcG'](x, 0x1));\n            }\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var n = Arr[i];\n    var max = n * n + 0x1;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var j = 0x0; j < n; j++) {\n        yx[j] = [];\n        for (var k = 0x0; k < n; k++) {\n            yx[j][k] = -0x1;\n        }\n    }\n    var N = 0x1;\n    bomb(Math['floor'](n / 0x2) + 0x1, Math['floor'](n / 0x2));\n    console['log'](yx['join']('\\x0a')['replace'](/\\,/g, ''));\n}", "test_cases": [["3\n5\n0", "4   9   2\n   3   5   7\n   8   1   6\n  11  24   7  20   3\n   4  12  25   8  16\n  17   5  13  21   9\n  10  18   1  14  22\n  23   6  19   2  15"]], "original": "function bomb(y,x){\n   if(N==max)return;\n   if(x<0)x=n-1;\n   if(y<0)y=n-1;\n   if(x>=n)x=0;\n   if(y>=n)y=0;\n   if(yx[y][x]!=-1){bomb(y+1,x-1);}\n   else{yx[y][x]=(\"   \"+N).slice(-4);N++;bomb(y+1,x+1);}\n}\n \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var n=Arr[i];\n   var max=n*n+1;\n   if(n==0)break;\n   var yx=[];\n   for(var j=0;j<n;j++){\n      yx[j]=[];\n      for(var k=0;k<n;k++){\n         yx[j][k]=-1;\n      }\n   }\n   var N=1;\n   bomb(Math.floor(n/2)+1,Math.floor(n/2));\n   console.log(yx.join(\"\\n\").replace(/\\,/g,\"\"));\n}", "language": "JavaScript"}
{"filename": "p00121_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar dy = [\n    -0x1,\n    0x0,\n    0x0,\n    0x1\n];\nvar dx = [\n    0x0,\n    -0x1,\n    0x1,\n    0x0\n];\nArr['forEach'](function (v, I) {\n    var NFAHXq = {\n        'nyivH': function (x, y) {\n            return x == y;\n        },\n        'MKRCr': '01234567',\n        'vGmWN': function (x, y) {\n            return x / y;\n        },\n        'NrNtB': function (x, y) {\n            return x % y;\n        },\n        'KnDpP': function (x, y) {\n            return x < y;\n        },\n        'HxwEU': function (x, y) {\n            return x + y;\n        },\n        'tvLmI': function (x, y) {\n            return x < y;\n        },\n        'iGBbQ': function (x, y) {\n            return x >= y;\n        },\n        'TgQTo': function (x, y) {\n            return x >= y;\n        },\n        'MViFT': function (x, y) {\n            return x == y;\n        }\n    };\n    var V = v['split']('\\x20')['map'](Number);\n    var obj = {};\n    var P = [[\n            V,\n            0x0\n        ]];\n    while (P['length'] > 0x0) {\n        var A = P['shift']();\n        var arr = A[0x0];\n        var cnt = A[0x1];\n        if (NFAHXq['nyivH'](arr['join'](''), NFAHXq['MKRCr'])) {\n            console['log'](cnt);\n            break;\n        }\n        var index = arr['indexOf'](0x0);\n        var y = Math['floor'](NFAHXq['vGmWN'](index, 0x4));\n        var x = NFAHXq['NrNtB'](index, 0x4);\n        var yx = [\n            arr['slice'](0x0, 0x4),\n            arr['slice'](0x4, 0x8)\n        ];\n        for (var i = 0x0; NFAHXq['KnDpP'](i, 0x4); i++) {\n            var yy = NFAHXq['HxwEU'](y, dy[i]);\n            var xx = NFAHXq['HxwEU'](x, dx[i]);\n            if (NFAHXq['KnDpP'](yy, 0x0) || NFAHXq['tvLmI'](xx, 0x0) || NFAHXq['iGBbQ'](yy, 0x2) || NFAHXq['TgQTo'](xx, 0x4))\n                continue;\n            yx[y][x] = yx[yy][xx];\n            var card = yx[yy][xx];\n            yx[yy][xx] = 0x0;\n            var YX = yx[0x0]['concat'](yx[0x1]);\n            var str = YX['join']('');\n            if (NFAHXq['MViFT'](obj['hasOwnProperty'](str), ![])) {\n                obj[str] = !![];\n                P['push']([\n                    YX,\n                    NFAHXq['HxwEU'](cnt, 0x1)\n                ]);\n            }\n            yx[yy][xx] = card;\n            yx[y][x] = 0x0;\n        }\n    }\n});", "test_cases": [["0 1 2 3 4 5 6 7\n1 0 2 3 4 5 6 7\n7 6 5 4 3 2 1 0", "0\n1\n28"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dy=[-1,0,0,1];\nvar dx=[0,-1,1,0];\nArr.forEach(function(v,I){\n   var V=v.split(\" \").map(Number);\n   var obj={};\n   var P=[[V,0]];\n   while(P.length>0){\n      var A=P.shift();\n      var arr=A[0];\n      var cnt=A[1];\n      if(arr.join(\"\")==\"01234567\"){console.log(cnt);break;}\n      var index=arr.indexOf(0);\n      var y=Math.floor(index/4);\n      var x=index%4;\n      var yx=[arr.slice(0,4),arr.slice(4,8)];\n      for(var i=0;i<4;i++){\n         var yy=y+dy[i];\n         var xx=x+dx[i];\n         if(yy<0 || xx<0 || yy>=2 || xx>=4)continue;\n         yx[y][x]=yx[yy][xx];\n         var card=yx[yy][xx];\n         yx[yy][xx]=0;\n         var YX=yx[0].concat(yx[1]);\n         var str=YX.join(\"\");\n         if(obj.hasOwnProperty(str)==false){\n               obj[str]=true;\n               P.push([YX,cnt+1]);\n         }\n         yx[yy][xx]=card;\n         yx[y][x]=0;\n      }\n   }\n});", "language": "JavaScript"}
{"filename": "p00130_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar L = Arr['shift']();\nfor (var i = 0x0; i < L; i++) {\n    var VsqVhq = '0|3|5|4|7|1|6|2'['split']('|');\n    var gkpCOw = 0x0;\n    while (!![]) {\n        switch (VsqVhq[gkpCOw++]) {\n        case '0':\n            var str = Arr[i];\n            continue;\n        case '1':\n            var n = 0x1;\n            continue;\n        case '2':\n            console['log'](arr['join'](''));\n            continue;\n        case '3':\n            str = str['replace'](/\\-\\>/g, 'A');\n            continue;\n        case '4':\n            var m = str['split']('');\n            continue;\n        case '5':\n            str = str['replace'](/\\<\\-/g, 'Z');\n            continue;\n        case '6':\n            m['forEach'](function (v) {\n                var AYLwrN = {\n                    'GefNb': function (x, y) {\n                        return x == y;\n                    },\n                    'FibjQ': function (x, y) {\n                        return x == y;\n                    },\n                    'ucchI': function (x, y) {\n                        return x > y;\n                    }\n                };\n                if (AYLwrN['GefNb'](v, 'A'))\n                    n++;\n                else if (v == 'Z')\n                    n--;\n                else {\n                    if (AYLwrN['FibjQ'](n, 0x0)) {\n                        arr['unshift'](v);\n                        n = 0x1;\n                    }\n                    if (AYLwrN['ucchI'](n, arr['length']))\n                        arr['push'](v);\n                }\n            });\n            continue;\n        case '7':\n            var arr = [m[0x0]];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["4\na->e->c->b->d\nb<-c<-a<-d<-e\nb->a->c<-a->c->d<-c<-a<-b->a->c->d->e<-d\na->e<-a<-d->a->e<-a<-d<-c->d->a<-d<-c<-b->c->d<-c", "aecbd\nedacb\nbacde\nbcdae"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar L=Arr.shift();\nfor(var i=0;i<L;i++){\n   var str=Arr[i];\n   str=str.replace(/\\-\\>/g,\"A\");\n   str=str.replace(/\\<\\-/g,\"Z\");\n   var m=str.split(\"\");\n   var arr=[m[0]];\n   var n=1;\n   m.forEach(function(v){\n      if(v==\"A\")n++;\n      else if(v==\"Z\")n--;\n      else {\n         if(n==0){arr.unshift(v);n=1;}\n         if(n>arr.length)arr.push(v);\n      }\n   });\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00148_1", "type": "JavaScript", "obfuscated": "let input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlet Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; ++i) {\n    let n = Arr[i];\n    var ans = n % 0x27;\n    if (ans == 0x0)\n        ans = 0x27;\n    if (ans < 0xa) {\n        ans = '0' + ans;\n    }\n    console['log']('3C' + ans);\n}", "test_cases": [["50\n5576\n5577\n5578", "3C11\n3C38\n3C39\n3C01"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'utf8');\nlet Arr = (input.trim()).split(\"\\n\");\n\nfor(var i = 0;i < Arr.length;++i){\n    let n = Arr[i];\n    var ans = n % 39;\n    if(ans == 0) ans = 39\n    if(ans < 10){\n        ans = \"0\" + ans\n    }\n    console.log(\"3C\"+ ans);\n}\n\n", "language": "JavaScript"}
{"filename": "p00149_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar a = [\n    0x0,\n    0x0\n];\nvar b = [\n    0x0,\n    0x0\n];\nvar c = [\n    0x0,\n    0x0\n];\nvar d = [\n    0x0,\n    0x0\n];\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    for (var j = 0x0; j < 0x2; j++) {\n        if (arr[j] >= 1.1)\n            a[j]++;\n        else if (arr[j] >= 0.6)\n            b[j]++;\n        else if (arr[j] >= 0.2)\n            c[j]++;\n        else\n            d[j]++;\n    }\n}\nconsole['log'](a[0x0] + '\\x20' + a[0x1]);\nconsole['log'](b[0x0] + '\\x20' + b[0x1]);\nconsole['log'](c[0x0] + '\\x20' + c[0x1]);\nconsole['log'](d[0x0] + '\\x20' + d[0x1]);", "test_cases": [["1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0", "2 3\n2 1\n0 0\n0 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar a=[0,0];\nvar b=[0,0];\nvar c=[0,0];\nvar d=[0,0];\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   for(var j=0;j<2;j++){\n      if(arr[j]>=1.1)a[j]++;\n      else if(arr[j]>=0.6)b[j]++;\n      else if(arr[j]>=0.2)c[j]++;\n      else d[j]++;\n   }\n}\nconsole.log(a[0]+\" \"+a[1]);\nconsole.log(b[0]+\" \"+b[1]);\nconsole.log(c[0]+\" \"+c[1]);\nconsole.log(d[0]+\" \"+d[1]);", "language": "JavaScript"}
{"filename": "p00159_1", "type": "JavaScript", "obfuscated": "let input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nlet Arr = input['trim']()['split']('\\x0a');\nlet bmis = new Map();\nwhile (0x1) {\n    let n = Arr[0x0];\n    if (n == 0x0)\n        break;\n    Arr['shift']();\n    for (var i = 0x0; i < n; ++i) {\n        var mNwvTu = '5|4|1|0|3|2'['split']('|');\n        var FpXjLh = 0x0;\n        while (!![]) {\n            switch (mNwvTu[FpXjLh++]) {\n            case '0':\n                var dif = Math['abs'](0x16 - bmi);\n                continue;\n            case '1':\n                var bmi = nums[0x2] / (m * m);\n                continue;\n            case '2':\n                Arr['shift']();\n                continue;\n            case '3':\n                bmis['set'](nums[0x0]['toString'](), dif);\n                continue;\n            case '4':\n                var m = nums[0x1] / 0x64;\n                continue;\n            case '5':\n                var nums = Arr[0x0]['split']('\\x20')['map'](Number);\n                continue;\n            }\n            break;\n        }\n    }\n    let sorted = new Map([...bmis['entries']()]['sort']((a, b) => a[0x1] - b[0x1]));\n    console['log'](sorted['keys']()['next']()['value']);\n}", "test_cases": [["6\n1 165 66\n2 178 60\n3 180 72\n4 160 65\n5 185 62\n6 182 62\n3\n3 160 65\n2 180 70\n1 170 75\n0", "3\n2"]], "original": "let input = require('fs').readFileSync('/dev/stdin', 'utf8');\nlet Arr = (input.trim()).split(\"\\n\");\nlet bmis = new Map()\n\nwhile(1){\n    let n = Arr[0];\n    if(n == 0) break;\n    Arr.shift();\n    \n    for(var i = 0;i < n;++i){\n        var nums = Arr[0].split(\" \").map(Number);\n        var m = nums[1] / 100\n        var bmi = nums[2] / (m * m);\n        var dif = Math.abs(22 - bmi)\n        bmis.set(nums[0].toString(),dif);\n        Arr.shift();\n    }\n    let sorted = new Map([...bmis.entries()].sort((a, b) => a[1] - b[1]));\n    console.log(sorted.keys().next().value);\n}\n", "language": "JavaScript"}
{"filename": "p00160_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var EgwovC = '19|14|5|6|18|9|8|15|0|17|13|10|12|16|1|7|11|3|2|4'['split']('|');\n        var kIOKOq = 0x0;\n        while (!![]) {\n            switch (EgwovC[kIOKOq++]) {\n            case '0':\n                if (L <= 0x64)\n                    x = 0x3e8;\n                continue;\n            case '1':\n                if (W <= 0x14)\n                    y = 0x578;\n                continue;\n            case '2':\n                if (W <= 0x2)\n                    y = 0x258;\n                continue;\n            case '3':\n                if (W <= 0x5)\n                    y = 0x320;\n                continue;\n            case '4':\n                if (x != 0x0 && y != 0x0)\n                    sum += Math['max'](x, y);\n                continue;\n            case '5':\n                var W = arr[0x3];\n                continue;\n            case '6':\n                var x;\n                continue;\n            case '7':\n                if (W <= 0xf)\n                    y = 0x4b0;\n                continue;\n            case '8':\n                if (L <= 0x8c)\n                    x = 0x578;\n                continue;\n            case '9':\n                if (L <= 0xa0)\n                    x = 0x640;\n                continue;\n            case '10':\n                var y;\n                continue;\n            case '11':\n                if (W <= 0xa)\n                    y = 0x3e8;\n                continue;\n            case '12':\n                if (W > 0x19)\n                    y = 0x0;\n                continue;\n            case '13':\n                if (L <= 0x3c)\n                    x = 0x258;\n                continue;\n            case '14':\n                var L = arr[0x0] + arr[0x1] + arr[0x2];\n                continue;\n            case '15':\n                if (L <= 0x78)\n                    x = 0x4b0;\n                continue;\n            case '16':\n                if (W <= 0x19)\n                    y = 0x640;\n                continue;\n            case '17':\n                if (L <= 0x50)\n                    x = 0x320;\n                continue;\n            case '18':\n                if (L > 0xa0)\n                    x = 0x0;\n                continue;\n            case '19':\n                var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](sum);\n}", "test_cases": [["2\n50 25 5 5\n80 60 10 30\n3\n10 15 25 24\n5 8 12 5\n30 30 30 18\n0", "800\n3800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var L=arr[0]+arr[1]+arr[2];\n      var W=arr[3];\n      var x;\n      if(L>160)x=0;\n      if(L<=160)x=1600;\n      if(L<=140)x=1400;\n      if(L<=120)x=1200;\n      if(L<=100)x=1000;\n      if(L<=80)x=800;\n      if(L<=60)x=600;\n      var y;\n      if(W>25)y=0;\n      if(W<=25)y=1600;\n      if(W<=20)y=1400;\n      if(W<=15)y=1200;\n      if(W<=10)y=1000;\n      if(W<=5)y=800;\n      if(W<=2)y=600;\n      if(x!=0 && y!=0)sum+=Math.max(x,y);\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00169_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (arr[0x0] == 0x0)\n        break;\n    var sum = 0x0;\n    arr = arr['filter'](function (v) {\n        var pUAjjX = {\n            'BqisR': function (x, y) {\n                return x > y;\n            },\n            'cPZnP': function (x, y) {\n                return x == y;\n            }\n        };\n        if (pUAjjX['BqisR'](v, 0xa))\n            v = 0xa;\n        sum += v;\n        return pUAjjX['cPZnP'](v, 0x1);\n    });\n    var i = arr['length'];\n    while (i != 0x0) {\n        if (sum + 0xa <= 0x15)\n            sum += 0xa;\n        i--;\n    }\n    console['log'](sum > 0x15 ? 0x0 : sum);\n}", "test_cases": [["1\n7 7 7\n7 7 8\n12 1\n10 1 1\n0", "11\n21\n0\n21\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0)break;\n   var sum=0;\n   arr=arr.filter(function(v){\n      if(v>10)v=10;\n      sum+=v;\n      return v==1;\n   });\n   var i=arr.length;\n   while(i!=0){\n      if(sum+10<=21)sum+=10;\n      i--;\n   }\n   console.log((sum>21)?0:sum);\n}", "language": "JavaScript"}
{"filename": "p00183_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var x = Arr['shift']()['split']('');\n    if (x[0x0] == '0')\n        break;\n    var y = Arr['shift']()['split']('');\n    var z = Arr['shift']()['split']('');\n    var ans = 'NA';\n    for (var i = 0x0; i < 0x2; i++) {\n        var YSyxxd = '3|8|1|4|6|7|2|0|5'['split']('|');\n        var uDKRiB = 0x0;\n        while (!![]) {\n            switch (YSyxxd[uDKRiB++]) {\n            case '0':\n                if (x[0x0] + y[0x1] + z[0x2] == s + s + s)\n                    ans = s;\n                continue;\n            case '1':\n                if (y[0x0] + y[0x1] + y[0x2] == s + s + s)\n                    ans = s;\n                continue;\n            case '2':\n                if (x[0x2] + y[0x2] + z[0x2] == s + s + s)\n                    ans = s;\n                continue;\n            case '3':\n                var s = [\n                    'b',\n                    'w'\n                ][i];\n                continue;\n            case '4':\n                if (z[0x0] + z[0x1] + z[0x2] == s + s + s)\n                    ans = s;\n                continue;\n            case '5':\n                if (x[0x2] + y[0x1] + z[0x0] == s + s + s)\n                    ans = s;\n                continue;\n            case '6':\n                if (x[0x0] + y[0x0] + z[0x0] == s + s + s)\n                    ans = s;\n                continue;\n            case '7':\n                if (x[0x1] + y[0x1] + z[0x1] == s + s + s)\n                    ans = s;\n                continue;\n            case '8':\n                if (x[0x0] + x[0x1] + x[0x2] == s + s + s)\n                    ans = s;\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](ans);\n}", "test_cases": [["bbw\nwbw\n+b+\nbwb\nwbw\nwbw\n0", "b\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var x=Arr.shift().split(\"\");\n   if(x[0]==\"0\")break;\n   var y=Arr.shift().split(\"\");\n   var z=Arr.shift().split(\"\");\n   var ans=\"NA\";\n   for(var i=0;i<2;i++){\n      var s=([\"b\",\"w\"])[i];\n      if(x[0]+x[1]+x[2]==s+s+s)ans=s;\n      if(y[0]+y[1]+y[2]==s+s+s)ans=s;\n      if(z[0]+z[1]+z[2]==s+s+s)ans=s;\n      if(x[0]+y[0]+z[0]==s+s+s)ans=s;\n      if(x[1]+y[1]+z[1]==s+s+s)ans=s;\n      if(x[2]+y[2]+z[2]==s+s+s)ans=s;\n      if(x[0]+y[1]+z[2]==s+s+s)ans=s;\n      if(x[2]+y[1]+z[0]==s+s+s)ans=s;\n   }\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00195_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar abc = [];\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (abc['length'] == 0x0 && Arr[i] == '0\\x200')\n        break;\n    if (abc['length'] == 0x4) {\n        var crshAd = '3|0|1|4|2'['split']('|');\n        var wTFGJW = 0x0;\n        while (!![]) {\n            switch (crshAd[wTFGJW++]) {\n            case '0':\n                var ABC = 'ABCD'['split']('');\n                continue;\n            case '1':\n                var str = ABC[abc['indexOf'](max)];\n                continue;\n            case '2':\n                abc = [];\n                continue;\n            case '3':\n                var max = abc['reduce'](function (a, b) {\n                    return Math['max'](a, b);\n                });\n                continue;\n            case '4':\n                console['log'](str + '\\x20' + max);\n                continue;\n            }\n            break;\n        }\n    } else {\n        var arr = Arr[i]['split']('\\x20')['map'](Number);\n        abc['push'](arr[0x0] + arr[0x1]);\n    }\n}", "test_cases": [["1593 4311\n4321 2155\n1256 6421\n5310 1455\n2152 5421\n1549 3386\n4528 3719\n1234 4321\n3330 3109\n2739 2199\n0 0", "C 7677\nB 8247"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar abc=[];\nfor(var i=0;i<Arr.length;i++){\nif(abc.length==0 && Arr[i]==\"0 0\")break;\nif(abc.length==4){\n   var max=abc.reduce(function(a,b){return Math.max(a,b);});\n   var ABC=\"ABCD\".split(\"\");\n   var str=ABC[abc.indexOf(max)];\n   console.log(str+\" \"+max);\n   abc=[];\n}else{\n   var arr=Arr[i].split(\" \").map(Number);\n   abc.push(arr[0]+arr[1]);\n}\n}", "language": "JavaScript"}
{"filename": "p00197_1", "type": "JavaScript", "obfuscated": "(function () {\n    var aedXaX = {\n        'pukdX': function (x, y) {\n            return x < y;\n        },\n        'SBsGI': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'jTlcx': function (x, y) {\n            return x === y;\n        },\n        'yPJFR': function (x, y) {\n            return x < y;\n        },\n        'dtHJU': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KPSvG': function (x, y) {\n            return x % y;\n        },\n        'gUtJf': function (x, y) {\n            return x + y;\n        },\n        'Rdsxl': function (callee) {\n            return callee();\n        },\n        'eDRug': 'data',\n        'mzkOQ': 'end'\n    };\n    var input = '', cnt = 0x0;\n    function main() {\n        var inputLen, nums, x, y, temp, ans;\n        inputLen = input['length'];\n        for (i = 0x0; aedXaX['pukdX'](i, inputLen); i += 0x1) {\n            nums = input[i]['split']('\\x20');\n            x = aedXaX['SBsGI'](parseInt, nums[0x0], 0xa);\n            y = aedXaX['SBsGI'](parseInt, nums[0x1], 0xa);\n            if (aedXaX['jTlcx'](x, 0x0) && aedXaX['jTlcx'](y, 0x0)) {\n                break;\n            } else if (aedXaX['yPJFR'](x, y)) {\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            ans = aedXaX['SBsGI'](gcd, x, y);\n            aedXaX['SBsGI'](showResult, ans, cnt);\n            cnt = 0x0;\n        }\n    }\n    function gcd(x, y) {\n        cnt += 0x1;\n        return x % y === 0x0 ? y : aedXaX['dtHJU'](gcd, y, aedXaX['KPSvG'](x, y));\n    }\n    function showResult(result, cnt) {\n        console['log'](aedXaX['gUtJf'](aedXaX['gUtJf'](result, '\\x20'), cnt));\n    }\n    process['stdin']['resume']();\n    process['stdin']['setEncoding']('utf8');\n    process['stdin']['on'](aedXaX['eDRug'], function (chunk) {\n        input += chunk;\n    });\n    process['stdin']['on'](aedXaX['mzkOQ'], function () {\n        input = input['split']('\\x0a');\n        aedXaX['Rdsxl'](main);\n    });\n}());", "test_cases": [["1071 1029\n5 5\n0 0", "21 3\n5 1"]], "original": "(function () {\n  var input = '',\n      cnt = 0;\n\n  function main () {\n    var inputLen, nums, x, y, temp, ans;\n\n    inputLen = input.length;\n    \n    for (i = 0; i < inputLen; i += 1) {\n      nums = input[i].split(' ');\n      x = parseInt(nums[0], 10);\n      y = parseInt(nums[1], 10);\n\n      if (x === 0 && y === 0) {\n        break;\n      } else if (x < y) {\n        temp = x;\n        x = y;\n        y = temp;\n      }\n\n      ans = gcd(x, y);\n\n      showResult(ans, cnt);\n      cnt = 0;\n    }\n  }\n\n  function gcd (x, y) {\n    cnt += 1;\n    return x % y === 0 ? y : gcd(y, x % y);\n  }\n\n  function showResult(result, cnt) {\n    console.log(result + ' ' + cnt);\n  }\n\n  process.stdin.resume();\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', function (chunk) {\n    input += chunk;\n  });\n\n  process.stdin.on('end', function () {\n    input = input.split('\\n');\n    main();\n  });\n}());", "language": "JavaScript"}
{"filename": "p00216_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (Arr[i] == -0x1)\n        break;\n    var a = Arr[i];\n    var sum = 0x47e;\n    if (a > 0xa && a <= 0x14)\n        sum = 0x47e + 0x7d * (a - 0xa);\n    else if (a > 0x14 && a <= 0x1e)\n        sum = 0x47e + 0x7d * 0xa + 0x8c * (a - 0x14);\n    else if (a > 0x1e)\n        sum = 0x47e + 0x7d * 0xa + 0x8c * 0xa + 0xa0 * (a - 0x1e);\n    console['log'](0x10b8 - sum);\n}", "test_cases": [["29\n40\n0\n-1", "620\n-1120\n3130"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==-1)break;\n   var a=Arr[i];\n   var sum=1150;\n   if(a>10 && a<=20)sum=1150+125*(a-10);\n   else if(a>20 && a<=30)sum=1150+125*10+140*(a-20);\n   else if(a>30)sum=1150+125*10+140*10+160*(a-30);\n   console.log(4280-sum);\n}", "language": "JavaScript"}
{"filename": "p00218_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var kBAWEi = {\n        'MMYVj': function (callee, param1) {\n            return callee(param1);\n        },\n        'BgJPV': function (x, y) {\n            return x === y;\n        },\n        'elyPt': function (x, y) {\n            return x >= y;\n        },\n        'yhcTd': function (x, y) {\n            return x / y;\n        },\n        'nXPul': function (x, y) {\n            return x + y;\n        },\n        'AdAqw': function (x, y) {\n            return x + y;\n        },\n        'nJKdA': function (x, y) {\n            return x + y;\n        },\n        'IFZbl': function (x, y) {\n            return x >= y;\n        }\n    };\n    var lines = input['split']('\\x0a');\n    var l = 0x0;\n    while (!![]) {\n        var n = kBAWEi['MMYVj'](Number, lines[l++]);\n        if (kBAWEi['BgJPV'](n, 0x0)) {\n            break;\n        }\n        for (var i = 0x0; i < n; i++) {\n            var VJcbRO = '4|2|6|1|5|0|3'['split']('|');\n            var nBJCtX = 0x0;\n            while (!![]) {\n                switch (VJcbRO[nBJCtX++]) {\n                case '0':\n                    if (kBAWEi['BgJPV'](pm, 0x64) || kBAWEi['BgJPV'](pe, 0x64) || kBAWEi['BgJPV'](pj, 0x64)) {\n                        ans = 'A';\n                    } else if (kBAWEi['elyPt'](kBAWEi['yhcTd'](kBAWEi['nXPul'](pm, pe), 0x2), 0x5a)) {\n                        ans = 'A';\n                    } else {\n                        var average = kBAWEi['yhcTd'](kBAWEi['AdAqw'](kBAWEi['nJKdA'](pm, pe), pj), 0x3);\n                        if (kBAWEi['IFZbl'](average, 0x50)) {\n                            ans = 'A';\n                        } else if (average >= 0x46) {\n                            ans = 'B';\n                        } else if (average >= 0x32 && (pm >= 0x50 || kBAWEi['IFZbl'](pe, 0x50))) {\n                            ans = 'B';\n                        }\n                    }\n                    continue;\n                case '1':\n                    var pj = values[0x2];\n                    continue;\n                case '2':\n                    var pm = values[0x0];\n                    continue;\n                case '3':\n                    console['log'](ans);\n                    continue;\n                case '4':\n                    var values = lines[l++]['split']('\\x20')['map'](Number);\n                    continue;\n                case '5':\n                    var ans = 'C';\n                    continue;\n                case '6':\n                    var pe = values[0x1];\n                    continue;\n                }\n                break;\n            }\n        }\n    }\n});", "test_cases": [["4\n100 70 20\n98 86 55\n80 34 36\n65 79 65\n2\n99 81 20\n66 72 90\n0", "A\nA\nB\nC\nA\nB"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar input = '';\nprocess.stdin.on('data', function (chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function () {\n  var lines = input.split('\\n');\n  var l = 0;\n  while (true) {\n    var n = Number(lines[l++]);\n    if (n === 0) {\n      break;\n    }\n    for (var i = 0; i < n; i++) {\n      var values = lines[l++].split(' ').map(Number);\n      var pm = values[0];\n      var pe = values[1];\n      var pj = values[2];\n      var ans = 'C';\n      if (pm === 100 || pe === 100 || pj === 100) {\n        ans = 'A';\n      } else if ((pm + pe) / 2 >= 90) {\n        ans = 'A';\n      } else {\n        var average = (pm + pe + pj) / 3;\n        if (average >= 80) {\n          ans = 'A';\n        } else if (average >= 70) {\n          ans = 'B';\n        } else if (average >= 50 && (pm >= 80 || pe >= 80)) {\n          ans = 'B';\n        }\n      }\n      console.log(ans);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p00219_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nvar input = '';\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var AfmgrS = {\n        'qsdVO': function (callee, param1) {\n            return callee(param1);\n        },\n        'RuTkc': function (x, y) {\n            return x === y;\n        },\n        'Ocqqr': function (x, y) {\n            return x < y;\n        },\n        'WrObr': function (x, y) {\n            return x < y;\n        }\n    };\n    var lines = input['split']('\\x0a');\n    var l = 0x0;\n    while (!![]) {\n        var n = AfmgrS['qsdVO'](Number, lines[l++]);\n        if (AfmgrS['RuTkc'](n, 0x0)) {\n            break;\n        }\n        var sales = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n        for (var i = 0x0; AfmgrS['Ocqqr'](i, n); i++) {\n            sales[Number(lines[l++])]++;\n        }\n        for (var i = 0x0; AfmgrS['WrObr'](i, sales['length']); i++) {\n            var bar = AfmgrS['RuTkc'](sales[i], 0x0) ? '-' : '';\n            for (var j = 0x0; AfmgrS['WrObr'](j, sales[i]); j++) {\n                bar += '*';\n            }\n            console['log'](bar);\n        }\n    }\n});", "test_cases": [["15\n2\n6\n7\n0\n1\n9\n8\n7\n3\n8\n9\n4\n8\n2\n2\n3\n9\n1\n5\n0", "*\n*\n***\n*\n*\n-\n*\n**\n***\n**\n-\n*\n-\n-\n-\n*\n-\n-\n-\n*"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nvar input = '';\nprocess.stdin.on('data', function (chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function () {\n  var lines = input.split('\\n');\n  var l = 0;\n  while (true) {\n    var n = Number(lines[l++]);\n    if (n === 0) {\n      break;\n    }\n    var sales = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (var i = 0; i < n; i++) {\n      sales[Number(lines[l++])]++;\n    }\n    for (var i = 0; i < sales.length; i++) {\n      var bar = (sales[i] === 0) ? '-' : '';\n      for (var j = 0; j < sales[i]; j++) {\n        bar += '*';\n      }\n      console.log(bar);\n    }\n  }\n});", "language": "JavaScript"}
{"filename": "p00222_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var zFHhQq = {\n        'IkYbO': function (x, y) {\n            return x <= y;\n        },\n        'QREPW': function (x, y) {\n            return x == y;\n        },\n        'WqwaT': function (x, y) {\n            return x + y;\n        },\n        'udkto': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; zFHhQq['IkYbO'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; zFHhQq['IkYbO'](i, sqrt); i++) {\n        if (zFHhQq['QREPW'](arr[i], ![]))\n            continue;\n        for (var j = zFHhQq['WqwaT'](i, i); j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; zFHhQq['IkYbO'](i, max); i++) {\n        if (zFHhQq['udkto'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x98967f);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    var quad = '';\n    for (var j = 0x5; j < p['length']; j++) {\n        if (p[j] > a)\n            break;\n        var x = p[j] - 0x8;\n        if (x == p[j - 0x3] && x + 0x2 == p[j - 0x2] && x + 0x6 == p[j - 0x1])\n            quad = p[j];\n    }\n    console['log'](quad);\n}", "test_cases": [["13\n14\n15\n16\n17\n18\n19\n20\n10000\n0", "13\n13\n13\n13\n13\n13\n19\n19\n9439"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(9999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   var quad=\"\";\n   for(var j=5;j<p.length;j++){\n   if(p[j]>a)break;\n   var x=p[j]-8;\n   if(x==p[j-3] && x+2==p[j-2] && x+6==p[j-1])quad=p[j];\n   }\n   console.log(quad);\n}", "language": "JavaScript"}
{"filename": "p00238_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var t = Arr['shift']() - 0x0;\n    if (t == 0x0)\n        break;\n    var n = Arr['shift']() - 0x0;\n    var sum = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n        sum += arr[0x1] - arr[0x0];\n    }\n    console['log'](t <= sum ? 'OK' : t - sum);\n}", "test_cases": [["10\n3\n6 11\n12 15\n18 22\n14\n2\n6 11\n13 20\n0", "OK\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var t=Arr.shift()-0;\n   if(t==0)break;\n   var n=Arr.shift()-0;\n   var sum=0;\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      sum+=arr[1]-arr[0];\n   }\n   console.log((t<=sum)?\"OK\":t-sum);\n}", "language": "JavaScript"}
{"filename": "p00239_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < N; i++) {\n        var ipqr = Arr['shift']()['split']('\\x20')['map'](Number);\n        arr['push'](ipqr);\n    }\n    var PQRC = Arr['shift']()['split']('\\x20')['map'](Number);\n    var result = [];\n    arr['forEach'](function (v) {\n        var XNLiQs = {\n            'cJtKu': '5|3|2|4|1|0',\n            'qByCG': function (x, y) {\n                return x == y;\n            },\n            'AzzJy': function (x, y) {\n                return x < y;\n            },\n            'XgkvI': function (x, y) {\n                return x + y;\n            },\n            'WWVLD': function (x, y) {\n                return x * y;\n            },\n            'GcYIU': function (x, y) {\n                return x * y;\n            },\n            'Ttwqj': function (x, y) {\n                return x < y;\n            }\n        };\n        var QdLDgu = XNLiQs['cJtKu']['split']('|');\n        var LNFOtT = 0x0;\n        while (!![]) {\n            switch (QdLDgu[LNFOtT++]) {\n            case '0':\n                if (XNLiQs['qByCG'](bad, 0x0))\n                    result['push'](v[0x0]);\n                continue;\n            case '1':\n                if (XNLiQs['AzzJy'](PQRC[0x3], XNLiQs['XgkvI'](XNLiQs['WWVLD'](0x4, XNLiQs['XgkvI'](v[0x1], v[0x3])), XNLiQs['GcYIU'](0x9, v[0x2]))))\n                    bad++;\n                continue;\n            case '2':\n                if (XNLiQs['Ttwqj'](PQRC[0x1], v[0x2]))\n                    bad++;\n                continue;\n            case '3':\n                if (XNLiQs['Ttwqj'](PQRC[0x0], v[0x1]))\n                    bad++;\n                continue;\n            case '4':\n                if (PQRC[0x2] < v[0x3])\n                    bad++;\n                continue;\n            case '5':\n                var bad = 0x0;\n                continue;\n            }\n            break;\n        }\n    });\n    console['log'](result['length'] == 0x0 ? 'NA' : result['join']('\\x0a'));\n}", "test_cases": [["4\n1 7 14 47\n2 5 35 55\n3 6 3 59\n4 6 5 15\n10 15 50 400\n2\n1 8 10 78\n2 4 18 33\n10 10 50 300\n0", "1\n4\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var arr=[];\n   for(var i=0;i<N;i++){\n      var ipqr=(Arr.shift()).split(\" \").map(Number);\n      arr.push(ipqr);\n   }\n   var PQRC=(Arr.shift()).split(\" \").map(Number);\n   var result=[];\n   arr.forEach(function(v){\n      var bad=0;\n      if(PQRC[0]<v[1])bad++;\n      if(PQRC[1]<v[2])bad++;\n      if(PQRC[2]<v[3])bad++;\n      if(PQRC[3]<4*(v[1]+v[3])+(9*v[2]))bad++;\n      if(bad==0)result.push(v[0]);\n   });\n   console.log((result.length==0)?\"NA\":result.join(\"\\n\"));\n}", "language": "JavaScript"}
{"filename": "p00242_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var str = '';\n    for (var i = 0x0; i < n; i++)\n        str += Arr['shift']() + '\\x20';\n    var arr = str['trim']()['split']('\\x20');\n    var s = Arr['shift']();\n    var f = arr['filter'](function (v) {\n        var jNrIPi = {\n            'MElWZ': function (x, y) {\n                return x == y;\n            }\n        };\n        return jNrIPi['MElWZ'](v[0x0], s);\n    });\n    f['sort']();\n    var F = [];\n    var memo = '';\n    for (var i = 0x0; i < f['length']; i++) {\n        if (memo == f[i]) {\n            F[F['length'] - 0x1] = [\n                f[i],\n                F[F['length'] - 0x1][0x1] + 0x1\n            ];\n        } else {\n            F['push']([\n                f[i],\n                0x1\n            ]);\n            memo = f[i];\n        }\n    }\n    F['sort'](function (a, b) {\n        var ToWqva = {\n            'hPHON': function (x, y) {\n                return x == y;\n            },\n            'fMbRt': function (x, y) {\n                return x - y;\n            }\n        };\n        if (ToWqva['hPHON'](a[0x1], b[0x1]))\n            return a[0x0] > b[0x0];\n        else\n            return ToWqva['fMbRt'](b[0x1], a[0x1]);\n    });\n    var ans = [];\n    for (var i = 0x0; i < 0x5; i++) {\n        if (F['length'] > i)\n            ans['push'](F[i][0x0]);\n    }\n    console['log'](ans['length'] > 0x0 ? ans['join']('\\x20') : 'NA');\n}", "test_cases": [["1\nben likes bananas the best among many fruits because bananas are sweet and cheap\nb\n1\nwinners get to visit aizu and the university of aizu and make many friends as well\na\n3\nask alex about\nthe answer for the\nassignment on android apps\na\n2\nprogramming is both\na sport and an intellectual puzzle\nc\n0", "bananas because ben best\naizu and as\nabout alex android answer apps\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var str=\"\";\n   for(var i=0;i<n;i++)str+=Arr.shift()+\" \";\n   var arr=(str.trim()).split(\" \");\n   var s=Arr.shift();\n   var f=arr.filter(function(v){return v[0]==s;});\n   f.sort();\n   var F=[];\n   var memo=\"\";\n   for(var i=0;i<f.length;i++){\n      if(memo==f[i]){\n         F[F.length-1]=[f[i],F[F.length-1][1]+1];\n      }\n      else {\n         F.push([f[i],1]);\n         memo=f[i];\n      }\n   }\n   F.sort(function(a,b){\n      if(a[1]==b[1])return a[0]>b[0];\n      else return b[1]-a[1];\n   });\n   var ans=[];\n   for(var i=0;i<5;i++){\n      if(F.length>i)ans.push(F[i][0]);\n   }\n   console.log((ans.length>0)?ans.join(\" \"):\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00252_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var KEZsPl = {\n        'UexVu': '110',\n        'FwoOc': function (x, y) {\n            return x == y;\n        },\n        'nJZJo': '001',\n        'jwqmP': 'Open',\n        'nVgkd': 'Close'\n    };\n    a = input['split']('\\x0a')[0x0]['split']('\\x20')['join']('');\n    console['log'](a == KEZsPl['UexVu'] || KEZsPl['FwoOc'](a, KEZsPl['nJZJo']) ? KEZsPl['jwqmP'] : KEZsPl['nVgkd']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["0 0 1", "Open"], ["0 1 0", "Close"]], "original": "function Main(input){\n  a=input.split('\\n')[0].split(' ').join('');\n  console.log(((a=='110'||a=='001')?'Open':'Close'));\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p00261_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == '#')\n        break;\n    var p = 'A';\n    for (var i = 0x0; i < str['length']; i++) {\n        var s = str[i] - 0x0;\n        if (p == 'A' && s === 0x0)\n            p = 'X';\n        else if (p == 'A' && s === 0x1)\n            p = 'Y';\n        else if (p == 'B' && s === 0x0)\n            p = 'Y';\n        else if (p == 'B' && s === 0x1)\n            p = 'X';\n        else if (p == 'W' && s === 0x0)\n            p = 'B';\n        else if (p == 'W' && s === 0x1)\n            p = 'Y';\n        else if (p == 'X' && s === 0x0)\n            p = '';\n        else if (p == 'X' && s === 0x1)\n            p = 'Z';\n        else if (p == 'Y' && s === 0x0)\n            p = 'X';\n        else if (p == 'Y' && s === 0x1)\n            p = '';\n        else if (p == 'Z' && s === 0x0)\n            p = 'W';\n        else if (p == 'Z' && s === 0x1)\n            p = 'B';\n    }\n    console['log'](p == 'B' ? 'Yes' : 'No');\n}", "test_cases": [["0100\n0101\n10100\n01000\n0101011\n0011\n011111\n#", "Yes\nNo\nYes\nNo\nYes\nNo\nYes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"#\")break;\n   var p=\"A\";\n   for(var i=0;i<str.length;i++){\n      var s=str[i]-0;\n      if(p==\"A\" && s===0)p=\"X\";\n      else if(p==\"A\" && s===1)p=\"Y\";\n      else if(p==\"B\" && s===0)p=\"Y\";\n      else if(p==\"B\" && s===1)p=\"X\";\n      else if(p==\"W\" && s===0)p=\"B\";\n      else if(p==\"W\" && s===1)p=\"Y\";\n      else if(p==\"X\" && s===0)p=\"\";\n      else if(p==\"X\" && s===1)p=\"Z\";\n      else if(p==\"Y\" && s===0)p=\"X\";\n      else if(p==\"Y\" && s===1)p=\"\";\n      else if(p==\"Z\" && s===0)p=\"W\";\n      else if(p==\"Z\" && s===1)p=\"B\";\n   }\n   console.log((p==\"B\")?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p00262_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var cnt = 0x0;\n    while (!![]) {\n        var flag = arr['every'](function (v, i) {\n            var yioKLa = {\n                'wiYVw': function (x, y) {\n                    return x == y;\n                },\n                'wjljs': function (x, y) {\n                    return x + y;\n                }\n            };\n            return yioKLa['wiYVw'](yioKLa['wjljs'](i, 0x1), v);\n        });\n        if (flag)\n            break;\n        var L = arr['length'];\n        arr = arr['map'](function (v) {\n            var aWBdQP = {\n                'oZiig': function (x, y) {\n                    return x - y;\n                }\n            };\n            return aWBdQP['oZiig'](v, 0x1);\n        });\n        arr = arr['filter'](function (v) {\n            var pZEPoZ = {\n                'tkyFJ': function (x, y) {\n                    return x != y;\n                }\n            };\n            return pZEPoZ['tkyFJ'](v, 0x0);\n        });\n        arr['push'](L);\n        cnt++;\n        if (cnt == 0x2710) {\n            cnt = -0x1;\n            break;\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["6\n1 4 1 3 2 4\n5\n1 2 3 4 5\n10\n1 1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1\n12\n1 4 1 3 2 4 3 3 2 1 2 2\n1\n5050\n3\n10000 10000 100\n0", "24\n0\n10\n-1\n48\n5049\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var cnt=0;\n   while(true){\n      var flag=arr.every(function(v,i){return (i+1==v);});\n      if(flag)break;\n      var L=arr.length;\n      arr=arr.map(function(v){return v-1;});\n      arr=arr.filter(function(v){return (v!=0);});\n      arr.push(L);\n      cnt++;\n      if(cnt==10000){cnt=-1;break;}\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00276_1", "type": "JavaScript", "obfuscated": "Main(function (input) {\n    var IRyFws = {\n        'AEAZl': function (x, y) {\n            return x / y;\n        },\n        'PPXsf': function (x, y) {\n            return x * y;\n        },\n        'aeCFU': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['trim']()['split']('\\x0a');\n    input['shift']();\n    input['forEach'](function (line) {\n        var tmp = line['split']('\\x20');\n        var c = +tmp[0x0];\n        var a = +tmp[0x1];\n        var n = +tmp[0x2];\n        var ans = 0x0;\n        var min;\n        min = Math['min'](c, a, n);\n        c -= min;\n        a -= min;\n        n -= min;\n        ans += min;\n        min = Math['min'](Math['floor'](IRyFws['AEAZl'](c, 0x2)), a);\n        c -= IRyFws['PPXsf'](min, 0x2);\n        a -= min;\n        ans += min;\n        ans += Math['floor'](IRyFws['aeCFU'](c, 0x3));\n        console['log'](ans);\n    });\n});\nfunction Main(main) {\n    var YLIPKI = {\n        'wlKQp': '1|0|5|2|3|4',\n        'xElGQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'pXFNX': 'data'\n    };\n    var vkKJRV = YLIPKI['wlKQp']['split']('|');\n    var qXFWxW = 0x0;\n    while (!![]) {\n        switch (vkKJRV[qXFWxW++]) {\n        case '0':\n            var input = '';\n            continue;\n        case '1':\n            var rsibPw = {\n                'KQrgr': function (callee, param1) {\n                    return YLIPKI['xElGQ'](callee, param1);\n                }\n            };\n            continue;\n        case '2':\n            process['stdin']['setEncoding']('utf8');\n            continue;\n        case '3':\n            process['stdin']['on'](YLIPKI['pXFNX'], function (chunk) {\n                input += chunk;\n            });\n            continue;\n        case '4':\n            process['stdin']['on']('end', function () {\n                rsibPw['KQrgr'](main, input);\n            });\n            continue;\n        case '5':\n            process['stdin']['resume']();\n            continue;\n        }\n        break;\n    }\n}\n;", "test_cases": [["4\n3 0 0\n1 1 1\n9 4 1\n0 1 2", "1\n1\n4\n0"]], "original": "Main(function(input) {\n\tinput = input.trim().split('\\n');\n\tinput.shift();\n\tinput.forEach(function(line) {\n\t\tvar tmp = line.split(' ');\n\t\tvar c = +tmp[0];\n\t\tvar a = +tmp[1];\n\t\tvar n = +tmp[2];\n\t\tvar ans = 0;\n\t\tvar min;\n\n\t\t/**\n\t\t * CAN pattern\n\t\t */\n\t\tmin = Math.min(c, a, n);\n\t\tc -= min;\n\t\ta -= min;\n\t\tn -= min;\n\t\tans += min;\n\n\t\t/**\n\t\t * CCA pattern\n\t\t */\n\t\tmin = Math.min(Math.floor(c / 2), a);\n\t\tc -= min * 2;\n\t\ta -= min;\n\t\tans += min;\n\n\t\t/**\n\t\t * CCC pattern\n\t\t */\n\t\tans += Math.floor(c / 3);\n\n\t\tconsole.log(ans);\n\t});\n});\n\nfunction Main(main) {\n\tvar input = '';\n\n\tprocess.stdin.resume();\n\tprocess.stdin.setEncoding('utf8');\n\tprocess.stdin.on('data', function(chunk) {\n\t\tinput += chunk;\n\t});\n\tprocess.stdin.on('end', function() {\n\t\tmain(input);\n\t});\n};", "language": "JavaScript"}
{"filename": "p00310_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [p, m, c] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](p + m + c);", "test_cases": [["10 10 20", "40"], ["100 0 0", "100"], ["1000 1000 1000", "3000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [p,m,c]=input.trim().split(\" \").map(Number);\nconsole.log(p+m+c);\n", "language": "JavaScript"}
{"filename": "p00352_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction Main(input) {\n    const uUhIQa = {\n        'qlwuW': function (x, y) {\n            return x / y;\n        },\n        'enUoA': function (x, y) {\n            return x + y;\n        },\n        'eFLnZ': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const ab = input['split']('\\x20');\n    console['log'](uUhIQa['qlwuW'](uUhIQa['enUoA'](uUhIQa['eFLnZ'](parseFloat, ab[0x0]), parseFloat(ab[0x1])), 0x2));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1000 3000", "2000"], ["5000 5000", "5000"], ["1000 2000", "1500"]], "original": "\"use strict\";\n\nfunction Main(input) {\n  const ab = input.split(\" \");\n  console.log((parseFloat(ab[0])+parseFloat(ab[1]))/2);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p00355_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [a, b] = arr['shift']()['split']('\\x20')['map'](Number);\nvar n = arr['shift']() - 0x0;\nvar flag = 0x0;\nwhile (n--) {\n    var [s, f] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (f <= a || b <= s)\n        continue;\n    else\n        flag = 0x1;\n}\nconsole['log'](flag);", "test_cases": [["5 7\n3\n1 4\n4 5\n7 10", "0"], ["3 7\n3\n7 10\n1 4\n4 5", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr =input.trim().split(\"\\n\");\nvar [a,b] = arr.shift().split(\" \").map(Number);\nvar n = arr.shift() - 0;\nvar flag = 0;\nwhile(n--){\n   var [s,f] = arr.shift().split(\" \").map(Number);\n   if(f<=a || b<=s)continue;\n   else flag = 1;\n}\nconsole.log(flag);\n", "language": "JavaScript"}
{"filename": "p00356_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [x, y] = input['trim']()['split']('\\x20')['map'](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i <= x; i++) {\n    if (y * i * 0x2 / (x * 0x2) % 0x1 === 0x0)\n        cnt++;\n}\nconsole['log'](x + 0x1 + y + 0x1 - cnt);", "test_cases": [["4 4", "5"], ["4 6", "9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [x,y]=input.trim().split(\" \").map(Number);\nvar cnt = 0;\nfor(var i=0;i<=x;i++){\n   if(y*i*2/(x*2)%1===0)cnt++;\n}\nconsole.log(x+1+y+1-cnt);\n", "language": "JavaScript"}
{"filename": "p00424_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (Arr['length'] > 0x1) {\n    var AL = Arr['shift']();\n    var hash = {};\n    for (var i = 0x0; i < AL; i++) {\n        var arr = Arr[i]['trim']()['split']('\\x20');\n        hash[arr[0x0]] = arr[0x1];\n    }\n    Arr = Arr['slice'](AL, Arr['length'] + 0x1);\n    var AL = Arr['shift']();\n    var str = '';\n    for (var i = 0x0; i < AL; i++) {\n        var k = Arr[i]['trim']();\n        str += hash['hasOwnProperty'](k) ? hash[k] : k;\n    }\n    Arr = Arr['slice'](AL, Arr['length'] + 0x1);\n    console['log'](str);\n    if (Arr[0x0] == '0')\n        break;\n}", "test_cases": [["3\t\nA a\t\n0 5\t\n5 4\t\n10\t\nA\t\nB\t\nC\t\n0\t\n1\t\n4\t\n5\t\na\t\nb\t\nA\n3\t\nA a\t\n0 5\t\n5 4\t\n10\t\nA\t\nB\t\nC\t\n0\t\n1\t\n4\t\n5\t\na\t\nb\t\nA\n0", "aBC5144aba\naBC5144aba"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(Arr.length>1){\n   var AL=Arr.shift();\n   var hash={};\n   for(var i=0;i<AL;i++){\n      var arr=(Arr[i].trim()).split(\" \");\n      hash[arr[0]]=arr[1];\n   }\n   Arr=Arr.slice(AL,Arr.length+1);\n   var AL=Arr.shift();\n   var str=\"\";\n   for(var i=0;i<AL;i++){\n      var k=Arr[i].trim();\n      str+=(hash.hasOwnProperty(k))?hash[k]:k;\n   }\n   Arr=Arr.slice(AL,Arr.length+1);\n   console.log(str);\n   if(Arr[0]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00425_1", "type": "JavaScript", "obfuscated": "function move(x, arr) {\n    var ttkTrG = {\n        'wNuBs': '13|12|11|1|6|10|7|8|3|2|5|0|9|4',\n        'iGbif': function (x, y) {\n            return x == y;\n        },\n        'rdWXz': function (x, y) {\n            return x == y;\n        }\n    };\n    var EtxuWn = ttkTrG['wNuBs']['split']('|');\n    var UEfXpX = 0x0;\n    while (!![]) {\n        switch (EtxuWn[UEfXpX++]) {\n        case '0':\n            if (ttkTrG['iGbif'](x, 'R'))\n                after = [\n                    d1,\n                    d3,\n                    d5,\n                    d2,\n                    d4,\n                    d6\n                ];\n            continue;\n        case '1':\n            var d4 = arr[0x3];\n            continue;\n        case '2':\n            if (ttkTrG['iGbif'](x, 'E'))\n                after = [\n                    d4,\n                    d2,\n                    d1,\n                    d6,\n                    d5,\n                    d3\n                ];\n            continue;\n        case '3':\n            if (x == 'S')\n                after = [\n                    d5,\n                    d1,\n                    d3,\n                    d4,\n                    d6,\n                    d2\n                ];\n            continue;\n        case '4':\n            return after;\n        case '5':\n            if (ttkTrG['iGbif'](x, 'W'))\n                after = [\n                    d3,\n                    d2,\n                    d6,\n                    d1,\n                    d5,\n                    d4\n                ];\n            continue;\n        case '6':\n            var d5 = arr[0x4];\n            continue;\n        case '7':\n            var after = [];\n            continue;\n        case '8':\n            if (x == 'N')\n                after = [\n                    d2,\n                    d6,\n                    d3,\n                    d4,\n                    d1,\n                    d5\n                ];\n            continue;\n        case '9':\n            if (ttkTrG['rdWXz'](x, 'L'))\n                after = [\n                    d1,\n                    d4,\n                    d2,\n                    d5,\n                    d3,\n                    d6\n                ];\n            continue;\n        case '10':\n            var d6 = arr[0x5];\n            continue;\n        case '11':\n            var d3 = arr[0x2];\n            continue;\n        case '12':\n            var d2 = arr[0x1];\n            continue;\n        case '13':\n            var d1 = arr[0x0];\n            continue;\n        }\n        break;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar dice;\nvar sum;\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var v = Arr[i]['charAt'](0x0);\n    if (v['match'](/[NSEWRL]/)) {\n        dice = move(v, dice);\n        sum += dice[0x0];\n    } else {\n        if (i != 0x0)\n            console['log'](sum);\n        dice = [\n            0x1,\n            0x2,\n            0x3,\n            0x4,\n            0x5,\n            0x6\n        ];\n        sum = 0x1;\n    }\n    if (Arr[i] == '0')\n        break;\n}", "test_cases": [["5\nNorth\nNorth\nEast\nSouth\nWest\n8\nWest\nNorth\nLeft\nSouth\nRight\nNorth\nLeft\nEast\n0", "21\n34"]], "original": "function move(x,arr){\nvar d1=arr[0];\nvar d2=arr[1];\nvar d3=arr[2];\nvar d4=arr[3];\nvar d5=arr[4];\nvar d6=arr[5];\nvar after=[];\nif(x==\"N\")after=[d2,d6,d3,d4,d1,d5];\nif(x==\"S\")after=[d5,d1,d3,d4,d6,d2];\nif(x==\"E\")after=[d4,d2,d1,d6,d5,d3];\nif(x==\"W\")after=[d3,d2,d6,d1,d5,d4];\nif(x==\"R\")after=[d1,d3,d5,d2,d4,d6];\nif(x==\"L\")after=[d1,d4,d2,d5,d3,d6];\nreturn after;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar dice;\nvar sum;\nfor(var i=0;i<Arr.length;i++){\n   var v=Arr[i].charAt(0);\n   if(v.match(/[NSEWRL]/)){\n      dice=move(v,dice);\n      sum+=dice[0];\n   }else{\n      if(i!=0)console.log(sum);\n      dice=[1,2,3,4,5,6];\n      sum=1;\n   }\n   if(Arr[i]==\"0\")break;\n}", "language": "JavaScript"}
{"filename": "p00484_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar nk = arr['shift']()['split']('\\x20')['map'](Number);\nvar n = nk[0x0];\nvar k = nk[0x1];\nvar N = [];\nfor (var i = 0x0; i < n; i++)\n    N['push'](arr['shift']()['split']('\\x20')['map'](Number));\nvar dp = [];\nfor (var i = 0x0; i <= 0xa; i++)\n    dp[i] = [];\nvar DP = [];\nfor (var i = 0x0; i <= 0xa; i++)\n    DP[i] = [];\nN['forEach'](function (v) {\n    var c = v[0x0];\n    var g = v[0x1];\n    dp[g]['push'](c);\n});\ndp['forEach'](function (v, i) {\n    var iBTndy = {\n        'AFMXa': function (x, y) {\n            return x == y;\n        },\n        'IJope': function (x, y) {\n            return x > y;\n        },\n        'HsQga': function (x, y) {\n            return x - y;\n        },\n        'PzZhc': function (x, y) {\n            return x + y;\n        }\n    };\n    v['sort'](function (a, b) {\n        return b - a;\n    });\n    v['forEach'](function (value, j) {\n        if (iBTndy['AFMXa'](j, 0x0))\n            DP[i][j] = dp[i][j];\n        if (iBTndy['IJope'](j, 0x0)) {\n            dp[i][j] += dp[i][iBTndy['HsQga'](j, 0x1)];\n            DP[i][j] = dp[i][j] + iBTndy['PzZhc'](j, 0x1) * j;\n        }\n    });\n});\nvar dp = [];\nfor (var i = 0x0; i <= n; i++)\n    dp[i] = 0x0;\nvar bomb = function (cnt, start, sum) {\n    var hlPZcQ = {\n        'hnVfv': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'KYZoV': function (x, y) {\n            return x + y;\n        },\n        'cJpGK': function (x, y) {\n            return x + y;\n        },\n        'dfmou': function (x, y) {\n            return x == y;\n        }\n    };\n    dp[cnt] = Math['max'](dp[cnt], sum);\n    if (hlPZcQ['dfmou'](sum, k))\n        return;\n    for (var i = start; i < DP['length']; i++) {\n        DP[i]['forEach'](function (v, index) {\n            hlPZcQ['hnVfv'](bomb, cnt + hlPZcQ['KYZoV'](index, 0x1), hlPZcQ['KYZoV'](i, 0x1), hlPZcQ['cJpGK'](sum, v));\n        });\n    }\n};\nbomb(0x0, 0x0, 0x0);\nconsole['log'](dp[k]);", "test_cases": [["7 4\n14 1\n13 2\n12 3\n14 2\n8 2\n16 3\n11 2", "60"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar nk=arr.shift().split(\" \").map(Number);\nvar n=nk[0];\nvar k=nk[1];\nvar N=[];\nfor(var i=0;i<n;i++)N.push(arr.shift().split(\" \").map(Number));\n\nvar dp=[];\nfor(var i=0;i<=10;i++)dp[i]=[];\nvar DP=[];\nfor(var i=0;i<=10;i++)DP[i]=[];\n\nN.forEach(function(v){\n   var c=v[0];\n   var g=v[1];\n   dp[g].push(c);\n});\n\ndp.forEach(function(v,i){\n   v.sort(function(a,b){return b-a;});\n   v.forEach(function(value,j){\n      if(j==0)DP[i][j]=dp[i][j];\n      if(j>0){\n         dp[i][j]+=dp[i][j-1];\n         DP[i][j]=dp[i][j]+(j+1)*j;\n      }\n   });\n});\n\n\nvar dp=[];\nfor(var i=0;i<=n;i++)dp[i]=0;\n\nvar bomb=function(cnt,start,sum){\n   dp[cnt]=Math.max(dp[cnt],sum);\n   if(sum==k)return;\n   for(var i=start;i<DP.length;i++){\n      DP[i].forEach(function(v,index){\n         bomb(cnt+(index+1),i+1,sum+v);\n      });\n   }\n};\n\nbomb(0,0,0);\n\nconsole.log(dp[k]);", "language": "JavaScript"}
{"filename": "p00590_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var FFuptV = {\n        'wxmSM': function (x, y) {\n            return x <= y;\n        },\n        'ktCgv': function (x, y) {\n            return x == y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; FFuptV['wxmSM'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; FFuptV['wxmSM'](i, sqrt); i++) {\n        if (FFuptV['ktCgv'](arr[i], ![]))\n            continue;\n        for (var j = i + i; FFuptV['wxmSM'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; FFuptV['wxmSM'](i, max); i++) {\n        if (arr[i] !== ![])\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nvar p = prime(0x2710);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var wJTIRq = '7|3|0|4|2|1|6|5'['split']('|');\n    var vjCRfC = 0x0;\n    while (!![]) {\n        switch (wJTIRq[vjCRfC++]) {\n        case '0':\n            var B = [];\n            continue;\n        case '1':\n            var pair = 0x0;\n            continue;\n        case '2':\n            for (var j = a; j >= 0x1; j--)\n                B['push'](j);\n            continue;\n        case '3':\n            var A = [];\n            continue;\n        case '4':\n            for (var j = 0x1; j <= a; j++)\n                A['push'](j);\n            continue;\n        case '5':\n            console['log'](pair);\n            continue;\n        case '6':\n            for (var j = 0x0; j < a; j++) {\n                if (p['hasOwnProperty'](A[j]) && p['hasOwnProperty'](B[j]))\n                    pair++;\n            }\n            continue;\n        case '7':\n            var a = Arr[i];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["1\n4\n7\n51", "0\n2\n2\n6"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(10000);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   var A=[];\n   var B=[];\n   for(var j=1;j<=a;j++)A.push(j);\n   for(var j=a;j>=1;j--)B.push(j);\n   var pair=0;\n   for(var j=0;j<a;j++){\n      if(p.hasOwnProperty(A[j]) && p.hasOwnProperty(B[j]))pair++;\n   }\n   console.log(pair);\n}", "language": "JavaScript"}
{"filename": "p00591_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++)\n        yx['push'](arr['shift']()['split']('\\x20')['map'](Number));\n    var xy = [];\n    var hand = [];\n    for (var i = 0x0; i < n; i++) {\n        xy[i] = [];\n        hand[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            xy[i][j] = yx[j][i];\n            hand[i][j] = [\n                0x0,\n                0x0\n            ];\n        }\n    }\n    yx['forEach'](function (v, i) {\n        var min = v['reduce'](function (a, b) {\n            return Math['min'](a, b);\n        });\n        hand[i][v['indexOf'](min)][0x0] = 0x1;\n    });\n    xy['forEach'](function (v, i) {\n        var max = v['reduce'](function (a, b) {\n            return Math['max'](a, b);\n        });\n        hand[v['indexOf'](max)][i][0x1] = 0x1;\n    });\n    var ans = (function () {\n        var bleGIn = {\n            'Yqbhx': function (x, y) {\n                return x < y;\n            },\n            'Kniuy': function (x, y) {\n                return x == y;\n            },\n            'DMkVb': function (x, y) {\n                return x == y;\n            }\n        };\n        for (var i = 0x0; i < n; i++) {\n            for (var j = 0x0; bleGIn['Yqbhx'](j, n); j++) {\n                if (bleGIn['Kniuy'](hand[i][j][0x0], 0x1) && bleGIn['DMkVb'](hand[i][j][0x1], 0x1))\n                    return yx[i][j];\n            }\n        }\n        return 0x0;\n    }());\n    console['log'](ans);\n}", "test_cases": [["3\n1 2 3\n4 5 6\n7 8 9\n3\n1 2 3\n7 8 9\n4 5 6\n0", "7\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++)yx.push(arr.shift().split(\" \").map(Number));\n   var xy=[];\n   var hand=[];\n   for(var i=0;i<n;i++){\n      xy[i]=[];\n      hand[i]=[];\n      for(var j=0;j<n;j++){\n         xy[i][j]=yx[j][i];\n         hand[i][j]=[0,0];\n      }\n   }\n   yx.forEach(function(v,i){\n      var min=v.reduce(function(a,b){return Math.min(a,b);});\n      hand[i][v.indexOf(min)][0]=1;\n   });\n   xy.forEach(function(v,i){\n      var max=v.reduce(function(a,b){return Math.max(a,b);});\n      hand[v.indexOf(max)][i][1]=1;\n   });\n   var ans=(function(){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            if(hand[i][j][0]==1 && hand[i][j][1]==1)return yx[i][j];\n         }\n      }\n      return 0;\n   })();\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00593_1", "type": "JavaScript", "obfuscated": "function bomb(y, x, cnt, f) {\n    var gjCfls = {\n        'VhkWn': function (x, y) {\n            return x + y;\n        },\n        'Jjrdm': '\\x20\\x20\\x20',\n        'iYyWX': function (x, y) {\n            return x == y;\n        },\n        'EwIwX': function (x, y) {\n            return x - y;\n        },\n        'YNIcI': function (x, y) {\n            return x == y;\n        },\n        'Jdiea': function (x, y) {\n            return x - y;\n        },\n        'aYddQ': function (x, y) {\n            return x - y;\n        },\n        'IAzvd': function (x, y) {\n            return x + y;\n        },\n        'QSrOI': function (x, y) {\n            return x + y;\n        },\n        'YyUlY': function (x, y) {\n            return x - y;\n        },\n        'xohzd': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'axWXs': function (x, y) {\n            return x == y;\n        },\n        'LWTFe': function (x, y) {\n            return x == y;\n        },\n        'zioCX': function (x, y) {\n            return x + y;\n        },\n        'CAHvg': function (x, y) {\n            return x == y;\n        },\n        'uaBNE': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'oCrXY': function (x, y) {\n            return x - y;\n        },\n        'ALgzX': function (x, y) {\n            return x + y;\n        },\n        'zCdTC': function (x, y) {\n            return x == y;\n        },\n        'pHrMP': function (x, y) {\n            return x == y;\n        },\n        'UghBO': function (callee, param1, param2, param3, param4) {\n            return callee(param1, param2, param3, param4);\n        },\n        'Zldmg': function (x, y) {\n            return x - y;\n        },\n        'ZpWuG': function (x, y) {\n            return x + y;\n        },\n        'jVtaP': function (x, y) {\n            return x + y;\n        },\n        'TVHRV': function (x, y) {\n            return x + y;\n        },\n        'kfVLA': function (x, y) {\n            return x == y;\n        }\n    };\n    yx[y][x] = gjCfls['VhkWn'](gjCfls['Jjrdm'], cnt)['slice'](-0x3);\n    if (gjCfls['iYyWX'](y, gjCfls['EwIwX'](n, 0x1)) && gjCfls['YNIcI'](x, gjCfls['Jdiea'](n, 0x1)))\n        return;\n    else if (gjCfls['iYyWX'](y, gjCfls['aYddQ'](n, 0x1)) && f == -0x1)\n        bomb(y, gjCfls['IAzvd'](x, 0x1), gjCfls['QSrOI'](cnt, 0x1), 0x1);\n    else if (y == gjCfls['YyUlY'](n, 0x1) && gjCfls['iYyWX'](f, 0x1))\n        gjCfls['xohzd'](bomb, gjCfls['EwIwX'](y, 0x1), gjCfls['VhkWn'](x, 0x1), cnt + 0x1, 0x1);\n    else if (x == n - 0x1 && gjCfls['axWXs'](f, 0x1))\n        gjCfls['xohzd'](bomb, gjCfls['VhkWn'](y, 0x1), x, gjCfls['VhkWn'](cnt, 0x1), -0x1);\n    else if (gjCfls['YNIcI'](x, n - 0x1) && gjCfls['axWXs'](f, -0x1))\n        gjCfls['xohzd'](bomb, gjCfls['IAzvd'](y, 0x1), gjCfls['YyUlY'](x, 0x1), cnt + 0x1, -0x1);\n    else if (gjCfls['LWTFe'](y, 0x0) && gjCfls['axWXs'](f, 0x1))\n        gjCfls['xohzd'](bomb, y, gjCfls['VhkWn'](x, 0x1), gjCfls['zioCX'](cnt, 0x1), -0x1);\n    else if (gjCfls['CAHvg'](y, 0x0) && gjCfls['YNIcI'](f, -0x1))\n        gjCfls['uaBNE'](bomb, gjCfls['VhkWn'](y, 0x1), gjCfls['oCrXY'](x, 0x1), gjCfls['ALgzX'](cnt, 0x1), -0x1);\n    else if (x == 0x0 && gjCfls['zCdTC'](f, -0x1))\n        bomb(gjCfls['QSrOI'](y, 0x1), x, cnt + 0x1, 0x1);\n    else if (gjCfls['pHrMP'](x, 0x0) && gjCfls['pHrMP'](f, 0x1))\n        gjCfls['UghBO'](bomb, gjCfls['Zldmg'](y, 0x1), gjCfls['ZpWuG'](x, 0x1), gjCfls['zioCX'](cnt, 0x1), 0x1);\n    else if (gjCfls['LWTFe'](f, 0x1))\n        bomb(y - 0x1, gjCfls['jVtaP'](x, 0x1), gjCfls['TVHRV'](cnt, 0x1), 0x1);\n    else if (gjCfls['kfVLA'](f, -0x1))\n        gjCfls['xohzd'](bomb, gjCfls['TVHRV'](y, 0x1), gjCfls['Zldmg'](x, 0x1), gjCfls['zioCX'](cnt, 0x1), -0x1);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar I = 0x1;\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        yx[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            yx[i][j] = 0x0;\n        }\n    }\n    bomb(0x0, 0x0, 0x1, 0x1);\n    console['log']('Case\\x20' + I + ':');\n    I++;\n    console['log'](yx['join']('\\x0a')['replace'](/\\,/g, ''));\n}", "test_cases": [["3\n4\n0", "Case 1:\n  1  2  6\n  3  5  7\n  4  8  9\nCase 2:\n  1  2  6  7\n  3  5  8 13\n  4  9 12 14\n 10 11 15 16"]], "original": "function bomb(y,x,cnt,f){\n   yx[y][x]=(\"   \"+cnt).slice(-3);\n   if(y==n-1 && x==n-1)return;\n   else if(y==n-1 && f==-1)bomb(y,x+1,cnt+1,1);\n   else if(y==n-1 && f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(x==n-1 && f==1)bomb(y+1,x,cnt+1,-1);\n   else if(x==n-1 && f==-1)bomb(y+1,x-1,cnt+1,-1);\n   else if(y==0 && f==1)bomb(y,x+1,cnt+1,-1);\n   else if(y==0 && f==-1)bomb(y+1,x-1,cnt+1,-1);\n   else if(x==0 && f==-1)bomb(y+1,x,cnt+1,1);\n   else if(x==0 && f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(f==1)bomb(y-1,x+1,cnt+1,1);\n   else if(f==-1)bomb(y+1,x-1,cnt+1,-1);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=1;\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      yx[i]=[];\n      for(var j=0;j<n;j++){\n         yx[i][j]=0;\n      }\n   }\n   bomb(0,0,1,1);\n   console.log(\"Case \"+I+\":\");\n   I++;\n   console.log(yx.join(\"\\n\").replace(/\\,/g,\"\"));\n}", "language": "JavaScript"}
{"filename": "p00629_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n === 0x0)\n        break;\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary['push'](arr['shift']()['split']('\\x20')['map'](Number));\n    ary['sort'](function (a, b) {\n        var PFPwse = {\n            'JagQJ': function (x, y) {\n                return x == y;\n            },\n            'qugdr': function (x, y) {\n                return x == y;\n            }\n        };\n        if (a[0x2] == b[0x2] && PFPwse['JagQJ'](a[0x3], b[0x3]))\n            return a[0x0] - b[0x0];\n        else if (PFPwse['qugdr'](a[0x2], b[0x2]))\n            return a[0x3] - b[0x3];\n        else\n            return b[0x2] - a[0x2];\n    });\n    var ans = [];\n    var U = [];\n    for (var i = 0x0; i <= 0x3e8; i++)\n        U[i] = 0x0;\n    ary['forEach'](function (v, i) {\n        var nkRSyt = {\n            'VCHFU': function (x, y) {\n                return x < y;\n            },\n            'OztCx': function (x, y) {\n                return x < y;\n            }\n        };\n        var id = v[0x0];\n        var u = v[0x1];\n        if (nkRSyt['VCHFU'](i, 0xa)) {\n            if (nkRSyt['OztCx'](U[u], 0x3)) {\n                ans['push'](id);\n                U[u]++;\n            }\n        } else if (nkRSyt['OztCx'](i, 0x14)) {\n            if (nkRSyt['OztCx'](U[u], 0x2)) {\n                ans['push'](id);\n                U[u]++;\n            }\n        } else if (nkRSyt['VCHFU'](i, 0x1a)) {\n            if (U[u] == 0x0) {\n                ans['push'](id);\n                U[u]++;\n            }\n        }\n    });\n    console['log'](ans['join']('\\x0a'));\n}", "test_cases": [["6\n1 1 6 200\n2 1 6 300\n3 1 6 400\n4 2 5 1200\n5 1 5 1400\n6 3 4 800\n3\n777 1 5 300\n808 2 4 20\n123 3 6 500\n2\n2 1 3 100\n1 1 3 100\n0", "1\n2\n3\n4\n6\n123\n777\n808\n1\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n===0)break;\n   var ary=[];\n   for(var i=0;i<n;i++)ary.push(arr.shift().split(\" \").map(Number));\n   ary.sort(function(a,b){\n      if(a[2]==b[2] && a[3]==b[3])return a[0]-b[0];\n      else if(a[2]==b[2])return a[3]-b[3];\n      else return b[2]-a[2];\n   });\n   var ans=[];\n   var U=[];\n   for(var i=0;i<=1000;i++)U[i]=0;\n   ary.forEach(function(v,i){\n      var id=v[0];\n      var u=v[1];\n      if(i<10){\n         if(U[u]<3){ans.push(id);U[u]++;}\n      }else if(i<20){\n         if(U[u]<2){ans.push(id);U[u]++;}\n      }else if(i<26){\n         if(U[u]==0){ans.push(id);U[u]++;}\n      }\n   });\n   console.log(ans.join(\"\\n\"));\n}", "language": "JavaScript"}
{"filename": "p00648_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var obj = {};\n    var ary = [];\n    for (var i = 0x0; i < N; i++) {\n        var SfQmig = '3|4|5|1|2|0|6'['split']('|');\n        var SbGIsY = 0x0;\n        while (!![]) {\n            switch (SfQmig[SbGIsY++]) {\n            case '0':\n                obj[name] = w * 0x5a0 + s;\n                continue;\n            case '1':\n                var s = nws[0x2]['split']('')['map'](Number);\n                continue;\n            case '2':\n                s = s['length'] == 0x3 ? s[0x0] * 0x3c + s[0x1] * 0xa + s[0x2] : s[0x0] * 0x258 + s[0x1] * 0x3c + 0xa * s[0x2] + s[0x3];\n                continue;\n            case '3':\n                var nws = arr['shift']()['split']('\\x20');\n                continue;\n            case '4':\n                var name = nws[0x0];\n                continue;\n            case '5':\n                var w = nws[0x1] - 0x0;\n                continue;\n            case '6':\n                ary['push'](w * 0x5a0 + s);\n                continue;\n            }\n            break;\n        }\n    }\n    var P = arr['shift']() - 0x0;\n    for (var i = 0x0; i < P; i++) {\n        var f = arr['shift']();\n        ary['push'](obj[f] - 29.5);\n    }\n    ary['sort'](function (a, b) {\n        var HfFbmg = {\n            'rRrAk': function (x, y) {\n                return x - y;\n            }\n        };\n        return HfFbmg['rRrAk'](a, b);\n    });\n    var cnt = 0x0;\n    var i = 0x0;\n    var p = 0x0;\n    ary['forEach'](function (v) {\n        var TXosvY = {\n            'eZSeG': function (x, y) {\n                return x == y;\n            },\n            'dXiNK': function (x, y) {\n                return x % y;\n            },\n            'VOdZs': function (x, y) {\n                return x + y;\n            },\n            'Qabiz': function (x, y) {\n                return x <= y;\n            }\n        };\n        if (TXosvY['eZSeG'](TXosvY['dXiNK'](v, 0x1), 0.5)) {\n            cnt++;\n            p++;\n            i = TXosvY['VOdZs'](v, 29.5) + 0x1e;\n        } else if (TXosvY['Qabiz'](i, v)) {\n            cnt++;\n            i = TXosvY['VOdZs'](v, 0x1e);\n        }\n    });\n    if (p != P)\n        cnt = -0x1;\n    console['log'](cnt);\n}", "test_cases": [["1\ngalaxy_angel 0 600\n1\ngalaxy_angel\n11\nA 0 600\nB 0 610\nC 0 610\nD 0 610\nE 0 640\nEE 0 700\nF 0 710\nG 0 710\nH 0 710\nI 0 740\nJ 0 750\n2\nB\nH\n42\nnchj 6 2620\nanhnnnmewbktthsrn 4 2515\ngntmdsh 1 1800\nachnnl 4 2540\nhnskirh 0 2200\naonexrcst 0 1700\ndgdys 6 2330\nhdnnara 4 2525\ndnpaonntssotk 4 2555\nddmnwndrlnd 6 2500\nC 4 2445\nastrttnomch 0 2330\nseknnqasr 1 2630\nsftnt 4 2630\nstnsgt 2 2605\ndrrnenmknmrmr 4 2610\nhnzm 6 2713\nyndmsoazzlsn 6 2658\nmrahlcalv 4 2615\nhshzrhkkrhs 1 900\nortchntsbshni 0 2430\nkmnmzshrski 1 2530\nsktdnc 4 1800\ngykkybrkjhkirkhn 2 2459\ntrk 0 900\n30zzsinhkntiik 3 2700\nsngkotmmmirprdx 1 2600\nyran 2 2529\ntntissygntinybu 1 2614\nskiichhtki 5 2505\ntgrbnny 6 2558\ndnbrsnki 3 1927\nyugozxl 1 1930\nfrbllchrmn 1 1928\nfjrg 1 1955\nshwmngtr 0 2200\nxmn 5 2200\nrngnkkrskitikihn 0 2100\nszysz 0 1254\nprttyrythmaulrdrm 6 1000\nsckiesfrntrqst 5 1820\nmshdr 1 2255\n1\nmrahlcalv\n0", "1\n4\n31"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var N=arr.shift()-0;\n   if(N==0)break;\n   var obj={};\n   var ary=[];\n   for(var i=0;i<N;i++){\n      var nws=(arr.shift()).split(\" \");\n      var name=nws[0];\n      var w=nws[1]-0;\n      var s=nws[2].split(\"\").map(Number);\n      s=(s.length==3)?s[0]*60+s[1]*10+s[2]:s[0]*600+s[1]*60+10*s[2]+s[3];\n      obj[name]=(w*1440)+s;\n      ary.push((w*1440)+s);\n   }\n   var P=arr.shift()-0;\n   for(var i=0;i<P;i++){\n      var f=arr.shift();\n      ary.push(obj[f]-29.5);\n   }\n   ary.sort(function(a,b){return a-b;});\n   var cnt=0;\n   var i=0;\n   var p=0;\n   ary.forEach(function(v){\n      if(v%1==0.5){cnt++;p++;i=v+29.5+30;}\n      else if(i<=v){cnt++;i=v+30;}\n   });\n   if(p!=P)cnt=-1;\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00682_1", "type": "JavaScript", "obfuscated": "process['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    var dPCGdZ = {\n        'lxMfY': function (x, y) {\n            return x == y;\n        },\n        'nWeAs': function (x, y) {\n            return x < y;\n        },\n        'Xskcs': function (x, y) {\n            return x - y;\n        },\n        'NCAqN': function (x, y) {\n            return x * y;\n        },\n        'hirwj': function (x, y) {\n            return x + y;\n        }\n    };\n    var input = chunk['trim']()['split']('\\x0a');\n    var order = 0x1;\n    while (!![]) {\n        var n = input['shift']();\n        if (dPCGdZ['lxMfY'](n, 0x0))\n            break;\n        var coordinate = [];\n        while (n--)\n            coordinate['push'](input['shift']()['split']('\\x20')['map'](Number));\n        coordinate['push'](coordinate[0x0]);\n        var area = 0x0;\n        for (var i = 0x0; dPCGdZ['nWeAs'](i, dPCGdZ['Xskcs'](coordinate['length'], 0x1)); i++) {\n            area += dPCGdZ['Xskcs'](dPCGdZ['NCAqN'](coordinate[i][0x0], coordinate[dPCGdZ['hirwj'](i, 0x1)][0x1]), dPCGdZ['NCAqN'](coordinate[i][0x1], coordinate[dPCGdZ['hirwj'](i, 0x1)][0x0]));\n        }\n        console['log'](dPCGdZ['hirwj'](order + '\\x20', Math['abs'](area / 0x2)['toFixed'](0x1)));\n        input['shift']();\n        order++;\n    }\n});", "test_cases": [["3\n1 1\n3 4\n6 0\n\n7\n0 0\n10 10\n0 20\n10 30\n0 40\n100 40\n100 0\n\n0", "1 8.5\n2 3800.0"]], "original": "process.stdin.resume();\nprocess.stdin.setEncoding(\"utf8\");\nprocess.stdin.on(\"data\", function (chunk) {\n    var input = chunk.trim().split(\"\\n\");\n    var order = 1;\n    while (true) {\n        var n = input.shift();\n        if (n == 0)\n            break;\n        var coordinate = [];\n        while (n--)\n            coordinate.push(input.shift().split(\" \").map(Number));\n        coordinate.push(coordinate[0]);\n        var area = 0;\n        for (var i = 0; i < coordinate.length - 1; i++) {\n            area += (coordinate[i][0] * coordinate[i + 1][1]) - (coordinate[i][1] * coordinate[i + 1][0]);\n        }\n        console.log(order + \" \" + Math.abs(area / 2).toFixed(1));\n        input.shift();\n        order++;\n    }\n});", "language": "JavaScript"}
{"filename": "p00687_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nab = arr['shift']();\n    if (nab == '0\\x200\\x200')\n        break;\n    nab = nab['split']('\\x20')['map'](Number);\n    var n = nab[0x0];\n    var ab = [\n        nab[0x1],\n        nab[0x2]\n    ];\n    var dp = [];\n    for (var i = 0x0; i <= n; i++)\n        dp[i] = ![];\n    dp[0x0] = !![];\n    for (var i = 0x0; i < ab['length']; i++) {\n        for (var j = 0x0; j <= n; j++) {\n            if (dp[j])\n                dp[j + ab[i]] = !![];\n        }\n    }\n    var cnt = 0x0;\n    dp['forEach'](function (v) {\n        var YBQNqT = {\n            'YPzXi': function (x, y) {\n                return x == y;\n            }\n        };\n        if (YBQNqT['YPzXi'](v, ![]))\n            cnt++;\n    });\n    console['log'](cnt);\n}", "test_cases": [["10 2 3\n10 2 5\n100 5 25\n0 0 0", "1\n2\n80"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\nvar nab=arr.shift();\n   if(nab==\"0 0 0\")break;\n   nab=nab.split(\" \").map(Number);\n   var n=nab[0];\n   var ab=[nab[1],nab[2]];\n   var dp=[];\n   for(var i=0;i<=n;i++)dp[i]=false;\n   dp[0]=true;\n   for(var i=0;i<ab.length;i++){\n      for(var j=0;j<=n;j++){\n         if(dp[j])dp[j+ab[i]]=true;\n      }\n   }\n   var cnt=0;\n   dp.forEach(function(v){\n      if(v==false)cnt++;\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00693_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['replace'](/\\?/g, '.');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = arr['shift']()['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0 && m == 0x0)\n        break;\n    var rule = [];\n    while (n--) {\n        var ary = arr['shift']()['split']('\\x20');\n        var flag = ary[0x0] == 'permit' ? !![] : ![];\n        rule['push']([\n            flag,\n            new RegExp(ary[0x1] + ary[0x2])\n        ]);\n    }\n    var ans = [];\n    while (m--) {\n        var packet = arr['shift']()['split']('\\x20');\n        var str = packet[0x0] + packet[0x1];\n        var flag = ![];\n        rule['forEach'](function (v) {\n            var GFfMDl = {\n                'KtDwa': function (x, y) {\n                    return x == y;\n                }\n            };\n            if (GFfMDl['KtDwa'](v[0x0], !![]) && v[0x1]['test'](str))\n                flag = !![];\n            else if (GFfMDl['KtDwa'](v[0x0], ![]) && v[0x1]['test'](str))\n                flag = ![];\n        });\n        if (flag)\n            ans['push'](packet['join']('\\x20'));\n    }\n    console['log'](ans['length']);\n    ans['forEach'](function (v) {\n        console['log'](v);\n    });\n}", "test_cases": [["2 5\npermit 192168?? ?12??34?\ndeny 19216899 012343?5\n19216711 11233340 HiIamACracker\n19216891 01234345 Hello\n19216899 01234345 HiIamAlsoACracker\n19216809 11200340 World\n00000000 99999999 TheEndOfTheWorld\n1 2\npermit 12345678 23456789\n19216891 01234345 Hello\n12345678 23456789 Hello\n0 0", "2\n19216891 01234345 Hello\n19216809 11200340 World\n1\n12345678 23456789 Hello"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.replace(/\\?/g,\".\");\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nm=arr.shift().split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   if(n==0 && m==0)break;\n   var rule=[];\n   while(n--){\n      var ary=arr.shift().split(\" \");\n      var flag=(ary[0]==\"permit\")?true:false;\n      rule.push([flag,new RegExp(ary[1]+ary[2])]);\n   }\n   var ans=[];\n   while(m--){\n      var packet=arr.shift().split(\" \");\n      var str=packet[0]+packet[1];\n      var flag=false;\n      rule.forEach(function(v){\n         if(v[0]==true && v[1].test(str))flag=true;\n         else if(v[0]==false && v[1].test(str))flag=false;  \n      });\n      if(flag)ans.push(packet.join(\" \"));\n   }\n   console.log(ans.length);\n   ans.forEach(function(v){console.log(v);});\n}", "language": "JavaScript"}
{"filename": "p00700_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nwhile (n--) {\n    var CXPkXx = '4|0|2|1|3'['split']('|');\n    var zltSBc = 0x0;\n    while (!![]) {\n        switch (CXPkXx[zltSBc++]) {\n        case '0':\n            var max = [\n                0x0,\n                0x0,\n                0x0\n            ];\n            continue;\n        case '1':\n            max['shift']();\n            continue;\n        case '2':\n            while (!![]) {\n                var str = arr['shift']();\n                if (str == '0\\x200')\n                    break;\n                var ary = str['split']('\\x20')['map'](Number);\n                xy[0x0] += ary[0x0];\n                xy[0x1] += ary[0x1];\n                var d = Math['sqrt'](xy[0x0] * xy[0x0] + xy[0x1] * xy[0x1]);\n                if (max[0x0] < d)\n                    max = [\n                        d,\n                        xy[0x0],\n                        xy[0x1]\n                    ];\n                else if (max[0x0] == d && max[0x1] < xy[0x0])\n                    max = [\n                        d,\n                        xy[0x0],\n                        xy[0x1]\n                    ];\n            }\n            continue;\n        case '3':\n            console['log'](max['join']('\\x20'));\n            continue;\n        case '4':\n            var xy = [\n                0x0,\n                0x0\n            ];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\n1 0\n0 1\n-1 0\n1 0\n0 5\n-1 0\n0 -1\n5 0\n0 1\n0 -1\n1 0\n0 -4\n-3 0\n0 3\n2 0\n0 -2\n-1 0\n0 1\n0 -1\n1 0\n0 2\n-2 0\n0 -3\n3 0\n0 4\n-4 0\n0 -5\n-2 0\n0 0\n1 0\n-1 0\n0 0\n2 0\n0 1\n-1 0\n0 1\n-1 0\n0 -2\n0 0", "6 5\n1 0\n2 1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var xy=[0,0];\n   var max=[0,0,0];\n   while(true){\n      var str=arr.shift();\n      if(str==\"0 0\")break;\n      var ary=str.split(\" \").map(Number);\n      xy[0]+=ary[0];\n      xy[1]+=ary[1];\n      var d=Math.sqrt(xy[0]*xy[0]+xy[1]*xy[1]);\n      if(max[0]<d)max=[d,xy[0],xy[1]];\n      else if(max[0]==d && max[1]<xy[0])max=[d,xy[0],xy[1]];\n      }\n   max.shift();\n   console.log(max.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00705_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var v = Arr['shift']();\n    if (v == '0\\x200')\n        break;\n    var NQ = v['split']('\\x20')['map'](Number);\n    var arr = [];\n    for (var i = 0x0; i < 0x32; i++)\n        arr[i] = 0x0;\n    for (var i = 0x0; i < NQ[0x0]; i++) {\n        var day = Arr['shift']()['split']('\\x20')['map'](Number);\n        var L = day['shift']();\n        for (var j = 0x0; j < L; j++) {\n            arr[day[j]]++;\n        }\n    }\n    var result = 0x0;\n    var max = Math['max']['apply'](null, arr);\n    if (max >= NQ[0x1])\n        NQ[0x1] = max;\n    for (var i = 0x0; i < arr['length']; i++) {\n        if (arr[i] >= NQ[0x1]) {\n            result = i;\n            break;\n        }\n    }\n    console['log'](result);\n}", "test_cases": [["3 2\n2 1 4\n0\n3 3 4 8\n3 2\n4 1 5 8 9\n3 2 5 9\n5 2 4 5 7 9\n3 3\n2 1 4\n3 2 5 9\n2 2 4\n3 3\n2 1 2\n3 1 2 9\n2 2 4\n0 0", "4\n5\n0\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var v=Arr.shift();\n   if(v==\"0 0\")break;\n   var NQ=v.split(\" \").map(Number);\n   var arr=[];\n   for(var i=0;i<50;i++)arr[i]=0;\n   for(var i=0;i<NQ[0];i++){\n      var day=(Arr.shift()).split(\" \").map(Number);\n      var L=day.shift();\n      for(var j=0;j<L;j++){\n         arr[day[j]]++;\n      }\n   }\n   var result=0;\n   var max=Math.max.apply(null,arr);\n   if(max>=NQ[1])NQ[1]=max;\n   for(var i=0;i<arr.length;i++){\n      if(arr[i]>=NQ[1]){\n         result=i;\n         break;\n      }\n   }\n   console.log(result);\n}", "language": "JavaScript"}
{"filename": "p00718_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr['shift']()['split']('\\x20');\n    var sum = 0x0;\n    arr['forEach'](function (v) {\n        var BgfMtY = {\n            'vddqU': '1|6|0|4|2|5|3',\n            'cJaBh': function (x, y) {\n                return x == y;\n            },\n            'QoNte': function (x, y) {\n                return x - y;\n            },\n            'dDKUY': function (x, y) {\n                return x == y;\n            },\n            'kvtPn': function (x, y) {\n                return x * y;\n            }\n        };\n        v = v['replace'](/(\\d?)([mcxi])/g, function (s, s1, s2) {\n            var PllDwe = BgfMtY['vddqU']['split']('|');\n            var gXuUtM = 0x0;\n            while (!![]) {\n                switch (PllDwe[gXuUtM++]) {\n                case '0':\n                    if (BgfMtY['cJaBh'](s2, 'c'))\n                        s2 = 0x64;\n                    continue;\n                case '1':\n                    s1 = s1 ? BgfMtY['QoNte'](s1, 0x0) : 0x1;\n                    continue;\n                case '2':\n                    if (s2 == 'i')\n                        s2 = 0x1;\n                    continue;\n                case '3':\n                    return s;\n                case '4':\n                    if (BgfMtY['dDKUY'](s2, 'x'))\n                        s2 = 0xa;\n                    continue;\n                case '5':\n                    sum += BgfMtY['kvtPn'](s1, s2);\n                    continue;\n                case '6':\n                    if (BgfMtY['cJaBh'](s2, 'm'))\n                        s2 = 0x3e8;\n                    continue;\n                }\n                break;\n            }\n        });\n    });\n    var str = ('000' + sum)['slice'](-0x4);\n    var S = str['split']('')['map'](Number);\n    var result = '';\n    S['forEach'](function (v, i) {\n        var AtAwJI = {\n            'OpbiK': function (x, y) {\n                return x == y;\n            },\n            'VuCOR': function (x, y) {\n                return x !== y;\n            },\n            'HFBQX': function (x, y) {\n                return x + y;\n            },\n            'zlTib': function (x, y) {\n                return x + y;\n            }\n        };\n        if (AtAwJI['OpbiK'](v, 0x1))\n            v = '';\n        if (AtAwJI['VuCOR'](v, 0x0)) {\n            if (i == 0x0)\n                result += AtAwJI['HFBQX'](v, 'm');\n            if (AtAwJI['OpbiK'](i, 0x1))\n                result += AtAwJI['zlTib'](v, 'c');\n            if (AtAwJI['OpbiK'](i, 0x2))\n                result += v + 'x';\n            if (i == 0x3)\n                result += v + 'i';\n        }\n    });\n    console['log'](result);\n}", "test_cases": [["10\nxi x9i\ni 9i\nc2x2i 4c8x8i\nm2ci 4m7c9x8i\n9c9x9i i\ni 9m9c9x8i\nm i\ni m\nm9i i\n9m8c7xi c2x8i", "3x\nx\n6cx\n5m9c9x9i\nm\n9m9c9x9i\nmi\nmi\nmx\n9m9c9x9i"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=(Arr.shift()).split(\" \");\n   var sum=0;\n   arr.forEach(function(v){\n      v=v.replace(/(\\d?)([mcxi])/g,function(s,s1,s2){\n         s1=(s1)?s1-0:1;\n         if(s2==\"m\")s2=1000;\n         if(s2==\"c\")s2=100;\n         if(s2==\"x\")s2=10;\n         if(s2==\"i\")s2=1;\n         sum+=(s1*s2);\n         return s;\n      });\n   });\n   var str=(\"000\"+sum).slice(-4);\n   var S=str.split(\"\").map(Number);\n   var result=\"\";\n   S.forEach(function(v,i){\n      if(v==1)v=\"\";\n      if(v!==0){\n         if(i==0)result+=v+\"m\";\n         if(i==1)result+=v+\"c\";\n         if(i==2)result+=v+\"x\";\n         if(i==3)result+=v+\"i\";\n      }\n   });\n   console.log(result);\n}", "language": "JavaScript"}
{"filename": "p00722_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var kLpJkW = {\n        'nqaHZ': function (x, y) {\n            return x <= y;\n        },\n        'JssfA': function (x, y) {\n            return x == y;\n        },\n        'HRwXz': function (x, y) {\n            return x <= y;\n        },\n        'pMeHi': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; kLpJkW['nqaHZ'](i, sqrt); i++) {\n        if (kLpJkW['JssfA'](arr[i], ![]))\n            continue;\n        for (var j = i + i; kLpJkW['nqaHZ'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; kLpJkW['HRwXz'](i, max); i++) {\n        if (kLpJkW['pMeHi'](arr[i], ![]))\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nvar p = prime(0xf423f);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var v = Arr['shift']();\n    if (v == '0\\x200\\x200')\n        break;\n    var adn = v['split']('\\x20')['map'](Number);\n    var cnt = 0x0;\n    var sum = adn[0x0] - adn[0x1];\n    while (cnt != adn[0x2]) {\n        sum += adn[0x1];\n        if (p['hasOwnProperty'](sum))\n            cnt++;\n    }\n    console['log'](sum);\n}", "test_cases": [["367 186 151\n179 10 203\n271 37 39\n103 230 1\n27 104 185\n253 50 85\n1 1 1\n9075 337 210\n307 24 79\n331 221 177\n259 170 40\n269 58 102\n0 0 0", "92809\n6709\n12037\n103\n93523\n14503\n2\n899429\n5107\n412717\n22699\n25673"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var v=Arr.shift();\n   if(v==\"0 0 0\")break;\n   var adn=v.split(\" \").map(Number);\n   var cnt=0;\n   var sum=adn[0]-adn[1];\n   while(cnt!=adn[2]){\n      sum+=adn[1];\n      if(p.hasOwnProperty(sum))cnt++;\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00735_1", "type": "JavaScript", "obfuscated": "var ms = [];\nvar flag = [];\nfor (var i = 0x0; i < 0x493e0; i++)\n    flag[i] = !![];\nvar i = 0x1;\nwhile (!![]) {\n    var m = 0x7 * i - 0x1;\n    var s = 0x7 * i + 0x1;\n    if (m > 0x493e0)\n        break;\n    i++;\n    if (flag[m])\n        ms['push'](m);\n    if (flag[s])\n        ms['push'](s);\n    var j = 0x2;\n    while (!![]) {\n        if (m * j > 0x493e0)\n            break;\n        flag[m * j] = ![];\n        flag[s * j] = ![];\n        j++;\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x1)\n        break;\n    var ans = [];\n    var i = 0x0;\n    ms['some'](function (v) {\n        var hNsXKm = {\n            'sNabE': function (x, y) {\n                return x == y;\n            },\n            'Netza': function (x, y) {\n                return x % y;\n            },\n            'nHMlb': function (x, y) {\n                return x < y;\n            }\n        };\n        if (hNsXKm['sNabE'](hNsXKm['Netza'](n, v), 0x0))\n            ans['push'](v);\n        return hNsXKm['nHMlb'](n, v);\n    });\n    console['log'](n + ':\\x20' + ans['join']('\\x20'));\n}", "test_cases": [["205920\n262144\n262200\n279936\n299998\n1", "205920: 6 8 13 15 20 22 55 99\n262144: 8\n262200: 6 8 15 20 50 57 69 76 92 190 230 475 575 874 2185\n279936: 6 8 27\n299998: 299998"]], "original": "var ms=[];\nvar flag=[];\nfor(var i=0;i<300000;i++)flag[i]=true;\nvar i=1;\nwhile(true){\n   var m=(7*i)-1;\n   var s=(7*i)+1;\n   if(m>300000)break;\n   i++;\n   if(flag[m])ms.push(m);\n   if(flag[s])ms.push(s);\n   var j=2;\n   while(true){\n      if(m*j>300000)break;\n      flag[m*j]=false;\n      flag[s*j]=false;\n      j++;\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==1)break;\n   var ans=[];\n   var i=0;\n   ms.some(function(v){\n      if(n%v==0)ans.push(v);\n      return (n<v);\n   });\n   console.log(n+\": \"+ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00767_1", "type": "JavaScript", "obfuscated": "function HW() {\n    var wjOQCr = {\n        'HzAgL': function (x, y) {\n            return x == y;\n        },\n        'AIKtx': function (x, y) {\n            return x < y;\n        },\n        'zTMlY': function (x, y) {\n            return x + y;\n        },\n        'wVPhc': function (x, y) {\n            return x <= y;\n        },\n        'ctiwx': function (x, y) {\n            return x + y;\n        },\n        'BgTAi': function (x, y) {\n            return x * y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x1; wjOQCr['AIKtx'](i, 0x96); i++) {\n        for (var j = wjOQCr['zTMlY'](i, 0x1); wjOQCr['wVPhc'](j, 0x96); j++) {\n            arr['push']([\n                i,\n                j,\n                wjOQCr['ctiwx'](wjOQCr['BgTAi'](i, i), wjOQCr['BgTAi'](j, j))\n            ]);\n        }\n    }\n    arr['sort'](function (a, b) {\n        if (wjOQCr['HzAgL'](a[0x2], b[0x2]))\n            return a[0x0] - b[0x0];\n        else\n            return a[0x2] - b[0x2];\n    });\n    return arr;\n}\nvar Rectangles = HW();\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var hw = Arr['shift']()['split']('\\x20')['map'](Number);\n    var h = hw[0x0];\n    var w = hw[0x1];\n    if (h == 0x0 && w == 0x0)\n        break;\n    var num = h * h + w * w;\n    for (var i = 0x0; i < Rectangles['length']; i++) {\n        if (Rectangles[i][0x0] == h && Rectangles[i][0x1] == w)\n            break;\n    }\n    console['log'](Rectangles[i + 0x1][0x0] + '\\x20' + Rectangles[i + 0x1][0x1]);\n}", "test_cases": [["1 2\n1 3\n2 3\n1 4\n2 4\n5 6\n1 8\n4 7\n98 100\n99 100\n0 0", "1 3\n2 3\n1 4\n2 4\n3 4\n1 8\n4 7\n2 8\n3 140\n89 109"]], "original": "function HW(){\n   var arr=[];\n   for(var i=1;i<150;i++){\n      for(var j=i+1;j<=150;j++){\n         arr.push([i,j,i*i+j*j]);\n      }\n   }\n   arr.sort(function(a,b){\n      if(a[2]==b[2])return a[0]-b[0];\n      else return a[2]-b[2];\n   });\n   return arr;\n}\nvar Rectangles=HW();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var hw=Arr.shift().split(\" \").map(Number);\n   var h=hw[0];\n   var w=hw[1];\n   if(h==0 && w==0)break;\n   var num=h*h+w*w;\n   for(var i=0;i<Rectangles.length;i++){\n      if(Rectangles[i][0]==h &&Rectangles[i][1]==w)break;\n   }\n   console.log(Rectangles[i+1][0]+\" \"+Rectangles[i+1][1]);\n}", "language": "JavaScript"}
{"filename": "p00773_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var xys = Arr['shift']()['split']('\\x20')['map'](Number);\n    var x = xys[0x0];\n    var y = xys[0x1];\n    var s = xys[0x2];\n    if (x == 0x0 && y == 0x0 && s == 0x0)\n        break;\n    var max = 0x0;\n    for (var i = 0x1; i <= s - 0x1; i++) {\n        for (var j = 0x1; j <= s - 0x1; j++) {\n            var a = Math['floor'](i * (0x64 + x) / 0x64) + Math['floor'](j * (0x64 + x) / 0x64);\n            if (a > s)\n                break;\n            if (a == s) {\n                var b = Math['floor'](i * (0x64 + y) / 0x64) + Math['floor'](j * (0x64 + y) / 0x64);\n                max = Math['max'](max, b);\n                break;\n            }\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["5 8 105\n8 5 105\n1 2 24\n99 98 24\n12 13 26\n1 22 23\n1 13 201\n13 16 112\n2 24 50\n1 82 61\n1 84 125\n1 99 999\n99 1 999\n98 99 999\n1 99 11\n99 1 12\n0 0 0", "109\n103\n24\n24\n26\n27\n225\n116\n62\n111\n230\n1972\n508\n1004\n20\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var xys=Arr.shift().split(\" \").map(Number);\n   var x=xys[0];\n   var y=xys[1];\n   var s=xys[2];\n   if(x==0 && y==0 && s==0)break;\n   var max=0;\n   for(var i=1;i<=s-1;i++){\n      for(var j=1;j<=s-1;j++){\n         var a=Math.floor(i*(100+x)/100)+Math.floor(j*(100+x)/100);\n         if(a>s)break;\n         if(a==s){\n            var b=Math.floor(i*(100+y)/100)+Math.floor(j*(100+y)/100);\n            max=Math.max(max,b);\n            break;\n         }\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00788_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var pn = arr['shift']()['split']('\\x20')['map'](Number);\n    if (pn['join']('\\x20') == '0\\x200')\n        break;\n    var p = Math['sqrt'](pn[0x0]);\n    var n = pn[0x1];\n    var max = 0x0;\n    var min = Infinity;\n    var ans = [];\n    for (var i = 0x1; i <= n; i++) {\n        for (var j = 0x1; j <= n; j++) {\n            var v = i / j;\n            if (p > v && max < v) {\n                max = v;\n                ans[0x1] = i + '/' + j;\n            } else if (p < v && min > v) {\n                min = v;\n                ans[0x0] = i + '/' + j;\n            }\n        }\n    }\n    console['log'](ans['join']('\\x20'));\n}", "test_cases": [["2 5\n3 10\n5 100\n0 0", "3/2 4/3\n7/4 5/3\n85/38 38/17"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\nvar pn=arr.shift().split(\" \").map(Number);\nif(pn.join(\" \")==\"0 0\")break;\nvar p=Math.sqrt(pn[0]);\nvar n=pn[1];\nvar max=0;\nvar min=Infinity;\nvar ans=[];\nfor(var i=1;i<=n;i++){\nfor(var j=1;j<=n;j++){\nvar v=i/j;\nif(p>v && max<v){\nmax=v;\nans[1]=i+\"/\"+j;\n}else if(p<v && min>v){\nmin=v;\nans[0]=i+\"/\"+j;\n}\n}\n}\nconsole.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00790_1", "type": "JavaScript", "obfuscated": "function move(d1, d2, d3, d4, d5, d6) {\n    var mHCLse = {\n        'LFRnx': function (x, y) {\n            return x == y;\n        },\n        'ugtEs': function (x, y) {\n            return x == y;\n        },\n        'tRuDH': function (x, y) {\n            return x == y;\n        }\n    };\n    var x = this['toString']();\n    if (mHCLse['LFRnx'](x, 's'))\n        return [\n            d2,\n            d6,\n            d3,\n            d4,\n            d1,\n            d5\n        ];\n    else if (mHCLse['ugtEs'](x, 'n'))\n        return [\n            d5,\n            d1,\n            d3,\n            d4,\n            d6,\n            d2\n        ];\n    else if (mHCLse['tRuDH'](x, 'w'))\n        return [\n            d4,\n            d2,\n            d1,\n            d6,\n            d5,\n            d3\n        ];\n    else if (mHCLse['tRuDH'](x, 'e'))\n        return [\n            d3,\n            d2,\n            d6,\n            d1,\n            d5,\n            d4\n        ];\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var dice = [\n        0x1,\n        0x2,\n        0x3,\n        0x4,\n        0x5,\n        0x6\n    ];\n    while (n--) {\n        var str = arr['shift']();\n        dice = move['apply'](str[0x0], dice);\n    }\n    console['log'](dice[0x0]);\n}", "test_cases": [["1\nnorth\n3\nnorth\neast\nsouth\n0", "5\n1"]], "original": "function move(d1,d2,d3,d4,d5,d6){\n   var x=this.toString();\n   if(x==\"s\")return [d2,d6,d3,d4,d1,d5];\n   else if(x==\"n\")return [d5,d1,d3,d4,d6,d2];\n   else if(x==\"w\")return [d4,d2,d1,d6,d5,d3];\n   else if(x==\"e\")return [d3,d2,d6,d1,d5,d4];\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var dice=[1,2,3,4,5,6];\n   while(n--){\n      var str=arr.shift();\n      dice=move.apply(str[0],dice);\n   }\n   console.log(dice[0]);\n}", "language": "JavaScript"}
{"filename": "p01085_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var VUhPbS = {\n        'szkfa': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HwnDF': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'LiNgN': function (x, y) {\n            return x == y;\n        },\n        'wwPVE': function (x, y) {\n            return x == y;\n        },\n        'EsQlx': function (x, y) {\n            return x < y;\n        },\n        'BMfSg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RCLgk': function (x, y) {\n            return x - y;\n        },\n        'azAHv': function (x, y) {\n            return x < y;\n        },\n        'cwXTq': function (x, y) {\n            return x >= y;\n        },\n        'lIJxT': function (x, y) {\n            return x + y;\n        },\n        'QvGcW': function (x, y) {\n            return x + y;\n        },\n        'brLED': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var k = 0x0;\n    while (0x1) {\n        input[k] = input[k]['split']('\\x20');\n        var m = VUhPbS['szkfa'](parseInt, input[k][0x0], 0xa);\n        var nmin = VUhPbS['HwnDF'](parseInt, input[k][0x1], 0xa);\n        var nmax = parseInt(input[k++][0x2], 0xa);\n        if (VUhPbS['LiNgN'](m, 0x0) && VUhPbS['LiNgN'](nmin, 0x0) && VUhPbS['wwPVE'](nmax, 0x0))\n            break;\n        var maxg = 0x0, maxn = 0x0;\n        var p = [];\n        for (var i = 0x0; VUhPbS['EsQlx'](i, m); i++)\n            p[i] = VUhPbS['BMfSg'](parseInt, input[k++], 0xa);\n        for (var i = VUhPbS['RCLgk'](nmin, 0x1); VUhPbS['azAHv'](i, nmax); i++) {\n            if (VUhPbS['cwXTq'](p[i] - p[VUhPbS['lIJxT'](i, 0x1)], maxg)) {\n                maxg = p[i] - p[VUhPbS['QvGcW'](i, 0x1)];\n                maxn = i;\n            }\n        }\n        console['log'](VUhPbS['brLED'](maxn, 0x1));\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 2 4\n100\n90\n82\n70\n65\n5 2 4\n100\n90\n80\n75\n65\n3 1 2\n5000\n4000\n3000\n4 2 3\n10000\n10000\n8000\n8000\n4 2 3\n10000\n10000\n10000\n8000\n5 2 3\n100\n80\n68\n60\n45\n0 0 0", "3\n4\n2\n2\n3\n2"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    var k = 0;\n    while(1){\n        input[k] = input[k].split(\" \");\n        var m = parseInt(input[k][0],10);\n        var nmin = parseInt(input[k][1],10);\n        var nmax = parseInt(input[k++][2],10);\n        if(m == 0 && nmin == 0 && nmax == 0)\n            break;\n\n        var maxg = 0,maxn = 0;\n\n        var p = [];\n        for(var i = 0;i < m;i++)\n            p[i] = parseInt(input[k++],10);\n\n        for(var i = nmin - 1;i < nmax;i++){\n            if(p[i] - p[i + 1] >= maxg){\n                maxg = p[i] - p[i + 1];\n                maxn = i;\n            }\n        }\n        console.log(maxn + 1);\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p01102_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var a = arr['shift']();\n    if (a == '.')\n        break;\n    var b = arr['shift']();\n    var memo = [];\n    var aa = a['replace'](/\".*?\"/g, function (s) {\n        memo['push'](s);\n        return '\\x22';\n    });\n    var cnt = 0x0;\n    var bb = b['replace'](/\".*?\"/g, function (s) {\n        if (s != memo['shift']())\n            cnt++;\n        return '\\x22';\n    });\n    if (aa == bb && cnt == 0x0)\n        console['log']('IDENTICAL');\n    else if (aa == bb && cnt == 0x1)\n        console['log']('CLOSE');\n    else if (aa != bb || aa == bb && cnt > 0x1)\n        console['log']('DIFFERENT');\n}", "test_cases": [["print\"hello\";print123\nprint\"hello\";print123\nread\"B1input\";solve;output;\nread\"B2\";solve;output;\nread\"C1\";solve;output\"C1ans\";\nread\"C2\";solve;output\"C2ans\";\n\"\"\"\"\"\"\"\"\n\"\"\"42\"\"\"\"\"\nslow\"program\"\nfast\"code\"\n\"super\"fast\"program\"\n\"super\"faster\"program\"\nX\"\"\nX\nI\"S\"\"CREAM\"\nI\"CE\"\"CREAM\"\n11\"22\"11\n1\"33\"111\n.", "IDENTICAL\nCLOSE\nDIFFERENT\nCLOSE\nDIFFERENT\nDIFFERENT\nDIFFERENT\nCLOSE\nDIFFERENT"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var a = arr.shift();\n   if(a==\".\")break;\n   var b = arr.shift();\n   var memo=[];\n   var aa = a.replace(/\".*?\"/g,function(s){\n      memo.push(s);\n      return \"\\\"\";\n   });\n   var cnt =0;\n   var bb = b.replace(/\".*?\"/g,function(s){\n      if(s != memo.shift())cnt++;\n      return \"\\\"\";\n   });\n   if(aa==bb && cnt==0) console.log(\"IDENTICAL\");\n   else if( aa==bb && cnt==1) console.log(\"CLOSE\");\n   else if(aa != bb || (aa==bb && cnt>1))console.log(\"DIFFERENT\");\n}\n", "language": "JavaScript"}
{"filename": "p01126_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var A = Arr['shift']();\n    if (A == '0\\x200\\x200')\n        break;\n    var arr = A['split']('\\x20')['map'](Number);\n    var m = arr[0x1];\n    var start = arr[0x2];\n    var hpq = [];\n    for (var i = 0x0; i < m; i++)\n        hpq['push'](Arr['shift']());\n    hpq['sort'](function (a, b) {\n        var vPZFQA = {\n            'nhGfP': function (x, y) {\n                return x - y;\n            },\n            'xGlCM': function (x, y) {\n                return x >= y;\n            }\n        };\n        a = a['split']('\\x20')[0x0] - 0x0;\n        b = vPZFQA['nhGfP'](b['split']('\\x20')[0x0], 0x0);\n        if (vPZFQA['xGlCM'](a, b))\n            return -0x1;\n        else\n            return 0x1;\n    });\n    var H = 0x3e9;\n    for (var i = 0x0; i < hpq['length']; i++) {\n        var HPQ = hpq[i]['split']('\\x20')['map'](Number);\n        var h = HPQ[0x0];\n        var p = HPQ[0x1];\n        var q = HPQ[0x2];\n        if (H == h)\n            continue;\n        if (start == p || start == q) {\n            H = h;\n            start = start == p ? q : p;\n        }\n    }\n    console['log'](start);\n}", "test_cases": [["4 4 1\n3 1 2\n2 2 3\n3 3 4\n1 3 4\n0 0 0", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var A=Arr.shift();\n   if(A==\"0 0 0\")break;\n   var arr=A.split(\" \").map(Number);\n   var m=arr[1];\n   var start=arr[2];\n   var hpq=[];\n   for(var i=0;i<m;i++)hpq.push(Arr.shift());\n   hpq.sort(function(a,b){\n      a=(a.split(\" \"))[0]-0;\n      b=(b.split(\" \"))[0]-0;\n      if(a>=b)return -1;\n      else return 1;\n   });\n  var H=1001;\n   for(var i=0;i<hpq.length;i++){\n      var HPQ=hpq[i].split(\" \").map(Number);\n      var h=HPQ[0];\n      var p=HPQ[1];\n      var q=HPQ[2];\n      if(H==h)continue;\n      if(start==p || start==q){\n         H=h;\n         start=(start==p)?q:p;\n      }\n   }\n   console.log(start);\n}", "language": "JavaScript"}
{"filename": "p01137_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var e = Arr['shift']() - 0x0;\n    if (e == 0x0)\n        break;\n    var min = Infinity;\n    for (var z = 0x0; z <= 0x64; z++) {\n        for (var y = 0x0; y <= 0x3e8; y++) {\n            var x = e - (Math['pow'](z, 0x3) + Math['pow'](y, 0x2));\n            if (x < 0x0)\n                break;\n            min = Math['min'](min, z + y + x);\n        }\n    }\n    console['log'](min);\n}", "test_cases": [["1\n2\n4\n27\n300\n1250\n0", "1\n2\n2\n3\n18\n44"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var e=Arr.shift()-0;\n   if(e==0)break;\n   var min=Infinity;\n   for(var z=0;z<=100;z++){\n      for(var y=0;y<=1000;y++){\n         var x=e-(Math.pow(z,3)+Math.pow(y,2));\n         if(x<0)break;\n         min=Math.min(min,z+y+x)\n      }\n   }\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01202_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nwhile (n--) {\n    var ary = arr['shift']()['split']('');\n    var ans = 'Yes';\n    var s = '';\n    ary['forEach'](function (v) {\n        if (v == s)\n            ans = 'No';\n        s = v;\n    });\n    console['log'](ans);\n}", "test_cases": [["3\nUU\nRDUL\nULDURDULDURDULDURDULDURD", "No\nYes\nYes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var ary=arr.shift().split(\"\");\n   var ans=\"Yes\";\n   var s=\"\";\n   ary.forEach(function(v){\n      if(v==s)ans=\"No\";\n      s=v;\n   });\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p01227_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar t = arr['shift']() - 0x0;\nwhile (t--) {\n    var [n, k] = arr['shift']()['split']('\\x20')['map'](Number);\n    var x = arr['shift']()['split']('\\x20')['map'](Number);\n    var d = x[x['length'] - 0x1] - x[0x0];\n    var a = [];\n    for (var i = 0x0; i < x['length'] - 0x1; i++)\n        a['push'](x[i + 0x1] - x[i]);\n    a['sort']((a, b) => b - a);\n    var sum = 0x0;\n    for (var i = 0x0; i < k - 0x1; i++) {\n        if (i > a['length'] - 0x1)\n            break;\n        sum += a[i];\n    }\n    console['log'](d - sum);\n}", "test_cases": [["6\n5 2\n10 30 40 70 100\n7 3\n3 6 10 17 21 26 28\n1 1\n100\n2 1\n0 1000000\n3 5\n30 70 150\n6 4\n0 10 20 30 40 50", "60\n13\n0\n1000000\n0\n20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar t=arr.shift()-0;\nwhile(t--){\n   var [n,k]=arr.shift().split(\" \").map(Number);\n   var x=arr.shift().split(\" \").map(Number);\n   var d=x[x.length-1]-x[0];\n   var a=[];\n   for(var i=0;i<x.length-1;i++)a.push(x[i+1]-x[i]);\n   a.sort((a,b)=>b-a);\n   var sum=0;\n   for(var i=0;i<k-1;i++){\n      if(i>a.length-1)break;\n      sum+=a[i];\n   }\n   console.log(d-sum);\n}\n", "language": "JavaScript"}
{"filename": "p01267_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (arr['join']('') == '00000')\n        break;\n    var y = Arr['shift']()['split']('\\x20')['map'](Number);\n    (function (N, A, B, C, X) {\n        var QBzrUg = {\n            'JKHeY': function (x, y) {\n                return x == y;\n            },\n            'mEfTD': function (x, y) {\n                return x * y;\n            },\n            'oTxXU': function (x, y) {\n                return x == y;\n            }\n        };\n        var i = 0x0;\n        while (!![]) {\n            if (QBzrUg['JKHeY'](y[0x0], X))\n                y['shift']();\n            if (y['length'] == 0x0) {\n                console['log'](i);\n                break;\n            }\n            X = (QBzrUg['mEfTD'](A, X) + B) % C;\n            i++;\n            if (QBzrUg['oTxXU'](i, 0x2711)) {\n                console['log'](-0x1);\n                break;\n            }\n        }\n    }['apply'](null, arr));\n}", "test_cases": [["1 5 7 11 10\n10\n2 5 7 11 10\n2 4\n2 1 1 256 0\n128 255\n2 0 0 1 0\n1234 5678\n2 1 1 100 0\n99 98\n2 1 1 100 0\n99 99\n2 1 1 10000 0\n1 0\n2 1 1 10000 0\n2 1\n0 0 0 0 0", "0\n3\n255\n-1\n198\n199\n10000\n-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr.join(\"\")==\"00000\")break;\n   var y=(Arr.shift()).split(\" \").map(Number);\n   (function(N, A, B, C, X){\n      var i=0;\n      while(true){\n         if(y[0]==X)y.shift();\n         if(y.length==0){console.log(i);break;}\n         X=((A*X)+B)%C;\n         i++;\n         if(i==10001){console.log(-1);break;}\n      }\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p01398_1", "type": "JavaScript", "obfuscated": "var objStr = {};\nvar objNum = {};\nvar abc = 'abcdefghijklmnopqrstuvwxyz'['split']('');\nabc['forEach'](function (v, i) {\n    objStr[v] = i;\n    objNum[i] = v;\n});\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var str = Arr['shift']();\n    var AB = [];\n    for (var i = 0x0; i < N; i++) {\n        var ab = Arr['shift']()['split']('\\x20')['map'](Number);\n        AB['push'](ab);\n    }\n    AB['reverse']();\n    var s = str['split']('');\n    for (var i = 0x0; i < N; i++) {\n        var wsGnIe = '6|7|2|4|3|0|5|1'['split']('|');\n        var FNwYoW = 0x0;\n        while (!![]) {\n            switch (wsGnIe[FNwYoW++]) {\n            case '0':\n                var n2 = objStr[m2] + plus;\n                continue;\n            case '1':\n                s[ab[0x1] - 0x1] = objNum[n1 % abc['length']];\n                continue;\n            case '2':\n                var m1 = s[ab[0x0] - 0x1];\n                continue;\n            case '3':\n                var n1 = objStr[m1] + plus;\n                continue;\n            case '4':\n                var m2 = s[ab[0x1] - 0x1];\n                continue;\n            case '5':\n                s[ab[0x0] - 0x1] = objNum[n2 % abc['length']];\n                continue;\n            case '6':\n                var ab = AB[i];\n                continue;\n            case '7':\n                var plus = ab[0x1] - ab[0x0];\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](s['join'](''));\n}", "test_cases": [["1\ntojxo\n1 4\n5\nuhcqmlmkv\n4 5\n6 9\n3 6\n1 7\n3 6\n5\nshzxadexonr\n8 9\n3 9\n5 8\n4 9\n10 11\n0", "aojwo\nshinryaku\nshitadegeso"]], "original": "var objStr={};\nvar objNum={};\nvar abc=\"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nabc.forEach(function(v,i){\n   objStr[v]=i;\n   objNum[i]=v;\n});\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var str=Arr.shift();\n   var AB=[];\n   for(var i=0;i<N;i++){\n      var ab=(Arr.shift()).split(\" \").map(Number);\n      AB.push(ab);\n   }\n   AB.reverse();\n   var s=str.split(\"\");\n   for(var i=0;i<N;i++){\n      var ab=AB[i];\n      var plus=ab[1]-ab[0];\n      var m1=s[ab[0]-1];\n      var m2=s[ab[1]-1];\n      var n1=objStr[m1]+plus;\n      var n2=objStr[m2]+plus;\n      s[ab[0]-1]=objNum[n2%abc.length];\n      s[ab[1]-1]=objNum[n1%abc.length];\n   }\n   console.log(s.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p01694_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = arr['shift']()['split']('\\x20');\n    var L = 0x0;\n    var R = 0x0;\n    var UD = 0x2;\n    var cnt = 0x0;\n    ary['forEach'](function (v) {\n        var HgaYgk = {\n            'uBEld': function (x, y) {\n                return x == y;\n            },\n            'SNcze': function (x, y) {\n                return x == y;\n            },\n            'ROUGp': function (x, y) {\n                return x + y;\n            }\n        };\n        if (HgaYgk['uBEld'](v, 'lu'))\n            L = 0x1;\n        else if (HgaYgk['SNcze'](v, 'ru'))\n            R = 0x1;\n        else if (v == 'ld')\n            L = 0x0;\n        else if (HgaYgk['SNcze'](v, 'rd'))\n            R = 0x0;\n        if (UD == HgaYgk['ROUGp'](L, R)) {\n            cnt++;\n            UD = UD == 0x2 ? 0x0 : 0x2;\n        }\n    });\n    console['log'](cnt);\n}", "test_cases": [["4\nlu ru ld rd\n4\nlu ld lu ru\n1\nlu\n10\nru lu ld rd ru rd ru lu rd ld\n0", "2\n1\n0\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=arr.shift().split(\" \");\n   var L=0;\n   var R=0;\n   var UD=2;\n   var cnt=0;\n   ary.forEach(function(v){\n      if(v==\"lu\")L=1;\n      else if(v==\"ru\")R=1;\n      else if(v==\"ld\")L=0;\n      else if(v==\"rd\")R=0;\n      if(UD==L+R){\n         cnt++;\n         UD=(UD==2)?0:2;\n      }\n   });\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01845_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var FKgFkY = {\n        'PnbEP': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'xwZfb': function (x, y) {\n            return x == y;\n        },\n        'SBjFV': function (x, y) {\n            return x * y;\n        },\n        'FHjln': function (x, y) {\n            return x - y;\n        },\n        'ZsUNM': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    for (var i = 0x0; 0x1; i++) {\n        input[i] = input[i]['split']('\\x20');\n        var r0 = FKgFkY['PnbEP'](parseInt, input[i][0x0], 0xa);\n        var w0 = FKgFkY['PnbEP'](parseInt, input[i][0x1], 0xa);\n        var c = FKgFkY['PnbEP'](parseInt, input[i][0x2], 0xa);\n        var r = parseInt(input[i][0x3], 0xa);\n        if (r0 == 0x0 && w0 == 0x0 && c == 0x0 && FKgFkY['xwZfb'](r, 0x0))\n            break;\n        var a = FKgFkY['SBjFV'](c, w0);\n        if (a <= r0)\n            console['log']('0');\n        else {\n            console['log'](Math['floor'](FKgFkY['FHjln'](FKgFkY['ZsUNM'](FKgFkY['FHjln'](a, r0), r), 0x1) / r));\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 5 3 4\n2 5 2 3\n91 13 7 62\n10 1 3 5\n20 100 2 20\n2 14 7 1\n0 0 0 0", "2\n3\n0\n0\n9\n96"]], "original": "function Main(input){\n    input = input.split(\"\\n\");\n    for(var i = 0;1;i++){\n        input[i] = input[i].split(\" \");\n        var r0 = parseInt(input[i][0],10);\n        var w0 = parseInt(input[i][1],10);\n        var c = parseInt(input[i][2],10);\n        var r = parseInt(input[i][3],10);\n        if(r0 == 0 && w0 == 0 && c == 0 && r == 0)\n            break;\n\n        var a = c * w0;\n        if(a <= r0)\n            console.log(\"0\");\n        else{\n            console.log(Math.floor((a - r0 + r - 1) / r));\n        }\n    }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p02016_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nif (input == 'ani')\n    console['log']('square1001');\nelse\n    console['log']('e869120');", "test_cases": [["ani", "square1001"], ["otouto", "e869120"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nif(input==\"ani\")console.log(\"square1001\");\nelse console.log(\"e869120\");\n", "language": "JavaScript"}
{"filename": "p02125_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar max = 0x0;\nfor (var i = 0x1; i <= n; i++) {\n    var s = (i['toString'](0x2) + '')['split']('')['map'](Number);\n    var sum = s['reduce']((a, b) => a + b);\n    max = Math['max'](max, sum);\n}\nconsole['log'](max);", "test_cases": [["2", "1"], ["9", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n = arr.shift()-0;\nvar max=0;\nfor(var i=1;i<=n;i++){\n   var s = (i.toString(2) + \"\").split(\"\").map(Number);\n   var sum = s.reduce((a,b)=>a+b);\n   max=Math.max(max,sum);\n}\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02326_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [h, w] = arr['shift']()['split']('\\x20')['map'](Number);\nvar yx = [];\nfor (var i = 0x0; i < h; i++) {\n    yx[i] = arr['shift']()['split']('\\x20')['map'](v => 0x1 - (v - 0x0));\n}\nfor (var y = 0x1; y < h; y++) {\n    for (var x = 0x1; x < w; x++) {\n        if (yx[y][x] == 0x1)\n            yx[y][x] = Math['min'](yx[y - 0x1][x], yx[y][x - 0x1], yx[y - 0x1][x - 0x1]) + 0x1;\n    }\n}\nvar max = 0x0;\nfor (var y = 0x0; y < h; y++) {\n    for (var x = 0x0; x < w; x++) {\n        max = Math['max'](max, yx[y][x]);\n    }\n}\nconsole['log'](max * max);", "test_cases": [["4 5\n0 0 1 0 0\n1 0 0 0 0\n0 0 0 1 0\n0 0 0 1 0", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar yx=[];\nfor(var i=0;i<h;i++){\n   yx[i]=arr.shift().split(\" \").map(v=>1-(v-0));\n}\nfor(var y=1;y<h;y++){\n   for(var x=1;x<w;x++){\n      if(yx[y][x]==1)yx[y][x]=Math.min(yx[y-1][x],yx[y][x-1],yx[y-1][x-1])+1;\n   }\n}\nvar max=0;\nfor(var y=0;y<h;y++){\n   for(var x=0;x<w;x++){\n      max=Math.max(max,yx[y][x]);\n   }\n}\nconsole.log(max*max);\n", "language": "JavaScript"}
{"filename": "p02380_1", "type": "JavaScript", "obfuscated": "var reader = require('readline')['createInterface']({\n    'input': process['stdin'],\n    'output': process['stdout']\n});\nreader['on']('line', function (line) {\n    var mxadeS = {\n        'hQLNM': '12|2|3|4|7|8|13|6|11|10|1|0|5|9',\n        'vFpwF': function (callee, param1) {\n            return callee(param1);\n        },\n        'YeLAk': function (x, y) {\n            return x / y;\n        },\n        'zzrCy': function (x, y) {\n            return x * y;\n        },\n        'DuGZU': function (x, y) {\n            return x * y;\n        },\n        'MHLAI': function (x, y) {\n            return x / y;\n        },\n        'WnlNq': function (x, y) {\n            return x / y;\n        },\n        'TRLmX': function (x, y) {\n            return x * y;\n        },\n        'VMTJh': function (x, y) {\n            return x * y;\n        },\n        'GdnFI': function (x, y) {\n            return x + y;\n        },\n        'ufBYq': function (x, y) {\n            return x + y;\n        },\n        'MmoGS': function (x, y) {\n            return x - y;\n        },\n        'CtWMg': function (x, y) {\n            return x * y;\n        },\n        'Kgtbq': function (x, y) {\n            return x * y;\n        }\n    };\n    var FmxTDZ = mxadeS['hQLNM']['split']('|');\n    var knjfUg = 0x0;\n    while (!![]) {\n        switch (FmxTDZ[knjfUg++]) {\n        case '0':\n            console['log'](L['toFixed'](0x8));\n            continue;\n        case '1':\n            console['log'](S['toFixed'](0x8));\n            continue;\n        case '2':\n            var e = line['split']('\\x20');\n            continue;\n        case '3':\n            var b = Number(e[0x0]);\n            continue;\n        case '4':\n            var c = mxadeS['vFpwF'](Number, e[0x1]);\n            continue;\n        case '5':\n            console['log'](h['toFixed'](0x8));\n            continue;\n        case '6':\n            S = mxadeS['YeLAk'](mxadeS['zzrCy'](mxadeS['DuGZU'](b, c), Math['sin'](rad)), 0x2);\n            continue;\n        case '7':\n            var d = mxadeS['vFpwF'](Number, e[0x2]);\n            continue;\n        case '8':\n            rad = mxadeS['DuGZU'](mxadeS['MHLAI'](d, 0xb4), Math['PI']);\n            continue;\n        case '9':\n            process['exit']();\n            continue;\n        case '10':\n            h = mxadeS['WnlNq'](mxadeS['TRLmX'](mxadeS['VMTJh'](b, c), Math['sin'](rad)), b);\n            continue;\n        case '11':\n            L = mxadeS['GdnFI'](mxadeS['ufBYq'](a, b), c);\n            continue;\n        case '12':\n            var rad, a, S, L, h;\n            continue;\n        case '13':\n            a = Math['sqrt'](mxadeS['MmoGS'](mxadeS['ufBYq'](mxadeS['CtWMg'](b, b), mxadeS['Kgtbq'](c, c)), mxadeS['VMTJh'](0x2, b) * c * Math['cos'](rad)));\n            continue;\n        }\n        break;\n    }\n});\nprocess['stdin']['on']('end', function () {\n});", "test_cases": [["4 3 90", "6.00000000\n12.00000000\n3.00000000"]], "original": "var reader = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nreader.on('line', function (line) {\n  var rad,a,S,L,h;\n  var e = line.split(' ');\n  var b = Number(e[0]);\n  var c = Number(e[1]);\n  var d = Number(e[2]);\n  rad = d / 180 * Math.PI;\n  a = Math.sqrt(b*b+c*c-2*b*c*Math.cos(rad));\n  S = (b*c*Math.sin(rad))/2;\n  L = a+b+c;\n  h = (b*c*Math.sin(rad))/b;\n  console.log(S.toFixed(8));\n  console.log(L.toFixed(8));\n  console.log(h.toFixed(8));\n  process.exit();\n});\nprocess.stdin.on('end', function () {\n});", "language": "JavaScript"}
{"filename": "p02382_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr[0x0] - 0x0;\nvar x = Arr[0x1]['split']('\\x20')['map'](Number);\nvar y = Arr[0x2]['split']('\\x20')['map'](Number);\nvar sum1 = 0x0;\nvar sum2 = 0x0;\nvar sum3 = 0x0;\nvar max = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    var DuXPYy = '2|3|4|1|0'['split']('|');\n    var XbPQAZ = 0x0;\n    while (!![]) {\n        switch (DuXPYy[XbPQAZ++]) {\n        case '0':\n            max = Math['max'](max, a);\n            continue;\n        case '1':\n            sum3 += Math['pow'](a, 0x3);\n            continue;\n        case '2':\n            var a = Math['abs'](x[i] - y[i]);\n            continue;\n        case '3':\n            sum1 += a;\n            continue;\n        case '4':\n            sum2 += Math['pow'](a, 0x2);\n            continue;\n        }\n        break;\n    }\n}\nconsole['log'](sum1['toFixed'](0x6));\nconsole['log'](Math['sqrt'](sum2)['toFixed'](0x6));\nconsole['log'](Math['pow'](sum3, 0x1 / 0x3)['toFixed'](0x6));\nconsole['log'](max['toFixed'](0x6));", "test_cases": [["3\n1 2 3\n2 0 4", "4.000000\n2.449490\n2.154435\n2.000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr[0]-0;\nvar x=Arr[1].split(\" \").map(Number);\nvar y=Arr[2].split(\" \").map(Number);\nvar sum1=0;\nvar sum2=0;\nvar sum3=0;\nvar max=0;\nfor(var i=0;i<n;i++){\n   var a=Math.abs(x[i]-y[i]);\n   sum1+=a;\n   sum2+=Math.pow(a,2);\n   sum3+=Math.pow(a,3);\n   max=Math.max(max,a);\n}\nconsole.log(sum1.toFixed(6));\nconsole.log(Math.sqrt(sum2).toFixed(6));\nconsole.log(Math.pow(sum3,1/3).toFixed(6));\nconsole.log(max.toFixed(6));", "language": "JavaScript"}
{"filename": "p02440_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar q = arr['shift']() - 0x0;\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var [c, b, e] = arr[i]['split']('\\x20')['map'](Number);\n    var m = a[b];\n    if (c == 0x0) {\n        for (var j = b; j < e; j++)\n            m = Math['min'](m, a[j]);\n    } else {\n        for (var j = b; j < e; j++)\n            m = Math['max'](m, a[j]);\n    }\n    s += m + '\\x0a';\n}\nconsole['log'](s['trim']());", "test_cases": [["7\n8 3 7 1 9 1 4\n3\n0 0 3\n0 1 5\n1 0 7", "3\n1\n9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [c,b,e]=arr[i].split(\" \").map(Number);\n   var m = a[b];\n   if(c==0){\n      for(var j=b;j<e;j++) m=Math.min(m,a[j]);\n   }else{\n      for(var j=b;j<e;j++) m=Math.max(m,a[j]);\n   }\n   s+=m+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02469_1", "type": "JavaScript", "obfuscated": "function gcd(a, b) {\n    var ZyxQAm = {\n        'WUzRc': function (x, y) {\n            return x > y;\n        },\n        'Udqec': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'KuHeH': function (x, y) {\n            return x == y;\n        },\n        'SmLLA': function (x, y) {\n            return x % y;\n        }\n    };\n    if (ZyxQAm['WUzRc'](b, a))\n        return ZyxQAm['Udqec'](gcd, b, a);\n    if (ZyxQAm['KuHeH'](b, 0x0))\n        return a;\n    return ZyxQAm['Udqec'](gcd, b, ZyxQAm['SmLLA'](a, b));\n}\nfunction lcm(a, b) {\n    var OKKHDB = {\n        'icYYg': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'ecbqc': function (x, y) {\n            return x / y;\n        }\n    };\n    var d = OKKHDB['icYYg'](gcd, a, b);\n    return OKKHDB['ecbqc'](a * b, d);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nvar n = +lines['shift']();\nvar nums = lines['shift']()['split']('\\x20')['map'](function (num) {\n    return +num;\n});\nvar p = 0x1;\nfor (var i = 0x0; i < n; i++) {\n    p = lcm(p, nums[i]);\n}\nconsole['log'](p);", "test_cases": [["3\n3 4 6", "12"], ["4\n1 2 3 5", "30"]], "original": "function gcd(a, b) {\n    if (b > a)\n        return gcd(b, a);\n    if (b == 0)\n        return a;\n\n    return gcd(b, a % b);\n}\nfunction lcm(a, b) {\n    var d = gcd(a, b);\n    return a * b / d;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nvar n = +lines.shift();\n\nvar nums = lines.shift().split(' ').map(function(num){return +num;});\nvar p = 1;\nfor (var i = 0; i < n; i++) {\n    p = lcm(p, nums[i]);\n}\n\nconsole.log(p);", "language": "JavaScript"}
{"filename": "p02540_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var TRuOiB = {\n        'QUtww': function (x, y) {\n            return x <= y;\n        },\n        'cydKA': function (x, y) {\n            return x < y;\n        },\n        'aslXH': function (x, y) {\n            return x > y;\n        },\n        'BIJIv': function (x, y) {\n            return x > y;\n        },\n        'vBKde': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'HjWbU': function (x, y) {\n            return x < y;\n        },\n        'OBNcP': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0], 0xa);\n    var x = [];\n    var y = [];\n    for (var i = 0x1; TRuOiB['QUtww'](i, N); i++) {\n        tmp = input[i]['split']('\\x20')['map'](n => parseInt(n, 0xa));\n        x['push'](tmp[0x0]);\n        y['push'](tmp[0x1]);\n    }\n    var counts = [];\n    for (var j = 0x0; TRuOiB['cydKA'](j, N); j++) {\n        var count = 0x0;\n        for (var k = 0x0; k < N; k++) {\n            if (TRuOiB['aslXH'](x[j], x[k]) && TRuOiB['BIJIv'](y[j], y[k]) || TRuOiB['cydKA'](x[j], x[k]) && TRuOiB['cydKA'](y[j], y[k])) {\n                count++;\n            }\n        }\n        counts['push'](TRuOiB['vBKde'](parseInt, count, 0xa));\n    }\n    for (var j = 0x0; j < N; j++) {\n        var count = 0x1;\n        for (var k = 0x0; k < N; k++) {\n            if (TRuOiB['BIJIv'](x[j], x[k]) && TRuOiB['BIJIv'](y[j], y[k]) || TRuOiB['HjWbU'](x[j], x[k]) && TRuOiB['HjWbU'](y[j], y[k])) {\n                count = TRuOiB['OBNcP'](count, counts[k]);\n            }\n        }\n        console['log'](count);\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 4\n2 3\n3 1\n4 2", "1\n1\n2\n2"], ["7\n6 4\n4 3\n3 5\n7 1\n2 7\n5 2\n1 6", "3\n3\n1\n1\n2\n3\n2"]], "original": "function Main(input) {\n  input = input.split(\"\\n\");\n  \n  const N = parseInt(input[0], 10);\n\n  var x = [];\n  var y = [];\n\n  for (var i = 1; i <= N; i++) {\n    tmp = input[i].split(\" \").map(n => parseInt(n, 10));\n    x.push(tmp[0]);\n    y.push(tmp[1]);\n  }\n\n  var counts = [];\n\n  for(var j = 0; j < N; j++){\n    var count = 0;\n    for(var k = 0; k < N; k++){\n      if((x[j] > x[k] && y[j] > y[k])||(x[j] < x[k] && y[j] < y[k])){\n        count++;\n      }\n    }\n    counts.push(parseInt(count, 10))\n  }\n\n  for(var j = 0; j < N; j++){\n    var count = 1;\n    for(var k = 0; k < N; k++){\n      if((x[j] > x[k] && y[j] > y[k])||(x[j] < x[k] && y[j] < y[k])){\n        count = count + counts[k];\n      }\n    }\n    console.log(count);\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p02904_1", "type": "JavaScript", "obfuscated": "function Main(arg) {\n    var QHwllm = {\n        'oHRcf': function (x, y) {\n            return x - y;\n        },\n        'rpyww': function (x, y) {\n            return x - y;\n        },\n        'dFned': function (x, y) {\n            return x < y;\n        },\n        'LETgG': function (x, y) {\n            return x + y;\n        },\n        'ryDCt': function (x, y) {\n            return x - y;\n        },\n        'yXRvL': function (x, y) {\n            return x + y;\n        }\n    };\n    var bAZGQB = '5|2|0|3|6|1|4'['split']('|');\n    var RRoHSM = 0x0;\n    while (!![]) {\n        switch (bAZGQB[RRoHSM++]) {\n        case '0':\n            var P = arg['split']('\\x0a')[0x1]['split']('\\x20')['map'](v => v - 0x0);\n            continue;\n        case '1':\n            var aa = new Set(ans);\n            continue;\n        case '2':\n            var K = QHwllm['oHRcf'](arg['split']('\\x0a')[0x0]['split']('\\x20')[0x1], 0x0);\n            continue;\n        case '3':\n            var ans = [];\n            continue;\n        case '4':\n            console['log'](aa['size']);\n            continue;\n        case '5':\n            var N = QHwllm['rpyww'](arg['split']('\\x0a')[0x0]['split']('\\x20')[0x0], 0x0);\n            continue;\n        case '6':\n            for (var i = 0x0; QHwllm['dFned'](i, QHwllm['LETgG'](QHwllm['ryDCt'](N, K), 0x1)); i++) {\n                var tmp = P['slice'](i, QHwllm['yXRvL'](i, K));\n                tmp['sort'](compareNumbers);\n                ans[i] = P['slice'](0x0, i)['concat'](tmp)['concat'](P['slice'](QHwllm['yXRvL'](i, K)))['toString']();\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nfunction compareNumbers(a, b) {\n    return a - b;\n}", "test_cases": [["5 3\n0 2 1 4 3", "2"], ["4 4\n0 1 2 3", "1"], ["10 4\n2 0 1 3 7 5 4 6 8 9", "6"]], "original": "function Main(arg) {\n \n    var N = arg.split(\"\\n\")[0].split(\" \")[0]-0;\n    var K = arg.split(\"\\n\")[0].split(\" \")[1]-0;\n    var P = arg.split(\"\\n\")[1].split(\" \").map(v => v-0);\n\n    var ans = [];\n    for (var i = 0; i < N - K + 1; i++){\n        var tmp = P.slice(i, i + K);\n        tmp.sort(compareNumbers);\n        ans[i] = P.slice(0, i).concat(tmp).concat(P.slice(i + K)).toString();\n    }\n\n    var aa = new Set(ans);\n\n    console.log(aa.size);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\nfunction compareNumbers(a, b) { //for sort\n    return a - b;\n}\n", "language": "JavaScript"}
{"filename": "p02978_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var tcNMsh = {\n        'azTlR': function (x, y) {\n            return x - y;\n        },\n        'xdwqc': function (x, y) {\n            return x == y;\n        },\n        'Ycucm': function (x, y) {\n            return x == y;\n        },\n        'lRnZG': function (x, y) {\n            return x < y;\n        },\n        'uuQli': function (x, y) {\n            return x + y;\n        },\n        'snHHF': function (x, y) {\n            return x + y;\n        },\n        'brBMT': function (x, y) {\n            return x > y;\n        },\n        'rVXQm': function (x, y) {\n            return x * y;\n        },\n        'fwFow': function (x, y) {\n            return x - y;\n        },\n        'ayLWf': function (x, y) {\n            return x == y;\n        },\n        'vFmBs': function (x, y) {\n            return x + y;\n        },\n        'OpviA': function (x, y) {\n            return x + y;\n        },\n        'lCuPS': function (x, y) {\n            return x == y;\n        }\n    };\n    input = input['split']('\\x0a');\n    const N = parseInt(input[0x0]);\n    const As = input[0x1]['split']('\\x20')['map'](x => parseInt(x));\n    var now = As;\n    while (!![]) {\n        var min = -0x1;\n        var next = [];\n        for (i = 0x1; i < tcNMsh['azTlR'](now['length'], 0x1); i++) {\n            if (tcNMsh['xdwqc'](min, -0x1) || now[min] > now[i])\n                min = i;\n            if (tcNMsh['Ycucm'](min, now[i]) && tcNMsh['lRnZG'](tcNMsh['uuQli'](now[tcNMsh['azTlR'](i, 0x1)], now[i + 0x1]), tcNMsh['snHHF'](now[tcNMsh['azTlR'](min, 0x1)], now[tcNMsh['snHHF'](min, 0x1)])))\n                min = i;\n        }\n        if (tcNMsh['brBMT'](tcNMsh['rVXQm'](now[min], 0x2), now[now['length'] - 0x2]))\n            min = tcNMsh['fwFow'](now['length'], 0x2);\n        for (i = 0x0; tcNMsh['lRnZG'](i, now['length']); i++) {\n            if (tcNMsh['ayLWf'](i, tcNMsh['fwFow'](min, 0x1))) {\n                next['push'](tcNMsh['snHHF'](now[tcNMsh['azTlR'](min, 0x1)], now[min]));\n            } else if (tcNMsh['xdwqc'](i, min)) {\n            } else if (i == tcNMsh['vFmBs'](min, 0x1)) {\n                next['push'](now[tcNMsh['OpviA'](min, 0x1)] + now[min]);\n            } else {\n                next['push'](now[i]);\n            }\n        }\n        now = next;\n        if (tcNMsh['lCuPS'](now['length'], 0x2))\n            break;\n    }\n    console['log'](tcNMsh['vFmBs'](now[0x0], now[0x1]));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n3 1 4 2", "16"], ["6\n5 2 4 1 6 9", "51"], ["10\n3 1 4 1 5 9 2 6 5 3", "115"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\tconst N = parseInt(input[0])\n\tconst As = input[1].split(\" \").map(x => parseInt(x))\n\tvar now = As\n\twhile(true){\n\t\tvar min = -1\n\t\tvar next = []\n\t\tfor(i=1; i<now.length-1; i++){\n\t\t\tif(min == -1 || now[min] > now[i]) min = i\n\t\t\tif(min == now[i] && now[i-1] + now[i+1] < now[min-1] + now[min+1]) min = i\n\t\t}\n\t\tif(now[min]*2 > now[now.length-2]) min = now.length-2\n\t\tfor(i=0; i<now.length; i++){\n\t\t\tif(i == min-1){\n\t\t\t\tnext.push(now[min-1]+now[min])\n\t\t\t}else if(i == min){\n\n\t\t\t}else if(i == min+1){\n\t\t\t\tnext.push(now[min+1]+now[min])\n\t\t\t}else{\n\t\t\t\tnext.push(now[i])\n\t\t\t}\n\t\t}\n\t\tnow = next\n\t\tif(now.length == 2) break\n\t}\n\tconsole.log(now[0] + now[1])\n}\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03135_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    const cvcsqf = {\n        'CQBrZ': function (callee, param1) {\n            return callee(param1);\n        },\n        'aHXOb': function (x, y) {\n            return x / y;\n        }\n    };\n    const nums = input['trim']()['split'](/\\s/)['map'](str => {\n        return cvcsqf['CQBrZ'](Number, str);\n    });\n    console['log'](cvcsqf['aHXOb'](nums[0x0], nums[0x1])['toFixed'](0xa));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8 3", "2.6666666667"], ["99 1", "99.0000000000"], ["1 100", "0.0100000000"]], "original": "function main(input) {\n    const nums = input.trim().split(/\\s/).map(str=>{return Number(str)});\n    console.log((nums[0] / nums[1]).toFixed(10));\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));", "language": "JavaScript"}
{"filename": "p03187_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    'use strict';\n    const cqNelV = {\n        'AVIqz': function (x, y) {\n            return x === y;\n        },\n        'gBZcS': function (x, y) {\n            return x >= y;\n        },\n        'GWvfw': function (x, y) {\n            return x - y;\n        },\n        'QiGFZ': function (x, y) {\n            return x + y;\n        },\n        'ponxc': function (x, y) {\n            return x - y;\n        },\n        'sRGan': function (x, y) {\n            return x <= y;\n        },\n        'iCkbv': function (x, y) {\n            return x - y;\n        },\n        'VoiFd': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'GaaGk': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    const lines = input['split']('\\x0a');\n    const firstLine = lines[0x0]['split']('\\x20')['map'](value => +value);\n    const L = firstLine[0x0];\n    const N = firstLine[0x1];\n    let xn = lines['slice'](0x1)['filter'](value => value)['map'](value => +value);\n    let costs = [];\n    const search = (x, xn, sum) => {\n        if (cqNelV['AVIqz'](xn['length'], 0x0)) {\n            costs['push'](sum);\n            return;\n        }\n        const leftDistance = cqNelV['gBZcS'](xn[0x0], x) ? cqNelV['GWvfw'](xn[0x0], x) : cqNelV['QiGFZ'](cqNelV['ponxc'](L, x), xn[0x0]);\n        const rightDistance = cqNelV['sRGan'](xn[xn['length'] - 0x1], x) ? x - xn[cqNelV['ponxc'](xn['length'], 0x1)] : cqNelV['QiGFZ'](x, cqNelV['iCkbv'](L, xn[cqNelV['GWvfw'](xn['length'], 0x1)]));\n        const left = xn['concat']();\n        const leftX = left['shift']();\n        const right = xn['concat']();\n        const rightX = right['pop']();\n        cqNelV['VoiFd'](search, leftX, left, cqNelV['QiGFZ'](sum, leftDistance));\n        cqNelV['GaaGk'](search, rightX, right, cqNelV['QiGFZ'](sum, rightDistance));\n    };\n    cqNelV['VoiFd'](search, 0x0, xn, 0x0);\n    console['log'](Math['max']['apply'](null, costs));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["10 3\n2\n7\n9", "15"], ["10 6\n1\n2\n3\n6\n7\n9", "27"], ["314159265 7\n21662711\n77271666\n89022761\n156626166\n160332356\n166902656\n298992265", "1204124749"]], "original": "function main(input) {\n    \"use strict\";\n    const lines = input.split(\"\\n\");\n    const firstLine = lines[0].split(\" \").map((value) => +value);\n    const L = firstLine[0];\n    const N = firstLine[1];\n    let xn = lines.slice(1).filter((value) => value).map((value) => +value);\n\n    let costs = [];\n    const search = (x, xn, sum) => {\n        if (xn.length === 0) {\n            costs.push(sum);\n            return;\n        }\n        const leftDistance = xn[0] >= x ? xn[0] - x : (L - x) + xn[0];\n        const rightDistance = xn[xn.length - 1] <= x ? x - xn[xn.length - 1] : x + (L - xn[xn.length - 1]);\n        const left = xn.concat();\n        const leftX = left.shift();\n        const right = xn.concat();\n        const rightX = right.pop();\n        search(leftX, left, sum + leftDistance);\n        search(rightX, right, sum + rightDistance);\n    }\n\n    search(0, xn, 0);\n    console.log(Math.max.apply(null, costs));\n}\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03195_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var nHxCUa = {\n        'vKQIG': function (callee, param1) {\n            return callee(param1);\n        },\n        'KvIbD': function (callee, param1) {\n            return callee(param1);\n        },\n        'xDvoL': function (x, y) {\n            return x === y;\n        },\n        'WXuPq': 'second'\n    };\n    var line1 = nHxCUa['vKQIG'](parseInt, input[0x0]);\n    var ans = ![];\n    for (var i = 0x1; i < input['length']; i++) {\n        var n = nHxCUa['KvIbD'](parseInt, input[i]);\n        if (nHxCUa['xDvoL'](n % 0x2, 0x1))\n            ans = !![];\n        ;\n    }\n    console['log'](ans ? 'first' : nHxCUa['WXuPq']);\n}\nfunction parse(line) {\n    var SqTUtm = {\n        'oTIZp': function (x, y) {\n            return x < y;\n        },\n        'BMXNo': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var ret = [];\n    var arr = line['split']('\\x20');\n    for (var i = 0x0; SqTUtm['oTIZp'](i, arr['length']); i++) {\n        ret['push'](SqTUtm['BMXNo'](parseInt, arr[i]));\n    }\n    return ret;\n}\nvar input = '';\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var iBQOUH = {\n        'MMKqk': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    iBQOUH['MMKqk'](main, input);\n});", "test_cases": [["2\n1\n2", "first"], ["3\n100000\n30000\n20000", "second"]], "original": "function main(input){\n  var line1 = parseInt(input[0]);\n \n  var ans = false;\n  for (var i=1; i<input.length; i++){\n    var n = parseInt(input[i]);\n    \n    if (n%2 ===1)\n      ans = true;;\n  }\n\n  console.log(ans ? 'first' : 'second');\n}\n\n\nfunction parse(line){\n  var ret = [];\n  var arr = line.split(' ');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(parseInt(arr[i]));\n  }\n  return ret;\n}\n\nvar input = '';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk) {\n  input += chunk;\n});\nprocess.stdin.on('end', function() {\n  input = input.split('\\n');\n  main(input);\n});\n", "language": "JavaScript"}
{"filename": "p03276_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var tFvEsG = {\n        'VSNWu': function (x, y) {\n            return x - y;\n        },\n        'WJIno': function (x, y) {\n            return x === y;\n        },\n        'nBTPq': function (x, y) {\n            return x - y;\n        },\n        'zSXXF': function (x, y) {\n            return x - y;\n        },\n        'lpecY': function (x, y) {\n            return x - y;\n        },\n        'EHhZd': function (x, y) {\n            return x >= y;\n        },\n        'xalWP': function (x, y) {\n            return x - y;\n        },\n        'dSWEs': function (x, y) {\n            return x + y;\n        },\n        'xiUBR': function (x, y) {\n            return x < y;\n        },\n        'xzSmE': function (x, y) {\n            return x * y;\n        },\n        'aKoai': function (x, y) {\n            return x + y;\n        },\n        'RkHQW': function (x, y) {\n            return x - y;\n        },\n        'JRnmI': function (x, y) {\n            return x + y;\n        },\n        'dtbjS': function (x, y) {\n            return x + y;\n        },\n        'Stnov': function (x, y) {\n            return x + y;\n        },\n        'BellO': function (x, y) {\n            return x + y;\n        },\n        'cmNrm': function (x, y) {\n            return x + y;\n        },\n        'NbFVl': function (x, y) {\n            return x + y;\n        },\n        'yhKIF': function (x, y) {\n            return x + y;\n        },\n        'uLnOs': function (x, y) {\n            return x + y;\n        },\n        'rHlKR': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (tFvEsG['WJIno'](input[tFvEsG['nBTPq'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = tFvEsG['zSXXF'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    const K = tFvEsG['lpecY'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    const x = input[0x1]['split']('\\x20')['map'](e => {\n        return tFvEsG['VSNWu'](e, 0x0);\n    });\n    var pointer = x['findIndex'](e => {\n        return e => 0x0;\n    }) - K;\n    if (pointer < 0x0) {\n        pointer = 0x0;\n    }\n    var temp;\n    var ret = Infinity;\n    for (var i = 0x0; i < K; i++) {\n        if (tFvEsG['EHhZd'](tFvEsG['xalWP'](tFvEsG['dSWEs'](pointer + i, K), 0x1), x['length'])) {\n            break;\n        }\n        if (tFvEsG['xiUBR'](tFvEsG['xzSmE'](x[tFvEsG['aKoai'](pointer, i)], x[tFvEsG['RkHQW'](tFvEsG['JRnmI'](tFvEsG['dtbjS'](pointer, i), K), 0x1)]), 0x0)) {\n            temp = tFvEsG['Stnov'](tFvEsG['lpecY'](Math['min'](-x[pointer + i], x[tFvEsG['lpecY'](tFvEsG['BellO'](tFvEsG['cmNrm'](pointer, i), K), 0x1)]), x[tFvEsG['NbFVl'](pointer, i)]), x[tFvEsG['yhKIF'](tFvEsG['cmNrm'](pointer, i), K) - 0x1]);\n        } else {\n            temp = Math['max'](Math['abs'](x[tFvEsG['uLnOs'](pointer, i)]), Math['abs'](x[tFvEsG['rHlKR'](tFvEsG['aKoai'](pointer, i), K) - 0x1]));\n        }\n        ret = Math['min'](ret, temp);\n    }\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5 3\n-30 -10 10 20 50", "40"], ["3 2\n10 20 30", "20"], ["1 1\n0", "0"], ["8 5\n-9 -7 -4 -3 1 2 3 4", "10"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const K=input[0].split(' ')[1]-0;\n  const x=input[1].split(' ').map(e=>{\n    return e-0;\n  });\n  var pointer=x.findIndex(e=>{\n    return e=>0;\n  })-K;\n  if(pointer<0){\n    pointer=0;\n  }\n  var temp;\n  var ret=Infinity;\n  for(var i=0;i<K;i++){\n    if(pointer+i+K-1>=x.length){\n      break;\n    }\n    if(x[pointer+i]*x[pointer+i+K-1]<0){\n      temp=Math.min(-x[pointer+i],x[pointer+i+K-1])-x[pointer+i]+x[pointer+i+K-1];\n    }else{\n      temp=Math.max(Math.abs(x[pointer+i]),Math.abs(x[pointer+i+K-1]));\n    }\n    ret=Math.min(ret,temp);\n  }\n  console.log(ret);\n      \n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03313_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var RQseTE = {\n        'wWovZ': function (x, y) {\n            return x < y;\n        },\n        'xrEnv': function (x, y) {\n            return x ^ y;\n        },\n        'Fypvy': function (x, y) {\n            return x << y;\n        },\n        'EaEjQ': function (x, y) {\n            return x > y;\n        },\n        'inqMK': function (x, y) {\n            return x - y;\n        },\n        'MhVmk': function (x, y) {\n            return x + y;\n        },\n        'iLHUG': function (x, y) {\n            return x << y;\n        },\n        'DOkKa': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    s = s['split']('\\x0a');\n    var n = +s[0x0];\n    var m = RQseTE['iLHUG'](0x1, n);\n    var a = s[0x1]['split']('\\x20')['map'](a => +a);\n    var b = [a[0x0]], c = [[\n                a[0x0],\n                0x0\n            ]], d = [[\n                -0x1,\n                -0x1\n            ]];\n    for (var i = 0x1; RQseTE['wWovZ'](i, m); i++) {\n        RQseTE['DOkKa'](f, i);\n    }\n    console['log'](b['slice'](0x1)['join']('\\x0a'));\n    function f(n) {\n        var q = {}, s = n, t = 0x0;\n        while (s) {\n            t++;\n            s >>= 0x1;\n        }\n        for (var i = 0x0; RQseTE['wWovZ'](i, t); i++) {\n            var u = n & RQseTE['xrEnv'](RQseTE['Fypvy'](0x1, i), 0xfffff);\n            if (u === n)\n                continue;\n            q[c[u][0x1]] = c[u][0x0];\n            q[d[u][0x1]] = d[u][0x0];\n        }\n        s = [\n            a[n],\n            n\n        ], t = [\n            -0x1,\n            -0x1\n        ];\n        for (i in q) {\n            if (t[0x0] > q[i])\n                continue;\n            if (RQseTE['EaEjQ'](s[0x0], q[i]))\n                t = [\n                    q[i],\n                    i\n                ];\n            else {\n                t = s;\n                s = [\n                    q[i],\n                    i\n                ];\n            }\n        }\n        b[n] = Math['max'](b[RQseTE['inqMK'](n, 0x1)], RQseTE['MhVmk'](t[0x0], s[0x0]));\n        c[n] = t;\n        d[n] = s;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2\n1 2 3 1", "3\n4\n5"], ["3\n10 71 84 33 6 47 23 25", "81\n94\n155\n155\n155\n155\n155"], ["4\n75 26 45 72 81 47 97 97 2 2 25 82 84 17 56 32", "101\n120\n147\n156\n156\n178\n194\n194\n194\n194\n194\n194\n194\n194\n194"]], "original": "function Main(s){\n  s = s.split(\"\\n\");\n  var n = +s[0];\n  var m = 1 << n;\n  var a = s[1].split(\" \").map(a=>+a);\n  var b = [a[0]], c = [[a[0],0]], d = [[-1,-1]];\n  for(var i = 1; i < m; i++){\n    f(i);\n  }\n  console.log(b.slice(1).join(\"\\n\"));\n  \n  function f(n){\n    var q = {}, s = n, t = 0;\n    while(s){\n      t++;\n      s >>= 1;\n    }\n    for(var i = 0; i < t; i++){\n      var u = n & ((1 << i) ^ 0xFFFFF);\n      if(u === n)continue;\n      q[c[u][1]] = c[u][0];\n      q[d[u][1]] = d[u][0];\n    }\n    s = [a[n],n], t = [-1,-1];\n    for(i in q){\n      if(t[0] > q[i])continue;\n      if(s[0] > q[i])t = [q[i],i];\n      else{t = s; s = [q[i],i];}\n    }\n    b[n] = Math.max(b[n-1], t[0] + s[0]);\n    c[n] = t;\n    d[n] = s;\n  }\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03334_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var rGAcoj = {\n        'VLkrT': '2|3|4|1|6|5|0',\n        'xJdNv': function (x, y) {\n            return x < y;\n        },\n        'IAXbm': function (x, y) {\n            return x * y;\n        },\n        'zepyZ': function (x, y) {\n            return x * y;\n        },\n        'qJVGq': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'DTDHy': function (x, y) {\n            return x === y;\n        },\n        'nfECf': function (x, y) {\n            return x * y;\n        },\n        'teXZM': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var gciOXb = rGAcoj['VLkrT']['split']('|');\n    var xzRxWs = 0x0;\n    while (!![]) {\n        switch (gciOXb[xzRxWs++]) {\n        case '0':\n            for (var i = 0x0; rGAcoj['xJdNv'](i, rGAcoj['IAXbm'](0x2, n)); i++)\n                for (var j = 0x0; rGAcoj['xJdNv'](j, rGAcoj['zepyZ'](0x2, n)); j++) {\n                    if (f(a, i, j) && rGAcoj['qJVGq'](f, b, i, j))\n                        ans[k++] = i + '\\x20' + j;\n                    if (rGAcoj['DTDHy'](k, rGAcoj['nfECf'](n, n))) {\n                        console['log'](ans['join']('\\x0a'));\n                        return;\n                    }\n                }\n            continue;\n        case '1':\n            var b = rGAcoj['teXZM'](calc, s[0x2]);\n            continue;\n        case '2':\n            s = s['split']('\\x20')['map'](a => +a);\n            continue;\n        case '3':\n            var n = s[0x0];\n            continue;\n        case '4':\n            var a = rGAcoj['teXZM'](calc, s[0x1]);\n            continue;\n        case '5':\n            var k = 0x0;\n            continue;\n        case '6':\n            var ans = [];\n            continue;\n        }\n        break;\n    }\n}\nfunction calc(n) {\n    var AlcqEY = {\n        'kmTgr': function (x, y) {\n            return x === y;\n        },\n        'NjnkD': function (x, y) {\n            return x & y;\n        }\n    };\n    var s = 0x1;\n    while (AlcqEY['kmTgr'](AlcqEY['NjnkD'](n, 0x3), 0x0)) {\n        s++;\n        n >>>= 0x2;\n    }\n    return [\n        s,\n        AlcqEY['NjnkD'](n, 0x1)\n    ];\n}\nfunction f(s, y, x) {\n    var ppBxtE = {\n        'lObeA': function (x, y) {\n            return x / y;\n        },\n        'yfezs': function (x, y) {\n            return x & y;\n        },\n        'MVhbl': function (x, y) {\n            return x / y;\n        },\n        'NCwun': function (x, y) {\n            return x + y;\n        }\n    };\n    y = Math['floor'](ppBxtE['lObeA'](y, s[0x0]));\n    if (!s[0x1])\n        return !ppBxtE['yfezs'](y, 0x1);\n    x = Math['floor'](ppBxtE['MVhbl'](x, s[0x0]));\n    return !ppBxtE['yfezs'](ppBxtE['NCwun'](x, y), 0x1);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 1 2", "0 0\n0 2\n2 0\n2 2"], ["3 1 5", "0 0\n0 2\n0 4\n1 1\n1 3\n1 5\n2 0\n2 2\n2 4"]], "original": "function Main(s){\n  s = s.split(\" \").map(a=>+a);\n  var n = s[0];\n  var a = calc(s[1]);\n  var b = calc(s[2]);\n  var ans = [];\n  var k = 0;\n  for(var i = 0; i < 2 * n; i++)\n  for(var j = 0; j < 2 * n; j++){\n    if(f(a,i,j) && f(b,i,j))ans[k++] = i + \" \" + j;\n    if(k === n * n){console.log(ans.join(\"\\n\"));return;}\n  }\n}\nfunction calc(n){\n  var s = 1;\n  while((n & 3) === 0){\n    s++;\n    n >>>= 2;\n  }\n  return [s, n & 1];\n}\nfunction f(s,y,x){\n  y = Math.floor(y / s[0]);\n  if(!s[1])return !(y&1);\n  x = Math.floor(x / s[0]);\n  return !(x+y&1);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03451_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var EGGZnq = {\n        'YeyPX': function (callee, param1) {\n            return callee(param1);\n        },\n        'lawQN': function (x, y) {\n            return x < y;\n        },\n        'nOGWA': function (x, y) {\n            return x - y;\n        },\n        'axzQU': function (x, y) {\n            return x + y;\n        },\n        'ZliQu': function (x, y) {\n            return x + y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var a1 = input[0x1]['split']('\\x20')['map'](e => {\n        return EGGZnq['YeyPX'](parseInt, e);\n    });\n    var a2 = input[0x2]['split']('\\x20')['map'](e => {\n        return parseInt(e);\n    });\n    var j = a1['length'] - 0x1;\n    var m = 0x0, n = EGGZnq['nOGWA'](a1['length'], 0x2);\n    var r = 0x0;\n    var temp;\n    for (var i = j; i >= m; i--) {\n        temp = EGGZnq['axzQU'](EGGZnq['YeyPX'](sum, a1['slice'](m, EGGZnq['ZliQu'](i, 0x1))), EGGZnq['YeyPX'](sum, a2['slice'](i)));\n        if (EGGZnq['lawQN'](r, temp))\n            r = temp;\n    }\n    function sum(arr) {\n        var r = 0x0;\n        for (var i = 0x0; EGGZnq['lawQN'](i, arr['length']); i++) {\n            r += arr[i];\n        }\n        return r;\n    }\n    console['log'](r);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n3 2 2 4 1\n1 2 2 2 1", "14"], ["4\n1 1 1 1\n1 1 1 1", "5"], ["7\n3 3 4 5 4 5 3\n5 3 4 4 2 3 2", "29"], ["1\n2\n3", "5"]], "original": "function Main(input) {\ninput = input.split(\"\\n\");\n    var a1 = input[1].split(' ').map(e => { return parseInt(e) })\n    var a2 = input[2].split(' ').map(e => { return parseInt(e) })\n    var j = a1.length - 1\n    var m = 0, n = a1.length - 2\n    var r = 0;\n    var temp;\n\n    for (var i = j; i >= m; i--) {\n        temp = sum(a1.slice(m, i+1)) + sum(a2.slice(i))\n        if (r < temp) r = temp\n    }\n\n    function sum(arr) {\n        var r = 0\n        for (var i = 0; i < arr.length; i++) {\n            r += arr[i]\n        }\n        return r\n    }\n\n    console.log(r)\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03525_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const yhToAd = {\n        'qZFFl': function (x, y) {\n            return x === y;\n        },\n        'xOtHe': function (callee, param1) {\n            return callee(param1);\n        },\n        'nQcwj': function (x, y) {\n            return x < y;\n        },\n        'HCCtT': function (x, y) {\n            return x - y;\n        },\n        'UnNwp': function (x, y) {\n            return x > y;\n        },\n        'gsmzI': function (x, y) {\n            return x > y;\n        },\n        'vzUWW': function (x, y) {\n            return x < y;\n        },\n        'fKirZ': function (x, y) {\n            return x + y;\n        },\n        'dthJr': function (x, y) {\n            return x + y;\n        },\n        'ltZve': function (x, y) {\n            return x ^ y;\n        },\n        'Docsv': function (x, y) {\n            return x & y;\n        },\n        'EqbSD': function (x, y) {\n            return x >> y;\n        },\n        'UtyUG': function (x, y) {\n            return x < y;\n        }\n    };\n    const [[N], D] = args['trim']()['split']('\\x0a')['map'](r => r['split']('\\x20')['map'](v => v | 0x0));\n    if (yhToAd['qZFFl'](N, 0x1))\n        return '' + D[0x0];\n    const q = yhToAd['xOtHe'](Array, 0xd)['fill'](0x0);\n    let _s = 0xc, s = 0x1;\n    for (let i = 0x0; yhToAd['nQcwj'](i, N); i++) {\n        if (++q[D[i]] > 0x2)\n            return '0';\n        if (yhToAd['nQcwj'](D[i], _s))\n            _s = D[i];\n        if (yhToAd['qZFFl'](q[D[i]], 0x2))\n            _s = Math['min'](_s, yhToAd['HCCtT'](0x18, 0x2 * D[i]));\n    }\n    if (yhToAd['UnNwp'](q[0xc], 0x1) || yhToAd['gsmzI'](q[0x0], 0x0))\n        return '0';\n    const mask = q['reduce']((a, b, i) => a | (b === 0x1 ? 0x0 : 0x1 << i), 0x1);\n    for (let m = 0x0; yhToAd['vzUWW'](m, 0x1 << 0xd); m = yhToAd['fKirZ'](m, 0x1) | mask) {\n        let min = _s;\n        for (let a = 0x1; a <= 0xc; a++) {\n            if (!q[a])\n                continue;\n            for (let b = yhToAd['dthJr'](a, 0x1); b <= 0xc; b++) {\n                if (!q[b])\n                    continue;\n                let t = b - a;\n                if (yhToAd['qZFFl'](q[a], 0x1) && yhToAd['qZFFl'](q[b], 0x1))\n                    t = yhToAd['ltZve'](m >> a & 0x1, yhToAd['Docsv'](yhToAd['EqbSD'](m, b), 0x1)) ? yhToAd['HCCtT'](0x18 - a, b) : t;\n                min = Math['min'](min, t);\n            }\n        }\n        if (yhToAd['UtyUG'](s, min))\n            s = min;\n    }\n    return '' + s;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["3\n7 12 8", "4"], ["2\n11 11", "2"], ["1\n0", "0"]], "original": "console.log((args=>{\n  const [[N],D] = args.trim().split('\\n').map( r=>r.split(' ').map(v=>v|0));\n  if ( N === 1 ) return `${D[0]}`;\n  const q = Array(13).fill(0);\n  let _s = 12, s = 1;\n  for ( let i = 0; i < N; i++ ) {\n    if ( ++q[D[i]] > 2 ) return '0';\n    if ( D[i] < _s ) _s = D[i];\n    if ( q[D[i]] === 2 ) _s = Math.min(_s,24-2*D[i]);\n  }\n  if ( q[12] > 1 || q[0] > 0 ) return '0';\n  const mask = q.reduce((a,b,i)=>a|(b===1?0:1<<i),1);\n  for ( let m = 0; m < 1<<13; m = m+1|mask ) {\n    let min = _s;\n    for ( let a = 1; a <= 12; a++ ) {\n      if ( !q[a] ) continue;\n      for ( let b = a+1; b <= 12; b++ ) {\n        if ( !q[b] ) continue;\n        let t = b - a;\n        if ( q[a]===1 && q[b] === 1 ) t = (m>>a&1^m>>b&1)?24-a-b:t;\n        min = Math.min( min, t );\n      }\n    }\n    if ( s < min ) s = min;\n  }\n  return `${s}`;\n})(require('fs').readFileSync('/dev/stdin', 'utf8')));\n", "language": "JavaScript"}
{"filename": "p03534_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    var XttKLV = {\n        'fACTJ': 'YES',\n        'bkSLz': function (x, y) {\n            return x < y;\n        },\n        'KOQsW': function (x, y) {\n            return x === y;\n        },\n        'osVUE': function (x, y) {\n            return x > y;\n        },\n        'eRZPq': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['trim']();\n    var a = 0x0, b = 0x0, c = 0x0;\n    var ans = XttKLV['fACTJ'];\n    for (var i = 0x0; XttKLV['bkSLz'](i, s['length']); i++) {\n        if (XttKLV['KOQsW'](s[i], 'a'))\n            a++;\n        else if (XttKLV['KOQsW'](s[i], 'b'))\n            b++;\n        else\n            c++;\n    }\n    if (XttKLV['osVUE'](XttKLV['eRZPq'](Math['max'](a, b, c), Math['min'](a, b, c)), 0x1))\n        ans = 'NO';\n    console['log'](ans);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["abac", "YES"], ["aba", "NO"], ["babacccabab", "YES"]], "original": "function Main(s) {\n  s = s.trim();\n  var a = 0, b = 0, c = 0;\n  var ans = \"YES\";\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === \"a\")a++;\n    else if(s[i] === \"b\")b++;\n    else c++;\n  }\n  if(Math.max(a, b, c) - Math.min(a, b, c) > 1)ans = \"NO\";\n  console.log(ans);\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));", "language": "JavaScript"}
{"filename": "p03700_1", "type": "JavaScript", "obfuscated": "console['log']((args => {\n    const IKupdx = {\n        'tyLRO': function (x, y) {\n            return x + y;\n        },\n        'EycQA': function (x, y) {\n            return x >> y;\n        },\n        'QdWdU': function (x, y) {\n            return x + y;\n        },\n        'vGPmr': function (x, y) {\n            return x < y;\n        },\n        'FekQO': function (x, y) {\n            return x - y;\n        },\n        'xkZaP': function (x, y) {\n            return x >= y;\n        }\n    };\n    const [[N, A, B], ...h] = args['trim']()['split']`\\n`['map'](r => r['split']` `['map'](v => v | 0x0));\n    let ok = Math['ceil'](0x3b9aca00 / B), ng = 0x0;\n    bisect:\n        while (ok > IKupdx['tyLRO'](ng, 0x1)) {\n            let m = IKupdx['EycQA'](IKupdx['QdWdU'](ok, ng), 0x1), k = m;\n            for (let i = 0x0; IKupdx['vGPmr'](i, N); i++) {\n                let r = h[i] - m * B;\n                if (r <= 0x0)\n                    continue;\n                k -= Math['ceil'](r / IKupdx['FekQO'](A, B));\n            }\n            if (IKupdx['xkZaP'](k, 0x0))\n                ok = m;\n            else\n                ng = m;\n        }\n    return '' + ok;\n})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));", "test_cases": [["4 5 3\n8\n7\n4\n2", "2"], ["2 10 4\n20\n20", "4"], ["5 2 1\n900000000\n900000000\n1000000000\n1000000000\n1000000000", "800000000"]], "original": "console.log((args=>{\n  const [[N,A,B],...h] = args.trim().split`\\n`.map(r=>r.split` `.map(v=>v|0));\n  let ok = Math.ceil(1e9/B), ng = 0;\n  bisect: while ( ok > ng+1 ) {\n    let m = (ok+ng) >> 1, k = m;\n    for ( let i = 0; i < N; i++ ) {\n      let r = h[i] - m*B;\n      if ( r <= 0 ) continue;\n      k -= Math.ceil(r/(A-B));\n    }\n    if ( k >= 0 ) ok = m;\n    else ng = m;\n  }\n  return `${ok}`;\n})(require('fs').readFileSync('/dev/stdin','utf8')));\n", "language": "JavaScript"}
{"filename": "p03763_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var wJLPzZ = {\n        'Yjvqp': function (x, y) {\n            return x === y;\n        },\n        'IFfFL': 'abcdefghijklmnopqrstuvwxyz',\n        'WmHCb': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var S = wJLPzZ['IFfFL']['split']('');\n    var array = new Array(0x1a);\n    array['fill'](0x0);\n    var temp;\n    for (var i = 0x1; wJLPzZ['WmHCb'](i, input['length']); i++) {\n        temp = new Array(0x1a);\n        temp['fill'](0x0);\n        for (var j = 0x0; j < input[i]['length']; j++) {\n            temp[S['findIndex'](e => {\n                return wJLPzZ['Yjvqp'](e, input[i][j]);\n            })]++;\n        }\n        for (var j = 0x0; j < 0x1a; j++) {\n            if (array[j] > temp[j] || i === 0x1) {\n                array[j] = temp[j];\n            }\n        }\n    }\n    var ret = '';\n    array['forEach']((e, i) => {\n        ret += S[i]['repeat'](e);\n    });\n    console['log'](ret);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\ncbaa\ndaacc\nacacac", "aac"], ["3\na\naa\nb", ""]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var S=\"abcdefghijklmnopqrstuvwxyz\".split('');\n  var array=new Array(26);\n  array.fill(0);\n  var temp;\n  for(var i=1;i<input.length;i++){\n    temp=new Array(26);\n    temp.fill(0);\n    for(var j=0;j<input[i].length;j++){\n      temp[S.findIndex(e=>{return e===input[i][j];})]++;\n    }\n    \n    for(var j=0;j<26;j++){\n      if(array[j]>temp[j]||i===1){\n        array[j]=temp[j];\n      }\n    }\n  }\n  var ret='';\n  array.forEach((e,i)=>{\n    ret+=S[i].repeat(e);\n  });\n  console.log(ret);\n\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03816_1", "type": "JavaScript", "obfuscated": "'use strict';\nfunction main(n, array) {\n    const cMhNpr = {\n        'TzcAX': function (x, y) {\n            return x % y;\n        },\n        'eQkge': function (x, y) {\n            return x + y;\n        },\n        'jhrfu': function (x, y) {\n            return x === y;\n        }\n    };\n    let counter = {};\n    for (let a of array) {\n        counter[a] = counter[a] || 0x0;\n        counter[a]++;\n    }\n    let nums = Object['keys'](counter);\n    let evenCount = nums['reduce']((count, num) => {\n        if (cMhNpr['TzcAX'](counter[num], 0x2) === 0x0) {\n            return cMhNpr['eQkge'](count, 0x1);\n        } else {\n            return count;\n        }\n    }, 0x0);\n    let answer;\n    if (cMhNpr['jhrfu'](evenCount % 0x2, 0x0)) {\n        answer = nums['length'];\n    } else {\n        answer = nums['length'] - 0x1;\n    }\n    console['log'](answer);\n}\nfunction doMain() {\n    const kdnubt = {\n        'YomvI': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'lmDWq': 'utf8',\n        'mZupd': 'data',\n        'sFNKZ': 'end'\n    };\n    let input = '';\n    process['stdin']['resume']();\n    process['stdin']['setEncoding'](kdnubt['lmDWq']);\n    process['stdin']['on'](kdnubt['mZupd'], chunk => {\n        input += chunk;\n    });\n    process['stdin']['on'](kdnubt['sFNKZ'], () => {\n        input = input['trim']()['split']('\\x0a');\n        let n = Number(input[0x0]);\n        let array = input[0x1]['split']('\\x20')['map'](a => Number(a));\n        kdnubt['YomvI'](main, n, array);\n    });\n}\ndoMain();", "test_cases": [["5\n1 2 1 3 7", "3"], ["15\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1", "7"]], "original": "'use strict'\n\nfunction main (n, array) {\n  let counter = {}\n  for (let a of array) {\n    counter[a] = counter[a] || 0\n    counter[a]++\n  }\n  let nums = Object.keys(counter)\n  let evenCount = nums.reduce((count, num) => {\n    if (counter[num] % 2 === 0) {\n      return count + 1\n    } else {\n      return count\n    }\n  }, 0)\n  let answer\n  if (evenCount % 2 === 0) {\n    answer = nums.length\n  } else {\n    answer = nums.length - 1\n  }\n  console.log(answer)\n}\n\nfunction doMain () {\n  let input = ''\n  process.stdin.resume()\n  process.stdin.setEncoding('utf8')\n  process.stdin.on('data', (chunk) => {\n    input += chunk\n  })\n  process.stdin.on('end', () => {\n    input = input.trim().split('\\n')\n    let n = Number(input[0])\n    let array = input[1].split(' ').map(a => Number(a))\n    main(n, array)\n  })\n}\n\ndoMain()\n", "language": "JavaScript"}
{"filename": "p03856_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar fs = require('fs');\nvar input = Buffer['alloc'](0x10000);\nvar length = fs['readSync'](0x0, input, 0x0, 0x10000);\nvar text = input['toString']()['slice'](0x0, length)['trim']();\nvar dp = Array(text['length'] + 0x1)['fill'](![]);\ndp[0x0] = !![];\nfor (var index = 0x5; index <= text['length']; index++) {\n    if (dp[index - 0x5] === !![] && text['slice'](index - 0x5, index) === 'dream') {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x7] === !![] && text['slice'](index - 0x7, index) === 'dreamer') {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x5] === !![] && text['slice'](index - 0x5, index) === 'erase') {\n        dp[index] = !![];\n        continue;\n    }\n    if (dp[index - 0x6] === !![] && text['slice'](index - 0x6, index) === 'eraser') {\n        dp[index] = !![];\n        continue;\n    }\n}\nconsole['log'](dp[text['length']] ? 'YES' : 'NO');", "test_cases": [["erasedream", "YES"], ["dreameraser", "YES"], ["dreamerer", "NO"]], "original": "'use strict';\n\nvar fs = require('fs');\n\nvar input = Buffer.alloc(0x10000);\nvar length = fs.readSync(0, input, 0, 0x10000);\n\nvar text = input.toString().slice(0, length).trim();\nvar dp = Array(text.length + 1).fill(false);\ndp[0] = true;\n\nfor (var index = 5; index <= text.length; index++) {\n    if (dp[index - 5] === true && text.slice(index - 5, index) === 'dream') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 7] === true && text.slice(index - 7, index) === 'dreamer') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 5] === true && text.slice(index - 5, index) === 'erase') {\n        dp[index] = true;\n        continue;\n    }\n\n    if (dp[index - 6] === true && text.slice(index - 6, index) === 'eraser') {\n        dp[index] = true;\n        continue;\n    }\n}\n\nconsole.log(dp[text.length] ? 'YES' : 'NO');", "language": "JavaScript"}
{"filename": "p03864_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var LFNSfW = {\n        'HSdNB': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'zwhkd': function (x, y) {\n            return x < y;\n        },\n        'uAuxR': function (x, y) {\n            return x >= y;\n        },\n        'AqjMD': function (x, y) {\n            return x - y;\n        },\n        'WsQoS': function (x, y) {\n            return x - y;\n        }\n    };\n    var toFXJc = '2|1|0|6|7|4|5|3|8'['split']('|');\n    var TMqpDn = 0x0;\n    while (!![]) {\n        switch (toFXJc[TMqpDn++]) {\n        case '0':\n            var x = LFNSfW['HSdNB'](parseInt, input[0x0][0x1], 0xa);\n            continue;\n        case '1':\n            var N = LFNSfW['HSdNB'](parseInt, input[0x0][0x0], 0xa);\n            continue;\n        case '2':\n            input = input['trim']()['split']('\\x0a')['map'](function (x) {\n                return x['split']('\\x20');\n            });\n            continue;\n        case '3':\n            for (var i = 0x0; LFNSfW['zwhkd'](i, N); i++) {\n                if (LFNSfW['uAuxR'](vec_a[i], x - tmp))\n                    vec_b['push'](LFNSfW['AqjMD'](x, tmp));\n                else\n                    vec_b['push'](vec_a[i]);\n                tmp = vec_b[i];\n            }\n            continue;\n        case '4':\n            var vec_b = [];\n            continue;\n        case '5':\n            var tmp = 0x0;\n            continue;\n        case '6':\n            var vec_a = input[0x1]['map'](e => parseInt(e, 0xa));\n            continue;\n        case '7':\n            var sum = function (arr) {\n                var sum = 0x0;\n                arr['forEach'](function (elm) {\n                    sum += elm;\n                });\n                return sum;\n            };\n            continue;\n        case '8':\n            console['log'](LFNSfW['WsQoS'](sum(vec_a), sum(vec_b)));\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n2 2 2", "1"], ["6 1\n1 6 1 2 0 4", "11"], ["5 9\n3 1 4 1 5", "0"], ["2 0\n5 5", "10"]], "original": "\nfunction Main(input) {\n\tinput = input.trim().split(\"\\n\").map(function(x) { return x.split(\" \")});\n\tvar N = parseInt(input[0][0], 10);\n\tvar x = parseInt(input[0][1], 10);\n\tvar vec_a = input[1].map(e => parseInt(e, 10));\n\tvar sum  = function(arr) {\n\t\tvar sum = 0;\n\t\tarr.forEach(function(elm) {\n\t\t\tsum += elm;\n\t\t});\n\t\treturn sum;\n\t};\n\tvar vec_b = [];\n\tvar tmp = 0;\n\tfor (var i = 0; i < N; i++){\n\t\tif (vec_a[i] >= (x - tmp)) vec_b.push(x - tmp);\n\t\telse vec_b.push(vec_a[i]);\n\t\ttmp = vec_b[i];\n\t}\n\tconsole.log(sum(vec_a) - sum(vec_b));\n}\n\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\")); ", "language": "JavaScript"}
{"filename": "p03891_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var QrEfUr = {\n        'ADmzv': '3|12|0|7|6|4|5|8|1|10|11|2|9',\n        'rlOCN': function (x, y) {\n            return x - y;\n        },\n        'JVLCK': function (x, y) {\n            return x - y;\n        },\n        'xNChH': function (x, y) {\n            return x + y;\n        },\n        'xGAnK': function (x, y) {\n            return x + y;\n        },\n        'SidqW': function (x, y) {\n            return x - y;\n        },\n        'LSBiY': function (x, y) {\n            return x - y;\n        },\n        'TwBkO': function (x, y) {\n            return x * y;\n        },\n        'xqpLI': function (x, y) {\n            return x - y;\n        },\n        'gLPAq': function (x, y) {\n            return x + y;\n        },\n        'LRKZt': function (x, y) {\n            return x + y;\n        },\n        'DDuXj': function (x, y) {\n            return x + y;\n        }\n    };\n    var koaVYw = QrEfUr['ADmzv']['split']('|');\n    var Adtnri = 0x0;\n    while (!![]) {\n        switch (koaVYw[Adtnri++]) {\n        case '0':\n            var x = [\n                [\n                    data[0x0],\n                    data[0x1],\n                    0x0\n                ],\n                [\n                    0x0,\n                    data[0x2],\n                    0x0\n                ],\n                [\n                    0x0,\n                    0x0,\n                    0x0\n                ]\n            ];\n            continue;\n        case '1':\n            x[0x1][0x0] = QrEfUr['rlOCN'](QrEfUr['JVLCK'](sum, x[0x0][0x0]), x[0x2][0x0]);\n            continue;\n        case '2':\n            console['log'](QrEfUr['xNChH'](QrEfUr['xGAnK'](QrEfUr['xNChH'](x[0x1][0x0], '\\x20'), x[0x1][0x1]) + '\\x20', x[0x1][0x2]));\n            continue;\n        case '3':\n            var rbPKmT = {\n                'nAkum': function (callee, param1) {\n                    return callee(param1);\n                }\n            };\n            continue;\n        case '4':\n            x[0x2][0x1] = QrEfUr['SidqW'](QrEfUr['LSBiY'](sum, x[0x0][0x1]), x[0x1][0x1]);\n            continue;\n        case '5':\n            x[0x2][0x2] = QrEfUr['JVLCK'](sum - x[0x0][0x0], x[0x1][0x1]);\n            continue;\n        case '6':\n            x[0x0][0x2] = QrEfUr['JVLCK'](QrEfUr['JVLCK'](sum, x[0x0][0x0]), x[0x0][0x1]);\n            continue;\n        case '7':\n            var sum = QrEfUr['TwBkO'](0x3, x[0x1][0x1]);\n            continue;\n        case '8':\n            x[0x2][0x0] = QrEfUr['xqpLI'](sum - x[0x2][0x1], x[0x2][0x2]);\n            continue;\n        case '9':\n            console['log'](QrEfUr['xNChH'](QrEfUr['gLPAq'](QrEfUr['xNChH'](x[0x2][0x0], '\\x20') + x[0x2][0x1], '\\x20'), x[0x2][0x2]));\n            continue;\n        case '10':\n            x[0x1][0x2] = QrEfUr['SidqW'](QrEfUr['SidqW'](sum, x[0x0][0x2]), x[0x2][0x2]);\n            continue;\n        case '11':\n            console['log'](QrEfUr['LRKZt'](QrEfUr['gLPAq'](QrEfUr['DDuXj'](QrEfUr['gLPAq'](x[0x0][0x0], '\\x20'), x[0x0][0x1]), '\\x20'), x[0x0][0x2]));\n            continue;\n        case '12':\n            var data = input['split'](/\\a\\n|\\a|\\n/)['map'](function (s) {\n                return rbPKmT['nAkum'](parseInt, s);\n            });\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["8\n3\n5", "8 3 4\n1 5 9\n6 7 2"], ["1\n1\n1", "1 1 1\n1 1 1\n1 1 1"]], "original": "function Main(input) {\n\tvar data = input.split(/\\a\\n|\\a|\\n/).map(function(s) { return parseInt(s); });\n\tvar x = [ [data[0], data[1], 0],\n\t\t\t\t[0, data[2], 0],\n\t\t\t\t[0, 0, 0] ]\n\tvar sum = 3 * x[1][1]\n\tx[0][2] = sum - x[0][0] - x[0][1]\n\tx[2][1] = sum - x[0][1] - x[1][1]\n\tx[2][2] = sum - x[0][0] - x[1][1]\n\tx[2][0] = sum - x[2][1] - x[2][2]\n\tx[1][0] = sum - x[0][0] - x[2][0]\n\tx[1][2] = sum - x[0][2] - x[2][2]\n\t\n\tconsole.log(x[0][0] + \" \" + x[0][1] + \" \" + x[0][2])\n\tconsole.log(x[1][0] + \" \" + x[1][1] + \" \" + x[1][2])\n\tconsole.log(x[2][0] + \" \" + x[2][1] + \" \" + x[2][2])\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03910_1", "type": "JavaScript", "obfuscated": "function myout(text) {\n    console['log'](text);\n}\nfunction Main(input) {\n    var MwItwg = {\n        'NLPtD': function (callee, param1) {\n            return callee(param1);\n        },\n        'qkQKn': function (x, y) {\n            return x <= y;\n        },\n        'eaNYO': function (x, y) {\n            return x == y;\n        },\n        'iZmIe': function (x, y) {\n            return x > y;\n        },\n        'ismTy': function (x, y) {\n            return x - y;\n        }\n    };\n    input = MwItwg['NLPtD'](parseInt, input);\n    var list = [];\n    var output = 0x0;\n    for (var i = 0x1; MwItwg['qkQKn'](i, input); i++) {\n        output += i;\n        list['push'](i);\n        if (MwItwg['eaNYO'](output, input)) {\n            MwItwg['NLPtD'](myout, list['join']('\\x0a'));\n            return;\n        } else if (MwItwg['iZmIe'](output, input)) {\n            var diff = MwItwg['ismTy'](output, input);\n            list['splice'](list['indexOf'](diff), 0x1);\n            myout(list['join']('\\x0a'));\n            return;\n        }\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["4", "1\n3"], ["7", "1\n2\n4"], ["1", "1"]], "original": "function myout(text){console.log(text);}//standard output\nfunction Main(input) {\n\tinput = parseInt(input);\n\t//input = input.split(\" \");\n\t//input = input.split(\"\\n\");\n\t//input = input.split(\" \").map((a)=>Number(a));\n\t//input = input.split(\"\\n\").map((a)=>Number(a));\n  var list = [];\n  var output = 0;\n  for(var i = 1; i <= input; i++){\n    output += i;\n    list.push(i);\n    if(output == input){\n       myout(list.join(\"\\n\"));\n      return;\n    }else if(output > input){\n      var diff = output - input;\n      list.splice(list.indexOf(diff),1);\n      myout(list.join(\"\\n\"));\n      return;\n    }\n  }\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());\n", "language": "JavaScript"}
{"filename": "p03929_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var bXncli = {\n        'rgAlb': '2|4|0|1|3|6|5',\n        'kkBOM': function (x, y) {\n            return x < y;\n        },\n        'QubDL': function (x, y) {\n            return x == y;\n        },\n        'IlHMG': function (x, y) {\n            return x + y;\n        },\n        'AQLsf': function (x, y) {\n            return x + y;\n        },\n        'aijHT': function (x, y) {\n            return x * y;\n        }\n    };\n    var legIBk = bXncli['rgAlb']['split']('|');\n    var AtFyjF = 0x0;\n    while (!![]) {\n        switch (legIBk[AtFyjF++]) {\n        case '0':\n            var valK = input[0x1];\n            continue;\n        case '1':\n            if (bXncli['kkBOM'](valN, 0x3)) {\n                console['log']('0');\n                return;\n            }\n            continue;\n        case '2':\n            input = input['split']('\\x20');\n            continue;\n        case '3':\n            var count = 0x0;\n            continue;\n        case '4':\n            var valN = input[0x0];\n            continue;\n        case '5':\n            console['log'](count);\n            continue;\n        case '6':\n            for (var i = 0x0; bXncli['kkBOM'](i + 0x2, valN); i++) {\n                for (var j = 0x0; bXncli['kkBOM'](j, 0x5); j++) {\n                    if (bXncli['QubDL'](bXncli['IlHMG'](bXncli['AQLsf'](bXncli['aijHT'](i, 0x3f), bXncli['aijHT'](j, 0x9)), 0x51) % 0xb, valK)) {\n                        count++;\n                    }\n                }\n            }\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["7 7", "2"], ["6 0", "2"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\t// 1行目がinput[0], 2行目がinput[1], …に入る\n\tinput = input.split(\" \");\n\t//カレンダーの段数 n\n\tvar valN = input[0];\n\t//正方形を置く時の条件となる数 k\n\tvar valK = input[1];\n\t\n\t//値のチェック\n\tif(valN < 3){\n\t\tconsole.log(\"0\");\n\t\treturn;\n\t}\n\t\n\tvar count = 0;\n\t//段数の数だけ繰り返す\n\tfor(var i = 0;i+2<valN;i++){\n\t\t//行数の数だけ繰り返す\n\t\tfor(var j = 0;j<5;j++){\n\t\t\t//条件チェック\n\t\t\tif((i*63 + j*9 + 81)%11 == valK){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconsole.log(count);\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p04028_1", "type": "JavaScript", "obfuscated": "var mod = 0x3b9aca00 + 0x7;\nfunction Main(s) {\n    var QinquZ = {\n        'bwVPW': function (callee, param1) {\n            return callee(param1);\n        },\n        'ppUfQ': function (callee, param1) {\n            return callee(param1);\n        },\n        'sCFMC': function (x, y) {\n            return x + y;\n        },\n        'ercyc': function (x, y) {\n            return x <= y;\n        },\n        'kSvvn': function (x, y) {\n            return x - y;\n        },\n        'iOyGz': function (x, y) {\n            return x - y;\n        },\n        'qFLAw': function (x, y) {\n            return x <= y;\n        },\n        'nFFJa': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'FwFuG': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var n = QinquZ['bwVPW'](parseInt, s[0x0]);\n    var sl = s[0x1]['length'];\n    var a = QinquZ['ppUfQ'](Array, QinquZ['sCFMC'](n, 0x1))['fill'](0x0)['map'](a => Array(n + 0x2)['fill'](0x0));\n    a[0x0][0x0] = 0x1;\n    for (var i = 0x1; QinquZ['ercyc'](i, n); i++) {\n        a[i][0x0] = a[QinquZ['kSvvn'](i, 0x1)][0x0] + a[QinquZ['iOyGz'](i, 0x1)][0x1];\n        a[i][0x0] %= mod;\n        for (var j = 0x1; QinquZ['qFLAw'](j, i); j++) {\n            a[i][j] = QinquZ['sCFMC'](a[i - 0x1][QinquZ['kSvvn'](j, 0x1)] * 0x2, a[i - 0x1][j + 0x1]);\n            a[i][j] %= mod;\n        }\n    }\n    console['log'](QinquZ['nFFJa'](permod, a[n][sl], QinquZ['FwFuG'](powmod, 0x2, sl)));\n}\nfunction abmod() {\n    var zFBwdZ = {\n        'eHJzZ': function (x, y) {\n            return x < y;\n        },\n        'jqkdQ': function (x, y) {\n            return x + y;\n        },\n        'qigJO': function (x, y) {\n            return x >>> y;\n        },\n        'TNkXR': function (x, y) {\n            return x * y;\n        },\n        'yiOLy': function (x, y) {\n            return x & y;\n        }\n    };\n    var rt = arguments[0x0];\n    for (var i = 0x1; zFBwdZ['eHJzZ'](i, arguments['length']); i++) {\n        rt = zFBwdZ['jqkdQ'](zFBwdZ['qigJO'](rt, 0x10) * arguments[i] % mod * 0x10000, zFBwdZ['TNkXR'](zFBwdZ['yiOLy'](rt, 0xffff), arguments[i]));\n        rt %= mod;\n    }\n    return rt;\n}\nfunction powmod(a, n) {\n    var gZxLYi = {\n        'lvCtK': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'VTZcB': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var rt = 0x1;\n    while (n) {\n        if (n & 0x1)\n            rt = gZxLYi['lvCtK'](abmod, a, rt);\n        a = gZxLYi['VTZcB'](abmod, a, a);\n        n >>>= 0x1;\n    }\n    return rt;\n}\nfunction permod(a, n) {\n    var aCCYTA = {\n        'ZtQSp': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'figGg': function (x, y) {\n            return x - y;\n        }\n    };\n    var rt = aCCYTA['ZtQSp'](powmod, n, aCCYTA['figGg'](mod, 0x2));\n    rt = abmod(rt, a);\n    return rt;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\\x0a'));", "test_cases": [["3\n0", "5"], ["300\n1100100", "519054663"], ["5000\n01000001011101000100001101101111011001000110010101110010000", "500886057"]], "original": "var mod = 1e9+7;\nfunction Main(s) {\n  var n = parseInt(s[0]);\n  var sl = s[1].length;\n  var a = Array(n+1).fill(0).map(a => Array(n+2).fill(0));\n  a[0][0] = 1;\n  for(var i = 1; i <= n; i++){\n    a[i][0] = a[i-1][0] + a[i-1][1];\n    a[i][0] %= mod;\n    for(var j = 1; j <= i; j++){\n      a[i][j] = a[i-1][j-1] * 2 + a[i-1][j+1];\n      a[i][j] %= mod;\n    }\n  }\n  console.log(permod(a[n][sl], powmod(2, sl)));\n}\nfunction abmod(){\n\tvar rt = arguments[0];\n\tfor(var i = 1; i < arguments.length; i++){\n\t\trt = (rt >>> 16) * arguments[i] % mod * 0x10000 + (rt & 0xFFFF) * arguments[i];\n\t\trt %= mod;\n\t}\n\treturn rt;\n}\nfunction powmod(a,n){//a^n%mod\n\tvar rt = 1;\n\twhile(n){\n\t\tif(n & 1) rt = abmod(a, rt);\n\t\ta = abmod(a, a);\n\t\tn >>>= 1;\n\t}\n\treturn rt;\n}\nfunction permod(a,n){\n\tvar rt = powmod(n, mod-2);\n\trt = abmod(rt, a);\n\treturn rt;\n}\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").split(\"\\n\"));", "language": "JavaScript"}
{"filename": "p00055_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nArr['forEach'](function (v) {\n    var GGMhtj = {\n        'iIUQI': function (x, y) {\n            return x == y;\n        },\n        'gVYon': function (x, y) {\n            return x % y;\n        },\n        'rJxHs': function (x, y) {\n            return x * y;\n        },\n        'jxLWS': function (x, y) {\n            return x - y;\n        },\n        'pAvWt': function (x, y) {\n            return x / y;\n        },\n        'tENUI': function (x, y) {\n            return x - y;\n        }\n    };\n    var arr = [\n        0x0,\n        v\n    ];\n    for (var i = 0x2; i <= 0xa; i++) {\n        arr[i] = GGMhtj['iIUQI'](GGMhtj['gVYon'](i, 0x2), 0x0) ? GGMhtj['rJxHs'](arr[GGMhtj['jxLWS'](i, 0x1)], 0x2) : GGMhtj['pAvWt'](arr[GGMhtj['tENUI'](i, 0x1)], 0x3);\n    }\n    var sum = arr['reduce'](function (a, b) {\n        return a + b;\n    });\n    console['log'](sum['toFixed'](0x8));\n});", "test_cases": [["1.0\n2.0\n3.0", "7.81481481\n15.62962963\n23.44444444"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nArr.forEach(function(v){\n   var arr=[0,v];\n   for(var i=2;i<=10;i++){\n         arr[i]=(i%2==0)?arr[i-1]*2 : arr[i-1]/3;\n   }\n   var sum=arr.reduce(function(a,b){return a+b;});\n   console.log(sum.toFixed(8));\n});", "language": "JavaScript"}
{"filename": "p00057_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var n = Arr[i] - 0x0 + 0x1;\n    var x = 0x1 / 0x2 * n * (n - 0x1);\n    console['log'](x + 0x1);\n}", "test_cases": [["1\n3", "2\n7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var n=(Arr[i]-0)+1;\n   var x=1/2*n*(n-1);\n   console.log(x+1);\n}", "language": "JavaScript"}
{"filename": "p00066_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('');\n    var a1 = arr[0x0];\n    var a2 = arr[0x1];\n    var a3 = arr[0x2];\n    var a4 = arr[0x3];\n    var a5 = arr[0x4];\n    var a6 = arr[0x5];\n    var a7 = arr[0x6];\n    var a8 = arr[0x7];\n    var a9 = arr[0x8];\n    var d = 0x0;\n    for (var j = 0x0; j < 0x2; j++) {\n        var s = j == 0x0 ? 'o' : 'x';\n        var S = s + s + s;\n        if (a1 + a2 + a3 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a4 + a5 + a6 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a7 + a8 + a9 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a1 + a4 + a7 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a2 + a5 + a8 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a3 + a6 + a9 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a1 + a5 + a9 == S) {\n            console['log'](s);\n            break;\n        }\n        if (a3 + a5 + a7 == S) {\n            console['log'](s);\n            break;\n        }\n        d++;\n    }\n    if (d == 0x2)\n        console['log']('d');\n}", "test_cases": [["ooosxssxs\nxoosxsosx\nooxxxooxo", "o\nx\nd"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\nvar arr=Arr[i].split(\"\");\nvar a1=arr[0];\nvar a2=arr[1];\nvar a3=arr[2];\nvar a4=arr[3];\nvar a5=arr[4];\nvar a6=arr[5];\nvar a7=arr[6];\nvar a8=arr[7];\nvar a9=arr[8];\nvar d=0;\nfor(var j=0;j<2;j++){\n   var s=(j==0)?\"o\":\"x\";\n   var S=s+s+s;\n   if(a1+a2+a3==S){console.log(s);break;}\n   if(a4+a5+a6==S){console.log(s);break;}\n   if(a7+a8+a9==S){console.log(s);break;}\n   if(a1+a4+a7==S){console.log(s);break;}\n   if(a2+a5+a8==S){console.log(s);break;}\n   if(a3+a6+a9==S){console.log(s);break;}\n   if(a1+a5+a9==S){console.log(s);break;}\n   if(a3+a5+a7==S){console.log(s);break;}\n   d++;\n}\nif(d==2)console.log(\"d\");\n}", "language": "JavaScript"}
{"filename": "p00067_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var stNWne = {\n        'pviZp': function (x, y) {\n            return x < y;\n        },\n        'XtIuf': function (x, y) {\n            return x + y;\n        },\n        'HROYS': function (x, y) {\n            return x + y;\n        },\n        'dkdbY': function (x, y) {\n            return x >= y;\n        },\n        'WpjtV': function (x, y) {\n            return x == y;\n        },\n        'TVNhi': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; stNWne['pviZp'](i, 0x4); i++) {\n        var yy = stNWne['XtIuf'](y, dy[i]);\n        var xx = stNWne['HROYS'](x, dx[i]);\n        if (yy < 0x0 || stNWne['dkdbY'](yy, 0xc) || xx < 0x0 || stNWne['dkdbY'](xx, 0xc))\n            continue;\n        if (stNWne['WpjtV'](yx[yy][xx], 'a')) {\n            yx[yy][xx] = cnt;\n            stNWne['TVNhi'](bomb, yy, xx);\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = 0x0;\nvar cnt = 0x0;\nvar yx = [];\nfor (var I = 0x0; I < Arr['length']; I++) {\n    n++;\n    var v = Arr[I]['replace'](/1/g, 'a');\n    var arr = v['split']('');\n    yx['push'](arr);\n    if (n != 0xc)\n        continue;\n    cnt = 0x0;\n    for (var i = 0x0; i < 0xc; i++) {\n        for (var j = 0x0; j < 0xc; j++) {\n            if (yx[i][j] == 'a') {\n                cnt++;\n                yx[i][j] = cnt;\n                bomb(i, j);\n            }\n        }\n    }\n    console['log'](cnt);\n    n = 0x0;\n    yx = [];\n    I++;\n}", "test_cases": [["111100001111\n111000001111\n110000001111\n100000001111\n000100010000\n000000111000\n000001111100\n100011111110\n110001111100\n111000111000\n111100010000\n000000000000\n\n010001111100\n110010000010\n010010000001\n010000000001\n010000000110\n010000111000\n010000000100\n010000000010\n010000000001\n010010000001\n010010000010\n111001111100\n\n000000000000\n111111111111\n100010100001\n100010100001\n100010100001\n100010100001\n100100100101\n101000011101\n100000000001\n100000000001\n111111111111\n100000000001", "5\n13\n4"]], "original": "function bomb(y,x){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=12 || xx<0 || xx>=12)continue;\n      if(yx[yy][xx]==\"a\"){yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=0;\nvar cnt=0;\nvar yx=[];\nfor(var I=0;I<Arr.length;I++){\n   n++;\n   var v=Arr[I].replace(/1/g,\"a\");\n   var arr=v.split(\"\");\n   yx.push(arr);\n   if(n!=12)continue;\n   cnt=0;\n   for(var i=0;i<12;i++){\n      for(var j=0;j<12;j++){\n         if(yx[i][j]==\"a\"){cnt++;yx[i][j]=cnt;bomb(i,j);}\n      }\n   }\n   console.log(cnt);\n   n=0;\n   yx=[];\n   I++;\n}", "language": "JavaScript"}
{"filename": "p00073_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar lines = input['split']('\\x0a');\nwhile (!![]) {\n    var x = +lines['shift']();\n    var h = +lines['shift']();\n    if (x + h == 0x0)\n        break;\n    console['log']((x * x + x * Math['sqrt'](0x4 * h * h + x * x))['toFixed'](0x6));\n}", "test_cases": [["6\n4\n7\n9\n0\n0", "96.000000\n184.192455"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar lines = input.split('\\n');\n\nwhile (true) {\n    var x = +lines.shift();\n    var h = +lines.shift();\n    if (x + h == 0)\n        break;\n\n    console.log(((x * x) + (x * Math.sqrt(4 * h * h + x * x))).toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00077_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['forEach'](function (v) {\n    var rltWjq = {\n        'PVxWE': function (callee, param1) {\n            return callee(param1);\n        },\n        'UnqAS': function (x, y) {\n            return x + y;\n        },\n        'nUaUN': function (x, y) {\n            return x - y;\n        }\n    };\n    v = v['replace'](/@(\\d)(.)/g, function (s, s1, s2) {\n        return rltWjq['PVxWE'](Array, rltWjq['UnqAS'](rltWjq['nUaUN'](s1, 0x0), 0x1))['join'](s2);\n    });\n    console['log'](v);\n});", "test_cases": [["ab@5C1@8050\n@99+1=1@90", "abCCCCC10000000050\n999999999+1=1000000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   v=v.replace(/@(\\d)(.)/g,function(s,s1,s2){\n      return Array((s1-0)+1).join(s2);\n   });\n   console.log(v);\n});", "language": "JavaScript"}
{"filename": "p00079_1", "type": "JavaScript", "obfuscated": "function heron(a, b, c) {\n    var OIIlVr = {\n        'WEvou': function (x, y) {\n            return x / y;\n        },\n        'phSam': function (x, y) {\n            return x + y;\n        },\n        'tEmMO': function (x, y) {\n            return x + y;\n        },\n        'jxkhQ': function (x, y) {\n            return x * y;\n        },\n        'yEkzF': function (x, y) {\n            return x - y;\n        }\n    };\n    var s = OIIlVr['WEvou'](OIIlVr['phSam'](OIIlVr['tEmMO'](a, b), c), 0x2);\n    var S = Math['sqrt'](OIIlVr['jxkhQ'](s * (s - a), OIIlVr['yEkzF'](s, b)) * OIIlVr['yEkzF'](s, c));\n    return S;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar xy1 = Arr['shift']()['split'](',')['map'](Number);\nvar xy2 = Arr['shift']()['split'](',')['map'](Number);\nvar x1 = xy1[0x0];\nvar y1 = xy1[0x1];\nvar x2 = xy2[0x0];\nvar y2 = xy2[0x1];\nvar sum = 0x0;\nfor (var I = 0x0; I < Arr['length']; I++) {\n    var yvipno = '5|7|2|8|3|1|0|6|4'['split']('|');\n    var zGgjNp = 0x0;\n    while (!![]) {\n        switch (yvipno[zGgjNp++]) {\n        case '0':\n            sum += heron(d12, d13, d23);\n            continue;\n        case '1':\n            var d23 = Math['sqrt'](Math['pow'](x2 - x3, 0x2) + Math['pow'](y2 - y3, 0x2));\n            continue;\n        case '2':\n            var y3 = xy3[0x1];\n            continue;\n        case '3':\n            var d13 = Math['sqrt'](Math['pow'](x1 - x3, 0x2) + Math['pow'](y1 - y3, 0x2));\n            continue;\n        case '4':\n            y2 = xy3[0x1];\n            continue;\n        case '5':\n            var xy3 = Arr[I]['split'](',')['map'](Number);\n            continue;\n        case '6':\n            x2 = xy3[0x0];\n            continue;\n        case '7':\n            var x3 = xy3[0x0];\n            continue;\n        case '8':\n            var d12 = Math['sqrt'](Math['pow'](x1 - x2, 0x2) + Math['pow'](y1 - y2, 0x2));\n            continue;\n        }\n        break;\n    }\n}\nconsole['log'](sum['toFixed'](0x6));", "test_cases": [["0.0,0.0\n0.0,1.0 \n1.0,1.0 \n2.0,0.0 \n1.0,-1.0", "2.500000"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar xy1=(Arr.shift()).split(\",\").map(Number);\nvar xy2=(Arr.shift()).split(\",\").map(Number);\nvar x1=xy1[0];var y1=xy1[1];\nvar x2=xy2[0];var y2=xy2[1];\nvar sum=0;\nfor(var I=0;I<Arr.length;I++){\n   var xy3=Arr[I].split(\",\").map(Number);\n   var x3=xy3[0];var y3=xy3[1];\n   var d12=Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));\n   var d13=Math.sqrt(Math.pow(x1-x3,2)+Math.pow(y1-y3,2));\n   var d23=Math.sqrt(Math.pow(x2-x3,2)+Math.pow(y2-y3,2));\n   sum+=heron(d12,d13,d23);\n   x2=xy3[0];\n   y2=xy3[1];\n}\nconsole.log(sum.toFixed(6));", "language": "JavaScript"}
{"filename": "p00080_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var Q = Arr['shift']() - 0x0;\n    if (Q == -0x1)\n        break;\n    var x = Q / 0x2;\n    while (Math['abs'](Math['pow'](x, 0x3) - Q) >= 0.00001 * Q) {\n        x = x - (Math['pow'](x, 0x3) - Q) / (0x3 * Math['pow'](x, 0x2));\n    }\n    console['log'](x['toFixed'](0x6));\n}", "test_cases": [["15\n15\n-1", "2.466212\n2.466212"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var Q=Arr.shift()-0;\n   if(Q==-1)break;\n   var x=Q/2;\n   while(Math.abs(Math.pow(x,3)-Q)>=0.00001*Q){\n      x=x-(Math.pow(x,3)-Q)/(3*Math.pow(x,2));\n   }\n   console.log(x.toFixed(6));\n}", "language": "JavaScript"}
{"filename": "p00081_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split'](',')['map'](Number);\n    (function (x1, y1, x2, y2, xq, yq) {\n        var akefQv = {\n            'zZvjo': function (x, y) {\n                return x == y;\n            },\n            'Ddgtr': function (x, y) {\n                return x - y;\n            },\n            'pvQhG': function (x, y) {\n                return x - y;\n            },\n            'ZVpgN': '5|6|2|0|1|3|7|4',\n            'mSTYq': function (x, y) {\n                return x - y;\n            },\n            'aVTeg': function (x, y) {\n                return x * y;\n            },\n            'BtPny': function (x, y) {\n                return x / y;\n            },\n            'AJmMA': function (x, y) {\n                return x - y;\n            },\n            'cLtKF': function (x, y) {\n                return x - y;\n            },\n            'ETlWZ': function (x, y) {\n                return x / y;\n            },\n            'LdgcW': function (x, y) {\n                return x - y;\n            },\n            'BBKlF': function (x, y) {\n                return x + y;\n            },\n            'QkFYY': function (x, y) {\n                return x + y;\n            }\n        };\n        var k = akefQv['zZvjo'](akefQv['Ddgtr'](x2, x1), 0x0) ? Infinity : akefQv['Ddgtr'](y2, y1) / (x2 - x1);\n        var ans;\n        if (akefQv['zZvjo'](k, 0x0))\n            ans = [\n                xq,\n                akefQv['pvQhG'](y1, akefQv['pvQhG'](yq, y1))\n            ];\n        else if (akefQv['zZvjo'](k, Infinity))\n            ans = [\n                akefQv['pvQhG'](x1, xq - x1),\n                yq\n            ];\n        else {\n            var okiSfy = akefQv['ZVpgN']['split']('|');\n            var BTuuKj = 0x0;\n            while (!![]) {\n                switch (okiSfy[BTuuKj++]) {\n                case '0':\n                    var b2 = akefQv['mSTYq'](yq, akefQv['aVTeg'](a2, xq));\n                    continue;\n                case '1':\n                    var xm = akefQv['BtPny'](akefQv['AJmMA'](b2, b1), a1 - a2);\n                    continue;\n                case '2':\n                    var b1 = akefQv['cLtKF'](y1, akefQv['aVTeg'](a1, x1));\n                    continue;\n                case '3':\n                    var x = akefQv['aVTeg'](0x2, xm) - xq;\n                    continue;\n                case '4':\n                    ans = [\n                        x,\n                        y\n                    ];\n                    continue;\n                case '5':\n                    var a1 = akefQv['ETlWZ'](akefQv['LdgcW'](y2, y1), x2 - x1);\n                    continue;\n                case '6':\n                    var a2 = akefQv['BtPny'](-0x1, a1);\n                    continue;\n                case '7':\n                    var y = akefQv['BBKlF'](akefQv['aVTeg'](a2, x), b2);\n                    continue;\n                }\n                break;\n            }\n        }\n        console['log'](akefQv['QkFYY'](ans[0x0]['toFixed'](0x6) + '\\x20', ans[0x1]['toFixed'](0x6)));\n    }['apply'](null, arr));\n}", "test_cases": [["1.0,0.0,-1.0,0.0,1.0,1.0 \n1.0,0.0,0.0,-1.0,3.0,0.0 \n0.0,1.0,0.0,-1.0,1.0,1.0", "1.000000 -1.000000\n1.000000 2.000000\n-1.000000 1.000000"]], "original": "/*h  t t p : / / t a k u -k . h a t e n a blog . c o m / entry /2013/ 03 / 2 6 / 174239 */\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\",\").map(Number);\n   (function(x1,y1,x2,y2,xq,yq){\n      var k=(x2-x1==0)?Infinity:(y2-y1)/(x2-x1);\n      var ans;\n      if(k==0)ans=[xq,y1-(yq-y1)];\n      else if(k==Infinity)ans=[x1-(xq-x1),yq];\n      else{\n         var  a1=(y2-y1)/(x2-x1);\n         var  a2=(-1)/a1;\n         var  b1=y1-a1*x1;\n         var  b2=yq-a2*xq;\n         var  xm=(b2-b1)/(a1-a2);\n         var  x=2*xm-xq;\n         var  y=a2*x+b2;\n         ans=[x,y];\n      }\n      console.log(ans[0].toFixed(6)+\" \"+ans[1].toFixed(6));\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00107_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (arr[0x0] == 0x0 && arr[0x1] == 0x0 && arr[0x2] == 0x0)\n        break;\n    arr['sort'](function (a, b) {\n        return a - b;\n    });\n    var R = Math['sqrt'](arr[0x0] * arr[0x0] + arr[0x1] * arr[0x1]);\n    var n = Arr['shift']() - 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var r = Arr['shift']() - 0x0;\n        console['log'](r * 0x2 > R ? 'OK' : 'NA');\n    }\n}", "test_cases": [["10 6 8\n5\n4\n8\n6\n2\n5\n0 0 0", "NA\nOK\nOK\nNA\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0 && arr[1]==0 && arr[2]==0)break;\n   arr.sort(function(a,b){return a-b;});\n   var R=Math.sqrt(arr[0]*arr[0]+arr[1]*arr[1]);\n   var n=Arr.shift()-0;\n   for(var i=0;i<n;i++){\n      var r=Arr.shift()-0;\n      console.log((r*2>R)?\"OK\":\"NA\");\n   }\n}", "language": "JavaScript"}
{"filename": "p00108_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']();\n    if (n == '0')\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var k = 0x0;\n    var S = [];\n    while (!![]) {\n        for (var i = 0x0; i < arr['length']; i++) {\n            var cnt = 0x0;\n            for (var j = 0x0; j < arr['length']; j++) {\n                if (arr[i] == arr[j])\n                    cnt++;\n            }\n            S['push'](cnt);\n        }\n        if (S['join']('\\x20') == arr['join']('\\x20'))\n            break;\n        arr = S['slice']();\n        S = [];\n        k++;\n    }\n    console['log'](k);\n    console['log'](S['join']('\\x20'));\n}", "test_cases": [["10\n4 5 1 1 4 5 12 3 5 4\n0", "3\n6 6 4 4 6 6 4 4 6 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift();\n   if(n==\"0\")break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var k=0;\n   var S=[];\n   while(true){\n      for(var i=0;i<arr.length;i++){\n         var cnt=0;\n         for(var j=0;j<arr.length;j++){\n            if(arr[i]==arr[j])cnt++;\n         }\n         S.push(cnt);\n      }\n      if(S.join(\" \")==arr.join(\" \"))break;\n      arr=S.slice();\n      S=[];\n      k++;\n   }\n   console.log(k);\n   console.log(S.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00112_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        var v = Arr['shift']() - 0x0;\n        arr['push'](v);\n    }\n    arr['sort'](function (a, b) {\n        var VfDqWT = {\n            'wVTWt': function (x, y) {\n                return x - y;\n            }\n        };\n        return VfDqWT['wVTWt'](a, b);\n    });\n    var wait = [];\n    var time = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        wait['push'](time);\n        time += arr[i];\n    }\n    var sum = wait['reduce'](function (a, b) {\n        var nLmyhG = {\n            'JZEtR': function (x, y) {\n                return x + y;\n            }\n        };\n        return nLmyhG['JZEtR'](a, b);\n    });\n    console['log'](sum);\n}", "test_cases": [["5\n2\n6\n4\n3\n9\n0", "31"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++){\n      var v=Arr.shift()-0;\n      arr.push(v);\n   }\n   arr.sort(function(a,b){return a-b;});\n   var wait=[];\n   var time=0;\n   for(var i=0;i<n;i++){\n      wait.push(time);\n      time+=arr[i];\n   }\n   var sum=wait.reduce(function(a,b){return a+b;});\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00117_1", "type": "JavaScript", "obfuscated": "function warshall() {\n    var RUvvOw = {\n        'zJttH': function (x, y) {\n            return x < y;\n        },\n        'dqdiq': function (x, y) {\n            return x + y;\n        }\n    };\n    for (var k = 0x0; RUvvOw['zJttH'](k, n); k++) {\n        for (var i = 0x0; RUvvOw['zJttH'](i, n); i++) {\n            for (var j = 0x0; RUvvOw['zJttH'](j, n); j++) {\n                C[i][j] = Math['min'](C[i][j], RUvvOw['dqdiq'](C[i][k], C[k][j]));\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nvar m = Arr['shift']() - 0x0;\nvar C = [];\nfor (var i = 0x0; i < n; i++) {\n    C[i] = [];\n    for (var j = 0x0; j < n; j++) {\n        C[i][j] = i === j ? 0x0 : Infinity;\n    }\n}\nfor (var i = 0x0; i < m; i++) {\n    var A = Arr['shift']()['split'](',')['map'](Number);\n    C[A[0x0] - 0x1][A[0x1] - 0x1] = A[0x2];\n    C[A[0x1] - 0x1][A[0x0] - 0x1] = A[0x3];\n}\nwarshall();\nvar last = Arr['shift']()['split'](',')['map'](Number);\nvar cost = C[last[0x0] - 0x1][last[0x1] - 0x1] + C[last[0x1] - 0x1][last[0x0] - 0x1] + last[0x3];\nconsole['log'](last[0x2] - cost);", "test_cases": [["6\n8\n1,2,2,2 \n1,3,4,3 \n1,4,4,2 \n2,5,3,2 \n3,4,4,2 \n3,6,1,2 \n4,6,1,1 \n5,6,1,2 \n2,4,50,30", "11"]], "original": "function warshall(){\n   for(var k=0;k<n;k++){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            C[i][j]=Math.min(C[i][j], C[i][k]+C[k][j]);\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nvar m=Arr.shift()-0;\nvar C=[];\nfor(var i=0;i<n;i++){\n   C[i]=[];\n   for(var j=0;j<n;j++){\n      C[i][j]=(i===j)?0:Infinity;\n   }\n}\nfor(var i=0;i<m;i++){\n   var A=(Arr.shift()).split(\",\").map(Number);\n   C[A[0]-1][A[1]-1]=A[2];\n   C[A[1]-1][A[0]-1]=A[3];\n}\nwarshall();\nvar last=(Arr.shift()).split(\",\").map(Number);\nvar cost=C[last[0]-1][last[1]-1]+C[last[1]-1][last[0]-1]+last[3];\nconsole.log(last[2]-cost);", "language": "JavaScript"}
{"filename": "p00119_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar m = Arr['shift']() - 0x0;\nvar n = Arr['shift']() - 0x0;\nvar M = [];\nvar check = [];\nfor (var i = 0x0; i < m; i++)\n    M[i] = [];\nfor (var i = 0x0; i < m; i++)\n    check[i] = ![];\nfor (var i = 0x0; i < n; i++) {\n    var v = Arr['shift']()['split']('\\x20')['map'](Number);\n    M[v[0x0] - 0x1]['push'](v[0x1] - 0x1);\n}\nvar L = [];\nfor (var i = 0x0; i < m; i++) {\n    visit(i);\n}\nfunction visit(x) {\n    var mXkAlw = {\n        'Hvbcu': function (callee, param1) {\n            return callee(param1);\n        },\n        'ECeqF': function (x, y) {\n            return x == y;\n        }\n    };\n    if (mXkAlw['ECeqF'](check[x], !![]))\n        return;\n    else\n        check[x] = !![];\n    M[x]['forEach'](function (v) {\n        mXkAlw['Hvbcu'](visit, v);\n    });\n    L['push'](x);\n}\nL['reverse']();\nL['forEach'](function (v) {\n    console['log'](v + 0x1);\n});", "test_cases": [["6\n7\n5 2\n1 4\n3 5\n4 2\n1 6\n6 4\n3 4", "3\n5\n1\n6\n4\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar m=Arr.shift()-0;\nvar n=Arr.shift()-0;\nvar M=[];\nvar check=[];\nfor(var i=0;i<m;i++)M[i]=[];\nfor(var i=0;i<m;i++)check[i]=false;\nfor(var i=0;i<n;i++){\n   var v=Arr.shift().split(\" \").map(Number);\n   M[v[0]-1].push(v[1]-1);\n}\nvar L=[]; \nfor(var i=0;i<m;i++){\n   visit(i);\n}\nfunction visit(x){\n   if(check[x]==true)return;\n   else check[x]=true;\n   M[x].forEach(function(v){\n      visit(v);\n   });\n   L.push(x);\n}\nL.reverse();\nL.forEach(function(v){\n   console.log(v+1);\n});", "language": "JavaScript"}
{"filename": "p00123_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['forEach'](function (v) {\n    var xEyNJo = {\n        'fsHWF': '0|3|4|2|1|5',\n        'LIWYL': function (x, y) {\n            return x > y;\n        },\n        'KuEHg': function (x, y) {\n            return x > y;\n        },\n        'JaDzz': 'AAA',\n        'pWudv': function (x, y) {\n            return x > y;\n        },\n        'jGckT': function (x, y) {\n            return x > y;\n        },\n        'uprUC': function (x, y) {\n            return x > y;\n        }\n    };\n    var zoxWvT = xEyNJo['fsHWF']['split']('|');\n    var QZlfWM = 0x0;\n    while (!![]) {\n        switch (zoxWvT[QZlfWM++]) {\n        case '0':\n            var arr = v['split']('\\x20')['map'](Number);\n            continue;\n        case '1':\n            if (xEyNJo['LIWYL'](35.5, a) && xEyNJo['KuEHg'](0x47, b))\n                ans = xEyNJo['JaDzz'];\n            else if (37.5 > a && xEyNJo['LIWYL'](0x4d, b))\n                ans = 'AA';\n            else if (xEyNJo['KuEHg'](0x28, a) && xEyNJo['KuEHg'](0x53, b))\n                ans = 'A';\n            else if (0x2b > a && 0x59 > b)\n                ans = 'B';\n            else if (xEyNJo['pWudv'](0x32, a) && xEyNJo['jGckT'](0x69, b))\n                ans = 'C';\n            else if (xEyNJo['pWudv'](0x37, a) && xEyNJo['uprUC'](0x74, b))\n                ans = 'D';\n            else if (0x46 > a && 0x94 > b)\n                ans = 'E';\n            else\n                ans = 'NA';\n            continue;\n        case '2':\n            var ans;\n            continue;\n        case '3':\n            var a = arr[0x0];\n            continue;\n        case '4':\n            var b = arr[0x1];\n            continue;\n        case '5':\n            console['log'](ans);\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["40.0 70.0\n72.5 140.51", "B\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var a=arr[0];\n   var b=arr[1];\n   var ans;\n   if(35.5>a && 71>b)ans=\"AAA\";\n   else if(37.5>a && 77>b)ans=\"AA\";\n   else if(40>a && 83>b)ans=\"A\";\n   else if(43>a && 89>b)ans=\"B\";\n   else if(50>a && 105>b)ans=\"C\";\n   else if(55>a && 116>b)ans=\"D\";\n   else if(70>a && 148>b)ans=\"E\";\n   else ans=\"NA\";\n   console.log(ans);\n});", "language": "JavaScript"}
{"filename": "p00124_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar I = 0x0;\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    if (I != 0x0)\n        console['log']('');\n    I++;\n    var rank = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr['shift']()['split']('\\x20');\n        var score = 0x3 * (arr[0x1] - 0x0) + (arr[0x3] - 0x0) + (0xa - i) * 0.01;\n        rank['push']([\n            arr[0x0],\n            score\n        ]);\n    }\n    rank['sort'](function (a, b) {\n        var VeeqSR = {\n            'mwUxw': function (x, y) {\n                return x - y;\n            }\n        };\n        a = a[0x1];\n        b = b[0x1];\n        return VeeqSR['mwUxw'](b, a);\n    });\n    rank['forEach'](function (v) {\n        var NhGNKf = {\n            'kkjXT': function (x, y) {\n                return x + y;\n            }\n        };\n        console['log'](NhGNKf['kkjXT'](v[0x0], ',') + Math['floor'](v[0x1]));\n    });\n}", "test_cases": [["4\nJapan 1 0 2\nEgypt 1 2 0\nCanada 0 2 1\nSpain 2 0 1\n3\nIndia 0 2 0\nPoland 1 0 1\nItaly 1 0 1\n0", "Spain,7\nJapan,5\nEgypt,3\nCanada,1\n\nPoland,4\nItaly,4\nIndia,0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar I=0;\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   if(I!=0)console.log(\"\");\n   I++;\n   var rank=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var score=(3*(arr[1]-0))+(arr[3]-0)+((10-i)*0.01);\n      rank.push([arr[0],score]);\n   }\n   rank.sort(function(a,b){\n      a=a[1];\n      b=b[1];\n      return b-a;\n   });\n   rank.forEach(function(v){\n      console.log(v[0]+\",\"+Math.floor(v[1]));\n   });\n}", "language": "JavaScript"}
{"filename": "p00125_1", "type": "JavaScript", "obfuscated": "function year(x) {\n    var ojlyIF = {\n        'kdcjq': function (x, y) {\n            return x == y;\n        },\n        'zVpnt': function (x, y) {\n            return x == y;\n        },\n        'GChrR': function (x, y) {\n            return x == y;\n        },\n        'HHHlB': function (x, y) {\n            return x % y;\n        }\n    };\n    var m = [\n        0x16d,\n        0x1f,\n        0x1c,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1f,\n        0x1e,\n        0x1f,\n        0x1e,\n        0x1f\n    ];\n    if (ojlyIF['kdcjq'](x % 0x4, 0x0)) {\n        m[0x2] = 0x1d;\n        m[0x0] = 0x16e;\n        if (ojlyIF['zVpnt'](x % 0x64, 0x0)) {\n            m[0x2] = 0x1c;\n            m[0x0] = 0x16d;\n        }\n        if (ojlyIF['GChrR'](ojlyIF['HHHlB'](x, 0x190), 0x0)) {\n            m[0x2] = 0x1d;\n            m[0x0] = 0x16e;\n        }\n    }\n    return m;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == '-1\\x20-1\\x20-1\\x20-1\\x20-1\\x20-1')\n        break;\n    var arr = str['split']('\\x20')['map'](Number);\n    (function (y1, m1, d1, y2, m2, d2) {\n        var WiWoYC = {\n            'YnRPy': '0|2|6|8|4|3|5|10|7|1|9',\n            'LysZK': function (x, y) {\n                return x != y;\n            },\n            'PzENJ': function (x, y) {\n                return x - y;\n            },\n            'dMnnf': function (x, y) {\n                return x < y;\n            },\n            'AEmHD': function (x, y) {\n                return x - y;\n            },\n            'reCYy': function (callee, param1) {\n                return callee(param1);\n            }\n        };\n        var DaXDNt = WiWoYC['YnRPy']['split']('|');\n        var TVQEIQ = 0x0;\n        while (!![]) {\n            switch (DaXDNt[TVQEIQ++]) {\n            case '0':\n                var sum1 = 0x0;\n                continue;\n            case '1':\n                while (WiWoYC['LysZK'](y1, y2)) {\n                    y1++;\n                    days += year(y1)[0x0];\n                }\n                continue;\n            case '2':\n                var sum2 = 0x0;\n                continue;\n            case '3':\n                sum2 += WiWoYC['PzENJ'](Y2[m2], d2);\n                continue;\n            case '4':\n                sum1 += WiWoYC['PzENJ'](Y1[m1], d1);\n                continue;\n            case '5':\n                while (WiWoYC['dMnnf'](m1, 0xc)) {\n                    m1++;\n                    sum1 += Y1[m1];\n                }\n                continue;\n            case '6':\n                var Y1 = year(y1);\n                continue;\n            case '7':\n                var days = WiWoYC['AEmHD'](sum1, sum2);\n                continue;\n            case '8':\n                var Y2 = WiWoYC['reCYy'](year, y2);\n                continue;\n            case '9':\n                console['log'](days);\n                continue;\n            case '10':\n                while (WiWoYC['dMnnf'](m2, 0xc)) {\n                    m2++;\n                    sum2 += Y2[m2];\n                }\n                continue;\n            }\n            break;\n        }\n    }['apply'](null, arr));\n}", "test_cases": [["2006 9 2 2006 9 3\n2006 9 2 2006 11 11\n2004 1 1 2005 1 1\n2000 1 1 2006 1 1\n2000 1 1 2101 1 1\n-1 -1 -1 -1 -1 -1", "1\n70\n366\n2192\n36890"]], "original": "function year(x){\n   var m=[365,31,28,31,30,31,30,31,31,30,31,30,31];\n   if(x%4==0){\n      m[2]=29;\n      m[0]=366;\n      if(x%100==0){m[2]=28;m[0]=365;}\n      if(x%400==0){m[2]=29;m[0]=366;}\n   }\n   return m;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"-1 -1 -1 -1 -1 -1\")break;\n   var arr=str.split(\" \").map(Number);\n   (function(y1, m1, d1, y2, m2, d2){\n      var sum1=0;\n      var sum2=0;\n      var Y1=year(y1);\n      var Y2=year(y2);\n      sum1+=Y1[m1]-d1;\n      sum2+=Y2[m2]-d2;\n      while(m1<12){m1++;sum1+=Y1[m1];}\n      while(m2<12){m2++;sum2+=Y2[m2];}\n      var days=sum1-sum2;\n      while(y1!=y2){\n         y1++;\n         days+=(year(y1))[0];\n      }\n      console.log(days);\n   }).apply(null,arr);\n}", "language": "JavaScript"}
{"filename": "p00127_1", "type": "JavaScript", "obfuscated": "var table = {};\ntable[0xb] = 'a';\ntable[0xc] = 'b';\ntable[0xd] = 'c';\ntable[0xe] = 'd';\ntable[0xf] = 'e';\ntable[0x15] = 'f';\ntable[0x16] = 'g';\ntable[0x17] = 'h';\ntable[0x18] = 'i';\ntable[0x19] = 'j';\ntable[0x1f] = 'k';\ntable[0x20] = 'l';\ntable[0x21] = 'm';\ntable[0x22] = 'n';\ntable[0x23] = 'o';\ntable[0x29] = 'p';\ntable[0x2a] = 'q';\ntable[0x2b] = 'r';\ntable[0x2c] = 's';\ntable[0x2d] = 't';\ntable[0x33] = 'u';\ntable[0x34] = 'v';\ntable[0x35] = 'w';\ntable[0x36] = 'x';\ntable[0x37] = 'y';\ntable[0x3d] = 'z';\ntable[0x3e] = '.';\ntable[0x3f] = '?';\ntable[0x40] = '!';\ntable[0x41] = '\\x20';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nArr['forEach'](function (str) {\n    str = str['replace'](/\\d\\d/g, function (s) {\n        if (table['hasOwnProperty'](s))\n            s = table[s];\n        return s;\n    });\n    if (str['match'](/\\d/))\n        str = 'NA';\n    console['log'](str);\n});", "test_cases": [["341143514535\n314\n143565553551655311343411652235654535651124615163\n551544654451431564\n4\n3411\n6363636363\n153414", "naruto\nNA\ndo you wanna go to aizu?\nyes sure!\nNA\nna\n?????\nend"]], "original": "var table={};\n    table[11] = \"a\";\n    table[12] = \"b\";\n    table[13] = \"c\";\n    table[14] = \"d\";\n    table[15] = \"e\";\n \n    table[21] = \"f\";\n    table[22] = \"g\";\n    table[23] = \"h\";\n    table[24] = \"i\";\n    table[25] = \"j\";\n \n    table[31] = \"k\";\n    table[32] = \"l\";\n    table[33] = \"m\";\n    table[34] = \"n\";\n    table[35] = \"o\";\n \n    table[41] = \"p\";\n    table[42] = \"q\";\n    table[43] = \"r\";\n    table[44] = \"s\";\n    table[45] = \"t\";\n \n    table[51] = \"u\";\n    table[52] = \"v\";\n    table[53] = \"w\";\n    table[54] = \"x\";\n    table[55] = \"y\";\n \n    table[61] = \"z\";\n    table[62] = \".\";\n    table[63] = \"?\";\n    table[64] = \"!\";\n    table[65] = \" \";\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nArr.forEach(function(str){\n   str=str.replace(/\\d\\d/g,function(s){\n      if(table.hasOwnProperty(s))s=table[s];\n      return s;\n   });\n   if(str.match(/\\d/))str=\"NA\";\n   console.log(str);\n});", "language": "JavaScript"}
{"filename": "p00133_1", "type": "JavaScript", "obfuscated": "function move(yx) {\n    var zOJvDX = {\n        'wEkzz': function (x, y) {\n            return x < y;\n        },\n        'ZoBxQ': function (x, y) {\n            return x - y;\n        }\n    };\n    var arr = [];\n    for (var y = 0x0; zOJvDX['wEkzz'](y, 0x8); y++)\n        arr[y] = [];\n    for (var y = 0x0; zOJvDX['wEkzz'](y, 0x8); y++) {\n        for (var x = 0x0; x < 0x8; x++) {\n            arr[y][x] = yx[zOJvDX['ZoBxQ'](0x7, x)][y];\n        }\n    }\n    return arr;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar yx = [];\nfor (var i = 0x0; i < 0x8; i++)\n    yx['push'](Arr[i]['split'](''));\nyx = move(yx);\nconsole['log']('90\\x0a' + yx['join']('\\x0a')['replace'](/\\,/g, ''));\nyx = move(yx);\nconsole['log']('180\\x0a' + yx['join']('\\x0a')['replace'](/\\,/g, ''));\nyx = move(yx);\nconsole['log']('270\\x0a' + yx['join']('\\x0a')['replace'](/\\,/g, ''));", "test_cases": [["#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n########", "90\n########\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n#*******\n180\n########\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n270\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n*******#\n########"]], "original": "function move(yx){\n   var arr=[];\n   for(var y=0;y<8;y++)arr[y]=[];\n   for(var y=0;y<8;y++){\n      for(var x=0;x<8;x++){\n         arr[y][x]=yx[7-x][y];\n      }\n   }\n   return arr;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar yx=[];\nfor(var i=0;i<8;i++)yx.push(Arr[i].split(\"\"));\nyx=move(yx);\nconsole.log(\"90\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));\nyx=move(yx);\nconsole.log(\"180\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));\nyx=move(yx);\nconsole.log(\"270\\n\"+yx.join(\"\\n\").replace(/\\,/g,\"\"));", "language": "JavaScript"}
{"filename": "p00134_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar n = Arr['shift']();\nvar sum = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    sum += Arr[i];\n}\nconsole['log'](Math['floor'](sum / n));", "test_cases": [["6\n12300\n5600\n33800\n0\n26495\n52000", "21699"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar n=Arr.shift();\nvar sum=0;\nfor(var i=0;i<n;i++){\nsum+=Arr[i];\n}\nconsole.log(Math.floor(sum/n));", "language": "JavaScript"}
{"filename": "p00137_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar L = Arr['shift']();\nfor (var i = 0x0; i < L; i++) {\n    console['log']('Case\\x20' + (i + 0x1) + ':');\n    var v = Arr[i];\n    for (var j = 0x0; j < 0xa; j++) {\n        var Lozipz = '2|3|4|0|1'['split']('|');\n        var rfgwSN = 0x0;\n        while (!![]) {\n            switch (Lozipz[rfgwSN++]) {\n            case '0':\n                v = parseInt(v, 0xa);\n                continue;\n            case '1':\n                console['log'](v);\n                continue;\n            case '2':\n                v = '000000' + v * v;\n                continue;\n            case '3':\n                v = v['slice'](-0x6);\n                continue;\n            case '4':\n                v = v['slice'](0x0, 0x4);\n                continue;\n            }\n            break;\n        }\n    }\n}", "test_cases": [["2\n123\n567", "Case 1:\n151\n228\n519\n2693\n2522\n3604\n9888\n7725\n6756\n6435\nCase 2:\n3214\n3297\n8702\n7248\n5335\n4622\n3628\n1623\n6341\n2082"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar L=Arr.shift();\nfor(var i=0;i<L;i++){\n   console.log(\"Case \"+(i+1)+\":\");\n   var v=Arr[i];\n   for(var j=0;j<10;j++){\n      v=\"000000\"+(v*v);\n      v=v.slice(-6);\n      v=v.slice(0,4);\n      v=parseInt(v,10);\n      console.log(v);\n   }\n}", "language": "JavaScript"}
{"filename": "p00138_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar abc = [\n    [],\n    [],\n    []\n];\nvar obj = {};\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    abc[Math['floor'](i / 0x8)]['push'](arr[0x1]);\n    obj[arr[0x1]] = arr[0x0];\n}\nfor (var i = 0x0; i < 0x3; i++)\n    abc[i]['sort'](function (a, b) {\n        var OIBmEW = {\n            'xklSq': function (x, y) {\n                return x - y;\n            }\n        };\n        return OIBmEW['xklSq'](a, b);\n    });\nconsole['log'](obj[abc[0x0][0x0]] + '\\x20' + abc[0x0][0x0]['toFixed'](0x2));\nconsole['log'](obj[abc[0x0][0x1]] + '\\x20' + abc[0x0][0x1]['toFixed'](0x2));\nconsole['log'](obj[abc[0x1][0x0]] + '\\x20' + abc[0x1][0x0]['toFixed'](0x2));\nconsole['log'](obj[abc[0x1][0x1]] + '\\x20' + abc[0x1][0x1]['toFixed'](0x2));\nconsole['log'](obj[abc[0x2][0x0]] + '\\x20' + abc[0x2][0x0]['toFixed'](0x2));\nconsole['log'](obj[abc[0x2][0x1]] + '\\x20' + abc[0x2][0x1]['toFixed'](0x2));\nvar d = [];\nfor (var i = 0x0; i < 0x3; i++)\n    d['push'](abc[i][0x2]);\nd['sort'](function (a, b) {\n    var eaKMBz = {\n        'whUxI': function (x, y) {\n            return x - y;\n        }\n    };\n    return eaKMBz['whUxI'](a, b);\n});\nconsole['log'](obj[d[0x0]] + '\\x20' + d[0x0]['toFixed'](0x2));\nconsole['log'](obj[d[0x1]] + '\\x20' + d[0x1]['toFixed'](0x2));", "test_cases": [["18 25.46\n16 26.23\n3 23.00\n10 24.79\n5 22.88\n11 23.87\n19 23.90\n1 25.11\n23 23.88\n4 23.46\n7 24.12\n12 22.91\n13 21.99\n14 22.86\n21 23.12\n9 24.09\n17 22.51\n22 23.49\n6 23.02\n20 22.23\n24 21.89\n15 24.14\n8 23.77\n2 23.42", "5 22.88\n3 23.00\n13 21.99\n14 22.86\n24 21.89\n20 22.23\n17 22.51\n12 22.91"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar abc=[[],[],[]];\nvar obj={};\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \").map(Number);\n   abc[Math.floor(i/8)].push(arr[1]);\n   obj[arr[1]]=arr[0];\n}\nfor(var i=0;i<3;i++)abc[i].sort(function(a,b){return a-b;});\nconsole.log(obj[abc[0][0]]+\" \"+(abc[0][0].toFixed(2)));\nconsole.log(obj[abc[0][1]]+\" \"+(abc[0][1].toFixed(2)));\nconsole.log(obj[abc[1][0]]+\" \"+(abc[1][0].toFixed(2)));\nconsole.log(obj[abc[1][1]]+\" \"+(abc[1][1].toFixed(2)));\nconsole.log(obj[abc[2][0]]+\" \"+(abc[2][0].toFixed(2)));\nconsole.log(obj[abc[2][1]]+\" \"+(abc[2][1].toFixed(2)));\nvar d=[];\nfor(var i=0;i<3;i++)d.push(abc[i][2]);\nd.sort(function(a,b){return a-b;});\nconsole.log(obj[d[0]]+\" \"+(d[0].toFixed(2)));\nconsole.log(obj[d[1]]+\" \"+(d[1].toFixed(2)));", "language": "JavaScript"}
{"filename": "p00150_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var lxxAtI = {\n        'NgQXa': function (x, y) {\n            return x <= y;\n        },\n        'ZLnMC': function (x, y) {\n            return x + y;\n        },\n        'sSQpy': function (x, y) {\n            return x <= y;\n        },\n        'rjMWU': function (x, y) {\n            return x <= y;\n        },\n        'sRhmG': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; lxxAtI['NgQXa'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = lxxAtI['ZLnMC'](i, i); lxxAtI['sSQpy'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; lxxAtI['rjMWU'](i, max); i++) {\n        if (lxxAtI['sRhmG'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0xf423f);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    var twin = '';\n    for (var j = 0x1; j < p['length']; j++) {\n        if (p[j] > a)\n            break;\n        if (p[j] - p[j - 0x1] == 0x2)\n            twin = p[j - 0x1] + '\\x20' + p[j];\n    }\n    console['log'](twin);\n}", "test_cases": [["12\n100\n200\n300\n0", "5 7\n71 73\n197 199\n281 283"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(999999);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   var twin=\"\";\n   for(var j=1;j<p.length;j++){\n   if(p[j]>a)break;\n   if(p[j]-p[j-1]==2)twin=p[j-1]+\" \"+p[j];\n   }\n   console.log(twin);\n}", "language": "JavaScript"}
{"filename": "p00157_1", "type": "JavaScript", "obfuscated": "function Longest() {\n    var mgcXMJ = {\n        'VHvDu': function (x, y) {\n            return x == y;\n        },\n        'AmnJs': function (x, y) {\n            return x - y;\n        },\n        'FTueP': function (x, y) {\n            return x == y;\n        },\n        'pMHIE': function (x, y) {\n            return x != y;\n        },\n        'ThADk': function (x, y) {\n            return x < y;\n        },\n        'iUozw': function (x, y) {\n            return x < y;\n        },\n        'zYkLQ': function (x, y) {\n            return x >= y;\n        }\n    };\n    ary['sort'](function (a, b) {\n        if (mgcXMJ['VHvDu'](a[0x0], b[0x0]))\n            return mgcXMJ['AmnJs'](a[0x1], b[0x1]);\n        else\n            return a[0x0] - b[0x0];\n    });\n    var A = ary['filter'](function (v, i) {\n        if (mgcXMJ['FTueP'](i, 0x0))\n            return !![];\n        else if (mgcXMJ['pMHIE'](ary[mgcXMJ['AmnJs'](i, 0x1)][0x0], v[0x0]))\n            return !![];\n    });\n    A = A['map'](function (v) {\n        return v[0x1];\n    });\n    var L = [];\n    L[0x0] = A[0x0];\n    var length = 0x1;\n    for (var i = 0x1; i < A['length']; i++) {\n        if (mgcXMJ['ThADk'](L[mgcXMJ['AmnJs'](length, 0x1)], A[i]))\n            L[length++] = A[i];\n        else {\n            for (var j = 0x0; mgcXMJ['iUozw'](j, length); j++) {\n                if (mgcXMJ['zYkLQ'](L[j], A[i])) {\n                    L[j] = A[i];\n                    break;\n                }\n            }\n        }\n    }\n    return length;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = [];\n    for (var i = 0x0; i < n; i++)\n        ary['push'](arr['shift']()['split']('\\x20')['map'](Number));\n    var m = arr['shift']() - 0x0;\n    for (var i = 0x0; i < m; i++)\n        ary['push'](arr['shift']()['split']('\\x20')['map'](Number));\n    var R = Longest();\n    ary = ary['map'](function (v) {\n        return [\n            v[0x1],\n            v[0x0]\n        ];\n    });\n    var H = Longest();\n    console['log'](Math['max'](R, H));\n}", "test_cases": [["6\n1 1\n4 3\n6 5\n8 6\n10 10\n14 14\n5\n2 2\n5 4\n6 6\n9 8\n15 10\n4\n1 1\n4 3\n6 5\n8 6\n3\n2 2\n5 4\n6 6\n4\n1 1\n4 3\n6 5\n8 6\n4\n10 10\n12 11\n18 15\n24 20\n0", "9\n6\n8"]], "original": "function Longest(){\n   ary.sort(function(a,b){\n      if(a[0]==b[0])return a[1]-b[1];\n      else return a[0]-b[0]\n   });\n   var A=ary.filter(function(v,i){\n      if(i==0)return true;\n      else if(ary[i-1][0]!=v[0])return true;\n   });\n   A=A.map(function(v){return v[1];});\n   var L=[];\n   L[0] = A[0];\n   var length = 1;\n   for(var i=1;i<A.length;i++){\n      if (L[length-1] < A[i])L[length++] = A[i];\n      else {\n         for(var j=0;j<length;j++){\n            if(L[j]>=A[i]){L[j]=A[i];break;}\n         }\n      }\n   }\n   return length;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=[];\n   for(var i=0;i<n;i++)ary.push(arr.shift().split(\" \").map(Number));\n   var m=arr.shift()-0;\n   for(var i=0;i<m;i++)ary.push(arr.shift().split(\" \").map(Number));\n   var R=Longest();\n   ary=ary.map(function(v){return [v[1],v[0]];});\n   var H=Longest();\n   console.log(Math.max(R,H));\n}", "language": "JavaScript"}
{"filename": "p00158_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var cnt = 0x0;\n    while (n != 0x1) {\n        cnt++;\n        if (n % 0x2 == 0x0)\n            n = n / 0x2;\n        else\n            n = 0x3 * n + 0x1;\n    }\n    console['log'](cnt);\n}", "test_cases": [["3\n10\n0", "7\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var cnt=0;\n   while(n!=1){\n      cnt++;\n      if(n%2==0)n=n/2;\n      else n=(3*n)+1;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00161_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var team = [];\n    for (var i = 0x0; i < n; i++) {\n        var PbYThQ = '4|0|3|2|1|5'['split']('|');\n        var oEQqBE = 0x0;\n        while (!![]) {\n            switch (PbYThQ[oEQqBE++]) {\n            case '0':\n                var a = arr[0x1] * 0x3c + arr[0x2];\n                continue;\n            case '1':\n                var d = arr[0x7] * 0x3c + arr[0x8];\n                continue;\n            case '2':\n                var c = arr[0x5] * 0x3c + arr[0x6];\n                continue;\n            case '3':\n                var b = arr[0x3] * 0x3c + arr[0x4];\n                continue;\n            case '4':\n                var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            case '5':\n                team['push']([\n                    arr[0x0],\n                    a + b + c + d\n                ]);\n                continue;\n            }\n            break;\n        }\n    }\n    team['sort'](function (a, b) {\n        var Ewhgnp = {\n            'ZzkGi': function (x, y) {\n                return x - y;\n            }\n        };\n        a = a[0x1];\n        b = b[0x1];\n        return Ewhgnp['ZzkGi'](a, b);\n    });\n    console['log'](team[0x0][0x0]);\n    console['log'](team[0x1][0x0]);\n    console['log'](team[team['length'] - 0x2][0x0]);\n}", "test_cases": [["8\n34001 3 20 3 8 6 27 2 25\n20941 3 5 2 41 7 19 2 42\n90585 4 8 3 12 6 46 2 34\n92201 3 28 2 47 6 37 2 58\n10001 3 50 2 42 7 12 2 54\n63812 4 11 3 11 6 53 2 22\n54092 3 33 2 54 6 18 2 19\n25012 3 44 2 58 6 45 2 46\n4\n1 3 23 1 23 1 34 4 44\n2 5 12 2 12 3 41 2 29\n3 5 24 1 24 2 0 3 35\n4 4 49 2 22 4 41 4 23\n0", "54092\n34001\n10001\n1\n3\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var team=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \").map(Number);\n      var a=(arr[1]*60)+arr[2];\n      var b=(arr[3]*60)+arr[4];\n      var c=(arr[5]*60)+arr[6];\n      var d=(arr[7]*60)+arr[8];\n      team.push([arr[0],a+b+c+d]);\n   }\n   team.sort(function(a,b){\n      a=a[1];\n      b=b[1];\n      return a-b;\n   });\n   console.log(team[0][0]);\n   console.log(team[1][0]);\n   console.log(team[team.length-2][0]);\n}", "language": "JavaScript"}
{"filename": "p00162_1", "type": "JavaScript", "obfuscated": "function hamming() {\n    var WHHoqp = {\n        'NAZEJ': function (x, y) {\n            return x == y;\n        },\n        'uFkZz': function (x, y) {\n            return x % y;\n        },\n        'LLkyP': function (x, y) {\n            return x == y;\n        },\n        'EUNvZ': function (x, y) {\n            return x % y;\n        },\n        'fPzvO': function (x, y) {\n            return x == y;\n        },\n        'UBPQr': function (x, y) {\n            return x == y;\n        },\n        'uffGr': function (x, y) {\n            return x % y;\n        }\n    };\n    var obj = {};\n    for (var i = 0x1; i <= 0xf4240; i++) {\n        var KYXPXW = '4|3|1|0|2'['split']('|');\n        var Woqaxo = 0x0;\n        while (!![]) {\n            switch (KYXPXW[Woqaxo++]) {\n            case '0':\n                while (WHHoqp['NAZEJ'](WHHoqp['uFkZz'](h, 0x5), 0x0))\n                    h /= 0x5;\n                continue;\n            case '1':\n                while (WHHoqp['LLkyP'](WHHoqp['EUNvZ'](h, 0x3), 0x0))\n                    h /= 0x3;\n                continue;\n            case '2':\n                if (WHHoqp['fPzvO'](h, 0x1))\n                    obj[i] = !![];\n                continue;\n            case '3':\n                while (WHHoqp['UBPQr'](WHHoqp['uffGr'](h, 0x2), 0x0))\n                    h /= 0x2;\n                continue;\n            case '4':\n                var h = i;\n                continue;\n            }\n            break;\n        }\n    }\n    return obj;\n}\nvar Numbers = hamming();\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var mn = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (mn[0x0] == 0x0)\n        break;\n    var cnt = 0x0;\n    for (var i = mn[0x0]; i <= mn[0x1]; i++) {\n        if (Numbers[i])\n            cnt++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 8\n1 27\n1 86\n0", "5\n17\n31"]], "original": "function hamming(){\n   var obj={};\n   for(var i=1;i<=1000000;i++){\n      var h=i;\n      while(h%2==0)h/=2;\n      while(h%3==0)h/=3;\n      while(h%5==0)h/=5;\n      if(h==1)obj[i]=true\n   }\n   return obj;\n}\nvar Numbers=hamming();\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var mn=(Arr.shift()).split(\" \").map(Number);\n   if(mn[0]==0)break;\n   var cnt=0;\n   for(var i=mn[0];i<=mn[1];i++){\n      if(Numbers[i])cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00164_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var ball = 0x20;\n    var i = 0x0;\n    while (!![]) {\n        ball -= (ball - 0x1) % 0x5;\n        console['log'](ball);\n        if (ball == 0x1) {\n            console['log'](0x0);\n            break;\n        }\n        ball -= arr[i % n];\n        i++;\n        console['log'](ball);\n    }\n}", "test_cases": [["4\n3 1 4 2\n3\n4 3 2\n0", "31\n28\n26\n25\n21\n17\n16\n14\n11\n8\n6\n5\n1\n0\n31\n27\n26\n23\n21\n19\n16\n12\n11\n8\n6\n4\n1\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var ball=32;\n   var i=0;\n   while(true){\n      ball-=(ball-1)%5;\n      console.log(ball);\n      if(ball==1){console.log(0);break;}\n      ball-=arr[i%n];\n      i++;\n      console.log(ball);\n   }\n}", "language": "JavaScript"}
{"filename": "p00167_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = [];\n    for (var i = 0x0; i < n; i++) {\n        var x = Arr['shift']() - 0x0;\n        arr['push'](x);\n    }\n    var L = 0x1;\n    var cnt = 0x0;\n    while (!![]) {\n        if (arr['length'] == L)\n            break;\n        for (var i = 0x0; i < arr['length'] - L; i++) {\n            var memo = arr[i];\n            if (arr[i] > arr[i + 0x1]) {\n                cnt++;\n                arr[i] = arr[i + 0x1];\n                arr[i + 0x1] = memo;\n            }\n        }\n        L++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["5\n5\n3\n2\n1\n4\n6\n1\n2\n3\n4\n5\n6\n3\n3\n2\n1\n0", "7\n0\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=[];\n   for(var i=0;i<n;i++){\n      var x=Arr.shift()-0;\n      arr.push(x);\n   }\n   var L=1;\n   var cnt=0;\n   while(true){\n      if(arr.length==L)break;\n      for(var i=0;i<arr.length-L;i++){\n         var memo=arr[i];\n         if(arr[i]>arr[i+1]){\n            cnt++;\n            arr[i]=arr[i+1];\n            arr[i+1]=memo;\n         }\n      }\n   L++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00173_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var arr = Arr[i]['split']('\\x20');\n    var a = arr[0x1] - 0x0 + (arr[0x2] - 0x0);\n    var b = (arr[0x1] - 0x0) * 0xc8 + (arr[0x2] - 0x0) * 0x12c;\n    console['log'](arr[0x0] + '\\x20' + a + '\\x20' + b);\n}", "test_cases": [["1a 132 243\n1c 324 183\n1f 93 199\n2b 372 163\n2c 229 293\n2e 391 206\n3a 118 168\n3b 263 293\n3d 281 102", "1a 375 99300\n1c 507 119700\n1f 292 78300\n2b 535 123300\n2c 522 133700\n2e 597 140000\n3a 286 74000\n3b 556 140500\n3d 383 86800"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var arr=Arr[i].split(\" \");\n   var a=(arr[1]-0)+(arr[2]-0);\n   var b=(arr[1]-0)*200+(arr[2]-0)*300;\n   console.log(arr[0]+\" \"+a+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00174_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == '0')\n        break;\n    var arr = str['split']('');\n    var a = 0x0;\n    var b = 0x0;\n    arr['shift']();\n    arr['forEach'](function (v) {\n        var nQwVuW = {\n            'PWXkd': function (x, y) {\n                return x == y;\n            }\n        };\n        if (nQwVuW['PWXkd'](v, 'A'))\n            a++;\n        if (v == 'B')\n            b++;\n    });\n    a > b ? a++ : b++;\n    console['log'](a + '\\x20' + b);\n}", "test_cases": [["ABAABBBAABABAAABBAA\nAABBBABBABBAAABABABAAB\nBABAABAABABABBAAAB\nAABABAAABBAABBBABAA\nAAAAAAAAAAA\nABBBBBBBBBB\n0", "11 8\n10 12\n11 7\n11 8\n11 0\n0 11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"0\")break;\n   var arr=str.split(\"\");\n   var a=0;\n   var b=0;\n   arr.shift();\n   arr.forEach(function(v){\n      if(v==\"A\")a++;\n      if(v==\"B\")b++;\n   });\n   (a>b)?a++:b++;\n   console.log(a+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00175_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (Arr[i] == -0x1)\n        break;\n    console['log'](Arr[i]['toString'](0x4));\n}", "test_cases": [["7\n4\n0\n12\n10\n10000\n-1", "13\n10\n0\n30\n22\n2130100"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   if(Arr[i]==-1)break;\n   console.log(Arr[i].toString(4));\n}", "language": "JavaScript"}
{"filename": "p00178_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var base = [\n        '',\n        '',\n        '',\n        '',\n        ''\n    ];\n    for (var i = 0x0; i < n; i++) {\n        var [d, p, q] = arr['shift']()['split']('\\x20')['map'](Number);\n        q--;\n        if (d == 0x1) {\n            var max = 0x0;\n            for (var j = 0x0; j < p; j++)\n                max = Math['max'](max, base[q + j]['length']);\n            for (var j = 0x0; j < p; j++) {\n                while (base[q + j]['length'] < max)\n                    base[q + j] += '0';\n                base[q + j] += '1';\n            }\n        } else if (d == 0x2) {\n            for (var j = 0x0; j < p; j++)\n                base[q] += '1';\n        }\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < 0x5; i++)\n        max = Math['max'](max, base[i]['length']);\n    for (var i = 0x0; i < 0x5; i++) {\n        while (base[i]['length'] < max)\n            base[i] += '0';\n    }\n    var cnt = 0x0;\n    for (var i = 0x0; i < max; i++) {\n        var str = base['map'](v => v[i])['join']('');\n        str = str['replace']('11111', '')['replace'](/0/g, '');\n        cnt += str['length'];\n    }\n    console['log'](cnt);\n}", "test_cases": [["4\n1 4 1\n1 3 1\n2 2 4\n2 3 5\n1\n1 5 1\n7\n2 2 2\n1 4 1\n2 1 3\n1 4 1\n1 1 1\n2 5 5\n1 4 2\n0", "2\n0\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var base=[\"\",\"\",\"\",\"\",\"\"];\n   for(var i=0;i<n;i++){\n      var [d,p,q]=arr.shift().split(\" \").map(Number);\n      q--;\n      if(d==1){\n         var max=0;\n         for(var j=0;j<p;j++)max=Math.max(max,base[q+j].length);\n         for(var j=0;j<p;j++){\n            while(base[q+j].length<max)base[q+j]+=\"0\";\n            base[q+j]+=\"1\";\n         }\n      }else if(d==2){\n         for(var j=0;j<p;j++)base[q]+=\"1\";\n      }\n   }\n   var max=0;\n   for(var i=0;i<5;i++)max=Math.max(max,base[i].length);\n   for(var i=0;i<5;i++){\n      while(base[i].length<max)base[i]+=\"0\";\n   }\n   var cnt=0;\n   for(var i=0;i<max;i++){\n      var str=base.map(v=> v[i]).join(\"\");\n      str=str.replace(\"11111\",\"\").replace(/0/g,\"\");\n      cnt+=str.length;\n   }\n   console.log(cnt);\n}\n\n", "language": "JavaScript"}
{"filename": "p00184_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar n = 0x0;\nvar arr = [\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0\n];\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (n == 0x0) {\n        if (i != 0x0)\n            arr['forEach'](function (v) {\n                console['log'](v);\n            });\n        if (Arr[i] == 0x0)\n            break;\n        n = Arr[i];\n        arr = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n    } else {\n        n--;\n        if (Arr[i] >= 0x3c)\n            arr[0x6]++;\n        else if (Arr[i] >= 0x32)\n            arr[0x5]++;\n        else if (Arr[i] >= 0x28)\n            arr[0x4]++;\n        else if (Arr[i] >= 0x1e)\n            arr[0x3]++;\n        else if (Arr[i] >= 0x14)\n            arr[0x2]++;\n        else if (Arr[i] >= 0xa)\n            arr[0x1]++;\n        else\n            arr[0x0]++;\n    }\n}", "test_cases": [["8\n71\n34\n65\n11\n41\n39\n6\n5\n4\n67\n81\n78\n65\n0", "2\n1\n0\n2\n1\n0\n2\n0\n0\n0\n0\n0\n0\n4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar n=0;\nvar arr=[0,0,0,0,0,0,0];\nfor(var i=0;i<Arr.length;i++){\n   if(n==0){\n      if(i!=0)arr.forEach(function(v){console.log(v);});\n      if(Arr[i]==0)break;\n      n=Arr[i];\n      arr=[0,0,0,0,0,0,0];\n    }else{\n      n--;\n      if(Arr[i]>=60)arr[6]++;\n      else if(Arr[i]>=50)arr[5]++;\n      else if(Arr[i]>=40)arr[4]++;\n      else if(Arr[i]>=30)arr[3]++;\n      else if(Arr[i]>=20)arr[2]++;\n      else if(Arr[i]>=10)arr[1]++;\n      else arr[0]++;\n   }\n}", "language": "JavaScript"}
{"filename": "p00185_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var AYrewV = {\n        'cPCan': function (x, y) {\n            return x <= y;\n        },\n        'qRhpA': function (x, y) {\n            return x + y;\n        },\n        'sVksF': function (x, y) {\n            return x <= y;\n        },\n        'RjsUh': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; i <= max; i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; AYrewV['cPCan'](i, sqrt); i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = AYrewV['qRhpA'](i, i); AYrewV['sVksF'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = {};\n    for (var i = 0x0; AYrewV['cPCan'](i, max); i++) {\n        if (AYrewV['RjsUh'](arr[i], ![]))\n            result[arr[i]] = !![];\n    }\n    return result;\n}\nvar p = prime(0xf4240);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var I = 0x0; I < Arr['length']; I++) {\n    var v = Arr[I];\n    if (v == 0x0)\n        break;\n    var cnt = 0x0;\n    var obj = {};\n    for (var k in p) {\n        if (k >= v)\n            break;\n        if (obj['hasOwnProperty'](k))\n            continue;\n        obj[v - k] = !![];\n        if (p['hasOwnProperty'](v - k))\n            cnt++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["134\n4330\n34808\n98792\n0", "6\n72\n274\n607"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result={};\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result[arr[i]]=true;\n   }\n   return result;\n}\nvar p=prime(1000000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var I=0;I<Arr.length;I++){\n   var v=Arr[I];\n   if(v==0)break;\n   var cnt=0;\n   var obj={};\n   for(var k in p){\n      if(k>=v)break;\n      if(obj.hasOwnProperty(k))continue;\n      obj[v-k]=true;\n      if(p.hasOwnProperty(v-k))cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00186_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (arr[0x0] == 0x0)\n        break;\n    var q1 = arr[0x0];\n    var b = arr[0x1];\n    var c1 = arr[0x2];\n    var c2 = arr[0x3];\n    var q2 = arr[0x4];\n    var x = 0x0;\n    var y = 0x0;\n    var flag = !![];\n    while (!![]) {\n        if (b >= c1 * (x + 0x1) && x + 0x1 <= q2)\n            x++;\n        else\n            break;\n    }\n    while (!![]) {\n        if (b >= c1 * x + c2 * (y + 0x1))\n            y++;\n        else\n            break;\n    }\n    while (!![]) {\n        if (x == 0x0) {\n            flag = ![];\n            break;\n        }\n        if (c1 * x + c2 * y > b) {\n            flag = ![];\n            break;\n        }\n        if (q1 > x + y) {\n            x--;\n            while (!![]) {\n                if (b >= c1 * x + c2 * (y + 0x1))\n                    y++;\n                else\n                    break;\n            }\n        } else {\n            break;\n        }\n    }\n    console['log'](flag ? x + '\\x20' + y : 'NA');\n}", "test_cases": [["48 9297 240 126 32\n20 3010 157 141 7\n30 117002 5680 962 15\n8 1673 1712 190 22\n64 8478 87 54 307\n23 5477 117 92 12\n50 7558 1396 187 17\n279 88677 4522 514 14\n0", "28 20\n7 13\n15 33\nNA\n97 0\n12 44\nNA\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   if(arr[0]==0)break;\n   var q1=arr[0];\n   var b=arr[1];\n   var c1=arr[2];\n   var c2=arr[3];\n   var q2=arr[4];\n   var x=0;\n   var y=0;\n   var flag=true;\n   while(true){\n      if(b>=c1*(x+1) &&  (x+1)<=q2)x++;\n      else break;\n   }\n   while(true){\n      if(b>=c1*x+c2*(y+1))y++;\n      else break;\n   }   \n   while(true){\n      if(x==0){flag=false;break;}\n      if(c1*x+c2*y>b){flag=false;break;}\n      if(q1>x+y){\n         x--;\n         while(true){\n            if(b>=c1*x+c2*(y+1))y++;\n            else break;         \n         }    \n      }else{\n         break;\n      }\n   }\n   console.log((flag)?x+\" \"+y:\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00189_1", "type": "JavaScript", "obfuscated": "function warshall() {\n    var xpghgS = {\n        'FaPuV': function (x, y) {\n            return x < y;\n        },\n        'jJMdZ': function (x, y) {\n            return x < y;\n        },\n        'BhKJm': function (x, y) {\n            return x < y;\n        },\n        'AOyZC': function (x, y) {\n            return x + y;\n        }\n    };\n    for (var k = 0x0; xpghgS['FaPuV'](k, n); k++) {\n        for (var i = 0x0; xpghgS['jJMdZ'](i, n); i++) {\n            for (var j = 0x0; xpghgS['BhKJm'](j, n); j++) {\n                C[i][j] = Math['min'](C[i][j], xpghgS['AOyZC'](C[i][k], C[k][j]));\n            }\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = 0xa;\n    var m = Arr['shift']() - 0x0;\n    if (m == 0x0)\n        break;\n    var C = [];\n    for (var i = 0x0; i < n; i++) {\n        C[i] = [];\n        for (var j = 0x0; j < n; j++) {\n            C[i][j] = i === j ? 0x0 : Infinity;\n        }\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var A = Arr['shift']()['split']('\\x20')['map'](Number);\n        max = Math['max'](max, A[0x0], A[0x1]);\n        C[A[0x0]][A[0x1]] = A[0x2];\n        C[A[0x1]][A[0x0]] = A[0x2];\n    }\n    warshall();\n    var min = [\n        '',\n        Infinity\n    ];\n    for (var i = max; i >= 0x0; i--) {\n        var arr = C[i]['slice'](0x0, max + 0x1);\n        var sum = arr['reduce'](function (a, b) {\n            return a + b;\n        });\n        min[0x1] = Math['min'](min[0x1], sum);\n        if (min[0x1] == sum)\n            min = [\n                i,\n                sum\n            ];\n    }\n    console['log'](min['join']('\\x20'));\n}", "test_cases": [["6     \n0 1 80\n1 2 20\n0 2 60\n2 3 50\n3 4 60\n1 4 90\n2\n0 1 1\n1 2 1\n0", "2 240\n1 2"]], "original": "function warshall(){\n   for(var k=0;k<n;k++){\n      for(var i=0;i<n;i++){\n         for(var j=0;j<n;j++){\n            C[i][j]=Math.min(C[i][j], C[i][k]+C[k][j]);\n         }\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=10;\n   var m=Arr.shift()-0;\n   if(m==0)break;\n   var C=[];\n   for(var i=0;i<n;i++){\n      C[i]=[];\n      for(var j=0;j<n;j++){\n         C[i][j]=(i===j)?0:Infinity;\n      }\n   }\n   var max=0;\n   for(var i=0;i<m;i++){\n      var A=(Arr.shift()).split(\" \").map(Number);\n      max=Math.max(max,A[0],A[1]);\n      C[A[0]][A[1]]=A[2];\n      C[A[1]][A[0]]=A[2];\n   }\n   warshall();\n   var min=[\"\",Infinity];\n   for(var i=max;i>=0;i--){\n      var arr=C[i].slice(0,max+1);\n      var sum=arr.reduce(function(a,b){return a+b;});\n      min[1]=Math.min(min[1],sum);\n      if(min[1]==sum)min=[i,sum];\n   }\n   console.log(min.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00196_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var team = [];\n    for (var i = 0x0; i < n; i++) {\n        var EpScyV = '1|5|0|2|3|4'['split']('|');\n        var GzTuly = 0x0;\n        while (!![]) {\n            switch (EpScyV[GzTuly++]) {\n            case '0':\n                var scoreA = 0x0;\n                continue;\n            case '1':\n                var arr = Arr['shift']()['split']('\\x20');\n                continue;\n            case '2':\n                var scoreB = 0x0;\n                continue;\n            case '3':\n                for (var j = 0x0; j < n - 0x1; j++) {\n                    if (arr[j] - 0x0 === 0x0)\n                        scoreA++;\n                    if (arr[j] - 0x0 === 0x1)\n                        scoreB++;\n                }\n                continue;\n            case '4':\n                team['push']([\n                    name,\n                    scoreA * 0x64 + (0xa - scoreB) + (0xa - j) * 0.01\n                ]);\n                continue;\n            case '5':\n                var name = arr['shift']();\n                continue;\n            }\n            break;\n        }\n    }\n    team['sort'](function (a, b) {\n        var UmSRUU = {\n            'cKEuC': function (x, y) {\n                return x - y;\n            }\n        };\n        return UmSRUU['cKEuC'](b[0x1], a[0x1]);\n    });\n    team['forEach'](function (v) {\n        console['log'](v[0x0]);\n    });\n}", "test_cases": [["6\nA 1 0 0 2 0\nB 0 0 1 1 0\nC 1 1 1 1 1\nD 1 0 0 1 2\nE 2 0 0 0 0\nF 1 1 0 2 1\n4\ng 1 1 1\nh 0 1 2\nw 0 0 0\nb 0 2 1\n0", "E\nA\nB\nD\nF\nC\nw\nh\nb\ng"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var team=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var name=arr.shift();\n      var scoreA=0;\n      var scoreB=0;\n      for(var j=0;j<n-1;j++){\n         if(arr[j]-0===0)scoreA++;\n         if(arr[j]-0===1)scoreB++;\n      }\n      team.push([name,scoreA*100+(10-scoreB)+((10-j)*0.01)]);\n   }\n   team.sort(function(a,b){return b[1]-a[1];});\n   team.forEach(function(v){console.log(v[0]);});\n}", "language": "JavaScript"}
{"filename": "p00220_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nvar nums = [];\nfor (var i = 0x7; i >= -0x4; i--) {\n    nums['push'](Math['pow'](0x2, i));\n}\nwhile (!![]) {\n    var x = Arr['shift']() - 0x0;\n    if (x == -0x1)\n        break;\n    var str = '';\n    for (var i = 0x0; i < nums['length']; i++) {\n        if (x >= nums[i]) {\n            x -= nums[i];\n            str += '1';\n        } else {\n            str += '0';\n        }\n        if (i == 0x7)\n            str += '.';\n    }\n    if (x !== 0x0)\n        str = 'NA';\n    console['log'](str);\n}", "test_cases": [["23.5\n158.1\n-1.0", "00010111.1000\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar nums=[];\nfor(var i=7;i>=-4;i--){\n   nums.push(Math.pow(2,i));\n}\nwhile(true){\n   var x=Arr.shift()-0;\n   if(x==-1)break;\n   var str=\"\";\n   for(var i=0;i<nums.length;i++){\n       if(x>=nums[i]){\n          x-=nums[i];\n          str+=\"1\";\n       }else{\n          str+=\"0\";\n       }\n       if(i==7)str+=\".\";\n   }\n   if(x!==0)str=\"NA\";\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00226_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    if (Arr[i] == '0\\x200')\n        break;\n    var arr = Arr[i]['split']('\\x20');\n    var x = arr[0x0]['split']('');\n    var y = arr[0x1]['split']('');\n    var h = 0x0;\n    var b = 0x0;\n    for (var j = 0x0; j < 0x4; j++) {\n        if (x[j] == y[j]) {\n            h++;\n        } else if (y['indexOf'](x[j]) != -0x1) {\n            b++;\n        }\n    }\n    console['log'](h + '\\x20' + b);\n}", "test_cases": [["1234 5678\n1234 1354\n1234 1234\n1230 1023\n0123 1234\n0 0", "0 0\n2 1\n4 0\n1 3\n0 3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\nif(Arr[i]==\"0 0\")break;\nvar arr=Arr[i].split(\" \");\nvar x=(arr[0]).split(\"\");\nvar y=(arr[1]).split(\"\");\nvar h=0;\nvar b=0;\nfor(var j=0;j<4;j++){\n   if(x[j]==y[j]){h++;}\n   else if(y.indexOf(x[j])!=-1){b++;}\n}\nconsole.log(h+\" \"+b);\n}", "language": "JavaScript"}
{"filename": "p00227_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var NM = Arr['shift']();\n    if (NM == '0\\x200')\n        break;\n    var nm = NM['split']('\\x20')['map'](Number);\n    var m = nm[0x1];\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    arr['sort'](function (a, b) {\n        var woXESL = {\n            'gZPnW': function (x, y) {\n                return x - y;\n            }\n        };\n        return woXESL['gZPnW'](b, a);\n    });\n    var sum = 0x0;\n    for (var i = 0x0; i < arr['length']; i++) {\n        if ((i + 0x1) % m != 0x0)\n            sum += arr[i];\n    }\n    console['log'](sum);\n}", "test_cases": [["4 2\n50 40 100 80\n7 3\n400 300 100 700 200 600 500\n0 0", "150\n2100"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var NM=Arr.shift();\n   if(NM==\"0 0\")break;\n   var nm=NM.split(\" \").map(Number);\n   var m=nm[1];\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   arr.sort(function(a,b){return b-a;});\n   var sum=0;\n   for(var i=0;i<arr.length;i++){\n      if((i+1)%m!=0)sum+=arr[i];\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00228_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar SEG = [\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0\n    ]['reverse'](),\n    [\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x0,\n        0x0\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1\n    ]['reverse'](),\n    [\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x0,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x0,\n        0x1,\n        0x0\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x1\n    ]['reverse'](),\n    [\n        0x1,\n        0x1,\n        0x1,\n        0x1,\n        0x0,\n        0x1,\n        0x1\n    ]['reverse']()\n];\nvar n = Arr[0x0];\nvar seg = [];\nfor (var i = 0x1; i < Arr['length']; i++) {\n    if (n == 0x0) {\n        if (i == 0x0)\n            continue;\n        var arr = [\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0,\n            0x0\n        ];\n        seg['forEach'](function (v) {\n            var wKsuCL = {\n                'UilBz': '3|1|0|2|4',\n                'cpROK': function (x, y) {\n                    return x < y;\n                },\n                'jfqhp': function (x, y) {\n                    return x == y;\n                }\n            };\n            var qlnTEe = wKsuCL['UilBz']['split']('|');\n            var bPbiWX = 0x0;\n            while (!![]) {\n                switch (qlnTEe[bPbiWX++]) {\n                case '0':\n                    for (var i = 0x0; wKsuCL['cpROK'](i, 0x7); i++) {\n                        str += wKsuCL['jfqhp'](V[i], arr[i]) ? '0' : '1';\n                    }\n                    continue;\n                case '1':\n                    var str = '';\n                    continue;\n                case '2':\n                    console['log'](str);\n                    continue;\n                case '3':\n                    var V = SEG[v];\n                    continue;\n                case '4':\n                    arr = V['slice']();\n                    continue;\n                }\n                break;\n            }\n        });\n        if (Arr[i] == -0x1)\n            break;\n        seg = [];\n        n = Arr[i];\n    } else {\n        n--;\n        seg['push'](Arr[i]);\n    }\n}", "test_cases": [["3\n0\n5\n1\n1\n0\n-1", "0111111\n1010010\n1101011\n0111111"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nvar SEG=[\n[1,1,1,1,1,1,0].reverse(),\n[0,1,1,0,0,0,0].reverse(),\n[1,1,0,1,1,0,1].reverse(),\n[1,1,1,1,0,0,1].reverse(),\n[0,1,1,0,0,1,1].reverse(),\n[1,0,1,1,0,1,1].reverse(),\n[1,0,1,1,1,1,1].reverse(),\n[1,1,1,0,0,1,0].reverse(),\n[1,1,1,1,1,1,1].reverse(),\n[1,1,1,1,0,1,1].reverse()\n];\nvar n=Arr[0];\nvar seg=[];\nfor(var i=1;i<Arr.length;i++){\n   if(n==0){\n      if(i==0)continue;\n      var arr=[0,0,0,0,0,0,0];\n      seg.forEach(function(v){\n         var V=SEG[v];\n         var str=\"\";\n         for(var i=0;i<7;i++){\n            str+=(V[i]==arr[i])?\"0\":\"1\";\n         }\n         console.log(str);\n         arr=V.slice();\n      });\n      if(Arr[i]==-1)break;\n      seg=[];\n      n=Arr[i];\n   }else{\n      n--;\n      seg.push(Arr[i]);\n   }\n}", "language": "JavaScript"}
{"filename": "p00229_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var BR = Arr['shift']();\n    if (BR == '0\\x200\\x200\\x200\\x200\\x200')\n        break;\n    var br = BR['split']('\\x20')['map'](Number);\n    var b = br[0x0];\n    var r = br[0x1];\n    var g = br[0x2];\n    var c = br[0x3];\n    var s = br[0x4];\n    var t = br[0x5];\n    var sum = 0x64;\n    sum += b * 0xf;\n    sum += r * 0xf;\n    sum += (b * 0x5 + r * 0x3) * 0xf;\n    sum += g * 0x7;\n    sum += c * 0x2;\n    sum -= (b * 0x5 + r * 0x3) * 0x2;\n    sum -= (t - s - (b * 0x5 + r * 0x3)) * 0x3;\n    console['log'](sum);\n}", "test_cases": [["3 2 30 3 26 226\n9 0 18 3 20 118\n5 5 12 2 15 203\n7 4 19 2 22 197\n7 4 24 4 17 209\n0 0 0 0 0 0", "127\n793\n414\n629\n617"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var BR=Arr.shift();\n   if(BR==\"0 0 0 0 0 0\")break;\n   var br=BR.split(\" \").map(Number);\n   var b=br[0];\n   var r=br[1];\n   var g=br[2];\n   var c=br[3];\n   var s=br[4];\n   var t=br[5];\n   var sum=100;\n   sum+=b*15;\n   sum+=r*15;\n   sum+=(b*5+r*3)*15;\n   sum+=g*7;\n   sum+=c*2;\n   sum-=(b*5+r*3)*2;\n   sum-=(t-s-(b*5+r*3))*3;\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00240_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var y = Arr['shift']() - 0x0;\n    var S = [];\n    var s = [];\n    for (var i = 0x0; i < n; i++) {\n        var brt = Arr['shift']()['split']('\\x20')['map'](Number);\n        var r = brt[0x1];\n        var t = brt[0x2];\n        var result;\n        if (t == 0x1)\n            result = 0x2710 * (0x1 + y * (r / 0x64));\n        if (t == 0x2)\n            result = 0x2710 * Math['pow'](0x1 + r / 0x64, y);\n        S['push'](brt[0x0]);\n        s['push'](result);\n    }\n    var max = Math['max']['apply'](null, s);\n    console['log'](S[s['indexOf'](max)]);\n}", "test_cases": [["2\n8\n1 5 2\n2 6 1\n2\n9\n1 5 2\n2 6 1\n0", "2\n1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var y=Arr.shift()-0;\n   var S=[];\n   var s=[];\n   for(var i=0;i<n;i++){\n      var brt=(Arr.shift()).split(\" \").map(Number);\n      var r=brt[1];\n      var t=brt[2];\n      var result;\n      if(t==1)result=10000*(1+(y*(r/100)));\n      if(t==2)result=10000*Math.pow((1+(r/100)),y);\n      S.push(brt[0]);\n      s.push(result);\n   }\n   var max=Math.max.apply(null,s);\n   console.log(S[s.indexOf(max)]);\n}", "language": "JavaScript"}
{"filename": "p00254_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']();\n    if (n == '0000')\n        break;\n    if (n == '1111' || n == '2222' || n == '3333' || n == '4444' || n == '5555') {\n        console['log']('NA');\n        continue;\n    }\n    if (n == '6666' || n == '7777' || n == '8888' || n == '9999') {\n        console['log']('NA');\n        continue;\n    }\n    var i = 0x0;\n    while (!![]) {\n        if (n == '6174')\n            break;\n        i++;\n        var arr = n['split']('')['map'](Number);\n        arr['sort'](function (a, b) {\n            var cBgbtC = {\n                'wmPwL': function (x, y) {\n                    return x - y;\n                }\n            };\n            return cBgbtC['wmPwL'](b, a);\n        });\n        var L = parseInt('' + arr[0x0] + arr[0x1] + arr[0x2] + arr[0x3], 0xa);\n        var S = parseInt('' + arr[0x3] + arr[0x2] + arr[0x1] + arr[0x0], 0xa);\n        n = ('0000' + (L - S))['slice'](-0x4);\n    }\n    console['log'](i);\n}", "test_cases": [["6174\n2012\n3333\n0000", "0\n3\nNA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift();\n   if(n==\"0000\")break;\n   if(n==\"1111\" || n==\"2222\" || n==\"3333\" || n==\"4444\" || n==\"5555\"){console.log(\"NA\");continue;}\n   if(n==\"6666\" || n==\"7777\" || n==\"8888\" || n==\"9999\"){console.log(\"NA\");continue;}\n   var i=0;\n   while(true){\n      if(n==\"6174\")break;\n      i++;\n      var arr=n.split(\"\").map(Number);\n      arr.sort(function(a,b){return b-a;});\n      var L=parseInt(\"\"+arr[0]+arr[1]+arr[2]+arr[3],10);\n      var S=parseInt(\"\"+arr[3]+arr[2]+arr[1]+arr[0],10);\n      n=(\"0000\"+(L-S)).slice(-4);\n   }\n   console.log(i);\n}", "language": "JavaScript"}
{"filename": "p00271_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < 0x7; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    console['log'](arr[0x0] - arr[0x1]);\n}", "test_cases": [["30 19\n39 20\n19 18\n25 20\n22 21\n23 10\n10 -10", "11\n19\n1\n5\n1\n13\n20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<7;i++){\nvar arr=Arr[i].split(\" \").map(Number);\nconsole.log(arr[0]-arr[1]);\n}", "language": "JavaScript"}
{"filename": "p00272_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < 0x4; i++) {\n    var arr = Arr[i]['split']('\\x20')['map'](Number);\n    if (arr[0x0] == 0x1)\n        console['log'](arr[0x1] * 0x1770);\n    if (arr[0x0] == 0x2)\n        console['log'](arr[0x1] * 0xfa0);\n    if (arr[0x0] == 0x3)\n        console['log'](arr[0x1] * 0xbb8);\n    if (arr[0x0] == 0x4)\n        console['log'](arr[0x1] * 0x7d0);\n}", "test_cases": [["3 10\n1 4\n4 1\n2 5", "30000\n24000\n2000\n20000"], ["1 1\n2 0\n3 1\n4 1", "6000\n0\n3000\n2000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<4;i++){\nvar arr=Arr[i].split(\" \").map(Number);\nif(arr[0]==1)console.log(arr[1]*6000);\nif(arr[0]==2)console.log(arr[1]*4000);\nif(arr[0]==3)console.log(arr[1]*3000);\nif(arr[0]==4)console.log(arr[1]*2000);\n}", "language": "JavaScript"}
{"filename": "p00273_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar N = Arr['shift']() - 0x0;\nfor (var i = 0x0; i < N; i++) {\n    var YAfBxf = '7|3|9|2|1|0|6|4|5|8'['split']('|');\n    var FoCSpU = 0x0;\n    while (!![]) {\n        switch (YAfBxf[FoCSpU++]) {\n        case '0':\n            var A = x * b + y * p;\n            continue;\n        case '1':\n            var p = arr[0x3];\n            continue;\n        case '2':\n            var b = arr[0x2];\n            continue;\n        case '3':\n            var x = arr[0x0];\n            continue;\n        case '4':\n            while (p < 0x2)\n                p++;\n            continue;\n        case '5':\n            var B = (x * b + y * p) * 0.8;\n            continue;\n        case '6':\n            while (b < 0x5)\n                b++;\n            continue;\n        case '7':\n            var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n            continue;\n        case '8':\n            console['log'](Math['min'](A, B));\n            continue;\n        case '9':\n            var y = arr[0x1];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n100 100 1 1\n1000 500 5 2", "200\n4800"], ["5\n500 500 1 1\n500 500 5 2\n1000 100 0 6\n1000 100 6 0\n100 1000 0 0", "1000\n2800\n600\n4960\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar N=Arr.shift()-0;\nfor(var i=0;i<N;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var x=arr[0];\n   var y=arr[1];\n   var b=arr[2];\n   var p=arr[3];\n   var A=(x*b)+(y*p);\n   while(b<5)b++;\n   while(p<2)p++;\n   var B=((x*b)+(y*p))*0.8;\n   console.log(Math.min(A,B));\n}", "language": "JavaScript"}
{"filename": "p00274_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var sum = 0x0;\n    var flag = ![];\n    arr['forEach'](function (v) {\n        var ZyUTFy = {\n            'slNyd': function (x, y) {\n                return x != y;\n            },\n            'eyFTj': function (x, y) {\n                return x >= y;\n            }\n        };\n        if (ZyUTFy['slNyd'](v, 0x0))\n            sum += 0x1;\n        if (ZyUTFy['eyFTj'](v, 0x2))\n            flag = !![];\n    });\n    console['log'](flag ? sum + 0x1 : 'NA');\n}", "test_cases": [["2\n3 2\n3\n0 1 1\n1\n1000\n0", "3\nNA\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var sum=0;\n   var flag=false;\n   arr.forEach(function(v){\n      if(v!=0)sum+=1;\n      if(v>=2)flag=true;\n   });\n   console.log(flag?sum+1:\"NA\");\n}", "language": "JavaScript"}
{"filename": "p00275_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    var n = [];\n    var p = 0x0;\n    for (var i = 0x0; i < N; i++)\n        n[i] = 0x0;\n    var str = Arr['shift']();\n    for (var i = 0x0; i < str['length']; i++) {\n        var v = str[i];\n        var j = i % N;\n        if (v == 'M')\n            n[j]++;\n        if (v == 'S') {\n            p += n[j] + 0x1;\n            n[j] = 0x0;\n        }\n        if (v == 'L') {\n            n[j] += p + 0x1;\n            p = 0x0;\n        }\n    }\n    n['sort'](function (a, b) {\n        return a - b;\n    });\n    console['log'](n['join']('\\x20') + '\\x20' + p);\n}", "test_cases": [["2\nSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n2\nSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMSL\n5\nMMMMMMSLSLLMMMSMMSLMMMLMMMMLSLLLLMLSMMLMMLLMSSSLMMMMLMLSMLMSMMMMMMMSMMMMMMLMMMMMSMMMLMMLMMMMMMMMMSSM\n0", "42 58 0\n0 100 0\n0 0 3 10 59 28"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   var n=[];\n   var p=0;\n   for(var i=0;i<N;i++)n[i]=0;\n   var str=Arr.shift();\n   for(var i=0;i<str.length;i++){\n      var v=str[i];\n      var j=i%N;\n      if(v==\"M\")n[j]++;\n      if(v==\"S\"){p+=(n[j]+1);n[j]=0;}\n      if(v==\"L\"){n[j]+=(p+1);p=0;}\n   }\n   n.sort(function(a,b){return a-b;});\n   console.log(n.join(\" \")+\" \"+p);\n}", "language": "JavaScript"}
{"filename": "p00311_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [h1, h2] = arr['shift']()['split']('\\x20')['map'](Number);\nvar [k1, k2] = arr['shift']()['split']('\\x20')['map'](Number);\nvar [a, b, c, d] = arr['shift']()['split']('\\x20')['map'](Number);\nvar h = h1 * a + h2 * b + Math['floor'](h1 / 0xa) * c + Math['floor'](h2 / 0x14) * d;\nvar k = k1 * a + k2 * b + Math['floor'](k1 / 0xa) * c + Math['floor'](k2 / 0x14) * d;\nif (h == k)\n    console['log']('even');\nelse if (h > k)\n    console['log']('hiroshi');\nelse\n    console['log']('kenjiro');", "test_cases": [["5 1\n3 1\n1 2 5 5", "hiroshi"], ["5 1\n4 2\n1 2 5 5", "kenjiro"], ["0 20\n10 0\n1 1 10 0", "even"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar [h1,h2] = arr.shift().split(\" \").map(Number);\nvar [k1,k2] = arr.shift().split(\" \").map(Number);\nvar [a,b,c,d] = arr.shift().split(\" \").map(Number);\nvar h = h1*a + h2*b+Math.floor(h1/10)*c+Math.floor(h2/20)*d;\nvar k = k1*a + k2*b+Math.floor(k1/10)*c+Math.floor(k2/20)*d;\nif(h==k)console.log(\"even\");\nelse if(h>k)console.log(\"hiroshi\");\nelse console.log(\"kenjiro\");\n", "language": "JavaScript"}
{"filename": "p00312_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [D, L] = input['trim']()['split']('\\x20')['map'](Number);\nvar amari = D % L;\nvar yakusuu = (D - amari) / L;\nconsole['log'](yakusuu + amari);", "test_cases": [["10 5", "2"], ["7 4", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [D,L] = input.trim().split(\" \").map(Number);\nvar amari = D%L;\nvar yakusuu = (D - amari)/L;\nconsole.log(yakusuu + amari);\n", "language": "JavaScript"}
{"filename": "p00313_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar xyz = [];\nfor (var i = 0x0; i <= n; i++)\n    xyz[i] = [\n        0x0,\n        0x0,\n        0x0\n    ];\nvar x = arr['shift']()['split']('\\x20')['map'](Number);\nvar y = arr['shift']()['split']('\\x20')['map'](Number);\nvar z = arr['shift']()['split']('\\x20')['map'](Number);\nx['shift']();\ny['shift']();\nz['shift']();\nx['forEach'](v => {\n    xyz[v][0x0] = 0x1;\n});\ny['forEach'](v => {\n    xyz[v][0x1] = 0x1;\n});\nz['forEach'](v => {\n    xyz[v][0x2] = 0x1;\n});\nxyz['shift']();\nvar cnt = 0x0;\nxyz['forEach'](v => {\n    var lcqbew = {\n        'AGXrW': function (x, y) {\n            return x == y;\n        },\n        'TdLVr': function (x, y) {\n            return x == y;\n        }\n    };\n    if (lcqbew['AGXrW'](v[0x0], 0x0) && lcqbew['AGXrW'](v[0x2], 0x1))\n        cnt++;\n    else if (lcqbew['TdLVr'](v[0x1], 0x1) && v[0x2] == 0x1)\n        cnt++;\n});\nconsole['log'](cnt);", "test_cases": [["5\n3 1 2 3\n2 4 5\n2 3 4", "1"], ["100\n3 1 100 4\n0\n2 2 3", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n= arr.shift()-0;\nvar xyz = [];\nfor(var i=0;i<=n;i++)xyz[i]=[0,0,0];\nvar x = arr.shift().split(\" \").map(Number);\nvar y = arr.shift().split(\" \").map(Number);\nvar z = arr.shift().split(\" \").map(Number);\nx.shift();\ny.shift();\nz.shift();\nx.forEach(v=>{\n   xyz[v][0]=1;\n});\ny.forEach(v=>{\n   xyz[v][1]=1;\n});\nz.forEach(v=>{\n   xyz[v][2]=1;\n});\nxyz.shift();\nvar cnt = 0;\nxyz.forEach(v=>{\n   if(v[0]==0 && v[2]==1)cnt++;\n   else if(v[1]==1 && v[2]==1)cnt++;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p00314_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar p = arr['shift']()['split']('\\x20')['map'](Number);\nvar ans = 0x0;\nfor (var i = 0x1; i <= 0x64; i++) {\n    var cnt = 0x0;\n    p['forEach'](v => {\n        var whnJPK = {\n            'AnMBo': function (x, y) {\n                return x >= y;\n            }\n        };\n        if (whnJPK['AnMBo'](v, i))\n            cnt++;\n    });\n    if (cnt >= i)\n        ans = i;\n}\nconsole['log'](ans);", "test_cases": [["7\n5 4 3 10 2 4 1", "4"], ["3\n1 1 100", "1"], ["4\n11 15 58 1", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n= arr.shift()-0;\nvar p = arr.shift().split(\" \").map(Number);\nvar ans = 0;\nfor(var i=1;i<=100;i++){\n   var cnt = 0;\n   p.forEach(v=>{\n      if(v>=i)cnt++;\n   });\n   if(cnt>=i)ans=i;\n}\nconsole.log(ans);\n", "language": "JavaScript"}
{"filename": "p00321_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar nf = arr['shift']()['split']('\\x20')['map'](Number);\nvar f = nf[0x1];\nvar obj = {};\narr = arr['map'](function (v) {\n    v = v['split']('\\x20');\n    v['shift']();\n    v['forEach'](function (V) {\n        obj[V] = {};\n    });\n    return v;\n});\nfor (var k in obj) {\n    for (var K in obj) {\n        obj[k][K] = 0x0;\n    }\n}\narr['forEach'](function (v) {\n    var idVIsC = {\n        'aptHu': function (x, y) {\n            return x < y;\n        }\n    };\n    for (var i = 0x0; idVIsC['aptHu'](i, v['length']); i++) {\n        for (var j = 0x0; idVIsC['aptHu'](j, v['length']); j++) {\n            obj[v[i]][v[j]]++;\n        }\n    }\n});\nvar ans = [];\nfor (var k in obj) {\n    for (var K in obj) {\n        obj[K][k] = 0x0;\n        if (obj[k][K] >= f) {\n            ans['push']([\n                k,\n                K\n            ]['sort']()['join']('\\x20'));\n        }\n    }\n}\nans['sort']();\nconsole['log'](ans['length']);\nif (ans['length'] != 0x0)\n    console['log'](ans['join']('\\x0a'));", "test_cases": [["5 2\n3 bread milk banana\n2 milk cornflakes\n3 potato bread milk\n4 cornflakes bread milk butter\n2 potato bread", "3\nbread milk\nbread potato\ncornflakes milk"], ["5 5\n3 bread milk banana\n2 milk cornflakes\n3 potato bread milk\n4 cornflakes bread milk butter\n2 potato bread", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar nf = arr.shift().split(\" \").map(Number);\nvar f = nf[1];\nvar obj = {};\narr = arr.map(function(v) {\n   v = v.split(\" \");\n   v.shift();\n   v.forEach(function(V) {\n      obj[V] = {};\n   });\n   return v;\n});\nfor (var k in obj) {\n   for (var K in obj) {\n      obj[k][K] = 0;\n   }\n}\narr.forEach(function(v) {\n   for (var i = 0; i < v.length; i++) {\n      for (var j = 0; j < v.length; j++) {\n         obj[v[i]][v[j]]++;\n      }\n   }\n});\nvar ans = [];\nfor (var k in obj) {\n   for (var K in obj) {\n      obj[K][k] = 0;\n      if (obj[k][K] >= f) {\n         ans.push([k, K].sort().join(\" \"));\n      }\n   }\n}\nans.sort();\nconsole.log(ans.length);\nif (ans.length != 0) console.log(ans.join(\"\\n\"));", "language": "JavaScript"}
{"filename": "p00322_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar x = input['trim']()['split']('\\x20')['map'](Number);\nvar cnt = 0x0;\nfor (var a = 0x1; a <= 0x9; a++) {\n    for (var b = 0x1; b <= 0x9; b++) {\n        for (var c = 0x1; c <= 0x9; c++) {\n            for (var d = 0x1; d <= 0x8; d++) {\n                for (var e = 0x1; e <= 0x9; e++) {\n                    for (var f = 0x1; f <= 0x9; f++) {\n                        var z = (a + c + f + (b + e) * 0xa + d * 0x64 + '')['split']('')['map'](Number);\n                        if (z['length'] != 0x3)\n                            continue;\n                        z = [\n                            a,\n                            b,\n                            c,\n                            d,\n                            e,\n                            f\n                        ]['concat'](z);\n                        var flag = z['every'](function (v, i) {\n                            var jPyQNY = {\n                                'TcSuL': function (x, y) {\n                                    return x == y;\n                                },\n                                'hsQgk': function (x, y) {\n                                    return x + y;\n                                }\n                            };\n                            return (x[i] == v || jPyQNY['TcSuL'](x[i], -0x1)) && z['indexOf'](jPyQNY['hsQgk'](i, 0x1)) >= 0x0;\n                        });\n                        if (flag)\n                            cnt++;\n                    }\n                }\n            }\n        }\n    }\n}\nconsole['log'](cnt);", "test_cases": [["7 6 -1 1 -1 9 2 3 4", "1"], ["7 6 5 1 8 9 2 3 4", "0"], ["-1 -1 -1 -1 -1 -1 8 4 6", "12"], ["-1 -1 -1 -1 -1 -1 -1 -1 -1", "168"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim().split(\" \").map(Number);\nvar cnt=0;\nfor(var a=1;a<=9;a++){\nfor(var b=1;b<=9;b++){\nfor(var c=1;c<=9;c++){\nfor(var d=1;d<=8;d++){\nfor(var e=1;e<=9;e++){\nfor(var f=1;f<=9;f++){\nvar z=((a+c+f+(b+e)*10+d*100)+\"\").split(\"\").map(Number);\nif(z.length!=3)continue;\nz=[a,b,c,d,e,f].concat(z);\nvar flag = z.every(function(v,i){\n   return  (x[i] == v || x[i] == -1) && (z.indexOf(i+1)>=0) ;\n});\nif(flag)cnt++;\n}}}}}}\nconsole.log(cnt);", "language": "JavaScript"}
{"filename": "p00330_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar x = input['trim']() - 0x0;\nconsole['log'](x * 0x20);", "test_cases": [["4", "128"], ["3", "96"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim() -0;\nconsole.log(x*32);\n", "language": "JavaScript"}
{"filename": "p00331_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [h, r] = input['trim']()['split']('\\x20')['map'](Number);\nif (r + h == 0x0)\n    console['log'](0x0);\nelse if (r + h > 0x0)\n    console['log'](0x1);\nelse\n    console['log'](-0x1);", "test_cases": [["-3 3", "0"], ["3 3", "1"], ["-4 3", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [h,r]=input.trim().split(\" \").map(Number);\nif(r+h==0)console.log(0);\nelse if(r+h>0)console.log(1);\nelse console.log(-1);\n", "language": "JavaScript"}
{"filename": "p00332_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [e, y] = input['trim']()['split']('\\x20')['map'](Number);\nvar mtsh = 'MTSH'['split']('');\nif (e == 0x0) {\n    if (y >= 0x74c && y <= 0x777) {\n        e = 0x1;\n        y -= 0x74c;\n    } else if (y >= 0x778 && y <= 0x785) {\n        e = 0x2;\n        y -= 0x778;\n    } else if (y >= 0x786 && y <= 0x7c4) {\n        e = 0x3;\n        y -= 0x786;\n    } else if (y >= 0x7c5 && y <= 0x7e0) {\n        e = 0x4;\n        y -= 0x7c5;\n    }\n    console['log'](mtsh[e - 0x1] + (y + 0x1));\n} else if (e == 0x1)\n    console['log'](0x74c + y - 0x1);\nelse if (e == 0x2)\n    console['log'](0x778 + y - 0x1);\nelse if (e == 0x3)\n    console['log'](0x786 + y - 0x1);\nelse if (e == 0x4)\n    console['log'](0x7c5 + y - 0x1);", "test_cases": [["0 2015", "H27"], ["0 1912", "T1"], ["2 1", "1912"], ["4 28", "2016"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [e,y] = input.trim().split(\" \").map(Number);\nvar mtsh = \"MTSH\".split(\"\");\nif(e==0){\n   if(y>=1868 && y<=1911){e=1;y-=1868}\n   else if(y>=1912 && y<=1925){e=2;y-=1912}\n   else if(y>=1926 && y<=1988){e=3;y-=1926}\n   else if(y>=1989 && y<=2016){e=4;y-=1989}\n   console.log(mtsh[e-1] + (y+1));\n}\nelse if(e==1)console.log(1868 + y - 1);\nelse if(e==2)console.log(1912 + y - 1);\nelse if(e==3)console.log(1926 + y - 1);\nelse if(e==4)console.log(1989 + y - 1);\n", "language": "JavaScript"}
{"filename": "p00333_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [w, h, c] = input['trim']()['split']('\\x20')['map'](Number);\nvar max = 0x1;\nfor (var i = 0x1; i <= 0x3e8; i++) {\n    if (w % i == 0x0 && h % i == 0x0)\n        max = i;\n}\nconsole['log'](w * h / (max * max) * c);", "test_cases": [["10 20 5", "10"], ["27 6 1", "18"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [w,h,c]= input.trim().split(\" \").map(Number);\nvar max=1;\nfor(var i=1;i<=1000;i++){\n   if(w%i==0 && h%i==0)max=i;\n}\nconsole.log(((w*h)/(max*max))*c);\n", "language": "JavaScript"}
{"filename": "p00340_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x20')['map'](Number);\nvar a = arr[0x0];\nvar b = arr[0x1];\nvar c = arr[0x2];\nvar d = arr[0x3];\nif (a == b && c == d)\n    console['log']('yes');\nelse if (a == c && b == d)\n    console['log']('yes');\nelse if (a == d && b == c)\n    console['log']('yes');\nelse\n    console['log']('no');", "test_cases": [["1 1 3 4", "no"], ["1 1 2 2", "yes"], ["2 1 1 2", "yes"], ["4 4 4 10", "no"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\" \").map(Number);\nvar a = arr[0];\nvar b = arr[1];\nvar c = arr[2];\nvar d = arr[3];\nif (a == b && c == d) console.log(\"yes\");\nelse if (a == c && b == d) console.log(\"yes\");\nelse if (a == d && b == c) console.log(\"yes\");\nelse console.log(\"no\");", "language": "JavaScript"}
{"filename": "p00341_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x20')['map'](Number);\narr['sort'](function (a, b) {\n    var ffUgED = {\n        'Fsogm': function (x, y) {\n            return x - y;\n        }\n    };\n    return ffUgED['Fsogm'](a, b);\n});\nvar sum = 0x0;\nif (arr[0x0] == arr[0x1] && arr[0x1] == arr[0x2] && arr[0x2] == arr[0x3])\n    sum++;\nif (arr[0x0 + 0x4] == arr[0x1 + 0x4] && arr[0x1 + 0x4] == arr[0x2 + 0x4] && arr[0x2 + 0x4] == arr[0x3 + 0x4])\n    sum++;\nif (arr[0x0 + 0x8] == arr[0x1 + 0x8] && arr[0x1 + 0x8] == arr[0x2 + 0x8] && arr[0x2 + 0x8] == arr[0x3 + 0x8])\n    sum++;\nconsole['log'](sum == 0x3 ? 'yes' : 'no');", "test_cases": [["1 1 3 4 8 9 7 3 4 5 5 5", "no"], ["1 1 2 2 3 1 2 3 3 3 1 2", "yes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\" \").map(Number);\narr.sort(function(a,b){\n   return a - b;\n});\nvar sum=0;\nif(arr[0] == arr[1] && arr[1] == arr[2] && arr[2] == arr[3])sum++;\nif(arr[0+4] == arr[1+4] && arr[1+4] == arr[2+4] && arr[2+4] == arr[3+4])sum++;\nif(arr[0+8] == arr[1+8] && arr[1+8] == arr[2+8] && arr[2+8] == arr[3+8])sum++;\nconsole.log((sum==3)?\"yes\":\"no\");", "language": "JavaScript"}
{"filename": "p00353_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [m, f, b] = input['trim']()['split']('\\x20')['map'](Number);\nif (m >= b)\n    console['log'](0x0);\nelse if (m + f < b)\n    console['log']('NA');\nelse\n    console['log'](b - m);", "test_cases": [["1000 3000 3000", "2000"], ["5000 3000 4500", "0"], ["500 1000 2000", "NA"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [m,f,b] =input.trim().split(\" \").map(Number);\nif(m>=b)console.log(0);\nelse if(m+f<b)console.log(\"NA\");\nelse console.log(b-m);\n", "language": "JavaScript"}
{"filename": "p00354_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar x = input['trim']() - 0x0;\nvar w = [\n    'thu',\n    'fri',\n    'sat',\n    'sun',\n    'mon',\n    'tue',\n    'wed'\n];\nconsole['log'](w[x % 0x7]);", "test_cases": [["1", "fri"], ["9", "sat"], ["30", "sat"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x =input.trim() - 0;\nvar w = [\"thu\",\"fri\",\"sat\",\"sun\",\"mon\",\"tue\",\"wed\"];\nconsole.log(w[x%7]);\n", "language": "JavaScript"}
{"filename": "p00357_1", "type": "JavaScript", "obfuscated": "function tobu(arr) {\n    var glqlrH = {\n        'ILOrL': function (x, y) {\n            return x < y;\n        },\n        'bQUun': function (x, y) {\n            return x - y;\n        },\n        'NVRBE': function (x, y) {\n            return x + y;\n        },\n        'dnBHG': function (x, y) {\n            return x >= y;\n        }\n    };\n    var max = 0x0;\n    for (var i = 0x0; glqlrH['ILOrL'](i, glqlrH['bQUun'](arr['length'], 0x1)); i++) {\n        if (i > max)\n            break;\n        var d = Math['floor'](arr[i] / 0xa);\n        max = Math['max'](max, glqlrH['NVRBE'](i, d));\n    }\n    return glqlrH['dnBHG'](max, glqlrH['bQUun'](arr['length'], 0x1));\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar n = arr['shift']();\nif (tobu(arr) && tobu(arr['reverse']()))\n    console['log']('yes');\nelse\n    console['log']('no');", "test_cases": [["4\n20\n5\n10\n1", "no"], ["3\n10\n5\n10", "no"], ["4\n20\n30\n1\n20", "yes"]], "original": "function tobu(arr){\n   var max=0;\n   for(var i=0;i<arr.length-1;i++){\n      if(i>max)break;\n      var d = Math.floor(arr[i]/10);\n      max=Math.max(max,i+d);\n   }\n   return (max>=arr.length-1);\n}\n \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\").map(Number);\nvar n=arr.shift();\nif(tobu(arr) && tobu(arr.reverse()))console.log(\"yes\");\nelse console.log(\"no\");\n", "language": "JavaScript"}
{"filename": "p00363_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [w, h, c] = input['trim']()['split']('\\x20');\nw = w - 0x0;\nh = h - 0x0;\nvar ans = [];\nans['push']('+' + '-'['repeat'](w - 0x2) + '+');\nfor (var i = 0x0; i < h - 0x2; i++)\n    ans['push']('|' + '.'['repeat'](w - 0x2) + '|');\nans['push']('+' + '-'['repeat'](w - 0x2) + '+');\nans[Math['floor'](h / 0x2)] = '|' + '.'['repeat']((w - 0x3) / 0x2) + c + '.'['repeat']((w - 0x3) / 0x2) + '|';\nconsole['log'](ans['join']('\\x0a')['trim']());", "test_cases": [["3 3 B", "+-+\n|B|\n+-+"], ["11 7 Z", "+---------+\n|.........|\n|.........|\n|....Z....|\n|.........|\n|.........|\n+---------+"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [w,h,c] = input.trim().split(\" \");\nw=w-0;\nh=h-0;\nvar ans=[];\nans.push(\"+\" + \"-\".repeat(w-2) + \"+\");\nfor(var i=0;i<h - 2;i++)ans.push(\"|\" + \".\".repeat(w-2) + \"|\");\nans.push(\"+\" + \"-\".repeat(w-2) + \"+\");\nans[Math.floor(h/2)]=\"|\" + \".\".repeat((w-3)/2)  + c + \".\".repeat((w-3)/2)+ \"|\"\nconsole.log(ans.join(\"\\n\").trim());\n", "language": "JavaScript"}
{"filename": "p00364_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr = arr['map'](v => v['split']('\\x20')['map'](Number));\nvar [n, t] = arr['shift']();\nvar max = 0x0;\narr['forEach'](v => {\n    var aWNVia = {\n        'JPwqM': function (x, y) {\n            return x / y;\n        }\n    };\n    max = Math['max'](max, aWNVia['JPwqM'](v[0x1], v[0x0]));\n});\nconsole['log']((max * t)['toFixed'](0x6));", "test_cases": [["3 10\n6 4\n4 2\n3 2", "6.666667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\narr=arr.map(v=>v.split(\" \").map(Number));\nvar [n,t]=arr.shift();\nvar max=0;\narr.forEach(v=>{\n   max=Math.max(max,v[1]/v[0]);\n});\nconsole.log((max*t).toFixed(6));\n", "language": "JavaScript"}
{"filename": "p00375_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar a = input - 0x0;\nconsole['log']((a - 0x1e) / 0x2);", "test_cases": [["68", "19"], ["50", "10"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar a=input-0;\nconsole.log((a-30)/2);\n", "language": "JavaScript"}
{"filename": "p00376_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](Math['abs'](b - a));", "test_cases": [["20 30", "10"], ["50 25", "25"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]=input.trim().split(\" \").map(Number);\nconsole.log(Math.abs(b-a));\n", "language": "JavaScript"}
{"filename": "p00377_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [n, c] = arr[0x0]['split']('\\x20')['map'](Number);\nvar p = arr[0x1]['split']('\\x20')['map'](Number);\nvar sum = p['reduce']((a, b) => a + b);\nvar x = sum % (n + 0x1) == 0x0 ? 0x0 : 0x1;\nconsole['log'](Math['floor'](sum / (n + 0x1)) + x);", "test_cases": [["5 4\n5 5 6 5", "4"], ["7 5\n8 8 8 8 8", "5"], ["100 3\n3 3 3", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,c]=arr[0].split(\" \").map(Number);\nvar p=arr[1].split(\" \").map(Number);\nvar sum=p.reduce((a,b)=> a+b);\nvar x=(sum%(n+1)==0)?0:1;\nconsole.log(Math.floor(sum/(n+1))+x);\n", "language": "JavaScript"}
{"filename": "p00378_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b, x] = input['trim']()['split']('\\x20')['map'](Number);\nvar min = Infinity;\nfor (var i = 0x0; i <= 0x14; i++) {\n    for (var j = 0x0; j <= 0x28; j++) {\n        if (i * 0x3e8 + j * 0x1f4 >= x)\n            min = Math['min'](min, i * a + j * b);\n    }\n}\nconsole['log'](min);", "test_cases": [["180 100 2400", "460"], ["200 90 2018", "450"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,x]=input.trim().split(\" \").map(Number);\nvar min=Infinity;\nfor(var i=0;i<=20;i++){\n   for(var j=0;j<=40;j++){\n      if(i*1000+j*500>=x)min=Math.min(min,i*a+j*b);\n   }\n}\nconsole.log(min);\n", "language": "JavaScript"}
{"filename": "p00387_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](Math['ceil'](b / a));", "test_cases": [["3 5", "2"], ["25 10", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]= input.trim().split(\" \").map(Number);\nconsole.log(Math.ceil(b/a));\n", "language": "JavaScript"}
{"filename": "p00388_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [h, a, b] = input['trim']()['split']('\\x20')['map'](Number);\nvar cnt = 0x0;\nfor (var i = a; i <= b; i++) {\n    if (h % i == 0x0)\n        cnt++;\n}\nconsole['log'](cnt);", "test_cases": [["100 2 4", "2"], ["101 3 5", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [h,a,b]= input.trim().split(\" \").map(Number);\nvar cnt = 0;\nfor(var i=a;i<=b;i++){\n   if(h%i==0)cnt++;\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p00389_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [n, k] = input['trim']()['split']('\\x20')['map'](Number);\nvar takasa = 0x0;\nvar w = 0x0;\nvar cnt = 0x0;\nwhile (!![]) {\n    if (n == 0x0)\n        break;\n    n--;\n    cnt++;\n    if (w <= k * cnt) {\n        takasa++;\n        w += cnt;\n        cnt = 0x0;\n    }\n}\nconsole['log'](takasa);", "test_cases": [["4 2", "3"], ["5 2", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,k]= input.trim().split(\" \").map(Number);\nvar takasa=0;\nvar w=0;\nvar cnt=0;\nwhile(true){\n   if(n==0)break;\n   n--;\n   cnt++;\n   if(w<=k*cnt){\n      takasa++;\n      w+=cnt;\n      cnt=0;\n   }\n}\nconsole.log(takasa);\n", "language": "JavaScript"}
{"filename": "p00589_1", "type": "JavaScript", "obfuscated": "var a = [''];\na[0x1] = '\\x27,.,!?'['split']('');\na[0x2] = 'abcABC'['split']('');\na[0x3] = 'defDEF'['split']('');\na[0x4] = 'ghiGHI'['split']('');\na[0x5] = 'jklJKL'['split']('');\na[0x6] = 'mnoMNO'['split']('');\na[0x7] = 'pqrsPQRS'['split']('');\na[0x8] = 'tuvTUV'['split']('');\na[0x9] = 'wxyzWXYZ'['split']('');\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr['forEach'](function (v) {\n    var qYGkKC = {\n        'Hokno': function (x, y) {\n            return x == y;\n        },\n        'BUGsJ': function (x, y) {\n            return x - y;\n        }\n    };\n    v = v['replace'](/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g, function (x) {\n        if (qYGkKC['Hokno'](x[0x0], '0'))\n            return x['slice'](0x1)['replace'](/0/g, '\\x20');\n        else\n            return a[x[0x0] - 0x0][qYGkKC['BUGsJ'](x['length'], 0x1)];\n    });\n    console['log'](v);\n});", "test_cases": [["666660666\n44444416003334446633111\n20202202000333003330333", "No\nI'm fine.\naaba  f ff"]], "original": "var a=[\"\"];\na[1]=\"',.,!?\".split(\"\");\na[2]=\"abcABC\".split(\"\");\na[3]=\"defDEF\".split(\"\");\na[4]=\"ghiGHI\".split(\"\");\na[5]=\"jklJKL\".split(\"\");\na[6]=\"mnoMNO\".split(\"\");\na[7]=\"pqrsPQRS\".split(\"\");\na[8]=\"tuvTUV\".split(\"\");\na[9]=\"wxyzWXYZ\".split(\"\");\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.forEach(function(v){\n   v=v.replace(/0+|1+|2+|3+|4+|5+|6+|7+|8+|9+/g,function(x){\n      if(x[0]==\"0\")return x.slice(1).replace(/0/g,\" \");\n      else return a[x[0]-0][x.length-1];\n   });\n   console.log(v);\n});", "language": "JavaScript"}
{"filename": "p00592_1", "type": "JavaScript", "obfuscated": "function time(x) {\n    var mBUReW = {\n        'dozUO': function (x, y) {\n            return x + y;\n        },\n        'Ndtoa': function (x, y) {\n            return x * y;\n        },\n        'oCSrp': function (x, y) {\n            return x * y;\n        },\n        'yqaRe': function (x, y) {\n            return x * y;\n        }\n    };\n    x = x['split']('')['map'](Number);\n    return mBUReW['dozUO'](mBUReW['dozUO'](mBUReW['dozUO'](mBUReW['Ndtoa'](mBUReW['oCSrp'](x[0x0], 0xa), 0x3c), x[0x1] * 0x3c), mBUReW['yqaRe'](x[0x2], 0xa)), x[0x3]);\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var npq = arr['shift']();\n    if (npq == '0\\x200\\x200')\n        break;\n    npq = npq['split']('\\x20');\n    var n = npq[0x0] - 0x0;\n    var p = time(npq[0x1]);\n    var q = time(npq[0x2]);\n    var tv = [];\n    for (var i = p; i < q; i++)\n        tv[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var cm = arr['shift']();\n        var ary = arr['shift']()['split']('\\x20');\n        for (var j = 0x0; j < cm; j++) {\n            var start = time(ary['shift']());\n            var stop = time(ary['shift']());\n            for (var k = start; k < stop; k++)\n                tv[k]++;\n        }\n    }\n    var max = 0x0;\n    var cnt = 0x0;\n    for (var i = p; i < q; i++) {\n        if (tv[i] != n) {\n            cnt++;\n        } else {\n            max = Math['max'](max, cnt);\n            cnt = 0x0;\n        }\n    }\n    max = Math['max'](max, cnt);\n    console['log'](max);\n}", "test_cases": [["1 2100 2400\n1\n2130 2200\n3 2100 2400\n3\n2100 2130 2200 2230 2300 2330\n2\n2130 2200 2330 2400\n2\n2100 2130 2330 2400\n0 0 0", "120\n180"]], "original": "function time(x){\n   x=x.split(\"\").map(Number);\n   return x[0]*10*60+x[1]*60+x[2]*10+x[3];\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var npq=arr.shift();\n   if(npq==\"0 0 0\")break;\n   npq=npq.split(\" \");\n   var n=npq[0]-0;\n   var p=time(npq[1]);\n   var q=time(npq[2]);\n   var tv=[];\n   for(var i=p;i<q;i++)tv[i]=0;\n   for(var i=0;i<n;i++){\n      var cm=arr.shift();\n      var ary=arr.shift().split(\" \");\n      for(var j=0;j<cm;j++){\n         var start=time(ary.shift());\n         var stop=time(ary.shift());\n         for(var k=start;k<stop;k++)tv[k]++;\n      }\n   }\n   var max=0;\n   var cnt=0;\n   for(var i=p;i<q;i++){\n      if(tv[i]!=n){cnt++;}\n      else {max=Math.max(max,cnt);cnt=0;}\n   }\n   max=Math.max(max,cnt);\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00595_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['forEach'](function (v) {\n    var obvxns = {\n        'sJhtI': '0|3|4|1|2',\n        'dXNIs': function (x, y) {\n            return x != y;\n        },\n        'LMKJL': function (x, y) {\n            return x % y;\n        }\n    };\n    var ZTydPw = obvxns['sJhtI']['split']('|');\n    var gKRTxr = 0x0;\n    while (!![]) {\n        switch (ZTydPw[gKRTxr++]) {\n        case '0':\n            var arr = v['split']('\\x20')['map'](Number);\n            continue;\n        case '1':\n            while (obvxns['dXNIs'](n, 0x0)) {\n                var N = n;\n                n = obvxns['LMKJL'](m, n);\n                m = N;\n            }\n            continue;\n        case '2':\n            console['log'](m);\n            continue;\n        case '3':\n            var m = Math['max'](arr[0x0], arr[0x1]);\n            continue;\n        case '4':\n            var n = Math['min'](arr[0x0], arr[0x1]);\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["57 38\n60 84", "19\n12"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.forEach(function(v){\n   var arr=v.split(\" \").map(Number);\n   var m=Math.max(arr[0],arr[1]);\n   var n=Math.min(arr[0],arr[1]);\n   while(n!=0){\n      var N=n;\n      n=m%n;\n      m=N;\n   }\n   console.log(m);\n});", "language": "JavaScript"}
{"filename": "p00602_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr['forEach'](function (value) {\n    var BrrJBt = {\n        'VNLvY': '2|9|8|7|10|4|0|12|3|5|1|11|6',\n        'kEiyR': function (x, y) {\n            return x - y;\n        },\n        'QZwzc': function (x, y) {\n            return x < y;\n        },\n        'GesDT': function (x, y) {\n            return x <= y;\n        },\n        'TOUgO': function (x, y) {\n            return x % y;\n        },\n        'lCjKi': function (x, y) {\n            return x + y;\n        }\n    };\n    var bMDzYy = BrrJBt['VNLvY']['split']('|');\n    var sVHKIY = 0x0;\n    while (!![]) {\n        switch (bMDzYy[sVHKIY++]) {\n        case '0':\n            f[0x1] = 0x2;\n            continue;\n        case '1':\n            var cnt = 0x0;\n            continue;\n        case '2':\n            var YSlJuP = {\n                'kNKrU': function (x, y) {\n                    return x - y;\n                }\n            };\n            continue;\n        case '3':\n            f['shift']();\n            continue;\n        case '4':\n            f[0x0] = 0x1;\n            continue;\n        case '5':\n            f['sort'](function (a, b) {\n                return YSlJuP['kNKrU'](a, b);\n            });\n            continue;\n        case '6':\n            console['log'](BrrJBt['kEiyR'](f['length'], cnt));\n            continue;\n        case '7':\n            var d = vd[0x1];\n            continue;\n        case '8':\n            var v = vd[0x0];\n            continue;\n        case '9':\n            var vd = value['split']('\\x20')['map'](Number);\n            continue;\n        case '10':\n            var f = [];\n            continue;\n        case '11':\n            for (var i = 0x1; BrrJBt['QZwzc'](i, f['length']); i++) {\n                if (BrrJBt['QZwzc'](BrrJBt['kEiyR'](f[i], f[BrrJBt['kEiyR'](i, 0x1)]), d))\n                    cnt++;\n            }\n            continue;\n        case '12':\n            for (var i = 0x2; BrrJBt['GesDT'](i, v); i++) {\n                f[i] = BrrJBt['TOUgO'](BrrJBt['lCjKi'](f[BrrJBt['kEiyR'](i, 0x1)], f[BrrJBt['kEiyR'](i, 0x2)]), 0x3e9);\n            }\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["5 5\n50 1\n13 13", "2\n50\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.forEach(function(value){\n   var vd=value.split(\" \").map(Number);\n   var v=vd[0];\n   var d=vd[1];\n   var f=[];\n   f[0]=1;\n   f[1]=2;\n   for(var i=2;i<=v;i++){\n      f[i]=(f[i - 1] + f[i - 2])%1001;\n   }\n   f.shift();\n   f.sort(function(a,b){return a-b});\n   var cnt=0;\n   for(var i=1;i<f.length;i++){\n         if(f[i]-f[i-1]<d)cnt++;\n   }\n   console.log(f.length-cnt);\n});", "language": "JavaScript"}
{"filename": "p00603_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (Arr['length'] == 0x0)\n        break;\n    var nr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var n = nr[0x0];\n    var r = nr[0x1];\n    var card = [];\n    for (var i = 0x0; i < n; i++)\n        card[i] = i;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    for (var i = 0x0; i < r; i++) {\n        var LawtXh = '1|5|4|2|0|3'['split']('|');\n        var cnRQrv = 0x0;\n        while (!![]) {\n            switch (LawtXh[cnRQrv++]) {\n            case '0':\n                card = [];\n                continue;\n            case '1':\n                var v = arr[i];\n                continue;\n            case '2':\n                for (var j = 0x0; j < n; j++)\n                    Math['floor'](n / 0x2) > j ? b['push'](card[j]) : a['push'](card[j]);\n                continue;\n            case '3':\n                while (!![]) {\n                    if (a['length'] == 0x0 && b['length'] == 0x0)\n                        break;\n                    card = card['concat'](a['splice'](0x0, v));\n                    card = card['concat'](b['splice'](0x0, v));\n                }\n                continue;\n            case '4':\n                var b = [];\n                continue;\n            case '5':\n                var a = [];\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](card[card['length'] - 0x1]);\n}", "test_cases": [["9 1\n3\n9 4\n1 2 3 4", "3\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var nr=Arr.shift().split(\" \").map(Number);\n   var n=nr[0];\n   var r=nr[1];\n   var card=[];\n   for(var i=0;i<n;i++)card[i]=i;\n   var arr=Arr.shift().split(\" \").map(Number);\n   for(var i=0;i<r;i++){\n      var v=arr[i];\n      var a=[];\n      var b=[];\n      for(var j=0;j<n;j++)(Math.floor(n/2)>j)?b.push(card[j]): a.push(card[j]);\n      card=[];\n      while(true){\n         if(a.length==0 && b.length==0)break;\n         card=card.concat(a.splice(0,v));\n         card=card.concat(b.splice(0,v));\n      }\n   }\n   console.log(card[card.length-1]);\n}", "language": "JavaScript"}
{"filename": "p00604_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (Arr['length'] == 0x0)\n        break;\n    var n = Arr['shift']();\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    arr['sort'](function (a, b) {\n        var MThTlb = {\n            'geiQm': function (x, y) {\n                return x - y;\n            }\n        };\n        return MThTlb['geiQm'](a, b);\n    });\n    var sum = 0x0;\n    var time = 0x0;\n    arr['forEach'](function (v) {\n        sum += v + time;\n        time += v;\n    });\n    console['log'](sum);\n}", "test_cases": [["3\n10 20 30\n7\n56 26 62 43 25 80 7", "100\n873"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   if(Arr.length==0)break;\n   var n=Arr.shift();\n   var arr=Arr.shift().split(\" \").map(Number);\n   arr.sort(function(a,b){return a-b;});\n   var sum=0;\n   var time=0;\n   arr.forEach(function(v){\n      sum+=v+time;\n      time+=v;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00605_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var NK = Arr['shift']();\n    if (NK == '0\\x200')\n        break;\n    var nk = NK['split']('\\x20')['map'](Number);\n    var S = Arr['shift']()['split']('\\x20')['map'](Number);\n    for (var i = 0x0; i < nk[0x0]; i++) {\n        var B = Arr['shift']()['split']('\\x20')['map'](Number);\n        B['forEach'](function (v, index) {\n            S[index] -= v;\n        });\n    }\n    var flag = S['every'](function (v) {\n        var lHSGqC = {\n            'nUelu': function (x, y) {\n                return x >= y;\n            }\n        };\n        return lHSGqC['nUelu'](v, 0x0);\n    });\n    console['log'](flag ? 'Yes' : 'No');\n}", "test_cases": [["2 3\n5 4 5\n1 2 3\n3 2 1\n3 5\n1 2 3 4 5\n0 1 0 1 2\n0 1 1 2 2\n1 0 3 1 1\n0 0", "Yes\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var NK=Arr.shift();\n   if(NK==\"0 0\")break;\n   var nk=NK.split(\" \").map(Number);\n   var S=(Arr.shift()).split(\" \").map(Number);\n   for(var i=0;i<nk[0];i++){\n      var B=(Arr.shift()).split(\" \").map(Number);\n      B.forEach(function(v,index){S[index]-=v;});\n   }\n   var flag=S.every(function(v){return (v>=0);});\n   console.log(flag?\"Yes\":\"No\");\n}", "language": "JavaScript"}
{"filename": "p00613_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var K = Arr['shift']() - 0x0;\n    if (K == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var sum = arr['reduce'](function (a, b) {\n        var LWcwbY = {\n            'ZgyYO': function (x, y) {\n                return x + y;\n            }\n        };\n        return LWcwbY['ZgyYO'](a, b);\n    });\n    console['log'](sum / (K - 0x1));\n}", "test_cases": [["2\n2\n3\n5 4 3\n0", "2\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var K=Arr.shift()-0;\n   if(K==0)break;\n   var arr=Arr.shift().split(\" \").map(Number);\n   var sum=arr.reduce(function(a,b){return a+b;});\n   console.log(sum/(K-1));\n}", "language": "JavaScript"}
{"filename": "p00615_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == '0\\x200')\n        break;\n    var arr = str['split']('\\x20');\n    var data = [0x0];\n    if (arr[0x0] > 0x0)\n        data = data['concat'](Arr['shift']()['split']('\\x20')['map'](Number));\n    if (arr[0x1] > 0x0)\n        data = data['concat'](Arr['shift']()['split']('\\x20')['map'](Number));\n    data['sort'](function (a, b) {\n        return a - b;\n    });\n    var max = 0x0;\n    data['reduce'](function (a, b) {\n        var EaIwKo = {\n            'DszBm': function (x, y) {\n                return x - y;\n            }\n        };\n        max = Math['max'](max, Math['abs'](EaIwKo['DszBm'](a, b)));\n        return b;\n    });\n    console['log'](max);\n}", "test_cases": [["4 5\n20 35 60 70\n15 30 40 80 90\n3 2\n10 20 30\n42 60\n0 1\n100\n1 1\n10\n50\n0 0", "20\n18\n100\n40"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"0 0\")break;\n   var arr=str.split(\" \");\n   var data=[0];\n   if(arr[0]>0)data=data.concat((Arr.shift()).split(\" \").map(Number));\n   if(arr[1]>0)data=data.concat((Arr.shift()).split(\" \").map(Number));\n   data.sort(function(a,b){return a-b;});\n   var max=0;\n   data.reduce(function(a,b){\n      max=Math.max(max,Math.abs(a-b));\n   return b;\n   });\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00621_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var wq = arr['shift']();\n    if (wq == '0\\x200')\n        break;\n    wq = wq['split']('\\x20')['map'](Number);\n    var w = wq[0x0];\n    var W = [];\n    for (var i = 0x0; i < w; i++)\n        W[i] = !![];\n    var cat = {};\n    while (wq[0x1]--) {\n        var sw = arr['shift']()['split']('\\x20');\n        if (sw[0x0] == 's') {\n            var id = sw[0x1];\n            var width = sw[0x2] - 0x0;\n            var cnt = 0x0;\n            var ans = 'impossible';\n            for (var i = 0x0; i < w; i++) {\n                cnt = W[i] ? cnt + 0x1 : 0x0;\n                if (cnt == width) {\n                    while (cnt--) {\n                        W[i] = ![];\n                        i--;\n                    }\n                    i++;\n                    cat[id] = [\n                        i,\n                        width\n                    ];\n                    ans = i;\n                    break;\n                }\n            }\n            console['log'](ans);\n        }\n        if (sw[0x0] == 'w') {\n            var id = sw[0x1];\n            var width = cat[id][0x1];\n            var i = cat[id][0x0];\n            while (width--) {\n                W[i] = !![];\n                i++;\n            }\n        }\n    }\n    console['log']('END');\n}", "test_cases": [["4 6\ns 0 2\ns 1 3\ns 2 1\nw 0\ns 3 3\ns 4 2\n3 3\ns 0 1\ns 1 1\ns 2 1\n0 0", "0\nimpossible\n2\nimpossible\n0\nEND\n0\n1\n2\nEND"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wq=arr.shift();\n   if(wq==\"0 0\")break;\n   wq=wq.split(\" \").map(Number);\n   var w=wq[0];\n   var W=[];\n   for(var i=0;i<w;i++)W[i]=true;\n   var cat={};\n   while(wq[1]--){\n      var sw=arr.shift().split(\" \");\n      if(sw[0]==\"s\"){\n         var id=sw[1];\n         var width=sw[2]-0;\n         var cnt=0;\n         var ans=\"impossible\";\n         for(var i=0;i<w;i++){\n            cnt=(W[i])?cnt+1:0;\n            if(cnt==width){\n              while(cnt--){W[i]=false;i--;}\n               i++;\n               cat[id]=[i,width];\n               ans=i;\n               break;\n            }\n         }\n         console.log(ans);\n      }\n      if(sw[0]==\"w\"){\n         var id=sw[1];\n         var width=cat[id][1];\n         var i=cat[id][0];\n         while(width--){W[i]=true;i++;}\n      }\n   }\n   console.log(\"END\");\n}", "language": "JavaScript"}
{"filename": "p00622_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var a = arr['shift']()['split']('');\n    if (a['join']('') == '-')\n        break;\n    var b = arr['shift']()['split']('');\n    var c = arr['shift']()['split']('');\n    var obj = {};\n    a['forEach'](function (v) {\n        obj[v] = !![];\n    });\n    var str = '';\n    var m = '';\n    c['forEach'](function (v) {\n        var tXQoJd = {\n            'hbkDd': function (x, y) {\n                return x == y;\n            }\n        };\n        if (obj['hasOwnProperty'](v)) {\n            if (tXQoJd['hbkDd'](m, '')) {\n                m = a['shift']();\n                m = a['shift']();\n            } else {\n                m = a['shift']();\n            }\n        } else {\n            while (!![]) {\n                if (m == v) {\n                    m = a['shift']();\n                    break;\n                } else {\n                    str += m;\n                    m = b['shift']();\n                }\n            }\n        }\n    });\n    str += m;\n    str += b['join']('');\n    console['log'](str);\n}", "test_cases": [["CBA\ncba\ncCa\nX\nZY\nZ\n-", "BbA\nXY"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var a=arr.shift().split(\"\");\n   if(a.join(\"\")==\"-\")break;\n   var b=arr.shift().split(\"\");\n   var c=arr.shift().split(\"\");\n   var obj={};\n   a.forEach(function(v){\n      obj[v]=true;\n   });\n   var str=\"\";\n   var m=\"\";\n   c.forEach(function(v){\n      if(obj.hasOwnProperty(v)){\n         if(m==\"\"){\n            m=a.shift();\n            m=a.shift();\n         }else{\n            m=a.shift();\n         }\n      }else{\n         while(true){\n            if(m==v){\n               m=a.shift();\n               break;\n            }else{\n               str+=m;\n               m=b.shift();\n            }\n         }\n      }\n   });\n   str+=m;\n   str+=b.join(\"\");\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00627_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nwhile (Arr['length'] != 0x0) {\n    var n = Arr['shift']() / 0x4;\n    if (n == 0x0)\n        break;\n    var sum = 0x0;\n    while (n != 0x0) {\n        sum += Arr['shift']();\n        n--;\n    }\n    console['log'](sum);\n}", "test_cases": [["20\n4\n3\n2\n1\n3\n8\n2\n0\n0", "13\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nwhile(Arr.length!=0){\n   var n=(Arr.shift())/4;\n   if(n==0)break;\n   var sum=0;\n   while(n!=0){sum+=Arr.shift();n--}\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00628_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var str = Arr['shift']();\n    if (str == 'END\\x20OF\\x20INPUT')\n        break;\n    var arr = str['split']('\\x20');\n    arr['forEach'](function (v, i) {\n        arr[i] = v['length'];\n    });\n    console['log'](arr['join'](''));\n}", "test_cases": [["Yes I have a number\nHow I wish I could calculate an unused color for space\nThank you\nEND OF INPUT", "31416\n31415926535\n53"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var str=Arr.shift();\n   if(str==\"END OF INPUT\")break;\n   var arr=str.split(\" \");\n   arr.forEach(function(v,i){arr[i]=v.length;});\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p00630_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var nt = Arr['shift']()['split']('\\x20');\n    var str = nt[0x0];\n    var type = nt[0x1];\n    if (type == 'X')\n        break;\n    str = str['replace'](/^./, function (s) {\n        return s['toLowerCase']();\n    });\n    str = str['replace'](/[A-Z]/g, function (s) {\n        var lHtJmq = {\n            'ntADc': function (x, y) {\n                return x + y;\n            }\n        };\n        return lHtJmq['ntADc']('_', s);\n    });\n    var arr = str['split']('_');\n    for (var i = 0x1; i < arr['length']; i++) {\n        arr[i] = arr[i]['replace'](/./, function (s) {\n            return s['toUpperCase']();\n        });\n    }\n    if (type == 'U') {\n        arr[0x0] = arr[0x0]['replace'](/^./, function (s) {\n            return s['toUpperCase']();\n        });\n        console['log'](arr['join'](''));\n    }\n    if (type == 'L')\n        console['log'](arr['join'](''));\n    if (type == 'D')\n        console['log'](arr['join']('_')['toLowerCase']());\n}", "test_cases": [["get_user_name L\ngetUserName U\nGetUserName D\nEndOfInput X", "getUserName\nGetUserName\nget_user_name"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var nt=(Arr.shift()).split(\" \");\n   var str=nt[0];\n   var type=nt[1];\n   if(type==\"X\")break;\n   str=str.replace(/^./,function(s){\n      return s.toLowerCase();\n   });\n   str=str.replace(/[A-Z]/g,function(s){\n      return \"_\"+s;\n   });\n   var arr=str.split(\"_\");\n   for(var i=1;i<arr.length;i++){\n      arr[i]=arr[i].replace(/./,function(s){\n         return s.toUpperCase();\n      });\n   }\n   if(type==\"U\"){\n      arr[0]=arr[0].replace(/^./,function(s){\n         return s.toUpperCase();\n      });\n      console.log(arr.join(\"\"));\n   }\n   if(type==\"L\")console.log(arr.join(\"\"));\n   if(type==\"D\")console.log(arr.join(\"_\").toLowerCase());\n}", "language": "JavaScript"}
{"filename": "p00631_1", "type": "JavaScript", "obfuscated": "function bomb(a, b, i) {\n    var ajfpVL = {\n        'WBGHo': function (x, y) {\n            return x - y;\n        },\n        'Gwpzw': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'gcrZU': function (x, y) {\n            return x + y;\n        },\n        'wWOTo': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        }\n    };\n    if (i == n) {\n        min = Math['min'](min, Math['abs'](ajfpVL['WBGHo'](a, b)));\n        return;\n    }\n    ajfpVL['Gwpzw'](bomb, a + arr[i], b, ajfpVL['gcrZU'](i, 0x1));\n    ajfpVL['wWOTo'](bomb, a, b + arr[i], ajfpVL['gcrZU'](i, 0x1));\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var min = Infinity;\n    bomb(0x0, 0x0, 0x0);\n    console['log'](min);\n}", "test_cases": [["5\n1 2 3 4 5\n4\n2 3 5 7\n0", "1\n1"]], "original": "function bomb(a,b,i){\n   if(i==n){\n      min=Math.min(min,Math.abs(a-b));\n      return;\n   }\n   bomb(a+arr[i],b,i+1);\n   bomb(a,b+arr[i],i+1);\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=Arr.shift().split(\" \").map(Number);\n   var min=Infinity;\n   bomb(0,0,0);\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p00637_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n    var x = arr[0x0];\n    var ans = [[x]];\n    for (var i = 0x1; i < n; i++) {\n        if (x + 0x1 == arr[i])\n            ans[ans['length'] - 0x1]['push'](arr[i]);\n        else\n            ans['push']([arr[i]]);\n        x = arr[i];\n    }\n    ans['forEach'](function (v, i) {\n        var KfMaxI = {\n            'vFYAp': function (x, y) {\n                return x !== y;\n            },\n            'fIYQL': function (x, y) {\n                return x + y;\n            },\n            'RsJSB': function (x, y) {\n                return x - y;\n            }\n        };\n        if (KfMaxI['vFYAp'](v['length'], 0x1))\n            ans[i] = KfMaxI['fIYQL'](v[0x0] + '-', v[KfMaxI['RsJSB'](v['length'], 0x1)]);\n        else\n            ans[i] = v[0x0];\n    });\n    console['log'](ans['join']('\\x20'));\n}", "test_cases": [["5\n1 2 3 5 6\n3\n7 8 9\n0", "1-3 5-6\n7-9"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var x=arr[0];\n   var ans=[[x]];\n   for(var i=1;i<n;i++){\n      if(x+1==arr[i])(ans[ans.length-1]).push(arr[i]);\n      else ans.push([arr[i]]);\n      x=arr[i];\n   }\n   ans.forEach(function(v,i){\n      if(v.length!==1)ans[i]=v[0]+\"-\"+v[v.length-1];\n      else ans[i]=v[0];\n   });\n   console.log(ans.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p00657_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var rc = Arr['shift']()['split']('\\x20')['map'](Number);\n    var r = rc[0x0];\n    var c = rc[0x1];\n    if (r == 0x0 && c == 0x0)\n        break;\n    console['log'](r % 0x2 == 0x1 && c % 0x2 == 0x1 ? 'no' : 'yes');\n}", "test_cases": [["1 1\n2 2\n0 0", "no\nyes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var rc=Arr.shift().split(\" \").map(Number);\n   var r=rc[0];\n   var c=rc[1];\n   if(r==0 && c==0)break;\n   console.log((r%2==1 && c%2==1)?\"no\":\"yes\");\n}", "language": "JavaScript"}
{"filename": "p00676_1", "type": "JavaScript", "obfuscated": "function heron(a, b, c) {\n    var dWfYZU = {\n        'pnlUV': function (x, y) {\n            return x + y;\n        },\n        'zKood': function (x, y) {\n            return x * y;\n        },\n        'lDsKM': function (x, y) {\n            return x - y;\n        },\n        'UQppp': function (x, y) {\n            return x - y;\n        }\n    };\n    var s = dWfYZU['pnlUV'](dWfYZU['pnlUV'](a, b), c) / 0x2;\n    var S = Math['sqrt'](dWfYZU['zKood'](s * (s - a) * dWfYZU['lDsKM'](s, b), dWfYZU['UQppp'](s, c)));\n    return S;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var otNIQB = '1|2|6|4|7|0|5|3'['split']('|');\n    var SliwAb = 0x0;\n    while (!![]) {\n        switch (otNIQB[SliwAb++]) {\n        case '0':\n            sum += heron(A, L, L);\n            continue;\n        case '1':\n            var ALX = Arr[i]['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            var A = ALX[0x0];\n            continue;\n        case '3':\n            console['log'](sum['toFixed'](0xa));\n            continue;\n        case '4':\n            var X = ALX[0x2];\n            continue;\n        case '5':\n            sum += heron(L, (L + X) / 0x2, (L + X) / 0x2) * 0x2;\n            continue;\n        case '6':\n            var L = ALX[0x1];\n            continue;\n        case '7':\n            var sum = 0x0;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2 2 1\n2 3 1\n3 2 3\n2 3 5", "3.9681187851\n6.7970540913\n6.5668891783\n13.9527248554"]], "original": "function heron(a,b,c){\n   var s=(a+b+c)/2;\n   var S=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n   return S;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nfor(var i=0;i<Arr.length;i++){\n   var ALX=Arr[i].split(\" \").map(Number);\n   var A=ALX[0];\n   var L=ALX[1];\n   var X=ALX[2];\n   var sum=0;\n   sum+=heron(A,L,L);\n   sum+=(heron(L,(L+X)/2,(L+X)/2)*2);\n   console.log(sum.toFixed(10));\n}", "language": "JavaScript"}
{"filename": "p00695_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nArr['push']('');\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var yx = [];\n    var dp = [];\n    for (var i = 0x0; i < 0x5; i++) {\n        var v = Arr['shift']()['split']('\\x20')['map'](Number);\n        yx['push'](v);\n        dp['push']([]);\n    }\n    for (var y = 0x0; y < 0x5; y++) {\n        for (var x = 0x0; x < 0x5; x++) {\n            if (y == 0x0)\n                dp[y][x] = yx[y][x] == 0x1 ? 0x1 : 0x0;\n            else\n                dp[y][x] = yx[y][x] == 0x1 ? dp[y - 0x1][x] + 0x1 : 0x0;\n        }\n    }\n    var max = 0x0;\n    for (var y = 0x0; y < 0x5; y++) {\n        for (var i = 0x0; i < 0x5; i++) {\n            for (var j = i; j < 0x5; j++) {\n                var min = Infinity;\n                for (var k = i; k <= j; k++)\n                    min = Math['min'](min, dp[y][k]);\n                max = Math['max'](max, min * (j - i + 0x1));\n            }\n        }\n    }\n    console['log'](max);\n    Arr['shift']();\n}", "test_cases": [["3\n1 1 0 1 0\n0 1 1 1 1\n1 0 1 0 1\n0 1 1 1 0\n0 1 1 0 0\n\n0 1 0 1 1\n0 1 0 1 0\n0 0 1 0 0\n0 0 1 1 0\n1 0 1 0 0\n\n1 1 1 1 0\n0 1 1 1 0\n0 1 1 0 1\n0 1 1 1 0\n0 0 0 0 1", "4\n3\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nArr.push(\"\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var yx=[];\n   var dp=[];\n   for(var i=0;i<5;i++){\n      var v=Arr.shift().split(\" \").map(Number);\n      yx.push(v);\n      dp.push([]);\n   }\n   for(var y=0;y<5;y++){\n      for(var x=0;x<5;x++){\n         if(y==0)dp[y][x]=(yx[y][x]==1)?1:0;\n         else dp[y][x]=(yx[y][x]==1)?dp[y-1][x]+1:0;\n      }\n   }\n   var max=0;\n   for(var y=0;y<5;y++){\n      for(var i=0;i<5;i++){\n         for(var j=i;j<5;j++){\n            var min=Infinity;\n            for(var k=i;k<=j;k++)min=Math.min(min,dp[y][k]);\n            max=Math.max(max,min*(j-i+1));\n         }\n      }\n   }\n   console.log(max);\n   Arr.shift();\n}", "language": "JavaScript"}
{"filename": "p00706_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var wh = arr['shift']()['split']('\\x20')['map'](Number);\n    var w = wh[0x0];\n    var h = wh[0x1];\n    var XY = [];\n    for (var i = 0x0; i < w; i++) {\n        XY[i] = [];\n        for (var j = 0x0; j < h; j++) {\n            XY[i][j] = 0x0;\n        }\n    }\n    while (n--) {\n        var xy = arr['shift']()['split']('\\x20')['map'](Number);\n        XY[xy[0x0] - 0x1][xy[0x1] - 0x1] = 0x1;\n    }\n    var st = arr['shift']()['split']('\\x20')['map'](Number);\n    var s = st[0x0];\n    var t = st[0x1];\n    var max = 0x0;\n    for (var i = 0x0; i <= w - s; i++) {\n        for (var j = 0x0; j <= h - t; j++) {\n            var sum = 0x0;\n            for (var x = 0x0; x < s; x++) {\n                for (var y = 0x0; y < t; y++) {\n                    sum += XY[i + x][j + y];\n                }\n            }\n            max = Math['max'](sum, max);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["16\n10 8\n2 2\n2 5\n2 7\n3 3\n3 8\n4 2\n4 5\n4 8\n6 4\n6 7\n7 5\n7 8\n8 1\n8 4\n9 6\n10 3\n4 3\n8\n6 4\n1 2\n2 1\n2 4\n3 4\n4 2\n5 3\n6 1\n6 2\n3 2\n0", "4\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var wh=arr.shift().split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var XY=[];\n   for(var i=0;i<w;i++){\n      XY[i]=[];\n      for(var j=0;j<h;j++){\n         XY[i][j]=0;\n      }\n   }\n   while(n--){\n      var xy=arr.shift().split(\" \").map(Number);\n      XY[xy[0]-1][xy[1]-1]=1;\n   }\n   var st=arr.shift().split(\" \").map(Number);\n   var s=st[0];\n   var t=st[1];\n   var max=0;\n   for(var i=0;i<=w-s;i++){\n      for(var j=0;j<=h-t;j++){\n         var sum=0;\n         for(var x=0;x<s;x++){\n            for(var y=0;y<t;y++){\n               sum+=XY[i+x][j+y];\n            }\n         }\n         max=Math.max(sum,max);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00711_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var xBzPoq = {\n        'QjUzw': function (x, y) {\n            return x < y;\n        },\n        'qZYAK': function (x, y) {\n            return x + y;\n        },\n        'vQnHX': function (x, y) {\n            return x + y;\n        },\n        'PCTpg': function (x, y) {\n            return x < y;\n        },\n        'BhCIT': function (x, y) {\n            return x < y;\n        },\n        'gJdXo': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var dy = [\n        0x0,\n        0x0,\n        -0x1,\n        0x1\n    ];\n    var dx = [\n        -0x1,\n        0x1,\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; xBzPoq['QjUzw'](i, 0x4); i++) {\n        var yy = xBzPoq['qZYAK'](y, dy[i]);\n        var xx = xBzPoq['vQnHX'](x, dx[i]);\n        if (xBzPoq['PCTpg'](yy, 0x0) || yy >= H || xBzPoq['BhCIT'](xx, 0x0) || xx >= W)\n            continue;\n        if (yx[yy][xx] == '.') {\n            cnt++;\n            yx[yy][xx] = cnt;\n            xBzPoq['gJdXo'](bomb, yy, xx);\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var WH = Arr['shift']()['split']('\\x20')['map'](Number);\n    var W = WH[0x0];\n    var H = WH[0x1];\n    if (W == 0x0 && H == 0x0)\n        break;\n    var yx = [];\n    var Y, X;\n    for (var i = 0x0; i < H; i++) {\n        var arr = Arr['shift']()['split']('');\n        if (arr['indexOf']('@') != -0x1) {\n            Y = i;\n            X = arr['indexOf']('@');\n        }\n        yx['push'](arr);\n    }\n    var cnt = 0x1;\n    bomb(Y, X);\n    console['log'](cnt);\n}", "test_cases": [["6 9\n....#.\n.....#\n......\n......\n......\n......\n......\n#@...#\n.#..#.\n11 9\n.#.........\n.#.#######.\n.#.#.....#.\n.#.#.###.#.\n.#.#..@#.#.\n.#.#####.#.\n.#.......#.\n.#########.\n...........\n11 6\n..#..#..#..\n..#..#..#..\n..#..#..###\n..#..#..#@.\n..#..#..#..\n..#..#..#..\n7 7\n..#.#..\n..#.#..\n###.###\n...@...\n###.###\n..#.#..\n..#.#..\n0 0", "45\n59\n6\n13"]], "original": "function bomb(y,x){\n   var dy=[0,0,-1,1];\n   var dx=[-1,1,0,0];\n   for(var i=0;i<4;i++){\n      var yy=y+dy[i];\n      var xx=x+dx[i];\n      if(yy<0 || yy>=H || xx<0 || xx>=W)continue;\n      if(yx[yy][xx]==\".\"){cnt++;yx[yy][xx]=cnt;bomb(yy,xx);}\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var WH=(Arr.shift()).split(\" \").map(Number);\n   var W=WH[0];\n   var H=WH[1];\n   if(W==0 && H==0)break;\n      var yx=[];\n      var Y,X;\n      for(var i=0;i<H;i++){\n         var arr=(Arr.shift()).split(\"\");\n         if(arr.indexOf(\"@\")!=-1){Y=i;X=arr.indexOf(\"@\");}\n         yx.push(arr);\n      }\n      var cnt=1;\n      bomb(Y,X);\n      console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00712_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var pqan = arr['shift']()['split']('\\x20')['map'](Number);\n    if (pqan['join']('\\x20') == '0\\x200\\x200\\x200')\n        break;\n    var p = pqan[0x0];\n    var q = pqan[0x1];\n    var a = pqan[0x2];\n    var n = pqan[0x3];\n    var ans = 0x0;\n    var loop = function (start, P, Q, A, cnt) {\n        var nztomC = {\n            'UqrOZ': function (x, y) {\n                return x * y;\n            },\n            'blaqm': function (x, y) {\n                return x < y;\n            },\n            'ufSpp': function (x, y) {\n                return x <= y;\n            },\n            'jWdTI': function (callee, param1, param2, param3, param4, param5) {\n                return callee(param1, param2, param3, param4, param5);\n            },\n            'mXqmA': function (x, y) {\n                return x + y;\n            },\n            'pYCYp': function (x, y) {\n                return x * y;\n            },\n            'qhSCw': function (x, y) {\n                return x + y;\n            }\n        };\n        if (cnt > 0x0) {\n            if (cnt > n)\n                return;\n            if (p * Q == nztomC['UqrOZ'](P, q)) {\n                ans++;\n                return;\n            } else if (nztomC['blaqm'](nztomC['UqrOZ'](p, Q), nztomC['UqrOZ'](P, q)))\n                return;\n        }\n        for (var i = start; nztomC['ufSpp'](nztomC['UqrOZ'](A, i), a); i++) {\n            nztomC['jWdTI'](loop, i, nztomC['mXqmA'](nztomC['pYCYp'](0x1, Q), nztomC['UqrOZ'](i, P)), nztomC['UqrOZ'](Q, i), nztomC['pYCYp'](A, i), nztomC['qhSCw'](cnt, 0x1));\n        }\n    };\n    loop(0x1, 0x0, 0x1, 0x1, 0x0);\n    console['log'](ans);\n}", "test_cases": [["2 3 120 3\n2 3 300 3\n2 3 299 3\n2 3 12 3\n2 3 12000 7\n54 795 12000 7\n2 3 300 1\n2 1 200 5\n2 4 54 2\n0 0 0 0", "4\n7\n6\n2\n42\n1\n0\n9\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var pqan=arr.shift().split(\" \").map(Number);\n   if(pqan.join(\" \")==\"0 0 0 0\")break;\n   var p=pqan[0];\n   var q=pqan[1];\n   var a=pqan[2];\n   var n=pqan[3];\n   var ans=0;\n   var loop=function(start,P,Q,A,cnt){\n      if(cnt>0){\n         if(cnt>n)return;\n         if(p*Q==P*q){\n            ans++;\n            return;\n         }else if(p*Q<P*q)return;\n      }\n      for(var i=start;A*i<=a;i++){\n         loop(i,1*Q+i*P,Q*i,A*i,cnt+1);\n      }\n   };\n   loop(1,0,1,1,0);\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p00746_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var N = Arr['shift']() - 0x0;\n    if (N == 0x0)\n        break;\n    if (N == 0x1) {\n        console['log']('1\\x201');\n        continue;\n    }\n    var arr = [];\n    arr[0x0] = [\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < N - 0x1; i++) {\n        var jHlPva = '2|1|5|4|6|9|8|0|3|7'['split']('|');\n        var gAJAas = 0x0;\n        while (!![]) {\n            switch (jHlPva[gAJAas++]) {\n            case '0':\n                if (m == 0x2)\n                    x = 0x1;\n                continue;\n            case '1':\n                var n = nm[0x0];\n                continue;\n            case '2':\n                var nm = Arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            case '3':\n                if (m == 0x3)\n                    y = 0x1;\n                continue;\n            case '4':\n                var x = 0x0;\n                continue;\n            case '5':\n                var m = nm[0x1];\n                continue;\n            case '6':\n                var y = 0x0;\n                continue;\n            case '7':\n                arr[i + 0x1] = [\n                    arr[n][0x0] + x,\n                    arr[n][0x1] + y\n                ];\n                continue;\n            case '8':\n                if (m == 0x1)\n                    y = -0x1;\n                continue;\n            case '9':\n                if (m == 0x0)\n                    x = -0x1;\n                continue;\n            }\n            break;\n        }\n    }\n    var xA = 0x0;\n    var xZ = 0x0;\n    var yA = 0x0;\n    var yZ = 0x0;\n    for (var i = 0x0; i < arr['length']; i++) {\n        xA = Math['min'](xA, arr[i][0x0]);\n        xZ = Math['max'](xZ, arr[i][0x0]);\n        yA = Math['min'](yA, arr[i][0x1]);\n        yZ = Math['max'](yZ, arr[i][0x1]);\n    }\n    console['log'](xZ - xA + 0x1 + '\\x20' + (yZ - yA + 0x1));\n}", "test_cases": [["1\n5\n0 0\n0 1\n0 2\n0 3\n12\n0 0\n1 0\n2 0\n3 1\n4 1\n5 1\n6 2\n7 2\n8 2\n9 3\n10 3\n10\n0 2\n1 2\n2 2\n3 2\n2 1\n5 1\n6 1\n7 1\n8 1\n0", "1 1\n3 3\n4 4\n5 6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var N=Arr.shift()-0;\n   if(N==0)break;\n   if(N==1){console.log(\"1 1\");continue;}\n   var arr=[];\n   arr[0]=[0,0];\n   for(var i=0;i<N-1;i++){\n      var nm=(Arr.shift()).split(\" \").map(Number);\n      var n=nm[0];\n      var m=nm[1];\n      var x=0;\n      var y=0;\n      if(m==0)x=-1;\n      if(m==1)y=-1\n      if(m==2)x=1;\n      if(m==3)y=1;\n      arr[i+1]=[arr[n][0]+x,arr[n][1]+y];\n   }\n   var xA=0;\n   var xZ=0;\n   var yA=0;\n   var yZ=0;\n   for(var i=0;i<arr.length;i++){\n      xA=Math.min(xA,arr[i][0]);\n      xZ=Math.max(xZ,arr[i][0]);\n      yA=Math.min(yA,arr[i][1]);\n      yZ=Math.max(yZ,arr[i][1]);\n   }\n   console.log((xZ-xA+1)+\" \"+(yZ-yA+1));\n}", "language": "JavaScript"}
{"filename": "p00761_1", "type": "JavaScript", "obfuscated": "function str1(x) {\n    var bapFqf = {\n        'bhpZZ': function (x, y) {\n            return x + y;\n        },\n        'BSJts': function (x, y) {\n            return x != y;\n        }\n    };\n    x = bapFqf['bhpZZ'](x, '');\n    while (bapFqf['BSJts'](x['length'], b))\n        x = '0' + x;\n    return x;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var ab = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (ab[0x0] == 0x0 && ab[0x1] == 0x0)\n        break;\n    var str = ab[0x0] + '';\n    var b = ab[0x1];\n    var arr = [];\n    str = str1(str);\n    arr['push'](str);\n    var i = 0x0;\n    while (!![]) {\n        i++;\n        var s = str['split']('');\n        s['sort'](function (a, b) {\n            var tHQsSK = {\n                'EhnLU': function (x, y) {\n                    return x - y;\n                }\n            };\n            return tHQsSK['EhnLU'](b, a);\n        });\n        var A = parseInt(s['join'](''), 0xa);\n        var B = parseInt(s['reverse']()['join'](''), 0xa);\n        var C = A - B;\n        var Cstr = str1(C);\n        if (arr['indexOf'](Cstr) != -0x1)\n            break;\n        arr['push'](Cstr);\n        str = Cstr;\n    }\n    console['log'](arr['indexOf'](Cstr) + '\\x20' + parseInt(Cstr, 0xa) + '\\x20' + (i - arr['indexOf'](Cstr)));\n}", "test_cases": [["2012 4\n83268 6\n1112 4\n0 1\n99 2\n0 0", "3 6174 1\n1 862632 7\n5 6174 1\n0 0 1\n1 0 1"]], "original": "function str1(x){\n   x=x+\"\";\n   while(x.length!=b)x=\"0\"+x;\n   return x;\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var ab=(Arr.shift()).split(\" \").map(Number);\n   if(ab[0]==0 && ab[1]==0)break;\n   var str=ab[0]+\"\";\n   var b=ab[1];\n   var arr=[];\n   str=str1(str);\n   arr.push(str);\n   var i=0;\n   while(true){\n      i++;\n      var s=str.split(\"\");\n      s.sort(function(a,b){return b-a;});\n      var A=parseInt(s.join(\"\"),10);\n      var B=parseInt(s.reverse().join(\"\"),10); \n      var C=A-B;\n      var Cstr=str1(C);     \n      if(arr.indexOf(Cstr)!=-1)break;\n      arr.push(Cstr);\n      str=Cstr; \n   }\n   console.log(arr.indexOf(Cstr)+\" \"+parseInt(Cstr,10)+\" \"+(i-arr.indexOf(Cstr)));\n}", "language": "JavaScript"}
{"filename": "p00768_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var MTPR = arr['shift']();\n    if (MTPR == '0\\x200\\x200\\x200')\n        break;\n    MTPR = MTPR['split']('\\x20')['map'](Number);\n    var team = [];\n    for (var i = 0x0; i < MTPR[0x1]; i++)\n        team['push']([\n            0x0,\n            0x0,\n            [\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0,\n                0x0\n            ],\n            i\n        ]);\n    for (var i = 0x0; i < MTPR[0x3]; i++) {\n        var Sqyjej = '2|3|5|0|4|1|6'['split']('|');\n        var NUkBOV = 0x0;\n        while (!![]) {\n            switch (Sqyjej[NUkBOV++]) {\n            case '0':\n                var p = mtpj[0x2] - 0x1;\n                continue;\n            case '1':\n                if (j == 0x0) {\n                    team[t][0x0]++;\n                    team[t][0x1] += m + team[t][0x2][p] * 0x14;\n                }\n                continue;\n            case '2':\n                var mtpj = arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            case '3':\n                var m = mtpj[0x0];\n                continue;\n            case '4':\n                var j = mtpj[0x3];\n                continue;\n            case '5':\n                var t = mtpj[0x1] - 0x1;\n                continue;\n            case '6':\n                if (j != 0x0)\n                    team[t][0x2][p]++;\n                continue;\n            }\n            break;\n        }\n    }\n    team['sort'](function (a, b) {\n        var wcMBWZ = {\n            'pCctt': function (x, y) {\n                return x == y;\n            },\n            'lzFVH': function (x, y) {\n                return x - y;\n            }\n        };\n        if (wcMBWZ['pCctt'](a[0x0], b[0x0]) && wcMBWZ['pCctt'](a[0x1], b[0x1]))\n            return wcMBWZ['lzFVH'](b[0x3], a[0x3]);\n        else if (wcMBWZ['pCctt'](a[0x0], b[0x0]))\n            return a[0x1] - b[0x1];\n        else\n            return wcMBWZ['lzFVH'](b[0x0], a[0x0]);\n    });\n    var ans = [];\n    var same = [\n        -0x1,\n        -0x1\n    ];\n    team['forEach'](function (v, i) {\n        var JzxKFW = {\n            'nrvif': function (x, y) {\n                return x == y;\n            },\n            'QLkvf': function (x, y) {\n                return x - y;\n            },\n            'IOyrv': function (x, y) {\n                return x + y;\n            }\n        };\n        if (JzxKFW['nrvif'](same[0x0], v[0x0]) && JzxKFW['nrvif'](same[0x1], v[0x1]))\n            ans[JzxKFW['QLkvf'](ans['length'], 0x1)] += '=' + JzxKFW['IOyrv'](v[0x3], 0x1);\n        else {\n            ans['push'](JzxKFW['IOyrv'](v[0x3], 0x1));\n            same = [\n                v[0x0],\n                v[0x1]\n            ];\n        }\n    });\n    console['log'](ans['join'](','));\n}", "test_cases": [["300 10 8 5\n50 5 2 1\n70 5 2 0\n75 1 1 0\n100 3 1 0\n150 3 2 0\n240 5 5 7\n50 1 1 0\n60 2 2 0\n70 2 3 0\n90 1 3 0\n120 3 5 0\n140 4 1 0\n150 2 4 1\n180 3 5 4\n15 2 2 1\n20 2 2 1\n25 2 2 0\n60 1 1 0\n120 5 5 4\n15 5 4 1\n20 5 4 0\n40 1 1 0\n40 2 2 0\n120 2 3 4\n30 1 1 0\n40 2 1 0\n50 2 2 0\n60 1 2 0\n120 3 3 2\n0 1 1 0\n1 2 2 0\n300 5 8 0\n0 0 0 0", "3,1,5,10=9=8=7=6=4=2\n2,1,3,4,5\n1,2,3\n5=2=1,4=3\n2=1\n1,2,3\n5=4=3=2=1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var MTPR=arr.shift();\n   if(MTPR==\"0 0 0 0\")break;\n   MTPR=MTPR.split(\" \").map(Number);\n   var team=[];\n   for(var i=0;i<MTPR[1];i++)team.push([0,0,[0,0,0,0,0,0,0,0,0,0],i]);\n   for(var i=0;i<MTPR[3];i++){\n      var mtpj=arr.shift().split(\" \").map(Number);\n      var m=mtpj[0];\n      var t=mtpj[1]-1;\n      var p=mtpj[2]-1;\n      var j=mtpj[3];\n      if(j==0){\n         team[t][0]++;\n         team[t][1]+=m+team[t][2][p]*20;\n      }\n      if(j!=0)team[t][2][p]++;\n   }\n   team.sort(function(a,b){\n      if(a[0]==b[0] && a[1]==b[1])return b[3]-a[3];\n      else if(a[0]==b[0])return a[1]-b[1];\n      else return b[0]-a[0];\n   });\n   var ans=[];\n   var same=[-1,-1];\n   team.forEach(function(v,i){\n      if(same[0]==v[0] && same[1]==v[1])ans[ans.length-1]+=\"=\"+(v[3]+1);\n      else {ans.push(v[3]+1);same=[v[0],v[1]];}\n   });\n   console.log(ans.join(\",\"));\n}", "language": "JavaScript"}
{"filename": "p00769_1", "type": "JavaScript", "obfuscated": "function saiki(str, flag) {\n    var TDOFWQ = {\n        'OdFUP': function (x, y) {\n            return x / y;\n        },\n        'jloHF': function (x, y) {\n            return x + y;\n        }\n    };\n    while (!![]) {\n        if (/\\[{2}\\d.*?\\]{2}/['test'](str)) {\n            str = str['replace'](/\\[{2}\\d.*?\\]{2}/, function (s) {\n                var d = s['slice'](0x2, -0x2)['split']('][')['map'](Number);\n                d['sort']((a, b) => a - b);\n                var sum = 0x0;\n                for (var i = 0x0; i < Math['ceil'](d['length'] / 0x2); i++) {\n                    if (flag)\n                        sum += Math['floor'](TDOFWQ['OdFUP'](d[i], 0x2)) + 0x1;\n                    else\n                        sum += Math['floor'](d[i]);\n                }\n                return TDOFWQ['jloHF']('(', sum) + ')';\n            });\n        } else\n            break;\n    }\n    str = str['replace'](/\\(/g, '[');\n    str = str['replace'](/\\)/g, ']');\n    return str;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\narr['forEach'](str => {\n    var GqbZYm = {\n        'SZbDQ': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    str = GqbZYm['SZbDQ'](saiki, str, !![]);\n    while (/\\[\\[/['test'](str))\n        str = GqbZYm['SZbDQ'](saiki, str, ![]);\n    console['log'](str['replace'](/\\[|\\]/g, ''));\n});", "test_cases": [["6\n[[123][4567][89]]\n[[5][3][7][3][9]]\n[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]\n[[[37][95][31][77][15]][[43][5][5][5][85]][[71][3][51][89][29]][[57][95][5][69][31]][[99][59][65][73][31]]]\n[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]\n[[8231][3721][203][3271][8843]]", "107\n7\n175\n95\n21\n3599"]], "original": "function saiki(str,flag){\n   while(true){\n      if(/\\[{2}\\d.*?\\]{2}/.test(str)){\n         str=str.replace(/\\[{2}\\d.*?\\]{2}/,function(s){\n               var d =s.slice(2,-2).split(\"][\").map(Number);\n               d.sort((a,b)=> a-b);\n               var sum=0;\n               for(var i=0;i<Math.ceil(d.length/2);i++){\n                  if(flag) sum+=Math.floor(d[i]/2)+1;\n                  else sum+=Math.floor(d[i]);\n               }\n               return \"(\"+sum+\")\";\n            });\n      }else break;\n   }\n   str=str.replace(/\\(/g,\"[\");\n   str=str.replace(/\\)/g,\"]\");\n   return str;\n }\n  \nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\n\narr.forEach(str=>{\n   str=saiki(str,true);\n   while(/\\[\\[/.test(str))str=saiki(str,false);\n    console.log(str.replace(/\\[|\\]/g,\"\"));\n});\n", "language": "JavaScript"}
{"filename": "p00780_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var iaQKxn = {\n        'SoXFs': function (x, y) {\n            return x <= y;\n        },\n        'ZWBCG': function (x, y) {\n            return x + y;\n        },\n        'qWCye': function (x, y) {\n            return x <= y;\n        },\n        'Bgjix': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; iaQKxn['SoXFs'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (arr[i] == ![])\n            continue;\n        for (var j = iaQKxn['ZWBCG'](i, i); iaQKxn['qWCye'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; iaQKxn['qWCye'](i, max); i++) {\n        if (iaQKxn['Bgjix'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0xc350);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var cnt = 0x0;\n    var k = p['length'] - 0x1;\n    for (var i = 0x0; i < p['length']; i++) {\n        while (p[i] + p[k] > n)\n            k--;\n        if (k < i)\n            break;\n        if (p[i] + p[k] == n)\n            cnt++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["6\n10\n12\n0", "1\n2\n1"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(50000);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var cnt=0;\n   var k=p.length-1;\n   for(var i=0;i<p.length;i++){\n      while(p[i]+p[k]>n)k--;\n      if(k<i)break;\n      if(p[i]+p[k]==n)cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p00789_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nwhile (!![]) {\n    var n = arr['shift']();\n    if (n == 0x0)\n        break;\n    var coin = [''];\n    for (var i = 0x1; i <= 0x11; i++)\n        coin['push'](i * i);\n    var dp = [];\n    for (var i = 0x0; i <= 0x11; i++) {\n        dp[i] = [];\n        for (var j = 0x0; j <= n; j++) {\n            dp[i][j] = 0x0;\n        }\n    }\n    dp[0x0][0x0] = 0x1;\n    for (var i = 0x1; i <= 0x11; i++) {\n        for (var j = 0x0; j <= n; j++) {\n            var k = 0x0;\n            while (coin[i] * k + j <= n) {\n                dp[i][coin[i] * k + j] += dp[i - 0x1][j];\n                k++;\n            }\n        }\n    }\n    console['log'](dp[0x11][n]);\n}", "test_cases": [["2\n10\n30\n0", "1\n4\n27"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   var coin=[\"\"];\n   for(var i=1;i<=17;i++)coin.push(i*i);\n   var dp=[];\n   for(var i=0;i<=17;i++){\n      dp[i]=[];\n      for(var j=0;j<=n;j++){\n         dp[i][j]=0;\n      }\n   }\n   dp[0][0]=1;\n   for(var i=1;i<=17;i++){\n      for(var j=0;j<=n;j++){\n        var k=0;\n         while(coin[i]*k+j<=n){\n            dp[i][coin[i]*k+j]+=dp[i-1][j];\n            k++;\n         }\n      }\n   }\n   console.log(dp[17][n]);\n}", "language": "JavaScript"}
{"filename": "p00803_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nwhile (!![]) {\n    var n = arr['shift']();\n    if (n == 0x0)\n        break;\n    var max = 0x0;\n    for (var i = 0x0; i <= 0x36; i++) {\n        for (var j = 0x0; j <= 0x60; j++) {\n            var sum = i * i * i + j * (j + 0x1) * (j + 0x2) / 0x6;\n            if (n >= sum)\n                max = Math['max'](max, sum);\n        }\n    }\n    console['log'](max);\n}", "test_cases": [["100\n64\n50\n20\n151200\n0", "99\n64\n47\n20\n151200"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nwhile(true){\n   var n=arr.shift();\n   if(n==0)break;\n   var max=0;\n   for(var i=0;i<=54;i++){\n      for(var j=0;j<=96;j++){\n         var sum=i*i*i+(j*(j+1)*(j+2))/6;\n         if(n>=sum)max=Math.max(max,sum);\n      }\n   }\n   console.log(max);\n}", "language": "JavaScript"}
{"filename": "p00811_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var aTgmRk = {\n        'EbNtS': function (x, y) {\n            return x <= y;\n        },\n        'rvjAa': function (x, y) {\n            return x == y;\n        },\n        'JOmvK': function (x, y) {\n            return x + y;\n        },\n        'jAYxr': function (x, y) {\n            return x <= y;\n        },\n        'DiFeR': function (x, y) {\n            return x <= y;\n        },\n        'NzGzP': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; aTgmRk['EbNtS'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; i <= sqrt; i++) {\n        if (aTgmRk['rvjAa'](arr[i], ![]))\n            continue;\n        for (var j = aTgmRk['JOmvK'](i, i); aTgmRk['jAYxr'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; aTgmRk['DiFeR'](i, max); i++) {\n        if (aTgmRk['NzGzP'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar PRIME = prime(0x186a0);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr['some'](function (v) {\n    var PNZXBt = {\n        'fZceQ': function (x, y) {\n            return x == y;\n        },\n        'GxJYm': function (x, y) {\n            return x < y;\n        },\n        'DoRAK': function (x, y) {\n            return x * y;\n        },\n        'OHaQG': function (x, y) {\n            return x > y;\n        },\n        'HExlW': function (x, y) {\n            return x <= y;\n        },\n        'lnAvp': function (x, y) {\n            return x * y;\n        },\n        'sbgBz': function (x, y) {\n            return x < y;\n        },\n        'TMjrz': function (x, y) {\n            return x + y;\n        }\n    };\n    if (PNZXBt['fZceQ'](v, '0\\x200\\x200'))\n        return !![];\n    var mab = v['split']('\\x20')['map'](Number);\n    var m = mab[0x0];\n    var a = mab[0x1];\n    var b = mab[0x2];\n    var ans = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    for (var p = 0x0; PNZXBt['GxJYm'](p, PRIME['length']); p++) {\n        for (var q = p; PNZXBt['GxJYm'](q, PRIME['length']); q++) {\n            var pq = PNZXBt['DoRAK'](PRIME[p], PRIME[q]);\n            if (PNZXBt['OHaQG'](pq, m))\n                break;\n            if (PNZXBt['HExlW'](PNZXBt['lnAvp'](PRIME[q], a), PNZXBt['lnAvp'](PRIME[p], b)) && PNZXBt['sbgBz'](ans[0x2], pq))\n                ans = [\n                    PRIME[p],\n                    PRIME[q],\n                    pq\n                ];\n        }\n    }\n    console['log'](PNZXBt['TMjrz'](PNZXBt['TMjrz'](ans[0x0], '\\x20'), ans[0x1]));\n});", "test_cases": [["5 1 2\n99999 999 999\n1680 5 16\n1970 1 1\n2002 4 11\n0 0 0", "2 2\n313 313\n23 73\n43 43\n37 53"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar PRIME=prime(100000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.some(function(v){\n   if(v==\"0 0 0\")return true;\n   var mab=v.split(\" \").map(Number);\n   var m=mab[0];\n   var a=mab[1];\n   var b=mab[2];\n   var ans=[0,0,0];\n   for(var p=0;p<PRIME.length;p++){\n      for(var q=p;q<PRIME.length;q++){\n         var pq=PRIME[p]*PRIME[q];\n         if(pq>m)break;\n         if(PRIME[q]*a <= PRIME[p]*b && ans[2]<pq)ans=[PRIME[p],PRIME[q],pq]\n      }\n   }\n   console.log(ans[0]+\" \"+ans[1]);\n});", "language": "JavaScript"}
{"filename": "p00819_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar n = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < n; I++) {\n    var arr = Arr['shift']()['split']('')['reverse']();\n    var str = Arr['shift']();\n    var x = str['length'];\n    arr['forEach'](function (v) {\n        var QffXMV = {\n            'okNWp': function (x, y) {\n                return x == y;\n            },\n            'aBRcJ': function (x, y) {\n                return x - y;\n            },\n            'ZkILa': function (x, y) {\n                return x + y;\n            },\n            'dtQsz': function (x, y) {\n                return x + y;\n            },\n            'NleMU': function (x, y) {\n                return x % y;\n            },\n            'NDAgb': function (x, y) {\n                return x + y;\n            },\n            'esfJo': function (x, y) {\n                return x / y;\n            },\n            'RZlrP': function (x, y) {\n                return x + y;\n            },\n            'rEOsk': function (x, y) {\n                return x / y;\n            },\n            'HnbXA': function (x, y) {\n                return x == y;\n            }\n        };\n        if (v == 'J')\n            str = str['slice'](-0x1) + str['slice'](0x0, -0x1);\n        else if (v == 'C')\n            str = QffXMV['dtQsz'](str['slice'](0x1), str['slice'](0x0, 0x1));\n        else if (v == 'E' && QffXMV['okNWp'](QffXMV['NleMU'](x, 0x2), 0x0))\n            str = QffXMV['NDAgb'](str['slice'](x / 0x2, x), str['slice'](0x0, QffXMV['esfJo'](x, 0x2)));\n        else if (QffXMV['okNWp'](v, 'E') && QffXMV['NleMU'](x, 0x2) == 0x1)\n            str = QffXMV['dtQsz'](QffXMV['RZlrP'](str['slice'](QffXMV['NDAgb'](~~QffXMV['rEOsk'](x, 0x2), 0x1), x), str[~~(x / 0x2)]), str['slice'](0x0, ~~(x / 0x2)));\n        else if (v == 'A')\n            str = str['split']('')['reverse']()['join']('');\n        else if (QffXMV['HnbXA'](v, 'P'))\n            str = str['replace'](/\\d/g, function (s) {\n                return QffXMV['okNWp'](s, '0') ? '9' : QffXMV['aBRcJ'](QffXMV['aBRcJ'](s, 0x0), 0x1);\n            });\n        else if (QffXMV['HnbXA'](v, 'M'))\n            str = str['replace'](/\\d/g, function (s) {\n                return QffXMV['okNWp'](s, '9') ? '0' : QffXMV['ZkILa'](QffXMV['aBRcJ'](s, 0x0), 0x1);\n            });\n    });\n    console['log'](str);\n}", "test_cases": [["5\nAJMP\naB23d\nE\n86AE\nAM\n6\nJPEM\nWaEaETC302Q\nCP\nrTurnAGundam1isdefferentf", "32Bad\nAE86\n7\nEC302QTWaEa\nTurnAGundam0isdefferentfr"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar n=Arr.shift()-0;\nfor(var I=0;I<n;I++){\n   var arr=Arr.shift().split(\"\").reverse();\n   var str=Arr.shift();\n   var x=str.length;\n   arr.forEach(function(v){\n      if(v==\"J\")str=str.slice(-1)+str.slice(0,-1);\n      else if(v==\"C\")str=str.slice(1)+str.slice(0,1);\n      else if(v==\"E\" && x%2==0)str=str.slice(x/2,x)+str.slice(0,x/2);\n      else if(v==\"E\" && x%2==1)str=str.slice(~~(x/2)+1,x)+str[~~(x/2)]+str.slice(0,~~(x/2));\n      else if(v==\"A\")str=str.split(\"\").reverse().join(\"\");\n      else if(v==\"P\")str=str.replace(/\\d/g,function(s){return (s==\"0\")?\"9\":(s-0)-1;});\n      else if(v==\"M\")str=str.replace(/\\d/g,function(s){return (s==\"9\")?\"0\":(s-0)+1;});\n   });\n   console.log(str);\n}", "language": "JavaScript"}
{"filename": "p00820_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\narr['some'](function (v) {\n    var iDRPdN = {\n        'MOaNd': function (x, y) {\n            return x == y;\n        },\n        'moedM': function (x, y) {\n            return x <= y;\n        },\n        'FHtEY': function (x, y) {\n            return x * y;\n        },\n        'EzWOa': function (x, y) {\n            return x < y;\n        },\n        'IRelf': function (x, y) {\n            return x + y;\n        },\n        'hReyZ': function (x, y) {\n            return x * y;\n        },\n        'Bahgx': function (x, y) {\n            return x == y;\n        },\n        'jyzlG': function (x, y) {\n            return x < y;\n        },\n        'iZUVd': function (x, y) {\n            return x < y;\n        }\n    };\n    if (iDRPdN['MOaNd'](v, 0x0))\n        return !![];\n    var cnt = 0x0;\n    for (var a = 0x1; iDRPdN['moedM'](a, 0xb5); a++) {\n        var A = iDRPdN['FHtEY'](a, a);\n        if (iDRPdN['EzWOa'](v, A))\n            break;\n        if (A == v)\n            cnt++;\n        for (var b = a; b <= 0xb5; b++) {\n            var B = iDRPdN['IRelf'](A, iDRPdN['hReyZ'](b, b));\n            if (v < B)\n                break;\n            if (iDRPdN['Bahgx'](B, v))\n                cnt++;\n            for (var c = b; iDRPdN['moedM'](c, 0xb5); c++) {\n                var C = B + c * c;\n                if (iDRPdN['jyzlG'](v, C))\n                    break;\n                if (iDRPdN['MOaNd'](C, v))\n                    cnt++;\n                for (var d = c; d <= 0xb5; d++) {\n                    var D = iDRPdN['IRelf'](C, iDRPdN['hReyZ'](d, d));\n                    if (iDRPdN['iZUVd'](v, D))\n                        break;\n                    if (D == v)\n                        cnt++;\n                }\n            }\n        }\n    }\n    console['log'](cnt);\n});", "test_cases": [["1\n25\n2003\n211\n20007\n0", "1\n3\n48\n7\n738"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\narr.some(function(v){\n   if(v==0)return true;\n   var cnt=0;\n   for(var a=1;a<=181;a++){\n      var A=a*a;\n      if(v<A)break;\n      if(A==v)cnt++;\n      for(var b=a;b<=181;b++){\n         var B=A+b*b;\n         if(v<B)break;\n         if(B==v)cnt++;\n         for(var c=b;c<=181;c++){\n            var C=B+c*c;\n            if(v<C)break;\n            if(C==v)cnt++;\n            for(var d=c;d<=181;d++){\n               var D=C+d*d;\n               if(v<D)break;\n               if(D==v)cnt++;\n   }}}}\n   console.log(cnt);\n});", "language": "JavaScript"}
{"filename": "p00836_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var YJRXdx = {\n        'NoFCJ': function (x, y) {\n            return x <= y;\n        },\n        'VGgNN': function (x, y) {\n            return x == y;\n        },\n        'Kyhte': function (x, y) {\n            return x + y;\n        },\n        'iJEWv': function (x, y) {\n            return x <= y;\n        },\n        'UYPjo': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; YJRXdx['NoFCJ'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; YJRXdx['NoFCJ'](i, sqrt); i++) {\n        if (YJRXdx['VGgNN'](arr[i], ![]))\n            continue;\n        for (var j = YJRXdx['Kyhte'](i, i); YJRXdx['iJEWv'](j, max); j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; i <= max; i++) {\n        if (YJRXdx['UYPjo'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x2710);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar cnt = [];\nfor (var i = 0x0; i <= 0x2710; i++)\n    cnt[i] = 0x0;\np['forEach'](function (v, index) {\n    var TDojay = {\n        'jKIgz': function (x, y) {\n            return x + y;\n        },\n        'LJsOZ': function (x, y) {\n            return x < y;\n        },\n        'vFIxy': function (x, y) {\n            return x > y;\n        }\n    };\n    cnt[v]++;\n    for (var i = TDojay['jKIgz'](index, 0x1); TDojay['LJsOZ'](i, p['length']); i++) {\n        v += p[i];\n        if (TDojay['vFIxy'](v, 0x2710))\n            break;\n        cnt[v]++;\n    }\n});\narr['some'](function (v) {\n    var mBiQAq = {\n        'Zkgch': function (x, y) {\n            return x == y;\n        }\n    };\n    if (mBiQAq['Zkgch'](v, 0x0))\n        return !![];\n    console['log'](cnt[v]);\n});", "test_cases": [["2\n3\n17\n41\n20\n666\n12\n53\n0", "1\n1\n2\n3\n0\n0\n1\n2"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n         for(var j=i+i;j<=max;j+=i){\n            arr[j]=false;\n         }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(10000);\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar cnt=[];\nfor(var i=0;i<=10000;i++)cnt[i]=0;\np.forEach(function(v,index){\n   cnt[v]++;\n   for(var i=index+1;i<p.length;i++){\n      v+=p[i];\n      if(v>10000)break;\n      cnt[v]++;\n   }\n});\narr.some(function(v){\n   if(v==0)return true;\n   console.log(cnt[v]);\n});", "language": "JavaScript"}
{"filename": "p00855_1", "type": "JavaScript", "obfuscated": "function prime(max) {\n    var HlJhbU = {\n        'TTrhZ': function (x, y) {\n            return x <= y;\n        },\n        'xuqxj': function (x, y) {\n            return x == y;\n        },\n        'AnLKC': function (x, y) {\n            return x + y;\n        },\n        'ZRuOM': function (x, y) {\n            return x <= y;\n        },\n        'OagFR': function (x, y) {\n            return x !== y;\n        }\n    };\n    var arr = [];\n    for (var i = 0x0; HlJhbU['TTrhZ'](i, max); i++)\n        arr[i] = i;\n    arr[0x0] = ![];\n    arr[0x1] = ![];\n    var sqrt = Math['floor'](Math['sqrt'](max));\n    for (var i = 0x2; HlJhbU['TTrhZ'](i, sqrt); i++) {\n        if (HlJhbU['xuqxj'](arr[i], ![]))\n            continue;\n        for (var j = HlJhbU['AnLKC'](i, i); j <= max; j += i) {\n            arr[j] = ![];\n        }\n    }\n    var result = [];\n    for (var i = 0x0; HlJhbU['ZRuOM'](i, max); i++) {\n        if (HlJhbU['OagFR'](arr[i], ![]))\n            result['push'](arr[i]);\n    }\n    return result;\n}\nvar p = prime(0x13d4fd);\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a')['map'](Number);\nfor (var i = 0x0; i < Arr['length']; i++) {\n    var a = Arr[i];\n    if (a == 0x0)\n        break;\n    for (var j = 0x0; j < p['length']; j++) {\n        if (p[j] == a) {\n            console['log'](0x0);\n            break;\n        }\n        if (p[j] > a) {\n            console['log'](p[j] - p[j - 0x1]);\n            break;\n        }\n    }\n}", "test_cases": [["10\n11\n27\n2\n492170\n0", "4\n0\n6\n0\n114"]], "original": "function prime(max){\n   var arr=[];\n   for(var i=0;i<=max;i++)arr[i]=i;\n   arr[0]=false;\n   arr[1]=false;\n   var sqrt=Math.floor(Math.sqrt(max));\n   for(var i=2;i<=sqrt;i++){\n      if(arr[i]==false)continue;\n      for(var j=i+i;j<=max;j+=i){\n         arr[j]=false;\n      }\n   }\n   var result=[];\n   for(var i=0;i<=max;i++){\n      if(arr[i]!==false)result.push(arr[i]);\n   }\n   return result;\n}\nvar p=prime(1299709);\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\").map(Number);\nfor(var i=0;i<Arr.length;i++){\n   var a=Arr[i];\n   if(a==0)break;\n   for(var j=0;j<p.length;j++){\n      if(p[j]==a){console.log(0);break;}\n      if(p[j]>a){console.log(p[j]-p[j-1]);break;}\n   }\n}", "language": "JavaScript"}
{"filename": "p00874_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var wd = arr['shift']();\n    if (wd == '0\\x200')\n        break;\n    var W = arr['shift']()['split']('\\x20')['map'](Number);\n    var D = arr['shift']()['split']('\\x20')['map'](Number);\n    var sum = W['reduce'](function (a, b) {\n        var hzsMCE = {\n            'Vnnib': function (x, y) {\n                return x + y;\n            }\n        };\n        return hzsMCE['Vnnib'](a, b);\n    });\n    D['forEach'](function (v) {\n        var index = W['indexOf'](v);\n        if (index != -0x1)\n            W[index] = '';\n        else\n            sum += v;\n    });\n    console['log'](sum);\n}", "test_cases": [["5 5\n1 2 3 4 5\n1 2 3 4 5\n5 5\n2 5 4 1 3\n4 1 5 3 2\n5 5\n1 2 3 4 5\n3 3 3 4 5\n3 3\n7 7 7\n7 7 7\n3 3\n4 4 4\n4 3 4\n4 3\n4 2 2 4\n4 2 1\n4 4\n2 8 8 8\n2 3 8 3\n10 10\n9 9 9 9 9 9 9 9 9 9\n9 9 9 9 9 9 9 9 9 9\n10 9\n20 1 20 20 20 20 20 18 20 20\n20 20 20 20 7 20 20 20 20\n0 0", "15\n15\n21\n21\n15\n13\n32\n90\n186"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wd=arr.shift();\n   if(wd==\"0 0\")break;\n   var W=arr.shift().split(\" \").map(Number);\n   var D=arr.shift().split(\" \").map(Number);\n   var sum=W.reduce(function(a,b){return a+b;});\n   D.forEach(function(v){\n      var index=W.indexOf(v);\n      if(index!=-1)W[index]=\"\";\n      else sum+=v;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p00875_1", "type": "JavaScript", "obfuscated": "function BFS() {\n    var RxyVEb = {\n        'rxctS': function (x, y) {\n            return x <= y;\n        },\n        'AvnKv': function (x, y) {\n            return x == y;\n        }\n    };\n    var bfs = [[\n            s0,\n            0x0\n        ]];\n    while (!![]) {\n        if (RxyVEb['AvnKv'](bfs['length'], 0x0))\n            break;\n        var [leaf, cnt] = bfs['shift']();\n        if (RxyVEb['AvnKv'](leaf, s1)) {\n            flag = !![];\n            console['log'](cnt);\n            break;\n        }\n        ab['forEach'](v => {\n            if (leaf['includes'](v[0x0])) {\n                var re = new RegExp(v[0x0], 'g');\n                var str = leaf['replace'](re, v[0x1]);\n                if (RxyVEb['rxctS'](str['length'], 0xa))\n                    bfs['push']([\n                        str,\n                        cnt + 0x1\n                    ]);\n            }\n        });\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var ab = arr['slice'](0x0, n)['map'](v => v['split']('\\x20'));\n    ;\n    arr = arr['slice'](n);\n    var s0 = arr['shift']();\n    var s1 = arr['shift']();\n    var flag = ![];\n    BFS();\n    if (!flag)\n        console['log'](-0x1);\n}", "test_cases": [["2\na bb\nb aa\na\nbbbbbbbb\n1\na aa\na\naaaaa\n3\nab aab\nabc aadc\nad dee\nabc\ndeeeeeeeec\n10\na abc\nb bai\nc acf\nd bed\ne abh\nf fag\ng abe\nh bag\ni aaj\nj bbb\na\nabacfaabe\n0", "3\n-1\n7\n4"]], "original": "function BFS(){\n   var bfs=[[s0,0]];\n   while(true){\n      if(bfs.length==0)break;\n      var [leaf,cnt]=bfs.shift();\n      if(leaf==s1){\n         flag=true;\n         console.log(cnt);\n         break;\n      }\n      ab.forEach(v=>{\n         if(leaf.includes(v[0])){\n            var re = new RegExp(v[0], \"g\");\n            var str = leaf.replace(re,v[1]);\n            if(str.length<=10)bfs.push([str,cnt+1]);\n         }\n      });\n   }\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ab=arr.slice(0,n).map(v=> v.split(\" \"));;\n   arr=arr.slice(n);\n   var s0=arr.shift();\n   var s1=arr.shift();\n   var flag=false;\n   BFS();\n   if(!flag)console.log(-1);\n}\n", "language": "JavaScript"}
{"filename": "p00914_1", "type": "JavaScript", "obfuscated": "function kumiawase(start, end, len) {\n    var IlrGTM = {\n        'KFBVL': function (x, y) {\n            return x == y;\n        },\n        'kYQUz': function (x, y) {\n            return x <= y;\n        },\n        'FQqGH': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'GUZhm': function (x, y) {\n            return x + y;\n        }\n    };\n    var ans = [];\n    var loop = function (a, arr) {\n        if (IlrGTM['KFBVL'](arr['length'], len))\n            ans['push'](arr);\n        else {\n            for (var i = a; IlrGTM['kYQUz'](i, end); i++)\n                IlrGTM['FQqGH'](loop, IlrGTM['GUZhm'](i, 0x1), arr['concat'](i));\n        }\n    };\n    IlrGTM['FQqGH'](loop, start, []);\n    return ans;\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr['some'](function (v, i) {\n    var RjjhhZ = {\n        'dzCaE': function (x, y) {\n            return x + y;\n        },\n        'SCWBj': function (x, y) {\n            return x == y;\n        },\n        'HlgNa': function (callee, param1, param2, param3) {\n            return callee(param1, param2, param3);\n        },\n        'dmdHE': '0\\x200\\x200'\n    };\n    var xtKleL = '0|4|1|3|5|6|2'['split']('|');\n    var tlcLSp = 0x0;\n    while (!![]) {\n        switch (xtKleL[tlcLSp++]) {\n        case '0':\n            var nFMfOe = {\n                'hncXN': function (x, y) {\n                    return RjjhhZ['dzCaE'](x, y);\n                },\n                'LcOsN': function (x, y) {\n                    return RjjhhZ['SCWBj'](x, y);\n                }\n            };\n            continue;\n        case '1':\n            var nks = v['split']('\\x20')['map'](Number);\n            continue;\n        case '2':\n            console['log'](cnt);\n            continue;\n        case '3':\n            var ary = RjjhhZ['HlgNa'](kumiawase, 0x1, nks[0x0], nks[0x1]);\n            continue;\n        case '4':\n            if (RjjhhZ['SCWBj'](v, RjjhhZ['dmdHE']))\n                return !![];\n            continue;\n        case '5':\n            var cnt = 0x0;\n            continue;\n        case '6':\n            ary['forEach'](function (v) {\n                var sum = v['reduce'](function (a, b) {\n                    return nFMfOe['hncXN'](a, b);\n                });\n                if (nFMfOe['LcOsN'](sum, nks[0x2]))\n                    cnt++;\n            });\n            continue;\n        }\n        break;\n    }\n});", "test_cases": [["9 3 23\n9 3 22\n10 3 28\n16 10 107\n20 8 102\n20 10 105\n20 10 155\n3 4 3\n4 2 11\n0 0 0", "1\n2\n0\n20\n1542\n5448\n1\n0\n0"]], "original": "function kumiawase(start,end,len){\n   var ans=[];\n   var loop=function(a,arr){\n      if(arr.length==len)ans.push(arr);\n      else{\n         for(var i=a;i<=end;i++)loop(i+1,arr.concat(i));\n      }\n   }\n   loop(start,[]);\n   return ans;\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\narr.some(function(v,i){\n   if(v==\"0 0 0\")return true;\n   var nks=v.split(\" \").map(Number);\n   var ary=kumiawase(1,nks[0],nks[1]);\n   var cnt=0;\n   ary.forEach(function(v){\n      var sum=v.reduce(function(a,b){return a+b;});\n      if(sum==nks[2])cnt++;\n   });\n   console.log(cnt);\n});", "language": "JavaScript"}
{"filename": "p00926_1", "type": "JavaScript", "obfuscated": "var n, m;\nvar x = [];\nfunction main() {\n    var xzkNUj = {\n        'KsKjD': function (callee) {\n            return callee();\n        },\n        'GGRSC': function (callee) {\n            return callee();\n        },\n        'LWGgu': function (x, y) {\n            return x - y;\n        },\n        'mXVEA': function (x, y) {\n            return x > y;\n        },\n        'KcvRK': function (callee) {\n            return callee();\n        },\n        'uoZyI': function (callee) {\n            return callee();\n        },\n        'kEaYM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'eGSrh': function (callee, param1) {\n            return callee(param1);\n        },\n        'EWfZy': function (x, y) {\n            return x + y;\n        },\n        'SwFVI': function (x, y) {\n            return x * y;\n        }\n    };\n    n = xzkNUj['KcvRK'](scan);\n    m = xzkNUj['uoZyI'](scan);\n    xzkNUj['kEaYM'](rep, n, function (i) {\n        x[i] = 0x0;\n    });\n    xzkNUj['kEaYM'](rep, m, function (i) {\n        var c = xzkNUj['KsKjD'](scan);\n        var d = xzkNUj['GGRSC'](scan);\n        x[c] += 0x1;\n        x[d] -= 0x1;\n    });\n    rep(0x1, n, function (i) {\n        x[i] += x[xzkNUj['LWGgu'](i, 0x1)];\n    });\n    var c = 0x0;\n    xzkNUj['kEaYM'](rep, n, function (i) {\n        if (xzkNUj['mXVEA'](x[i], 0x0)) {\n            ++c;\n        }\n    });\n    xzkNUj['eGSrh'](print, xzkNUj['EWfZy'](xzkNUj['SwFVI'](c, 0x2), n) + 0x1);\n}\nfunction rep(a, b, c) {\n    var GKCzQL = {\n        'fUEth': function (x, y) {\n            return x === y;\n        },\n        'LKyiq': function (x, y) {\n            return x < y;\n        }\n    };\n    if (GKCzQL['fUEth'](c, undefined)) {\n        c = b;\n        b = a;\n        a = 0x0;\n    }\n    for (var i = a; GKCzQL['LKyiq'](i, b); ++i) {\n        if (GKCzQL['fUEth'](c(i), ![])) {\n            break;\n        }\n    }\n}\nvar input = '';\nfunction scan() {\n    return +input['pop']();\n}\nfunction scan_string() {\n    return input['pop']();\n}\nfunction print(val) {\n    console['log'](val);\n}\nprocess['stdin']['resume']();\nprocess['stdin']['setEncoding']('utf8');\nprocess['stdin']['on']('data', function (chunk) {\n    input += chunk;\n});\nprocess['stdin']['on']('end', function () {\n    var lYRjgN = {\n        'HJPpC': function (callee) {\n            return callee();\n        }\n    };\n    input = input['trim']()['split'](/\\s+/)['reverse']();\n    lYRjgN['HJPpC'](main);\n});", "test_cases": [["10 3\n3 7\n8 9\n2 5", "23"], ["10 3\n8 9\n6 7\n2 4", "19"], ["10 0", "11"], ["10 6\n6 7\n4 5\n2 5\n6 9\n3 5\n6 8", "23"], ["1000 8\n3 4\n6 1000\n5 1000\n7 1000\n8 1000\n4 1000\n9 1000\n1 2", "2997"]], "original": "var n, m;\nvar x = [];\n\nfunction main(){\n\tn = scan();\n\tm = scan();\n\trep(n, function(i){\n\t\tx[i] = 0;\n\t});\n\trep(m, function(i){\n\t\tvar c = scan();\n\t\tvar d = scan();\n\t\tx[c] += 1;\n\t\tx[d] -= 1;\n\t});\n\trep(1, n, function(i){\n\t\tx[i] += x[i - 1];\n\t});\n\tvar c = 0;\n\trep(n, function(i){\n\t\tif(x[i] > 0){\n\t\t\t++c;\n\t\t}\n\t});\n\tprint(c * 2 + n + 1);\n}\n\nfunction rep(a, b, c){\n\tif(c === undefined){\n\t\tc = b;\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tfor(var i = a; i < b; ++i){\n\t\tif(c(i) === false){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvar input = '';\n\nfunction scan(){\n\treturn +input.pop();\n}\nfunction scan_string(){\n\treturn input.pop();\n} \nfunction print(val){\n\tconsole.log(val);\n}\n \nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function(chunk){\n\tinput += chunk;\n});\nprocess.stdin.on('end', function(){\n\tinput = input.trim().split(/\\s+/).reverse();\n\tmain();\n});", "language": "JavaScript"}
{"filename": "p00935_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['replace'](/\\n/g, '\\x20')['split']('\\x20');\nvar n = arr['shift']() - 0x0;\nvar a = [];\nfor (var i = 0x0; i < 0x2710; i++)\n    a[i] = ![];\nfor (var i = 0x0; i < n; i++) {\n    a[arr[i] - 0x0] = !![];\n    if (i + 0x1 < n)\n        a[arr[i] + arr[i + 0x1] - 0x0] = !![];\n    if (i + 0x2 < n)\n        a[arr[i] + arr[i + 0x1] + arr[i + 0x2] - 0x0] = !![];\n    if (i + 0x3 < n)\n        a[arr[i] + arr[i + 0x1] + arr[i + 0x2] + arr[i + 0x3] - 0x0] = !![];\n}\nfor (var i = 0x0; i < 0x2710; i++) {\n    if (a[i] == ![]) {\n        console['log'](i);\n        break;\n    }\n}", "test_cases": [["3\n3 0 1", "2"], ["11\n9 8 7 6 5 4 3 2 1 1 0", "12"], ["10\n9 0 8 7 6 5 4 3 2 1", "10"], ["100\n3 6 7 5 3 5 6 2 9 1 2 7 0 9 3 6 0 6 2\n6 1 8 7 9 2 0 2 3 7 5 9 2 2 8 9 7 3 6\n1 2 9 3 1 9 4 7 8 4 5 0 3 6 1 0 6 3 2\n0 6 1 5 5 4 7 6 5 6 9 3 7 4 5 2 5 4 7\n4 4 3 0 7 8 6 8 8 4 3 1 4 9 2 0 6 8 9\n2 6 6 4 9", "11"], ["100\n7 2 7 5 4 7 4 4 5 8 1 5 7 7 0 5 6 2 0\n4 3 4 1 1 0 6 1 6 6 2 1 7 9 2 4 6 9 3\n6 2 8 0 5 9 7 6 3 1 4 9 1 9 1 2 6 4 2\n9 7 8 3 9 5 5 2 3 3 8 4 0 6 8 2 5 5 0\n6 7 1 8 5 1 4 8 1 3 7 3 3 5 3 0 6 0 6\n5 3 2 2 2", "86"], ["1\n3", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().replace(/\\n/g, \" \").split(\" \");\nvar n = arr.shift() - 0;\nvar a = [];\nfor (var i = 0; i < 10000; i++) a[i] = false;\nfor (var i = 0; i < n; i++) {\n    a[arr[i] - 0] = true;\n    if (i + 1 < n) a[(arr[i] + arr[i + 1]) - 0] = true;\n    if (i + 2 < n) a[(arr[i] + arr[i + 1] + arr[i + 2]) - 0] = true;\n    if (i + 3 < n) a[(arr[i] + arr[i + 1] + arr[i + 2] + arr[i + 3]) - 0] = true;\n}\nfor (var i = 0; i < 10000; i++) {\n    if (a[i] == false) {\n        console.log(i);\n        break;\n    }\n}", "language": "JavaScript"}
{"filename": "p01048_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar n = input['trim']() - 0x0;\nvar ans = [\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0,\n    0x0\n];\nvar i = 0x0;\nwhile (!![]) {\n    i++;\n    var cnt = 0x0;\n    for (var j = i; j >= 0x1; j--) {\n        if (i % j == 0x0)\n            cnt++;\n    }\n    if (ans[cnt - 0x1] == 0x0) {\n        ans[cnt - 0x1] = i;\n        if (!ans['includes'](0x0))\n            break;\n    }\n}\nconsole['log'](ans[n - 0x1]);", "test_cases": [["1", "1"], ["2", "2"], ["3", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar n = input.trim() - 0;\nvar ans = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nvar i = 0;\nwhile (true) {\n   i++;\n   var cnt = 0;\n   for (var j = i; j >= 1; j--) {\n      if (i % j == 0) cnt++;\n   }\n   if (ans[cnt - 1] == 0) {\n      ans[cnt - 1] = i;\n      if (!ans.includes(0)) break;\n   }\n}\nconsole.log(ans[n-1]);\n", "language": "JavaScript"}
{"filename": "p01050_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar s = input['trim']();\nvar len = s['length'];\nvar abc = '0123456789AabcdefghijklmnopqrstuvwxyzA'['split']('');\nvar sum = 0x0;\nwhile (!![]) {\n    if (s == '')\n        break;\n    var cnt = 0x0;\n    var flag = ![];\n    abc['forEach'](v => {\n        var RMSkvU = {\n            'WBTrA': function (x, y) {\n                return x >= y;\n            },\n            'CvMlG': function (x, y) {\n                return x - y;\n            }\n        };\n        var re = new RegExp(v);\n        if (re['test'](s)) {\n            if (flag)\n                cnt++;\n            flag = !![];\n            s = s['replace'](re, '');\n        } else {\n            if (RMSkvU['WBTrA'](cnt, 0x3))\n                sum += RMSkvU['CvMlG'](cnt, 0x2);\n            cnt = 0x0;\n            flag = ![];\n        }\n    });\n}\nconsole['log'](len - sum);", "test_cases": [["0ig3he12fz99", "9"], ["1122334455", "6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim();\nvar len=s.length;\nvar abc=\"0123456789AabcdefghijklmnopqrstuvwxyzA\".split(\"\");\nvar sum=0;\nwhile(true){\n   if(s==\"\")break;\n   var cnt=0;\n   var flag=false;\n   abc.forEach(v=>{\n      var re = new RegExp( v );\n      if(re.test(s)){\n         if(flag)cnt++;\n         flag=true;\n         s=s.replace(re,\"\");\n      }else{\n         if(cnt>=3)sum+=cnt-2;\n         cnt=0;\n         flag=false;\n      }\n   });\n}\nconsole.log(len-sum);\n", "language": "JavaScript"}
{"filename": "p01086_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var Arr = arr['splice'](0x0, n);\n    Arr = Arr['map'](function (v) {\n        return v['length'];\n    });\n    for (var i = 0x0; i < Arr['length']; i++) {\n        var good = [\n            0x5,\n            0x7,\n            0x5,\n            0x7,\n            0x7\n        ];\n        var sum = 0x0;\n        for (var j = i; j < Arr['length']; j++) {\n            if (good['length'] == 0x0)\n                break;\n            sum += Arr[j];\n            if (good[0x0] > sum)\n                continue;\n            else if (good[0x0] < sum)\n                break;\n            else if (good[0x0] == sum) {\n                good['shift']();\n                sum = 0x0;\n            }\n        }\n        if (good['length'] == 0x0) {\n            console['log'](i + 0x1);\n            break;\n        }\n    }\n}", "test_cases": [["9\ndo\nthe\nbest\nand\nenjoy\ntoday\nat\nacm\nicpc\n14\noh\nyes\nby\nfar\nit\nis\nwow\nso\nbad\nto\nme\nyou\nknow\nhey\n15\nabcde\nfghijkl\nmnopq\nrstuvwx\nyzz\nabcde\nfghijkl\nmnopq\nrstuvwx\nyz\nabcde\nfghijkl\nmnopq\nrstuvwx\nyz\n0", "1\n2\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   var n = arr.shift() - 0;\n   if (n == 0) break;\n   var Arr = arr.splice(0, n);\n   Arr = Arr.map(function(v) {\n      return v.length;\n   });\n   for (var i = 0; i < Arr.length; i++) {\n      var good = [5, 7, 5, 7, 7];\n      var sum = 0;\n      for (var j = i; j < Arr.length; j++) {\n         if (good.length == 0) break;\n         sum += Arr[j];\n         if (good[0] > sum) continue;\n         else if (good[0] < sum) break;\n         else if (good[0] == sum) {\n            good.shift();\n            sum = 0;\n         }\n      }\n      if (good.length == 0) {\n         console.log(i + 1);\n         break;\n      }\n   }\n}", "language": "JavaScript"}
{"filename": "p01094_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar ans = '';\nwhile (arr['shift']() != 0x0) {\n    var a = arr['shift']()['split']('\\x20');\n    var obj = {};\n    for (var i = 0x0; i < a['length']; i++) {\n        obj[a[i]] = obj[a[i]] + 0x1 || 0x1;\n        var s = [];\n        for (var k in obj)\n            s['push']([\n                obj[k],\n                k\n            ]);\n        s['sort'](function (a, b) {\n            var LgnWjn = {\n                'nEmqh': function (x, y) {\n                    return x - y;\n                }\n            };\n            return LgnWjn['nEmqh'](b[0x0], a[0x0]);\n        });\n        if (s['length'] == 0x1)\n            s[0x1] = [0x0];\n        if (s[0x0][0x0] > s[0x1][0x0] + a['length'] - (i + 0x1)) {\n            ans += s[0x0][0x1] + '\\x20' + (i + 0x1) + '\\x0a';\n            break;\n        }\n    }\n    if (i == a['length'])\n        ans += 'TIE' + '\\x0a';\n}\nconsole['log'](ans['trim']());", "test_cases": [["1\nA\n4\nA A B B\n5\nL M N L N\n6\nK K K K K K\n6\nX X X Y Z X\n10\nA A A B A C A C C B\n10\nU U U U U V V W W W\n0", "A 1\nTIE\nTIE\nK 4\nX 5\nA 7\nU 8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar ans = \"\";\nwhile (arr.shift() != 0) {\n   var a = arr.shift().split(\" \");\n   var obj = {};\n   for (var i = 0; i < a.length; i++) {\n      obj[a[i]] = obj[a[i]] + 1 || 1;\n      var s = [];\n      for (var k in obj) s.push([obj[k], k]);\n      s.sort(function(a, b) {\n         return b[0] - a[0];\n      });\n      if (s.length == 1) s[1] = [0];\n      if (s[0][0] > s[1][0] + a.length - (i + 1)) {\n         ans+=s[0][1]+\" \"+ (i + 1)+\"\\n\";\n         break;\n      }\n   }\n   if (i == a.length) ans+=\"TIE\"+\"\\n\";\n}\nconsole.log(ans.trim());", "language": "JavaScript"}
{"filename": "p01111_1", "type": "JavaScript", "obfuscated": "new Promise(function (resolve, reject) {\n    const hKVTvT = {\n        'NfMjO': function (callee, param1) {\n            return callee(param1);\n        },\n        'MsDQH': 'end'\n    };\n    let cin = '';\n    process['stdin']['on']('data', chunk => {\n        cin += chunk;\n    })['on'](hKVTvT['MsDQH'], () => {\n        hKVTvT['NfMjO'](resolve, [\n            cin,\n            process['stdout']\n        ]);\n    });\n})['then'](function ([cin, cout]) {\n    const ovwXqU = {\n        'vVGbv': function (x, y) {\n            return x === y;\n        },\n        'mCYux': function (x, y) {\n            return x < y;\n        },\n        'iUjrc': function (x, y) {\n            return x * y;\n        },\n        'yIBAT': function (x, y) {\n            return x - y;\n        },\n        'uvCmM': function (x, y) {\n            return x * y;\n        },\n        'llsKi': function (x, y) {\n            return x - y;\n        },\n        'rknKA': function (x, y) {\n            return x * y;\n        },\n        'PNPwV': function (x, y) {\n            return x / y;\n        }\n    };\n    for (const b of cin['split'](/[ \\n]/)['map'](elt => parseInt(elt))) {\n        if (ovwXqU['vVGbv'](b, 0x0)) {\n            break;\n        }\n        let opt = '\\x0a';\n        for (let m = 0x1; ovwXqU['mCYux'](ovwXqU['iUjrc'](m, ovwXqU['yIBAT'](m, 0x1)), ovwXqU['uvCmM'](0x2, b)); ++m) {\n            const det = ovwXqU['llsKi'](0x2 * b, ovwXqU['rknKA'](m, m - 0x1));\n            if (ovwXqU['vVGbv'](det % ovwXqU['iUjrc'](0x2, m), 0x0)) {\n                opt = ovwXqU['PNPwV'](det, 0x2 * m) + '\\x20' + m + '\\x0a';\n            }\n        }\n        cout['write'](opt);\n    }\n});", "test_cases": [["15\n16\n2\n3\n9699690\n223092870\n847288609\n900660121\n987698769\n999999999\n0", "1 5\n16 1\n2 1\n1 2\n16 4389\n129 20995\n4112949 206\n15006 30011\n46887 17718\n163837 5994"]], "original": "new Promise(function(resolve, reject) {\n    let cin = \"\";\n    process.stdin\n        .on(\"data\", chunk => { cin += chunk; })\n        .on(\"end\", () => { resolve([cin, process.stdout]); });\n}).then(function([cin, cout]) {\n    for (const b of cin.split(/[ \\n]/).map(elt => parseInt(elt))) {\n        if (b === 0) {\n            break ;\n        }\n        let opt = \"\\n\";\n        for (let m = 1; m * (m - 1) < 2 * b; ++m) {\n            const det = 2 * b - m * (m - 1);\n            if (det % (2 * m) === 0) {\n                opt = `${det / (2 * m)} ${m}\\n`;\n            }\n        }\n        cout.write(opt);\n    }\n});\n\n", "language": "JavaScript"}
{"filename": "p01117_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [n, m] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (n == 0x0 && m == 0x0)\n        break;\n    var h = [];\n    for (var i = 0x0; i < n; i++)\n        h[i] = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var p = arr['shift']()['split']('\\x20')['map'](Number);\n        h = p['map']((v, i) => h[i] + v);\n    }\n    console['log'](Math['max'](...h));\n}", "test_cases": [["5 2\n10 20 30 40 50\n15 25 35 45 55\n6 3\n10 20 30 15 25 35\n21 34 11 52 20 18\n31 15 42 10 21 19\n4 2\n0 0 0 0\n0 0 0 0\n0 0", "105\n83\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,m]=arr.shift().split(\" \").map(Number);\n   if(n==0 && m==0)break;\n   var h=[];\n   for(var i=0;i<n;i++)h[i]=0;\n   for(var i=0;i<m;i++){\n      var p=arr.shift().split(\" \").map(Number);\n      h=p.map((v,i)=>h[i]+v);\n   }\n   console.log(Math.max(...h));\n}\n", "language": "JavaScript"}
{"filename": "p01118_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [h, w] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (h == 0x0 && w == 0x0)\n        break;\n    var k = {};\n    for (var i = 0x0; i < h; i++) {\n        var r = arr['shift']()['split']('');\n        for (var j = 0x0; j < w; j++) {\n            k[r[j]] = [\n                i,\n                j\n            ];\n        }\n    }\n    var [s, sum, y, x] = [\n        arr['shift']()['split'](''),\n        0x0,\n        0x0,\n        0x0\n    ];\n    s['forEach'](v => {\n        var sAHbzT = {\n            'qsdCj': function (x, y) {\n                return x + y;\n            },\n            'sEPaS': function (x, y) {\n                return x - y;\n            }\n        };\n        sum += sAHbzT['qsdCj'](Math['abs'](sAHbzT['sEPaS'](y, k[v][0x0])), Math['abs'](sAHbzT['sEPaS'](x, k[v][0x1]))) + 0x1;\n        [y, x] = [\n            k[v][0x0],\n            k[v][0x1]\n        ];\n    });\n    console['log'](sum);\n}", "test_cases": [["3 9\nABCDEFGHI\nJKLMNOPQR\nSTUVWXYZ_\nICPC\n5 11\n___________\n____A______\n________M__\n___________\n_C_________\nACM\n4 21\n1_2_3_4_5_6_7_8_9_0_-\nQqWwEeRrTtYyUuIiOoPp@\nAaSsDdFfGgHhJjKkLl;_:\nZzXxCcVvBbNnMm,_._/__\nICPC2019,AsiaYokohamaRegional,QualificationRound\n0 0", "28\n23\n493"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [h,w]=arr.shift().split(\" \").map(Number);\n   if(h==0 && w==0)break;\n   var k={};\n   for(var i=0;i<h;i++){\n      var r=arr.shift().split(\"\");\n      for(var j=0;j<w;j++){\n         k[r[j]]=[i,j];\n      }\n   }\n   var [s,sum,y,x]=[arr.shift().split(\"\"),0,0,0];\n   s.forEach(v=>{\n      sum+=Math.abs(y-k[v][0])+Math.abs(x- k[v][1])+1;\n      [y,x]=[k[v][0],k[v][1]];\n   });\n   console.log(sum);\n}\n", "language": "JavaScript"}
{"filename": "p01136_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var ary = arr['slice'](0x0, n);\n    ary = ary['map'](v => v['split']('\\x20')['map'](Number)['slice'](0x1));\n    var flag = !![];\n    var h = [];\n    for (var i = 0x0; i < n; i++)\n        h['push']([i]);\n    for (var i = 0x1; i <= 0x1e; i++) {\n        var a = [];\n        ary['forEach']((v, j) => {\n            if (v['includes'](i))\n                a['push'](j);\n        });\n        var b = [];\n        a['forEach'](v => b['push'](...h[v]));\n        b = b['filter']((x, i, self) => self['indexOf'](x) == i);\n        if (b['length'] == n) {\n            flag = ![];\n            console['log'](i);\n            break;\n        }\n        a['forEach'](v => h[v] = b);\n    }\n    if (flag)\n        console['log'](-0x1);\n    arr = arr['slice'](n);\n}", "test_cases": [["4\n1 1\n2 2 3\n2 1 2\n3 3 4 5\n0", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var ary=arr.slice(0,n);\n   ary=ary.map(v=> v.split(\" \").map(Number).slice(1));\n   var flag=true;\n   var h=[];\n   for(var i=0;i<n;i++)h.push([i]);\n   for(var i=1;i<=30;i++){\n      var a=[];\n      ary.forEach((v,j)=>{\n         if(v.includes(i))a.push(j);\n      });\n      var b=[];\n      a.forEach(v=>b.push(...h[v]));\n      b= b.filter((x, i, self) => self.indexOf(x) == i);\n      if(b.length==n){\n         flag=false;\n         console.log(i);\n         break;\n      }\n      a.forEach(v=> h[v]=b);\n   }\n   if(flag)console.log(-1);\n   arr=arr.slice(n);\n}\n", "language": "JavaScript"}
{"filename": "p01139_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var HEGRpS = {\n        'pLpMl': function (x, y) {\n            return x < y;\n        },\n        'IJTVi': function (x, y) {\n            return x + y;\n        },\n        'RvGqL': function (x, y) {\n            return x >= y;\n        },\n        'UnWQS': function (x, y) {\n            return x == y;\n        },\n        'llkLG': 'bad'\n    };\n    cnt++;\n    var dx = [\n        0x0,\n        -0x1,\n        0x1,\n        0x0\n    ];\n    var dy = [\n        -0x1,\n        0x0,\n        0x0,\n        0x1\n    ];\n    for (var i = 0x0; HEGRpS['pLpMl'](i, 0x4); i++) {\n        var X = HEGRpS['IJTVi'](x, dx[i]);\n        var Y = HEGRpS['IJTVi'](y, dy[i]);\n        if (Y >= h || HEGRpS['pLpMl'](Y, 0x0) || HEGRpS['RvGqL'](X, w) || HEGRpS['pLpMl'](X, 0x0))\n            continue;\n        if (HEGRpS['UnWQS'](yx[Y][X], 'S'))\n            continue;\n        else if (HEGRpS['UnWQS'](yx[Y][X], '.')) {\n            yx[Y][X] = 'S';\n            bomb(Y, X);\n        } else {\n            if (color == '' || HEGRpS['UnWQS'](color, yx[Y][X]))\n                color = yx[Y][X];\n            else\n                color = HEGRpS['llkLG'];\n        }\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var wh = arr['shift']();\n    if (wh == '0\\x200')\n        break;\n    wh = wh['split']('\\x20')['map'](Number);\n    var w = wh[0x0];\n    var h = wh[0x1];\n    var yx = [];\n    for (var i = 0x0; i < h; i++)\n        yx['push'](arr['shift']()['split'](''));\n    var ans = [\n        0x0,\n        0x0\n    ];\n    for (var y = 0x0; y < h; y++) {\n        for (var x = 0x0; x < w; x++) {\n            var color = '';\n            var cnt = 0x0;\n            if (yx[y][x] == '.') {\n                yx[y][x] = 'S';\n                bomb(y, x);\n            }\n            if (color == 'B')\n                ans[0x0] += cnt;\n            else if (color == 'W')\n                ans[0x1] += cnt;\n        }\n    }\n    console['log'](ans[0x0] + '\\x20' + ans[0x1]);\n}", "test_cases": [["10 10\n.....W....\n....W.W...\n...W...W..\n....W...W.\n.....W...W\n......W.W.\nBBB....W..\n..B..BBBBB\n..B..B....\n..B..B..W.\n5 3\n...B.\n...BB\n.....\n1 1\n.\n0 0", "6 21\n12 0\n0 0"]], "original": "function bomb(y,x){\n   cnt++;\n   var dx=[0,-1,1,0];\n   var dy=[-1,0,0,1];\n   for(var i=0;i<4;i++){\n      var X=x+dx[i];\n      var Y=y+dy[i];\n      if(Y>=h || Y<0 || X>=w || X<0)continue;\n      if(yx[Y][X]==\"S\")continue;\n      else if(yx[Y][X]==\".\"){yx[Y][X]=\"S\";bomb(Y,X);}\n      else {\n         if(color==\"\" || color==yx[Y][X])color=yx[Y][X];\n         else color=\"bad\";\n      }\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var wh=arr.shift();\n   if(wh==\"0 0\")break;\n   wh=wh.split(\" \").map(Number);\n   var w=wh[0];\n   var h=wh[1];\n   var yx=[];\n   for(var i=0;i<h;i++)yx.push(arr.shift().split(\"\"));\n   var ans=[0,0];\n   for(var y=0;y<h;y++){\n      for(var x=0;x<w;x++){\n         var color=\"\";\n         var cnt=0;\n         if(yx[y][x]==\".\"){yx[y][x]=\"S\";bomb(y,x);}\n         if(color==\"B\")ans[0]+=cnt;\n         else if(color==\"W\")ans[1]+=cnt;\n      }\n   }\n   console.log(ans[0]+\" \"+ans[1]);\n}", "language": "JavaScript"}
{"filename": "p01144_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = Arr['shift']()['split']('\\x20')['map'](Number);\n    if (nm[0x0] == 0x0 && nm[0x1] == 0x0)\n        break;\n    var M = nm[0x1];\n    var DP = [];\n    for (var i = 0x0; i < nm[0x0]; i++) {\n        var dp = Arr['shift']()['split']('\\x20')['map'](Number);\n        DP['push'](dp);\n    }\n    DP['sort'](function (a, b) {\n        var HwCcGc = {\n            'gWhrX': function (x, y) {\n                return x - y;\n            }\n        };\n        return HwCcGc['gWhrX'](b[0x1], a[0x1]);\n    });\n    var sum = 0x0;\n    DP['forEach'](function (v) {\n        var rJDhqb = {\n            'BHhvi': function (x, y) {\n                return x == y;\n            }\n        };\n        var d = v[0x0];\n        var p = v[0x1];\n        while (!![]) {\n            if (rJDhqb['BHhvi'](M, 0x0) || d == 0x0)\n                break;\n            M--;\n            d--;\n        }\n        sum += d * p;\n    });\n    console['log'](sum);\n}", "test_cases": [["2 8\n5 6\n4 5\n3 1\n5 10\n5 10\n5 10\n0 0", "5\n140"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=(Arr.shift()).split(\" \").map(Number);\n   if(nm[0]==0 && nm[1]==0)break;\n   var M=nm[1];\n   var DP=[];\n   for(var i=0;i<nm[0];i++){\n      var dp=(Arr.shift()).split(\" \").map(Number);\n      DP.push(dp);\n   }\n   DP.sort(function(a,b){return b[1]-a[1]});\n   var sum=0;\n   DP.forEach(function(v){\n      var d=v[0];\n      var p=v[1];\n      while(true){\n         if(M==0 || d==0)break;\n         M--;\n         d--;\n      }\n      sum+=d*p;\n   });\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01149_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['replace'](/T|J|Q|K/g, '10');\ninput = input['replace'](/A/g, '11');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nwhile (n--) {\n    var a = arr['shift']()['split']('\\x20')['map'](Number);\n    var b = arr['shift']()['split']('\\x20')['map'](Number);\n    var flag = ![];\n    var sum = a[0x0] + a[0x1];\n    if (a[0x0] == 0xb || a[0x1] == 0xb)\n        flag = !![];\n    if (sum == 0x15) {\n        console['log']('blackjack');\n        continue;\n    }\n    var ans = '';\n    for (var i = 0x0; i < b['length']; i++) {\n        if (sum <= 0x10) {\n            if (b[i] == 0xb)\n                flag = !![];\n            if (b[i] == 0xb && sum + 0xb > 0x15)\n                b[i] = 0x1;\n            sum += b[i];\n        } else if (sum == 0x11 && flag) {\n            if (b[i] == 0xb)\n                flag = !![];\n            if (b[i] == 0xb && sum + 0xb > 0x15)\n                b[i] = 0x1;\n            sum += b[i];\n        } else {\n            break;\n        }\n    }\n    if (sum > 0x15)\n        sum = 'bust';\n    console['log'](sum);\n}", "test_cases": [["4\n5 4\n9 2 8 3 7 4 6 5\nA J\nK Q J T 9 8 7 6\nT 4\n7 J A 6 Q T K 7\n2 2\n2 3 4 K 2 3 4 K", "18\nblackjack\n21\nbust"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput=input.replace(/T|J|Q|K/g,\"10\");\ninput=input.replace(/A/g,\"11\");\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nwhile(n--){\n   var a=arr.shift().split(\" \").map(Number);\n   var b=arr.shift().split(\" \").map(Number);\n   var flag=false;\n   var sum=a[0]+a[1];\n   if(a[0]==11 || a[1]==11)flag=true;\n   if(sum==21){console.log(\"blackjack\");continue;}\n   var ans=\"\";\n   for(var i=0;i<b.length;i++){\n      if(sum<=16){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else if(sum==17 && flag){\n         if(b[i]==11)flag=true;\n         if(b[i]==11 && sum+11>21)b[i]=1;\n         sum+=b[i];\n      }else {\n         break;\n      }\n   }\n   if(sum>21)sum=\"bust\";\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01155_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var ab = arr['shift']()['split']('\\x20')['map'](Number);\n    if (ab['join']('\\x20') == '0\\x200')\n        break;\n    var a = ab[0x0];\n    var b = ab[0x1];\n    var A = [];\n    var B = [];\n    for (i = 0x1; i <= Math['sqrt'](a); i++) {\n        if (a % i == 0x0)\n            A['push']([\n                a / i,\n                i\n            ]);\n    }\n    for (i = 0x1; i <= Math['sqrt'](b); i++) {\n        if (b % i == 0x0)\n            B['push']([\n                b / i,\n                i\n            ]);\n    }\n    var min = Infinity;\n    A['forEach'](function (va) {\n        var QyMadp = {\n            'ZGyUs': function (x, y) {\n                return x + y;\n            },\n            'HnyVn': function (x, y) {\n                return x - y;\n            }\n        };\n        B['forEach'](function (vb) {\n            var c = [\n                va[0x0],\n                va[0x1],\n                vb[0x0],\n                vb[0x1]\n            ];\n            c['sort'](function (a, b) {\n                return a - b;\n            });\n            min = Math['min'](min, QyMadp['ZGyUs'](Math['pow'](c[0x0] - c[0x1], 0x2) + Math['pow'](QyMadp['HnyVn'](c[0x1], c[0x2]), 0x2), Math['pow'](c[0x2] - c[0x3], 0x2)));\n        });\n    });\n    console['log'](min);\n}", "test_cases": [["33 40\n57 144\n0 0", "22\n94"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var ab=arr.shift().split(\" \").map(Number);\n   if(ab.join(\" \")==\"0 0\")break;\n   var a=ab[0];\n   var b=ab[1];\n   var A=[];\n   var B=[];\n   for(i=1;i<=Math.sqrt(a);i++){\n      if(a%i==0)A.push([a/i,i]);\n   }\n   for(i=1;i<=Math.sqrt(b);i++){\n      if(b%i==0)B.push([b/i,i]);\n   }\n   var min=Infinity;\n   A.forEach(function(va){\n      B.forEach(function(vb){\n         var c=[va[0],va[1],vb[0],vb[1]];\n         c.sort(function(a,b){return a-b;});\n         min=Math.min(min,Math.pow(c[0]-c[1],2)+Math.pow(c[1]-c[2],2)+Math.pow(c[2]-c[3],2));\n      });\n   });\n   console.log(min);\n}", "language": "JavaScript"}
{"filename": "p01223_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar t = Arr['shift']() - 0x0;\nfor (var i = 0x0; i < t; i++) {\n    var oavMCu = '4|0|3|5|2|6|1'['split']('|');\n    var BJqPbn = 0x0;\n    while (!![]) {\n        switch (oavMCu[BJqPbn++]) {\n        case '0':\n            var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n            continue;\n        case '1':\n            console['log'](max + '\\x20' + Math['abs'](min));\n            continue;\n        case '2':\n            var m = arr[0x0];\n            continue;\n        case '3':\n            var max = 0x0;\n            continue;\n        case '4':\n            var n = Arr['shift']() - 0x0;\n            continue;\n        case '5':\n            var min = 0x0;\n            continue;\n        case '6':\n            for (var j = 0x1; j < n; j++) {\n                max = Math['max'](arr[j] - m, max);\n                min = Math['min'](arr[j] - m, min);\n                m = arr[j];\n            }\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["5\n5\n10 70 30 50 90\n2\n20 100\n2\n100 30\n3\n50 50 50\n7\n123 45 678 901 234 567 890", "60 40\n80 0\n0 70\n0 0\n633 667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar t=Arr.shift()-0;\nfor(var i=0;i<t;i++){\n   var n=Arr.shift()-0;\n   var arr=(Arr.shift()).split(\" \").map(Number);\n   var max=0;\n   var min=0;\n   var m=arr[0];\n   for(var j=1;j<n;j++){\n      max=Math.max(arr[j]-m,max);\n      min=Math.min(arr[j]-m,min);\n      m=arr[j];\n   }\n   console.log(max+\" \"+Math.abs(min));\n}", "language": "JavaScript"}
{"filename": "p01224_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var sum = n != 0x1 ? 0x1 : 0x0;\n    var sqrt = Math['sqrt'](n);\n    for (var i = 0x2; i < sqrt; i++) {\n        if (n % i == 0x0)\n            sum += i + n / i;\n    }\n    if (n % sqrt == 0x0 && sqrt != 0x1)\n        sum += sqrt;\n    var ans;\n    if (n == sum)\n        ans = 'perfect\\x20number';\n    else if (n > sum)\n        ans = 'deficient\\x20number';\n    else if (n < sum)\n        ans = 'abundant\\x20number';\n    console['log'](ans);\n}", "test_cases": [["1\n2\n3\n4\n6\n12\n16\n28\n33550336\n99999998\n99999999\n100000000\n0", "deficient number\ndeficient number\ndeficient number\ndeficient number\nperfect number\nabundant number\ndeficient number\nperfect number\nperfect number\ndeficient number\ndeficient number\nabundant number"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var sum=(n!=1)?1:0;\n   var sqrt=Math.sqrt(n);\n   for(var i=2;i<sqrt;i++){\n      if(n%i==0)sum+=i+n/i;\n   }\n   if(n%sqrt==0 && sqrt!=1)sum+=sqrt;\n   var ans;\n   if(n==sum)ans=\"perfect number\";\n   else if(n>sum)ans=\"deficient number\";\n   else if(n<sum)ans=\"abundant number\";\n   console.log(ans);\n}", "language": "JavaScript"}
{"filename": "p01294_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [n, d] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (n == 0x0 && d == 0x0)\n        break;\n    var S = [];\n    var C = [];\n    for (var i = 0x0; i < n; i++) {\n        var fAnJxF = '5|2|0|4|3|1'['split']('|');\n        var AcTozK = 0x0;\n        while (!![]) {\n            switch (fAnJxF[AcTozK++]) {\n            case '0':\n                var c = mc['map'](Number)['reverse']();\n                continue;\n            case '1':\n                C[i] = c;\n                continue;\n            case '2':\n                mc['shift']();\n                continue;\n            case '3':\n                S[i] = sum;\n                continue;\n            case '4':\n                var sum = c['length'] != 0x0 ? c['reduce']((a, b) => a + b) : 0x0;\n                continue;\n            case '5':\n                var mc = arr[i]['split']('\\x20');\n                continue;\n            }\n            break;\n        }\n    }\n    while (!![]) {\n        var f = ![];\n        for (var i = 0x0; i < S['length']; i++) {\n            if (S[i] == 0x0)\n                continue;\n            S[i] -= C[i][0x0];\n            if (Math['max'](...S) - Math['min'](...S) <= d) {\n                C[i]['shift']();\n                f = !![];\n                break;\n            } else {\n                S[i] += C[i][0x0];\n            }\n        }\n        if (f == ![])\n            break;\n    }\n    var sum = S['reduce']((a, b) => a + b);\n    if (sum == 0x0)\n        console['log']('Yes');\n    else\n        console['log']('No');\n    arr = arr['slice'](n);\n}", "test_cases": [["3 3\n3 4 1 1\n2 1 5\n2 3 3\n3 3\n3 2 3 1\n2 1 5\n2 3 3\n0 0", "Yes\nNo"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,d]=arr.shift().split(\" \").map(Number);\n   if(n==0 && d==0)break;\n   var S=[];\n   var C=[];\n   for(var i=0;i<n;i++){\n      var mc=arr[i].split(\" \");\n      mc.shift();\n      var c=mc.map(Number).reverse();\n      var sum= (c.length!=0)?c.reduce((a,b)=> a+b):0;\n      S[i]=sum;\n      C[i]=c;\n   }\n   while(true){ \n      var f=false;\n      for(var i=0;i<S.length;i++){\n         if(S[i]==0)continue;\n         S[i] -= C[i][0];\n         if(Math.max(...S) - Math.min(...S) <=d){\n            C[i].shift();\n            f=true;\n            break;\n         }else{\n            S[i] +=C[i][0];\n         }\n      }\n      if(f==false)break;\n   }\n   var sum=S.reduce((a,b)=> a+b);\n   if(sum==0)console.log(\"Yes\");\n   else console.log(\"No\");\n   arr=arr.slice(n);\n}\n", "language": "JavaScript"}
{"filename": "p01303_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['replace'](/\\n$/, '')['split']('\\x0a');\nvar N = Arr['shift']() - 0x0;\nfor (var I = 0x0; I < N; I++) {\n    var SMFBZe = '3|6|8|1|5|4|7|0|2'['split']('|');\n    var AacfVO = 0x0;\n    while (!![]) {\n        switch (SMFBZe[AacfVO++]) {\n        case '0':\n            for (var i = 0x0; i < n; i++) {\n                var XY = Arr['shift']()['split']('\\x20')['map'](Number);\n                var X = XY[0x0];\n                var Y = XY[0x1];\n                if (x1 <= X && x2 >= X && y1 <= Y && y2 >= Y)\n                    cnt++;\n            }\n            continue;\n        case '1':\n            var y1 = xywh[0x1];\n            continue;\n        case '2':\n            console['log'](cnt);\n            continue;\n        case '3':\n            var xywh = Arr['shift']()['split']('\\x20')['map'](Number);\n            continue;\n        case '4':\n            var n = Arr['shift']() - 0x0;\n            continue;\n        case '5':\n            var y2 = xywh[0x1] + xywh[0x3];\n            continue;\n        case '6':\n            var x1 = xywh[0x0];\n            continue;\n        case '7':\n            var cnt = 0x0;\n            continue;\n        case '8':\n            var x2 = xywh[0x0] + xywh[0x2];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n1 3 20 10\n4\n21 13\n1 15\n10 10\n25 10\n1 3 20 10\n4\n21 13\n1 15\n10 10\n25 10", "2\n2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nvar N=Arr.shift()-0;\nfor(var I=0;I<N;I++){\n   var xywh=(Arr.shift()).split(\" \").map(Number);\n   var x1=xywh[0];\n   var x2=xywh[0]+xywh[2];\n   var y1=xywh[1];\n   var y2=xywh[1]+xywh[3];\n   var n=Arr.shift()-0;\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      var XY=(Arr.shift()).split(\" \").map(Number);\n      var X=XY[0];\n      var Y=XY[1];\n      if(x1<=X && x2>=X && y1<=Y && y2>=Y)cnt++;\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01315_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n === 0x0)\n        break;\n    var ans = [];\n    for (var i = 0x0; i < n; i++) {\n        var ipCoBi = '0|2|1|3|4'['split']('|');\n        var NsHWIB = 0x0;\n        while (!![]) {\n            switch (ipCoBi[NsHWIB++]) {\n            case '0':\n                var arr = Arr['shift']()['split']('\\x20');\n                continue;\n            case '1':\n                arr = arr['map'](Number);\n                continue;\n            case '2':\n                var name = arr['shift']();\n                continue;\n            case '3':\n                arr['unshift'](name);\n                continue;\n            case '4':\n                (function (L, P, A, B, C, D, E, F, S, M) {\n                    var zyfOiI = {\n                        'fvYDf': function (x, y) {\n                            return x + y;\n                        },\n                        'HtxnX': function (x, y) {\n                            return x + y;\n                        },\n                        'VFHpD': function (x, y) {\n                            return x * y;\n                        },\n                        'akkFX': function (x, y) {\n                            return x + y;\n                        },\n                        'jODQW': function (x, y) {\n                            return x - y;\n                        },\n                        'WssTN': function (x, y) {\n                            return x * y;\n                        }\n                    };\n                    var time = zyfOiI['fvYDf'](zyfOiI['HtxnX'](A, B) + C, zyfOiI['VFHpD'](zyfOiI['akkFX'](D, E), M));\n                    var money = zyfOiI['jODQW'](zyfOiI['WssTN'](F * S, M), P);\n                    ans['push']([\n                        L,\n                        money / time\n                    ]);\n                }['apply'](null, arr));\n                continue;\n            }\n            break;\n        }\n    }\n    ans['sort'](function (a, b) {\n        var FLlQni = {\n            'MOqqg': function (x, y) {\n                return x == y;\n            },\n            'GFpkJ': function (x, y) {\n                return x > y;\n            }\n        };\n        if (FLlQni['MOqqg'](a[0x1], b[0x1]))\n            return FLlQni['GFpkJ'](a[0x0]['toString'](), b[0x0]['toString']()) ? 0x1 : -0x1;\n        else\n            return b[0x1] - a[0x1];\n    });\n    ans['forEach'](function (v) {\n        console['log'](v[0x0]);\n    });\n    console['log']('#');\n}", "test_cases": [["5\napple 1 1 1 1 1 1 1 10 1\nbanana 1 2 2 2 2 2 1 10 1\ncarrot 1 2 2 2 2 2 1 10 2\ndurian 1 3 3 3 3 3 1 10 1\neggplant 1 3 3 3 3 3 1 100 1\n4\nenoki 1 3 3 3 3 3 1 10 1\ntomato 1 3 3 3 3 3 1 10 1\npotato 1 3 3 3 3 3 1 10 1\nonion 1 3 3 3 3 3 1 10 1\n3\na 10 1 1 1 1 1 1 10 1\nb 10 2 2 2 2 2 2 10 1\nc 10 2 2 2 2 2 2 10 1\n0", "eggplant\napple\ncarrot\nbanana\ndurian\n#\nenoki\nonion\npotato\ntomato\n#\nb\nc\na\n#"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n===0)break;\n   var ans=[];\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var name=arr.shift();\n      arr=arr.map(Number);\n      arr.unshift(name);\n      (function(L, P, A, B, C, D, E, F, S, M){\n         var time=A+B+C+((D+E)*M);\n         var money=(F*S*M)-P;\n         ans.push([L,money/time]);\n      }).apply(null,arr);\n   }\n   ans.sort(function(a,b){\n      if(a[1]==b[1])return (a[0].toString()>b[0].toString())?1:-1;\n      else return b[1]-a[1];\n   });\n   ans.forEach(function(v){console.log(v[0]);});\n   console.log(\"#\");\n}", "language": "JavaScript"}
{"filename": "p01321_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var S = [];\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr['shift']()['split']('\\x20')['map'](Number);\n        var sum = arr['reduce'](function (a, b) {\n            var DZTWgy = {\n                'XxSYx': function (x, y) {\n                    return x + y;\n                }\n            };\n            return DZTWgy['XxSYx'](a, b);\n        });\n        S['push'](sum);\n    }\n    S['sort'](function (a, b) {\n        return b - a;\n    });\n    console['log'](S[0x0] + '\\x20' + S[S['length'] - 0x1]);\n}", "test_cases": [["3\n49 50 87 78 41\n27 61 100 45 84\n28 88 40 95 66\n2\n100 100 100 100 100\n0 0 0 0 0\n1\n89 90 85 93 82\n0", "317 305\n500 0\n439 439"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var S=[];\n   for(var i=0;i<n;i++){\n   var arr=(Arr.shift()).split(\" \").map(Number);\n      var sum=arr.reduce(function(a,b){return a+b;});\n      S.push(sum);\n   }\n   S.sort(function(a,b){return b-a;});\n   console.log(S[0]+\" \"+S[S.length-1]);\n}", "language": "JavaScript"}
{"filename": "p01322_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nm = Arr['shift']()['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    if (n == 0x0)\n        break;\n    var obj = {};\n    for (var i = 0x0; i < n; i++) {\n        var arr = Arr['shift']()['split']('\\x20');\n        var v = arr[0x0]['replace'](/\\*/g, '');\n        obj[v] = arr[0x1] - 0x0;\n    }\n    var sum = 0x0;\n    for (var i = 0x0; i < m; i++) {\n        var v = Arr['shift']();\n        for (var k in obj) {\n            if (k == v['slice'](-0x1 * k['length']))\n                sum += obj[k];\n        }\n    }\n    console['log'](sum);\n}", "test_cases": [["3 3\n*******1 100\n******22 1000\n11111112 1000000\n01203291\n02382022\n11111111\n10 10\n****3228 149416\n****3992 198635\n****4286 77783\n****4843 225244\n***49835 231046\n***59393 379996\n*5763748 437345\n*6726222 58054\n*8117882 16375\n*9244339 537727\n77885716\n96726222\n26971031\n66652868\n89599648\n37772338\n64679621\n65479161\n92959393\n57855682\n0 0", "1200\n438050"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var nm=(Arr.shift()).split(\" \").map(Number);\n   var n=nm[0];\n   var m=nm[1];\n   if(n==0)break;\n   var obj={};\n   for(var i=0;i<n;i++){\n      var arr=(Arr.shift()).split(\" \");\n      var v=arr[0].replace(/\\*/g,\"\");\n      obj[v]=arr[1]-0;\n   }\n   var sum=0;\n   for(var i=0;i<m;i++){\n      var v=Arr.shift();\n      for(var k in obj){\n         if(k==v.slice(-1*k.length))sum+=obj[k];\n      }\n   }\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01333_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var ab = Arr['shift']()['split']('\\x20');\n    ;\n    if (ab[0x0] == 0x0 && ab[0x1] == 0x0)\n        break;\n    var m = ab[0x1] - ab[0x0];\n    var arr = [\n        0x0,\n        0x0,\n        0x0\n    ];\n    while (m >= 0x3e8) {\n        m -= 0x3e8;\n        arr[0x2]++;\n    }\n    while (m >= 0x1f4) {\n        m -= 0x1f4;\n        arr[0x1]++;\n    }\n    while (m >= 0x64) {\n        m -= 0x64;\n        arr[0x0]++;\n    }\n    console['log'](arr['join']('\\x20'));\n}", "test_cases": [["500 1000\n100 10000\n400 700\n600 5000\n10000 10000\n0 0", "0 1 0\n4 1 9\n3 0 0\n4 0 4\n0 0 0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var ab=(Arr.shift()).split(\" \");;\n   if(ab[0]==0 && ab[1]==0)break;\n   var m=ab[1]-ab[0];\n   var arr=[0,0,0];\n   while(m>=1000){\n      m-=1000;\n      arr[2]++;\n   }\n   while(m>=500){\n      m-=500;\n      arr[1]++;\n   }\n   while(m>=100){\n      m-=100;\n      arr[0]++;\n   }\n   console.log(arr.join(\" \"));\n}", "language": "JavaScript"}
{"filename": "p01334_1", "type": "JavaScript", "obfuscated": "function bomb(y, x) {\n    var ahhdDP = {\n        'xDVFz': function (x, y) {\n            return x + y;\n        },\n        'MAupZ': function (x, y) {\n            return x + y;\n        }\n    };\n    var Y = yx[y][x][0x1];\n    var X = yx[y][x][0x0];\n    if (ring['hasOwnProperty'](ahhdDP['xDVFz'](Y + ',', X))) {\n        var flag = !![];\n        for (var k in ring) {\n            if (obj['hasOwnProperty'](k))\n                flag = ![];\n            obj[k] = !![];\n        }\n        if (flag)\n            cnt++;\n    } else {\n        ring[ahhdDP['xDVFz'](ahhdDP['MAupZ'](Y, ','), X)] = !![];\n        bomb(Y, X);\n    }\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var yx = [];\n    for (var i = 0x0; i < n; i++) {\n        var tile = arr['shift']()['split']('\\x20')['map'](Number);\n        var t = [];\n        for (var j = 0x0; j < n; j++)\n            t[j] = [\n                tile['shift'](),\n                tile['shift']()\n            ];\n        yx['push'](t);\n    }\n    var obj = {};\n    var cnt = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        for (var j = 0x0; j < n; j++) {\n            if (obj['hasOwnProperty'](i + ',' + j))\n                continue;\n            var ring = {};\n            ring[i + ',' + j] = !![];\n            bomb(i, j);\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["1\n0 0\n2\n1 1 0 1\n1 0 0 0\n2\n1 1 0 1\n1 1 1 0\n3\n0 1 2 2 2 1\n0 2 1 2 2 1\n0 0 0 1 1 1\n4\n3 2 2 0 3 2 2 1\n1 1 0 3 1 1 3 1\n0 3 2 3 3 0 2 3\n1 1 1 1 3 2 1 3\n0", "1\n2\n1\n2\n3"]], "original": "function bomb(y,x){\n   var Y=yx[y][x][1];\n   var X=yx[y][x][0];\n   if(ring.hasOwnProperty(Y+\",\"+X)){\n      var flag=true;\n      for(var k in ring){\n         if(obj.hasOwnProperty(k))flag=false;\n         obj[k]=true;     \n      } \n      if(flag)cnt++;\n   }else{\n      ring[Y+\",\"+X]=true;\n      bomb(Y,X);\n   }\n}\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var n=arr.shift()-0;\n   if(n==0)break;\n   var yx=[];\n   for(var i=0;i<n;i++){\n      var tile=arr.shift().split(\" \").map(Number);\n      var t=[];\n      for(var j=0;j<n;j++)t[j]=[tile.shift(),tile.shift()];\n      yx.push(t);\n   }\n   var obj={};\n   var cnt=0;\n   for(var i=0;i<n;i++){\n      for(var j=0;j<n;j++){\n         if(obj.hasOwnProperty(i+\",\"+j))continue;\n         var ring={};\n         ring[i+\",\"+j]=true;\n         bomb(i,j);\n      }\n   }\n   console.log(cnt);\n}", "language": "JavaScript"}
{"filename": "p01415_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar NKTUVL = Arr['shift']()['split']('\\x20')['map'](Number);\nvar N = NKTUVL[0x0];\nvar K = NKTUVL[0x1];\nvar T = NKTUVL[0x2];\nvar U = NKTUVL[0x3];\nvar V = NKTUVL[0x4];\nvar L = NKTUVL[0x5];\nvar time = 0x0;\nvar obj = {};\nfor (var i = 0x0; i < N; i++)\n    obj[Arr['shift']() - 0x0] = !![];\nvar fast = 0x0;\nvar stock = 0x0;\nfor (var i = 0x0; i < L; i++) {\n    var now = obj['hasOwnProperty'](i) ? !![] : ![];\n    if (fast == 0x0 && now == !![]) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        continue;\n    }\n    if (fast == 0x0 && now == ![] && stock == 0x0) {\n        time += 0x1 / U;\n        continue;\n    }\n    if (fast == 0x0 && now == ![] && stock > 0x0) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        stock--;\n        continue;\n    }\n    if (fast > 0x0 && now == ![]) {\n        time += 0x1 / V;\n        fast--;\n        continue;\n    }\n    if (fast > 0x0 && now == !![] && stock + 0x1 <= K) {\n        time += 0x1 / V;\n        fast--;\n        stock++;\n        continue;\n    }\n    if (fast > 0x0 && now == !![] && stock + 0x1 > K) {\n        time += 0x1 / V;\n        fast = T * V - 0x1;\n        continue;\n    }\n}\nconsole['log'](time['toFixed'](0x9));", "test_cases": [["1 1 1 2 3 100\n50", "49.500000000"], ["3 1 1 2 3 100\n49\n50\n51", "48.666666667"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar NKTUVL=(Arr.shift()).split(\" \").map(Number);\nvar N=NKTUVL[0];\nvar K=NKTUVL[1];\nvar T=NKTUVL[2];\nvar U=NKTUVL[3];\nvar V=NKTUVL[4];\nvar L=NKTUVL[5];\nvar time=0;\nvar obj={};\nfor(var i=0;i<N;i++)obj[Arr.shift()-0]=true;\nvar fast=0;\nvar stock=0;\nfor(var i=0;i<L;i++){\n   var now=(obj.hasOwnProperty(i))?true:false;\n   if(fast==0 && now==true){time+=1/V;fast=(T*V-1);continue;}\n   if(fast==0 && now==false && stock==0){time+=1/U;continue;}\n   if(fast==0 && now==false && stock>0){time+=1/V;fast=(T*V-1);stock--;continue;}\n   if(fast>0 && now==false){time+=1/V;fast--;continue;}\n   if(fast>0 && now==true && stock+1<=K){time+=1/V;fast--;stock++;continue;}\n   if(fast>0 && now==true && stock+1>K){time+=1/V;fast=(T*V-1);continue;}\n}\nconsole.log(time.toFixed(9));", "language": "JavaScript"}
{"filename": "p01531_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('');\nvar x = '';\narr['forEach'](function (v) {\n    var iivLUK = {\n        'QctFH': '9|0|8|14|13|5|2|10|6|3|11|1|7|4|12',\n        'nNLhc': function (x, y) {\n            return x == y;\n        },\n        'eENGx': function (x, y) {\n            return x == y;\n        },\n        'hUWQR': function (x, y) {\n            return x == y;\n        },\n        'XiWHI': function (x, y) {\n            return x == y;\n        }\n    };\n    var dOIwHz = iivLUK['QctFH']['split']('|');\n    var hXPVDd = 0x0;\n    while (!![]) {\n        switch (dOIwHz[hXPVDd++]) {\n        case '0':\n            if (iivLUK['nNLhc'](v, '1'))\n                x += '';\n            continue;\n        case '1':\n            if (v == 'L')\n                x += 'i';\n            continue;\n        case '2':\n            if (iivLUK['nNLhc'](v, '6'))\n                x += 'h';\n            continue;\n        case '3':\n            if (v == '9')\n                x += 'r';\n            continue;\n        case '4':\n            if (iivLUK['nNLhc'](v, 'R'))\n                x += 'e';\n            continue;\n        case '5':\n            if (iivLUK['eENGx'](v, '5'))\n                x += 'n';\n            continue;\n        case '6':\n            if (iivLUK['eENGx'](v, '8'))\n                x += 'y';\n            continue;\n        case '7':\n            if (iivLUK['nNLhc'](v, 'U'))\n                x += 'u';\n            continue;\n        case '8':\n            if (iivLUK['nNLhc'](v, '2'))\n                x += 'k';\n            continue;\n        case '9':\n            if (iivLUK['hUWQR'](v, '0'))\n                x += 'w';\n            continue;\n        case '10':\n            if (iivLUK['eENGx'](v, '7'))\n                x += 'm';\n            continue;\n        case '11':\n            if (iivLUK['eENGx'](v, 'T'))\n                x += 'a';\n            continue;\n        case '12':\n            if (v == 'D')\n                x += 'o';\n            continue;\n        case '13':\n            if (iivLUK['XiWHI'](v, '4'))\n                x += 't';\n            continue;\n        case '14':\n            if (iivLUK['eENGx'](v, '3'))\n                x += 's';\n            continue;\n        }\n        break;\n    }\n});\nx = x['replace'](/wu/g, 'nn');\nconsole['log'](x);", "test_cases": [["5R2D", "neko"], ["8U9U6U0T", "yuruhuwa"], ["9L4U7R1L2D0U4R3U4D", "ritumeikonntesuto"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=(input.trim()).split(\"\");\nvar x=\"\";\narr.forEach(function(v){\nif(v==\"0\")x+=\"w\";\nif(v==\"1\")x+=\"\";\nif(v==\"2\")x+=\"k\";\nif(v==\"3\")x+=\"s\";\nif(v==\"4\")x+=\"t\";\nif(v==\"5\")x+=\"n\";\nif(v==\"6\")x+=\"h\";\nif(v==\"7\")x+=\"m\";\nif(v==\"8\")x+=\"y\";\nif(v==\"9\")x+=\"r\";\nif(v==\"T\")x+=\"a\";\nif(v==\"L\")x+=\"i\";\nif(v==\"U\")x+=\"u\";\nif(v==\"R\")x+=\"e\";\nif(v==\"D\")x+=\"o\";\n});\nx=x.replace(/wu/g,\"nn\");\nconsole.log(x);", "language": "JavaScript"}
{"filename": "p01620_1", "type": "JavaScript", "obfuscated": "var abc = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'['split']('');\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var n = Arr['shift']() - 0x0;\n    if (n == 0x0)\n        break;\n    var k = Arr['shift']()['split']('\\x20')['map'](Number);\n    var arr = Arr['shift']()['split']('');\n    var j = 0x0;\n    for (var i = 0x0; i < arr['length']; i++) {\n        var num = abc['indexOf'](arr[i]) - k[i % k['length']];\n        if (num < 0x0)\n            num += abc['length'];\n        arr[i] = abc[num];\n    }\n    console['log'](arr['join'](''));\n}", "test_cases": [["2\n1 2\nbdd\n3\n3 2 1\nDDDA\n5\n3 1 4 5 3\ndcdkIlkP\n0", "abc\nABCx\nabZfFijL"]], "original": "var abc=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nwhile(true){\n   var n=Arr.shift()-0;\n   if(n==0)break;\n   var k=(Arr.shift()).split(\" \").map(Number);\n   var arr=(Arr.shift()).split(\"\");\n   var j=0;\n   for(var i=0;i<arr.length;i++){\n      var num=abc.indexOf(arr[i])-k[i%k.length];\n      if(num<0)num+=abc.length;\n      arr[i]=abc[num];\n   }\n   console.log(arr.join(\"\"));\n}", "language": "JavaScript"}
{"filename": "p01688_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar Arr = input['trim']()['split']('\\x0a');\nvar D = Arr['shift']() - 0x0;\nvar x = Arr['shift']() - 0x0;\nvar X = [];\nfor (var i = 0x0; i < x; i++) {\n    var v = Arr['shift']()['split']('\\x20');\n    if (v[0x0] == 'D')\n        X['push'](v[0x1] - 0x0);\n}\nX['sort'](function (a, b) {\n    var hzSZRB = {\n        'yOrWR': function (x, y) {\n            return x - y;\n        }\n    };\n    return hzSZRB['yOrWR'](b, a);\n});\nvar y = Arr['shift']() - 0x0;\nvar Y = [];\nfor (var i = 0x0; i < y; i++) {\n    var v = Arr['shift']()['split']('\\x20');\n    if (v[0x0] == 'DD')\n        Y['push'](v[0x1] - 0x0);\n}\nY['sort'](function (a, b) {\n    var kNiiKT = {\n        'AXnzu': function (x, y) {\n            return x - y;\n        }\n    };\n    return kNiiKT['AXnzu'](b, a);\n});\nvar max = 0x0;\nfor (var x = 0x0; x <= X['length']; x++) {\n    for (var y = 0x0; y <= Y['length']; y++) {\n        if (D < x + y * 0x2)\n            break;\n        var sum = 0x0;\n        for (var i = 0x0; i < x; i++)\n            sum += X[i];\n        for (var i = 0x0; i < y; i++)\n            sum += Y[i];\n        max = Math['max'](max, sum);\n    }\n}\nconsole['log'](max);", "test_cases": [["2\n3\nD 30\nD 50\nD 20\n0", "80"], ["4\n0\n2\nDB 60\nDD 40", "40"], ["13\n2\nC 15\nA 23\n2\nBD 42\nEE 20", "0"], ["3\n3\nD 10\nD 15\nD 45\n1\nDD 30", "75"], ["3\n3\nD 25\nD 20\nD 25\n1\nDD 30", "70"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.trim()).split(\"\\n\");\nvar D=Arr.shift()-0;\nvar x=Arr.shift()-0;\nvar X=[];\nfor(var i=0;i<x;i++){\n   var v=Arr.shift().split(\" \");\n   if(v[0]==\"D\")X.push(v[1]-0);\n}\nX.sort(function(a,b){return b-a;});\nvar y=Arr.shift()-0;\nvar Y=[];\nfor(var i=0;i<y;i++){\n   var v=Arr.shift().split(\" \");\n   if(v[0]==\"DD\")Y.push(v[1]-0);\n}\nY.sort(function(a,b){return b-a;});\nvar max=0;\nfor(var x=0;x<=X.length;x++){\n   for(var y=0;y<=Y.length;y++){\n      if(D<x+(y*2))break;\n      var sum=0;\n      for(var i=0;i<x;i++)sum+=X[i];\n      for(var i=0;i<y;i++)sum+=Y[i];\n      max=Math.max(max,sum);\n   }\n}\nconsole.log(max);", "language": "JavaScript"}
{"filename": "p01760_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar TD = arr['shift']()['split']('\\x20')['map'](Number);\nvar T = TD[0x0];\nvar D = TD[0x1];\nvar t = arr['shift']()['split']('\\x20')['map'](Number);\nvar tA = t[0x0];\nvar tB = t[0x1];\nvar d = arr['shift']()['split']('\\x20')['map'](Number);\nvar dA = d[0x0];\nvar dB = d[0x1];\nvar min = Infinity;\nvar i = 0x0;\nwhile (!![]) {\n    var vA = i * dA;\n    if (vA > D)\n        break;\n    var j = 0x0;\n    while (!![]) {\n        var vB = j * dB;\n        if (vA + vB > D)\n            break;\n        if (vA + vB != 0x0) {\n            var c = T - (tA * vA + tB * vB) / (vA + vB);\n            min = Math['min'](min, Math['abs'](c));\n        }\n        j++;\n    }\n    i++;\n}\nconsole['log'](min['toFixed'](0xa));", "test_cases": [["40 1000\n80 20\n100 100", "0.0000000000"], ["38 1000\n80 20\n100 95", "0.2222222222"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar TD=arr.shift().split(\" \").map(Number);\nvar T=TD[0];\nvar D=TD[1];\nvar t=arr.shift().split(\" \").map(Number);\nvar tA=t[0];\nvar tB=t[1];\nvar d=arr.shift().split(\" \").map(Number);\nvar dA=d[0];\nvar dB=d[1];\nvar min=Infinity;\nvar i=0;\nwhile(true){\n   var vA=i*dA;\n   if(vA>D)break;\n   var j=0;\n   while(true){\n      var vB=j*dB;\n      if(vA+vB>D)break;\n      if(vA+vB!=0){\n         var c=T-(tA * vA + tB * vB) / (vA + vB);\n         min=Math.min(min,Math.abs(c));\n      }\n      j++;\n   }\n   i++;\n}\nconsole.log(min.toFixed(10));", "language": "JavaScript"}
{"filename": "p01761_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar book = [];\nfor (var i = 0x0; i < n; i++)\n    book[i] = arr['shift']();\nvar q = arr['shift']() - 0x0;\nfor (var i = 0x0; i < q; i++) {\n    var VjyNcy = '6|8|7|0|2|4|3|5|1'['split']('|');\n    var JpmkWp = 0x0;\n    while (!![]) {\n        switch (VjyNcy[JpmkWp++]) {\n        case '0':\n            var a = v[0x0];\n            continue;\n        case '1':\n            ans['forEach'](function (value) {\n                console['log'](value);\n            });\n            continue;\n        case '2':\n            var b = v[0x1];\n            continue;\n        case '3':\n            var d = v[0x3] != '*' ? new Date(v[0x3])['getTime']() : '*';\n            continue;\n        case '4':\n            var c = v[0x2] != '*' ? new Date(v[0x2])['getTime']() : '*';\n            continue;\n        case '5':\n            book['forEach'](function (V) {\n                var JpKKLw = {\n                    'YvjSa': function (x, y) {\n                        return x != y;\n                    },\n                    'jcjgX': function (x, y) {\n                        return x < y;\n                    },\n                    'ostnR': function (x, y) {\n                        return x != y;\n                    },\n                    'xQPLa': function (x, y) {\n                        return x == y;\n                    },\n                    'yHkIr': function (x, y) {\n                        return x == y;\n                    }\n                };\n                var HSzTfB = '5|2|8|7|6|4|9|1|3|0'['split']('|');\n                var EYvTRM = 0x0;\n                while (!![]) {\n                    switch (HSzTfB[EYvTRM++]) {\n                    case '0':\n                        if (flag)\n                            ans['push'](A);\n                        continue;\n                    case '1':\n                        if (c != '*') {\n                            if (c > C)\n                                flag = ![];\n                        }\n                        continue;\n                    case '2':\n                        var A = V[0x0];\n                        continue;\n                    case '3':\n                        if (JpKKLw['YvjSa'](d, '*')) {\n                            if (JpKKLw['jcjgX'](d, C))\n                                flag = ![];\n                        }\n                        continue;\n                    case '4':\n                        if (JpKKLw['ostnR'](a, '*')) {\n                            var regex = new RegExp(a);\n                            if (JpKKLw['xQPLa'](regex['test'](A), ![]))\n                                flag = ![];\n                        }\n                        continue;\n                    case '5':\n                        V = V['split']('\\x20');\n                        continue;\n                    case '6':\n                        var flag = !![];\n                        continue;\n                    case '7':\n                        var C = new Date(V[0x2])['getTime']();\n                        continue;\n                    case '8':\n                        var B = V[0x1];\n                        continue;\n                    case '9':\n                        if (JpKKLw['ostnR'](b, '*')) {\n                            var regex = new RegExp(b);\n                            if (JpKKLw['yHkIr'](regex['test'](B), ![]))\n                                flag = ![];\n                        }\n                        continue;\n                    }\n                    break;\n                }\n            });\n            continue;\n        case '6':\n            if (i != 0x0)\n                console['log']('');\n            continue;\n        case '7':\n            var v = arr['shift']()['split']('\\x20');\n            continue;\n        case '8':\n            var ans = [];\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["6\nantbook iwiWataKitamasa 2012/01/28\nhogebook foo 2000/01/01\nhugabook bar 2000/01/01\ncheeterbook chokudai 2012/09/29\naojbook YutakaWatanabe 2014/06/28\npiyobook buz 2000/01/01\n4\na * * *\n* chokudai * *\n* Chokudai * *\n* * 2014/01/01 2014/12/31", "antbook\nhugabook\naojbook\n\ncheeterbook\n\n\naojbook"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar book=[];\nfor(var i=0;i<n;i++)book[i]=arr.shift();\nvar q=arr.shift()-0;\nfor(var i=0;i<q;i++){\n   if(i!=0)console.log(\"\");\n   var ans=[];\n   var v=arr.shift().split(\" \");\n   var a=v[0];\n   var b=v[1];\n   var c=(v[2]!=\"*\")?(new Date(v[2])).getTime():\"*\";\n   var d=(v[3]!=\"*\")?(new Date(v[3])).getTime():\"*\";\n   book.forEach(function(V){\n      V=V.split(\" \");\n      var A=V[0];\n      var B=V[1];\n      var C=(new Date(V[2])).getTime();\n      var flag=true;\n      if(a!=\"*\"){\n         var regex = new RegExp(a);\n         if(regex.test(A)==false)flag=false;\n      }\n      if(b!=\"*\"){\n         var regex = new RegExp(b);\n         if(regex.test(B)==false)flag=false;\n      }\n      if(c!=\"*\"){\n         if(c>C)flag=false;\n      }\n      if(d!=\"*\"){\n         if(d<C)flag=false;\n      }\n      if(flag)ans.push(A);\n   });\n   ans.forEach(function(value){\n       console.log(value);\n   });\n}", "language": "JavaScript"}
{"filename": "p01772_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar str = input['trim']();\nvar a = ![];\nvar ans = '';\nfor (var i = 0x0; i < str['length']; i++) {\n    if (str[i] == 'A')\n        a = !![];\n    if (str[i] == 'Z' && a == !![]) {\n        a = ![];\n        ans += 'AZ';\n    }\n}\nif (ans == '')\n    ans = -0x1;\nconsole['log'](ans);", "test_cases": [["AIZUNYANPEROPERO", "AZ"], ["AZAZ", "AZAZ"], ["ZDDYAZAWABDDZAZPIDDA", "AZAZAZ"], ["ZZZZAAAAAA", "-1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str=input.trim();\nvar a=false;\nvar ans=\"\";\nfor(var i=0;i<str.length;i++){\n   if(str[i]==\"A\")a=true;\n   if(str[i]==\"Z\" && a==true){a=false;ans+=\"AZ\";}\n}\nif(ans==\"\")ans=-1;\nconsole.log(ans);", "language": "JavaScript"}
{"filename": "p01846_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar data = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var str = data['shift']();\n    if (str == '#')\n        break;\n    str = str['replace'](/\\d/g, function (v) {\n        return 'n'['repeat'](v - 0x0);\n    });\n    var arr = str['split']('/');\n    arr = arr['map'](v => v['split'](''));\n    var [a, b, c, d] = data['shift']()['split']('\\x20')['map'](Number);\n    arr[a - 0x1][b - 0x1] = 'n';\n    arr[c - 0x1][d - 0x1] = 'b';\n    arr = arr['map'](v => v['join'](''));\n    str = arr['join']('/');\n    str = str['replace'](/n+/g, function (v) {\n        return v['length'];\n    });\n    console['log'](str);\n}", "test_cases": [["b1/1b\n1 1 1 2\nb5/bbbbbb\n2 4 1 4\nb2b2b/7\n1 4 2 4\n#", "1b/1b\nb2b2/bbb1bb\nb5b/3b3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar data = input.trim().split(\"\\n\");\nwhile (true) {\n   var str = data.shift();\n   if(str==\"#\")break;\n   str=str.replace(/\\d/g,function(v){\n      return \"n\".repeat(v-0);\n   });\n   var arr = str.split(\"/\");\n   arr = arr.map(v=> v.split(\"\"));\n   var [a,b,c,d] = data.shift().split(\" \").map(Number);\n   arr[a-1][b-1]=\"n\";\n   arr[c-1][d-1]=\"b\";\n   arr = arr.map(v=> v.join(\"\"));\n   str = arr.join(\"/\");\n   str=str.replace(/n+/g,function(v){\n      return v.length;\n   });\n   console.log(str);\n}\n", "language": "JavaScript"}
{"filename": "p01872_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar str = input['trim']();\nvar ans = '';\nfor (var j = 0x0; j <= 0x9; j++) {\n    var nuIEmX = '6|5|2|4|1|0|3'['split']('|');\n    var NEsHXH = 0x0;\n    while (!![]) {\n        switch (nuIEmX[NEsHXH++]) {\n        case '0':\n            if (sum % 0xb <= 0x1)\n                p = 0x0;\n            continue;\n        case '1':\n            var p = 0xb - sum % 0xb;\n            continue;\n        case '2':\n            for (var i = 0x1; i <= 0x6; i++)\n                sum += arr[i] * (i + 0x1);\n            continue;\n        case '3':\n            ans += p == arr[0x0] ? j : '';\n            continue;\n        case '4':\n            for (var i = 0x7; i <= 0xb; i++)\n                sum += arr[i] * (i - 0x5);\n            continue;\n        case '5':\n            var sum = 0x0;\n            continue;\n        case '6':\n            var arr = str['replace'](/\\?/, j)['split']('')['map'](Number)['reverse']();\n            continue;\n        }\n        break;\n    }\n}\nif (ans['length'] == 0x1)\n    console['log'](ans[0x0]);\nelse\n    console['log']('MULTIPLE');", "test_cases": [["?12345678901", "4"], ["2016030810?0", "MULTIPLE"], ["20160308100?", "0"], ["0012300?0450", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar str = input.trim();\nvar ans = \"\";\nfor(var j=0;j<=9;j++){\n   var arr = str.replace(/\\?/,j).split(\"\").map(Number).reverse();\n   var sum = 0;\n   for(var i=1;i<=6;i++) sum+=arr[i]*(i+1);\n   for(var i=7;i<=11;i++)sum+=arr[i]*(i-5);\n   var p =11-(sum%11);\n   if(sum%11<=1)p=0;\n   ans += (p==arr[0])? j : \"\";\n}\nif(ans.length==1)console.log(ans[0]);\nelse console.log(\"MULTIPLE\");\n", "language": "JavaScript"}
{"filename": "p01898_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [m, n] = arr['shift']()['split']('\\x20')['map'](Number);\nvar yx = [];\nfor (var i = 0x0; i < m; i++)\n    yx['push'](arr['shift']()['split'](''));\nvar memo = [];\nfor (var i = 0x0; i < m; i++) {\n    for (var j = 0x0; j < n; j++) {\n        if (i == 0x0)\n            memo['push']([\n                i,\n                j\n            ]);\n        if (yx[i][j] == 'o') {\n            [\n                [\n                    0x0,\n                    -0x1\n                ],\n                [\n                    0x0,\n                    0x1\n                ]\n            ]['forEach'](v => {\n                var mfjaLr = {\n                    'ihEbz': function (x, y) {\n                        return x == y;\n                    },\n                    'pAtvV': function (x, y) {\n                        return x < y;\n                    },\n                    'HyFBz': function (x, y) {\n                        return x >= y;\n                    }\n                };\n                var y = i + v[0x0];\n                var x = j + v[0x1];\n                if (mfjaLr['ihEbz'](mfjaLr['pAtvV'](y, 0x0) || x < 0x0 || mfjaLr['HyFBz'](y, m) || x >= n, ![]))\n                    memo['push']([\n                        y,\n                        x\n                    ]);\n            });\n        } else if (yx[i][j] == 'x') {\n            for (var ii = -0x1; ii <= 0x1; ii++)\n                for (var jj = -0x1; jj <= 0x1; jj++) {\n                    if (ii == 0x0 && jj == 0x0)\n                        continue;\n                    var y = i + ii;\n                    var x = j + jj;\n                    if (y < 0x0 || x < 0x0 || y >= m || x >= n)\n                        continue;\n                    memo['push']([\n                        y,\n                        x\n                    ]);\n                }\n        }\n    }\n}\nmemo['forEach'](v => {\n    yx[v[0x0]][v[0x1]] = 'b';\n});\nconsole['log'](yx['join']('')['replace'](/[^-]/g, '')['length']);", "test_cases": [["5 5\n--o--\n--xo-\n--x--\no---x\n--xoo", "3"], ["2 6\n--oooo\nx--o--", "1"], ["3 5\n-----\n-----\n-----", "10"], ["4 6\no-oxoo\noo-ooo\noooxo-\no-ooox", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar [m,n]=arr.shift().split(\" \").map(Number);\nvar yx=[];\nfor(var i=0;i<m;i++)yx.push(arr.shift().split(\"\"));\nvar memo=[];\nfor(var i=0;i<m;i++){\n   for(var j=0;j<n;j++){\n      if(i==0)memo.push([i,j]);\n      if(yx[i][j]==\"o\"){\n         [[0,-1],[0,1]].forEach(v=>{\n            var y=i+v[0];\n            var x=j+v[1];\n            if((y<0 || x<0 || y>=m || x>=n)==false)memo.push([y,x]);\n         });\n      }else if(yx[i][j]==\"x\"){\n         for(var ii=-1;ii<=1;ii++)for(var jj=-1;jj<=1;jj++){\n            if(ii==0 && jj==0)continue;\n            var y=i+ii;\n            var x=j+jj;\n            if(y<0 || x<0 || y>=m || x>=n)continue;\n            memo.push([y,x]);\n         }\n      }\n   }\n}\nmemo.forEach(v=>{\n   yx[v[0]][v[1]]=\"b\";\n});\nconsole.log(yx.join(\"\").replace(/[^-]/g,\"\").length);\n", "language": "JavaScript"}
{"filename": "p01899_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [n, d] = arr['shift']()['split']('\\x20')['map'](Number);\nvar p = arr['shift']()['split']('\\x20')['map'](Number);\nvar sum = 0x0;\np['forEach'](v => {\n    var UysRbg = {\n        'GCMtx': function (x, y) {\n            return x - y;\n        }\n    };\n    sum += Math['max'](0x0, UysRbg['GCMtx'](v, d));\n});\nconsole['log'](sum == 0x0 ? 'kusoge' : sum);", "test_cases": [["5 130\n130 170 100 120 140", "50"], ["3 100\n100 90 65", "kusoge"], ["6 210\n300 270 400 330 250 370", "660"], ["4 540\n100 460 320 280", "kusoge"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar [n,d]=arr.shift().split(\" \").map(Number);\nvar p=arr.shift().split(\" \").map(Number);\nvar sum=0;\np.forEach(v=>{\n   sum+=Math.max(0,v-d);\n});\nconsole.log((sum==0)?\"kusoge\":sum);\n", "language": "JavaScript"}
{"filename": "p01916_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar s = arr[0x0]['split']('');\nfor (var i = 0x0; i < s['length']; i++) {\n    for (var j = i + 0x1; j < s['length']; j++) {\n        if (s[i] == s[j]) {\n            s[i] = '';\n            s[j] = '';\n            break;\n        }\n    }\n}\nvar n = s['join']('')['length'];\nif (n == 0x0 || n == 0x1)\n    console['log'](0x0);\nelse if (n % 0x2 == 0x0)\n    console['log'](n / 0x2);\nelse\n    console['log']((n - 0x1) / 0x2);", "test_cases": [["hcpc", "1"], ["ritscamp", "4"], ["nakawawakana", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar s=arr[0].split(\"\");\n\nfor(var i=0;i<s.length;i++){\nfor(var j=i+1;j<s.length;j++){\n   if(s[i]==s[j]){\n      s[i]=\"\";\n      s[j]=\"\";\n      break;\n   }\n}\n}\nvar n=s.join(\"\").length;\nif(n==0 || n==1)console.log(0);\nelse if(n%2==0)console.log(n/2);\nelse console.log((n-1)/2);\n", "language": "JavaScript"}
{"filename": "p01923_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (arr[0x0] == '0\\x200')\n        break;\n    var nm = arr['shift']()['split']('\\x20')['map'](Number);\n    var n = nm[0x0];\n    var m = nm[0x1];\n    var max = [];\n    for (var i = 0x0; i < m; i++)\n        max[i] = 0x0;\n    for (var i = 0x0; i < n; i++) {\n        var dv = arr['shift']()['split']('\\x20')['map'](Number);\n        var d = dv[0x0] - 0x1;\n        var v = dv[0x1];\n        if (max[d] < v)\n            max[d] = v;\n    }\n    var sum = 0x0;\n    for (var i = 0x0; i < m; i++)\n        sum += max[i];\n    console['log'](sum);\n}", "test_cases": [["5 3\n1 1\n2 3\n3 2\n3 5\n2 1\n4 2\n1 7\n2 1\n1 3\n1 5\n6 1\n1 3\n1 2\n1 8\n1 2\n1 7\n1 6\n20 9\n4 10\n2 4\n5 3\n6 6\n6 3\n7 4\n8 10\n4 6\n7 5\n1 8\n5 7\n1 5\n6 6\n9 9\n5 8\n6 7\n1 4\n6 4\n7 10\n3 5\n19 6\n4 1\n6 5\n5 10\n1 10\n3 10\n4 6\n2 3\n5 4\n2 10\n1 8\n3 4\n3 1\n5 4\n1 10\n1 3\n5 6\n5 2\n1 10\n2 3\n0 0", "9\n8\n8\n71\n51"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   if (arr[0] == \"0 0\") break;\n   var nm = arr.shift().split(\" \").map(Number);\n   var n = nm[0];\n   var m = nm[1];\n   var max = [];\n   for (var i = 0; i < m; i++) max[i] = 0;\n   for (var i = 0; i < n; i++) {\n      var dv = arr.shift().split(\" \").map(Number);\n      var d = dv[0] - 1;\n      var v = dv[1];\n      if (max[d] < v) max[d] = v;\n   }\n   var sum = 0;\n   for (var i = 0; i < m; i++) sum += max[i];\n   console.log(sum);\n}", "language": "JavaScript"}
{"filename": "p01925_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    if (arr[0x0] == '0\\x200')\n        break;\n    var nm = arr['shift']()['split']('\\x20')['map'](Number);\n    var point = [];\n    for (var i = 0x0; i < nm[0x0]; i++)\n        point[i] = [\n            0x0,\n            0x0\n        ];\n    for (var i = 0x0; i < nm[0x1]; i++) {\n        var txlHov = '4|0|3|1|2'['split']('|');\n        var QdTkgh = 0x0;\n        while (!![]) {\n            switch (txlHov[QdTkgh++]) {\n            case '0':\n                var s = c['shift']();\n                continue;\n            case '1':\n                if (k == 0x1)\n                    point[c[0x0] - 0x1][0x0] += s;\n                continue;\n            case '2':\n                c['forEach'](function (v, i) {\n                    var AIQQgG = {\n                        'STItr': function (x, y) {\n                            return x - y;\n                        }\n                    };\n                    point[AIQQgG['STItr'](v, 0x1)][0x1] += s;\n                });\n                continue;\n            case '3':\n                var k = c['shift']();\n                continue;\n            case '4':\n                var c = arr['shift']()['split']('\\x20')['map'](Number);\n                continue;\n            }\n            break;\n        }\n    }\n    var max = 0x0;\n    for (var i = 0x0; i < nm[0x0]; i++) {\n        for (var j = 0x0; j < nm[0x0]; j++) {\n            if (i == j)\n                continue;\n            max = Math['max'](max, point[i][0x1] - point[j][0x0]);\n        }\n    }\n    console['log'](max + 0x1);\n}", "test_cases": [["3 2\n5 2 1 3\n8 2 2 3\n2 3\n8 2 1 2\n3 1 1\n5 1 2\n2 5\n100 1 1\n100 1 1\n100 1 1\n100 1 1\n100 1 1\n3 4\n5 1 1\n5 1 2\n100 2 1 3\n100 2 2 3\n0 0", "14\n11\n501\n196"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nwhile (true) {\n   if (arr[0] == \"0 0\") break;\n   var nm = arr.shift().split(\" \").map(Number);\n   var point = [];\n   for (var i = 0; i < nm[0]; i++) point[i] = [0, 0];\n   for (var i = 0; i < nm[1]; i++) {\n      var c = arr.shift().split(\" \").map(Number);\n      var s = c.shift();\n      var k = c.shift();\n      if (k == 1) point[c[0] - 1][0] += s;\n      c.forEach(function(v, i) {\n         point[v - 1][1] += s;\n      });\n   }\n   var max = 0;\n   for (var i = 0; i < nm[0]; i++) {\n      for (var j = 0; j < nm[0]; j++) {\n         if (i == j) continue;\n         max = Math.max(max, point[i][1] - point[j][0]);\n      }\n   }\n   console.log(max + 1);\n}", "language": "JavaScript"}
{"filename": "p01938_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar s = input['trim']()['split']('');\nvar abc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'['split']('');\ns = s['map'](v => abc['indexOf'](v));\nvar cnt = 0x0;\nvar memo = 0x0;\ns['forEach'](v => {\n    var RzCZtk = {\n        'TeuFb': function (x, y) {\n            return x >= y;\n        }\n    };\n    if (RzCZtk['TeuFb'](memo, v))\n        cnt++;\n    memo = v;\n});\nconsole['log'](cnt);", "test_cases": [["AIZU", "2"], ["HOKKAIDO", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar s=input.trim().split(\"\");\nvar abc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\ns = s.map(v=> abc.indexOf(v));\nvar cnt = 0;\nvar memo = 0;\ns.forEach(v=>{\n   if(memo >= v)cnt++;\n   memo = v;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p01967_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\narr = arr['map'](v => v['split']('\\x20')['map'](Number));\nvar n = arr['shift']();\nvar c = arr['shift']();\nvar q = arr['shift']();\nvar apple = [];\nfor (var i = 0x0; i <= n; i++)\n    apple[i] = 0x0;\nvar ans = 0x0;\nfor (var i = 0x0; i < arr['length']; i++) {\n    var [t, x, d] = arr[i];\n    if (t == 0x1) {\n        apple[x] += d;\n        if (c[x - 0x1] < apple[x]) {\n            ans = x;\n            break;\n        }\n    } else {\n        if (apple[x] < d) {\n            ans = x;\n            break;\n        } else {\n            apple[x] -= d;\n        }\n    }\n}\nconsole['log'](ans);", "test_cases": [["2\n3 3\n4\n1 1 2\n1 2 3\n2 1 3\n2 2 3", "1"], ["2\n3 3\n4\n1 1 3\n2 1 2\n1 2 3\n1 1 3", "1"], ["3\n3 4 5\n4\n1 1 3\n1 2 3\n1 3 5\n2 2 2", "0"], ["6\n28 56 99 3 125 37\n10\n1 1 10\n1 1 14\n1 3 90\n1 5 10\n2 3 38\n2 1 5\n1 3 92\n1 6 18\n2 5 9\n2 1 4", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\narr=arr.map(v=>v.split(\" \").map(Number));\nvar n = arr.shift();\nvar c=arr.shift();\nvar q = arr.shift();\nvar apple = [];\nfor(var i=0;i<=n;i++)apple[i]=0;\nvar ans=0;\nfor(var i=0;i<arr.length;i++){\n   var [t,x,d]=arr[i];\n   if(t==1){\n      apple[x]+=d;\n      if(c[x - 1] <apple[x]){\n         ans=x;\n         break;\n      }\n   } else {\n      if(apple[x]<d){\n         ans=x;\n         break;\n      }else{\n         apple[x]-=d;\n      }\n   }\n}\nconsole.log(ans);\n\n", "language": "JavaScript"}
{"filename": "p01981_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var gymd = arr['shift']();\n    if (gymd == '#')\n        break;\n    var [g, y, m, d] = gymd['split']('\\x20');\n    [y, m, d] = [\n        y - 0x0,\n        m - 0x0,\n        d - 0x0\n    ];\n    if (y <= 0x1e || y == 0x1f && m <= 0x4)\n        console['log'](gymd);\n    else {\n        y = y - 0x1e;\n        console['log']('?\\x20' + y + '\\x20' + m + '\\x20' + d);\n    }\n}", "test_cases": [["HEISEI 1 1 8\nHEISEI 31 4 30\nHEISEI 31 5 1\nHEISEI 99 12 31\nHEISEI 38 8 30\nHEISEI 98 2 22\nHEISEI 2 3 26\nHEISEI 28 4 23\n#", "HEISEI 1 1 8\nHEISEI 31 4 30\n? 1 5 1\n? 69 12 31\n? 8 8 30\n? 68 2 22\nHEISEI 2 3 26\nHEISEI 28 4 23"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nwhile(true){\n   var gymd = arr.shift();\n   if(gymd==\"#\")break;\n   var [g, y, m, d]=gymd.split(\" \");\n   [y,m,d]=[y-0,m-0,d-0];\n   if(y<=30 || y==31 && m<=4)console.log(gymd);\n   else {\n      y=y-30;\n      console.log(\"? \"+y+\" \"+m+\" \"+d);\n   }\n}\n", "language": "JavaScript"}
{"filename": "p01982_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var nlr = arr['shift']()['split']('\\x20')['map'](Number);\n    if (nlr['join']('') == '000')\n        break;\n    var [n, l, r] = [\n        nlr[0x0],\n        nlr[0x1],\n        nlr[0x2]\n    ];\n    var A = [];\n    for (var i = 0x0; i < n; i++)\n        A['push'](arr['shift']() - 0x0);\n    var cnt = 0x0;\n    for (var x = l; x <= r; x++) {\n        var flag = !![];\n        for (var i = 0x0; i < A['length']; i++) {\n            if (x % A[i] == 0x0) {\n                flag = ![];\n                if ((i + 0x1) % 0x2 != 0x0)\n                    cnt++;\n                break;\n            }\n        }\n        if (flag && n % 0x2 == 0x0)\n            cnt++;\n    }\n    console['log'](cnt);\n}", "test_cases": [["3 1988 2014\n400\n100\n4\n1 1000 1999\n1\n2 1111 3333\n2\n2\n6 2000 3000\n5\n7\n11\n9\n3\n13\n0 0 0", "7\n1000\n2223\n785"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var nlr=arr.shift().split(\" \").map(Number);\n   if(nlr.join(\"\")==\"000\")break;\n   var [n,l,r]=[nlr[0],nlr[1],nlr[2]];\n   var A = [];\n   for(var i=0;i<n;i++) A.push(arr.shift()-0);\n   var cnt=0;\n   for(var x=l;x<=r;x++){\n      var flag=true;\n      for(var i=0;i<A.length;i++){\n         if(x%A[i]==0){\n            flag=false;\n            if ((i+1)%2!=0)cnt++;\n            break;\n         }\n      }\n      if(flag && n%2==0)cnt++;\n   }  \n   console.log(cnt);\n}\n", "language": "JavaScript"}
{"filename": "p02017_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b, c, d] = input['trim']()['split']('\\x20')['map'](Number);\nif (a * b % 0x2 != 0x0 && (c + d) % 0x2 != 0x0)\n    console['log']('No');\nelse\n    console['log']('Yes');", "test_cases": [["3 5 1 4", "No"], ["3 5 2 4", "Yes"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,c,d] = input.trim().split(\" \").map(Number);\nif((a*b)%2!=0 && (c+d)%2!=0)console.log(\"No\");\nelse console.log(\"Yes\");\n\n", "language": "JavaScript"}
{"filename": "p02018_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\ninput = input['trim']()['split']('\\x0a');\narr = input[0x1]['split']('\\x20')['map'](Number);\narr = arr['filter'](v => v % 0x2 == 0x0);\nconsole['log'](arr['length']);", "test_cases": [["5\n4 3 5 2 6", "3"], ["3\n2 2 2", "3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\ninput = input.trim().split(\"\\n\")\narr = input[1].split(\" \").map(Number);\narr = arr.filter(v=> v%2==0);\nconsole.log(arr.length);\n", "language": "JavaScript"}
{"filename": "p02019_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [n, a, b, c] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](n - a - b + c);", "test_cases": [["6 3 2 1", "2"], ["10 9 9 9", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,a,b,c]= input.trim().split(\" \").map(Number);\nconsole.log(n-a-b+c);\n", "language": "JavaScript"}
{"filename": "p02020_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [n, arr] = input['trim']()['split']('\\x0a');\narr = arr['split']('\\x20')['map'](Number);\narr['sort'](function (a, b) {\n    var TSGuJI = {\n        'zDqBe': function (x, y) {\n            return x - y;\n        }\n    };\n    return TSGuJI['zDqBe'](a, b);\n});\nvar sum = arr['reduce'](function (a, b) {\n    return a + b;\n});\nif (sum % 0x2 == 0x0)\n    console['log'](sum / 0x2);\nelse {\n    for (var i = 0x0; i < arr['length']; i++) {\n        if (arr[i] % 0x2 == 0x1) {\n            console['log']((sum - arr[i]) / 0x2);\n            break;\n        }\n    }\n}", "test_cases": [["5\n2 3 5 6 7", "10"], ["4\n3 5 6 8", "11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,arr]= input.trim().split(\"\\n\");\narr=arr.split(\" \").map(Number);\narr.sort(function(a,b){\n   return a-b;\n});\nvar sum = arr.reduce(function(a,b){\n   return a+b;\n});\nif(sum%2==0)console.log(sum/2);\nelse {\n   for(var i=0;i<arr.length;i++){\n      if(arr[i]%2==1){\n         console.log((sum-arr[i])/2);\n         break;\n      }\n   }\n}\n", "language": "JavaScript"}
{"filename": "p02021_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [n, arr] = input['trim']()['split']('\\x0a');\narr = arr['split']('\\x20')['map'](Number);\nfor (var i = 0x1; i <= 0x64; i++) {\n    var sum = 0x0;\n    var flag = arr['every'](v => {\n        var GCVKik = {\n            'qeqOJ': function (x, y) {\n                return x - y;\n            },\n            'Npclf': function (x, y) {\n                return x + y;\n            }\n        };\n        sum = GCVKik['qeqOJ'](GCVKik['Npclf'](sum, v), i);\n        return sum >= 0x0;\n    });\n    if (!flag)\n        break;\n}\nconsole['log'](i - 0x1);", "test_cases": [["5\n4 2 5 3 1", "3"], ["5\n9 9 1 9 9", "6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [n,arr]= input.trim().split(\"\\n\");\narr=arr.split(\" \").map(Number);\nfor(var i=1;i<=100;i++){\n  var sum=0;\n  var flag = arr.every(v=>{\n     sum = sum + v - i;\n     return  (sum >= 0);\n  });\n  if(!flag)break;\n}\nconsole.log(i-1);\n", "language": "JavaScript"}
{"filename": "p02022_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar A = arr[0x1]['split']('\\x20')['map'](Number)['reduce']((a, b) => a + b);\nvar B = arr[0x2]['split']('\\x20')['map'](Number)['reduce']((a, b) => a + b);\nconsole['log'](A * B);", "test_cases": [["3 2\n3 1 5\n2 4", "54"], ["10 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10", "3025"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\"\\n\");\nvar A= arr[1].split(\" \").map(Number).reduce((a,b)=>a+b);\nvar B= arr[2].split(\" \").map(Number).reduce((a,b)=>a+b);\nconsole.log(A*B);\n", "language": "JavaScript"}
{"filename": "p02044_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nwhile (!![]) {\n    var [n, m] = arr['shift']()['split']('\\x20')['map'](Number);\n    if (n == 0x0 && m == 0x0)\n        break;\n    var x = m / n;\n    var sum = 0x0;\n    var a = arr['shift']()['split']('\\x20')['map'](Number);\n    a['forEach'](v => {\n        if (v >= x)\n            sum += x;\n        else\n            sum += v;\n    });\n    console['log'](sum);\n}", "test_cases": [["3 300\n120 100 80\n3 30\n10 20 5\n4 1000\n100 200 300 400\n5 5\n2523 8430 3 4199 632\n0 0", "280\n25\n800\n5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nwhile(true){\n   var [n,m]=arr.shift().split(\" \").map(Number);\n   if(n==0 && m==0)break;\n   var x=m/n;\n   var sum=0;\n   var a=arr.shift().split(\" \").map(Number);\n   a.forEach(v=>{\n      if(v>=x)sum+=x;\n      else sum+=v;\n   });\n   console.log(sum);\n}\n", "language": "JavaScript"}
{"filename": "p02052_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [h, w] = arr['shift']()['split']('\\x20')['map'](Number);\nvar b = [];\nfor (var i = 0x0; i < h; i++) {\n    arr['shift']()['split']('')['forEach']((v, j) => {\n        var EXTtod = {\n            'vRaXC': function (x, y) {\n                return x == y;\n            }\n        };\n        if (EXTtod['vRaXC'](v, 'B'))\n            b['push']([\n                i,\n                j\n            ]);\n    });\n}\nvar max = 0x0;\nfor (var i = 0x0; i < b['length']; i++) {\n    for (var j = i + 0x1; j < b['length']; j++) {\n        var d = Math['abs'](b[i][0x0] - b[j][0x0]) + Math['abs'](b[i][0x1] - b[j][0x1]);\n        max = Math['max'](max, d);\n    }\n}\nconsole['log'](max);", "test_cases": [["3 3\nB.B\n..B\n.BB", "4"], ["4 3\nB..\nB..\n...\n...", "1"], ["6 6\n...B..\nB.B.B.\n.B.B.B\n...B.B\n.B..B.\n..B...", "7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar b=[];\nfor(var i=0;i<h;i++){\n   arr.shift().split(\"\").forEach((v,j)=>{\n      if(v==\"B\")b.push([i,j]);\n   });\n}\nvar max=0;\nfor(var i=0;i<b.length;i++){\n   for(var j=i+1;j<b.length;j++){\n      var d=Math.abs(b[i][0]-b[j][0])+Math.abs(b[i][1]-b[j][1]);\n      max=Math.max(max,d);\n   }\n}\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02053_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [h, w] = arr['shift']()['split']('\\x20')['map'](Number);\nvar b = [];\nfor (var i = 0x0; i < h; i++) {\n    var two = [];\n    arr[i]['split']('')['forEach']((v, j) => {\n        var FZVpYz = {\n            'jimCi': function (x, y) {\n                return x == y;\n            }\n        };\n        if (FZVpYz['jimCi'](v, 'B'))\n            two['push']([\n                i,\n                j\n            ]);\n    });\n    if (two['length'] == 0x1)\n        b['push'](two[0x0]);\n    else if (two['length'] >= 0x2)\n        b['push'](two[0x0], two[two['length'] - 0x1]);\n}\nvar max = 0x0;\nfor (var i = 0x0; i < b['length']; i++) {\n    for (var j = i + 0x1; j < b['length']; j++) {\n        var d = Math['abs'](b[i][0x0] - b[j][0x0]) + Math['abs'](b[i][0x1] - b[j][0x1]);\n        max = Math['max'](max, d);\n    }\n}\nconsole['log'](max);", "test_cases": [["3 3\nB.B\n..B\n.BB", "4"], ["4 3\nB..\nB..\n...\n...", "1"], ["6 6\n...B..\nB.B.B.\n.B.B.B\n...B.B\n.B..B.\n..B...", "7"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [h,w]=arr.shift().split(\" \").map(Number);\nvar b=[];\nfor(var i=0;i<h;i++){\n   var two=[];\n   arr[i].split(\"\").forEach((v,j)=>{\n      if(v==\"B\")two.push([i,j]);\n   });\n   if(two.length==1)b.push(two[0]);\n   else if(two.length>=2)b.push(two[0],two[two.length-1]);\n}\nvar max=0;\nfor(var i=0;i<b.length;i++){\n   for(var j=i+1;j<b.length;j++){\n      var d=Math.abs(b[i][0]-b[j][0])+Math.abs(b[i][1]-b[j][1]);\n      max=Math.max(max,d);\n   }\n}\nconsole.log(max);\n\n", "language": "JavaScript"}
{"filename": "p02060_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar p = arr['shift']()['split']('\\x20')['map'](Number);\nvar t = arr['shift']()['split']('\\x20')['map'](Number);\nvar s = [];\nfor (var i = 0x0; i <= 0xc8; i++)\n    s[i] = Infinity;\ns[0x0] = 0x0;\nfor (var i = 0x0; i <= 0x64; i++) {\n    if (s[i] == Infinity)\n        continue;\n    s[i + t[0x0]] = Math['min'](s[i] + p[0x0], s[i + t[0x0]]);\n    s[i + t[0x1]] = Math['min'](s[i] + p[0x1], s[i + t[0x1]]);\n    s[i + t[0x2]] = Math['min'](s[i] + p[0x2], s[i + t[0x2]]);\n    s[i + t[0x3]] = Math['min'](s[i] + p[0x3], s[i + t[0x3]]);\n}\nvar min = Infinity;\nfor (var i = n; i <= 0xc8; i++)\n    min = Math['min'](min, s[i]);\nconsole['log'](min);", "test_cases": [["10\n1 2 3 4\n1 2 4 8", "6"], ["5\n2 9 9 8\n1 4 5 100", "8"], ["24\n2 3 4 7\n7 9 11 20", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar p=arr.shift().split(\" \").map(Number);\nvar t=arr.shift().split(\" \").map(Number);\nvar s=[];\nfor(var i=0;i<=200;i++)s[i]=Infinity;\ns[0]=0;\nfor(var i=0;i<=100;i++){\n   if(s[i]==Infinity)continue; \n   s[i+t[0]]=Math.min(s[i]+p[0],s[i+t[0]]);\n   s[i+t[1]]=Math.min(s[i]+p[1],s[i+t[1]]);\n   s[i+t[2]]=Math.min(s[i]+p[2],s[i+t[2]]);\n   s[i+t[3]]=Math.min(s[i]+p[3],s[i+t[3]]);\n}\nvar min=Infinity;\nfor(var i=n;i<=200;i++)min=Math.min(min,s[i]);\nconsole.log(min);\n", "language": "JavaScript"}
{"filename": "p02099_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\narr = arr['map'](v => v['replace']('.', ''))['map'](Number);\nvar a = [];\nfor (var i = 0x0; i <= 0xfa0; i++)\n    a[i] = 0x0;\narr['forEach'](v => a[v]++);\nvar ans = [];\nvar s = [];\ns[0x0] = a[0x0];\nfor (var i = 0x1; i <= 0xfa0; i++)\n    s[i] = s[i - 0x1] + a[i];\narr['forEach'](v => {\n    var wWmaDo = {\n        'uVOoi': function (x, y) {\n            return x - y;\n        }\n    };\n    var point = 0x0;\n    point += wWmaDo['uVOoi'](a[v], 0x1);\n    if (v != 0x0)\n        point += s[v - 0x1] * 0x3;\n    ans['push'](point);\n});\nconsole['log'](ans['join']('\\x0a'));", "test_cases": [["3\n1.000\n3.000\n3.000", "0\n4\n4"], ["3\n1.000\n2.000\n3.000", "0\n3\n6"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\narr=arr.map(v=> v.replace(\".\",\"\")).map(Number);\nvar a=[];\nfor(var i=0;i<=4000;i++)a[i]=0;\narr.forEach(v=> a[v]++);\nvar ans=[];\nvar s=[];\ns[0]=a[0];\nfor(var i=1;i<=4000;i++)s[i]=s[i-1]+a[i];\narr.forEach(v=>{\n   var point=0;\n   point+=a[v]-1;\n   if(v!=0)point+=s[v-1]*3;\n   ans.push(point);\n});\nconsole.log(ans.join(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02111_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar x = input['trim']() - 0x0;\nvar time = 0xc * 0x3c / 0x168 * x;\nvar h = (time - time % 0x3c) / 0x3c;\nvar m = time % 0x3c;\nconsole['log'](h + '\\x20' + m);", "test_cases": [["0", "0 0"], ["45", "1 30"], ["100", "3 20"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar x=input.trim()-0;\nvar time = 12*60/360 * x;\nvar h = (time - time%60) / 60;\nvar m = time % 60;\nconsole.log(h +\" \"+ m);\n", "language": "JavaScript"}
{"filename": "p02115_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a')['map'](Number);\nvar n = arr['shift']();\nvar a = arr['shift']();\nvar cnt = 0x1;\nvar max = 0x1;\nvar memo = 0x0;\narr['forEach'](v => {\n    var QmCjJm = {\n        'TiqLc': function (x, y) {\n            return x > y;\n        },\n        'PMPzD': function (x, y) {\n            return x == y;\n        }\n    };\n    if (QmCjJm['TiqLc'](a, v)) {\n        if (QmCjJm['PMPzD'](memo, 0x1))\n            cnt = 0x2;\n        else\n            cnt++;\n        memo = -0x1;\n    } else if (a < v) {\n        if (QmCjJm['PMPzD'](memo, -0x1))\n            cnt = 0x2;\n        else\n            cnt++;\n        memo = 0x1;\n    }\n    max = Math['max'](max, cnt);\n    a = v;\n});\nconsole['log'](max);", "test_cases": [["3\n2\n5\n1", "2"], ["5\n4\n5\n2\n1\n3", "3"], ["3\n4\n4\n4", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\").map(Number);\nvar n=arr.shift();\nvar a=arr.shift();\nvar cnt=1;\nvar max=1;\nvar memo=0;\narr.forEach(v=>{\n   if(a>v){\n      if(memo == 1)cnt=2;\n      else cnt++;\n      memo=-1;\n   }else if(a<v){\n      if(memo == -1)cnt=2;\n      else cnt++;      \n      memo=1;\n   }\n   max=Math.max(max,cnt);\n   a=v;\n});\nconsole.log(max);\n", "language": "JavaScript"}
{"filename": "p02124_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar x = arr['shift']() - 0x0;\nconsole['log']('ai1333' + '3'['repeat'](x / 0x64));", "test_cases": [["0", "ai1333"], ["300", "ai1333333"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar x = arr.shift()-0;\nconsole.log(\"ai1333\" + \"3\".repeat(x/100));\n", "language": "JavaScript"}
{"filename": "p02126_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [n, m, c] = arr['shift']()['split']('\\x20')['map'](Number);\nvar L = arr['shift']()['split']('\\x20')['map'](Number);\nvar cw = arr['map'](v => v['split']('\\x20')['map'](Number));\ncw['sort'](function (a, b) {\n    return b[0x1] - a[0x1];\n});\nvar sum = 0x0;\nfor (var i = 0x0; i < cw['length']; i++) {\n    if (m == 0x0)\n        break;\n    var max = L[cw[i][0x0] - 0x1];\n    if (max > 0x0) {\n        sum += cw[i][0x1];\n        L[cw[i][0x0] - 0x1]--;\n        m--;\n    }\n}\nconsole['log'](sum);", "test_cases": [["3 3 2\n1 1\n1 1\n1 100\n2 10", "110"], ["3 3 3\n1 0 1\n1 1\n2 100\n3 1", "2"], ["22 7 26\n11 14 15 3 11 7 16 17 1 4 2 19 4 14 16 16 3 13 17 12 7 11 2 20 12 22\n6 10\n1 3\n13 1\n16 5\n4 1\n20 7\n18 4\n26 6\n9 1\n12 2\n21 1\n21 7\n18 1\n14 5\n24 5\n6 1\n3 1\n2 5\n21 2\n7 6\n10 9\n15 7", "52"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar [n,m,c]=arr.shift().split(\" \").map(Number);\nvar L=arr.shift().split(\" \").map(Number);\nvar cw = arr.map(v => v.split(\" \").map(Number));\ncw.sort(function(a,b){\n   return b[1] - a[1];\n});\nvar sum=0;\nfor(var i=0;i<cw.length;i++){\n   if(m==0)break;\n   var max = L[cw[i][0]-1];\n   if(max>0){\n      sum+=cw[i][1];\n      L[cw[i][0]-1]--;\n      m--;\n   }\n}\nconsole.log(sum);\n", "language": "JavaScript"}
{"filename": "p02137_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar p = input['trim']() - 0x0;\nconsole['log'](p - p % 0x1f4);", "test_cases": [["5700", "5500"], ["1333", "1000"], ["100000", "100000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar p= input.trim()-0;\nconsole.log(p-(p%500));\n", "language": "JavaScript"}
{"filename": "p02149_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x20')['map'](Number);\nvar max = Math['max'](...arr);\nconsole['log']([\n    'A',\n    'B',\n    'C'\n][arr['indexOf'](max)]);", "test_cases": [["1000 900 850", "A"], ["1000 800 1200", "C"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr= input.trim().split(\" \").map(Number);\nvar max=Math.max(...arr);\nconsole.log([\"A\",\"B\",\"C\"][arr.indexOf(max)]);\n", "language": "JavaScript"}
{"filename": "p02162_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [t, tt, r, rr] = input['trim']()['split']('\\x20')['map'](Number);\nif (r == -0x1 || rr == -0x1) {\n    if (t > tt)\n        console['log']('Bob');\n    else if (t < tt)\n        console['log']('Alice');\n    else if (t == tt)\n        console['log']('Draw');\n} else if (r > rr)\n    console['log']('Alice');\nelse if (r < rr)\n    console['log']('Bob');\nelse if (r == rr)\n    console['log']('Draw');", "test_cases": [["9 8 1000 999", "Alice"], ["9 8 1000 1000", "Draw"], ["9 8 2849 -1", "Bob"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [t,tt,r,rr]=input.trim().split(\" \").map(Number);\nif(r==-1 || rr==-1){\n  if(t>tt)console.log(\"Bob\");\n  else if(t<tt)console.log(\"Alice\");\n  else if(t==tt)console.log(\"Draw\");\n}\nelse if(r>rr)console.log(\"Alice\");\nelse if(r<rr)console.log(\"Bob\");\nelse if(r==rr)console.log(\"Draw\");\n", "language": "JavaScript"}
{"filename": "p02163_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar [a, b] = [\n    0x0,\n    0x1\n];\narr['forEach'](v => {\n    var NIXPBE = {\n        'MdWXi': function (x, y) {\n            return x == y;\n        }\n    };\n    var [q, x] = v['split']('\\x20')['map'](Number);\n    if (NIXPBE['MdWXi'](q, 0x1)) {\n        b *= x;\n        a *= x;\n    } else if (q == 0x2)\n        a -= x;\n    else if (NIXPBE['MdWXi'](q, 0x3))\n        a += x;\n});\nconsole['log'](a + '\\x20' + b);", "test_cases": [["3\n1 2\n2 10\n3 8", "-2 2"], ["10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10\n1 10", "0 10000000000"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar [a,b]=[0,1];\narr.forEach(v=>{\n   var [q,x]=v.split(\" \").map(Number);\n   if(q==1){\n      b*=x;\n      a*=x;\n   }\n   else if(q==2)a-=x;\n   else if(q==3)a+=x;\n});\nconsole.log(a+\" \"+b);\n", "language": "JavaScript"}
{"filename": "p02182_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [n, m] = arr['shift']()['split']('\\x20')['map'](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    var s = arr[i];\n    var t = arr[i + n];\n    for (var j = 0x0; j < m; j++) {\n        if (s[j] != t[j])\n            cnt++;\n    }\n}\nconsole['log'](cnt);", "test_cases": [["2 3\n..#\n##.\n.##\n#..", "2"], ["7 28\n............................\n...#.....###...####....###..\n..#.#...#...#..#...#..#...#.\n.#...#..#......####...#.....\n.#####..#...#..#......#...#.\n.#...#...###...#.......###..\n............................\n............................\n..###....###.....##....###..\n.#...#..#...#...#.#...#...#.\n...##...#...#.....#....####.\n..#.....#...#.....#.......#.\n.#####...###....####...###..\n............................", "40"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,m]=arr.shift().split(\" \").map(Number);\nvar cnt=0;\nfor(var i=0;i<n;i++){\n   var s=arr[i];\n   var t=arr[i+n];\n   for(var j=0;j<m;j++){\n      if(s[j]!=t[j])cnt++;\n   }\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02189_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar min = Infinity;\nvar ans = -0x1;\nfor (var i = 0x0; i < n; i++) {\n    if (min > a[i]) {\n        ans = i;\n        min = a[i];\n    }\n}\nconsole['log'](ans + 0x1);", "test_cases": [["6\n8 6 9 1 2 1", "4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar min=Infinity;\nvar ans=-1;\nfor(var i=0;i<n;i++){\n   if(min>a[i]){\n      ans=i;\n      min=a[i];\n   }\n}\nconsole.log(ans+1);\n", "language": "JavaScript"}
{"filename": "p02190_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar s = new Set();\na['forEach'](v => s['add'](v));\nconsole['log'](s['size']);", "test_cases": [["6\n8 6 9 1 2 1", "5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar s= new Set();\na.forEach(v=>s.add(v));\nconsole.log(s.size);\n", "language": "JavaScript"}
{"filename": "p02191_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [n, q] = arr['shift']()['split']('\\x20')['map'](Number);\nvar ary = arr['shift']()['split']('\\x20')['map'](Number);\nary['sort']((a, b) => a - b);\nvar tansaku = function (x, str) {\n    var CeTywt = {\n        'EkNtW': function (x, y) {\n            return x > y;\n        },\n        'tQKjm': function (x, y) {\n            return x - y;\n        },\n        'NRhnf': function (x, y) {\n            return x + y;\n        },\n        'eZfJl': function (x, y) {\n            return x / y;\n        },\n        'rhAKZ': function (x, y) {\n            return x < y;\n        },\n        'thUWo': function (x, y) {\n            return x == y;\n        },\n        'CcKEP': 'ookii',\n        'GzGAX': function (x, y) {\n            return x == y;\n        }\n    };\n    var first = -0x1;\n    var last = ary['length'];\n    while (CeTywt['EkNtW'](CeTywt['tQKjm'](last, first), 0x1)) {\n        var mid = CeTywt['NRhnf'](first, Math['floor'](CeTywt['eZfJl'](last - first, 0x2)));\n        if (CeTywt['rhAKZ'](ary[mid], x))\n            first = mid;\n        else if (CeTywt['thUWo'](str, CeTywt['CcKEP']) && CeTywt['GzGAX'](ary[mid], x))\n            first = mid;\n        else\n            last = mid;\n    }\n    return last;\n};\nvar ans = [];\narr['forEach'](v => {\n    var RjGmjU = {\n        'kBZxu': function (x, y) {\n            return x - y;\n        },\n        'xnuub': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'cqLHP': 'ookii',\n        'KZxKM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var [l, r] = v['split']('\\x20')['map'](Number);\n    ans['push'](RjGmjU['kBZxu'](RjGmjU['xnuub'](tansaku, r, RjGmjU['cqLHP']), RjGmjU['KZxKM'](tansaku, l, 'izyou')));\n});\nconsole['log'](ans['join']('\\x0a'));", "test_cases": [["6 3\n8 6 9 1 2 1\n2 8\n1 7\n3 5", "3\n4\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [n,q]=arr.shift().split(\" \").map(Number);\nvar ary=arr.shift().split(\" \").map(Number);\nary.sort((a,b)=>a-b);\nvar tansaku=function(x,str){\n    var first=-1;\n    var last=ary.length;\n    while (last-first>1){\n        var mid=first+Math.floor((last-first)/2);\n        if(ary[mid]<x)first=mid;\n        else if(str==\"ookii\" && ary[mid]==x)first=mid;\n        else last=mid;\n    }\n    return last;\n};\nvar ans=[];\narr.forEach(v=>{\n   var [l,r]=v.split(\" \").map(Number);\n   ans.push(tansaku(r,\"ookii\")-tansaku(l,\"izyou\"));\n});\nconsole.log(ans.join(\"\\n\"));\n", "language": "JavaScript"}
{"filename": "p02198_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](a * b);", "test_cases": [["3 4", "12"], ["7 7", "49"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b]=input.trim().split(\" \").map(Number);\nconsole.log(a*b);\n", "language": "JavaScript"}
{"filename": "p02199_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [a, b] = arr['shift']()['split']('\\x20')['map'](Number);\nvar [p, q, r] = arr['shift']()['split']('\\x20')['map'](Number);\nvar hanareta = b * p;\nvar tikaduita = (b - a) * q;\nvar d = hanareta - tikaduita;\nconsole['log']((d / (q + r) + b)['toFixed'](0xc));", "test_cases": [["14 86\n9 1 20", "119.428571428571"], ["1 4\n15 9 2", "7.000000000000"], ["67 87 \n7 4 51", "96.618181818182"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [a,b]=arr.shift().split(\" \").map(Number);\nvar [p,q,r]=arr.shift().split(\" \").map(Number);\nvar hanareta=b*p;\nvar tikaduita=(b-a)*q;\nvar d=hanareta-tikaduita;\nconsole.log((d/(q+r)+b).toFixed(12));\n", "language": "JavaScript"}
{"filename": "p02200_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar cnt = 0x0;\nfor (var i = 0x0; i < n - 0x1; i++) {\n    if (a[i] < a[i + 0x1])\n        cnt++;\n}\nconsole['log'](cnt);", "test_cases": [["5\n8 6 9 1 20", "2"], ["6\n3 3 4 3 3 4", "2"], ["10\n10 9 8 7 6 5 4 3 2 1", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar cnt=0;\nfor(var i=0;i<n-1;i++){\n   if(a[i]<a[i+1])cnt++;\n}\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02201_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar cnt = 0x0;\narr['forEach'](v => {\n    var VbFjAY = { 'UndjS': 'E869120' };\n    if (v == VbFjAY['UndjS'])\n        cnt++;\n});\nconsole['log'](cnt);", "test_cases": [["5\nE869120\nTMJN\nE869120\nTAISA\nYNYMXIAOLONGBAO", "2"], ["3\nSQUARE1001\nMENCOTTON\nB2563125", "0"], ["6\nE8691200\nE869121\nE869122\nE869123\nE869124\nE869125", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar cnt=0;\narr.forEach(v=>{\n   if(v==\"E869120\")cnt++;\n});\nconsole.log(cnt);\n", "language": "JavaScript"}
{"filename": "p02202_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar v = arr['shift']()['split']('\\x20')['map'](Number);\nvar sum = 0x0;\nfor (var i = 0x0; i < n; i++) {\n    sum += v[i] - (i + 0x1);\n}\nconsole['log'](sum);", "test_cases": [["1\n59549", "59548"], ["5\n2 1 8 5 7", "8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar v=arr.shift().split(\" \").map(Number);\nvar sum=0;\nfor(var i=0;i<n;i++){\n   sum+=v[i]-(i+1);\n}\nconsole.log(sum);\n", "language": "JavaScript"}
{"filename": "p02203_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar v = arr['shift']()['split']('\\x20')['map'](Number);\nvar cnt = 0x1;\nfor (var i = 0x0; i < n - 0x1; i++) {\n    if (v[i] >= v[i + 0x1])\n        cnt++;\n}\nconsole['log'](cnt);\nconsole['log'](n);", "test_cases": [["5\n8 6 9 1 20", "3\n5"], ["6\n3 3 4 3 3 4", "4\n6"], ["8\n5 5 4 4 3 3 2 2", "8\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar v=arr.shift().split(\" \").map(Number);\nvar cnt=1;\nfor(var i=0;i<n-1;i++){\n   if(v[i]>=v[i+1])cnt++;\n}\nconsole.log(cnt);\nconsole.log(n);\n", "language": "JavaScript"}
{"filename": "p02204_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar [m, n] = arr['shift']()['split']('\\x20')['map'](Number);\nvar a = arr['shift']()['split']('\\x20');\nif (m == 0x2) {\n    var cnt = [\n        0x0,\n        0x0\n    ];\n    for (var i = 0x0; i < n; i++) {\n        if (a[i] - 0x1 == i % 0x2)\n            cnt[0x0]++;\n        if (a[i] - 0x1 == (i + 0x1) % 0x2)\n            cnt[0x1]++;\n    }\n    console['log'](Math['min'](...cnt));\n} else {\n    var cnt = 0x0;\n    for (var i = 0x1; i < n; i++) {\n        if (a[i - 0x1] == a[i]) {\n            cnt++;\n            i++;\n        }\n    }\n    console['log'](cnt);\n}", "test_cases": [["2 3\n2 2 1", "1"], ["3 6\n1 1 1 2 2 3", "2"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\"\\n\");\nvar [m,n]=arr.shift().split(\" \").map(Number);\nvar a=arr.shift().split(\" \");\nif(m==2){\n   var cnt=[0,0];\n   for(var i=0;i<n;i++){\n      if(a[i]-1==i%2)cnt[0]++;\n      if(a[i]-1==(i+1)%2)cnt[1]++;\n   }\n   console.log(Math.min(...cnt));\n}else{\n   var cnt=0;\n   for(var i=1;i<n;i++){\n      if(a[i-1] == a[i]){\n         cnt++;\n         i++;\n      }\n   }\n   console.log(cnt);\n}\n", "language": "JavaScript"}
{"filename": "p02212_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x20')['map'](Number);\nvar [a, b, c, d] = arr['sort']((a, b) => b - a);\nconsole['log'](Math['abs'](a + d - (b + c)));", "test_cases": [["2 1 3 4", "0"], ["64 224 239 1024", "625"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr=input.trim().split(\" \").map(Number);\nvar [a,b,c,d]=arr.sort((a,b)=>b-a);\nconsole.log(Math.abs((a+d)-(b+c)));\n", "language": "JavaScript"}
{"filename": "p02439_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar [a, b, c] = input['trim']()['split']('\\x20')['map'](Number);\nconsole['log'](Math['min'](a, b, c) + '\\x20' + Math['max'](a, b, c));", "test_cases": [["4 5 3", "3 5"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar [a,b,c]=input.trim().split(\" \").map(Number);\nconsole.log(Math.min(a,b,c)+\" \"+Math.max(a,b,c));\n", "language": "JavaScript"}
{"filename": "p02441_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar q = arr['shift']() - 0x0;\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var [b, e, k] = arr[i]['split']('\\x20')['map'](Number);\n    var cnt = 0x0;\n    for (var j = b; j < e; j++) {\n        if (a[j] == k)\n            cnt++;\n    }\n    s += cnt + '\\x0a';\n}\nconsole['log'](s['trim']());", "test_cases": [["9\n1 4 1 4 2 1 3 5 6\n3\n0 9 1\n1 6 1\n3 7 5", "3\n2\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [b,e,k]=arr[i].split(\" \").map(Number);\n   var cnt = 0;\n   for(var j=b;j<e;j++){\n      if(a[j]==k)cnt++;\n   }\n   s+=cnt+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02442_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar m = arr['shift']() - 0x0;\nvar b = arr['shift']()['split']('\\x20')['map'](Number);\nfor (var i = 0x0; i < m; i++) {\n    if (a['length'] - 0x1 < i || b[i] > a[i]) {\n        console['log'](0x1);\n        break;\n    } else if (b[i] < a[i]) {\n        console['log'](0x0);\n        break;\n    }\n}\nif (i == m)\n    console['log'](0x0);", "test_cases": [["3\n1 2 3\n2\n2 4", "1"], ["4\n5 4 7 0\n5\n1 2 3 4 5", "0"], ["3\n1 1 2\n4\n1 1 2 2", "1"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar m=arr.shift()-0;\nvar b=arr.shift().split(\" \").map(Number);\nfor(var i=0;i<m;i++){\n   if(a.length-1<i || b[i]>a[i]){\n      console.log(1);\n      break;\n   }else if(b[i]<a[i]){\n      console.log(0);\n      break;\n   }\n}\nif(i==m)console.log(0);\n", "language": "JavaScript"}
{"filename": "p02443_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar q = arr['shift']() - 0x0;\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    var uYEtOl = '3|2|1|4|0'['split']('|');\n    var hISRGl = 0x0;\n    while (!![]) {\n        switch (uYEtOl[hISRGl++]) {\n        case '0':\n            a = x['concat'](y, z);\n            continue;\n        case '1':\n            var y = a['slice'](b, e)['reverse']();\n            continue;\n        case '2':\n            var x = a['slice'](0x0, b);\n            continue;\n        case '3':\n            var [b, e] = arr[i]['split']('\\x20')['map'](Number);\n            continue;\n        case '4':\n            var z = a['slice'](e);\n            continue;\n        }\n        break;\n    }\n}\nconsole['log'](a['join']('\\x20'));", "test_cases": [["8\n1 2 3 4 5 6 7 8\n2\n1 6\n3 8", "1 6 5 8 7 2 3 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   var [b,e]=arr[i].split(\" \").map(Number);\n   var x=a.slice(0,b);\n   var y=a.slice(b,e).reverse();\n   var z=a.slice(e);\n   a = x.concat(y,z);\n}\nconsole.log(a.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02445_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar q = arr['shift']() - 0x0;\nfor (var i = 0x0; i < q; i++) {\n    var [b, e, t] = arr[i]['split']('\\x20')['map'](Number);\n    var k = e - b;\n    for (var j = 0x0; j < k; j++) {\n        [a[b + j], a[t + j]] = [\n            a[t + j],\n            a[b + j]\n        ];\n    }\n}\nconsole['log'](a['join']('\\x20'));", "test_cases": [["11\n1 2 3 4 5 6 7 8 9 10 11\n1\n1 4 7", "1 8 9 10 5 6 7 2 3 4 11"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar q=arr.shift()-0;\nfor(var i=0;i<q;i++){\n   var [b,e,t]=arr[i].split(\" \").map(Number);\n   var k=e-b;\n   for(var j=0;j<k;j++){\n      [a[b+j],a[t+j]]= [a[t+j], a[b+j]];\n   }\n}\nconsole.log(a.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02446_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar b = [];\nvar memo = '';\nfor (var i = 0x0; i < a['length']; i++) {\n    if (a[i] !== memo)\n        b['push'](a[i]);\n    memo = a[i];\n}\nconsole['log'](b['join']('\\x20'));", "test_cases": [["4\n1 2 2 4", "1 2 4"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar b=[];\nvar memo=\"\";\nfor(var i=0;i<a.length;i++){\n   if(a[i]!==memo)b.push(a[i]);\n   memo=a[i];\n}\nconsole.log(b.join(\" \"));\n", "language": "JavaScript"}
{"filename": "p02447_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = [];\nfor (var i = 0x0; i < n; i++)\n    a['push'](arr[i]['split']('\\x20')['map'](Number));\na['sort'](function (a, b) {\n    var JNdpmg = {\n        'blGcw': function (x, y) {\n            return x != y;\n        },\n        'adYej': function (x, y) {\n            return x - y;\n        },\n        'YYbar': function (x, y) {\n            return x - y;\n        }\n    };\n    if (JNdpmg['blGcw'](a[0x0], b[0x0]))\n        return JNdpmg['adYej'](a[0x0], b[0x0]);\n    else\n        return JNdpmg['YYbar'](a[0x1], b[0x1]);\n});\nconsole['log'](a['join']('\\x0a')['replace'](/,/g, '\\x20'));", "test_cases": [["5\n4 7\n5 5\n2 3\n6 8\n2 1", "2 1\n2 3\n4 7\n5 5\n6 8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=[];\nfor(var i=0;i<n;i++)a.push(arr[i].split(\" \").map(Number));\na.sort(function(a,b){\n   if(a[0]!=b[0]) return a[0]-b[0];\n   else return a[1]-b[1];\n});\nconsole.log(a.join(\"\\n\").replace(/,/g,\" \"));\n", "language": "JavaScript"}
{"filename": "p02451_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20');\nvar myMap = new Map();\nfor (var i = 0x0; i < n; i++) {\n    myMap['set'](a[i], 0x0);\n}\nvar q = arr['shift']();\nvar s = '';\nfor (var i = 0x0; i < q; i++) {\n    s += (myMap['has'](arr[i]) ? 0x1 : 0x0) + '\\x0a';\n}\nconsole['log'](s['trim']());", "test_cases": [["4\n1 2 2 4\n3\n2\n3\n5", "1\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \");\nvar myMap = new Map();\nfor(var i=0;i<n;i++){\n   myMap.set(a[i], 0);\n}\nvar q=arr.shift();\nvar s=\"\";\nfor(var i=0;i<q;i++){\n   s+=((myMap.has(arr[i]))?1:0)+\"\\n\";\n}\nconsole.log(s.trim());\n", "language": "JavaScript"}
{"filename": "p02452_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar n = arr['shift']() - 0x0;\nvar a = arr['shift']()['split']('\\x20')['map'](Number);\nvar m = arr['shift']() - 0x0;\nvar b = arr['shift']()['split']('\\x20')['map'](Number);\nvar memo = 0x0;\nvar cnt = 0x0;\nfor (var i = 0x0; i < m; i++) {\n    var num = b[i];\n    for (var j = memo; j < n; j++) {\n        memo = j;\n        if (num == a[j]) {\n            cnt++;\n            break;\n        }\n    }\n}\nconsole['log'](cnt == m ? 0x1 : 0x0);", "test_cases": [["4\n1 2 3 4\n2\n2 4", "1"], ["4\n1 2 3 4\n3\n1 2 5", "0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar n=arr.shift()-0;\nvar a=arr.shift().split(\" \").map(Number);\nvar m=arr.shift()-0;\nvar b=arr.shift().split(\" \").map(Number);\nvar memo=0;\nvar cnt = 0;\nfor(var i=0;i<m;i++){\n   var num=b[i];\n   for(var j=memo;j<n;j++){\n      memo=j;\n      if(num==a[j]){\n         cnt++;\n         break;\n      }\n   }\n}\nconsole.log((cnt==m)?1:0);\n", "language": "JavaScript"}
{"filename": "p02455_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar q = arr['shift']() - 0x0;\nvar str = '';\nvar set = new Set();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b] = arr[i]['split']('\\x20');\n    if (a == '0') {\n        set['add'](b);\n        str += set['size'] + '\\x0a';\n    } else {\n        str += (set['has'](b) ? 0x1 : 0x0) + '\\x0a';\n    }\n}\nconsole['log'](str['trim']());", "test_cases": [["7\n0 1\n0 2\n0 3\n0 2\n0 4\n1 3\n1 10", "1\n2\n3\n3\n4\n1\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar  set = new Set();\nfor(var i=0;i<q;i++){\n   var [a,b]=arr[i].split(\" \");\n   if(a==\"0\"){\n      set.add(b);\n      str+=set.size+\"\\n\";\n   }else {\n      str+=((set.has(b))?1:0)+\"\\n\";\n   }\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02456_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar q = arr['shift']() - 0x0;\nvar str = '';\nvar set = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b] = arr[i]['split']('\\x20');\n    if (a == '0') {\n        set['set'](b, 0x0);\n        str += set['size'] + '\\x0a';\n    } else if (a == '1') {\n        str += (set['has'](b) ? 0x1 : 0x0) + '\\x0a';\n    } else {\n        set['delete'](b);\n    }\n}\nconsole['log'](str['trim']());", "test_cases": [["8\n0 1\n0 2\n0 3\n2 2\n1 1\n1 2\n1 3\n0 2", "1\n2\n3\n1\n0\n1\n3"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar  set = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b]=arr[i].split(\" \");\n   if(a==\"0\"){\n      set.set(b,0);\n      str+=set.size+\"\\n\";\n   }else if(a==\"1\") {\n      str+=((set.has(b))?1:0)+\"\\n\";\n   } else{\n      set.delete(b);\n   }\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02459_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar q = arr['shift']() - 0x0;\nvar str = '';\nvar map = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b, c] = arr[i]['split']('\\x20');\n    if (a == '0')\n        map['set'](b, c);\n    else\n        str += map['get'](b) + '\\x0a';\n}\nconsole['log'](str['trim']());", "test_cases": [["7\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n0 black 8\n1 black", "1\n4\n8"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar map = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b,c]=arr[i].split(\" \");\n   if(a==\"0\")map.set(b,c);\n   else str+=map.get(b) + \"\\n\";\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02460_1", "type": "JavaScript", "obfuscated": "var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar arr = input['trim']()['split']('\\x0a');\nvar q = arr['shift']() - 0x0;\nvar str = '';\nvar map = new Map();\nfor (var i = 0x0; i < q; i++) {\n    var [a, b, c] = arr[i]['split']('\\x20');\n    if (a == '0')\n        map['set'](b, c);\n    else if (a == '1')\n        str += (map['has'](b) ? map['get'](b) : '0') + '\\x0a';\n    else\n        map['delete'](b);\n}\nconsole['log'](str['trim']());", "test_cases": [["8\n0 blue 4\n0 red 1\n0 white 5\n1 red\n1 blue\n2 red\n1 black\n1 red", "1\n4\n0\n0"]], "original": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar arr = input.trim().split(\"\\n\");\nvar q=arr.shift()-0;\nvar str=\"\";\nvar map = new Map();\nfor(var i=0;i<q;i++){\n   var [a,b,c]=arr[i].split(\" \");\n   if(a==\"0\")map.set(b,c);\n   else if(a==\"1\")str+=((map.has(b)) ? map.get(b) : \"0\") + \"\\n\";\n   else map.delete(b);\n}\nconsole.log(str.trim());\n", "language": "JavaScript"}
{"filename": "p02471_1", "type": "JavaScript", "obfuscated": "function euc(a, b) {\n    var XVaovC = {\n        'xNzph': function (x, y) {\n            return x > y;\n        },\n        'IlNsD': '8|9|3|0|4|7|5|1|6|2',\n        'OExPf': function (x, y) {\n            return x * y;\n        },\n        'jRXtP': function (x, y) {\n            return x - y;\n        },\n        'OKykX': function (x, y) {\n            return x * y;\n        },\n        'nlGvy': function (x, y) {\n            return x / y;\n        },\n        'rIuqU': function (x, y) {\n            return x % y;\n        }\n    };\n    var r0 = a;\n    var r1 = b;\n    var x0 = 0x1;\n    var x1 = 0x0;\n    var y0 = 0x0;\n    var y1 = 0x1;\n    while (XVaovC['xNzph'](r1, 0x0)) {\n        var vIZqjB = XVaovC['IlNsD']['split']('|');\n        var YyrvUq = 0x0;\n        while (!![]) {\n            switch (vIZqjB[YyrvUq++]) {\n            case '0':\n                var y2 = y0 - XVaovC['OExPf'](q, y1);\n                continue;\n            case '1':\n                x1 = x2;\n                continue;\n            case '2':\n                y1 = y2;\n                continue;\n            case '3':\n                var x2 = XVaovC['jRXtP'](x0, XVaovC['OKykX'](q, x1));\n                continue;\n            case '4':\n                r0 = r1;\n                continue;\n            case '5':\n                x0 = x1;\n                continue;\n            case '6':\n                y0 = y1;\n                continue;\n            case '7':\n                r1 = r2;\n                continue;\n            case '8':\n                var q = Math['floor'](XVaovC['nlGvy'](r0, r1));\n                continue;\n            case '9':\n                var r2 = XVaovC['rIuqU'](r0, r1);\n                continue;\n            }\n            break;\n        }\n    }\n    return [\n        x0,\n        y0\n    ];\n}\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']();\nvar nums = input['split']('\\x20')['map'](function (num) {\n    return +num;\n});\nvar a = nums[0x0];\nvar b = nums[0x1];\nconsole['log'](euc(a, b)['join']('\\x20'));", "test_cases": [["4 12", "1 0"], ["3 8", "3 -1"]], "original": "function euc(a, b) {\n    var r0 = a;\n    var r1 = b;\n    var x0 = 1;\n    var x1 = 0;\n    var y0 = 0;\n    var y1 = 1;\n\n    while (r1 > 0) {\n        var q = Math.floor(r0 / r1);\n        var r2 = r0 % r1;\n        var x2 = x0 - q * x1;\n        var y2 = y0 - q * y1;\n\n        r0 = r1;\n        r1 = r2;\n        x0 = x1;\n        x1 = x2;\n        y0 = y1;\n        y1 = y2;\n    }\n    return [x0, y0];\n}\n\nvar input = require('fs').readFileSync('/dev/stdin', 'utf8').trim();\nvar nums = input.split(' ').map(function(num){return +num;});\nvar a = nums[0];\nvar b = nums[1];\n\nconsole.log(euc(a, b).join(' '));", "language": "JavaScript"}
{"filename": "p02697_1", "type": "JavaScript", "obfuscated": "const processData = lines => {\n    const jXMVlJ = {\n        'gFnwZ': function (x, y) {\n            return x === y;\n        },\n        'TVRnp': function (x, y) {\n            return x % y;\n        },\n        'iKEWc': function (x, y) {\n            return x - y;\n        },\n        'lvwzb': function (x, y) {\n            return x + y;\n        },\n        'oIiyu': function (x, y) {\n            return x / y;\n        }\n    };\n    let [n, m] = lines[0x0]['split']('\\x20')['map'](x => +x);\n    if (jXMVlJ['gFnwZ'](jXMVlJ['TVRnp'](n, 0x2), 0x1)) {\n        let end = jXMVlJ['iKEWc'](n, 0x1);\n        let start = 0x1;\n        while (m) {\n            console['log'](start++ + '\\x20' + end--);\n            m--;\n        }\n    } else {\n        let end = jXMVlJ['lvwzb'](jXMVlJ['oIiyu'](n, 0x2), 0x1);\n        let start = jXMVlJ['oIiyu'](n, 0x2);\n        while (m) {\n            console['log'](start-- + '\\x20' + end++);\n            m--;\n        }\n    }\n};\nlet i = '';\nprocess['stdin']['on']('data', c => i += c);\nprocess['stdin']['on']('end', () => {\n    const qELUzz = {\n        'YOoJI': function (callee, param1) {\n            return callee(param1);\n        },\n        'OebJv': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    const {EOL: EOL} = qELUzz['YOoJI'](require, 'os');\n    const lines = i['split'](EOL);\n    qELUzz['OebJv'](processData, lines);\n});", "test_cases": [["4 1", "2 3"], ["7 3", "1 6\n2 5\n3 4"]], "original": "const processData = (lines) => {\n  let [n, m] = lines[0].split(' ').map(x => +x)\n  if (n%2 === 1) {\n    let end = n - 1\n    let start = 1\n    while (m) {\n      console.log(`${start++} ${end--}`)\n      m--\n    }\n  } else {\n    let end = n/2+1\n    let start = n/2\n    while (m) {\n      console.log(`${start--} ${end++}`)\n      m--\n    }\n  }\n}\n\nlet i = ''\nprocess.stdin.on('data', c => i += c)\nprocess.stdin.on('end', () => {\n  const {EOL} = require('os')\n  const lines = i.split(EOL) /*your input text, split by lines*/\n  processData(lines)\n})\n", "language": "JavaScript"}
{"filename": "p02882_1", "type": "JavaScript", "obfuscated": "inp = require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']()['split']('\\x0a');\nl = inp['shift']()['split']('\\x20');\na = l['shift']() * 0x1;\nb = l['shift']() * 0x1;\nx = l['shift']() * 0x1;\nl = 0x0;\nr = 0x5a;\nmid = 0x2d;\nc = 0x0;\nS = a * a * b;\nif (S / 0x2 < x) {\n    while (l < r) {\n        s = S - a * a * Math['tan'](mid / 0xb4 * Math['PI']) / 0x2 * a;\n        if (x < s) {\n            l = mid;\n        } else {\n            r = mid;\n        }\n        mid = (l + r) / 0x2;\n        c++;\n        if (c > 0xc8) {\n            break;\n        }\n    }\n    console['log'](mid['toFixed'](0xa));\n} else {\n    while (l < r) {\n        s = b * b * Math['tan'](mid / 0xb4 * Math['PI']) / 0x2 * a;\n        if (x < s) {\n            r = mid;\n        } else {\n            l = mid;\n        }\n        mid = (l + r) / 0x2;\n        c++;\n        if (c > 0xc8) {\n            break;\n        }\n    }\n    console['log']((0x5a - mid)['toFixed'](0xa));\n}", "test_cases": [["2 2 4", "45.0000000000"], ["12 21 10", "89.7834636934"], ["3 1 8", "4.2363947991"]], "original": "inp = require('fs').readFileSync('/dev/stdin', 'utf8').trim().split('\\n')\nl = inp.shift().split(' ')\na = l.shift() * 1\nb = l.shift() * 1 \nx = l.shift() * 1\nl = 0\nr = 90\nmid = 45\nc = 0\nS = a * a * b\nif (S / 2 < x) {\n    while (l<r) {\n        s = S - (a * a * Math.tan(mid / 180 * Math.PI)) / 2 * a\n        if (x < s) {\n            l = mid\n        } else {\n            r = mid\n        }\n        mid = (l + r) / 2\n        c++\n        if (c>200) {\n            break;\n        }\n    }    \n    console.log(mid.toFixed(10))\n} else {\n    while (l<r) {\n        s = (b * b * Math.tan(mid / 180 * Math.PI)) / 2 * a\n        if (x < s) {\n            r = mid\n        } else {\n            l = mid\n        }\n        mid = (l + r) / 2\n        c++\n        if (c>200) {\n            break;\n        }\n    }  \n    console.log((90 - mid).toFixed(10))\n}", "language": "JavaScript"}
{"filename": "p02902_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var SOBtuR = {\n        'XhuzP': function (x, y) {\n            return x === y;\n        },\n        'fMEcS': function (x, y) {\n            return x - y;\n        },\n        'ivNnq': function (x, y) {\n            return x + y;\n        },\n        'ASPHU': function (x, y) {\n            return x === y;\n        },\n        'UzzBe': function (x, y) {\n            return x - y;\n        },\n        'gBgLy': function (x, y) {\n            return x <= y;\n        },\n        'vTKgM': function (x, y) {\n            return x < y;\n        },\n        'OoCGp': '1|5|4|0|2|3',\n        'htQAC': function (x, y) {\n            return x !== y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (SOBtuR['ASPHU'](input[SOBtuR['fMEcS'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = input[0x0]['split']('\\x20')[0x0] - 0x0;\n    const M = SOBtuR['UzzBe'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    var direct = [];\n    for (var i = 0x0; SOBtuR['gBgLy'](i, N); i++) {\n        direct['push']([]);\n    }\n    for (var i = 0x1; SOBtuR['vTKgM'](i, input['length']); i++) {\n        direct[input[i]['split']('\\x20')[0x0] - 0x0]['push'](SOBtuR['fMEcS'](input[i]['split']('\\x20')[0x1], 0x0));\n    }\n    var memo = [];\n    for (var i = 0x1; i <= N; i++) {\n        memo['push']([i]);\n    }\n    var temp;\n    var str;\n    while (memo['length'] > 0x0) {\n        var GPPfuc = SOBtuR['OoCGp']['split']('|');\n        var CmFgye = 0x0;\n        while (!![]) {\n            switch (GPPfuc[CmFgye++]) {\n            case '0':\n                memo = temp['slice']();\n                continue;\n            case '1':\n                str = '';\n                continue;\n            case '2':\n                memo['forEach'](e => {\n                    if (SOBtuR['XhuzP'](e[SOBtuR['fMEcS'](e['length'], 0x1)], e[0x0])) {\n                        temp = e['slice']();\n                        temp['shift']();\n                        str = SOBtuR['ivNnq'](temp['length'], '\\x0a') + temp['join']('\\x0a');\n                    }\n                });\n                continue;\n            case '3':\n                if (SOBtuR['htQAC'](str, '')) {\n                    console['log'](str);\n                    return;\n                }\n                continue;\n            case '4':\n                memo['forEach'](e => {\n                    direct[e[e['length'] - 0x1]]['forEach'](f => {\n                        temp['push'](e['concat']([f]));\n                    });\n                });\n                continue;\n            case '5':\n                temp = [];\n                continue;\n            }\n            break;\n        }\n    }\n    console['log'](-0x1);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4 5\n1 2\n2 3\n2 4\n4 1\n4 3", "3\n1\n2\n4"], ["4 5\n1 2\n2 3\n2 4\n1 4\n4 3", "-1"], ["6 9\n1 2\n2 3\n3 4\n4 5\n5 6\n5 1\n5 2\n6 1\n6 2", "4\n2\n3\n4\n5"]], "original": "\n\nfunction Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const M=input[0].split(' ')[1]-0;\n  var direct=[];\n  for(var i=0;i<=N;i++){\n    direct.push([]);\n  }\n  for(var i=1;i<input.length;i++){\n    direct[input[i].split(' ')[0]-0].push(input[i].split(' ')[1]-0);\n  }\n  var memo=[];\n  for(var i=1;i<=N;i++){\n    memo.push([i]);\n  }\n  var temp;\n  var str;\n  while(memo.length>0){\n    str='';\n    temp=[];\n    memo.forEach(e=>{\n      direct[e[e.length-1]].forEach(f=>{\n        temp.push(e.concat([f]));\n      });\n    });\n    memo=temp.slice();\n    memo.forEach(e=>{\n      if(e[e.length-1]===e[0]){\n        temp=e.slice();\n        temp.shift();\n        str=temp.length+\"\\n\"+temp.join(\"\\n\");\n      }\n    });\n    if(str!==''){\n      console.log(str);\n      return;\n    }\n  }\n  console.log(-1);\n}\n\n\n\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03043_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var TousCe = {\n        'XKekH': function (x, y) {\n            return x <= y;\n        },\n        'dFExz': function (x, y) {\n            return x / y;\n        },\n        'NJeuG': function (x, y) {\n            return x < y;\n        }\n    };\n    input = input['split']('\\x20')['map'](Number);\n    const N = input[0x0];\n    const K = input[0x1];\n    var result = 0x0;\n    for (i = 0x1; TousCe['XKekH'](i, N); i++) {\n        var tmp = TousCe['dFExz'](0x1, N);\n        var now = i;\n        while (TousCe['NJeuG'](now, K)) {\n            now *= 0x2;\n            tmp /= 0x2;\n        }\n        result += tmp;\n    }\n    console['log'](result['toString']()['slice'](0x0, 0xe));\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 10", "0.145833333333"], ["100000 5", "0.999973749998"]], "original": "function main(input){\n  input = input.split(' ').map(Number);\n  const N = input[0];\n  const K = input[1];\n  \n  var result = 0;\n  \n  for(i = 1;i <= N;i++){\n    var tmp = 1/N;\n  \tvar now = i;\n  \twhile(now < K){\n      now *= 2;\n      tmp /= 2;\n    }\n    result += tmp;\n  }\n  \n  console.log(result.toString().slice(0,14));\n}\nmain(require('fs').readFileSync('/dev/stdin','utf8'));\n\n", "language": "JavaScript"}
{"filename": "p03454_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var HvrsBQ = {\n        'qTBIJ': function (callee, param1) {\n            return callee(param1);\n        },\n        'NESHl': function (x, y) {\n            return x + y;\n        },\n        'MoOSn': function (x, y) {\n            return x <= y;\n        },\n        'OdQUb': function (x, y) {\n            return x / y;\n        },\n        'DgETr': function (x, y) {\n            return x - y;\n        },\n        'YkpIw': function (x, y) {\n            return x * y;\n        },\n        'bKAnE': function (x, y) {\n            return x / y;\n        },\n        'mOyLf': function (callee, param1) {\n            return callee(param1);\n        },\n        'SZeny': function (x, y) {\n            return x === y;\n        }\n    };\n    const S = HvrsBQ['qTBIJ'](parseInt, input);\n    const MOD = HvrsBQ['NESHl'](0x3b9aca00, 0x7);\n    var upr = 0x0, i = 0x1;\n    do {\n        if (HvrsBQ['MoOSn'](S, Math['pow'](0xa, i - 0x1) * 0x9 * i))\n            upr = i;\n        i++;\n    } while (!upr);\n    i = Math['floor'](HvrsBQ['OdQUb'](S, upr));\n    var ans = 0x0;\n    var l = Math['pow'](0xa, HvrsBQ['DgETr'](upr, 0x1)), r = HvrsBQ['NESHl'](l, i) - 0x1;\n    var flr = HvrsBQ['YkpIw'](i, f(l));\n    do {\n        if (S % i)\n            ans++;\n        else\n            ans += HvrsBQ['NESHl'](HvrsBQ['DgETr'](HvrsBQ['YkpIw'](powmod(0xa, HvrsBQ['DgETr'](HvrsBQ['bKAnE'](S, i), 0x1), MOD), 0x9), i), 0x1);\n    } while (--i);\n    while (--l) {\n        flr += HvrsBQ['qTBIJ'](f, l);\n        if (flr > S)\n            flr -= HvrsBQ['mOyLf'](f, r--);\n        if (HvrsBQ['SZeny'](flr, S))\n            ans++;\n    }\n    console['log'](HvrsBQ['NESHl'](ans, MOD) % MOD);\n}\nfunction powmod(a, b, c) {\n    var YPxFgX = {\n        'ppDZx': function (x, y) {\n            return x & y;\n        },\n        'zVYEr': function (x, y) {\n            return x % y;\n        },\n        'yLleH': function (x, y) {\n            return x + y;\n        },\n        'UlLzl': function (x, y) {\n            return x * y;\n        },\n        'zPRYd': function (x, y) {\n            return x % y;\n        },\n        'IngyU': function (x, y) {\n            return x % y;\n        },\n        'LXwrn': function (x, y) {\n            return x % y;\n        },\n        'xZZGo': function (x, y) {\n            return x * y;\n        },\n        'ANkAQ': function (x, y) {\n            return x % y;\n        },\n        'wbsNF': function (x, y) {\n            return x / y;\n        }\n    };\n    const N = 0x2710;\n    var rt = 0x1;\n    while (b) {\n        if (YPxFgX['ppDZx'](b, 0x1))\n            rt = YPxFgX['zVYEr'](YPxFgX['yLleH'](YPxFgX['UlLzl'](YPxFgX['zPRYd'](YPxFgX['UlLzl'](Math['floor'](a / N), rt), c), N), YPxFgX['UlLzl'](YPxFgX['IngyU'](a, N), rt)), c);\n        a = YPxFgX['LXwrn'](YPxFgX['yLleH'](YPxFgX['xZZGo'](YPxFgX['ANkAQ'](YPxFgX['xZZGo'](Math['floor'](YPxFgX['wbsNF'](a, N)), a), c), N), a % N * a), c);\n        b >>>= 0x1;\n    }\n    return rt;\n}\nfunction f(n) {\n    var lXXkzC = {\n        'VxCLQ': function (x, y) {\n            return x < y;\n        },\n        'SJFUL': function (x, y) {\n            return x < y;\n        },\n        'scCaF': function (x, y) {\n            return x < y;\n        }\n    };\n    if (n < 0xa)\n        return 0x1;\n    if (n < 0x64)\n        return 0x2;\n    if (lXXkzC['VxCLQ'](n, 0x3e8))\n        return 0x3;\n    if (lXXkzC['VxCLQ'](n, 0x2710))\n        return 0x4;\n    if (lXXkzC['SJFUL'](n, 0x186a0))\n        return 0x5;\n    if (lXXkzC['scCaF'](n, 0xf4240))\n        return 0x6;\n    if (lXXkzC['scCaF'](n, 0x989680))\n        return 0x7;\n    return 0x8;\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["1", "9"], ["2", "98"], ["123", "460191684"], ["36018", "966522825"], ["1000", "184984484"]], "original": "function Main(input) {\n\tconst S = parseInt(input);\n\tconst MOD = 1e9 + 7;\n\tvar upr = 0, i = 1;\n\tdo{\n\t\tif(S <= Math.pow(10, i - 1) * 9 * i)upr = i;\n\t\ti++;\n\t}while(!upr)\n\t\n\ti = Math.floor(S / upr);\n\tvar ans = 0;\n\tvar l = Math.pow(10, upr - 1), r = l + i - 1;\n\tvar flr = i * f(l);\n\tdo{\n\t\tif(S % i)ans++;\n\t\telse ans += powmod(10, S / i - 1, MOD) * 9 - i + 1;\n\t}while(--i)\n\t\n\twhile(--l){\n\t\tflr += f(l);\n\t\tif(flr > S)flr -= f(r--);\n\t\tif(flr === S)ans++;\n\t}\n\t\n\tconsole.log((ans + MOD) % MOD);\n}\n\nfunction powmod(a, b, c){//a^b%c\n\tconst N = 1e4;//オーバーフロー防止\n\tvar rt = 1;\n\twhile(b){\n\t\tif(b & 1) rt = (Math.floor(a / N) * rt % c * N + a % N * rt) % c;\n\t\ta = (Math.floor(a / N) * a % c * N + a % N * a) % c\n\t\tb >>>= 1;\n\t}\n\treturn rt;\n}\n\nfunction f(n){\n\tif(n < 10)return 1;\n\tif(n < 100)return 2;\n\tif(n < 1000)return 3;\n\tif(n < 10000)return 4;\n\tif(n < 100000)return 5;\n\tif(n < 1000000)return 6;\n\tif(n < 10000000)return 7;\n\treturn 8;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03459_1", "type": "JavaScript", "obfuscated": "var GET = (function () {\n    var OfXDCc = {\n        'kKRYa': function (x, y) {\n            return x === y;\n        }\n    };\n    function f(s) {\n        return new g(s);\n    }\n    function g(s) {\n        this['_s'] = s['trim']()['split']('\\x0a');\n        this['_y'] = 0x0;\n    }\n    g['prototype']['a'] = function (f) {\n        var s = this['_s'], y = this['_y'], r;\n        if (OfXDCc['kKRYa'](typeof s[y], 'string'))\n            s[y] = s[y]['split']('\\x20')['reverse']();\n        r = s[y]['pop']();\n        if (!s[y]['length'])\n            this['_y']++;\n        return f ? r : +r;\n    };\n    g['prototype']['l'] = function (f) {\n        var s = this['_s'][this['_y']++]['split']('\\x20');\n        return f ? s : s['map'](a => +a);\n    };\n    g['prototype']['m'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n)['map'](a => a['split']('\\x20'));\n        return f ? r : r['map'](a => a['map'](a => +a));\n    };\n    g['prototype']['r'] = function (n, f) {\n        var r = this['_s']['slice'](this['_y'], this['_y'] += n);\n        return f ? r : r['map'](a => +a);\n    };\n    return f;\n}());\nvar o = GET(require('fs')['readFileSync']('/dev/stdin', 'utf8'));\nconsole['log'](main());\nfunction main() {\n    var wCJGXP = {\n        'BuVZH': 'Yes',\n        'kjnBW': function (x, y) {\n            return x < y;\n        },\n        'oMtKK': '4|0|3|2|1|5|6',\n        'wxswY': function (x, y) {\n            return x - y;\n        },\n        'qAEkg': function (x, y) {\n            return x > y;\n        },\n        'qRWvu': function (x, y) {\n            return x !== y;\n        },\n        'HxuNP': function (x, y) {\n            return x % y;\n        },\n        'AAbrd': function (x, y) {\n            return x % y;\n        },\n        'MXfGD': function (x, y) {\n            return x - y;\n        }\n    };\n    var uAidbI = '3|2|4|1|0'['split']('|');\n    var lsCdnr = 0x0;\n    while (!![]) {\n        switch (uAidbI[lsCdnr++]) {\n        case '0':\n            return wCJGXP['BuVZH'];\n        case '1':\n            for (var i = 0x0; wCJGXP['kjnBW'](i, n); i++) {\n                var ogtyfy = wCJGXP['oMtKK']['split']('|');\n                var ptavKp = 0x0;\n                while (!![]) {\n                    switch (ogtyfy[ptavKp++]) {\n                    case '0':\n                        dxy += Math['abs'](wCJGXP['wxswY'](y, m[i][0x2]));\n                        continue;\n                    case '1':\n                        x = m[i][0x1];\n                        continue;\n                    case '2':\n                        if (wCJGXP['qAEkg'](dxy, dt) || wCJGXP['qRWvu'](wCJGXP['HxuNP'](dxy, 0x2), wCJGXP['AAbrd'](dt, 0x2)))\n                            return 'No';\n                        continue;\n                    case '3':\n                        var dt = wCJGXP['wxswY'](m[i][0x0], t);\n                        continue;\n                    case '4':\n                        var dxy = Math['abs'](wCJGXP['MXfGD'](x, m[i][0x1]));\n                        continue;\n                    case '5':\n                        y = m[i][0x2];\n                        continue;\n                    case '6':\n                        t = m[i][0x0];\n                        continue;\n                    }\n                    break;\n                }\n            }\n            continue;\n        case '2':\n            var m = o['m'](n);\n            continue;\n        case '3':\n            var n = o['a']();\n            continue;\n        case '4':\n            var t = 0x0, x = 0x0, y = 0x0;\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["2\n3 1 2\n6 1 1", "Yes"], ["1\n2 100 100", "No"], ["2\n5 1 1\n100 1 1", "No"]], "original": "var GET=(function(){function f(s){return new g(s);}function g(s){this._s=s.trim().split(\"\\n\");this._y=0;}g.prototype.a=function(f){var s=this._s, y=this._y, r;if(typeof s[y]===\"string\")s[y]=s[y].split(\" \").reverse();r=s[y].pop();if(!s[y].length)this._y++;return f?r:+r;};g.prototype.l=function(f){var s=this._s[this._y++].split(\" \");return f?s:s.map(a=>+a);};g.prototype.m=function(n,f){var r=this._s.slice(this._y,this._y+=n).map(a=>a.split(\" \"));return f?r:r.map(a=>a.map(a=>+a));};g.prototype.r=function(n,f){var r=this._s.slice(this._y,this._y+=n);return f?r:r.map(a=>+a);};return f;})();\nvar o=GET(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n\nconsole.log(main());\nfunction main(){\n  var n = o.a();\n  var m = o.m(n);\n  var t = 0, x = 0, y = 0;\n  for(var i = 0; i < n; i++){\n    var dxy = Math.abs(x - m[i][1]);\n    dxy += Math.abs(y - m[i][2]);\n    var dt = m[i][0] - t;\n    if(dxy > dt || dxy % 2 !== dt % 2)return \"No\";\n    x = m[i][1]; y = m[i][2]; t = m[i][0];\n  }\n  return \"Yes\";\n}", "language": "JavaScript"}
{"filename": "p03552_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    const UDhPar = {\n        'pIvUZ': function (x, y) {\n            return x - y;\n        },\n        'beKjI': function (x, y) {\n            return x === y;\n        },\n        'kawud': function (x, y) {\n            return x - y;\n        },\n        'BggUk': function (x, y) {\n            return x === y;\n        },\n        'PfyKc': function (x, y) {\n            return x - y;\n        },\n        'swOSy': function (x, y) {\n            return x >= y;\n        },\n        'fEtuv': function (x, y) {\n            return x - y;\n        },\n        'omfZP': function (x, y) {\n            return x - y;\n        },\n        'CsByd': function (x, y) {\n            return x - y;\n        },\n        'wUmzY': function (x, y) {\n            return x - y;\n        },\n        'ssXXB': function (x, y) {\n            return x + y;\n        },\n        'DzsHS': function (x, y) {\n            return x !== y;\n        },\n        'EJuOG': function (x, y) {\n            return x - y;\n        },\n        'AsMRP': function (x, y) {\n            return x - y;\n        },\n        'hJRmG': function (x, y) {\n            return x - y;\n        },\n        'mkTww': function (x, y) {\n            return x - y;\n        },\n        'GiIwP': function (x, y) {\n            return x + y;\n        },\n        'wqcWq': function (x, y) {\n            return x - y;\n        },\n        'iSHAV': function (x, y) {\n            return x - y;\n        },\n        'KytHy': function (x, y) {\n            return x - y;\n        }\n    };\n    input = input['split']('\\x0a');\n    if (UDhPar['beKjI'](input[UDhPar['kawud'](input['length'], 0x1)], '')) {\n        input['pop']();\n    }\n    const N = UDhPar['kawud'](input[0x0]['split']('\\x20')[0x0], 0x0);\n    const Z = UDhPar['kawud'](input[0x0]['split']('\\x20')[0x1], 0x0);\n    const W = UDhPar['kawud'](input[0x0]['split']('\\x20')[0x2], 0x0);\n    const a = input[0x1]['split']('\\x20')['map'](e => {\n        return UDhPar['pIvUZ'](e, 0x0);\n    });\n    if (UDhPar['BggUk'](a['length'], 0x1)) {\n        console['log'](Math['abs'](UDhPar['kawud'](W, a[0x0])));\n        return;\n    }\n    var x, y;\n    x = new Array(N);\n    y = new Array(N);\n    for (var i = UDhPar['PfyKc'](N, 0x1); UDhPar['swOSy'](i, 0x0); i--) {\n        if (i === UDhPar['fEtuv'](N, 0x1)) {\n            y[i] = Math['abs'](UDhPar['fEtuv'](a[UDhPar['fEtuv'](N, 0x1)], a[N - 0x2]));\n            x[i] = Math['abs'](UDhPar['omfZP'](a[UDhPar['CsByd'](N, 0x1)], a[UDhPar['wUmzY'](N, 0x2)]));\n            continue;\n        }\n        y[i] = Math['min'](...x['slice'](UDhPar['ssXXB'](i, 0x1)), UDhPar['DzsHS'](i, 0x0) ? Math['abs'](UDhPar['EJuOG'](a[UDhPar['kawud'](i, 0x1)], a[UDhPar['AsMRP'](N, 0x1)])) : Math['abs'](UDhPar['hJRmG'](Z, a[UDhPar['mkTww'](N, 0x1)])));\n        x[i] = Math['max'](...y['slice'](UDhPar['GiIwP'](i, 0x1)), UDhPar['DzsHS'](i, 0x0) ? Math['abs'](UDhPar['mkTww'](a[UDhPar['wqcWq'](i, 0x1)], a[UDhPar['iSHAV'](N, 0x1)])) : Math['abs'](UDhPar['wUmzY'](W, a[UDhPar['KytHy'](N, 0x1)])));\n    }\n    console['log'](Math['max'](...x));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 100 100\n10 1000 100", "900"], ["3 100 1000\n10 100 100", "900"], ["5 1 1\n1 1 1 1 1", "0"], ["1 1 1\n1000000000", "999999999"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  if(input[input.length-1]===''){\n    input.pop();\n  }\n  const N=input[0].split(' ')[0]-0;\n  const Z=input[0].split(' ')[1]-0;\n  const W=input[0].split(' ')[2]-0;\n  const a=input[1].split(' ').map(e=>{\n    return e-0;\n  });\n  if(a.length===1){\n    console.log(Math.abs(W-a[0]));\n    return;\n  }\n  var x,y;\n  x=new Array(N);\n  y=new Array(N);\n  for(var i=N-1;i>=0;i--){\n    if(i===N-1){\n      y[i]=Math.abs(a[N-1]-a[N-2]);\n      x[i]=Math.abs(a[N-1]-a[N-2]);\n      continue;\n    }\n    y[i]=Math.min(...x.slice(i+1),i!==0?Math.abs(a[i-1]-a[N-1]):Math.abs(Z-a[N-1]));\n    x[i]=Math.max(...y.slice(i+1),i!==0?Math.abs(a[i-1]-a[N-1]):Math.abs(W-a[N-1]));\n  }\n  console.log(Math.max(...x));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03626_1", "type": "JavaScript", "obfuscated": "function main(input) {\n    var urQpem = {\n        'nENqH': function (x, y) {\n            return x * y;\n        },\n        'rnbcX': function (x, y) {\n            return x < y;\n        },\n        'bhLIM': function (x, y) {\n            return x - y;\n        },\n        'JyNvg': function (x, y) {\n            return x * y;\n        },\n        'SwoVE': function (x, y) {\n            return x * y;\n        },\n        'UlKjQ': function (x, y) {\n            return x % y;\n        },\n        'dEHvt': function (x, y) {\n            return x == y;\n        },\n        'xGEOg': function (x, y) {\n            return x + y;\n        }\n    };\n    var LfYCtr = '3|2|6|7|4|0|9|5|1|8'['split']('|');\n    var tCcrFP = 0x0;\n    while (!![]) {\n        switch (LfYCtr[tCcrFP++]) {\n        case '0':\n            var isYoko;\n            continue;\n        case '1':\n            if (i < N) {\n                if (!isYoko) {\n                    res = urQpem['nENqH'](res, 0x2);\n                }\n            }\n            continue;\n        case '2':\n            var N = Number(tmp[0x0]);\n            continue;\n        case '3':\n            var tmp = input['split'](/\\r\\n|\\r|\\n/);\n            continue;\n        case '4':\n            var i = 0x0;\n            continue;\n        case '5':\n            for (; urQpem['rnbcX'](i, urQpem['bhLIM'](N, 0x1)); i++) {\n                if (S[i] == S[i + 0x1]) {\n                    if (isYoko) {\n                        res = urQpem['JyNvg'](res, 0x3);\n                    } else {\n                        res = res * 0x2;\n                    }\n                    i++;\n                    isYoko = !![];\n                } else {\n                    if (!isYoko) {\n                        res = urQpem['SwoVE'](res, 0x2);\n                    }\n                    isYoko = ![];\n                }\n            }\n            continue;\n        case '6':\n            var S = tmp[0x1]['split']('');\n            continue;\n        case '7':\n            var res;\n            continue;\n        case '8':\n            console['log'](urQpem['UlKjQ'](res, 0x3b9aca07));\n            continue;\n        case '9':\n            if (urQpem['dEHvt'](S[i], S[urQpem['xGEOg'](i, 0x1)])) {\n                res = 0x6;\n                i = urQpem['xGEOg'](i, 0x2);\n                isYoko = !![];\n            } else {\n                res = 0x3;\n                i++;\n                isYoko = ![];\n            }\n            continue;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3\naab\nccb", "6"], ["1\nZ\nZ", "3"], ["52\nRvvttdWIyyPPQFFZZssffEEkkaSSDKqcibbeYrhAljCCGGJppHHn\nRLLwwdWIxxNNQUUXXVVMMooBBaggDKqcimmeYrhAljOOTTJuuzzn", "958681902"]], "original": "function main(input){\n    var tmp = input.split(/\\r\\n|\\r|\\n/);\n    var N = Number(tmp[0]);\n    var S = tmp[1].split('');\n    //console.log(N, S);\n\n    var res;\n    var i = 0;\n    var isYoko;\n    if(S[i]==S[i+1]){\n        res = 6;\n        i = i+2;\n        isYoko = true;\n    }else{\n        res = 3;\n        i++;\n        isYoko = false;\n    }\n\n    for(; i<N-1; i++){\n        if(S[i]==S[i+1]){\n            if(isYoko){\n                res = res * 3;\n            }else{\n                res = res * 2;\n            }\n            i++;\n            isYoko = true;\n        }else{\n            if(!isYoko){\n                res = res * 2;\n            }\n            isYoko = false;\n        }\n    }\n\n    if(i<N){\n        if(!isYoko){\n            res = res * 2;\n        }\n    }\n\n    console.log(res%1000000007);\n}\n\nmain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03740_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var HEQXiL = {\n        'eBndy': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return HEQXiL['eBndy'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var UODGhC = {\n        'AgMol': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; UODGhC['AgMol'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var bSEXWl = {\n        'qKcMZ': function (x, y) {\n            return x + y;\n        },\n        'cgEsD': function (x, y) {\n            return x + y;\n        },\n        'FCMUz': function (x, y) {\n            return x + y;\n        },\n        'LbnyE': 'Array(a[',\n        'lGRVS': ']).fill().map(x=>{return\\x20',\n        'LvvLE': ';})',\n        'cjVIz': function (x, y) {\n            return x + y;\n        },\n        'hOFjx': function (x, y) {\n            return x + y;\n        },\n        'GGCGP': function (x, y) {\n            return x + y;\n        },\n        'wMZso': ']).fill().map(x=>',\n        'Jxczb': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = bSEXWl['qKcMZ'](bSEXWl['cgEsD'](bSEXWl['FCMUz'](bSEXWl['LbnyE'], --l) + bSEXWl['lGRVS'], v), bSEXWl['LvvLE']);\n    while (--l)\n        r = bSEXWl['cjVIz'](bSEXWl['hOFjx'](bSEXWl['GGCGP'](bSEXWl['LbnyE'] + l, bSEXWl['wMZso']), r), ')');\n    return bSEXWl['Jxczb'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var EBNUAu = {\n        'kekTM': function (callee) {\n            return callee();\n        },\n        'yGgjA': function (x, y) {\n            return x < y;\n        },\n        'OIULI': function (x, y) {\n            return x - y;\n        },\n        'QJelm': function (x, y) {\n            return x < y;\n        },\n        'wqvFp': 'Brown'\n    };\n    var x = nextbig(), y = EBNUAu['kekTM'](nextbig);\n    if (EBNUAu['yGgjA'](EBNUAu['OIULI'](x, y), 0x2) && EBNUAu['QJelm'](EBNUAu['OIULI'](y, x), 0x2))\n        return EBNUAu['wqvFp'];\n    return 'Alice';\n}", "test_cases": [["2 1", "Brown"], ["5 0", "Alice"], ["0 0", "Brown"], ["4 8", "Alice"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var x = nextbig(), y = nextbig();\n  if(x-y < 2 && y-x < 2)return \"Brown\";\n  return \"Alice\";\n}", "language": "JavaScript"}
{"filename": "p03781_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var UfmZsH = {\n        'GmfHV': function (x, y) {\n            return x - y;\n        },\n        'dCJeX': function (x, y) {\n            return x ** y;\n        },\n        'bIcCD': function (x, y) {\n            return x * y;\n        },\n        'maMhb': function (x, y) {\n            return x / y;\n        },\n        'psXgu': function (x, y) {\n            return x / y;\n        }\n    };\n    input = input['split']('\\x0a');\n    var X = UfmZsH['GmfHV'](input[0x0], 0x0);\n    console['log'](Math['ceil'](UfmZsH['dCJeX'](UfmZsH['bIcCD'](0x2, Math['abs'](X)) + UfmZsH['maMhb'](0x1, 0x4), UfmZsH['psXgu'](0x1, 0x2)) - 0x1 / 0x2));\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["6", "3"], ["2", "2"], ["11", "5"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var X=input[0]-0;\n\n  console.log(Math.ceil((2*Math.abs(X)+1/4)**(1/2)-1/2));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03791_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next(a) {\n    return a ? cin[cid++] : +cin[cid++];\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var CkDTUQ = {\n        'URrtT': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; CkDTUQ['URrtT'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; CkDTUQ['URrtT'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var NafAvl = {\n        'rDWHK': function (x, y) {\n            return x + y;\n        },\n        'TNPfu': function (x, y) {\n            return x + y;\n        },\n        'aTheQ': ']).fill().map(x=>{return\\x20',\n        'lvZhQ': ';})',\n        'gDlhS': function (x, y) {\n            return x + y;\n        },\n        'YqLra': ']).fill().map(x=>',\n        'gMMtR': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = NafAvl['rDWHK'](NafAvl['rDWHK'](NafAvl['TNPfu']('Array(a[' + --l, NafAvl['aTheQ']), v), NafAvl['lvZhQ']);\n    while (--l)\n        r = NafAvl['rDWHK'](NafAvl['TNPfu'](NafAvl['gDlhS']('Array(a[' + l, NafAvl['YqLra']), r), ')');\n    return NafAvl['gMMtR'](eval, r);\n}\nvar mod = 0x3b9aca00 + 0x7;\nfunction mul() {\n    var dIuPHO = {\n        'qLRNc': function (x, y) {\n            return x % y;\n        },\n        'vMJge': function (x, y) {\n            return x + y;\n        },\n        'vTqrz': function (x, y) {\n            return x * y;\n        },\n        'uLzVQ': function (x, y) {\n            return x % y;\n        },\n        'usWeQ': function (x, y) {\n            return x & y;\n        }\n    };\n    for (var a = arguments, r = a[0x0], i = a['length']; --i;)\n        r = dIuPHO['qLRNc'](dIuPHO['vMJge'](dIuPHO['vTqrz'](dIuPHO['uLzVQ'](dIuPHO['vTqrz'](r >> 0x10, a[i]), mod), 0x10000), dIuPHO['usWeQ'](r, 0xffff) * a[i]), mod);\n    return r;\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](myOut);\nfunction main() {\n    var JztOHZ = {\n        'RTSiC': '4|1|3|0|2',\n        'KNOsi': function (x, y) {\n            return x < y;\n        },\n        'RXbpx': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'XfTKO': function (callee, param1) {\n            return callee(param1);\n        },\n        'jJzzv': function (callee) {\n            return callee();\n        }\n    };\n    var WDnFmH = JztOHZ['RTSiC']['split']('|');\n    var acPDnw = 0x0;\n    while (!![]) {\n        switch (WDnFmH[acPDnw++]) {\n        case '0':\n            for (var i = 0x0; JztOHZ['KNOsi'](i, n); i++) {\n                rem++;\n                ans = JztOHZ['RXbpx'](mul, ans, rem);\n                if (x[i] < id) {\n                    rem--;\n                } else {\n                    id += 0x2;\n                }\n            }\n            continue;\n        case '1':\n            var x = JztOHZ['XfTKO'](nexts, n);\n            continue;\n        case '2':\n            return ans;\n        case '3':\n            var ans = 0x1, id = 0x1, rem = 0x0;\n            continue;\n        case '4':\n            var n = JztOHZ['jJzzv'](next);\n            continue;\n        }\n        break;\n    }\n}", "test_cases": [["3\n1 2 3", "4"], ["3\n2 3 4", "6"], ["8\n1 2 3 5 7 11 13 17", "10080"], ["13\n4 6 8 9 10 12 14 15 16 18 20 21 22", "311014372"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(a){return a?cin[cid++]:+cin[cid++];}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar mod = 1e9+7;\nfunction mul(){for(var a=arguments,r=a[0],i=a.length;--i;)r=((r>>16)*a[i]%mod*65536+(r&65535)*a[i])%mod;return r;}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(myOut);\n\nfunction main(){\n  var n = next();\n  var x = nexts(n);\n  var ans = 1, id = 1, rem = 0;\n  for(var i = 0; i < n; i++){\n    rem++;\n    ans = mul(ans,rem);\n    if(x[i] < id){\n      rem--;\n    }else{\n      id += 2;\n    }\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p03819_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var MadPxb = {\n        'EtfOh': '6|7|0|5|3|4|1|8|2',\n        'IkCdJ': function (x, y) {\n            return x - y;\n        },\n        'NUtTS': function (x, y) {\n            return x < y;\n        },\n        'xcTsv': function (x, y) {\n            return x <= y;\n        },\n        'cDtba': function (x, y) {\n            return x - y;\n        },\n        'QPXuS': function (x, y) {\n            return x % y;\n        },\n        'iXJoF': function (x, y) {\n            return x % y;\n        },\n        'ayrlG': function (x, y) {\n            return x > y;\n        },\n        'tyLzc': function (x, y) {\n            return x - y;\n        }\n    };\n    var lwXhGm = MadPxb['EtfOh']['split']('|');\n    var TTIRwA = 0x0;\n    while (!![]) {\n        switch (lwXhGm[TTIRwA++]) {\n        case '0':\n            var M = MadPxb['IkCdJ'](input[0x0]['split']('\\x20')[0x1], 0x0);\n            continue;\n        case '1':\n            for (var i = 0x1; MadPxb['NUtTS'](i, input['length']); i++) {\n                line = input[i]['split']('\\x20');\n                line[0x1] -= 0x0;\n                line[0x0] -= 0x0;\n                for (var j = 0x1; MadPxb['xcTsv'](j, M); j++) {\n                    if (!(MadPxb['NUtTS'](line[0x1] - line[0x0], MadPxb['cDtba'](j, 0x1)) && MadPxb['QPXuS'](line[0x1], j) >= MadPxb['iXJoF'](line[0x0], j) && MadPxb['ayrlG'](line[0x0] % j, 0x0))) {\n                        answer[j]++;\n                    }\n                }\n            }\n            continue;\n        case '2':\n            console['log'](answer['join']('\\x0a'));\n            continue;\n        case '3':\n            answer['fill'](0x0);\n            continue;\n        case '4':\n            var line;\n            continue;\n        case '5':\n            var answer = new Array(M + 0x1);\n            continue;\n        case '6':\n            input = input['split']('\\x0a');\n            continue;\n        case '7':\n            var N = MadPxb['tyLzc'](input[0x0]['split']('\\x20')[0x0], 0x0);\n            continue;\n        case '8':\n            answer['shift']();\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["3 3\n1 2\n2 3\n3 3", "3\n2\n2"], ["7 9\n1 7\n5 9\n5 7\n5 9\n1 1\n6 8\n3 4", "7\n6\n6\n5\n4\n5\n5\n3\n2"]], "original": "function Main(input) {\n  input=input.split(\"\\n\");\n  var N=input[0].split(\" \")[0]-0;\n  var M=input[0].split(\" \")[1]-0;\n  \n  var answer=new Array(M+1);\n  answer.fill(0);\n  var line;\n  for(var i=1;i<input.length;i++){\n    line=input[i].split(\" \");\n    line[1]-=0;\n    line[0]-=0;\n    for(var j=1;j<=M;j++){\n      if(!(line[1]-line[0]<j-1&&line[1]%j>=line[0]%j&&line[0]%j>0)){\n        answer[j]++;\n      }\n    }\n  }\n  answer.shift();\n  console.log(answer.join(\"\\n\"));\n}\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n  \n  \n", "language": "JavaScript"}
{"filename": "p03822_1", "type": "JavaScript", "obfuscated": "var tmp = {};\nfunction main(chunk) {\n    var iyTQbz = {\n        'vpwJS': '1|4|0|3|2',\n        'bJdUb': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RyWHQ': function (x, y) {\n            return x < y;\n        },\n        'Aoerf': function (x, y) {\n            return x + y;\n        },\n        'beQKs': function (callee, param1) {\n            return callee(param1);\n        },\n        'xhbML': function (x, y) {\n            return x - y;\n        }\n    };\n    var cjggMP = iyTQbz['vpwJS']['split']('|');\n    var hPzWBI = 0x0;\n    while (!![]) {\n        switch (cjggMP[hPzWBI++]) {\n        case '0':\n            var map = {};\n            continue;\n        case '1':\n            var lines = chunk['split']('\\x0a');\n            continue;\n        case '2':\n            console['log'](iyTQbz['bJdUb'](calc, map, 0x1) + 0x1);\n            continue;\n        case '3':\n            for (var i = 0x2; iyTQbz['RyWHQ'](i, iyTQbz['Aoerf'](n, 0x1)); i++) {\n                var a = iyTQbz['beQKs'](Number, lines[iyTQbz['xhbML'](i, 0x1)]);\n                if (map[a]) {\n                    map[a]['t']++;\n                    map[a]['p']['push'](i);\n                } else {\n                    map[a] = {};\n                    map[a]['t'] = 0x1;\n                    map[a]['p'] = [i];\n                }\n            }\n            continue;\n        case '4':\n            var n = Number(lines[0x0]);\n            continue;\n        }\n        break;\n    }\n}\nfunction calc(map, n) {\n    var TuuNLw = {\n        'SreKV': '0|2|3|1|4',\n        'GxpNH': function (x, y) {\n            return x + y;\n        },\n        'pPNqe': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    var nArlwP = TuuNLw['SreKV']['split']('|');\n    var EeDmhU = 0x0;\n    while (!![]) {\n        switch (nArlwP[EeDmhU++]) {\n        case '0':\n            if (tmp[n]) {\n                return tmp[n];\n            }\n            continue;\n        case '1':\n            tmp[n] = ans;\n            continue;\n        case '2':\n            var ans = 0x0;\n            continue;\n        case '3':\n            for (var i in map[n]['p']) {\n                var p = map[n]['p'][i];\n                if (map[p]) {\n                    ans = Math['max'](ans, TuuNLw['GxpNH'](map[p]['t'], TuuNLw['pPNqe'](calc, map, p)));\n                }\n            }\n            continue;\n        case '4':\n            return ans;\n        }\n        break;\n    }\n}\nmain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["5\n1\n1\n2\n4", "3"], ["7\n1\n2\n1\n3\n1\n4", "3"], ["4\n4\n4\n1", "3"]], "original": "\nvar tmp = {};\nfunction main(chunk){\n    var lines = chunk.split(\"\\n\");\n    var n = Number(lines[0]);\n    \n    var map = {};\n    for(var i=2;i<n+1;i++){\n        var a = Number(lines[i-1]);\n        if(map[a]){\n            map[a].t++;\n            map[a].p.push(i);\n        }else{\n            map[a] = {};\n            map[a].t = 1;\n            map[a].p = [i];\n        }\n    }\n    console.log(calc(map,1)+1);\n}\n\nfunction calc(map,n){\n    if(tmp[n]){\n        return tmp[n];\n    }\n    var ans = 0;\n    for(var i in map[n].p){\n        var p = map[n].p[i];\n        if(map[p]){\n            ans = Math.max(ans,map[p].t + calc(map,p));\n        }\n    }\n    tmp[n] = ans;\n    return ans;\n}\nmain(require('fs').readFileSync('/dev/stdin', 'utf8'));\n", "language": "JavaScript"}
{"filename": "p03863_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    const LdXRIZ = {\n        'KztpZ': function (x, y) {\n            return x ^ y;\n        },\n        'xccFy': function (x, y) {\n            return x & y;\n        },\n        'qsSmG': function (x, y) {\n            return x === y;\n        },\n        'pkqCh': 'First',\n        'haUOp': 'Second'\n    };\n    s = s['trim']();\n    const l = s['length'];\n    if (LdXRIZ['KztpZ'](LdXRIZ['xccFy'](l, 0x1), LdXRIZ['qsSmG'](s[0x0], s[l - 0x1])))\n        console['log'](LdXRIZ['pkqCh']);\n    else\n        console['log'](LdXRIZ['haUOp']);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["aba", "Second"], ["abc", "First"], ["abcab", "First"]], "original": "function Main(s) {\n  s = s.trim();\n  const l = s.length;\n  if((l & 1) ^ (s[0] === s[l-1]))\n    console.log(\"First\");\n  else console.log(\"Second\");\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03888_1", "type": "JavaScript", "obfuscated": "function Main(inputData) {\n    const IzfXjp = {\n        'deQQl': function (callee, param1) {\n            return callee(param1);\n        },\n        'eZWNQ': function (callee) {\n            return callee();\n        },\n        'krOJk': function (callee, param1) {\n            return callee(param1);\n        },\n        'VsfEP': function (x, y) {\n            return x * y;\n        }\n    };\n    IzfXjp['deQQl'](init, inputData);\n    var a = inI();\n    var b = IzfXjp['eZWNQ'](inI);\n    IzfXjp['krOJk'](outln, (IzfXjp['VsfEP'](a, b) / (a + b))['toFixed'](0xa));\n}\nvar input, inputCnt;\nfunction debug() {\n    const INkeuY = {\n        'yKONg': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    INkeuY['yKONg'](Main, document['getElementById']('input')['value']);\n}\nfunction init(inputData) {\n    input = inputData['replace'](/\\n/g, '\\x20');\n    input = input['split']('\\x20');\n    inputCnt = 0x0;\n}\nconst out = output => {\n    console['log'](output);\n};\nconst outln = output => {\n    const IftAJJ = {\n        'twrIO': function (x, y) {\n            return x + y;\n        }\n    };\n    console['log'](IftAJJ['twrIO'](output, '\\x0a'));\n};\nconst inS = () => {\n    return input[inputCnt++];\n};\nconst inI = () => {\n    const goftix = {\n        'sWeqE': function (callee, param1, param2) {\n            return callee(param1, param2);\n        }\n    };\n    return goftix['sWeqE'](parseInt, inS(), 0xa);\n};\nconst inF = () => {\n    return parseFloat(inS());\n};\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["2 3", "1.2000000000"], ["100 99", "49.7487437186"]], "original": "\nfunction Main(inputData) {\n\tinit(inputData);\n\t\n\tvar a = inI();\n\tvar b = inI();\n\n\toutln(((a*b)/(a+b)).toFixed(10));\n\t\n}\n\n////////////////////////////////////////////////////////////////////////////////////\nvar input,inputCnt;\n\n// \"実行する\"ボタンを押した時に実行される関数 (デバッグ用)\nfunction debug(){\n\tMain(document.getElementById(\"input\").value);\n}\n\nfunction init(inputData){\n    //配列inputに順番に代入\n\tinput = inputData.replace( /\\n/g , \" \" );\n\tinput = input.split(\" \");\n\tinputCnt = 0;\n}\n//output\nconst out = (output) => { console.log(output) }\nconst outln = (output) => { console.log(output+\"\\n\") }\n\n//input\nconst inS = () => {return input[inputCnt++]};\nconst inI = () => {return parseInt(inS(), 10)};\nconst inF = () => {return parseFloat(inS())};\n\n//*この行以降は編集しないでください（標準入出力から一度に読み込み、Mainを呼び出します）\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03947_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var wqzAcf = {\n        'LOiIM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'elaAt': function (x, y) {\n            return x + y;\n        },\n        'PZQDJ': function (x, y) {\n            return x - y;\n        }\n    };\n    var NHzxWm = '2|5|6|3|0|4|1'['split']('|');\n    var gTXVeh = 0x0;\n    while (!![]) {\n        switch (NHzxWm[gTXVeh++]) {\n        case '0':\n            var bw = wqzAcf['LOiIM'](counter, s, 'BW');\n            continue;\n        case '1':\n            console['log'](wqzAcf['elaAt'](bw, wb));\n            continue;\n        case '2':\n            var Fxnnwk = {\n                'mEbyq': function (x, y) {\n                    return wqzAcf['PZQDJ'](x, y);\n                }\n            };\n            continue;\n        case '3':\n            var s = lines[0x0];\n            continue;\n        case '4':\n            var wb = wqzAcf['LOiIM'](counter, s, 'WB');\n            continue;\n        case '5':\n            var counter = function (str, seq) {\n                return Fxnnwk['mEbyq'](str['split'](seq)['length'], 0x1);\n            };\n            continue;\n        case '6':\n            lines = input['split']('\\x0a');\n            continue;\n        }\n        break;\n    }\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["BBBWW", "1"], ["WWWWWW", "0"], ["WBWBWBWBWB", "9"]], "original": "// inputに入力データ全体が入る\nfunction Main(input) {\n\nvar counter = function(str,seq){\n    return str.split(seq).length - 1;\n};\n\tlines = input.split(\"\\n\"); // 1行目がinput[0], 2行目がinput[1], …に入る\n\tvar s = lines[0];\n\tvar bw = counter(s,\"BW\");\n\tvar wb = counter(s,\"WB\");\n\tconsole.log(bw+wb);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));", "language": "JavaScript"}
{"filename": "p03954_1", "type": "JavaScript", "obfuscated": "function Main(input) {\n    var gjUPVZ = {\n        'TaZQp': function (x, y) {\n            return x < y;\n        },\n        'majhg': function (x, y) {\n            return x - y;\n        },\n        'gahMs': function (x, y) {\n            return x + y;\n        },\n        'xIhDU': function (x, y) {\n            return x - y;\n        },\n        'KeZNd': function (x, y) {\n            return x * y;\n        },\n        'PzbPc': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'UruQS': function (x, y) {\n            return x > y;\n        },\n        'yCrke': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    input = input['split']('\\x0a');\n    tmp = input[0x1]['split']('\\x20');\n    var N = parseInt(input[0x0], 0xa);\n    var array_N = new Array(gjUPVZ['xIhDU'](gjUPVZ['KeZNd'](0x2, N), 0x1));\n    for (var i = 0x0; gjUPVZ['TaZQp'](i, array_N['length']); i++) {\n        array_N[i] = gjUPVZ['PzbPc'](parseInt, tmp[i], 0xa);\n    }\n    function getArrayNext(array_i) {\n        var oksbGB = {\n            'gGsxp': function (x, y) {\n                return gjUPVZ['TaZQp'](x, y);\n            }\n        };\n        array_i_next = new Array(gjUPVZ['majhg'](array_i['length'], 0x2));\n        for (var j = 0x0; gjUPVZ['TaZQp'](j, array_i_next['length']); j++) {\n            var small_array = array_i['slice'](j, gjUPVZ['gahMs'](j, 0x3));\n            array_i_next[j] = small_array['sort'](function (a, b) {\n                return oksbGB['gGsxp'](a, b) ? -0x1 : 0x1;\n            })[0x1];\n        }\n        return array_i_next;\n    }\n    var array_i = array_N;\n    while (gjUPVZ['UruQS'](array_i['length'], 0x1)) {\n        array_i = gjUPVZ['yCrke'](getArrayNext, array_i);\n    }\n    console['log'](array_i[0x0]);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8'));", "test_cases": [["4\n1 6 3 7 4 5 2", "4"], ["2\n1 2 3", "2"]], "original": "function Main(input) {\n\tinput = input.split(\"\\n\");\n\ttmp = input[1].split(\" \");\n\n\tvar N = parseInt(input[0], 10);\n    var array_N = new Array(2*N-1);\n\n    for(var i=0;i< array_N.length;i++){\n        array_N[i] = parseInt(tmp[i],10);\n    }\n\n    function getArrayNext(array_i){\n        array_i_next = new Array(array_i.length-2);\n        for(var j=0;j<array_i_next.length;j++){\n            var small_array = array_i.slice(j,j+3);\n            array_i_next[j] = small_array.sort(\n              function(a,b){\n                return (a < b ? -1 : 1);\n              }\n            )[1];\n        }\n        return array_i_next;\n    }\n    var array_i = array_N;\n    while(array_i.length > 1){\n\n        array_i = getArrayNext(array_i);\n    }\n\tconsole.log(array_i[0]);\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n", "language": "JavaScript"}
{"filename": "p03973_1", "type": "JavaScript", "obfuscated": "'use strict';\nvar input = require('fs')['readFileSync']('/dev/stdin', 'utf8');\nvar cin = input['split'](/ |\\n/), cid = 0x0;\nfunction next() {\n    return +cin[cid++];\n}\nfunction nextstr() {\n    return cin[cid++];\n}\nfunction nextbig() {\n    var rHNUDR = {\n        'TbcoQ': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    return rHNUDR['TbcoQ'](BigInt, cin[cid++]);\n}\nfunction nexts(n, a) {\n    return a ? cin['slice'](cid, cid += n) : cin['slice'](cid, cid += n)['map'](a => +a);\n}\nfunction nextm(h, w, a) {\n    var mjyeBO = {\n        'zMHRu': function (x, y) {\n            return x < y;\n        }\n    };\n    var r = [], i = 0x0;\n    if (a)\n        for (; mjyeBO['zMHRu'](i, h); i++)\n            r['push'](cin['slice'](cid, cid += w));\n    else\n        for (; i < h; i++)\n            r['push'](cin['slice'](cid, cid += w)['map'](a => +a));\n    return r;\n}\nfunction xArray(v) {\n    var XfVVpX = {\n        'EmNny': function (x, y) {\n            return x + y;\n        },\n        'GyDZD': function (x, y) {\n            return x + y;\n        },\n        'rcGia': 'Array(a[',\n        'uIiuP': ';})',\n        'PFJUd': function (x, y) {\n            return x + y;\n        },\n        'HoqCQ': function (x, y) {\n            return x + y;\n        },\n        'hizZb': ']).fill().map(x=>',\n        'LNqak': function (callee, param1) {\n            return callee(param1);\n        }\n    };\n    var a = arguments, l = a['length'], r = XfVVpX['EmNny'](XfVVpX['GyDZD'](XfVVpX['GyDZD'](XfVVpX['rcGia'], --l), ']).fill().map(x=>{return\\x20'), v) + XfVVpX['uIiuP'];\n    while (--l)\n        r = XfVVpX['PFJUd'](XfVVpX['PFJUd'](XfVVpX['HoqCQ'](XfVVpX['rcGia'], l) + XfVVpX['hizZb'], r), ')');\n    return XfVVpX['LNqak'](eval, r);\n}\nvar myOut = main();\nif (myOut !== undefined)\n    console['log'](String(myOut));\nfunction main() {\n    var soMETv = {\n        'yMvvs': function (callee) {\n            return callee();\n        },\n        'HJLnG': function (x, y) {\n            return x - y;\n        },\n        'UqQMI': function (x, y) {\n            return x < y;\n        }\n    };\n    var n = soMETv['yMvvs'](next);\n    var ans = 0x0, mn = 0x1;\n    for (var i = 0x0; i < n; i++) {\n        var t = soMETv['HJLnG'](next(), 0x1);\n        if (soMETv['UqQMI'](t, mn)) {\n            mn = Math['max'](mn, t + 0x2);\n        } else {\n            ans += t / mn | 0x0;\n            mn = Math['max'](0x2, mn);\n        }\n    }\n    return ans;\n}", "test_cases": [["3\n3\n2\n5", "3"], ["15\n3\n1\n4\n1\n5\n9\n2\n6\n5\n3\n5\n8\n9\n7\n9", "18"]], "original": "\"use strict\";\nvar input=require(\"fs\").readFileSync(\"/dev/stdin\",\"utf8\");\nvar cin=input.split(/ |\\n/),cid=0;\nfunction next(){return +cin[cid++];}\nfunction nextstr(){return cin[cid++];}\nfunction nextbig(){return BigInt(cin[cid++]);}\nfunction nexts(n,a){return a?cin.slice(cid,cid+=n):cin.slice(cid,cid+=n).map(a=>+a);}\nfunction nextm(h,w,a){var r=[],i=0;if(a)for(;i<h;i++)r.push(cin.slice(cid,cid+=w));else for(;i<h;i++)r.push(cin.slice(cid,cid+=w).map(a=>+a));return r;}\nfunction xArray(v){var a=arguments,l=a.length,r=\"Array(a[\"+--l+\"]).fill().map(x=>{return \"+v+\";})\";while(--l)r=\"Array(a[\"+l+\"]).fill().map(x=>\"+r+\")\";return eval(r);}\n\nvar myOut = main();\nif(myOut !== undefined)console.log(String(myOut));\n\nfunction main(){\n  var n = next();\n  var ans = 0, mn = 1;\n  for(var i = 0; i < n; i++){\n    var t = next()-1;\n    if(t < mn){\n      mn = Math.max(mn,t+2);\n    }else{\n      ans += t/mn|0;\n      mn = Math.max(2,mn);\n    }\n  }\n  return ans;\n}", "language": "JavaScript"}
{"filename": "p04014_1", "type": "JavaScript", "obfuscated": "function Main(s) {\n    const rcXgDz = {\n        'BkZHG': function (x, y) {\n            return x === y;\n        },\n        'vAjps': function (x, y) {\n            return x + y;\n        },\n        'dOEnc': function (x, y) {\n            return x < y;\n        },\n        'EuVaM': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'RkzzE': function (x, y) {\n            return x - y;\n        },\n        'QPLBD': function (x, y) {\n            return x - y;\n        },\n        'gVrEV': function (x, y) {\n            return x > y;\n        },\n        'SDWzs': function (x, y) {\n            return x / y;\n        },\n        'pgMkh': function (x, y) {\n            return x - y;\n        }\n    };\n    s = s['split']('\\x0a')['map'](a => parseInt(a));\n    const n = s[0x0];\n    s = s[0x1];\n    const sn = Math['ceil'](Math['sqrt'](n));\n    if (rcXgDz['BkZHG'](s, n)) {\n        console['log'](rcXgDz['vAjps'](n, 0x1));\n        return;\n    }\n    for (var b = 0x2; rcXgDz['dOEnc'](b, sn); b++) {\n        if (rcXgDz['BkZHG'](s, rcXgDz['EuVaM'](f, b, n))) {\n            console['log'](b);\n            return;\n        }\n    }\n    var p = Math['floor'](rcXgDz['RkzzE'](n, s) / rcXgDz['QPLBD'](sn, 0x1));\n    for (; rcXgDz['gVrEV'](p, 0x0); p--) {\n        b = Math['floor'](rcXgDz['vAjps'](rcXgDz['SDWzs'](rcXgDz['pgMkh'](n, s), p), 0x1));\n        if (rcXgDz['BkZHG'](s, f(b, n))) {\n            console['log'](b);\n            return;\n        }\n    }\n    console['log'](-0x1);\n}\nfunction f(b, n) {\n    const byWvtf = {\n        'mxxai': function (x, y) {\n            return x < y;\n        },\n        'YCajk': function (callee, param1, param2) {\n            return callee(param1, param2);\n        },\n        'dZfnr': function (x, y) {\n            return x % y;\n        }\n    };\n    if (byWvtf['mxxai'](n, b))\n        return n;\n    return byWvtf['YCajk'](f, b, Math['floor'](n / b)) + byWvtf['dZfnr'](n, b);\n}\nMain(require('fs')['readFileSync']('/dev/stdin', 'utf8')['trim']());", "test_cases": [["87654\n30", "10"], ["87654\n138", "100"], ["87654\n45678", "-1"], ["31415926535\n1", "31415926535"], ["1\n31415926535", "-1"]], "original": "function Main(s) {\n\ts = s.split(\"\\n\").map(a => parseInt(a));\n\tconst n = s[0];\n\ts = s[1];\n\tconst sn = Math.ceil(Math.sqrt(n));\n\tif(s === n){console.log(n+1);return;}\n\tfor(var b = 2; b < sn; b++){\n\t\tif(s === f(b, n)){\n          console.log(b);\n          return;\n        }\n\t}\n\tvar p = Math.floor((n - s) / (sn - 1));\n\tfor(; p > 0; p--){\n\t\tb = Math.floor((n - s) / p + 1);\n\t\tif(s === f(b, n)){\n          console.log(b);\n          return;\n        }\n\t}\n\t\n\tconsole.log(-1);\n}\nfunction f(b, n){\n\tif(n < b) return n;\n\treturn f(b, Math.floor(n / b)) + n % b;\n}\n\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\").trim());", "language": "JavaScript"}
