function Main(_0x22d56e) {
    const _0x24d475 = parseInt(_0x22d56e);
    const _0x7b86fd = 0x3b9aca00 + 0x7;
    var _0x220369 = 0x0, _0x1d900f = 0x1;
    do {
        if (_0x24d475 <= Math['pow'](0xa, _0x1d900f - 0x1) * 0x9 * _0x1d900f)
            _0x220369 = _0x1d900f;
        _0x1d900f++;
    } while (!_0x220369);
    _0x1d900f = Math['floor'](_0x24d475 / _0x220369);
    var _0x10e2ff = 0x0;
    var _0x270e72 = Math['pow'](0xa, _0x220369 - 0x1), _0x30f1fd = _0x270e72 + _0x1d900f - 0x1;
    var _0x42196c = _0x1d900f * f(_0x270e72);
    do {
        if (_0x24d475 % _0x1d900f)
            _0x10e2ff++;
        else
            _0x10e2ff += powmod(0xa, _0x24d475 / _0x1d900f - 0x1, _0x7b86fd) * 0x9 - _0x1d900f + 0x1;
    } while (--_0x1d900f);
    while (--_0x270e72) {
        _0x42196c += f(_0x270e72);
        if (_0x42196c > _0x24d475)
            _0x42196c -= f(_0x30f1fd--);
        if (_0x42196c === _0x24d475)
            _0x10e2ff++;
    }
    console['log']((_0x10e2ff + _0x7b86fd) % _0x7b86fd);
}
function powmod(_0x4d0a04, _0x3597e4, _0x3a7836) {
    const _0xd6cecd = 0x2710;
    var _0x5d7a06 = 0x1;
    while (_0x3597e4) {
        if (_0x3597e4 & 0x1)
            _0x5d7a06 = (Math['floor'](_0x4d0a04 / _0xd6cecd) * _0x5d7a06 % _0x3a7836 * _0xd6cecd + _0x4d0a04 % _0xd6cecd * _0x5d7a06) % _0x3a7836;
        _0x4d0a04 = (Math['floor'](_0x4d0a04 / _0xd6cecd) * _0x4d0a04 % _0x3a7836 * _0xd6cecd + _0x4d0a04 % _0xd6cecd * _0x4d0a04) % _0x3a7836;
        _0x3597e4 >>>= 0x1;
    }
    return _0x5d7a06;
}
function f(_0xb1bf80) {
    if (_0xb1bf80 < 0xa)
        return 0x1;
    if (_0xb1bf80 < 0x64)
        return 0x2;
    if (_0xb1bf80 < 0x3e8)
        return 0x3;
    if (_0xb1bf80 < 0x2710)
        return 0x4;
    if (_0xb1bf80 < 0x186a0)
        return 0x5;
    if (_0xb1bf80 < 0xf4240)
        return 0x6;
    if (_0xb1bf80 < 0x989680)
        return 0x7;
    return 0x8;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));