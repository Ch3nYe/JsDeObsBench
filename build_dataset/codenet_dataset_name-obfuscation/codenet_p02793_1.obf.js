console['log']((_0x321470 => {
    const [[_0x843f1d], _0x35ed5b] = _0x321470['trim']()['split']`\n`['map'](_0x1dc44f => _0x1dc44f['split']` `['map'](_0x493f20 => 0x0 | _0x493f20));
    const _0x3e9ff7 = 0x3b9aca00 + 0x7, _0x342172 = Math['max'](..._0x35ed5b);
    const _0x113277 = (_0x14085a, _0x3e7e03) => ((_0x14085a >> 0x10) * _0x3e7e03 % _0x3e9ff7 * 0x10000 + (_0x14085a & 0xffff) * _0x3e7e03) % _0x3e9ff7;
    const _0x8509d = Array(0xf4240 + 0x1)['fill'](!![]);
    const _0x82ac5d = new Map();
    for (let _0x314576 = 0x2; _0x314576 <= _0x342172; _0x314576++) {
        if (!_0x8509d[_0x314576])
            continue;
        for (let _0x4840ba = _0x314576 + _0x314576; _0x4840ba <= _0x342172; _0x4840ba = _0x4840ba + _0x314576)
            _0x8509d[_0x4840ba] = ![];
        _0x82ac5d['set'](_0x314576, 0x0);
    }
    const _0xdc5680 = [];
    for (let _0x24e079 = 0x0; _0x24e079 < _0x843f1d; _0x24e079++) {
        let _0x203883 = _0x35ed5b[_0x24e079];
        _0xdc5680['push'](new Map());
        for (const [_0x3a618d, _0x953c6] of _0x82ac5d) {
            if (_0x203883 === 0x1)
                break;
            let _0x27dfb7 = 0x0;
            while (_0x203883 % _0x3a618d === 0x0) {
                _0x203883 /= _0x3a618d;
                _0x27dfb7++;
            }
            if (_0x27dfb7)
                _0xdc5680[_0x24e079]['set'](_0x3a618d, _0x27dfb7);
            if (_0x27dfb7 > _0x953c6)
                _0x82ac5d['set'](_0x3a618d, _0x27dfb7);
        }
    }
    let _0x3ce3e7 = 0x0;
    for (let _0x4c436a = 0x0; _0x4c436a < _0x843f1d; _0x4c436a++) {
        let _0x1fee2b = 0x1;
        for (const [_0x281062, _0x3defc9] of _0x82ac5d) {
            if (!_0x3defc9)
                continue;
            _0x1fee2b = _0x113277(_0x1fee2b, _0x281062 ** (_0x3defc9 - (_0xdc5680[_0x4c436a]['get'](_0x281062) | 0x0)));
        }
        _0x3ce3e7 = (_0x3ce3e7 + _0x1fee2b) % _0x3e9ff7;
    }
    return _0x3ce3e7;
})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));