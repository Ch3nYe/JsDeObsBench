'use strict';
const main = _0x2f3277 => {
    const _0x36812a = _0x2f3277['trim']()['split']('\x0a');
    let _0x49dacb = Number(_0x36812a[0x0]['split']('\x20')[0x0]);
    let _0x14747d = Number(_0x36812a[0x0]['split']('\x20')[0x1]);
    let _0x20ed2b = _0x36812a[0x1]['split']('\x20')['map'](_0x6020db => Number(_0x6020db));
    let _0x2504f5 = 0x0;
    for (let _0x26977b = 0x0; _0x26977b < _0x49dacb; _0x26977b++) {
        let _0x2f9a28 = _0x20ed2b[_0x26977b] - _0x14747d;
        if (_0x2f9a28 > 0x0) {
            _0x20ed2b[_0x26977b] = _0x14747d;
            _0x2504f5 += _0x2f9a28;
        }
    }
    for (let _0x2ee7cf = 0x1; _0x2ee7cf < _0x49dacb - 0x1; _0x2ee7cf++) {
        let _0x5d4c16 = _0x20ed2b[_0x2ee7cf - 0x1];
        let _0xd5bf36 = _0x20ed2b[_0x2ee7cf];
        let _0x118edb = _0x20ed2b[_0x2ee7cf + 0x1];
        if (_0x5d4c16 + _0xd5bf36 > _0x14747d && _0xd5bf36 + _0x118edb > _0x14747d) {
            _0x20ed2b[_0x2ee7cf] = _0x14747d - _0x5d4c16;
            _0x2504f5 += _0xd5bf36 - (_0x14747d - _0x5d4c16);
        }
    }
    for (let _0x125800 = 0x0; _0x125800 < _0x49dacb - 0x1; _0x125800++) {
        let _0x358ee9 = _0x20ed2b[_0x125800];
        let _0x17e2da = _0x20ed2b[_0x125800 + 0x1];
        if (_0x358ee9 + _0x17e2da > _0x14747d) {
            _0x20ed2b[_0x125800] = _0x14747d - _0x17e2da;
            _0x2504f5 += _0x358ee9 - (_0x14747d - _0x17e2da);
        }
    }
    console['log'](_0x2504f5);
};
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));