function Main(_0x2affa3) {
    _0x2affa3 = _0x2affa3['trim']()['split']('\x0a')['map'](function (_0x4328bf) {
        return _0x4328bf['split']('\x20');
    });
    var _0x36977e = parseInt(_0x2affa3[0x0][0x0], 0xa);
    var _0x3fdc05 = parseInt(_0x2affa3[0x0][0x1], 0xa);
    var _0x288429 = calc(_0x36977e, _0x3fdc05);
    console['log'](_0x288429);
}
function calc(_0x527565, _0x4b570e) {
    if (_0x527565 % 0x3 === 0x0 || _0x4b570e % 0x3 === 0x0)
        return 0x0;
    var _0x38f9df = _0x527565 * _0x4b570e;
    var _0x566c74;
    var _0x46c6d4 = _0x38f9df;
    for (var _0x4bdb17 = 0x0; _0x4bdb17 <= _0x4b570e; _0x4bdb17++) {
        _0x566c74 = Math['max'](Math['abs'](_0x4bdb17 * _0x527565 - (_0x4b570e - _0x4bdb17) * Math['ceil'](_0x527565 / 0x2)), Math['abs'](_0x4bdb17 * _0x527565 - (_0x4b570e - _0x4bdb17) * Math['floor'](_0x527565 / 0x2)), _0x527565 % 0x2 * (_0x4b570e - _0x4bdb17));
        _0x38f9df = Math['min'](_0x38f9df, _0x566c74);
        if (_0x566c74 > _0x46c6d4)
            break;
        _0x46c6d4 = _0x566c74;
    }
    [_0x4b570e, _0x527565] = [
        _0x527565,
        _0x4b570e
    ];
    _0x46c6d4 = _0x527565 * _0x4b570e;
    for (var _0x4bdb17 = 0x0; _0x4bdb17 <= _0x4b570e; _0x4bdb17++) {
        _0x566c74 = Math['max'](Math['abs'](_0x4bdb17 * _0x527565 - (_0x4b570e - _0x4bdb17) * Math['ceil'](_0x527565 / 0x2)), Math['abs'](_0x4bdb17 * _0x527565 - (_0x4b570e - _0x4bdb17) * Math['floor'](_0x527565 / 0x2)), _0x527565 % 0x2 * (_0x4b570e - _0x4bdb17));
        _0x38f9df = Math['min'](_0x38f9df, _0x566c74);
        if (_0x566c74 > _0x46c6d4)
            break;
        _0x46c6d4 = _0x566c74;
    }
    return Math['min'](_0x38f9df, _0x527565, _0x4b570e);
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));