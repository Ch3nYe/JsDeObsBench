function Main(_0x33fdbd) {
    _0x33fdbd = _0x33fdbd['trim']()['split']('\x0a')['map'](function (_0x23c4d0) {
        return _0x23c4d0['split']('\x20');
    });
    var _0x5eb95f = parseInt(_0x33fdbd[0x0][0x0], 0xa);
    var _0x2d6bca = _0x33fdbd[0x1]['map'](_0x461fa2 => parseInt(_0x461fa2, 0xa));
    var _0x29f5de = _0x33fdbd[0x2]['map'](_0x339202 => parseInt(_0x339202, 0xa));
    var _0x531b6e = _0x33fdbd[0x3]['map'](_0x40b82f => parseInt(_0x40b82f, 0xa));
    function _0x1c087f(_0xb5c71c, _0x2a8275) {
        return _0x2a8275 - _0xb5c71c;
    }
    _0x2d6bca['sort'](_0x1c087f);
    _0x29f5de['sort'](_0x1c087f);
    _0x531b6e['sort'](_0x1c087f);
    var _0x39c2e3 = 0x0;
    var _0x2ef1d8 = -0x1;
    var _0x497a04 = Array['from']({ 'length': _0x5eb95f }, () => 0x0);
    var _0x2d9e57 = 0x0;
    var _0x3a04a0 = 0x0;
    for (var _0x32d286 = 0x0; _0x32d286 < _0x5eb95f; _0x32d286++) {
        while (_0x39c2e3 < _0x5eb95f && _0x29f5de[_0x39c2e3] > _0x2d6bca[_0x32d286]) {
            while (_0x2ef1d8 < _0x5eb95f - 0x1 && _0x531b6e[_0x2ef1d8 + 0x1] > _0x29f5de[_0x39c2e3]) {
                _0x2ef1d8++;
            }
            if (_0x39c2e3 > 0x0)
                _0x2d9e57 = _0x497a04[_0x39c2e3 - 0x1];
            else
                _0x2d9e57 = 0x0;
            _0x497a04[_0x39c2e3] = _0x2d9e57 + _0x2ef1d8 + 0x1;
            _0x39c2e3++;
        }
        _0x39c2e3 = Math['max'](0x0, _0x39c2e3 - 0x1);
        _0x3a04a0 += _0x497a04[_0x39c2e3];
    }
    console['log'](_0x3a04a0);
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));