'use strict';
function main(_0x5358b6) {
    const _0x5543ba = _0x5358b6['trim']()['split']('\x0a')['map'](_0x1f41b9 => _0x1f41b9['split']('\x20')['map'](_0x38f14a => parseFloat(_0x38f14a)));
    const _0x5e1bc3 = _0x5543ba[0x0][0x0];
    const _0x3593c6 = _0x5543ba[0x0][0x1];
    const _0x555af0 = _0x5543ba['slice'](0x1, _0x5e1bc3);
    const _0x2a75de = _0x5543ba['slice'](_0x5e1bc3, _0x5e1bc3 + _0x3593c6);
    const _0x39ebee = [...new Array(_0x5e1bc3 + 0x1)]['map'](_0xa9539d => []);
    for (let _0x40bb5 = 0x0; _0x40bb5 < _0x5e1bc3 - 0x1; _0x40bb5++) {
        const _0x51a276 = _0x555af0[_0x40bb5][0x0];
        _0x39ebee[_0x51a276]['push'](_0x555af0[_0x40bb5][0x1]);
    }
    const _0x318826 = [...new Array(_0x5e1bc3 + 0x1)]['map'](_0x4c9355 => 0x0);
    for (let _0x6e48fe = 0x0; _0x6e48fe < _0x3593c6; _0x6e48fe++) {
        const _0x274c7d = _0x2a75de[_0x6e48fe];
        const _0x13885e = _0x274c7d[0x1];
        _0x318826[_0x274c7d[0x0]] += _0x13885e;
        let _0x564e08 = [..._0x39ebee[_0x274c7d[0x0]]];
        while (_0x564e08['length'] > 0x0) {
            const _0x4cada1 = _0x564e08['pop']();
            _0x318826[_0x4cada1] += _0x13885e;
            _0x564e08 = _0x564e08['concat'](_0x39ebee[_0x4cada1]);
        }
    }
    console['log'](_0x318826['slice'](0x1)['join']('\x20'));
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));