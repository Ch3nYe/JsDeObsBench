'use strict';
const main = _0x39d88b => {
    _0x39d88b = _0x39d88b['split']('\x0a');
    const _0x2abe20 = Number(_0x39d88b[0x0]);
    const _0x4064e5 = _0x39d88b[0x1]['split']('\x20');
    const _0x5c23c0 = _0x4064e5['concat']();
    bubbleSort(_0x4064e5, _0x2abe20);
    console['log'](_0x4064e5['join']('\x20'));
    console['log']('Stable');
    selectionSort(_0x5c23c0, _0x2abe20);
    console['log'](_0x5c23c0['join']('\x20'));
    console['log'](_0x5c23c0['every']((_0x573e80, _0x22c55b) => _0x573e80 === _0x4064e5[_0x22c55b]) ? 'Stable' : 'Not\x20stable');
};
function bubbleSort(_0x41cb4d, _0x341255) {
    for (let _0x71c573 = 0x0; _0x71c573 < _0x341255 - 0x1; ++_0x71c573) {
        for (let _0x249e3b = _0x341255 - 0x1; _0x249e3b >= _0x71c573 + 0x1; --_0x249e3b) {
            if (Number(_0x41cb4d[_0x249e3b - 0x1][0x1]) > Number(_0x41cb4d[_0x249e3b][0x1])) {
                const _0x486fae = _0x41cb4d[_0x249e3b];
                _0x41cb4d[_0x249e3b] = _0x41cb4d[_0x249e3b - 0x1];
                _0x41cb4d[_0x249e3b - 0x1] = _0x486fae;
            }
        }
    }
}
function selectionSort(_0xacda8b, _0x54e39f) {
    for (let _0x54e9e5 = 0x0; _0x54e9e5 < _0x54e39f - 0x1; ++_0x54e9e5) {
        let _0x495f59 = _0x54e9e5;
        for (let _0x9c818d = _0x54e9e5; _0x9c818d < _0x54e39f; ++_0x9c818d) {
            if (Number(_0xacda8b[_0x9c818d][0x1]) < Number(_0xacda8b[_0x495f59][0x1])) {
                _0x495f59 = _0x9c818d;
            }
        }
        if (_0x54e9e5 !== _0x495f59) {
            const _0x5bcfb4 = _0xacda8b[_0x54e9e5];
            _0xacda8b[_0x54e9e5] = _0xacda8b[_0x495f59];
            _0xacda8b[_0x495f59] = _0x5bcfb4;
        }
    }
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));