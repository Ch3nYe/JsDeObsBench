'use strict';
console['log'](function (_0x5c1152) {
    const _0x296211 = _0x5c1152['trim']()['split']('\x0a')['map'](_0x3f2f00 => _0x3f2f00['split']('\x20')['map'](_0x26b7e8 => _0x26b7e8 | 0x0));
    const _0xd389e5 = _0x296211[0x0][0x0], _0x57cf6a = _0x296211[0x0][0x1];
    const _0x38829e = [], _0x58114e = [];
    for (let _0x3033f5 = 0x0; _0x3033f5 < _0x57cf6a; _0x3033f5++) {
        _0x38829e['push'](_0x296211[0x1 + _0x3033f5][0x0]);
        _0x58114e['push'](_0x296211[0x1 + _0x3033f5][0x1]);
    }
    const _0x1f7246 = Array(_0x57cf6a + 0x1)['fill'](0x0)['map'](_0x2ef09a => Array(_0xd389e5 + 0x1)['fill'](0x0));
    for (let _0x31411d = 0x1; _0x31411d <= _0x57cf6a; _0x31411d++) {
        for (let _0x38448e = 0x0; _0x38448e < _0x57cf6a; _0x38448e++) {
            _0x1f7246[_0x31411d][_0x58114e[_0x38448e]] = Math['max'](_0x1f7246[_0x31411d][_0x58114e[_0x38448e]], _0x1f7246[_0x31411d - 0x1][_0x38829e[_0x38448e]] + 0x1);
        }
    }
    return Math['max'](..._0x1f7246[_0x57cf6a])['toString']();
}(require('fs')['readFileSync']('/dev/stdin', 'utf8')));