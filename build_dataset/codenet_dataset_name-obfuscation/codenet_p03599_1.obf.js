const input = require('fs')['readFileSync']('/dev/stdin', 'utf8');
(_0x108173 => {
    const [_0x397a40, _0x2a8a2e, _0x1d8e36, _0x44941b, _0x4f0a3b, _0x33e03c] = _0x108173['trim']()['split']('\x20')['map'](Number);
    let _0x1a57e1 = {};
    let _0xf85328 = {};
    for (let _0x400551 = 0x1; _0x400551 < _0x33e03c; _0x400551++) {
        for (let _0x1b021a = 0x0; _0x1b021a < _0x33e03c; _0x1b021a++) {
            const _0x221655 = _0x397a40 * _0x400551 * 0x64 + _0x1b021a * _0x2a8a2e * 0x64;
            if (_0x221655 > _0x33e03c)
                break;
            _0x1a57e1[_0x221655] = 0x1;
        }
    }
    const _0x3b4565 = _0x33e03c * _0x4f0a3b / 0x64;
    for (let _0x2adb56 = 0x0; _0x2adb56 < _0x33e03c; _0x2adb56++) {
        for (let _0x97c6c2 = 0x0; _0x97c6c2 < _0x33e03c; _0x97c6c2++) {
            const _0x60def0 = _0x1d8e36 * _0x2adb56 + _0x44941b * _0x97c6c2;
            if (_0x60def0 > _0x3b4565)
                break;
            _0xf85328[_0x60def0] = 0x1;
        }
    }
    let _0x3670a3 = [
        _0x397a40 * 0x64,
        0x0
    ];
    let _0x25f0b2 = 0x0;
    let _0x177fac = _0x4f0a3b / 0x64;
    for (let _0x5126f3 in _0x1a57e1) {
        for (let _0x183fbf in _0xf85328) {
            const _0xfd0508 = _0x5126f3 - 0x0 + (_0x183fbf - 0x0);
            const _0x3aee18 = _0x183fbf / _0x5126f3;
            if (_0x3aee18 > _0x177fac || _0xfd0508 > _0x33e03c)
                continue;
            if (_0x3aee18 > _0x25f0b2) {
                _0x25f0b2 = _0x3aee18;
                _0x3670a3 = [
                    _0xfd0508,
                    _0x183fbf
                ];
            }
        }
    }
    console['log'](_0x3670a3[0x0], _0x3670a3[0x1]);
})(input);