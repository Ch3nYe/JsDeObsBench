'use strict';
const fact = _0x3e3624 => {
    if (_0x3e3624 === 0x1)
        0x1;
    return _0x3e3624 + fact(_0x3e3624 - 0x1);
};
function Main(_0x2fa948) {
    _0x2fa948 = _0x2fa948['trim']()['split']('\x0a');
    const _0x5ca2f7 = _0x2fa948[0x0]['split']('\x20')['map'](_0x39bbe4 => parseInt(_0x39bbe4));
    const _0x4a1219 = _0x5ca2f7[0x0];
    const _0x26d733 = _0x5ca2f7[0x1];
    let _0x2b2bb5 = _0x2fa948[0x1]['split']('\x20')['map'](_0x45c487 => parseInt(_0x45c487));
    let _0x5cc650 = {};
    for (let _0x2c4aad = 0x0; _0x2c4aad < _0x4a1219; ++_0x2c4aad) {
        const _0x481898 = _0x2b2bb5[_0x2c4aad];
        if (_0x5cc650[_0x481898])
            continue;
        let _0x28569a = 0x0;
        for (let _0x2aa458 = _0x481898; _0x2aa458 > 0x0; --_0x2aa458) {
            _0x28569a += _0x2aa458;
        }
        _0x5cc650[_0x481898] = _0x28569a;
    }
    let _0x711f7b = 0x0;
    for (let _0x30c987 = 0x0; _0x30c987 < _0x4a1219 - (_0x26d733 - 0x1); ++_0x30c987) {
        let _0x4271fd = 0x0;
        for (let _0x251ec6 = _0x30c987; _0x251ec6 < _0x30c987 + _0x26d733; ++_0x251ec6) {
            _0x4271fd += _0x5cc650[_0x2b2bb5[_0x251ec6]] * 0x1 / _0x2b2bb5[_0x251ec6];
        }
        _0x711f7b = Math['max'](_0x4271fd, _0x711f7b);
    }
    console['log'](_0x711f7b['toFixed'](0xc));
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));