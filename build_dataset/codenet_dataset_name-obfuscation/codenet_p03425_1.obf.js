'use strict';
const main = _0x3e06eb => {
    _0x3e06eb = _0x3e06eb['trim']()['split']('\x0a');
    const _0x2c816e = parseInt(_0x3e06eb[0x0]);
    const _0x2fb687 = _0x3e06eb['slice'](0x1, _0x2c816e + 0x1);
    const _0xb1dbdb = [
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x1,
        0x1,
        0x2
    ];
    const _0xb65e1e = [
        0x1,
        0x1,
        0x1,
        0x2,
        0x2,
        0x3,
        0x2,
        0x2,
        0x3,
        0x3
    ];
    const _0x29ba72 = [
        0x2,
        0x3,
        0x4,
        0x3,
        0x4,
        0x4,
        0x3,
        0x4,
        0x4,
        0x4
    ];
    let _0x5ed0ff = [
        0x0,
        0x0,
        0x0,
        0x0,
        0x0
    ];
    for (let _0x55da01 in _0x2fb687) {
        if (_0x2fb687[_0x55da01][0x0] === 'M') {
            _0x5ed0ff[0x0]++;
        }
        if (_0x2fb687[_0x55da01][0x0] === 'A') {
            _0x5ed0ff[0x1]++;
        }
        if (_0x2fb687[_0x55da01][0x0] === 'R') {
            _0x5ed0ff[0x2]++;
        }
        if (_0x2fb687[_0x55da01][0x0] === 'C') {
            _0x5ed0ff[0x3]++;
        }
        if (_0x2fb687[_0x55da01][0x0] === 'H') {
            _0x5ed0ff[0x4]++;
        }
    }
    let _0x1e8cf2 = 0x0;
    for (let _0x3c427b = 0x0; _0x3c427b < 0xa; _0x3c427b++) {
        _0x1e8cf2 += _0x5ed0ff[_0xb1dbdb[_0x3c427b]] * _0x5ed0ff[_0xb65e1e[_0x3c427b]] * _0x5ed0ff[_0x29ba72[_0x3c427b]];
    }
    console['log'](_0x1e8cf2);
};
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));