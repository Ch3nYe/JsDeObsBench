var toInt = _0x4192e1 => parseInt(_0x4192e1, 0xa);
var toIntArr = _0x1686d8 => _0x1686d8['map'](_0x1f737c => toInt(_0x1f737c));
var abs = _0x4100d8 => _0x4100d8 > 0x0 ? _0x4100d8 : -_0x4100d8;
function min() {
    var _0x5703f9 = arguments, _0x5e1a2d = _0x5703f9[0x0];
    for (var _0x2a744f = 0x1; _0x2a744f < _0x5703f9['length']; _0x2a744f++)
        if (_0x5703f9[_0x2a744f] < _0x5e1a2d)
            _0x5e1a2d = _0x5703f9[_0x2a744f];
    return _0x5e1a2d;
}
function max() {
    var _0x449f86 = arguments, _0x234390 = _0x449f86[0x0];
    for (var _0xf32954 = 0x1; _0xf32954 < _0x449f86['length']; _0xf32954++)
        if (_0x449f86[_0xf32954] > _0x234390)
            _0x234390 = _0x449f86[_0xf32954];
    return _0x234390;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));
function Main(_0x23e8c5) {
    var _0x23e8c5 = _0x23e8c5['split']('\x0a');
    var _0x30b435 = toInt(_0x23e8c5[0x0]);
    var _0xe44232 = toIntArr(_0x23e8c5[0x1]['split']('\x20'));
    _0xe44232['length'] = _0x30b435;
    var _0x23b8bb = -_0x30b435;
    for (var _0xf4c9d0 = 0x0; _0xf4c9d0 < _0x30b435; _0xf4c9d0++) {
        _0x23b8bb += _0xe44232[_0xf4c9d0];
    }
    console['log'](_0x23b8bb);
}