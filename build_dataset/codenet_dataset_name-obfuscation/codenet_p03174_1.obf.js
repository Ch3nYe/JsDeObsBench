'use strict';
function Main(_0x4b4afc) {
    _0x4b4afc = _0x4b4afc['trim']()['split'](/\n/);
    const _0x5276b7 = _0x4b4afc['shift']() - 0x0;
    const _0x580236 = Math['pow'](0x2, _0x5276b7);
    const _0x39fc38 = Math['pow'](0xa, 0x9) + 0x7;
    _0x4b4afc = _0x4b4afc['map'](_0x2b281e => _0x2b281e['split'](/\s+/)['map'](_0x47e3ab => _0x47e3ab === '1'));
    const _0x79611a = _0x4b4afc;
    const _0x2599aa = new Array(_0x5276b7)['fill'](0x0)['map']((_0x3169fa, _0x26f7e5) => new Object());
    _0x2599aa[-0x1] = { 0x0: 0x1 };
    const _0x401eaf = new Array(_0x5276b7)['fill'](0x0)['map']((_0x54bdc9, _0x2e9685) => 0x1 << _0x2e9685);
    for (let _0x570a3c = -0x1; _0x570a3c < _0x5276b7 - 0x1; _0x570a3c++) {
        Object['keys'](_0x2599aa[_0x570a3c])['forEach'](function (_0x5deb42) {
            _0x5deb42 = _0x5deb42 - 0x0;
            _0x2599aa[_0x570a3c][_0x5deb42] %= _0x39fc38;
            for (let _0x47d9ad = 0x0; _0x47d9ad < _0x5276b7; _0x47d9ad++) {
                if ((_0x5deb42 & _0x401eaf[_0x47d9ad]) > 0x0)
                    continue;
                if (_0x79611a[_0x570a3c + 0x1][_0x47d9ad])
                    _0x2599aa[_0x570a3c + 0x1][_0x5deb42 + _0x401eaf[_0x47d9ad]] = (_0x2599aa[_0x570a3c + 0x1][_0x5deb42 + _0x401eaf[_0x47d9ad]] || 0x0) + _0x2599aa[_0x570a3c][_0x5deb42];
            }
        });
    }
    console['log']((_0x2599aa[_0x5276b7 - 0x1][_0x580236 - 0x1] || 0x0) % _0x39fc38);
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));