function Main(_0x228404) {
    _0x228404 = _0x228404['split']('\x0a');
    const _0x514d53 = _0x228404[0x0]['split']('\x20');
    const _0x29fe5c = parseInt(_0x514d53[0x0]);
    const _0x358702 = parseInt(_0x514d53[0x1]);
    const _0x34b206 = parseInt(_0x514d53[0x2]);
    var _0x46993b = parseInt(_0x228404[0x1], 0x2);
    var _0x3e9713 = parseInt(_0x228404[0x2], 0x2);
    for (var _0x333683 = 0x0; _0x333683 < _0x34b206; _0x333683++) {
        var _0x4b04b0 = _0x46993b & _0x3e9713;
        _0x46993b = _0x46993b + _0x4b04b0;
        _0x3e9713 = _0x3e9713 + _0x4b04b0;
    }
    const _0x3cd892 = toBinary(_0x46993b);
    const _0x49d22e = toBinary(_0x3e9713);
    console['log'](_0x3cd892);
    console['log'](_0x49d22e);
}
function toBinary(_0x21cb4e) {
    var _0x17c777 = _0x21cb4e, _0x564e10 = '';
    while (_0x17c777 > 0x0) {
        _0x564e10 = _0x17c777 % 0x2 + _0x564e10;
        _0x17c777 = Math['floor'](_0x17c777 / 0x2);
    }
    return _0x564e10;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));