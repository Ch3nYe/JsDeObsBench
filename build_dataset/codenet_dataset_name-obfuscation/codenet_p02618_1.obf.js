'use strict';
function main(_0x12155f) {
    const _0x22bf7e = _0x12155f['split']('\x0a');
    const _0x2b33ad = parseInt(_0x22bf7e[0x0]);
    let _0xb785e4 = _0x22bf7e[0x1]['split']('\x20');
    const _0x1981bc = _0xb785e4['map'](_0x485077 => parseInt(_0x485077));
    let _0x208f63 = [];
    for (let _0x45cc8a = 0x2; _0x45cc8a < _0x22bf7e['length']; _0x45cc8a++) {
        _0x208f63['push']([]);
        const _0x23092d = _0x22bf7e[_0x45cc8a]['split']('\x20');
        for (let _0x32b157 = 0x0; _0x32b157 < _0x23092d['length']; _0x32b157++) {
            _0x208f63[_0x45cc8a - 0x2]['push'](parseInt(_0x23092d[_0x32b157]));
        }
    }
    let _0x114373 = [];
    for (let _0x47e36f = 0x0; _0x47e36f < _0x208f63['length']; _0x47e36f++) {
        let _0x2d5344 = _0x208f63[_0x47e36f][0x0];
        let _0x5343db = 0x0;
        for (let _0x177b7e = 0x1; _0x177b7e < _0x208f63[_0x47e36f]['length']; _0x177b7e++) {
            if (_0x208f63[_0x47e36f][_0x177b7e] > _0x2d5344) {
                _0x5343db = _0x177b7e;
                _0x2d5344 = _0x208f63[_0x47e36f][_0x177b7e];
            }
        }
        _0x114373['push'](_0x5343db + 0x1);
    }
    for (let _0x13f03a = 0x0; _0x13f03a < _0x114373['length']; _0x13f03a++) {
        console['log'](_0x114373[_0x13f03a]);
    }
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));
main(input);