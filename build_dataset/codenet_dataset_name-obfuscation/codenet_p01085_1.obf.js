function Main(_0x5eea5a) {
    _0x5eea5a = _0x5eea5a['split']('\x0a');
    var _0x76fb6d = 0x0;
    while (0x1) {
        _0x5eea5a[_0x76fb6d] = _0x5eea5a[_0x76fb6d]['split']('\x20');
        var _0x4400dc = parseInt(_0x5eea5a[_0x76fb6d][0x0], 0xa);
        var _0x197f8c = parseInt(_0x5eea5a[_0x76fb6d][0x1], 0xa);
        var _0x32f2f9 = parseInt(_0x5eea5a[_0x76fb6d++][0x2], 0xa);
        if (_0x4400dc == 0x0 && _0x197f8c == 0x0 && _0x32f2f9 == 0x0)
            break;
        var _0x1a44b5 = 0x0, _0x470bc2 = 0x0;
        var _0x3431c0 = [];
        for (var _0x3881e9 = 0x0; _0x3881e9 < _0x4400dc; _0x3881e9++)
            _0x3431c0[_0x3881e9] = parseInt(_0x5eea5a[_0x76fb6d++], 0xa);
        for (var _0x3881e9 = _0x197f8c - 0x1; _0x3881e9 < _0x32f2f9; _0x3881e9++) {
            if (_0x3431c0[_0x3881e9] - _0x3431c0[_0x3881e9 + 0x1] >= _0x1a44b5) {
                _0x1a44b5 = _0x3431c0[_0x3881e9] - _0x3431c0[_0x3881e9 + 0x1];
                _0x470bc2 = _0x3881e9;
            }
        }
        console['log'](_0x470bc2 + 0x1);
    }
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));