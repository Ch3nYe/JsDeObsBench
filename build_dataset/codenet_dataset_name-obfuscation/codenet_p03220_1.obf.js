var toInt = _0x43ad97 => parseInt(_0x43ad97, 0xa);
var toIntArr = _0x196c67 => _0x196c67['map'](_0x31a478 => toInt(_0x31a478));
var abs = _0x5a71a4 => _0x5a71a4 > 0x0 ? _0x5a71a4 : -_0x5a71a4;
function min() {
    var _0x2329bb = arguments, _0x4cfffa = _0x2329bb[0x0];
    for (var _0x3587a9 = 0x1; _0x3587a9 < _0x2329bb['length']; _0x3587a9++)
        if (_0x2329bb[_0x3587a9] < _0x4cfffa)
            _0x4cfffa = _0x2329bb[_0x3587a9];
    return _0x4cfffa;
}
function max() {
    var _0x269946 = arguments, _0x1a30c3 = _0x269946[0x0];
    for (var _0x4b46d6 = 0x1; _0x4b46d6 < _0x269946['length']; _0x4b46d6++)
        if (_0x269946[_0x4b46d6] > _0x1a30c3)
            _0x1a30c3 = _0x269946[_0x4b46d6];
    return _0x1a30c3;
}
function gcd() {
    var _0x111f1e = arguments, _0x51dead = _0x111f1e[0x0], _0x1242af = (_0x45d9db, _0x9a222b) => _0x9a222b ? _0x1242af(_0x9a222b, _0x45d9db % _0x9a222b) : _0x45d9db;
    for (var _0x247845 = 0x1; _0x247845 < _0x111f1e['length']; _0x247845++)
        _0x51dead = _0x1242af(_0x51dead, _0x111f1e[_0x247845]);
    return _0x51dead;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));
function Main(_0x58b9f0) {
    var _0x58b9f0 = _0x58b9f0['split']('\x0a');
    var _0x9ea094 = toInt(_0x58b9f0[0x0]);
    var _0x1ade06 = toIntArr(_0x58b9f0[0x1]['split']('\x20'));
    var _0x2d9bd3 = toIntArr(_0x58b9f0[0x2]['split']('\x20'));
    var _0x5adace = _0x1ade06[0x0];
    var _0x395d68 = _0x1ade06[0x1];
    var _0x1ed39b = 0x1;
    var _0x4ec53e = abs(_0x5adace - _0x395d68 - 0.006 * _0x2d9bd3[0x0]), _0x52e369;
    for (var _0x31634f = 0x1; _0x31634f < _0x9ea094; _0x31634f++) {
        _0x52e369 = abs(_0x5adace - _0x395d68 - 0.006 * _0x2d9bd3[_0x31634f]);
        if (_0x52e369 < _0x4ec53e) {
            _0x1ed39b = _0x31634f + 0x1;
            _0x4ec53e = _0x52e369;
        }
    }
    console['log'](_0x1ed39b);
}