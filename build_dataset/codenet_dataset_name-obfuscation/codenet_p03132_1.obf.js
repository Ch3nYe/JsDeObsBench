'use strict';
function main(_0x3a5421) {
    const _0x318ea4 = _0x3a5421['split']('\x0a');
    const _0x5cc8de = Number(_0x318ea4[0x0]);
    const _0x1769e8 = [];
    for (let _0x327365 = 0x0; _0x327365 < _0x5cc8de; _0x327365++) {
        _0x1769e8['push'](Number(_0x318ea4[_0x327365 + 0x1]));
    }
    const _0xecbee7 = Array(_0x5cc8de + 0x1)['fill']()['map'](() => Array(0x5)['fill']());
    _0xecbee7[0x0] = [
        0x0,
        0x0,
        0x0,
        0x0,
        0x0
    ];
    for (let _0x2c9bdb = 0x1; _0x2c9bdb <= _0x5cc8de; _0x2c9bdb++) {
        let _0x1936ab = _0x1769e8[_0x2c9bdb - 0x1];
        let _0x402280 = _0x1769e8[_0x2c9bdb - 0x1] === 0x0 ? 0x2 : _0x1936ab % 0x2;
        let _0x3e05fa = (_0x1936ab + 0x1) % 0x2;
        _0xecbee7[_0x2c9bdb][0x0] = _0xecbee7[_0x2c9bdb - 0x1][0x0] + _0x1936ab;
        _0xecbee7[_0x2c9bdb][0x1] = Math['min'](_0xecbee7[_0x2c9bdb - 0x1][0x0], _0xecbee7[_0x2c9bdb - 0x1][0x1]) + _0x402280;
        _0xecbee7[_0x2c9bdb][0x2] = Math['min'](_0xecbee7[_0x2c9bdb - 0x1][0x0], _0xecbee7[_0x2c9bdb - 0x1][0x1], _0xecbee7[_0x2c9bdb - 0x1][0x2]) + _0x3e05fa;
        _0xecbee7[_0x2c9bdb][0x3] = Math['min'](_0xecbee7[_0x2c9bdb - 0x1][0x2], _0xecbee7[_0x2c9bdb - 0x1][0x3]) + _0x402280;
        _0xecbee7[_0x2c9bdb][0x4] = Math['min'](_0xecbee7[_0x2c9bdb - 0x1][0x2], _0xecbee7[_0x2c9bdb - 0x1][0x3], _0xecbee7[_0x2c9bdb - 0x1][0x4]) + _0x1936ab;
    }
    console['log'](Math['min'](..._0xecbee7[_0x5cc8de]));
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));