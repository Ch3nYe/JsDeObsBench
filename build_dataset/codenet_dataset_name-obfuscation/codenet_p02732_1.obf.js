'use strict';
const combi = function (_0x34a4f6) {
    return _0x34a4f6 * (_0x34a4f6 - 0x1) / 0x2;
};
const main = _0x6568a1 => {
    const _0x148f47 = _0x6568a1['trim']()['split']('\x0a');
    const _0x514f61 = parseInt(_0x148f47[0x0]['split']('\x20')[0x0]);
    const _0x2e8168 = _0x148f47[0x1]['split']('\x20')['map'](_0x5081a6 => parseInt(_0x5081a6));
    let _0xb37aab = {};
    for (let _0x561abb = 0x0; _0x561abb < _0x2e8168['length']; _0x561abb++) {
        if (!_0xb37aab[_0x2e8168[_0x561abb]])
            _0xb37aab[_0x2e8168[_0x561abb]] = 0x1;
        else
            _0xb37aab[_0x2e8168[_0x561abb]]++;
    }
    let _0x3273e3 = 0x0;
    let _0x8f220c = Object['keys'](_0xb37aab);
    for (let _0x4916df = 0x0; _0x4916df < _0x8f220c['length']; _0x4916df++) {
        _0x3273e3 = _0x3273e3 + combi(_0xb37aab[_0x8f220c[_0x4916df]]);
    }
    for (let _0x36ea5e = 0x0; _0x36ea5e < _0x2e8168['length']; _0x36ea5e++) {
        let _0x33e1d4 = _0xb37aab[_0x2e8168[_0x36ea5e]];
        const _0xc245d5 = combi(_0x33e1d4) - combi(_0x33e1d4 - 0x1);
        console['log'](_0x3273e3 - _0xc245d5);
    }
};
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));