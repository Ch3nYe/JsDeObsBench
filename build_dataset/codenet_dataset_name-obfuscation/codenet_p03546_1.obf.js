console['log']((_0x1606d6 => {
    const [[_0x4fa091, _0x4facaa], ..._0xed4cad] = _0x1606d6['trim']()['split']`\n`['map'](_0x2195b4 => _0x2195b4['split']` `['map'](_0x16a231 => _0x16a231 | 0x0));
    const _0xa6af41 = _0xed4cad['slice'](0xa);
    const _0x37321c = _0xed4cad['slice'](0x0, 0xa);
    for (let _0x2d2343 = 0x0; _0x2d2343 < 0xa; _0x2d2343++) {
        for (let _0x2129ea = 0x0; _0x2129ea < 0xa; _0x2129ea++) {
            for (let _0xc4a04f = 0x0; _0xc4a04f < 0xa; _0xc4a04f++) {
                _0x37321c[_0x2129ea][_0xc4a04f] = Math['min'](_0x37321c[_0x2129ea][_0xc4a04f], _0x37321c[_0x2129ea][_0x2d2343] + _0x37321c[_0x2d2343][_0xc4a04f]);
            }
        }
    }
    let _0x4e8da4 = 0x0;
    for (let _0x2a83b3 = 0x0; _0x2a83b3 < _0x4fa091; _0x2a83b3++) {
        for (let _0x40ce8f = 0x0; _0x40ce8f < _0x4facaa; _0x40ce8f++) {
            if (_0xa6af41[_0x2a83b3][_0x40ce8f] === -0x1 || _0xa6af41[_0x2a83b3][_0x40ce8f] === 0x1)
                continue;
            _0x4e8da4 += _0x37321c[_0xa6af41[_0x2a83b3][_0x40ce8f]][0x1];
        }
    }
    return '' + _0x4e8da4;
})(require('fs')['readFileSync']('/dev/stdin', 'utf8')));