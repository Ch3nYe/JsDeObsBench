'use strict';
function Main(_0x3a2879) {
    const _0x4a3a9a = _0x3a2879['split']('\x0a')[0x0] - 0x0;
    let _0x2c9fe4 = new Array(_0x4a3a9a + 0x1)['fill'](0x0);
    for (let _0x18aa57 = 0x2; _0x18aa57 <= _0x4a3a9a; _0x18aa57++) {
        let _0x40b5f4 = _0x18aa57;
        for (let _0x98d04 = 0x2; _0x98d04 <= _0x18aa57; _0x98d04++) {
            while (_0x40b5f4 % _0x98d04 == 0x0) {
                _0x2c9fe4[_0x98d04] += 0x1;
                _0x40b5f4 /= _0x98d04;
            }
        }
    }
    const _0x5deb12 = _0x275828 => _0x2c9fe4['reduce']((_0x56f6d6, _0xe73474) => _0x56f6d6 + (_0xe73474 >= _0x275828 - 0x1 ? 0x1 : 0x0), 0x0);
    let _0x4e3680 = _0x5deb12(0x4b);
    let _0x58be69 = _0x5deb12(0x19);
    let _0x4f5a6f = _0x5deb12(0xf);
    let _0x29923a = _0x5deb12(0x5);
    let _0x391a27 = _0x5deb12(0x3);
    let _0x2581e0 = _0x29923a * (_0x29923a - 0x1) * (_0x391a27 - 0x2) / 0x2;
    let _0x166aee = _0x4f5a6f * (_0x29923a - 0x1);
    let _0x453457 = _0x58be69 * (_0x391a27 - 0x1);
    let _0x4795bd = _0x4e3680;
    console['log'](_0x4795bd + _0x453457 + _0x166aee + _0x2581e0);
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));