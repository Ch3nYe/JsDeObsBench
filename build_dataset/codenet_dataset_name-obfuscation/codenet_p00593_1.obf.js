function bomb(_0x438fa1, _0x2e9d4b, _0x1c6da6, _0x3f8c99) {
    yx[_0x438fa1][_0x2e9d4b] = ('\x20\x20\x20' + _0x1c6da6)['slice'](-0x3);
    if (_0x438fa1 == n - 0x1 && _0x2e9d4b == n - 0x1)
        return;
    else if (_0x438fa1 == n - 0x1 && _0x3f8c99 == -0x1)
        bomb(_0x438fa1, _0x2e9d4b + 0x1, _0x1c6da6 + 0x1, 0x1);
    else if (_0x438fa1 == n - 0x1 && _0x3f8c99 == 0x1)
        bomb(_0x438fa1 - 0x1, _0x2e9d4b + 0x1, _0x1c6da6 + 0x1, 0x1);
    else if (_0x2e9d4b == n - 0x1 && _0x3f8c99 == 0x1)
        bomb(_0x438fa1 + 0x1, _0x2e9d4b, _0x1c6da6 + 0x1, -0x1);
    else if (_0x2e9d4b == n - 0x1 && _0x3f8c99 == -0x1)
        bomb(_0x438fa1 + 0x1, _0x2e9d4b - 0x1, _0x1c6da6 + 0x1, -0x1);
    else if (_0x438fa1 == 0x0 && _0x3f8c99 == 0x1)
        bomb(_0x438fa1, _0x2e9d4b + 0x1, _0x1c6da6 + 0x1, -0x1);
    else if (_0x438fa1 == 0x0 && _0x3f8c99 == -0x1)
        bomb(_0x438fa1 + 0x1, _0x2e9d4b - 0x1, _0x1c6da6 + 0x1, -0x1);
    else if (_0x2e9d4b == 0x0 && _0x3f8c99 == -0x1)
        bomb(_0x438fa1 + 0x1, _0x2e9d4b, _0x1c6da6 + 0x1, 0x1);
    else if (_0x2e9d4b == 0x0 && _0x3f8c99 == 0x1)
        bomb(_0x438fa1 - 0x1, _0x2e9d4b + 0x1, _0x1c6da6 + 0x1, 0x1);
    else if (_0x3f8c99 == 0x1)
        bomb(_0x438fa1 - 0x1, _0x2e9d4b + 0x1, _0x1c6da6 + 0x1, 0x1);
    else if (_0x3f8c99 == -0x1)
        bomb(_0x438fa1 + 0x1, _0x2e9d4b - 0x1, _0x1c6da6 + 0x1, -0x1);
}
var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');
var Arr = input['trim']()['split']('\x0a');
var I = 0x1;
while (!![]) {
    var n = Arr['shift']() - 0x0;
    if (n == 0x0)
        break;
    var yx = [];
    for (var i = 0x0; i < n; i++) {
        yx[i] = [];
        for (var j = 0x0; j < n; j++) {
            yx[i][j] = 0x0;
        }
    }
    bomb(0x0, 0x0, 0x1, 0x1);
    console['log']('Case\x20' + I + ':');
    I++;
    console['log'](yx['join']('\x0a')['replace'](/\,/g, ''));
}