function Main(_0x19d73a) {
    _0x19d73a = _0x19d73a['trim']()['split']('\x0a')['map'](function (_0x48a956) {
        return _0x48a956['split']('\x20');
    });
    let _0x51fe88 = 0x3b9aca00 + 0x7;
    let _0x1cb2ec = parseInt(_0x19d73a[0x0][0x0], 0xa);
    let _0x3cef6c = parseInt(_0x19d73a[0x0][0x1], 0xa);
    let _0x49c848 = [];
    for (let _0x2b2ccf = 0x0; _0x2b2ccf < _0x1cb2ec; _0x2b2ccf++) {
        _0x49c848['push'](Array['from']({ 'length': _0x3cef6c }, () => 0x0));
    }
    _0x49c848[0x0][0x0] = 0x1;
    for (let _0x45fc53 = 0x1; _0x45fc53 < _0x1cb2ec + _0x3cef6c - 0x1; _0x45fc53++) {
        for (let _0x11f62e = 0x0; _0x11f62e <= Math['min'](_0x45fc53, _0x1cb2ec - 0x1); _0x11f62e++) {
            if (_0x19d73a[_0x11f62e + 0x1][0x0][_0x45fc53 - _0x11f62e] === '#' || _0x45fc53 - _0x11f62e >= _0x3cef6c)
                continue;
            if (_0x11f62e > 0x0 && _0x45fc53 - _0x11f62e > 0x0) {
                _0x49c848[_0x11f62e][_0x45fc53 - _0x11f62e] = (_0x49c848[_0x11f62e - 0x1][_0x45fc53 - _0x11f62e] + _0x49c848[_0x11f62e][_0x45fc53 - _0x11f62e - 0x1]) % _0x51fe88;
            } else if (_0x11f62e > 0x0) {
                _0x49c848[_0x11f62e][_0x45fc53 - _0x11f62e] = _0x49c848[_0x11f62e - 0x1][_0x45fc53 - _0x11f62e];
            } else {
                _0x49c848[_0x11f62e][_0x45fc53 - _0x11f62e] = _0x49c848[_0x11f62e][_0x45fc53 - _0x11f62e - 0x1];
            }
        }
    }
    console['log'](_0x49c848['pop']()['pop']());
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));