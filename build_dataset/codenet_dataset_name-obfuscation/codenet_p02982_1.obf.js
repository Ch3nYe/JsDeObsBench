function main(_0x19af97) {
    const _0x9fd333 = _0x19af97['split']('\x0a');
    const _0x29c019 = _0x9fd333[0x0]['split']('\x20');
    const _0x5b39d6 = parseInt(_0x29c019[0x0], 0xa);
    const _0x127bd6 = parseInt(_0x29c019[0x1], 0xa);
    var _0x1e88ee = [];
    for (var _0x5cc830 = 0x0; _0x5cc830 < _0x5b39d6; _0x5cc830++) {
        _0x1e88ee[_0x5cc830] = [];
        var _0x4092cf = _0x9fd333[_0x5cc830 + 0x1]['split']('\x20');
        for (var _0x1fa931 = 0x0; _0x1fa931 < _0x127bd6 + 0x1; _0x1fa931++) {
            _0x1e88ee[_0x5cc830]['push'](parseInt(_0x4092cf[_0x1fa931], 0xa));
        }
    }
    var _0x4f6950 = 0x0;
    function _0x449eb3(_0x172a44, _0x4ced0a) {
        var _0x261142 = 0x0;
        for (var _0xa4e616 = 0x0; _0xa4e616 < _0x127bd6; _0xa4e616++) {
            _0x261142 = _0x261142 + Math['pow'](_0x172a44[_0xa4e616] - _0x4ced0a[_0xa4e616], 0x2);
        }
        if (Number['isInteger'](Math['sqrt'](_0x261142)) == !![]) {
            return !![];
        } else {
            return ![];
        }
    }
    for (var _0x5cc830 = 0x0; _0x5cc830 < _0x5b39d6; _0x5cc830++) {
        for (var _0x1fa931 = _0x5cc830 + 0x1; _0x1fa931 < _0x5b39d6; _0x1fa931++) {
            if (_0x449eb3(_0x1e88ee[_0x5cc830], _0x1e88ee[_0x1fa931]) == !![]) {
                _0x4f6950++;
            }
        }
    }
    console['log'](_0x4f6950);
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));