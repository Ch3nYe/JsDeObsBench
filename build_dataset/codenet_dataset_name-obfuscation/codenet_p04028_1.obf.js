var mod = 0x3b9aca00 + 0x7;
function Main(_0x6113d0) {
    var _0x46c73c = parseInt(_0x6113d0[0x0]);
    var _0x18e432 = _0x6113d0[0x1]['length'];
    var _0x48bfb2 = Array(_0x46c73c + 0x1)['fill'](0x0)['map'](_0x442558 => Array(_0x46c73c + 0x2)['fill'](0x0));
    _0x48bfb2[0x0][0x0] = 0x1;
    for (var _0x1b398a = 0x1; _0x1b398a <= _0x46c73c; _0x1b398a++) {
        _0x48bfb2[_0x1b398a][0x0] = _0x48bfb2[_0x1b398a - 0x1][0x0] + _0x48bfb2[_0x1b398a - 0x1][0x1];
        _0x48bfb2[_0x1b398a][0x0] %= mod;
        for (var _0x5bd48f = 0x1; _0x5bd48f <= _0x1b398a; _0x5bd48f++) {
            _0x48bfb2[_0x1b398a][_0x5bd48f] = _0x48bfb2[_0x1b398a - 0x1][_0x5bd48f - 0x1] * 0x2 + _0x48bfb2[_0x1b398a - 0x1][_0x5bd48f + 0x1];
            _0x48bfb2[_0x1b398a][_0x5bd48f] %= mod;
        }
    }
    console['log'](permod(_0x48bfb2[_0x46c73c][_0x18e432], powmod(0x2, _0x18e432)));
}
function abmod() {
    var _0x23441a = arguments[0x0];
    for (var _0x36259a = 0x1; _0x36259a < arguments['length']; _0x36259a++) {
        _0x23441a = (_0x23441a >>> 0x10) * arguments[_0x36259a] % mod * 0x10000 + (_0x23441a & 0xffff) * arguments[_0x36259a];
        _0x23441a %= mod;
    }
    return _0x23441a;
}
function powmod(_0x260079, _0x1b57f7) {
    var _0x33e71d = 0x1;
    while (_0x1b57f7) {
        if (_0x1b57f7 & 0x1)
            _0x33e71d = abmod(_0x260079, _0x33e71d);
        _0x260079 = abmod(_0x260079, _0x260079);
        _0x1b57f7 >>>= 0x1;
    }
    return _0x33e71d;
}
function permod(_0x17d671, _0x4dc82a) {
    var _0x57b6b9 = powmod(_0x4dc82a, mod - 0x2);
    _0x57b6b9 = abmod(_0x57b6b9, _0x17d671);
    return _0x57b6b9;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8')['split']('\x0a'));