'use strict';
function Main(_0x551559) {
    const _0x52b023 = _0x551559['trim']()['split']('\x0a');
    const _0x49f9dc = Number(_0x52b023[0x0]);
    const _0x497bc6 = _0x52b023[0x1]['split']('\x20')['map'](_0x34c781 => Number(_0x34c781));
    const _0x304d23 = _0x52b023['slice'](0x2, 0x7)['map'](_0x573676 => _0x573676['split']('\x20')['map'](_0x30feeb => Number(_0x30feeb)));
    const _0x397bdc = _0x52b023['slice'](-0x5)['map'](_0x4e21d2 => Number(_0x4e21d2));
    let _0x1b8e4f = Array(0x1a)['fill'](0x0);
    let _0x402bed = Array(0x1a)['fill'](0x0);
    let _0x2b60e2 = 0x0;
    for (let _0xe07489 = 0x1; _0xe07489 <= _0x49f9dc; _0xe07489++) {
        _0x1b8e4f[_0x397bdc[_0xe07489 - 0x1] - 0x1] = _0xe07489;
        for (let _0x35b5bf = 0x0; _0x35b5bf < _0x497bc6['length']; _0x35b5bf++) {
            if (_0x1b8e4f[_0x35b5bf] === _0xe07489) {
                _0x402bed[_0x35b5bf] = _0x304d23[_0xe07489 - 0x1][_0x35b5bf];
            } else {
                _0x402bed[_0x35b5bf] = _0x497bc6[_0x35b5bf] * (_0xe07489 - _0x1b8e4f[_0x35b5bf]) * -0x1;
            }
        }
        _0x2b60e2 += _0x402bed['reduce']((_0x3d427c, _0x935024) => _0x3d427c + _0x935024);
        console['log'](String(_0x2b60e2));
    }
    return;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));