function max(_0x5846ef) {
    var _0x4d079a = -0x1 * Infinity;
    for (num of _0x5846ef) {
        if (_0x4d079a < num) {
            _0x4d079a = num;
        }
    }
    return _0x4d079a;
}
function main(_0x2148f7) {
    const _0x180614 = _0x2148f7['split']('\x0a');
    const _0x5dbb24 = _0x180614['map'](_0x590f46 => _0x590f46['split']('\x20')['map'](_0x27943a => parseInt(_0x27943a)));
    var _0x35d4e9 = _0x5dbb24['shift']();
    const _0x45d0a6 = _0x35d4e9[0x0];
    const _0x160efd = _0x35d4e9[0x1];
    const _0x28a01f = Array(0x30d42);
    const _0x1bbeda = Array(0x30d42);
    _0x1bbeda['fill'](0x0);
    for (var _0x17d22e = 0x1; _0x17d22e <= _0x160efd; _0x17d22e++) {
        _0x28a01f['fill'](0x0);
        for (var _0x1e11d4 = 0x0; _0x1e11d4 < _0x45d0a6; _0x1e11d4++) {
            if (_0x5dbb24[_0x1e11d4][0x2] == _0x17d22e) {
                _0x28a01f[_0x5dbb24[_0x1e11d4][0x0] * 0x2 - 0x1]++;
                _0x28a01f[_0x5dbb24[_0x1e11d4][0x1] * 0x2]--;
            }
        }
        for (var _0x5e15e4 = 0x1; _0x5e15e4 < 0x30d42; _0x5e15e4++) {
            _0x28a01f[_0x5e15e4] += _0x28a01f[_0x5e15e4 - 0x1];
        }
        for (var _0x5e15e4 = 0x1; _0x5e15e4 < 0x30d42; _0x5e15e4++) {
            if (_0x28a01f[_0x5e15e4] > 0x0) {
                _0x1bbeda[_0x5e15e4]++;
            }
        }
    }
    console['log'](max(_0x1bbeda));
}
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));