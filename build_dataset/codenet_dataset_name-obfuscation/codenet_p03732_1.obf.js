'use strict';
const main = _0x532926 => {
    _0x532926 = _0x532926['trim']()['split']('\x0a');
    const _0x5f0b53 = parseInt(_0x532926[0x0]['split']('\x20')[0x0]);
    const _0x5926f4 = parseInt(_0x532926[0x0]['split']('\x20')[0x1]);
    const _0x2cc5ef = _0x532926['slice'](0x1, _0x5f0b53 + 0x1)['map'](_0x4393aa => _0x4393aa['split']('\x20')['map'](_0xc8c1d3 => parseInt(_0xc8c1d3)));
    let _0x31ea98 = [...Array(_0x5f0b53 + 0x1)]['map'](_0xb214c8 => [...Array(_0x5926f4 + 0x1)]['fill'](0x0));
    let _0x2481d9 = 0x0;
    for (let _0x45d23d = 0x1; _0x45d23d < _0x5f0b53 + 0x1; _0x45d23d++) {
        const _0x1510a2 = _0x2cc5ef[_0x45d23d - 0x1][0x0];
        const _0x5d87dc = _0x2cc5ef[_0x45d23d - 0x1][0x1];
        for (let _0x44bb24 = 0x0; _0x44bb24 < _0x5926f4 + 0x1; _0x44bb24++) {
            if (_0x1510a2 > _0x44bb24) {
                _0x31ea98[_0x45d23d][_0x44bb24] = _0x31ea98[_0x45d23d - 0x1][_0x44bb24];
            } else {
                _0x31ea98[_0x45d23d][_0x44bb24] = Math['max'](_0x31ea98[_0x45d23d - 0x1][_0x44bb24], _0x5d87dc + _0x31ea98[_0x45d23d - 0x1][_0x44bb24 - _0x1510a2]);
            }
            if (_0x31ea98[_0x45d23d][_0x44bb24] > _0x2481d9) {
                _0x2481d9 = _0x31ea98[_0x45d23d][_0x44bb24];
            }
        }
    }
    console['log'](_0x2481d9);
};
main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));