var toInt = _0x1a93ee => parseInt(_0x1a93ee, 0xa);
var toIntArr = _0x755b09 => _0x755b09['map'](_0x418396 => toInt(_0x418396));
var abs = _0x2c39d6 => _0x2c39d6 > 0x0 ? _0x2c39d6 : -_0x2c39d6;
function min() {
    var _0x5269bf = arguments, _0x3b1db6 = _0x5269bf[0x0];
    for (var _0xc44acb = 0x1; _0xc44acb < _0x5269bf['length']; _0xc44acb++)
        if (_0x5269bf[_0xc44acb] < _0x3b1db6)
            _0x3b1db6 = _0x5269bf[_0xc44acb];
    return _0x3b1db6;
}
function max() {
    var _0x168773 = arguments, _0x2bca31 = _0x168773[0x0];
    for (var _0x2d0a61 = 0x1; _0x2d0a61 < _0x168773['length']; _0x2d0a61++)
        if (_0x168773[_0x2d0a61] > _0x2bca31)
            _0x2bca31 = _0x168773[_0x2d0a61];
    return _0x2bca31;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));
function Main(_0x3c3275) {
    var _0x3c3275 = _0x3c3275['split']('\x0a');
    var _0x4dac5e = toIntArr(_0x3c3275[0x0]['split']('\x20'));
    var _0x4dba8b = _0x4dac5e[0x0];
    var _0x64bb40 = _0x4dac5e[0x1];
    var _0x37dc7e = _0x64bb40 / _0x4dba8b;
    var _0x4426c4 = 0x1;
    var _0x3bf0b4 = 0x0;
    while (_0x4426c4 <= _0x37dc7e) {
        _0x4426c4 *= 0x2;
        _0x3bf0b4++;
    }
    console['log'](_0x3bf0b4);
}