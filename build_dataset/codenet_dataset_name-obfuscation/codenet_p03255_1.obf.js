var toInt = _0xfed95f => parseInt(_0xfed95f, 0xa);
var toIntArr = _0x264fed => _0x264fed['map'](_0x46f41a => toInt(_0x46f41a));
var abs = _0x1e2d7a => _0x1e2d7a > 0x0 ? _0x1e2d7a : -_0x1e2d7a;
function min() {
    var _0x4474ad = arguments, _0x339f = _0x4474ad[0x0];
    for (var _0x2aba78 = 0x1; _0x2aba78 < _0x4474ad['length']; _0x2aba78++)
        if (_0x4474ad[_0x2aba78] < _0x339f)
            _0x339f = _0x4474ad[_0x2aba78];
    return _0x339f;
}
function max() {
    var _0x540a3c = arguments, _0x2ce141 = _0x540a3c[0x0];
    for (var _0x44ec48 = 0x1; _0x44ec48 < _0x540a3c['length']; _0x44ec48++)
        if (_0x540a3c[_0x44ec48] > _0x2ce141)
            _0x2ce141 = _0x540a3c[_0x44ec48];
    return _0x2ce141;
}
Main(require('fs')['readFileSync']('/dev/stdin', 'utf8'));
function Main(_0x1c2be7) {
    var _0x1c2be7 = _0x1c2be7['split']('\x0a');
    var _0x3f9cf9 = toIntArr(_0x1c2be7[0x0]['split']('\x20'));
    var _0x3b7117 = _0x3f9cf9[0x0];
    var _0x44d7e3 = _0x3f9cf9[0x1];
    var _0x4a4e90 = toIntArr(_0x1c2be7[0x1]['split']('\x20'));
    var _0xc83589 = [_0x4a4e90[0x0]];
    for (var _0x3d8f7f = 0x1; _0x3d8f7f < _0x3b7117; _0x3d8f7f++) {
        _0xc83589[_0x3d8f7f] = _0x4a4e90[_0x3d8f7f] + _0xc83589[_0x3d8f7f - 0x1];
    }
    var _0x586223 = (_0x3b7117 + 0x1) * _0x44d7e3;
    var _0x34d487 = 0x0;
    for (var _0x3d8f7f = _0x3b7117 - 0x1; _0x3d8f7f > -0x1; _0x3d8f7f--) {
        _0x34d487++;
        if (_0x34d487 > 0x2 && _0x44d7e3 < _0xc83589[_0x3d8f7f] * (_0x34d487 - 0x1) * 0x2 - _0x4a4e90[_0x3d8f7f] * 0x2) {
            _0x34d487 = 0x1;
            _0x586223 += _0x44d7e3;
        }
        _0x586223 += _0x4a4e90[_0x3d8f7f] * (max(_0x34d487, 0x2) * 0x2 + 0x1);
    }
    console['log'](_0x586223);
}