function bomb(_0x38ebeb, _0x138cf3, _0x1648c3) {
    YX[_0x38ebeb][_0x138cf3] = _0x1648c3;
    if (_0x38ebeb == yx['length'] - 0x1) {
        max = Math['max'](max, _0x1648c3);
    } else if ((yx['length'] - 0x1) / 0x2 > _0x38ebeb) {
        if (YX[_0x38ebeb + 0x1][_0x138cf3] < _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3])
            bomb(_0x38ebeb + 0x1, _0x138cf3, _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3]);
        if (YX[_0x38ebeb + 0x1][_0x138cf3 + 0x1] < _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3 + 0x1])
            bomb(_0x38ebeb + 0x1, _0x138cf3 + 0x1, _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3 + 0x1]);
    } else if ((yx['length'] - 0x1) / 0x2 <= _0x38ebeb) {
        if (_0x138cf3 - 0x1 >= 0x0) {
            if (YX[_0x38ebeb + 0x1][_0x138cf3 - 0x1] < _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3 - 0x1])
                bomb(_0x38ebeb + 0x1, _0x138cf3 - 0x1, _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3 - 0x1]);
        }
        if (_0x138cf3 < yx[_0x38ebeb]['length'] - 0x1) {
            if (YX[_0x38ebeb + 0x1][_0x138cf3] < _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3])
                bomb(_0x38ebeb + 0x1, _0x138cf3, _0x1648c3 + yx[_0x38ebeb + 0x1][_0x138cf3]);
        }
    }
}
var input = require('fs')['readFileSync']('/dev/stdin', 'utf8');
var Arr = input['trim']()['split']('\x0a');
var yx = [];
var YX = [];
Arr['forEach'](function (_0x3700f7) {
    var _0x58e86f = _0x3700f7['split'](',')['map'](Number);
    var _0x44b62a = _0x58e86f['map'](function (_0x4eec20) {
        return 0x0;
    });
    yx['push'](_0x58e86f);
    YX['push'](_0x44b62a);
});
var max = 0x0;
bomb(0x0, 0x0, yx[0x0][0x0]);
console['log'](max);