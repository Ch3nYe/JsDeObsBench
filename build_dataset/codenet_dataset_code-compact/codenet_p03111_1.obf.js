'use strict';function main(input){input=input['trim']()['split']('\x0a');let ABC=input['shift']()['split']('\x20')['map'](v=>Number(v));const N=ABC['shift']();input=input['map'](v=>Number(v))['sort']((a,b)=>b-a);const INF=Math['pow'](0xa,0x9);const dfs=(cur,a,b,c)=>{if(cur===N){if(Math['min'](a,b,c)>0x0){return Math['abs'](a-ABC[0x0])+Math['abs'](b-ABC[0x1])+Math['abs'](c-ABC[0x2])-0x1e;}return INF;}return Math['min'](dfs(cur+0x1,a,b,c),dfs(cur+0x1,a+input[cur],b,c)+0xa,dfs(cur+0x1,a,b+input[cur],c)+0xa,dfs(cur+0x1,a,b,c+input[cur])+0xa);};console['log'](dfs(0x0,0x0,0x0,0x0));}main(require('fs')['readFileSync']('/dev/stdin','utf8'));