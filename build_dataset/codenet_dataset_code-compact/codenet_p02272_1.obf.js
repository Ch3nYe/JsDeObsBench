process['stdin']['resume']();process['stdin']['setEncoding']('utf8');let input='';process['stdin']['on']('data',function(chunk){input+=chunk;});process['stdin']['on']('end',function(){main(input['split']('\x0a'));});let count=0x0;function merge(A,left,mid,right){let n1=mid-left;let n2=right-mid;let L=[];let R=[];for(let i=0x0;i<n1;i++)L['push'](A[left+i]);for(let i=0x0;i<n2;i++)R['push'](A[mid+i]);L['push'](Number['MAX_SAFE_INTEGER']);R['push'](Number['MAX_SAFE_INTEGER']);let i=0x0,j=0x0;for(let k=left;k<right;k++){if(L[i]<R[j])A[k]=L[i++];else A[k]=R[j++];count++;}}function mergeSort(A,left,right,count){if(left+0x1>=right)return;let mid=Math['floor']((left+right)/0x2);mergeSort(A,left,mid);mergeSort(A,mid,right);merge(A,left,mid,right);}function main(lines){let n=Number(lines[0x0]);let A=lines[0x1]['split']('\x20')['map'](Number);mergeSort(A,0x0,n);console['log'](A['join']('\x20'));console['log'](count);}