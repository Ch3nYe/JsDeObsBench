'use strict';const main=arg=>{arg=arg['trim']()['split']('\x0a');const N=parseInt(arg[0x0]['split']('\x20')[0x0]);const W=parseInt(arg[0x0]['split']('\x20')[0x1]);const wv=arg['slice'](0x1,N+0x1)['map'](n=>n['split']('\x20')['map'](l=>parseInt(l)));let dp=[...Array(N+0x1)]['map'](n=>[...Array(W+0x1)]['fill'](0x0));let answer=0x0;for(let i=0x1;i<N+0x1;i++){const w=wv[i-0x1][0x0];const v=wv[i-0x1][0x1];for(let j=0x0;j<W+0x1;j++){if(w>j){dp[i][j]=dp[i-0x1][j];}else{dp[i][j]=Math['max'](dp[i-0x1][j],v+dp[i-0x1][j-w]);}if(dp[i][j]>answer){answer=dp[i][j];}}}console['log'](answer);};main(require('fs')['readFileSync']('/dev/stdin','utf8'));