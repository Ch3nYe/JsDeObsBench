function main(input){const lines=input['split']('\x0a');const NW=lines['shift']()['split']('\x20')['map'](x=>parseInt(x));const N=NW[0x0];const W=NW[0x1];const items=lines['map'](line=>line['split']('\x20')['map'](x=>parseInt(x)));dp=[];for(var i=0x0;i<W+0x1;i++){dp['push'](Array(N+0x1)['fill'](0x0));}var result=0x0;for(var i=0x0;i<N;i++){for(var w=0x0;w<=W;w++){var weight=items[i][0x0];var value=items[i][0x1];if(weight<=w){dp[w][i+0x1]=Math['max'](dp[w][i],dp[w-weight][i]+value);}else{dp[w][i+0x1]=dp[w][i];}if(dp[w][i+0x1]>result){result=dp[w][i+0x1];}}}console['log'](result);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));