function main(input){const lines=input['trim']()['split']('\x0a');const [N,M,X]=splitN(lines[0x0]);const costs=[];const options=[...Array(N)['keys']()];select(options);function select(options,cost=0x0,aList=[]){for(let i=0x0;i<options['length'];i++){const _options=[...options],[s]=_options['splice'](i,0x1),[c,...a]=splitN(lines[s+0x1]),_cost=cost+c,_aList=a['map']((v,i)=>v+(aList[i]||0x0));if(_aList['every'](v=>v>=X)){costs['push'](_cost);continue;}select(_options,_cost,_aList);}}console['log'](costs['length']?Math['min'](...costs):-0x1);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));function splitN(s){return s['split']('\x20')['map'](Number);}