function main(input){'use strict';const lines=input['split']('\x0a');const firstLine=lines[0x0]['split']('\x20')['map'](value=>+value);const L=firstLine[0x0];const N=firstLine[0x1];let xn=lines['slice'](0x1)['filter'](value=>value)['map'](value=>+value);let costs=[];const search=(x,xn,sum)=>{if(xn['length']===0x0){costs['push'](sum);return;}const leftDistance=xn[0x0]>=x?xn[0x0]-x:L-x+xn[0x0];const rightDistance=xn[xn['length']-0x1]<=x?x-xn[xn['length']-0x1]:x+(L-xn[xn['length']-0x1]);const left=xn['concat']();const leftX=left['shift']();const right=xn['concat']();const rightX=right['pop']();search(leftX,left,sum+leftDistance);search(rightX,right,sum+rightDistance);};search(0x0,xn,0x0);console['log'](Math['max']['apply'](null,costs));}main(require('fs')['readFileSync']('/dev/stdin','utf8'));