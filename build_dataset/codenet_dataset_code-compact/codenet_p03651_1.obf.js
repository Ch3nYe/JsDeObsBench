'use strict';const getGcd=(a,b)=>{return a?getGcd(b%a,a):b;};const main=arg=>{arg=arg['trim']()['split']('\x0a');const N=parseInt(arg[0x0]['split']('\x20')[0x0]);const K=parseInt(arg[0x0]['split']('\x20')[0x1]);let A=arg[0x1]['split']('\x20')['map'](n=>parseInt(n))['sort']((a,b)=>b-a);const max=A[0x0];let gcd=Infinity;if(max<K){console['log']('IMPOSSIBLE');return;}for(let i=0x0;i<N;i++){for(let j=i+0x1;j<N;j++){gcd=Math['min'](gcd,getGcd(A[i],A[j]));}}console['log'](K%gcd===0x0?'POSSIBLE':'IMPOSSIBLE');};main(require('fs')['readFileSync']('/dev/stdin','utf8'));