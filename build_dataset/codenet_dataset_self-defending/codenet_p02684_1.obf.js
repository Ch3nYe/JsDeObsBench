function main(input){const _0x124c30=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x1c5208=_0x124c30(this,function(){return _0x1c5208['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x1c5208)['search']('(((.+)+)+)+$');});_0x1c5208();const lines=input['trim']()['split']('\x0a');let [n,k]=lines[0x0]['split']('\x20');n=+n;k=BigInt(k);const towns=lines[0x1]['split']('\x20')['map'](Number);const visited=new Map();let pos=0x1;while(k>0x0){const i=visited['get'](pos);if(!i){visited['set'](pos,BigInt(visited['size']));pos=towns[pos-0x1];k--;}else{const cycle=BigInt(visited['size'])-i;const rest=k%cycle;for(let [key,value]of visited){if(value==i+rest){pos=key;break;}}k=0x0;}}console['log'](pos);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));