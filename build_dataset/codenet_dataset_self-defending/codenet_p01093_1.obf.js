const a0_0xed6567=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x12d86c=a0_0xed6567(this,function(){return a0_0x12d86c['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x12d86c)['search']('(((.+)+)+)+$');});a0_0x12d86c();const input=require('fs')['readFileSync']('/dev/stdin','utf8');const lines=input['trim']()['split']('\x0a');while(line=lines['shift']()){const numbers=line['split']('\x20')['map'](Number);if(numbers['length']>0x1){const diffList=[];numbers['map']((num1,ind1)=>{numbers['map']((num2,ind2)=>{if(ind1!==ind2){const diff=Math['abs'](num1-num2);const pair=num1+'\x20'+num2;diffList['push']([pair,diff]);}});});const sorted=diffList['sort']((p1,p2)=>p1[0x1]-p2[0x1])[0x0];console['log'](sorted[0x1]);}}