const a0_0x218ee3=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x33c652=a0_0x218ee3(this,function(){return a0_0x33c652['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x33c652)['search']('(((.+)+)+)+$');});a0_0x33c652();'use strict';const main=arg=>{const input=arg['trim']()['split']('\x0a');let H=Number(input[0x0]['split']('\x20'));let W=Number(input[0x1]['split']('\x20'));let N=Number(input[0x2]['split']('\x20'));let paintedRow=0x0;let paintedColumn=0x0;let paintedCell=0x0;while(0x1){if(W>=H){paintedCell+=W-paintedColumn;paintedRow++;}else{paintedCell+=H-paintedRow;paintedColumn++;}if(paintedCell>=N)break;}console['log'](paintedColumn+paintedRow);};main(require('fs')['readFileSync']('/dev/stdin','utf8'));