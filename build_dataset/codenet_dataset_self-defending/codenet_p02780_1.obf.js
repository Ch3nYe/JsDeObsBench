'use strict';const fact=n=>{if(n===0x1)0x1;return n+fact(n-0x1);};function Main(input){const _0x3b6472=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x283fec=_0x3b6472(this,function(){return _0x283fec['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x283fec)['search']('(((.+)+)+)+$');});_0x283fec();input=input['trim']()['split']('\x0a');const array=input[0x0]['split']('\x20')['map'](s=>parseInt(s));const N=array[0x0];const K=array[0x1];let A=input[0x1]['split']('\x20')['map'](s=>parseInt(s));let dp={};for(let i=0x0;i<N;++i){const a=A[i];if(dp[a])continue;let tmp=0x0;for(let j=a;j>0x0;--j){tmp+=j;}dp[a]=tmp;}let result=0x0;for(let i=0x0;i<N-(K-0x1);++i){let total=0x0;for(let j=i;j<i+K;++j){total+=dp[A[j]]*0x1/A[j];}result=Math['max'](total,result);}console['log'](result['toFixed'](0xc));}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));