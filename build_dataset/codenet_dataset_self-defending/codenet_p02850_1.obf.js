'use strict';function main(inp){const _0x499fb2=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x4500b1=_0x499fb2(this,function(){return _0x4500b1['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x4500b1)['search']('(((.+)+)+)+$');});_0x4500b1();inp=inp['trim']()['split']('\x0a');const N=Number(inp['shift']());let G=[...new Array(N)]['map'](a=>[]);let vp=new Array();inp['forEach'](r=>{r=r['split']('\x20')['map'](n=>n-0x1);G[r[0x0]]['push'](r[0x1]);G[r[0x1]]['push'](r[0x0]);vp['push'](r[0x0]+'-'+r[0x1]);});let K=0x0;let I=new Map();let cs=new Array(N)['fill'](0x0);let used=new Array(N)['fill'](0x0);let que=new Array();used[0x0]=0x1;que['push'](0x0);while(que['length']){let v=que['shift']();if(K<G[v]['length'])K=G[v]['length'];let cur=0x1;for(const u of G[v]){if(used[u])continue;if(cur===cs[v])cur++;cs[u]=I[u+'-'+v]=I[v+'-'+u]=cur++;used[u]=0x1;que['push'](u);}}console['log'](K);vp['forEach'](v=>{console['log'](I[v]);});}main(require('fs')['readFileSync']('/dev/stdin','utf8'));