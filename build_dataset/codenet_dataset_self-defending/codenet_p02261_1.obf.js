const a0_0x48bf3c=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x5ad734=a0_0x48bf3c(this,function(){return a0_0x5ad734['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x5ad734)['search']('(((.+)+)+)+$');});a0_0x5ad734();'use strict';const main=input=>{input=input['split']('\x0a');const N=Number(input[0x0]);const A1=input[0x1]['split']('\x20');const A2=A1['concat']();bubbleSort(A1,N);console['log'](A1['join']('\x20'));console['log']('Stable');selectionSort(A2,N);console['log'](A2['join']('\x20'));console['log'](A2['every']((v,i)=>v===A1[i])?'Stable':'Not\x20stable');};function bubbleSort(A,N){for(let i=0x0;i<N-0x1;++i){for(let j=N-0x1;j>=i+0x1;--j){if(Number(A[j-0x1][0x1])>Number(A[j][0x1])){const tmp=A[j];A[j]=A[j-0x1];A[j-0x1]=tmp;}}}}function selectionSort(A,N){for(let i=0x0;i<N-0x1;++i){let minj=i;for(let j=i;j<N;++j){if(Number(A[j][0x1])<Number(A[minj][0x1])){minj=j;}}if(i!==minj){const tmp=A[i];A[i]=A[minj];A[minj]=tmp;}}}main(require('fs')['readFileSync']('/dev/stdin','utf8'));