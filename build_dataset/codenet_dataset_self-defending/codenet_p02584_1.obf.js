const a0_0x45aded=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x3758a5=a0_0x45aded(this,function(){return a0_0x3758a5['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x3758a5)['search']('(((.+)+)+)+$');});a0_0x3758a5();const input=require('fs')['readFileSync']('/dev/stdin','utf8');const lines=input['split']('\x0a');let [X,K,D]=lines[0x0]['split']('\x20')['map'](Number);X=Math['abs'](X);const div=Math['min'](Math['floor'](X/D),K);let x=X-div*D;let k=K-div;for(let i=0x0;i<k;i++){x-=D;if(x<=0x0){if(!((k-i)%0x2)){x+=D;}break;}}console['log'](Math['abs'](x));