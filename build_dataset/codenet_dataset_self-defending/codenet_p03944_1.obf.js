'use strict';function Main(input){const _0x48ef1e=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x11ec0d=_0x48ef1e(this,function(){return _0x11ec0d['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x11ec0d)['search']('(((.+)+)+)+$');});_0x11ec0d();input=input['trim']()['split']('\x0a');let WHN=input[0x0]['split']('\x20')['map'](Number);let minX=0x0;let minY=0x0;let maxX=WHN[0x0];let maxY=WHN[0x1];const N=WHN[0x2];for(let i=0x1;i<=N;i++){let tmp=input[i]['trim']()['split']('\x20')['map'](Number);let A=tmp[0x2];if(A===0x1){if(tmp[0x0]>minX){minX=tmp[0x0];}}else if(A===0x2){if(tmp[0x0]<maxX){maxX=tmp[0x0];}}else if(A===0x3){if(tmp[0x1]>minY){minY=tmp[0x1];}}else if(A===0x4){if(tmp[0x1]<maxY){maxY=tmp[0x1];}}}const X=maxX-minX;const Y=maxY-minY;if(X<=0x0||Y<=0x0){console['log'](0x0);}else{console['log'](X*Y);}}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));