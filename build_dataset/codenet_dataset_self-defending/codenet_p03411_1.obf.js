const a0_0x2c994c=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x26e9e7=a0_0x2c994c(this,function(){return a0_0x26e9e7['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x26e9e7)['search']('(((.+)+)+)+$');});a0_0x26e9e7();console['log']((args=>{const [[N],...tmp]=args['trim']()['split']('\x0a')['map'](r=>r['split']('\x20')['map'](v=>v|0x0));const rp=[],bp=[];for(let i=0x0;i<N;i++){rp['push'](tmp[i]);bp['push'](tmp[N+i]);}bp['sort'](([a],[b])=>a-b);let count=0x0;const test=[];for(let i=0x0;i<N;i++){const [bx,by]=bp[i];let max=[-0x1,-0x1];for(let j=0x0;j<rp['length'];j++){const [rx,ry]=rp[j];if(bx<rx)continue;if(by>ry&&ry>max[0x1])max=[j,ry];}if(max[0x1]>=0x0){rp['splice'](max[0x0],0x1);count++;}}return''+count;})(require('fs')['readFileSync']('/dev/stdin','utf8')));