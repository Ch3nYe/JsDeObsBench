const a0_0x3dd427=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x2007c4=a0_0x3dd427(this,function(){return a0_0x2007c4['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x2007c4)['search']('(((.+)+)+)+$');});a0_0x2007c4();'use strict';const main=arg=>{arg=arg['trim']()['split']('\x0a');const N=parseInt(arg[0x0]);const A=arg[0x1]['split']('\x20')['map'](n=>parseInt(n));const totalSum=A['reduce']((m,n)=>m+n);let left=A[0x0];let right=totalSum-A[0x0];let answer=Infinity;for(let i=0x0;i<N-0x1;i++){let diff=Math['abs'](right-left);answer=Math['min'](answer,diff);right-=A[parseInt(i)+0x1];left+=A[parseInt(i)+0x1];}console['log'](answer);};main(require('fs')['readFileSync']('/dev/stdin','utf8'));