'use strict';function main(input){const _0x2b64ba=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x12a351=_0x2b64ba(this,function(){return _0x12a351['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x12a351)['search']('(((.+)+)+)+$');});_0x12a351();const inputRows=input['split']('\x0a');const d=parseInt(inputRows[0x0]);let cStrArray=inputRows[0x1]['split']('\x20');const c=cStrArray['map'](str=>parseInt(str));let s=[];for(let i=0x2;i<inputRows['length'];i++){s['push']([]);const tmpRow=inputRows[i]['split']('\x20');for(let j=0x0;j<tmpRow['length'];j++){s[i-0x2]['push'](parseInt(tmpRow[j]));}}let t=[];for(let i=0x0;i<s['length'];i++){let tmpMax=s[i][0x0];let index=0x0;for(let j=0x1;j<s[i]['length'];j++){if(s[i][j]>tmpMax){index=j;tmpMax=s[i][j];}}t['push'](index+0x1);}for(let i=0x0;i<t['length'];i++){console['log'](t[i]);}}main(require('fs')['readFileSync']('/dev/stdin','utf8'));main(input);