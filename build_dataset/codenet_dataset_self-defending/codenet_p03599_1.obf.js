const a0_0x202fdb=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x359b3f=a0_0x202fdb(this,function(){return a0_0x359b3f['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x359b3f)['search']('(((.+)+)+)+$');});a0_0x359b3f();const input=require('fs')['readFileSync']('/dev/stdin','utf8');(input=>{const [A,B,C,D,E,F]=input['trim']()['split']('\x20')['map'](Number);let W={};let S={};for(let i=0x1;i<F;i++){for(let j=0x0;j<F;j++){const s=A*i*0x64+j*B*0x64;if(s>F)break;W[s]=0x1;}}const p=F*E/0x64;for(let i=0x0;i<F;i++){for(let j=0x0;j<F;j++){const s=C*i+D*j;if(s>p)break;S[s]=0x1;}}let ans=[A*0x64,0x0];let max=0x0;let r=E/0x64;for(let i in W){for(let j in S){const t=i-0x0+(j-0x0);const sw=j/ i;if(sw>r||t>F)continue;if(sw>max){max=sw;ans=[t,j];}}}console['log'](ans[0x0],ans[0x1]);})(input);