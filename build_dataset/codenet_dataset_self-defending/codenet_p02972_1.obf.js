const a0_0x4b64d3=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0xc2dfdf=a0_0x4b64d3(this,function(){return a0_0xc2dfdf['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0xc2dfdf)['search']('(((.+)+)+)+$');});a0_0xc2dfdf();'use strict';const arg_str=require('fs')['readFileSync']('/dev/stdin','UTF-8');const args=arg_str['split']('\x0a');const N=parseInt(args[0x0]);const a_array=args[0x1]['split']('\x20')['map'](x=>parseInt(x));for(let i=N;i>=0x1;i--){let i_n=0x0;if(i==0x1){i_n=N;}else{i_n=Math['sqrt'](N);}for(let j=i_n;j>=0x1;j--){if(i<j){if(j%i==0x0){a_array[i-0x1]^=a_array[j-0x1];}}else{continue;}}}const result=[];a_array['forEach']((item,index)=>{if(item==0x1){result['push'](index+0x1);}});console['log'](result['length']);if(result['length']>0x0){console['log'](result['join']('\x20'));}