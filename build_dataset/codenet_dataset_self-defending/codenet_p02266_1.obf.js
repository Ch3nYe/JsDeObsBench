const a0_0x165824=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x1e7ff1=a0_0x165824(this,function(){return a0_0x1e7ff1['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x1e7ff1)['search']('(((.+)+)+)+$');});a0_0x1e7ff1();const calc=str=>{const areas=[];const depthIndexes=[];let sum=0x0;for(let i=0x0;i<str['length'];i++){const char=str[i];if(char==='\x5c'){depthIndexes['push'](i);continue;}if(char==='/'&&depthIndexes['length']>0x0){const j=depthIndexes['pop']();sum+=i-j;let currentArea=i-j;while(areas['length']>0x0&&areas[areas['length']-0x1]['depth']>j){currentArea+=areas[areas['length']-0x1]['area'];areas['pop']();}areas['push']({'depth':j,'area':currentArea});}}console['log'](sum);if(areas['length']===0x0){console['log'](0x0);return;}console['log'](areas['length']+'\x20'+areas['map'](obj=>obj['area'])['join']('\x20'));};let inputStr='';process['stdin']['on']('data',input=>{inputStr+=String['raw']`${input}`;});process['stdin']['on']('end',()=>{calc(inputStr);});