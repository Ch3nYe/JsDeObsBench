function Main(input){const _0x51753f=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x7727eb=_0x51753f(this,function(){return _0x7727eb['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x7727eb)['search']('(((.+)+)+)+$');});_0x7727eb();input=input['split']('\x0a');if(input[input['length']-0x1]===''){input['pop']();}const N=input[0x0]['split']('\x20')[0x0]-0x0;const Z=input[0x0]['split']('\x20')[0x1]-0x0;const W=input[0x0]['split']('\x20')[0x2]-0x0;const a=input[0x1]['split']('\x20')['map'](e=>{return e-0x0;});if(a['length']===0x1){console['log'](Math['abs'](W-a[0x0]));return;}var x,y;x=new Array(N);y=new Array(N);for(var i=N-0x1;i>=0x0;i--){if(i===N-0x1){y[i]=Math['abs'](a[N-0x1]-a[N-0x2]);x[i]=Math['abs'](a[N-0x1]-a[N-0x2]);continue;}y[i]=Math['min'](...x['slice'](i+0x1),i!==0x0?Math['abs'](a[i-0x1]-a[N-0x1]):Math['abs'](Z-a[N-0x1]));x[i]=Math['max'](...y['slice'](i+0x1),i!==0x0?Math['abs'](a[i-0x1]-a[N-0x1]):Math['abs'](W-a[N-0x1]));}console['log'](Math['max'](...x));}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));