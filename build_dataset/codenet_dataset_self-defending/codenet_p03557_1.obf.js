'use strict';function main(input){const _0x32d7c9=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0xd99038=_0x32d7c9(this,function(){return _0xd99038['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0xd99038)['search']('(((.+)+)+)+$');});_0xd99038();const lines=input['split']('\x0a');const N=parseInt(lines['shift']());const A=lines['shift']()['split']('\x20')['map'](x=>parseInt(x))['sort']((a,b)=>a-b);const B=lines['shift']()['split']('\x20')['map'](x=>parseInt(x))['sort']((a,b)=>a-b);const C=lines['shift']()['split']('\x20')['map'](x=>parseInt(x))['sort']((a,b)=>a-b);let result=0x0;for(let b=0x0;b<N;b++){let current_b=B[b];let count_a=N;for(let a=0x0;a<N;a++){if(current_b<=A[a]){count_a--;}}let count_c=N;for(let c=0x0;c<N;c++){if(current_b>=C[c]){count_c--;}}result+=count_a*count_c;}console['log'](result);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));