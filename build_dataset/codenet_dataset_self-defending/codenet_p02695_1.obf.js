const a0_0x2ba352=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x3c76af=a0_0x2ba352(this,function(){return a0_0x3c76af['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x3c76af)['search']('(((.+)+)+)+$');});a0_0x3c76af();const input=require('fs')['readFileSync']('/dev/stdin','utf8');(input=>{const rows=input['split']('\x0a');const [N,M,Q]=rows[0x0]['split']('\x20')['map'](Number);const A=[];for(let i=0x0;i<Q;i++){A[i]=rows[i+0x1]['split']('\x20')['map'](Number);}const ss=[];const s=[];let d=0x0;let v=0x0;while(v!==undefined){if(d===N){ss['push']([...s]);s['pop']();v++;d--;}else if(v>=M){v=s['pop']();d--;}else{s['push'](v+0x1);d++;}}let res=0x0;ss['forEach'](s=>{let sum=0x0;A['forEach'](a=>{if(s[a[0x1]-0x1]-s[a[0x0]-0x1]===a[0x2]){sum+=a[0x3];}});res=Math['max'](res,sum);});console['log'](res);})(input);