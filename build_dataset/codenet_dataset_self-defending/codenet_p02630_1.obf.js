function main(lines){const _0x1f8ff8=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x4a7e40=_0x1f8ff8(this,function(){return _0x4a7e40['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x4a7e40)['search']('(((.+)+)+)+$');});_0x4a7e40();const [N]=parseNumberLine(lines[0x0]);const numbers=parseNumberLine(lines[0x1]);const [Q]=parseNumberLine(lines[0x2]);const operationLines=lines['slice'](0x3);let result=numbers['reduce']((t,v)=>t+v,0x0);for(let i=0x0;i<Q;++i){const [B,C]=parseNumberLine(operationLines[i]);while(!![]){const index=numbers['indexOf'](B);if(index<0x0)break;numbers[index]=C;result+=C-B;}console['log'](result);}}function parseNumberLine(line,radix=0xa){return line['split'](/\s+/)['map'](_=>parseInt(_,radix));}main(require('fs')['readFileSync']('/dev/stdin','utf8')['split']('\x0a'));