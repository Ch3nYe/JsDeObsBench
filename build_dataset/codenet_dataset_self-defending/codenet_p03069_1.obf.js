function Main(input){const _0x32dc8a=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x27d2b0=_0x32dc8a(this,function(){return _0x27d2b0['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x27d2b0)['search']('(((.+)+)+)+$');});_0x27d2b0();'use strict';const elements=input['split']('\x0a');let blackFlag=![];let numBlack=0x0;let numWhiteAfterBlack=0x0;for(let i=0x0;i<elements[0x0];i++){if(blackFlag===![]&&elements[0x1][i]==='#'){blackFlag=!![];}if(blackFlag===!![]&&elements[0x1][i]==='.'){numWhiteAfterBlack++;}if(elements[0x1][i]==='#'){numBlack++;}}if(numWhiteAfterBlack===0x0&&blackFlag===![]){console['log']('0');}else if(numWhiteAfterBlack===0x0&&blackFlag===!![]){console['log'](numBlack);}else if(numBlack<=numWhiteAfterBlack){console['log'](numBlack);}else{console['log'](numWhiteAfterBlack);}}Main(require('fs')['readFileSync']('/dev/stdin','utf-8'));