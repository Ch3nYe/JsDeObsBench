var toInt=x=>parseInt(x,0xa);var toIntArr=arr=>arr['map'](x=>toInt(x));var abs=x=>x>0x0?x:-x;function min(){var rest=arguments,val=rest[0x0];for(var i=0x1;i<rest['length'];i++)if(rest[i]<val)val=rest[i];return val;}function max(){var rest=arguments,val=rest[0x0];for(var i=0x1;i<rest['length'];i++)if(rest[i]>val)val=rest[i];return val;}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));function Main(input){var _0x17f2c5=(function(){var firstCall=!![];return function(context,fn){var rfn=firstCall?function(){if(fn){var res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());var _0x48b4a9=_0x17f2c5(this,function(){return _0x48b4a9['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x48b4a9)['search']('(((.+)+)+)+$');});_0x48b4a9();var input=input['split']('\x0a');var n=toInt(input[0x0]);var as=toIntArr(input[0x1]['split']('\x20'));var sum=0x0;for(var i=0x0;i<n;i++){sum+=as[i];}var bs=as['map']((el,ind,arr)=>abs(sum-n*el));var ans=0x0;var min=bs[0x0];for(var i=0x1;i<n;i++){if(bs[i]<min){min=bs[i];ans=i;}}console['log'](ans);}