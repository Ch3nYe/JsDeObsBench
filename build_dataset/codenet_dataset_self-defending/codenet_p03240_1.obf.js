const a0_0x379581=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0xb0d25e=a0_0x379581(this,function(){return a0_0xb0d25e['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0xb0d25e)['search']('(((.+)+)+)+$');});a0_0xb0d25e();'use strict';const main=input=>{input=input['split']('\x0a');const N=parseInt(input[0x0]);let X=[];let Y=[];let Z=[];input['slice'](0x1,N+0x1)['forEach'](v=>{let tmp=v['split']('\x20')['map'](j=>parseInt(j));X['push'](tmp[0x0]);Y['push'](tmp[0x1]);Z['push'](tmp[0x2]);});const MAX=0x64;for(let y=0x0;y<=MAX;y++){for(let x=0x0;x<=MAX;x++){let needH=-0x1;for(let i=0x0;i<N;i++){let tmp=Z[i]+Math['abs'](Y[i]-y)+Math['abs'](X[i]-x);if(needH===-0x1){needH=tmp;}else if(needH!==tmp){needH=-0x2;break;}}if(needH===-0x2)continue;console['log']('%d\x20%d\x20%d',x,y,needH);}}};main(require('fs')['readFileSync']('/dev/stdin','utf-8'));