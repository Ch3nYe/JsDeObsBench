const a0_0x4b45a8=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x123e28=a0_0x4b45a8(this,function(){return a0_0x123e28['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x123e28)['search']('(((.+)+)+)+$');});a0_0x123e28();'use strict';const main=arg=>{arg=arg['trim']()['split']('\x0a');const N=parseInt(arg[0x0]['split']('\x20')[0x0]);const A=arg[0x1]['split']('');const Rsum=A['filter'](n=>n==='E')['length'];const Lsum=N-Rsum;let Rcnt=0x0;let Lcnt=0x0;let answer=Infinity;for(let i=0x0;i<N;i++){const needMoveLeft=Lcnt;let needMoveRight=Rsum-Rcnt;if(A[i]==='E'){needMoveRight--;}answer=Math['min'](answer,needMoveLeft+needMoveRight);if(A[i]==='W'){Lcnt++;}else{Rcnt++;}}console['log'](answer);};main(require('fs')['readFileSync']('/dev/stdin','utf8'));