const a0_0x108fbf=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x5f2ea1=a0_0x108fbf(this,function(){return a0_0x5f2ea1['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x5f2ea1)['search']('(((.+)+)+)+$');});a0_0x5f2ea1();'use strict';const main=arg=>{arg=arg['trim']()['split']('\x0a');const N=parseInt(arg[0x0]);const names=arg['slice'](0x1,N+0x1);const p=[0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x2];const q=[0x1,0x1,0x1,0x2,0x2,0x3,0x2,0x2,0x3,0x3];const r=[0x2,0x3,0x4,0x3,0x4,0x4,0x3,0x4,0x4,0x4];let march=[0x0,0x0,0x0,0x0,0x0];for(let i in names){if(names[i][0x0]==='M'){march[0x0]++;}if(names[i][0x0]==='A'){march[0x1]++;}if(names[i][0x0]==='R'){march[0x2]++;}if(names[i][0x0]==='C'){march[0x3]++;}if(names[i][0x0]==='H'){march[0x4]++;}}let answer=0x0;for(let i=0x0;i<0xa;i++){answer+=march[p[i]]*march[q[i]]*march[r[i]];}console['log'](answer);};main(require('fs')['readFileSync']('/dev/stdin','utf8'));