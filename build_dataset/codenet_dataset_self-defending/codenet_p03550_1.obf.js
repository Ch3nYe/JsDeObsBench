function main(input){const _0x134418=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x1dbdb8=_0x134418(this,function(){return _0x1dbdb8['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x1dbdb8)['search']('(((.+)+)+)+$');});_0x1dbdb8();const lines=input['split']('\x0a');const NZW=lines['shift']()['split']('\x20')['map'](x=>parseInt(x));const N=NZW[0x0];const Z=NZW[0x1];const W=NZW[0x2];const A=lines['shift']()['split']('\x20')['map'](x=>parseInt(x));const initial=Math['abs'](Z-W);var fetch_n_1=Math['abs'](A[N-0x1]-A[N-0x2]);if(N<0x2){fetch_n_1=0x0;}const fetch_n=Math['abs'](A[N-0x1]-W);const result=Math['max'](initial,fetch_n_1,fetch_n);console['log'](result);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));