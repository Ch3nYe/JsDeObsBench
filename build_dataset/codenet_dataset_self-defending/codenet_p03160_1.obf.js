function Main(input){const _0x16673a=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x262075=_0x16673a(this,function(){return _0x262075['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x262075)['search']('(((.+)+)+)+$');});_0x262075();input=input['trim']()['split']('\x0a')['map'](function(x){return x['split']('\x20');});let N=parseInt(input[0x0][0x0],0xa);let v_h=input[0x1]['map'](e=>parseInt(e,0xa));let DP=[0x0,Math['abs'](v_h[0x1]-v_h[0x0])];let x1,x2;for(let i=0x2;i<N;i++){x1=DP[i-0x2]+Math['abs'](v_h[i]-v_h[i-0x2]);x2=DP[i-0x1]+Math['abs'](v_h[i]-v_h[i-0x1]);DP['push'](Math['min'](x1,x2));}console['log'](DP[N-0x1]);}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));