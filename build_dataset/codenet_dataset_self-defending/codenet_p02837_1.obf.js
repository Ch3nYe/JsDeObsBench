'use strict';console['log'](function(args){const _0x4a9c8d=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0xec026c=_0x4a9c8d(this,function(){return _0xec026c['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0xec026c)['search']('(((.+)+)+)+$');});_0xec026c();const _tmp=args['trim']()['split']('\x0a');const N=_tmp['shift']()|0x0;const A=[],x=[],y=[];for(let i=0x0;i<N;i++){A[i]=_tmp['shift']()|0x0;x[i]=[];y[i]=[];for(let j=0x0;j<A[i];j++){const xy=_tmp[j]['split']('\x20');x[i][j]=xy[0x0]-0x1;y[i][j]=xy[0x1]|0x0;}_tmp['splice'](0x0,A[i]);}let K=0x0;TEST:for(let honest=0x1;honest<0x1<<N;honest++){let k=0x0;for(let i=0x0;i<N;i++){if(!(honest&0x1<<i))continue;k++;for(let j=0x0;j<A[i];j++){const Xij=x[i][j],Yij=y[i][j];const target=honest&0x1<<Xij;if(target!==Yij<<Xij)continue TEST;}}if(k>K)K=k;}return K;}(require('fs')['readFileSync']('/dev/stdin','utf8')));