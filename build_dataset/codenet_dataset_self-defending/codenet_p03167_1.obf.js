function Main(input){const _0x56a15d=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x26e78c=_0x56a15d(this,function(){return _0x26e78c['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x26e78c)['search']('(((.+)+)+)+$');});_0x26e78c();input=input['trim']()['split']('\x0a')['map'](function(x){return x['split']('\x20');});let C=0x3b9aca00+0x7;let H=parseInt(input[0x0][0x0],0xa);let W=parseInt(input[0x0][0x1],0xa);let DP=[];for(let i=0x0;i<H;i++){DP['push'](Array['from']({'length':W},()=>0x0));}DP[0x0][0x0]=0x1;for(let i=0x1;i<H+W-0x1;i++){for(let j=0x0;j<=Math['min'](i,H-0x1);j++){if(input[j+0x1][0x0][i-j]==='#'||i-j>=W)continue;if(j>0x0&&i-j>0x0){DP[j][i-j]=(DP[j-0x1][i-j]+DP[j][i-j-0x1])%C;}else if(j>0x0){DP[j][i-j]=DP[j-0x1][i-j];}else{DP[j][i-j]=DP[j][i-j-0x1];}}}console['log'](DP['pop']()['pop']());}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));