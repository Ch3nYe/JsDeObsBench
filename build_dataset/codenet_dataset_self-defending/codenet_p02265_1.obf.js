const a0_0x42f733=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x68437d=a0_0x42f733(this,function(){return a0_0x68437d['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x68437d)['search']('(((.+)+)+)+$');});a0_0x68437d();const config={'input':'/dev/stdin','newline':'\x0a'};const line=require('fs')['readFileSync'](config['input'],'utf-8')['split'](config['newline']);const insert=(arr,x)=>arr['unshift'](x);const del=(arr,x)=>{for(var i=0x0;i<arr['length'];i++){if(x===arr[i])break;}if(i!==arr['length'])arr['splice'](i,0x1);};const delFirst=arr=>arr['shift']();const delLast=arr=>arr['pop']();const cmds=line['slice'](0x1);const ans=cmds['reduce']((acc,x)=>{const cmd=x['split']('\x20');switch(cmd[0x0]){case'insert':insert(acc,parseInt(cmd[0x1]));break;case'delete':del(acc,parseInt(cmd[0x1]));break;case'deleteFirst':delFirst(acc);break;case'deleteLast':delLast(acc);break;}return acc;},[])['map'](x=>x['toString']())['join']('\x20');console['log'](ans);