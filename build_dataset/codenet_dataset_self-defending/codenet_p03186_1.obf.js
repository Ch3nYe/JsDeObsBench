'use strict';function Main(input){const _0x2b1edd=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x3a9add=_0x2b1edd(this,function(){return _0x3a9add['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x3a9add)['search']('(((.+)+)+)+$');});_0x3a9add();input=input['trim']()['split']('\x20')['map'](Number);let badKusuri=input[0x0];let goodKusuri=input[0x1];let goodPoison=input[0x2];for(;goodKusuri>0x0&&goodPoison>0x0;){goodKusuri--;goodPoison--;}if(goodPoison==0x0){goodKusuri=0x0;}else{for(;badKusuri>0x0&&goodPoison>0x0;){badKusuri--;goodPoison--;}}if(goodPoison>0x0){goodPoison--;}console['log'](input[0x1]+input[0x2]-(goodKusuri+goodPoison));}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));