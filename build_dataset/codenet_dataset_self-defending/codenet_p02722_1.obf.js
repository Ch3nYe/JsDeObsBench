'use strict';function arrayOfDivisors(n){const divisor=new Array();divisor[0x0]=0x1;for(let i=0x2;i<=Math['sqrt'](n);i++){if(n%i===0x0){divisor['push'](i);}}const p=divisor['length'];if(Math['sqrt'](n)!==divisor[p-0x1]){divisor['push'](n/divisor[p-0x1]);}for(let i=p-0x2;0x0<=i;i--){divisor['push'](n/divisor[i]);}return divisor;}(function main(input){const _0x23ca69=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x2d0cba=_0x23ca69(this,function(){return _0x2d0cba['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x2d0cba)['search']('(((.+)+)+)+$');});_0x2d0cba();const n=Number(input['trim']());const subOnly=arrayOfDivisors(n-0x1)['length']-0x1;let divIncluded=0x0;const divOfN=arrayOfDivisors(n);divOfN['shift']();for(let d of divOfN){let n1=n;do{n1/=d;}while(n1%d===0x0);if(n1===0x1){divIncluded++;}else if(arrayOfDivisors(n1-0x1)['indexOf'](d)>-0x1){divIncluded++;}}console['log'](subOnly+divIncluded);}(require('fs')['readFileSync']('/dev/stdin','utf8')));