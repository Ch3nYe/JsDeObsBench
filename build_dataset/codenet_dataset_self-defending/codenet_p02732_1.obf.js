const a0_0x3b3b6f=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x4eb694=a0_0x3b3b6f(this,function(){return a0_0x4eb694['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x4eb694)['search']('(((.+)+)+)+$');});a0_0x4eb694();'use strict';const combi=function(n){return n*(n-0x1)/0x2;};const main=arg=>{const input=arg['trim']()['split']('\x0a');const N=parseInt(input[0x0]['split']('\x20')[0x0]);const A=input[0x1]['split']('\x20')['map'](n=>parseInt(n));let m={};for(let i=0x0;i<A['length'];i++){if(!m[A[i]])m[A[i]]=0x1;else m[A[i]]++;}let orgCnt=0x0;let keys=Object['keys'](m);for(let i=0x0;i<keys['length'];i++){orgCnt=orgCnt+combi(m[keys[i]]);}for(let i=0x0;i<A['length'];i++){let num=m[A[i]];const diff=combi(num)-combi(num-0x1);console['log'](orgCnt-diff);}};main(require('fs')['readFileSync']('/dev/stdin','utf8'));