function Main(input){const _0x1c2bae=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x2f4473=_0x1c2bae(this,function(){return _0x2f4473['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x2f4473)['search']('(((.+)+)+)+$');});_0x2f4473();'use strict';const temp=input['split']('\x0a');const n=parseInt(temp['shift'](),0xa);for(let i=0x0;i<n;i++){temp[i]=temp[i]['split']('\x20');temp[i]['push'](i+0x1);temp[i][0x1]=parseInt(temp[i][0x1],0xa);}temp['sort']((a,b)=>b[0x1]-a[0x1]);temp['sort']((a,b)=>{if(a[0x0]<b[0x0])return-0x1;else if(a[0x0]>b[0x0])return 0x1;else 0x0;});const ans=temp['map'](e=>e[0x2]);console['log'](ans['join']('\x0a'));return![];}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));