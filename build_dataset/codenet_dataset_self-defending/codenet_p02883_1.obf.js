function Main(input){var _0x38c3c0=(function(){var firstCall=!![];return function(context,fn){var rfn=firstCall?function(){if(fn){var res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());var _0xea92f7=_0x38c3c0(this,function(){return _0xea92f7['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0xea92f7)['search']('(((.+)+)+)+$');});_0xea92f7();input=input['split']('\x0a');if(input[input['length']-0x1]===''){input['pop']();}const N=input[0x0]['split']('\x20')[0x0]-0x0;const K=input[0x0]['split']('\x20')[0x1]-0x0;var A=input[0x1]['split']('\x20')['map'](e=>{return e-0x0;})['sort']((a,b)=>{return a-b;});var F=input[0x2]['split']('\x20')['map'](e=>{return e-0x0;})['sort']((a,b)=>{return b-a;});var possible=0x0;for(var i=0x0;i<N;i++){possible=Math['max'](possible,A[i]*F[i]);}var impossible=-0x1;var temp;var sum;while(possible-impossible>0x1){temp=Math['ceil']((impossible+possible)/0x2);sum=0x0;for(var i=0x0;i<N;i++){sum+=Math['max'](0x0,A[i]-Math['floor'](temp/F[i]));}if(sum<=K){possible=temp;}else{impossible=temp;}}console['log'](possible);}Main(require('fs')['readFileSync']('/dev/stdin','utf8'));