const a0_0xf1c3c2=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const a0_0x2cf362=a0_0xf1c3c2(this,function(){return a0_0x2cf362['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](a0_0x2cf362)['search']('(((.+)+)+)+$');});a0_0x2cf362();const input=require('fs')['readFileSync']('/dev/stdin','utf8');function pow(x,n){let res=0x1;while(n>0x0){if(n&0x1)res=mul(res,x);x=mul(x,x);n>>=0x1;}return res;}function inv(x){if(x==0x1)return 0x1;return pow(x,mod-0x2);}function mul(a,b){return((a>>0x10)*b%mod*0x10000+(a&0xffff)*b)%mod;}const mod=0x3b800001;(input=>{const lines=input['split']('\x0a');let [N,M,K]=lines[0x0]['split']('\x20')['map'](Number);let ans=0x0;let fa=0x1;let fa2=0x1;for(let k=0x0;k<=K;k++){fa=fa*(k||0x1)%mod;fa2=fa2*(k?N-k:0x1)%mod;let left=mul(fa2,inv(fa))%mod;ans+=mul(left,pow(M-0x1,N-(k+0x1)))*M%mod;}console['log'](ans%mod);})(input);