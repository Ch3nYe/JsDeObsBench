'use strict';function main(stdin){const _0x286212=(function(){let firstCall=!![];return function(context,fn){const rfn=firstCall?function(){if(fn){const res=fn['apply'](context,arguments);fn=null;return res;}}:function(){};firstCall=![];return rfn;};}());const _0x3b97eb=_0x286212(this,function(){return _0x3b97eb['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](_0x3b97eb)['search']('(((.+)+)+)+$');});_0x3b97eb();const input=stdin['split']('\x0a');const N=input['shift']()['split']('\x20')['map'](v=>parseInt(v,0xa))[0x0];const gates=input['map'](g=>g['split']('\x20')['map'](v=>parseInt(v,0xa)));const cards=new Array(N)['fill'](!![]);gates['forEach'](g=>{for(let i=0x0;i<g[0x0]-0x1;++i){cards[i]=![];}for(let i=g[0x1];i<N;++i){cards[i]=![];}});console['log'](cards['filter'](c=>c)['length']);}main(require('fs')['readFileSync']('/dev/stdin','utf8'));